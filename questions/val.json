[{"QuerySetId":1233,"Title":"Top 500 Askers on the site","Description":"A list of the top 500 askers of questions\nordered by average answer score excluding\ncommunity wiki \/ closed posts.\n","QueryBody":"SELECT * FROM (SELECT OwnerUserId AS \"User Link\", COUNT(Posts.Id) AS Questions, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Question Score\" FROM Posts WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY OwnerUserId ORDER BY COUNT(Posts.Id) DESC LIMIT 500) ORDER BY \"Average Question Score\" DESC","CreationDate":"2010-05-27 20:08:16","validated":true,"QueryBody_Original":"SELECT  * FROM (\nSELECT \n    TOP 500\n    OwnerUserId as [User Link],\n    Count(Posts.Id) AS Questions,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Question Score]\nFROM\n    Posts\nWHERE \n    PostTypeId = 1 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    OwnerUserId\nORDER BY\n    Count(Posts.Id) DESC\n)ORDER BY\n    [Average Question Score] DESC"},{"QuerySetId":1704,"Title":"Up vs Down votes by hour of day","Description":"Doesn't currently work, but that's just because the data isn't currently there.","QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%-HOUR') AS Hour, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) \/* Count(*) AS Amount, *\/ \/* SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, *\/ \/* SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, *\/ AS UpVoteDownVoteRatio FROM Votes AS v JOIN Posts AS p ON p.Id = PostId WHERE p.Score >= 0 GROUP BY TIME_TO_STR(p.CreationDate, '%-HOUR') ORDER BY TIME_TO_STR(p.CreationDate, '%-HOUR')","CreationDate":"2020-06-16 4:01:50","validated":true,"QueryBody_Original":"SELECT \n    DATEPART(HOUR, p.CreationDate) AS Hour,\n    --Count(*) AS Amount,\n    --SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    --SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float)) AS UpVoteDownVoteRatio\nFROM\n    Votes v\n    join Posts p on p.Id = PostId \nwhere p.Score >= 0\nGROUP BY\n    DATEPART(HOUR, p.CreationDate)\nORDER BY\n    DATEPART(HOUR, p.CreationDate)"},{"QuerySetId":2304,"Title":"Posts containing tr.im shortened URLs","Description":"Posts containing tr.im shortened URLs, which will cease to work at the end of 2010;\nSee http:\/\/meta.stackoverflow.com\/questions\/29518\/can-and-should-stack-overflow-automatically-rewrite-bit-ly-links\nSee http:\/\/stackapps.com\/questions\/121\/what-ideas-do-you-have-for-the-api\/546#546\n","QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE Body LIKE '%http:\/\/tr.im%'","CreationDate":"2010-06-05 16:34:19","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], Body\nfrom Posts \nwhere Body like '%http:\/\/tr.im%'"},{"QuerySetId":3557,"Title":"How many questions and answers exist in the Database?\n","Description":"How many questions and answers exist in the Database?\n","QueryBody":"SELECT (SELECT COUNT(*) FROM posts WHERE PostTypeId = 1) AS questions, (SELECT COUNT(*) FROM posts WHERE PostTypeId = 2) AS answers","CreationDate":"2010-06-15 4:07:28","validated":true,"QueryBody_Original":"SELECT  (SELECT count(*) from posts where PostTypeId=1) as questions, \n(SELECT count(*) from posts where PostTypeId=2) as answers"},{"QuerySetId":6029,"Title":"Displays number of questions with high answer count.","Description":"Anything with over 30 answers will not fit on a single page and could benefit from an \"in question search\" button\n","QueryBody":"SELECT AnswerCount, COUNT(*) AS Questions, SUM(ViewCount) AS \"Aggregate Total Views\", MAX(id) AS \"Post Link\" FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL GROUP BY AnswerCount ORDER BY AnswerCount DESC","CreationDate":"2010-07-03 2:42:09","validated":true,"QueryBody_Original":"select AnswerCount, count(*) as Questions, sum(ViewCount) as [Aggregate Total Views], max(id) as [Post Link] from Posts where PostTypeId=1 and ClosedDate is null group by AnswerCount order by AnswerCount desc"},{"QuerySetId":8383,"Title":"Answer and Question Up and Down Votes","Description":"Find the total number of question and answer up and down votes on SO.","QueryBody":"SELECT (CASE WHEN p.posttypeid = 1 THEN 'Question' WHEN p.posttypeid = 2 THEN 'Answer' END) AS \"Post Type\", (CASE WHEN v.votetypeid = 2 THEN 'Up Vote' WHEN v.votetypeid = 3 THEN 'Down Vote' END) AS \"Vote Type\", COUNT(*) AS Votes FROM votes AS v JOIN posts AS p ON v.postid = p.id WHERE v.votetypeid IN (2, 3) GROUP BY p.posttypeid, v.votetypeid","CreationDate":"2010-07-28 2:42:47","validated":true,"QueryBody_Original":"SELECT \n (case \n  when p.posttypeid = 1 then 'Question'\n  when p.posttypeid = 2 then 'Answer'\nend) as [Post Type],\n(case\n  when v.votetypeid = 2 then 'Up Vote'\n  when v.votetypeid = 3 then 'Down Vote'\nend) as [Vote Type], \ncount(*) As Votes\nfrom votes v join posts p on v.postid = p.id\nwhere v.votetypeid in (2,3)\ngroup by p.posttypeid, v.votetypeid"},{"QuerySetId":12878,"Title":"Celebrities from Ukraine (top 500 users ordered by profile views to rep points)","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY \"Views to Rep\" DESC) AS \"#\", * FROM (SELECT u.Id AS \"User Link\", u.Views, u.Reputation, 1. * u.Views \/ u.Reputation AS \"Views to Rep\" FROM Users AS u WHERE u.Location LIKE '%Ukraine%') AS q ORDER BY \"Views to Rep\" DESC LIMIT 500","CreationDate":"2017-08-27 20:05:18","validated":true,"QueryBody_Original":"SELECT   TOP 500\n        ROW_NUMBER() OVER (ORDER BY [Views to Rep] DESC) AS [#], *\nFROM    (\n        SELECT  u.Id AS [User Link], u.Views, u.Reputation, 1. * u.Views \/ u.Reputation AS [Views to Rep]\n        FROM    Users u\n        WHERE  u.Location LIKE '%Ukraine%'\n        ) q\nORDER BY\n        [Views to Rep] DESC"},{"QuerySetId":13033,"Title":"Posts with Score of More Than 500 and with Answers Accepted by Originators","Description":"Enter Query Description\n","QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p, Votes AS v WHERE v.PostId = p.Id AND v.VoteTypeId = 1 AND p.Score > 500 ORDER BY p.Score DESC","CreationDate":"2010-10-20 8:00:07","validated":true,"QueryBody_Original":"select p.Id as [Post Link] from Posts p, Votes v \nwhere v.PostId = p.Id \n  and v.VoteTypeId = 1\n  and p.Score > 500\norder by p.Score desc"},{"QuerySetId":16529,"Title":"For a particular tag get the Avg and StDev of score - suspicious scores are likely to have * BOTH HIGH AVERAGE AND LOW STD DEV * of score (e.g. they routinely upvote each of their own posts x times). To filter out noise look for > 10 posts and high average as persistent cheaters are likely to be... persistent!","Description":"Helps find people benefiting from sock puppet or \"Admirer\" upvotes.\nFor a particular tag get the Avg and StDev of score - suspicious scores\nare likely to have * BOTH HIGH AVERAGE AND LOW STD DEV * of\nscore (e.g. they routinely upvote each of their own posts x times).\nTo filter out noise look for > 10 posts and high average\nas persistent cheaters are likely to be... persistent!\n*** NOT AN ABSOLUTE TEST *** - human needs to read some posts and verify.\n","QueryBody":"SELECT owneruserid, COUNT(Posts.Id) AS NumPosts, SUM(Posts.Score) AS SumScore, AVG(CAST(Posts.Score AS FLOAT)) AS AvgScore, STDEV(Posts.Score) AS StdDevScore, AVG(CAST(Posts.Score AS FLOAT)) - STDEV(Posts.Score) AS \"Avg-StDev\" FROM Posts WHERE posts.owneruserid IN (3123370, 3605516, 3915549, 4831567) AND posttypeid = 2 GROUP BY owneruserid","CreationDate":"2015-09-12 16:41:53","validated":true,"QueryBody_Original":"SELECT \n  owneruserid,\n \n   COUNT(Posts.Id) As NumPosts,\n   SUM(Posts.Score) As SumScore,\n   AVG(CAST(Posts.Score as FLOAT)) As AvgScore,\n   STDEV(Posts.Score) As StdDevScore,\nAVG(CAST(Posts.Score as FLOAT)) - STDEV(Posts.Score) As [Avg-StDev]\nFROM Posts\nwhere posts.owneruserid in (3123370,3605516,3915549,4831567)\nand posttypeid=2\ngroup by owneruserid"},{"QuerySetId":26209,"Title":"answers for a tag that have been awarded bounties, most recent answers first.","Description":"Shows answers for a tag that have been awarded bounties, most recent answers first.\n","QueryBody":"SELECT post.Id AS \"Post Link\", vote.BountyAmount AS Bounty, post.CreationDate AS Date, parent.Tags FROM Posts AS post JOIN Votes AS vote ON vote.PostId = post.Id JOIN Posts AS parent ON post.ParentId = parent.Id WHERE vote.VoteTypeId = 9 AND vote.BountyAmount <> 0 AND parent.Tags LIKE '%<##Tag##>%' ORDER BY post.CreationDate DESC","CreationDate":"2011-02-05 20:26:35","validated":true,"QueryBody_Original":"SELECT  post.Id AS [Post Link], \n       vote.BountyAmount AS Bounty,\n       post.CreationDate AS Date,\n       parent.Tags\nFROM Posts post\n     JOIN Votes vote ON vote.PostId = post.Id\n     JOIN Posts parent ON post.ParentId = parent.Id\nWHERE     \n      vote.VoteTypeId = 9  AND\n      vote.BountyAmount <> 0 AND \n      parent.Tags LIKE '%<##Tag##>%'            \nORDER BY post.CreationDate DESC"},{"QuerySetId":26447,"Title":"Questions with a last activity date over a year ago, score < 1, low views, no answers, and comments that were posted after the last activity date of the OP\n","Description":"Questions with a last activity date over a year ago, score <= 0, low views, no answers, and comments that were posted after the last activity date of the OP\n","QueryBody":"SELECT p.Score, p.Id AS \"Post Link\", p.ViewCount, p.CommentCount, c.CreationDate, u.LastAccessDate, c.Text, DATEDIFF(GETUTCDATE(), p.CreationDate) AS DaysOld FROM Posts AS p JOIN Comments AS c ON c.PostId = p.Id JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 AND p.ViewCount < DATEDIFF(GETUTCDATE(), p.CreationDate) * 1.5 AND p.Score < 1 AND COALESCE(p.AnswerCount, 0) = 0 AND DATEDIFF(GETUTCDATE(), p.CreationDate) > 365 AND c.CreationDate > u.LastAccessDate ORDER BY p.Score, p.ViewCount LIMIT 20000","CreationDate":"2011-02-07 16:43:42","validated":true,"QueryBody_Original":"SELECT TOP 20000\np.Score, p.Id AS [Post Link], p.ViewCount, p.CommentCount, c.CreationDate, u.LastAccessDate, c.Text, DATEDIFF(day, p.CreationDate, GETUTCDATE()) as DaysOld\nFROM Posts p\nJOIN Comments c ON c.PostId = p.Id\nJOIN Users u ON p.OwnerUserId = u.Id\nWHERE \np.PostTypeId = 1 AND \np.ViewCount < DATEDIFF(day, p.CreationDate, GETUTCDATE()) * 1.5 AND \np.Score < 1 AND \nISNULL(p.AnswerCount,0) = 0 AND\nDATEDIFF(day, p.CreationDate, GETUTCDATE()) > 365\nAND c.CreationDate > u.LastAccessDate\nORDER BY p.Score, p.ViewCount"},{"QuerySetId":27379,"Title":"Most 20 active users (total actions - posting, commenting and voting)","Description":"Users who spend A LOT of time posting, editing, commenting and voting.\n","QueryBody":"SELECT UserId AS \"User Link\", SUM(c) AS s FROM (SELECT UserId, COUNT(*) AS c FROM PostHistory WHERE UserId > 0 GROUP BY UserId UNION ALL SELECT UserId, COUNT(*) AS c FROM Comments WHERE UserId > 0 GROUP BY UserId UNION ALL SELECT UserId, COUNT(*) AS c FROM Votes WHERE UserId > 0 GROUP BY UserId) AS Actions GROUP BY UserId ORDER BY s DESC LIMIT 20","CreationDate":"2011-02-13 21:57:49","validated":true,"QueryBody_Original":"SELECT  TOP 20 UserId AS [User Link], SUM(c) as s\nFROM (\n    SELECT UserId, count(*) AS c\n    FROM PostHistory\n    WHERE UserId > 0\n    GROUP BY UserId\n    UNION ALL\n    SELECT UserId, count(*) AS c\n    FROM Comments\n    WHERE UserId > 0\n    GROUP BY UserId\n    UNION ALL\n    SELECT UserId, count(*) AS c\n    FROM Votes\n    WHERE UserId > 0\n    GROUP BY UserId\n) Actions\nGROUP BY UserId\nORDER BY s DESC"},{"QuerySetId":28012,"Title":"Number of questions that would be automatically protected","Description":"Enter Query Description\n","QueryBody":"SELECT COUNT(ID) FROM posts AS q WHERE posttypeid = 1 AND DATEDIFF(CURRENT_TIMESTAMP(), q.creationdate) >= 6 AND answercount >= 1 AND viewcount >= 1000","CreationDate":"2011-02-18 23:41:30","validated":true,"QueryBody_Original":"SELECT  count(ID) from posts q\n\nwhere posttypeid=1 and datediff(m, q.creationdate, getdate()) >= 6 and answercount >= 1 and viewcount >= 1000"},{"QuerySetId":29657,"Title":"Average score of questions by user (with min question filter)","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS \"Number of Questions\", AVG(Score) AS \"Average Score\" FROM Posts WHERE Posts.PostTypeId = 1 GROUP BY OwnerUserId HAVING COUNT(*) >= 10 ORDER BY \"Average Score\" DESC","CreationDate":"2011-03-11 3:03:43","validated":true,"QueryBody_Original":"SELECT  OwnerUserId AS [User Link], COUNT(*) AS [Number of Questions], AVG(Score) AS [Average Score]\nFROM Posts\nWHERE Posts.PostTypeId = 1\nGROUP BY OwnerUserId\nHAVING COUNT(*) >= 10\nORDER BY [Average Score] DESC;"},{"QuerySetId":31062,"Title":"Bounty award \/\/ disconnect from acceptance \/\/ rep handling","Description":null,"QueryBody":"SELECT p.owneruserid, v.*, CASE votetypeid WHEN 1 THEN 15 END AS accepted, CASE votetypeid WHEN 8 THEN -bountyamount WHEN 9 THEN bountyamount END AS bounty, CASE votetypeid WHEN 2 THEN 10 WHEN 3 THEN -2 ELSE 0 END AS rep FROM votes AS v INNER JOIN posts AS p ON p.id = v.postid INNER JOIN users AS u ON u.id = p.owneruserid WHERE v.votetypeid IN (1, 2, 3, 8, 9) AND p.communityowneddate IS NULL ORDER BY p.owneruserid, v.id","CreationDate":"2011-03-29 14:05:49","validated":true,"QueryBody_Original":"SELECT \n  p.owneruserid,\n  v.*,\n  case votetypeid\n      when 1 then 15\n      end accepted,\n  case votetypeid\n      when 8 then -bountyamount\n      when 9 then bountyamount\n      end bounty,\n  case votetypeid\n      when 2 then 10\n      when 3 then -2\n      else 0\n      end rep\nfrom votes v\ninner join posts p on p.id = v.postid\ninner join users u on u.id = p.owneruserid\nwhere v.votetypeid in (1,2,3,8,9)\n  and p.communityowneddate is null\norder by p.owneruserid, v.id"},{"QuerySetId":31346,"Title":"Top 500 users from the Netherlands","Description":"Lists the top 500 users (ranked by reputation) that are located in the Netherlands based on their profile info\n","QueryBody":"SELECT RANK() OVER (ORDER BY Reputation DESC) AS \"Rank\", Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Netherlands%' OR Location LIKE N'%Holland%' OR Location LIKE N'%Amsterdam%' OR (Location LIKE N'%NL%' AND NOT Location LIKE N'%finland%') ORDER BY reputation DESC LIMIT 500","CreationDate":"2011-04-01 13:32:44","validated":true,"QueryBody_Original":"SELECT  TOP 500\n   RANK() OVER \n   (ORDER BY Reputation DESC) AS 'Rank',\n   Id as [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Netherlands%' OR\n   Location like N'%Holland%' OR\n   Location like N'%Amsterdam%' OR\n   (Location like N'%NL%' AND Location not like N'%finland%')\nORDER BY\n   reputation DESC"},{"QuerySetId":31930,"Title":"The average score across all questions","Description":null,"QueryBody":"SELECT AVG(CAST(p.Score AS FLOAT)) FROM Posts AS p WHERE p.PostTypeId = 1","CreationDate":"2011-04-07 3:29:10","validated":true,"QueryBody_Original":"SELECT \n    AVG( CAST( p.Score AS FLOAT ) )\nfrom\n    Posts p\nwhere\n    p.PostTypeId = 1"},{"QuerySetId":34064,"Title":"Find YouTube Videos in answers","Description":"Lists all answers which are containing a link against YouTube-Videos.","QueryBody":"SELECT Score AS \"Score\", Id AS \"Post Link\" FROM Posts WHERE PostTypeId = 2 AND (Body LIKE '%http:\/\/www.youtube.com\/watch%' OR Body LIKE '%http:\/\/www.youtube.com\/v\/%') ORDER BY Score DESC","CreationDate":"2011-05-03 14:53:23","validated":true,"QueryBody_Original":"SELECT \n  Score AS \"Score\",\n  Id AS [Post Link]\nFROM\n  Posts\nWHERE\n  PostTypeId = 2 AND\n  (Body LIKE '%http:\/\/www.youtube.com\/watch%' OR\n  Body Like '%http:\/\/www.youtube.com\/v\/%')\nORDER BY\n  Score DESC"},{"QuerySetId":34723,"Title":"The distribution of scores on questions, by answer count\n","Description":"The distribution of scores on questions, by answer count\n","QueryBody":"SELECT AnswerCount AS \"Answers\", COUNT(*) AS \"#Questions\", ROUND(100.0 * COUNT(CASE WHEN Score < 0 THEN 1 END) \/ COUNT(*), 2) AS \"% score<0\", ROUND(100.0 * COUNT(CASE WHEN Score = 0 THEN 1 END) \/ COUNT(*), 1) AS \"% score=0\", ROUND(100.0 * COUNT(CASE WHEN Score = 1 THEN 1 END) \/ COUNT(*), 1) AS \"% score=1\", ROUND(100.0 * COUNT(CASE WHEN Score = 2 THEN 1 END) \/ COUNT(*), 1) AS \"% score=2\", ROUND(100.0 * COUNT(CASE WHEN Score = 3 THEN 1 END) \/ COUNT(*), 1) AS \"% score=3\", ROUND(100.0 * COUNT(CASE WHEN Score > 3 THEN 1 END) \/ COUNT(*), 1) AS \"% score>3\" FROM Posts WHERE PostTypeId = 1 AND AnswerCount >= 0 GROUP BY AnswerCount ORDER BY AnswerCount","CreationDate":"2011-05-09 3:29:38","validated":true,"QueryBody_Original":"SELECT  \n    AnswerCount As [Answers],\n    Count(*) AS [#Questions],\n    Round(100.0 * Count(CASE WHEN Score < 0 THEN 1 END) \/ Count(*), 2) AS [% score<0],\n    Round(100.0 * Count(CASE WHEN Score = 0 THEN 1 END) \/ Count(*), 1) AS [% score=0],\n    Round(100.0 * Count(CASE WHEN Score = 1 THEN 1 END) \/ Count(*), 1) AS [% score=1],\n    Round(100.0 * Count(CASE WHEN Score = 2 THEN 1 END) \/ Count(*), 1) AS [% score=2],\n    Round(100.0 * Count(CASE WHEN Score = 3 THEN 1 END) \/ Count(*), 1) AS [% score=3],\n    Round(100.0 * Count(CASE WHEN Score > 3 THEN 1 END) \/ Count(*), 1) AS [% score>3]\nFROM Posts\nWHERE PostTypeId = 1 AND AnswerCount >= 0\nGROUP BY AnswerCount\nORDER BY AnswerCount"},{"QuerySetId":35545,"Title":"Top 50000 Users by Reputation Per Day","Description":"The top 100 users based on the amount of reputation they have earnt per day\n","QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) AS DaysActive, (Reputation \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS RepPerDay FROM Users WHERE DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) > 0 ORDER BY RepPerDay DESC LIMIT 50000","CreationDate":"2020-06-12 15:01:52","validated":true,"QueryBody_Original":"SELECT  TOP 50000\n       Id as [User Link],\n       DisplayName, \n       Reputation, \n       DATEDIFF(dd, CreationDate, getdate()) as DaysActive, \n       (Reputation \/ DATEDIFF(dd, CreationDate, getdate())) as RepPerDay \nFROM Users\nWHERE DATEDIFF(dd, CreationDate, getdate()) > 0\nORDER BY RepPerDay DESC"},{"QuerySetId":36166,"Title":"Who has the most Community Wiki posts?","Description":"Dirty query to find out who's the most community minded :)","QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(OwnerUserId) AS num FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE NOT CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND NOT OwnerUserId IS NULL GROUP BY Users.Id ORDER BY num DESC","CreationDate":"2011-05-27 17:27:23","validated":true,"QueryBody_Original":"SELECT  \n    Users.Id as [User Link],\n    COUNT(OwnerUserId) as num\nFROM Posts\n\nINNER JOIN\n    Users ON Users.Id = OwnerUserId\n\nWHERE\n    CommunityOwnedDate is not null and\n    ClosedDate is null and\n    OwnerUserId is not null\n\nGROUP BY Users.Id\n\nORDER BY\n    num desc"},{"QuerySetId":36495,"Title":"Migrated and Closed - Turnaround Time\/counts","Description":"Turnaround time & number of questions in group for Questions that are migrated between different sites and subsequently closed at their destination\n","QueryBody":"SELECT turnaround AS turnaround_hours, COUNT(turnaround) AS qty FROM (SELECT DATEDIFF(p.closeddate, ph.CreationDate) AS Turnaround FROM Posts AS p INNER JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE ph.PostHistoryTypeId = 17 AND NOT ClosedDate IS NULL) AS T GROUP BY turnaround","CreationDate":"2011-06-02 0:23:08","validated":true,"QueryBody_Original":"SELECT  turnaround AS turnaround_hours, count(turnaround) as qty FROM (\n   SELECT datediff(hh, ph.CreationDate, p.closeddate) as Turnaround\n      FROM Posts p\n      INNER JOIN PostHistory ph ON ph.PostId = p.Id\n                 WHERE ph.PostHistoryTypeId = 17 AND ClosedDate IS NOT NULL\n) T GROUP BY turnaround"},{"QuerySetId":36539,"Title":"What users have visited asking or answering only once posting links?","Description":"Helps identify H&R's, possibly spammers?\n","QueryBody":"SELECT OwnerUserId AS \"User Link\", Score, Id AS \"Post Link\" FROM Posts WHERE OwnerUserId IN (SELECT OwnerUserId FROM Posts GROUP BY OwnerUserId HAVING COUNT(*) = 1) AND PostTypeId = 2 AND Score <= 0 AND Body LIKE '%http%' ORDER BY Score LIMIT 2500","CreationDate":"2011-06-02 6:44:41","validated":true,"QueryBody_Original":"SELECT  TOP 2500\n    OwnerUserId AS [User Link],\n    Score,\n    Id AS [Post Link]\nFROM\n    Posts\nWHERE\n    OwnerUserId IN (SELECT OwnerUserId\n                    FROM Posts\n                    GROUP BY OwnerUserId\n                    HAVING COUNT(*) = 1)\nAND\n    PostTypeId = 2\nAND\n    Score <= 0\nAND\n    Body LIKE '%http%'\nORDER BY\n    Score ASC"},{"QuerySetId":36939,"Title":"Orphan questions that were migrated from another site and may be self-answered","Description":"Questions that were migrated and have no owner,\nand that have an answer from a registered user with the same name.\n","QueryBody":"SELECT q.Id AS \"Post Link\", q.CreationDate AS \"Date\", q.OwnerDisplayName AS \"User name\", a.OwnerUserId AS \"User Link\", ph.Comment AS \"Comment\" FROM Posts AS q INNER JOIN PostHistory AS ph ON ph.PostId = q.Id INNER JOIN Posts AS a ON a.ParentId = q.Id AND a.OwnerDisplayName = q.OwnerDisplayName WHERE ph.PostHistoryTypeId = 17 AND q.PostTypeId = 1 AND q.OwnerUserId IS NULL AND NOT a.OwnerUserId IS NULL ORDER BY q.Id DESC LIMIT 1000","CreationDate":"2011-06-06 2:39:49","validated":true,"QueryBody_Original":"SELECT TOP 1000\n  q.Id As [Post Link],\n  q.CreationDate As [Date],\n  q.OwnerDisplayName As [User name],\n  a.OwnerUserId As [User Link],\n  ph.Comment As [Comment]\nFROM Posts q\nINNER JOIN PostHistory ph ON ph.PostId = q.Id\nINNER JOIN Posts a ON a.ParentId = q.Id AND a.OwnerDisplayName = q.OwnerDisplayName\nWHERE ph.PostHistoryTypeId = 17\n  AND q.PostTypeId = 1\n  AND q.OwnerUserId IS NULL\n  AND a.OwnerUserId IS NOT NULL\nORDER BY q.Id DESC"},{"QuerySetId":42260,"Title":"This retrieves all questions (and questions only) with a\nvery short amount of characters (less then 30 in total).\n","Description":"This retrieves all questions (and questions only) with a\nvery short amount of characters (less then 30 in total).\n","QueryBody":"SELECT Id AS \"Post Link\", REPLACE(REPLACE(Body, '<p>', ' '), '<\/p>', '') AS \"Question Body\", Score AS \"Total Score\" FROM Posts WHERE ((PostTypeID = 1) AND (LENGTH(Body) < 30))","CreationDate":"2011-07-27 21:08:34","validated":true,"QueryBody_Original":"SELECT Id                                             AS [Post Link],\n       Replace(Replace(Body, '<p>', ' '), '<\/p>', '') AS [Question Body],\n       Score                                          As [Total Score]\nFROM   Posts    \nWHERE  ( (PostTypeID = 1) And (Len(Body) < 30) )"},{"QuerySetId":42433,"Title":"Answers by Time of Day","Description":"Designed to consider whether \"night\" questions have more visibility than \"day\" questions\n","QueryBody":"SELECT TIME_TO_STR(Posts.CreationDate, '%h') AS Hour, COUNT(Posts.Id) AS Questions FROM Posts WHERE PostTypeid = 2 \/* 2 = answer *\/ GROUP BY TIME_TO_STR(Posts.CreationDate, '%h') ORDER BY TIME_TO_STR(Posts.CreationDate, '%h')","CreationDate":"2015-02-08 22:34:47","validated":true,"QueryBody_Original":"SELECT  datepart(hour, Posts.CreationDate) Hour, count(Posts.Id) Questions\n  from Posts\n  where PostTypeid = 2 -- 2 = answer\n  group by datepart(hour, Posts.CreationDate)\n  order by datepart(hour, Posts.CreationDate)\n--order by count(posts.id) desc"},{"QuerySetId":44963,"Title":"Finds questions that have one of their tags in front of the title, seperated by hyphen or colon.  This query is case sensitive.\n","Description":"Finds questions that have one of their tags in front of the title, seperated by hyphen or colon.  This query is case sensitive.\n","QueryBody":"SELECT p.id AS \"Post Link\", p.tags AS Tags, p.CreationDate AS CDate FROM Posts AS p WHERE p.Title LIKE '##Tag##[, ][:,-]%' AND p.Tags LIKE '%<' + LOWER('##Tag##') + '>%' ORDER BY p.CreationDate DESC","CreationDate":"2014-06-21 0:30:55","validated":true,"QueryBody_Original":"SELECT  p.id as [Post Link], p.tags as Tags, p.CreationDate as CDate\nFrom Posts p\nWhere p.Title Like '##Tag##[, ][:,-]%' \n  And p.Tags Like '%<' + LOWER('##Tag##') + '>%'\nOrder By p.CreationDate DESC;"},{"QuerySetId":45713,"Title":"Calculate the average percent of each user's questions that have been accepted, excluding those with 0% accept rate.\n","Description":"Calculate the average percent of each user's questions that have been accepted, excluding those with 0% accept rate.\n","QueryBody":"SELECT AVG(ROUND(t.Accepted * 100.0 \/ t.Total, 1)) AS \"Percent\", STDEVP(ROUND(t.Accepted * 100.0 \/ t.Total, 1)) AS \"std dev\" FROM (SELECT COUNT(a.Id) AS \"Total\", SUM(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) AS \"Accepted\" FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE q.postTypeId = 1 AND a.postTypeId = 2 AND a.OwnerUserId <> q.OwnerUserId GROUP BY a.OwnerUserId) AS t WHERE t.\"Accepted\" > 0","CreationDate":"2011-08-31 15:20:05","validated":true,"QueryBody_Original":"SELECT \n    AVG(Round(t.Accepted * 100.0 \/ t.Total, 1)) AS [Percent],\n    STDEVP(Round(t.Accepted * 100.0 \/ t.Total, 1)) AS [std dev]\n  FROM\n    (SELECT\n         Count(a.Id) AS [Total],\n         Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) AS [Accepted]\n       FROM Posts AS a\n         JOIN Posts AS q\n           ON a.ParentId = q.Id\n       WHERE q.postTypeId = 1 AND a.postTypeId = 2 AND a.OwnerUserId <> q.OwnerUserId\n       GROUP BY a.OwnerUserId\n   ) AS t \n  WHERE t.[Accepted] > 0"},{"QuerySetId":47154,"Title":"Top 1000 people that use their name in their post.","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.Body LIKE '%' + u.DisplayName + '%' ORDER BY p.ViewCount DESC LIMIT 1000","CreationDate":"2012-03-10 22:32:02","validated":true,"QueryBody_Original":"SELECT  TOP 1000 p.Id AS [Post Link] FROM Posts p JOIN Users u ON p.OwnerUserId = u.Id WHERE p.Body LIKE '%' + u.DisplayName + '%' ORDER BY p.ViewCount DESC"},{"QuerySetId":49042,"Title":"People with <text> in their About Me","Description":"Quickly search and see who's got what in their About Me section. Use % for wildcard.\n","QueryBody":"SELECT Id AS \"User Link\", location, reputation FROM users WHERE aboutme LIKE '%##SearchText##%' ORDER BY reputation DESC","CreationDate":"2011-10-05 3:14:04","validated":true,"QueryBody_Original":"select Id as [User Link], location, reputation from users where aboutme like '%##SearchText##%' order by reputation desc"},{"QuerySetId":50588,"Title":"Minimum, Maximum, and Average Number of Answers Per Post","Description":"The minimum, maximum, and average number of answers per post on Stack Overflow.\n","QueryBody":"SELECT MIN(Posts.AnswerCount) AS \"Minimum # of Answers\", AVG(CAST(Posts.AnswerCount AS FLOAT)) AS \"Average # of Answers\", MAX(Posts.AnswerCount) AS \"Maximum # of Answers\" FROM Posts WHERE Posts.PostTypeId = 1","CreationDate":"2020-04-23 12:16:57","validated":true,"QueryBody_Original":"SELECT  \n  min(Posts.AnswerCount) as [Minimum # of Answers],\n  avg(cast(Posts.AnswerCount as decimal)) as [Average # of Answers],\n  max(Posts.AnswerCount) as [Maximum # of Answers]\nfrom Posts\nwhere Posts.PostTypeId=1"},{"QuerySetId":51239,"Title":"Find the magical ping markup","Description":"This query will find instances of the @user auto-link functionality that once existed.\n","QueryBody":"SELECT Id AS \"Post Link\", LastEditDate, CreationDate FROM Posts WHERE PostTypeId = 2 AND Body LIKE '<p>@<a href=\"#%' ORDER BY LastEditDate DESC, CreationDate DESC","CreationDate":"2011-11-03 19:09:39","validated":true,"QueryBody_Original":"SELECT \n  Id as [Post Link],\n  LastEditDate,\n  CreationDate\nFROM Posts\nWHERE\n  PostTypeId = 2\n  AND Body LIKE '<p>@<a href=\"#%'\nORDER BY\n  LastEditDate DESC,\n  CreationDate DESC"},{"QuerySetId":51680,"Title":"Questions that have an answer of jQuery ready","Description":"All of the questions that have the same answer of using jQuery ready to solve the issue\n","QueryBody":"SELECT a.Id AS \"Post Link\", COUNT(a.Id) AS \"Number Answers\" FROM Posts AS a, Posts AS b WHERE a.posttypeid = 1 AND b.posttypeid = 2 AND (b.Body LIKE '%$(document).ready()%' OR b.Body LIKE '%dom ready%') AND a.Tags LIKE '%<jquery>%' AND a.id = b.parentid GROUP BY a.id \/* Group by question (only one row per question) *\/ \/* Group by question (only one row per question) *\/ \/* Group by question (only one row per question) *\/ \/* Group by question (only one row per question) *\/","CreationDate":"2011-11-08 21:14:03","validated":true,"QueryBody_Original":"SELECT  a.Id AS [Post Link], count(a.Id) as 'Number Answers'\nFROM Posts a, Posts b\nWHERE  a.posttypeid = 1 AND b.posttypeid = 2 \n AND  (b.Body LIKE '%$(document).ready()%' OR b.Body LIKE '%dom ready%')\n AND  a.Tags LIKE '%<jquery>%'\n AND  a.id = b.parentid\nGROUP BY a.id -- Group by question (only one row per question)"},{"QuerySetId":54259,"Title":"Amount of Posts per Post Length","Description":null,"QueryBody":"SELECT FLOOR(LENGTH(Body) \/ 500) * 500 AS \"Post Length\", COUNT(Id) AS \"Amount of Posts\" FROM Posts WHERE PostTypeId = 2 GROUP BY FLOOR(LENGTH(Body) \/ 500) * 500 ORDER BY \"Amount of Posts\" DESC","CreationDate":"2011-11-30 0:49:19","validated":true,"QueryBody_Original":"SELECT \n  FLOOR(LEN(Body)\/500) * 500 AS [Post Length],\n  COUNT(Id) AS [Amount of Posts]\nFROM\n  Posts\nWHERE\n  PostTypeId = 2\nGROUP BY\n  FLOOR(LEN(Body)\/500) * 500\nORDER BY [Amount of Posts] DESC"},{"QuerySetId":54951,"Title":"Closed Questions with -2 score or less.","Description":null,"QueryBody":"SELECT q.Score AS Score, q.Id AS \"Post Link\", CASE h.Comment WHEN '1' THEN 'Exact Duplicate' WHEN '2' THEN 'Off-topic' WHEN '3' THEN 'Subjective and argumentative' WHEN '4' THEN 'Not a real question' WHEN '7' THEN 'Too localized' WHEN '10' THEN 'General reference' WHEN '20' THEN 'Noise or pointless (Meta sites only)' WHEN '101' THEN 'Duplicate' WHEN '102' THEN 'Off-topic' WHEN '103' THEN 'Unclear what you''re asking' WHEN '104' THEN 'Too broad' WHEN '105' THEN 'Primarily opinion-based' END AS \"Close Reason\", q.ClosedDate FROM Posts AS q INNER JOIN PostHistory AS h ON q.Id = h.PostId WHERE q.Score < -2 AND NOT q.ClosedDate IS NULL ORDER BY q.Score DESC","CreationDate":"2014-02-01 2:46:48","validated":true,"QueryBody_Original":"SELECT   \n  q.Score AS Score,\n  q.Id AS [Post Link],\n  CASE h.Comment\n    WHEN '1' THEN 'Exact Duplicate'\n    WHEN '2' THEN 'Off-topic'\n    WHEN '3' THEN 'Subjective and argumentative'\n    WHEN '4' THEN 'Not a real question'\n    WHEN '7' THEN 'Too localized'\n    WHEN '10' THEN 'General reference'\n    WHEN '20' THEN 'Noise or pointless (Meta sites only)'\n    WHEN '101' THEN 'Duplicate'\n    WHEN '102' THEN 'Off-topic'\n    WHEN '103' THEN 'Unclear what you''re asking'\n    WHEN '104' THEN 'Too broad'\n    WHEN '105' THEN 'Primarily opinion-based'\n  END AS [Close Reason],\n  q.ClosedDate\nFROM Posts q\nINNER JOIN PostHistory h ON q.Id = h.PostId\nWHERE q.Score < -2\n  AND q.ClosedDate IS NOT NULL\nORDER BY q.Score DESC"},{"QuerySetId":56156,"Title":"Search UserId's Favorites for Tags with <TagName> (Wildcard)","Description":"Search UserId's Favorites for a Tag string.  Tag searches use a % wildcard by default.\n","QueryBody":"SELECT Posts.id AS \"Post Link\", Posts.Score AS \"Score\", Posts.Tags AS \"Tagged WITH\" FROM Votes, Posts WHERE (Votes.PostId = Posts.Id) AND (Votes.VoteTypeId = 5) AND (Posts.Tags LIKE '%dynamic%crm%') ORDER BY Posts.Score DESC","CreationDate":"2018-04-05 17:11:03","validated":true,"QueryBody_Original":"SELECT Posts.id as [Post Link], Posts.Score as [Score], Posts.Tags as [Tagged WITH]\n\nFROM Votes, Posts\n\nWHERE\n     (Votes.PostId=Posts.Id) AND\n     (Votes.VoteTypeId = 5) AND\n     (Posts.Tags LIKE '%dynamic%crm%')\n\nORDER BY Posts.Score DESC"},{"QuerySetId":56243,"Title":"Search Raymond Hettinger \/ Alex Martelli's Questions & Answers for a Text string. Text searches use a % wildcard by default; searches are case-insensitive","Description":"Search Raymond Hettinger \/ Alex Martelli's Questions & Answers for a Text string.  Text searches use a % wildcard by default; searches are case-insensitive\n","QueryBody":"SELECT Posts.id AS \"Post Link\", Posts.OwnerUserId AS \"Author\", Posts.PostTypeId AS \"Post Type\", Posts.Score AS \"Score\", Posts.Tags AS \"Tagged With\" FROM Posts WHERE ((Posts.OwnerUserId = 1001643) OR (Posts.OwnerUserId = 95810)) AND ((LOWER(Posts.Tags) LIKE LOWER('%<##Text##>%')) OR (LOWER(Posts.Title) LIKE LOWER('%##Text##%')) OR (LOWER(Posts.Body) LIKE LOWER('%##Text##%'))) GROUP BY Posts.id, Posts.OwnerUserId, Posts.PostTypeId, Posts.Score, Posts.Tags ORDER BY Posts.PostTypeId, Posts.Score DESC","CreationDate":"2011-12-13 19:41:58","validated":true,"QueryBody_Original":"SELECT  Posts.id as [Post Link], Posts.OwnerUserId as [Author], Posts.PostTypeId as [Post Type], Posts.Score as [Score], Posts.Tags as [Tagged With]\n\nFROM Posts\n\nWHERE\n     ((Posts.OwnerUserId=1001643) OR (Posts.OwnerUserId=95810)) AND\n     ((lower(Posts.Tags) LIKE lower('%<##Text##>%')) OR\n     (lower(Posts.Title) LIKE lower('%##Text##%')) OR\n     (lower(Posts.Body) LIKE lower('%##Text##%')))\n\nGROUP BY Posts.id,  Posts.OwnerUserId, Posts.PostTypeId, Posts.Score, Posts.Tags\n\nORDER BY Posts.PostTypeId ASC, Posts.Score DESC"},{"QuerySetId":57999,"Title":"Count posts that have imgur images (probably false positives)\n","Description":"Count posts that have imgur images (probably false positives)\n","QueryBody":"SELECT COUNT(*) FROM Posts WHERE Body LIKE '%imgur%'","CreationDate":"2012-01-05 13:40:26","validated":true,"QueryBody_Original":"SELECT COUNT(*) FROM Posts WHERE Body LIKE '%imgur%';"},{"QuerySetId":59300,"Title":"Finding top answers with lmgtfy in them, ordered by year and month","Description":"A lexical search method\n","QueryBody":"SELECT P.Score, p.Id AS \"Post Link\", YEAR(p.CreationDate) AS Year, MONTH(p.CreationDate) AS Month, p.Body AS Body, U.DisplayName AS UserName FROM Posts AS P, Users AS U WHERE (P.PostTypeID = 2 AND P.Score = 0 AND P.Body LIKE '%lmgtfy%' AND P.OwnerUserID = U.ID AND P.ClosedDate IS NULL) ORDER BY Year, Month LIMIT 1000","CreationDate":"2019-07-07 10:14:42","validated":true,"QueryBody_Original":"SELECT  TOP 1000 P.Score, p.Id AS [Post Link], YEAR(p.CreationDate) AS Year, Month(p.CreationDate) AS Month, p.Body AS Body, U.DisplayName AS UserName\nFROM Posts P, Users U\nWhere (\n  P.PostTypeID = 2 AND \n  P.Score = 0 AND \n  P.Body LIKE '%lmgtfy%' AND\n  P.OwnerUserID = U.ID AND\n  P.ClosedDate IS NULL)\nOrder By Year, Month"},{"QuerySetId":59366,"Title":"My most viewed answers (based on question view count)","Description":"Your answers which were viewed the most times.","QueryBody":"SELECT Answers.Id AS \"Post Link\", Question.ViewCount FROM Posts AS Answers, Posts AS Question WHERE Answers.PostTypeId = 2 AND Answers.OwnerUserId = 3111870 AND Question.Id = Answers.ParentId AND Answers.Score > 0 ORDER BY Question.ViewCount DESC","CreationDate":"2020-08-10 17:33:13","validated":true,"QueryBody_Original":"SELECT  Answers.Id as [Post Link], Question.ViewCount \nFROM Posts as Answers, Posts as Question \nWHERE Answers.PostTypeId = 2 \nAND Answers.OwnerUserId = 3111870\nAND Question.Id = Answers.ParentId\nAND Answers.Score > 0\nORDER BY Question.ViewCount DESC;"},{"QuerySetId":59589,"Title":"Top 20 most viewed posts for 'mathematica' tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount, Score, Tags FROM Posts WHERE LOWER(Tags) LIKE '%<mathematica>%' ORDER BY ViewCount DESC, Score DESC LIMIT 20","CreationDate":"2012-01-18 21:54:17","validated":true,"QueryBody_Original":"SELECT  top 20 Id as [Post Link],ViewCount,Score,Tags \nfrom Posts\nwhere lower(Tags) like '%<mathematica>%'\norder by ViewCount desc,Score desc"},{"QuerySetId":59918,"Title":"Questions where a given tag was added not by its author","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", h.Text AS \"Edited Tags\", q.OwnerUserId AS \"User Link\", q.CreationDate AS \"Post Date\", h.UserId AS \"User Link\", h.CreationDate AS \"Edit Date\" FROM PostHistory AS h, Posts AS q WHERE h.PostId = q.Id AND h.PostHistoryTypeId = 6 AND h.Text LIKE '%<' + '##Tag##' + '>%' AND h.UserId <> q.OwnerUserId AND NOT EXISTS(SELECT Id FROM PostHistory AS g WHERE g.PostId = h.PostId AND (g.PostHistoryTypeId = 3 OR g.PostHistoryTypeId = 6) AND g.CreationDate < h.CreationDate AND g.Text LIKE '%<' + '##Tag##' + '>%') LIMIT 100","CreationDate":"2012-01-22 23:46:04","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  q.Id AS [Post Link],\n  h.Text AS [Edited Tags],\n  q.OwnerUserId AS [User Link],\n  q.CreationDate AS [Post Date],\n  h.UserId AS [User Link],\n  h.CreationDate AS [Edit Date]\nFROM PostHistory h, Posts q\nWHERE h.PostId = q.Id\n  AND h.PostHistoryTypeId = 6\n  AND h.Text LIKE '%<' + '##Tag##' + '>%'\n  AND h.UserId <> q.OwnerUserId\n  AND NOT EXISTS (SELECT Id FROM PostHistory g\n                  WHERE g.PostId = h.PostId\n                    AND (g.PostHistoryTypeId = 3 OR g.PostHistoryTypeId = 6)\n                    AND g.CreationDate < h.CreationDate\n                    AND g.Text LIKE '%<' + '##Tag##' + '>%')"},{"QuerySetId":59959,"Title":"Just how badly are W3Schools answers treated?","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", COUNT(Upvotes.Id) AS UpvoteCount, COUNT(Downvotes.Id) AS DownvoteCount FROM Posts LEFT JOIN Votes AS Upvotes ON Upvotes.PostId = Posts.Id LEFT JOIN Votes AS Downvotes ON Downvotes.PostId = Posts.Id WHERE Upvotes.VoteTypeId = 2 AND Downvotes.VoteTypeId = 3 AND Posts.PostTypeId = 2 AND Posts.Body LIKE '%w3schools%' GROUP BY Posts.Id ORDER BY DownvoteCount DESC LIMIT 50","CreationDate":"2014-03-26 19:49:48","validated":true,"QueryBody_Original":"SELECT  TOP(50)\n  Posts.Id AS [Post Link],\n  COUNT(Upvotes.Id) AS UpvoteCount,\n  COUNT(Downvotes.Id) AS DownvoteCount\nFROM Posts\nLEFT JOIN Votes AS Upvotes ON Upvotes.PostId = Posts.Id\nLEFT JOIN Votes AS Downvotes ON Downvotes.PostId = Posts.Id\n  WHERE Upvotes.VoteTypeId = 2\n    AND Downvotes.VoteTypeId = 3\n    AND Posts.PostTypeId = 2\n    AND Posts.Body LIKE '%w3schools%'\nGROUP BY Posts.Id\nORDER BY DownvoteCount DESC;"},{"QuerySetId":61182,"Title":"Questions that you participated in closing","Description":"List of all questions that were closed after you voted on them, in chronological order. Doesn't list flags, deleted questions, or questions that are still pending (or rather, were when the data dump occurred).","QueryBody":"SELECT PostId AS \"Post Link\", CASE Comment WHEN '1' THEN 'exact duplicate' WHEN '2' THEN 'off topic' WHEN '3' THEN 'not constructive' WHEN '4' THEN 'not a real question' WHEN '7' THEN 'too localized' WHEN '10' THEN 'general reference' WHEN '20' THEN 'noise' ELSE Comment END AS Reason, CreationDate AS Date FROM PostHistory WHERE PostHistoryTypeId = 10 AND Text LIKE '%{\"Id\":##UserId:int##,%' ORDER BY Date","CreationDate":"2012-04-13 18:21:33","validated":true,"QueryBody_Original":"SELECT  PostId       AS [Post Link],\n       CASE Comment\n         WHEN '1'  THEN 'exact duplicate'\n         WHEN '2'  THEN 'off topic'\n         WHEN '3'  THEN 'not constructive'\n         WHEN '4'  THEN 'not a real question'\n         WHEN '7'  THEN 'too localized'\n         WHEN '10' THEN 'general reference'\n         WHEN '20' THEN 'noise'\n         ELSE Comment\n       END          AS Reason,\n       CreationDate AS Date\nFROM   PostHistory\nWHERE  PostHistoryTypeId = 10\n       AND Text LIKE '%{\"Id\":##UserId:int##,%'\nORDER  BY Date ASC"},{"QuerySetId":61295,"Title":"Closed Questions asked by user with the Trusted Privledge","Description":null,"QueryBody":"SELECT u.DisplayName, p.id AS \"Post Link\", p.CreationDate, score, CASE WHEN NOT communityowneddate IS NULL THEN '*' ELSE NULL END AS iscommunity, p.ViewCount FROM posts AS p INNER JOIN users AS u ON p.owneruserid = u.id WHERE p.posttypeid = 1 AND NOT p.closeddate IS NULL AND u.reputation > 20000 ORDER BY u.DisplayName, p.Title","CreationDate":"2012-02-10 22:24:24","validated":true,"QueryBody_Original":"SELECT  \n       u.DisplayName,\n       p.id [Post Link], \n       p.CreationDate,\n       score, \n       CASE \n         WHEN communityowneddate IS NOT NULL THEN '*' \n         ELSE NULL \n       END  iscommunity ,\n       p.ViewCount\n       \nFROM   posts p \n       INNER JOIN users u \n         ON p.owneruserid = u.id \nWHERE  p.posttypeid = 1 \n       AND p.closeddate IS NOT NULL \n       AND u.reputation > 20000 \nORDER BY\n      u.DisplayName,\n      p.Title"},{"QuerySetId":62118,"Title":"This query fetches questions sorted by the title length.\n","Description":"This query fetches questions sorted by the title length.\n","QueryBody":"SELECT LENGTH(title) AS \"Length\", title, id AS \"Post Link\" FROM Posts WHERE postTypeId = 1 ORDER BY LENGTH(title)","CreationDate":"2012-12-30 19:58:45","validated":true,"QueryBody_Original":"SELECT  len(title) as [Length], title, id as [Post Link]\nfrom Posts\nwhere postTypeId = 1\norder by len(title) asc"},{"QuerySetId":62567,"Title":"Closed questions that either have answers or haven't been downvoted.","Description":"Closed questions that either have answers or haven't been downvoted. These won't go away unless you make them.\n\n(This only checks for the 30-days rule; see http:\/\/meta.stackoverflow.com\/a\/92006 for the full criteria.)","QueryBody":"SELECT Score, Id AS \"Post Link\", CASE WHEN AnswerCount = 0 THEN NULL ELSE AnswerCount END AS Answers, CASE WHEN NOT AcceptedAnswerId IS NULL THEN 'Yes' ELSE NULL END AS Accepted, CASE WHEN NOT CommunityOwnedDate IS NULL THEN 'Yes' ELSE NULL END AS Wiki, ViewCount AS Views, OwnerUserId AS \"User Link\" FROM Posts WHERE NOT ClosedDate IS NULL \/* closed *\/ AND (Score >= 0 OR (NOT AnswerCount IS NULL AND AnswerCount > 0)) ORDER BY Score, CreationDate DESC","CreationDate":"2012-03-01 22:22:13","validated":true,"QueryBody_Original":"SELECT  Score,\n       Id                                                                AS [Post Link],\n       CASE WHEN AnswerCount = 0 THEN NULL ELSE AnswerCount END          AS Answers,\n       CASE WHEN AcceptedAnswerId IS NOT NULL THEN 'Yes' ELSE NULL END   AS Accepted,\n       CASE WHEN CommunityOwnedDate IS NOT NULL THEN 'Yes' ELSE NULL END AS Wiki,\n       ViewCount                                                         AS Views,\n       OwnerUserId                                                       AS [User Link]\nFROM   Posts\nWHERE  ClosedDate IS NOT NULL -- closed\n       AND (Score >= 0 OR (AnswerCount IS NOT NULL AND AnswerCount > 0))\nORDER  BY Score ASC, CreationDate DESC"},{"QuerySetId":62734,"Title":"How \"Favorited\" are questions of a certain minimum quality (score > 10 and view count > 200)?","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.ViewCount, p.FavoriteCount, ROUND(p.FavoriteCount * 100.0 \/ p.ViewCount, 2) AS \"Favorites per view (%)\" FROM Posts AS p WHERE p.PostTypeId = 1 \/* Question *\/ AND p.Score > 10 AND p.ViewCount > 200 ORDER BY ROUND(p.FavoriteCount * 100.0 \/ p.ViewCount, 2) DESC, p.ViewCount DESC","CreationDate":"2012-02-29 8:08:01","validated":true,"QueryBody_Original":"SELECT \n            p.Id            AS [Post Link],\n            p.Score,\n            p.ViewCount,\n            p.FavoriteCount,\n            ROUND (\n                p.FavoriteCount * 100.0 \/ p.ViewCount, 2\n            ) AS [Favorites per view (%)]\nFROM        Posts           p\nWHERE       p.PostTypeId    = 1 -- Question\nAND         p.Score         > 10\nAND         p.ViewCount     > 200\nORDER BY    ROUND (p.FavoriteCount * 100.0 \/ p.ViewCount, 2)  DESC,\n            p.ViewCount DESC"},{"QuerySetId":63007,"Title":"Users from India with more than 200 rep","Description":"Users from India with more than 200 rep","QueryBody":"SELECT Id AS \"User Link\", Reputation, Age, Location, WebsiteUrl FROM Users WHERE Location LIKE '%India%' AND NOT location LIKE '%Indiana%' \/* ;) and Reputation > 200 order by Reputation desc *\/","CreationDate":"2012-03-04 9:19:56","validated":true,"QueryBody_Original":"SELECT Id as [User Link] ,Reputation ,Age ,Location ,WebsiteUrl from Users where Location like '%India%' and NOT location like '%Indiana%' -- ;) and Reputation > 200 order by Reputation desc"},{"QuerySetId":64594,"Title":"Posts closed for reasons other than exact duplicate","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE NOT ClosedDate IS NULL AND NOT Body LIKE '<blockquote>' + CHAR(10) + '  <p><strong>Possible Duplicate%'","CreationDate":"2012-03-21 19:08:22","validated":true,"QueryBody_Original":"SELECT  Id AS [Post Link], Body\nFROM Posts\nWHERE ClosedDate IS NOT NULL\nAND Body NOT LIKE '<blockquote>' + CHAR(10) + '  <p><strong>Possible Duplicate%';"},{"QuerySetId":64723,"Title":"People that ask a lot of questions.","Description":null,"QueryBody":"SELECT u.ID AS \"User Link\", COUNT(p.ID) AS \"Posts\" FROM Users AS u JOIN Posts AS p ON u.Id = p.OwnerUserID WHERE p.PostTypeId = 1 GROUP BY u.ID ORDER BY COUNT(p.ID) DESC","CreationDate":"2012-03-22 17:52:16","validated":true,"QueryBody_Original":"SELECT \n  u.ID AS [User Link], COUNT(p.ID) AS [Posts]\nFROM Users u\nJOIN Posts p ON u.Id = p.OwnerUserID\nWHERE p.PostTypeId = 1\nGROUP BY u.ID\nORDER BY COUNT(p.ID) DESC"},{"QuerySetId":64855,"Title":"\"Bad\" answers to questions that include code.","Description":null,"QueryBody":"SELECT CASE WHEN q.body LIKE '%<code>%' THEN 'yes' ELSE 'no' END AS IncludesCode, COUNT(*) AS Count FROM posts AS q WHERE q.posttypeid = 1 AND q.viewcount > 10 AND (q.score < 0 OR NOT q.closeddate IS NULL) AND q.answercount > 0 AND q.creationdate > (SELECT MAX(creationdate) FROM posts) - 30 AND NOT EXISTS(SELECT 1 FROM posts WHERE parentid = q.id AND posttypeid = 2 AND (score > 0 OR id = q.acceptedanswerid)) GROUP BY CASE WHEN q.body LIKE '%<code>%' THEN 'yes' ELSE 'no' END","CreationDate":"2012-03-23 19:55:10","validated":true,"QueryBody_Original":"SELECT  case when q.body like '%<code>%' then 'yes'\n            else 'no' end as IncludesCode\n     , count(*) as Count\n  from posts q\n where q.posttypeid = 1\n   and q.viewcount > 10\n   and ( q.score < 0\n         or q.closeddate is not null )\n   and q.answercount > 0\n   and q.creationdate > ( SELECT max(creationdate)\n                           from posts ) - 30\n   and not exists ( SELECT 1\n                      from posts\n                     where parentid = q.id\n                       and posttypeid = 2\n                       and ( score > 0\n                            or id = q.acceptedanswerid )\n                            )\n group by case when q.body like '%<code>%' then 'yes'\n               else 'no' end"},{"QuerySetId":65334,"Title":"ASP.NET thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<activedirectorymembership>%' OR Tags LIKE '%<custom-server-controls>%' OR Tags LIKE '%<dynamicdata>%' OR Tags LIKE '%<dynamic-data>%' OR Tags LIKE '%<spring-mvc>%' OR Tags LIKE '%<mvcscaffolding>%' OR Tags LIKE '%<temporary-asp.net-files>%' OR Tags LIKE '%<asp.net%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:45:11","validated":true,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<activedirectorymembership>%' \nor Tags like '%<custom-server-controls>%' \nor Tags like '%<dynamicdata>%' \nor Tags like '%<dynamic-data>%' \nor Tags like '%<spring-mvc>%' \nor Tags like '%<mvcscaffolding>%' \nor Tags like '%<temporary-asp.net-files>%'\nor Tags like '%<asp.net%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65344,"Title":"tridion thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE Tags LIKE '%<tridion%' AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-04-11 23:19:05","validated":true,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P \nWHERE Tags like '%<tridion%'\nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65350,"Title":"PHP thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<php%' OR Tags LIKE '%<cakephp%' OR Tags LIKE '%<amfphp>%' OR Tags LIKE '%<jqgrid-php>%' OR Tags LIKE '%<easyphp>%' OR Tags LIKE '%<fuelphp>%' OR Tags LIKE '%<ffmpeg-php>%' OR Tags LIKE '%<firephp>%' OR Tags LIKE '%<suphp>%' OR Tags LIKE '%<mod-php>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:19:46","validated":true,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<php%'\nor Tags like '%<cakephp%'\nor Tags like '%<amfphp>%'\nor Tags like '%<jqgrid-php>%'\nor Tags like '%<easyphp>%'\nor Tags like '%<fuelphp>%'\nor Tags like '%<ffmpeg-php>%'\nor Tags like '%<firephp>%'\nor Tags like '%<suphp>%'\nor Tags like '%<mod-php>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65354,"Title":"Flash thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS Year, TIME_TO_STR(P.CreationDate, '%m') AS Month FROM Posts AS P WHERE (Tags LIKE '%<flash%' OR Tags LIKE '%<open-flash-chart>%' OR Tags LIKE '%<usb-flash-drive>%' OR Tags LIKE '%<adobe-flash-cs3>%' OR Tags LIKE '%<openflashchart2>%' OR Tags LIKE '%<embedded-flashplayer>%' OR Tags LIKE '%<axshockwaveflash>%' OR Tags LIKE '%<openflashchart>%' OR Tags LIKE '%<rails-flash>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY Year, Month","CreationDate":"2012-03-28 12:23:58","validated":true,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as Year, \nDATEPART(month, P.CreationDate) as Month\nFROM Posts as P\nWHERE (Tags like '%<flash%'\nor Tags like '%<open-flash-chart>%'\nor Tags like '%<usb-flash-drive>%'\nor Tags like '%<adobe-flash-cs3>%'\nor Tags like '%<openflashchart2>%'\nor Tags like '%<embedded-flashplayer>%'\nor Tags like '%<axshockwaveflash>%'\nor Tags like '%<openflashchart>%'\nor Tags like '%<rails-flash>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by Year, Month"},{"QuerySetId":65355,"Title":"iPhone thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS Year, TIME_TO_STR(P.CreationDate, '%m') AS Month FROM Posts AS P WHERE (Tags LIKE '%<iphone%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY Year, Month","CreationDate":"2012-03-28 12:24:34","validated":true,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as Year, \nDATEPART(month, P.CreationDate) as Month\nFROM Posts as P\nWHERE (Tags like '%<iphone%' ) \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by Year, Month"},{"QuerySetId":65541,"Title":"Number of badges (all kinds) for each user","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(*) AS \"NumBadges\" FROM Users INNER JOIN Badges ON Users.Id = Badges.UserId GROUP BY Users.Id ORDER BY NumBadges DESC","CreationDate":"2012-03-30 11:05:18","validated":true,"QueryBody_Original":"SELECT\n    Users.Id as [User Link], COUNT(*) as [NumBadges]\n  FROM\n    Users INNER JOIN Badges\n    ON Users.Id = Badges.UserId\n  GROUP BY\n    Users.Id\n  ORDER BY\n  NumBadges DESC"},{"QuerySetId":66091,"Title":"Badges and posts made per Month","Description":null,"QueryBody":"SELECT (CAST(CAST(TIME_TO_STR(b.Date, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(b.Date, '%m') AS TEXT) + '-01' AS DATETIME)) AS Month, COUNT(b.Id) AS BadgesAwarded, COUNT(p.Id) AS PostsMade FROM Badges AS b, Users AS u, Posts AS p WHERE b.UserId = u.Id AND p.OwnerUserId = u.Id GROUP BY (CAST(CAST(TIME_TO_STR(b.Date, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(b.Date, '%m') AS TEXT) + '-01' AS DATETIME))","CreationDate":"2014-10-29 22:46:38","validated":true,"QueryBody_Original":"SELECT  (CAST(cast(DATEPART(YYYY, b.Date) as varchar) + '-' + cast(DATEPART(MM, b.Date) as varchar) + '-01' as datetime)) as Month,\ncount(b.Id) as BadgesAwarded,\ncount(p.Id) as PostsMade\nfrom Badges b, Users u, Posts p\nwhere b.UserId = u.Id\nand p.OwnerUserId = u.Id\ngroup by (CAST(cast(DATEPART(YYYY, b.Date) as varchar) + '-' + cast(DATEPART(MM, b.Date) as varchar) + '-01' as datetime))"},{"QuerySetId":66424,"Title":"Top 1000 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%INDIA%' OR Location LIKE '%india%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2016-04-10 12:23:06","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%INDIA%'\n    or Location like '%india%'   AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":66505,"Title":"acceptance rate for each user","Description":null,"QueryBody":"SELECT U.Id, COUNT(*) AS \"Accepted answers\", (SELECT COUNT(*) FROM Posts AS P2 WHERE U.Id = P2.OwnerUserId AND P2.PostTypeId = 1) AS \"Total Questions\" FROM Posts AS P1 INNER JOIN Users AS U ON U.Id = P1.OwnerUserId WHERE P1.PostTypeId = 1 AND P1.CommunityOwnedDate IS NULL AND P1.ClosedDate IS NULL AND NOT P1.AcceptedAnswerId IS NULL GROUP BY U.Id","CreationDate":"2012-04-12 1:14:35","validated":true,"QueryBody_Original":"SELECT \n    U.Id,\n    COUNT(*) AS [Accepted answers],\n    (\n        SELECT COUNT(*)\n        FROM Posts P2\n        WHERE\n          U.Id = P2.OwnerUserId\n          AND P2.PostTypeId = 1\n    ) AS [Total Questions]\nFROM\n    Posts P1\n  INNER JOIN\n    Users U ON U.Id = P1.OwnerUserId\n  \nWHERE \n    P1.PostTypeId = 1\n    AND P1.CommunityOwnedDate is null\n    AND P1.ClosedDate is null\n    AND P1.AcceptedAnswerId IS NOT NULL\n\nGROUP BY U.Id"},{"QuerySetId":66843,"Title":"No Answer, No Comment, No Duplicate, No Merge","Description":"Posts with No Answer, No Comment, No Duplicate","QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.viewcount, p.commentcount, p.creationdate, p.tags FROM Posts AS p WHERE answercount = 0 AND commentcount = 0 AND p.closeddate IS NULL AND NOT p.id IN (SELECT postid FROM posthistory WHERE (posthistorytypeid = 10 AND COMMENT IN (1)) OR posthistorytypeid IN (17, 18, 35, 37, 38)) ORDER BY p.creationdate","CreationDate":"2014-03-31 13:35:10","validated":true,"QueryBody_Original":"SELECT  p.Id AS [Post Link],p.Score,p.viewcount,p.commentcount , p.creationdate, p.tags from Posts p\nwhere answercount=0 and commentcount=0 and p.closeddate is null\nand p.id NOT IN (SELECT postid \n                      FROM   posthistory \n                      WHERE  (posthistorytypeid = 10 \n                      AND COMMENT in ( 1 )) \n                      or posthistorytypeid in (17,18,35,37,38))\norder by p.creationdate"},{"QuerySetId":70603,"Title":"Top users:  Hong Kong","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%hong kong%' ORDER BY Reputation DESC","CreationDate":"2017-06-19 9:44:36","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%hong kong%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":71040,"Title":"Find Questions Migrated Without the User","Description":"Use this query to find where users have their post migrated but they never followed the question to the target site.","QueryBody":"SELECT OwnerDisplayName, Posts.Id AS \"Post Link\", PostHistory.CreationDate AS \"Migration Date\", Posts.CreationDate AS \"Original Post Date\", SUBSTRING(PostHistory.Comment, 13, STR_POSITION(SUBSTRING(PostHistory.Comment, 13, LENGTH(PostHistory.Comment)), '.') - 1) AS \"Source Site\" FROM Posts JOIN PostHistory ON Posts.Id = PostHistory.PostId WHERE PostHistory.PostHistoryTypeId = 36 AND Posts.PostTypeId = 1 AND OwnerUserId IS NULL ORDER BY 5, OwnerDisplayName, Posts.CreationDate DESC","CreationDate":"2012-05-24 18:43:21","validated":true,"QueryBody_Original":"SELECT \n    OwnerDisplayName\n  , Posts.Id AS [Post Link]\n  , PostHistory.CreationDate AS [Migration Date]\n  , Posts.CreationDate AS [Original Post Date]\n  , SUBSTRING(\n        PostHistory.Comment\n      , 13\n      , CHARINDEX(\n            '.'\n          , SUBSTRING(\n                PostHistory.Comment\n              , 13\n              , LEN(PostHistory.Comment)\n            )\n        ) -1\n    ) AS [Source Site]\nFROM\n  Posts\nJOIN\n  PostHistory ON Posts.Id = PostHistory.PostId\nWHERE\n  PostHistory.PostHistoryTypeId = 36 AND\n  Posts.PostTypeId = 1 AND\n  OwnerUserId IS NULL \nORDER BY 5 ASC, OwnerDisplayName ASC, Posts.CreationDate DESC"},{"QuerySetId":71854,"Title":"Average current reputation of users on site","Description":null,"QueryBody":"SELECT AVG(u1.Reputation) FROM Users AS u1 WHERE u1.Id IN (SELECT DISTINCT u.Id FROM Posts AS p LEFT JOIN Users AS u ON (p.OwnerUserId = u.Id) WHERE p.PostTypeId = 1)","CreationDate":"2012-06-06 16:54:42","validated":true,"QueryBody_Original":"SELECT  AVG(u1.Reputation) FROM Users u1 WHERE u1.Id IN\n(SELECT DISTINCT u.Id\nFROM Posts p\nLEFT JOIN Users u ON (p.OwnerUserId = u.Id)\nWHERE\np.PostTypeId = 1)"},{"QuerySetId":72826,"Title":"Interactions with a specific user (I.e., answered their question or commented on a post.)","Description":"Have I interacted with this user before? (I.e., answered their question or commented on a post.)","QueryBody":"SELECT 'Answer' AS Type, q.Id AS \"Post Link\", NULL AS \"Comment Link\", a.CreationDate AS Date, a.OwnerUserId AS \"UserIDf\" FROM Posts AS a, Posts AS q WHERE a.ParentId = q.Id AND a.PostTypeId = 2 UNION ALL SELECT 'Comment' AS Type, c.PostId AS \"Post Link\", c.Id AS \"Comment Link\", c.CreationDate AS Date, c.UserId AS UserIDC FROM Comments AS c, Posts AS p WHERE c.PostId = p.Id ORDER BY Date","CreationDate":"2014-11-28 4:47:29","validated":true,"QueryBody_Original":"SELECT  'Answer'       AS Type,\n       q.Id           AS [Post Link],\n       NULL           AS [Comment Link],\n       a.CreationDate AS Date,\n       a.OwnerUserId    AS [UserIDf]\nFROM   Posts a, Posts q\nWHERE  a.ParentId = q.Id\n       AND a.PostTypeId = 2\n\nUNION ALL\n\nSELECT 'Comment'      AS Type,\n       c.PostId       AS [Post Link],\n       c.Id           AS [Comment Link],\n       c.CreationDate AS Date,\n       c.UserId         AS UserIDC\nFROM   Comments c, Posts p\nWHERE  c.PostId = p.Id\nORDER BY Date ASC"},{"QuerySetId":72893,"Title":"How Many Edits Have I made?","Description":null,"QueryBody":"SELECT COUNT(PostHistoryTypeId) FROM PostHistory WHERE UserId = @UserId AND PostHistoryTypeId > 3 AND PostHistoryTypeId < 6","CreationDate":"2012-06-13 18:55:30","validated":true,"QueryBody_Original":"SELECT \nCOUNT(PostHistoryTypeId)\nFROM PostHistory \nWHERE \n  UserId = @UserId AND\n  PostHistoryTypeId > 3 AND\n  PostHistoryTypeId < 6"},{"QuerySetId":73868,"Title":"Top 50000 users by mean answer score. Each answer's score is log normalized and truncated at 0 (no negatives). Results are smoothed by adding 5 fake answers with score 0","Description":"- Each answer's score is log normalized and truncated at 0 (no negatives)\n- Results are smoothed by adding 5 fake answers with score 0 (there's a bayesian justification for this involving conjugate priors).\n","QueryBody":"SELECT Users.Id, DisplayName, Reputation, COUNT(Posts.Id) AS Answers, AVG(LOG(0.5 * (((CAST(Score AS FLOAT) + 1.0) + 1.0) + ABS((CAST(Score AS FLOAT) + 1.0) - 1.0)))) * COUNT(Score) \/ (COUNT(Score) + 5) AS LogAverageAnswerScore FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 GROUP BY Users.Id, DisplayName, Reputation ORDER BY LogAverageAnswerScore DESC LIMIT 50000","CreationDate":"2012-07-04 5:00:07","validated":true,"QueryBody_Original":"SELECT  TOP 50000\n    Users.Id,\n    DisplayName,\n    Reputation,\n    Count(Posts.Id) AS Answers,\n    AVG(Log(0.5 * (\n      ((CAST(Score AS float) + 1.0) + 1.0) + \n      ABS((CAST(Score AS float) + 1.0) - 1.0)\n    ))) * Count(Score) \/ (Count(Score) + 5) AS LogAverageAnswerScore\nFROM Posts\n    INNER JOIN Users ON Users.Id = OwnerUserId\nWHERE PostTypeId = 2\nGROUP BY Users.Id, DisplayName, Reputation\nORDER BY LogAverageAnswerScore DESC"},{"QuerySetId":74669,"Title":"Top Android Russia Answers writers","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS AndroidAnswers FROM Users AS u, Posts AS p, Posts AS pp WHERE u.Id IN (SELECT Id FROM Users WHERE Location LIKE ('%Russia')) AND p.OwnerUserId = u.Id AND pp.Id = p.ParentId AND pp.Tags LIKE ('%android%') GROUP BY u.Id, u.DisplayName, u.Reputation ORDER BY AndroidAnswers DESC","CreationDate":"2017-03-27 18:20:50","validated":true,"QueryBody_Original":"SELECT  u.Id, u.DisplayName, u.Reputation, count(*) as AndroidAnswers from Users u, Posts p, Posts pp where u.Id in (\n    SELECT Id\n    from Users \n    where Location like ('%Russia')\n  )\n  and p.OwnerUserId = u.Id\n  and pp.Id = p.ParentId\n  and pp.Tags like ('%android%')\n  group by u.Id,u.DisplayName, u.Reputation\n  order by AndroidAnswers desc"},{"QuerySetId":75142,"Title":"Finds all posts that have embedded images, but do not contain \"imgur.com\"","Description":"Finds all posts that have embedded images, but do not contain \"imgur.com\". Useful for finding old posts with images that may need uploading to imgur or are already broken. Sorted by last activity because of the Archaeologist badge.","QueryBody":"SELECT P.Id AS \"Post Link\" FROM Posts AS P INNER JOIN Users AS U ON P.OwnerUserId = U.Id AND P.Body LIKE '%img src%' AND NOT P.Body LIKE '%imgur%'","CreationDate":"2012-10-23 16:40:50","validated":true,"QueryBody_Original":"SELECT  P.Id as [Post Link]\nfrom Posts P\ninner join Users U on P.OwnerUserId = U.Id\nand P.Body like '%img src%'\nand P.Body not like '%imgur%'"},{"QuerySetId":75972,"Title":"Finding Posts tagged only homework, which are not closed","Description":null,"QueryBody":"SELECT Posts.Id, Posts.Id AS \"Post Link\" FROM Posts WHERE Tags = '<homework>' AND ClosedDate IS NULL ORDER BY Posts.LastEditDate","CreationDate":"2012-07-31 14:47:29","validated":true,"QueryBody_Original":"SELECT  Posts.Id, Posts.Id  AS [Post Link]\nFROM Posts\nWHERE Tags='<homework>' AND ClosedDate IS NULL\nORDER BY Posts.LastEditDate"},{"QuerySetId":76024,"Title":"Top SO Users from KZ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kazakhstan%' OR UPPER(Location) LIKE '%KZ' ORDER BY Reputation DESC","CreationDate":"2017-07-26 21:46:13","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kazakhstan%'\n    OR UPPER(Location) LIKE '%KZ'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":76240,"Title":"Reputation vs. Number of Views","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, Views FROM Users ORDER BY Reputation DESC","CreationDate":"2012-07-31 17:44:01","validated":true,"QueryBody_Original":"SELECT \n    Id AS [User Link], \n    Reputation,\n    Views\nFROM\n    Users\nORDER BY\n    Reputation DESC;"},{"QuerySetId":77444,"Title":"Popularity of \"Nice try, robot.\" comments","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Id, Score FROM Comments WHERE (Text LIKE '%ice try, robo%')","CreationDate":"2012-08-17 1:19:21","validated":true,"QueryBody_Original":"SELECT \n   PostId as [Post Link],\n   Id,\n   Score\nfrom Comments\nwhere (Text like '%ice try, robo%')\n;"},{"QuerySetId":79356,"Title":"Number of User's Posts Downvoted per Day per User","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Votes.CreationDate, COUNT(*) AS Downvotes FROM (SELECT DISTINCT Votes.PostId, Votes.CreationDate FROM Votes WHERE Votes.VoteTypeId = 3) AS Votes INNER JOIN Posts ON Votes.PostId = Posts.Id INNER JOIN Users ON Posts.OwnerUserId = Users.Id GROUP BY Users.Id, Votes.CreationDate ORDER BY Downvotes DESC","CreationDate":"2012-09-09 6:05:58","validated":true,"QueryBody_Original":"SELECT  Users.Id as [User Link], Votes.CreationDate, COUNT(*) Downvotes\n   FROM (\n      SELECT DISTINCT Votes.PostId, Votes.CreationDate FROM Votes \n         WHERE Votes.VoteTypeId = 3\n   ) Votes\n   INNER JOIN Posts ON Votes.PostId = Posts.Id\n   INNER JOIN Users ON Posts.OwnerUserId = Users.Id\n   GROUP BY Users.Id, Votes.CreationDate\n   ORDER BY Downvotes DESC"},{"QuerySetId":81340,"Title":"Length of answered posts","Description":null,"QueryBody":"SELECT Id, PostTypeId, AcceptedAnswerId, AnswerCount, CreationDate, Score, LENGTH(Body) AS QLength FROM Posts WHERE PostTypeId = 2 ORDER BY CreationDate DESC","CreationDate":"2019-09-13 19:15:43","validated":true,"QueryBody_Original":"SELECT  \n    Id,\n    PostTypeId,\n    AcceptedAnswerId,\n    AnswerCount,\n    CreationDate,\n    Score,\n    LEN(Body) AS QLength\nfrom Posts\nwhere PostTypeId = 2\norder by CreationDate DESC"},{"QuerySetId":83178,"Title":"Average Score for Questions and Answers by Month Since 2008","Description":null,"QueryBody":"SELECT TIME_TO_STR(Posts.CreationDate, '%Y') AS Year, TIME_TO_STR(Posts.CreationDate, '%m') AS Month, SUM(Score) AS SUM_SCORE, COUNT(*) AS COUNT_SCORE, AVG(CAST(Score AS FLOAT(12, 2))) AS AVG_SCORE, SUM(CASE WHEN PostTypeID < 3 THEN 1 ELSE 0 END) AS QnA FROM Posts WHERE PostTypeID < 3 GROUP BY TIME_TO_STR(Posts.CreationDate, '%Y'), TIME_TO_STR(Posts.CreationDate, '%m') HAVING TIME_TO_STR(Posts.CreationDate, '%Y') >= 2008 ORDER BY Year, Month","CreationDate":"2012-10-26 14:33:34","validated":true,"QueryBody_Original":"SELECT \n    datepart(year, Posts.CreationDate) AS Year,\n    datepart(month, Posts.CreationDate) AS Month,\n    SUM (Score) AS SUM_SCORE,\n    COUNT(*) AS COUNT_SCORE,\n    AVG(CAST(Score AS DECIMAL(12,2))) AS AVG_SCORE,\n    sum(case when PostTypeID < 3 then 1 else 0 end) QnA\nFROM \n    Posts\nWHERE\n    PostTypeID < 3\nGROUP BY\n    datepart(year, Posts.CreationDate), datepart(month, Posts.CreationDate)    \nHAVING  datepart(year, Posts.CreationDate) >= 2008\nORDER BY Year, Month"},{"QuerySetId":83443,"Title":"Questions By High Rep Users","Description":null,"QueryBody":"SELECT ParentId AS \"Link To Question\" FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Users.Reputation > 1000","CreationDate":"2018-05-17 6:03:12","validated":true,"QueryBody_Original":"SELECT      ParentId as [Link To Question]\nFROM        Posts\n            INNER JOIN Users\n            ON Posts.OwnerUserId = Users.Id\nWHERE       Users.Reputation > 1000"},{"QuerySetId":83956,"Title":"Users with the most closed questions","Description":null,"QueryBody":"SELECT owneruserid AS \"User Link\", COUNT(*) AS total FROM posts WHERE NOT closeddate IS NULL AND posttypeid = 1 \/* questions *\/ GROUP BY owneruserid ORDER BY total DESC LIMIT 100","CreationDate":"2012-11-01 2:26:35","validated":true,"QueryBody_Original":"SELECT  top(100) owneruserid [User Link], count(*) total\nfrom posts\nwhere closeddate is not null\n  and posttypeid = 1 -- questions\ngroup by owneruserid\norder by total desc;"},{"QuerySetId":84692,"Title":"Top posts (Q&A) on the site.","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, CASE WHEN PostTypeId = 1 THEN 'Question' WHEN PostTypeId = 2 THEN 'Answer' END AS \"Post Type\", OwnerUserId AS \"User Link\" FROM Posts ORDER BY Score DESC LIMIT 100","CreationDate":"2012-11-10 15:13:44","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  Id as [Post Link],\n  Score,\n  case\n    when PostTypeId = 1 then 'Question'\n    when PostTypeId = 2 then 'Answer'\n  end AS 'Post Type',\n  OwnerUserId as [User Link]\nFROM\n  Posts\nORDER BY\n  Score DESC\n ;"},{"QuerySetId":85869,"Title":"Comment - to - post ratio","Description":null,"QueryBody":"SELECT COUNT(DISTINCT p.id) AS \"Posts\", COUNT(DISTINCT c.id) AS \"Comments\", (COUNT(DISTINCT c.id) * 1.00) \/ COUNT(DISTINCT p.id) AS \"Comments\/Post\" FROM Posts AS p LEFT JOIN Comments AS c ON c.postid = p.id","CreationDate":"2012-11-14 2:40:21","validated":true,"QueryBody_Original":"SELECT  COUNT(distinct p.id) as 'Posts',\nCOUNT(distinct c.id) as 'Comments',\n(COUNT(distinct c.id)*1.00)\/COUNT(distinct p.id) as 'Comments\/Post'\nFROM Posts p\nLEFT JOIN Comments c\non c.postid = p.id"},{"QuerySetId":86177,"Title":"highly viewed or highly voted posts that were asked in 2011 and got closed","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE (score >= 250 OR viewcount >= 150000) AND NOT closeddate IS NULL AND creationdate BETWEEN '2011-01-01' AND '2011-12-31'","CreationDate":"2012-11-17 2:30:52","validated":true,"QueryBody_Original":"SELECT  count (*)\nfrom posts\nwhere (score >= 250 or viewcount >= 150000)\nand closeddate is not null\nand creationdate between '2011-01-01' and '2011-12-31'"},{"QuerySetId":93526,"Title":"top ten users in georgia\/tbilisi","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%georgia%' OR UPPER(Location) LIKE '%GE' OR UPPER(Location) LIKE 'TBILISI' OR LOWER(Location) LIKE 'tbilisi' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2013-01-24 18:20:36","validated":true,"QueryBody_Original":"SELECT \nTOP (20) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%georgia%'\n    OR UPPER(Location) LIKE '%GE'\n    OR UPPER(Location) LIKE 'TBILISI'\n    OR LOWER(Location) LIKE 'tbilisi'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":93738,"Title":"count of posts closed with reasons, since 2013, by month","Description":null,"QueryBody":"SELECT YEAR(Posts.ClosedDate) AS y, MONTH(Posts.ClosedDate) AS m, CAST(YEAR(Posts.ClosedDate) AS TEXT(10)) + '\/' + CAST(MONTH(Posts.ClosedDate) AS TEXT(19)) AS ym, COUNT(CONCAT('http:\/\/programmers.stackexchange.com\/q\/', Posts.Id)) AS Questions FROM PostHistory JOIN Posts ON Posts.Id = PostHistory.PostId\/* AND Posts.ClosedDate < '2013-12-01' *\/  WHERE Posts.ClosedDate >= '2013-01-01' AND PostHistoryTypeId = 10 AND PostHistory.Comment <> 1 GROUP BY YEAR(Posts.ClosedDate), MONTH(Posts.ClosedDate) ORDER BY 1 DESC, 2 DESC","CreationDate":"2014-01-06 15:26:45","validated":true,"QueryBody_Original":"SELECT  year(Posts.ClosedDate) as y, month(Posts.ClosedDate) as m,  cast (year(Posts.ClosedDate) as  varchar(10)) + '\/' + cast(month(Posts.ClosedDate) as varchar(19)) as ym,  count(CONCAT ('http:\/\/programmers.stackexchange.com\/q\/', Posts.Id)) as Questions\nFROM PostHistory\nJOIN Posts ON Posts.Id = PostHistory.PostId\nWHERE Posts.ClosedDate >= '2013-01-01' \n--AND Posts.ClosedDate < '2013-12-01'\nAND PostHistoryTypeId = 10\nAND PostHistory.Comment != 1\ngroup by year(Posts.ClosedDate), month(Posts.ClosedDate)\nORDER BY 1 desc, 2 desc"},{"QuerySetId":95333,"Title":"First Time Posts that are on bounty questions","Description":null,"QueryBody":"SELECT COUNT(DISTINCT p.id) AS QuestionWithBounty, COUNT(DISTINCT Answer.id) AS BountyAnswers, SUM(CASE WHEN PostsBeforeBounty.Id IS NULL THEN 1 ELSE 0 END) AS FirstTimePosts FROM posts AS P INNER JOIN Votes AS bStart ON p.id = bStart.PostID AND bStart.VoteTypeID = 8 INNER JOIN Posts AS Answer ON Answer.ParentID = p.ID AND Answer.CreationDate > bStart.CreationDate \/* Answers after bount *\/ LEFT JOIN Posts AS PostsBeforeBounty ON Answer.OwnerUserId = PostsBeforeBounty.OwnerUserID AND Answer.CreationDate > PostsBeforeBounty.CreationDate","CreationDate":"2013-02-04 21:44:58","validated":true,"QueryBody_Original":"SELECT  \n   COUNT( DISTINCT p.id) QuestionWithBounty,\n   COUNT( DISTINCT Answer.id)  BountyAnswers,\n   SUM(CASE WHEN PostsBeforeBounty.Id is null THEN 1 ELSE 0 END) FirstTimePosts\n\nFROM posts P\n  INNER JOIN Votes bStart\n  ON p.id = bStart.PostID\n    AND bStart.VoteTypeID = 8 \n  INNER JOIN Posts Answer\n  ON Answer.ParentID = p.ID\n    and Answer.CreationDate > bStart.CreationDate --Answers after bount\n  LEFT JOIN Posts PostsBeforeBounty\n    ON Answer.OwnerUserId = PostsBeforeBounty.OwnerUserID \n      and Answer.CreationDate > PostsBeforeBounty.CreationDate"},{"QuerySetId":96700,"Title":"Top 1000 \"quality\" posts as defined by (votes * post length).","Description":"Top 1000 \"quality\" posts as defined by (votes * post length). Idea taken from: http:\/\/data.stackexchange.com\/stackoverflow\/query\/36092\/","QueryBody":"SELECT (CASE p.PostTypeId WHEN 1 THEN 'Q' WHEN 2 THEN 'A' END) AS \"T\", p.Id AS \"Post Link\", p.OwnerUserId AS \"User Link\", p.Score AS \"Score\", LENGTH(p.Body) AS \"Post Length\", (p.Score * LENGTH(p.Body)) AS \"Weighted Score\" FROM Posts AS p WHERE p.PostTypeId = 1 OR p.PostTypeId = 2 ORDER BY \"Weighted Score\" DESC LIMIT 1000","CreationDate":"2013-02-10 14:44:08","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n    (CASE p.PostTypeId\n        WHEN 1 THEN 'Q'\n        WHEN 2 THEN 'A'\n    END) as [T],\n    p.Id as [Post Link],\n    p.OwnerUserId as [User Link],\n    p.Score as [Score],\n    LEN(p.Body) as [Post Length],\n    (p.Score * LEN(p.Body)) as [Weighted Score]\nFROM\n    Posts p\nWHERE p.PostTypeId = 1 OR p.PostTypeId = 2\nORDER BY\n    [Weighted Score] DESC"},{"QuerySetId":97471,"Title":"Self answers with score above 5 on bad questions","Description":null,"QueryBody":"SELECT q.id AS \"Post Link\" FROM posts AS q INNER JOIN posts AS a ON q.id = a.parentid AND q.ownerUserId = a.owneruserid WHERE q.score < 0 AND a.score > 5","CreationDate":"2013-02-13 10:46:35","validated":true,"QueryBody_Original":"SELECT  q.id [Post Link] from posts q\nINNER JOIN posts a\nON q.id =  a.parentid\n   and q.ownerUserId = a.owneruserid\nWHERE\n    q.score < 0\n   and a.score > 5"},{"QuerySetId":99348,"Title":"500 lowest scored accepted answers","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Score FROM Posts AS q WHERE NOT q.ParentId IS NULL ORDER BY q.Score LIMIT 500","CreationDate":"2013-06-08 21:49:43","validated":true,"QueryBody_Original":"SELECT  top 500 q.Id as [Post Link], q.Score\n  from Posts as q\n  where q.ParentId is not null\n  order by q.Score asc"},{"QuerySetId":101200,"Title":"Top 150 users in the Waterloo area","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Kitchener%' OR Location LIKE N'%Waterloo%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2013-03-05 8:44:27","validated":true,"QueryBody_Original":"SELECT  TOP 150\n   Id as [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Kitchener%'\n   OR Location like N'%Waterloo%'\n   \nORDER BY\n   reputation DESC"},{"QuerySetId":102206,"Title":"Accepted answers that have the lowest score","Description":null,"QueryBody":"SELECT q.pid AS \"Post Link\", q.max_score, q.min_score, q.n_answers FROM (SELECT p.id AS pid, MIN(a.score) AS min_score, MAX(a.score) AS max_score, MAX(c.score) AS acc_score, COUNT(a.id) AS n_answers FROM posts AS p JOIN posts AS a ON a.parentid = p.id JOIN posts AS c ON p.acceptedanswerid = c.id GROUP BY p.id) AS q WHERE q.acc_score = q.min_score AND q.acc_score < q.max_score ORDER BY q.max_score - q.acc_score DESC","CreationDate":"2013-03-09 8:10:22","validated":true,"QueryBody_Original":"SELECT  q.pid as [Post Link], q.max_score, q.min_score, q.n_answers from\n(SELECT p.id  as pid,\n       min(a.score) as min_score,\n       max(a.score) as max_score,\n       max(c.score) as acc_score,\n       count(a.id) as n_answers\nfrom posts p\njoin posts a on a.parentid = p.id\njoin posts c on p.acceptedanswerid = c.id\ngroup by p.id\n) as q\nwhere q.acc_score = q.min_score\nand q.acc_score < q.max_score\norder by q.max_score - q.acc_score desc"},{"QuerySetId":103675,"Title":"Total post score (useful for metas)","Description":null,"QueryBody":"SELECT (SELECT SUM(p.score * p.PostTypeId * 5) FROM Posts AS p WHERE p.OwnerUserId = u.Id) AS computed_rep, u.Reputation AS real_rep, u.DisplayName AS alias FROM Users AS u ORDER BY computed_rep DESC","CreationDate":"2013-06-29 3:25:06","validated":true,"QueryBody_Original":"SELECT  (\n  SELECT SUM(p.score * p.PostTypeId * 5)\n  from Posts p\n  where p.OwnerUserId = u.Id\n) as computed_rep, u.Reputation as real_rep, u.DisplayName as alias\nfrom Users u order by computed_rep desc"},{"QuerySetId":104035,"Title":"Average Score for non-Bounty Questions","Description":null,"QueryBody":"SELECT AVG(p.Score * 1.0) AS Score FROM Posts AS p LEFT JOIN Votes AS v ON v.PostID = p.ID AND v.VoteTypeID = 8 WHERE p.PostTypeID = 1 AND v.CreationDate IS NULL","CreationDate":"2013-03-20 4:03:57","validated":true,"QueryBody_Original":"SELECT  AVG(p.Score * 1.0) Score\nfrom Posts p\nLEFT JOIN Votes v ON v.PostID = p.ID AND v.VoteTypeID = 8\nWHERE p.PostTypeID=1 AND v.CreationDate IS NULL"},{"QuerySetId":104121,"Title":"Number of questions for PHP and cURL","Description":null,"QueryBody":"SELECT Id, Title FROM Posts WHERE Title LIKE '%php%curl%' OR Title LIKE '%php%post%'","CreationDate":"2013-03-20 13:51:59","validated":true,"QueryBody_Original":"SELECT  Id, Title from Posts where Title like '%php%curl%' or Title like '%php%post%'"},{"QuerySetId":104435,"Title":"Number of members based on their ages","Description":null,"QueryBody":"SELECT Age, COUNT(Age) AS \"Number of members\" FROM Users GROUP BY Age ORDER BY COUNT(Age) DESC","CreationDate":"2013-03-22 1:25:43","validated":true,"QueryBody_Original":"SELECT  Age, count(Age) as [Number of members]\nfrom Users\ngroup by Age\norder by count(Age) desc"},{"QuerySetId":104765,"Title":"what have you tried cleanup","Description":null,"QueryBody":"SELECT C.PostID AS \"Post Link\", * FROM Comments AS C WHERE C.text LIKE '%what have you tried%' ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2013-03-25 2:54:45","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  C.PostID as [Post Link],\n  *\n  \nfrom\n  Comments as C\nwhere\n  C.text like '%what have you tried%'\norder by\n  CreationDate DESC"},{"QuerySetId":105006,"Title":"Tags with the highest percentage of closed questions","Description":null,"QueryBody":"SELECT tag.TagName AS \"Tag Name\", tag.Count AS \"Deletion Percentage\", p.Id AS \"Post Link\" FROM Tags AS tag INNER JOIN Posts AS p ON p.Tags LIKE CONCAT(CONCAT('%<', tag.TagName COLLATE SQL_Latin1_General_CP1_CI_AS), '>%') AND NOT p.ClosedDate IS NULL GROUP BY p.Id, tag.TagName, tag.Count ORDER BY tag.Count DESC LIMIT 10","CreationDate":"2013-03-26 21:28:00","validated":true,"QueryBody_Original":"SELECT  TOP 10\n  tag.TagName as [Tag Name],\n  tag.Count as [Deletion Percentage],\n  p.Id as [Post Link]\nFROM Tags tag\n  INNER JOIN Posts p \n  ON \n    p.Tags Like CONCAT(CONCAT('%<', tag.TagName collate SQL_Latin1_General_CP1_CI_AS), '>%') AND\n    p.ClosedDate IS NOT NULL\nGROUP BY p.Id, tag.TagName, tag.Count\nORDER by tag.Count DESC"},{"QuerySetId":105322,"Title":"Users with most Necromancer Badges","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS Badges FROM Badges WHERE Badges.Name = 'Necromancer' GROUP BY UserId ORDER BY Badges DESC LIMIT 100","CreationDate":"2013-09-08 11:53:10","validated":true,"QueryBody_Original":"SELECT  TOP 100 UserId AS [User Link], count(*) AS Badges\nFROM Badges\nWHERE Badges.Name = 'Necromancer'\nGROUP BY UserId\nORDER BY Badges DESC"},{"QuerySetId":106695,"Title":"Answered questions that have at least two zero-score answers","Description":"Questions that can be marked as answered by upvoting one of the available zero-score answers.","QueryBody":"SELECT q.Id AS \"Post Link\" FROM Posts AS q WHERE q.PostTypeId = 1 AND q.ClosedDate IS NULL AND q.AcceptedAnswerId > 0 AND q.AnswerCount > 2 AND EXISTS(SELECT a.Id FROM Posts AS a WHERE a.Score = 0 AND a.ParentId = q.Id) ORDER BY q.CreationDate DESC","CreationDate":"2013-04-05 18:11:52","validated":true,"QueryBody_Original":"SELECT  q.Id AS [Post Link]\nFROM Posts q \nWHERE q.PostTypeId = 1 \n      AND q.ClosedDate IS NULL\n      AND q.AcceptedAnswerId > 0\n      AND q.AnswerCount > 2\n      AND EXISTS (SELECT a.Id\n                  FROM Posts a\n                  WHERE a.Score = 0\n                        AND a.ParentId = q.Id)\nORDER BY q.CreationDate DESC"},{"QuerySetId":108188,"Title":"Top 100 upvotes per post and per day","Description":"Show the posts that received the most upvotes in one day","QueryBody":"SELECT (CASE p.PostTypeId WHEN 1 THEN 'Q' WHEN 2 THEN 'A' END), v.PostId AS \"Post Link\", p.OwnerUserId AS \"User Link\", v.CreationDate AS \"Date\", (DATEDIFF(v.CreationDate, MIN(p.CreationDate)) + 86400) \/ 86400 AS \"Age\", COUNT(*) AS \"Upvotes\" FROM Votes AS v LEFT JOIN Posts AS p ON p.Id = v.PostId WHERE v.VoteTypeId = 2 AND NOT p.PostTypeId IS NULL GROUP BY v.PostId, v.CreationDate, p.OwnerUserId, p.PostTypeId ORDER BY \"date\" DESC LIMIT 100","CreationDate":"2015-03-27 2:19:46","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  (CASE p.PostTypeId\n        WHEN 1 THEN 'Q'\n        WHEN 2 THEN 'A'\n    END),\n  v.PostId AS [Post Link],\n  p.OwnerUserId AS \"User Link\",\n  v.CreationDate AS [Date],\n  (DateDiff(second, Min(p.CreationDate), v.CreationDate) + 86400) \/ 86400 AS [Age],\n  Count(*) AS [Upvotes]\nFROM Votes v\nLEFT JOIN Posts p ON p.Id = v.PostId\nWHERE v.VoteTypeId = 2 and p.PostTypeId is not null\nGROUP BY\n    v.PostId,\n    v.CreationDate,\n    p.OwnerUserId,\n    p.PostTypeId\nORDER BY [date] DESC"},{"QuerySetId":108463,"Title":"Graph of answer quality and number","Description":null,"QueryBody":"SELECT *, COUNT(*) FROM (SELECT p.OwnerUserId AS userl, u.Reputation, ROUND(AVG(CAST(p.Score AS FLOAT)), 2) AS \"Avg Score\", COUNT(*) AS \"# Questions\" FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.posttypeid = 2 AND p.communityowneddate IS NULL AND p.closeddate IS NULL GROUP BY u.Reputation, p.OwnerUserId) AS X GROUP BY \"# Questions\", \"Avg Score\", Reputation, userl ORDER BY \"Avg Score\" DESC, \"# Questions\" DESC","CreationDate":"2013-04-17 2:22:46","validated":true,"QueryBody_Original":"SELECT  \n   *,\n   count(*)\nfrom (\n  SELECT \n    p.OwnerUserId as userl, \n    u.Reputation,\n    round(avg(cast(p.Score as real)),2) as [Avg Score], \n    count(*) as [# Questions]\n  from Posts p\n  join Users u on u.Id = p.OwnerUserId\n  where p.posttypeid = 2 and\n    p.communityowneddate is null and\n    p.closeddate is null\n  group by u.Reputation, p.OwnerUserId\n) as X\ngroup by [# Questions] , [Avg Score], Reputation, userl\norder by [Avg Score] desc, [# Questions] desc"},{"QuerySetId":108813,"Title":"Do good questions have question marks?","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Count\", SUM(Score) AS \"Sum\", SUM(FavoriteCount) AS FavoriteCount, CAST(SUM(Score) AS FLOAT) \/ COUNT(*) AS AverageScore, CAST(SUM(FavoriteCount) AS FLOAT) \/ COUNT(*) AS AverageFavoriteCount, CASE WHEN BODY LIKE '%?%' OR Title LIKE '%?%' THEN 1 ELSE 0 END AS QuestionMark FROM Posts WHERE PostTypeId = 1 GROUP BY CASE WHEN BODY LIKE '%?%' OR Title LIKE '%?%' THEN 1 ELSE 0 END","CreationDate":"2013-04-17 14:13:18","validated":true,"QueryBody_Original":"SELECT  COUNT(*) AS [Count],\n       SUM(Score) as [Sum],\n       SUM(FavoriteCount) as FavoriteCount,\n       CAST(SUM(Score) AS decimal) \/ COUNT(*) AS AverageScore,\n       CAST(SUM(FavoriteCount) AS decimal) \/ COUNT(*) AS AverageFavoriteCount,\n       CASE WHEN BODY LIKE '%?%' OR Title Like '%?%' THEN 1 ELSE 0 END AS QuestionMark\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY CASE WHEN BODY LIKE '%?%' OR Title Like '%?%' THEN 1 ELSE 0 END"},{"QuerySetId":109089,"Title":"Top 100 users from Italy","Description":"Lists the top 100 users (ranked by reputation) that are located in Italy according to their profile information.\n\nBased on http:\/\/data.stackexchange.com\/stackoverflow\/s\/1166\/top-100-users-from-vancouver","QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE 'italy' ORDER BY reputation DESC LIMIT 100","CreationDate":"2013-04-18 21:46:31","validated":true,"QueryBody_Original":"SELECT  TOP 100\n   Id as [User Link],\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like 'italy' \nORDER BY\n   reputation DESC"},{"QuerySetId":111126,"Title":"Answers who's question is tagged 'regex' and is likely just a new regex","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Score AS \"Answer Score\", LENGTH(a.Body) AS \"Answer Length\", a.Body AS \"Answer Body\" FROM Posts AS a INNER JOIN Posts AS q ON q.Id = a.ParentId WHERE a.PostTypeId = 2 AND q.Tags LIKE '%<regex>%' AND (a.Body LIKE '<pre><code>%' OR a.Body LIKE '<p><code>%') AND LENGTH(a.Body) <= 100 GROUP BY a.Id, a.Score, a.Body ORDER BY a.Score DESC, LENGTH(a.Body)","CreationDate":"2013-05-01 20:32:20","validated":true,"QueryBody_Original":"SELECT \n  a.Id as [Post Link],\n  a.Score as [Answer Score],\n  LEN(a.Body) as [Answer Length],\n  a.Body as [Answer Body]\nFROM Posts a\nINNER JOIN Posts q \n  ON q.Id = a.ParentId\nWHERE\n  a.PostTypeId = 2 AND\n  q.Tags LIKE '%<regex>%' AND\n  (\n    a.Body LIKE '<pre><code>%' OR\n    a.Body LIKE '<p><code>%'\n  ) AND\n  LEN(a.Body) <= 100\nGROUP BY\n  a.Id, a.Score, a.Body\nORDER BY\n  a.Score DESC,\n  LEN(a.Body) ASC"},{"QuerySetId":111447,"Title":"Highest Voted Comments on Questions","Description":null,"QueryBody":"SELECT c.Score, c.Text, c.Id AS \"Comment Link\" FROM Comments AS c INNER JOIN Posts AS q ON q.Id = c.PostId WHERE q.PostTypeId = 1 GROUP BY c.Score, c.Text, c.Id ORDER BY c.Score DESC LIMIT 100","CreationDate":"2013-05-03 4:28:53","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  c.Score, c.Text, c.Id as [Comment Link] \nFROM Comments c\nINNER JOIN Posts q ON\n  q.Id = c.PostId\nWHERE\n  q.PostTypeId = 1\nGROUP BY\n  c.Score, c.Text, c.Id\nORDER BY c.Score DESC"},{"QuerySetId":112219,"Title":"Pundit badge: How many of my comments have a score of 5 or more?","Description":"Shows the number of comments with a score of 5 or more and the percentages of all comments.","QueryBody":"SELECT COUNT(CASE WHEN Score >= 5 THEN 1 ELSE 0 END) AS \"Count\", (COUNT(CASE WHEN Score >= 5 THEN 1 ELSE 0 END) * 100 \/ COUNT(*)) AS \"Percentage of all\" FROM Comments WHERE UserId = @UserId","CreationDate":"2013-05-05 14:24:02","validated":true,"QueryBody_Original":"SELECT COUNT(CASE WHEN\n                 Score >= 5 THEN 1\n                                    ELSE 0\n               END) [Count],\n         (COUNT(CASE WHEN\n                  Score >= 5 THEN 1\n                                     ELSE 0\n                END) * 100 \/ COUNT(*)) [Percentage of all]\n    FROM Comments\n   WHERE UserId = @UserId"},{"QuerySetId":114416,"Title":"Number of Posts with Greater than 10 comments","Description":null,"QueryBody":"SELECT p.id, p.creationdate, COUNT(*) AS CommentCount FROM posts AS p INNER JOIN Comments AS c ON c.PostId = p.Id GROUP BY p.id, p.title, p.creationdate, CommentCount HAVING CommentCount > 10 ORDER BY commentcount DESC","CreationDate":"2019-03-11 21:52:22","validated":true,"QueryBody_Original":"SELECT  p.id, p.creationdate, Count(*) as CommentCount from posts p inner join Comments c on c.PostId = p.Id group by p.id, p.title, p.creationdate, CommentCount having CommentCount > 10 order by commentcount desc"},{"QuerySetId":114521,"Title":"Search comments on unanswered posts","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, c.Text FROM Posts AS p INNER JOIN Comments AS c ON c.PostId = p.Id WHERE c.Text LIKE '%homework%' AND p.AnswerCount = 0 AND p.Score = 0 ORDER BY CreationDate LIMIT 500","CreationDate":"2013-05-16 6:44:49","validated":true,"QueryBody_Original":"SELECT  TOP 500 p.Id AS [Post Link], p.CreationDate, c.Text FROM Posts p\nINNER JOIN Comments c \nON c.PostId = p.Id\nWHERE c.Text LIKE '%homework%' AND p.AnswerCount=0 AND p.Score=0\nORDER BY CreationDate ASC"},{"QuerySetId":116329,"Title":"Users with Location by Reputation","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location <> '' ORDER BY Reputation DESC","CreationDate":"2013-05-27 0:19:10","validated":true,"QueryBody_Original":"SELECT  * FROM Users WHERE Location != '' ORDER BY Reputation DESC"},{"QuerySetId":116702,"Title":"attempting to measure votiness over time","Description":null,"QueryBody":"SELECT CAST(FLOOR(CAST(p.creationdate AS FLOAT) \/ 7.0) * 7 AS DATETIME) AS postweek, SUM(CASE WHEN v.votetypeid = 2 THEN 1 ELSE 0 END) * 1.0 \/ COUNT(DISTINCT postid) AS upvotes_per_question FROM votes AS v INNER JOIN posts AS p ON \/* vote during first week of post *\/ p.id = v.postid AND \/* vote during first week of post *\/ FLOOR(CAST(v.creationdate AS FLOAT) \/ 7.0) = FLOOR(CAST(p.creationdate AS FLOAT) \/ 7.0) \/* vote during first week of post *\/ WHERE p.posttypeid = 1 GROUP BY CAST(FLOOR(CAST(p.creationdate AS FLOAT) \/ 7.0) * 7 AS DATETIME) ORDER BY postweek","CreationDate":"2013-05-29 9:58:26","validated":true,"QueryBody_Original":"SELECT \n    cast(floor(cast(p.creationdate as float)\/7.0)*7 as datetime) as postweek\n    ,sum(case when v.votetypeid = 2 then 1 else 0 end) * 1.0\n    \/ count(distinct postid) as upvotes_per_question\nfrom votes v\ninner join posts p\non\n      p.id = v.postid\n  and floor(cast(v.creationdate as float)\/7.0)\n    = floor(cast(p.creationdate as float)\/7.0) -- vote during first week of post\nwhere p.posttypeid = 1\ngroup by cast(floor(cast(p.creationdate as float)\/7.0)*7 as datetime)\norder by postweek"},{"QuerySetId":117890,"Title":"Questions of past 30 days that got an accepted answer with negative score. Excludes self-provided accepts.","Description":"Excludes self-provided accepts.","QueryBody":"SELECT q.Id AS \"Post Link\", q.Score AS QuestionScore, a.Score AS AcceptedAnswerScore FROM Posts AS q JOIN Posts AS a ON a.Id = q.AcceptedAnswerId WHERE q.PostTypeId = 1 AND a.Score < 0 AND q.OwnerUserId <> a.OwnerUserId AND DATEDIFF(CURRENT_TIMESTAMP(), q.CreationDate) < 30 ORDER BY AcceptedAnswerScore","CreationDate":"2013-06-05 3:20:03","validated":true,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.Score as QuestionScore,\n       a.Score as AcceptedAnswerScore\nfrom Posts q\njoin Posts a on a.Id = q.AcceptedAnswerId\nwhere q.PostTypeId = 1\n  and a.Score < 0\n  and q.OwnerUserId <> a.OwnerUserId\n  and datediff(d, q.CreationDate, getdate()) < 30\norder by AcceptedAnswerScore asc"},{"QuerySetId":119943,"Title":"Top 30 Users with most upvotes","Description":"Top 20 Users with most upvotes\/day to their answers to\nnon-CW posts in the last 30 days","QueryBody":"SELECT SUM(UpVotes) AS upv, SUM(DownVotes) AS downv FROM Users ORDER BY upv DESC LIMIT 30","CreationDate":"2017-05-04 16:45:43","validated":true,"QueryBody_Original":"SELECT  TOP 30\n  SUM(UpVotes) as upv,\n  SUM(DownVotes) as downv\nFROM Users\nORDER BY upv DESC;"},{"QuerySetId":120018,"Title":"Days users have been members for","Description":null,"QueryBody":"SELECT CAST(LastAccessDate - CreationDate AS INT) AS days, COUNT(*) FROM users WHERE CAST(LastAccessDate - CreationDate AS INT) > 5 GROUP BY CAST(LastAccessDate - CreationDate AS INT) ORDER BY 1","CreationDate":"2013-06-13 21:29:29","validated":true,"QueryBody_Original":"SELECT \n  Convert(int, LastAccessDate - CreationDate) as days,\n  count(*)\nfrom users\nwhere Convert(int, LastAccessDate - CreationDate) > 5\ngroup by Convert(int, LastAccessDate - CreationDate)\norder by 1"},{"QuerySetId":120562,"Title":"Questions that were initially tagged \"books\"","Description":null,"QueryBody":"SELECT DISTINCT Score, PostId AS \"Post Link\" FROM PostHistory INNER JOIN Posts ON Posts.Id = PostId WHERE PostHistoryTypeId IN (3, 6) AND Text LIKE '%<books>%' ORDER BY Score DESC","CreationDate":"2013-06-17 0:17:16","validated":true,"QueryBody_Original":"SELECT  distinct Score, PostId as [Post Link] from PostHistory\ninner join Posts on Posts.Id = PostId\nwhere PostHistoryTypeId IN (3, 6) and Text like '%<books>%'\norder by Score desc"},{"QuerySetId":120564,"Title":"Questions that were once tagged \"books\"","Description":null,"QueryBody":"SELECT DISTINCT Score, PostId AS \"Post Link\" FROM PostHistory INNER JOIN Posts ON Posts.Id = PostId WHERE PostHistoryTypeId IN (3, 6) AND Text LIKE '%books%' ORDER BY Score DESC","CreationDate":"2013-06-17 12:13:42","validated":true,"QueryBody_Original":"SELECT  distinct Score, PostId as [Post Link] from PostHistory\ninner join Posts on Posts.Id = PostId\nwhere PostHistoryTypeId IN (3, 6) and Text like '%books%'\norder by Score desc"},{"QuerySetId":120934,"Title":"Users with lots and lots of answers","Description":null,"QueryBody":"SELECT a.OwnerUserId AS \"User Link\", COUNT(*) AS answer_count FROM Posts AS a INNER JOIN Posts AS q ON q.Id = a.ParentId WHERE a.PostTypeId = 2 GROUP BY a.OwnerUserId HAVING COUNT(*) > 5000 ORDER BY answer_count DESC","CreationDate":"2013-06-19 23:55:30","validated":true,"QueryBody_Original":"SELECT  a.OwnerUserId as [User Link],\ncount(*) as answer_count\nfrom Posts a\ninner join Posts q on q.Id = a.ParentId\nwhere a.PostTypeId = 2\ngroup by a.OwnerUserId\nhaving count(*) > 5000\norder by answer_count desc"},{"QuerySetId":121893,"Title":"users eligible to nominate themselves for moderator elections.","Description":null,"QueryBody":"SELECT DisplayName, Reputation FROM Users WHERE Reputation > 300 ORDER BY Reputation DESC","CreationDate":"2013-06-25 21:56:11","validated":true,"QueryBody_Original":"SELECT  DisplayName, Reputation\n FROM Users\n WHERE Reputation > 300\nORDER BY Reputation DESC"},{"QuerySetId":123493,"Title":"Top Users From The Philippines","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%philippines%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2013-07-09 12:07:37","validated":true,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n      LOWER(Location) LIKE '%philippines%'\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":126439,"Title":"Highest bounties on other answers","Description":null,"QueryBody":"SELECT Votes.UserId AS \"User Link\", SUM(BountyAmount) AS TotalBounty FROM Votes RIGHT JOIN Posts ON Posts.Id = Votes.PostId WHERE Posts.OwnerUserId <> Votes.UserId GROUP BY Votes.UserId ORDER BY TotalBounty DESC LIMIT 50","CreationDate":"2013-07-30 2:06:13","validated":true,"QueryBody_Original":"SELECT  TOP(50)\n  Votes.UserId AS [User Link], SUM(BountyAmount) AS TotalBounty FROM Votes\n  RIGHT JOIN Posts ON Posts.Id = Votes.PostId\n  WHERE Posts.OwnerUserId != Votes.UserId\n  GROUP BY Votes.UserId\n  ORDER BY TotalBounty DESC;"},{"QuerySetId":127561,"Title":"The number of users eligible to review suggested edits vs users eligible to review close votes","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM users WHERE reputation >= 2000) AS se_reviewer, (SELECT COUNT(*) AS cv_count FROM users WHERE reputation >= 3000) AS cv_reviewer","CreationDate":"2013-08-07 12:47:12","validated":true,"QueryBody_Original":"SELECT  \n(SELECT count(*)\n from users\n where reputation >= 2000\n) as se_reviewer,\n(SELECT count(*) as cv_count\n from users\n where reputation >= 3000\n) as cv_reviewer"},{"QuerySetId":133094,"Title":"Top Stack Overflow users from Belgium","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, Location FROM Users WHERE Location LIKE '%Belgium%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2014-11-25 23:24:39","validated":true,"QueryBody_Original":"SELECT  Top 100 Id, DisplayName, Reputation, Location From Users Where Location Like '%Belgium%' Order By Reputation Desc"},{"QuerySetId":136377,"Title":"Top 20 posts in a week","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, Score FROM Posts WHERE Posts.CreationDate > CURRENT_TIMESTAMP() - 7 ORDER BY Score DESC LIMIT 20","CreationDate":"2013-09-09 20:57:52","validated":true,"QueryBody_Original":"SELECT  TOP 20 \n    Id as [Post Link],\n    Title, Score\nFROM Posts\nWHERE \n    Posts.CreationDate > GETDATE() - 7\nORDER BY Score DESC;"},{"QuerySetId":137129,"Title":"Time between a User Registeration and First Post","Description":null,"QueryBody":"SELECT MIN(a.UserId) AS UserId, MIN(a.RegisterdDate) AS RegisteredDate, MIN(a.FirstQuestion) AS FirstQuestion FROM (SELECT a.Id AS UserId, a.CreationDate AS RegisterdDate, b.CreationDate AS FirstQuestion FROM Users AS a JOIN Posts AS b ON a.Id = b.OwnerUserId WHERE b.PostTypeId = 1) AS a GROUP BY a.UserId ORDER BY a.UserId","CreationDate":"2013-09-13 11:08:29","validated":true,"QueryBody_Original":"SELECT  min(a.UserId) as UserId,min(a.RegisterdDate) as RegisteredDate\n,min(a.FirstQuestion) as FirstQuestion from \n(SELECT a.Id as UserId,a.CreationDate as RegisterdDate, b.CreationDate\nas FirstQuestion from Users a Join Posts b on a.Id=b.OwnerUserId \nwhere b.PostTypeId=1) a group by a.UserId order by a.UserId"},{"QuerySetId":139329,"Title":"Percentage of Answers that have been accepted","Description":null,"QueryBody":"SELECT u.Displayname AS Name, COUNT(*) AS TotalAns, AccAns, ROUND(((AccAns + 0.0) \/ COUNT(*) + 0.0), 2) AS PercAcc, u.Reputation AS Rep, a.OwnerUserId FROM Posts AS a JOIN Users AS u ON a.OwnerUserId = u.Id LEFT JOIN (SELECT COUNT(*) AS AccAns, t.OwnerUserId FROM Posts AS t WHERE t.Id IN (SELECT AcceptedAnswerId FROM Posts) GROUP BY t.OwnerUserId) AS t2 ON t2.OwnerUserId = a.OwnerUserId WHERE PostTypeID = 2 GROUP BY a.OwnerUserID, u.Displayname, u.Reputation, AccAns ORDER BY Rep DESC","CreationDate":"2013-09-27 20:32:13","validated":true,"QueryBody_Original":"SELECT\nu.Displayname AS Name, \nCOUNT(*) AS TotalAns,\nAccAns,\nROUND(((AccAns+0.0) \/ COUNT(*)+0.0),2) AS PercAcc,\nu.Reputation AS Rep,\na.OwnerUserId\nFROM Posts AS a \n  JOIN Users AS u ON a.OwnerUserId = u.Id\n  LEFT JOIN \n      (\n       SELECT COUNT(*) AS AccAns, t.OwnerUserId\n       FROM Posts AS t\n       WHERE t.Id IN (SELECT AcceptedAnswerId FROM Posts)\n       GROUP BY t.OwnerUserId\n      ) AS t2 ON t2.OwnerUserId=a.OwnerUserId\nWHERE PostTypeID = 2\nGROUP BY a.OwnerUserID, u.Displayname, u.Reputation, AccAns\nORDER BY Rep DESC"},{"QuerySetId":144580,"Title":"find tags with tag dot tag not dot","Description":null,"QueryBody":"SELECT t.tagname, t2.tagname FROM tags AS t, tags AS t2 WHERE t.tagname = REPLACE(t2.tagname, '.', '') AND t.id <> t2.id","CreationDate":"2013-10-26 14:53:48","validated":true,"QueryBody_Original":"SELECT  t.tagname , t2.tagname\nfrom tags t\n, tags t2\nwhere t.tagname = replace(t2.tagname, '.', '')\nand t.id <> t2.id"},{"QuerySetId":148238,"Title":"View top 100 questions sorted by answers count","Description":null,"QueryBody":"SELECT p1.Id AS \"Post Link\", COUNT(p2.Id) AS AnswerCount FROM Posts AS p1 INNER JOIN Posts AS p2 ON p2.ParentId = p1.Id GROUP BY p1.Id ORDER BY AnswerCount DESC LIMIT 100","CreationDate":"2013-11-17 18:09:17","validated":true,"QueryBody_Original":"SELECT  Top 100 p1.Id As [Post Link], Count(p2.Id) As AnswerCount\nFrom Posts p1 Inner Join Posts p2 On p2.ParentId=p1.Id\nGroup By p1.Id\nOrder By AnswerCount Desc"},{"QuerySetId":151573,"Title":"Posts with Favorites and 4 Delete Votes this Month","Description":null,"QueryBody":"SELECT V.PostId, P.OwnerUserId AS \"User Link\", P.Title, P.Body FROM VOTES AS V, Posts AS P WHERE V.VoteTypeId = 10 AND DATEDIFF(CURRENT_TIMESTAMP(), V.CreationDate) < 1 AND P.Id = V.PostId AND NOT P.FavoriteCount IS NULL AND (SELECT COUNT(V2.PostId) FROM VOTES AS V2 WHERE V.VoteTypeId = 10 AND V2.PostId = P.Id) = 4 GROUP BY V.PostId, P.OwnerUserId, P.Title, P.Body","CreationDate":"2017-12-08 7:23:27","validated":true,"QueryBody_Original":"SELECT  V.PostId, P.OwnerUserId as [User Link], P.Title, P.Body\nFROM VOTES V, Posts P\nWHERE V.VoteTypeId = 10\nAND DATEDIFF(month, V.CreationDate, GETDATE() ) < 1\nAND P.Id = V.PostId\nAND P.FavoriteCount is not NULL\nAND (SELECT Count(V2.PostId) FROM VOTES V2 WHERE V.VoteTypeId = 10 AND V2.PostId = P.Id) = 4 \nGROUP BY V.PostId, P.OwnerUserId, P.Title, P.Body"},{"QuerySetId":151943,"Title":"Top users based on the number of 0-score answers","Description":null,"QueryBody":"SELECT DISTINCT OwnerUserId AS \"User Link\", COUNT(Id) AS \"Answers Count\" FROM Posts WHERE PostTypeId = 1 AND Score = 0 GROUP BY OwnerUserId ORDER BY 2 DESC","CreationDate":"2013-12-05 21:25:52","validated":true,"QueryBody_Original":"SELECT  DISTINCT OwnerUserId AS [User Link], COUNT (Id) AS [Answers Count] FROM Posts\nWHERE PostTypeId = 1 AND Score = 0\nGROUP BY OwnerUserId\nORDER BY 2 DESC"},{"QuerySetId":152453,"Title":"Questions average views over the years","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS year, SUM(CAST(viewcount AS INT)) \/ COUNT(id) AS average_views FROM posts GROUP BY YEAR(creationdate)","CreationDate":"2018-06-20 21:06:17","validated":true,"QueryBody_Original":"SELECT  year(creationdate) as year, \nsum(cast(viewcount as bigint)) \/ count(id) as average_views\nfrom posts\ngroup by year(creationdate)"},{"QuerySetId":152697,"Title":"Reputation List: Choose a location","Description":"List of users by reputation score by location.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation, LastAccessDate, Age \/* WebsiteUrl as \"Website URL\", *\/ FROM Users WHERE LENGTH(Location) > 1 AND LOWER(Location) LIKE LOWER('%##Location##%') ORDER BY Reputation DESC","CreationDate":"2013-12-13 16:59:29","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Location,\n    Reputation,\n    LastAccessDate,\n    --WebsiteUrl as \"Website URL\",\n    Age\n    \nFROM\n    Users\n    \nWHERE\n\n  LEN(Location) > 1  and\n  \n  -- for a case-sensitive search\n  --Location LIKE '%##Location##%' and\n  \n  -- for a looser search\n  LOWER(Location) LIKE lower('%##Location##%')\n  \n--  and  Reputation >= ##minimumReputation##\n    \nORDER BY Reputation DESC"},{"QuerySetId":153001,"Title":"Questioner Never Returned To See","Description":null,"QueryBody":"SELECT Posts.Id, Posts.CreationDate, Users.Id, Users.LastAccessDate, Posts.CreationDate - Users.LastAccessDate AS TimeUnits FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 1 ORDER BY Users.LastAccessDate LIMIT 100","CreationDate":"2013-12-11 19:54:33","validated":true,"QueryBody_Original":"SELECT  top(100) Posts.Id, Posts.CreationDate, Users.Id, Users.LastAccessDate,  Posts.CreationDate - Users.LastAccessDate as TimeUnits\nFROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id\nWHERE Posts.PostTypeId = 1\nORDER BY Users.LastAccessDate"},{"QuerySetId":153635,"Title":"Posts that link to other sites","Description":null,"QueryBody":"SELECT p.ID, p.PostTypeId, p.Score FROM Posts AS p WHERE p.Score > 1 AND p.PostTypeId = 1 AND p.Body LIKE '%judaism%'","CreationDate":"2015-02-10 11:05:01","validated":true,"QueryBody_Original":"SELECT  p.ID, p.PostTypeId, p.Score from Posts p where p.Score > 1 and p.PostTypeId = 1 and  p.Body LIKE '%judaism%' ;"},{"QuerySetId":153876,"Title":"User List: UpVotes by percentage","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, UpVotes, DownVotes, ROUND(CAST(UpVotes AS FLOAT) \/ (UpVotes + DownVotes) * 100, 2) AS UpVotesPCT FROM Users ORDER BY UpVotesPCT DESC, Reputation DESC LIMIT 300","CreationDate":"2013-12-19 11:16:47","validated":true,"QueryBody_Original":"SELECT  Top 300\n    Id as [User Link],\n    Reputation,\n    UpVotes,\n    DownVotes,\n    ROUND(CAST(UpVotes AS float) \/ (UpVotes + DownVotes) * 100, 2) as UpVotesPCT\n\nFROM Users\n\nORDER BY UpVotesPCT DESC, Reputation DESC"},{"QuerySetId":154995,"Title":"Comments asking for the age of the house","Description":null,"QueryBody":"SELECT postid AS \"Post Link\", text FROM comments WHERE LOWER(text) LIKE '%what%age%house%?%' OR LOWER(text) LIKE '%how%old%house%?%'","CreationDate":"2013-12-21 11:53:59","validated":true,"QueryBody_Original":"SELECT  \n    postid as [Post Link], text from comments\nwhere\n    lower(text) like '%what%age%house%?%' or\n    lower(text) like '%how%old%house%?%'"},{"QuerySetId":155428,"Title":"Site Info: Score - Post Count","Description":null,"QueryBody":"SELECT Score, COUNT(Score) AS count FROM Posts GROUP BY Score ORDER BY Score","CreationDate":"2013-12-22 22:59:14","validated":true,"QueryBody_Original":"SELECT  Score, COUNT(Score) AS count\n\nFROM Posts\n\nGROUP BY Score ORDER BY Score"},{"QuerySetId":155679,"Title":"Time interval from question being posted to appearance of the accepted answer","Description":null,"QueryBody":"SELECT q.Id, MIN(DATEDIFF(a.CreationDate, q.CreationDate)) AS \"TimeInterval\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id AND a.Id = q.AcceptedAnswerID GROUP BY q.Id ORDER BY q.Id","CreationDate":"2013-12-23 13:32:55","validated":true,"QueryBody_Original":"SELECT  q.Id, \n       min(datediff(minute, q.CreationDate, a.CreationDate))\n       as [TimeInterval] \n       from Posts q\n  inner join Posts a on a.ParentId=q.Id and a.Id = q.AcceptedAnswerID\ngroup by q.Id\norder by q.Id asc"},{"QuerySetId":157085,"Title":"Average days to close a question in 2013","Description":null,"QueryBody":"SELECT CEIL(DATEDIFF(ClosedDate, CreationDate) \/ 24) AS DaysToClose, COUNT(*) AS QuestionCount FROM Posts WHERE PostTypeId = 1 AND CreationDate BETWEEN '2013-01-01' AND '2013-12-31' AND NOT ClosedDate IS NULL GROUP BY CEIL(DATEDIFF(ClosedDate, CreationDate) \/ 24)","CreationDate":"2013-12-31 20:45:25","validated":true,"QueryBody_Original":"SELECT       CEILING( DATEDIFF( HOUR, CreationDate, ClosedDate ) \/ 24 ) AS DaysToClose\n        ,   COUNT(*) AS QuestionCount\nFROM        Posts\nWHERE       PostTypeId = 1\n        AND CreationDate BETWEEN '2013-01-01' AND '2013-12-31'\n        AND NOT ClosedDate IS NULL\nGROUP BY    CEILING( DATEDIFF( HOUR, CreationDate, ClosedDate ) \/ 24 )"},{"QuerySetId":158544,"Title":"Number of answers for questions with an accepted answer","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.ViewCount AS \"Views\", Posts.AnswerCount AS \"# Answers\" FROM Posts WHERE PostTypeID = 1 \/* questions *\/ AND NOT Posts.AcceptedAnswerId IS NULL \/* has accepted answer *\/ ORDER BY Posts.AnswerCount DESC","CreationDate":"2014-01-08 9:58:37","validated":true,"QueryBody_Original":"SELECT\n  Posts.Id as [Post Link],\n  Posts.ViewCount as [Views],\n  Posts.AnswerCount as [# Answers]\nFROM\n  Posts\nWHERE\n  PostTypeID = 1  -- questions\n  AND Posts.AcceptedAnswerId is not NULL -- has accepted answer\nORDER BY\n  Posts.AnswerCount DESC"},{"QuerySetId":159336,"Title":"Min, average, max, variance and standard deviation answer length per user < 10K rep.","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(*) AS \"Answer count\", MIN(LENGTH(p.Body)) AS \"Min\", AVG(LENGTH(p.Body)) AS \"Average\", MAX(LENGTH(p.Body)) AS \"Max\", VAR(LENGTH(p.Body)) AS \"Variance\", STDEV(LENGTH(p.Body)) AS \"StDev\" FROM Users AS u, Posts AS p WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 2 AND u.Reputation < 10000 GROUP BY u.Id ORDER BY \"Average\"","CreationDate":"2014-01-12 8:23:01","validated":true,"QueryBody_Original":"SELECT \n  u.Id AS [User Link],\n  Count(*) AS [Answer count],\n  Min(Len(p.Body)) AS [Min],\n  Avg(Len(p.Body)) AS [Average],\n  Max(Len(p.Body)) AS [Max],\n  Var(Len(p.Body)) AS [Variance],\n  Stdev(Len(p.Body)) AS [StDev]\nFROM Users u, Posts p\nWHERE p.OwnerUserId = u.Id\n  AND p.PostTypeId = 2\n  AND u.Reputation < 10000\nGROUP BY u.Id\nORDER BY [Average]"},{"QuerySetId":159366,"Title":"Positive score answers per month","Description":null,"QueryBody":"SELECT MONTH(CreationDate), COUNT(Id) FROM Posts WHERE Score > 0 GROUP BY MONTH(CreationDate) ORDER BY MONTH(CreationDate)","CreationDate":"2014-01-12 9:56:42","validated":true,"QueryBody_Original":"SELECT \nmonth(CreationDate), count(Id)\nfrom Posts\nwhere Score > 0\ngroup by month(CreationDate)\norder by month(CreationDate) asc"},{"QuerySetId":160064,"Title":"Top Active Answerers on site with more than 100 posts","Description":"Returns top answerers from a pool of people Active on the site.","QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName AS UserName, COUNT(Posts.Id) AS \"Total Posts\", RANK() OVER (ORDER BY (COUNT(Posts.Id)) DESC) AS \"Total Rank\", CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId IN (1, 2) GROUP BY Users.Id, Users.DisplayName HAVING COUNT(Posts.Id) > 100 ORDER BY \"Average Score\" DESC LIMIT 100","CreationDate":"2018-12-06 7:05:54","validated":true,"QueryBody_Original":"SELECT  \n    TOP 100\n    Users.Id AS [User Link],\n    Users.DisplayName AS UserName,\n    COUNT(Posts.Id) AS [Total Posts],\n    RANK() OVER (ORDER BY (COUNT(Posts.Id)) DESC) AS [Total Rank],\n    CAST(AVG(CAST(Score AS float)) AS NUMERIC(6,2)) AS [Average Score]    \nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId in (1,2)\nGROUP BY\n    Users.Id, Users.DisplayName\nHAVING\n    COUNT(Posts.Id) > 100\nORDER BY\n    [Average Score] DESC"},{"QuerySetId":162190,"Title":"Unanswered questions from users with reputation >= 100","Description":null,"QueryBody":"SELECT p.lastactivitydate AS \"Post Link\", p.creationdate, p.title, p.id, p.score, p.viewcount, p.answercount, p.tags, u.reputation FROM posts AS p, users AS u\/* and p.answercount = 0 *\/  WHERE p.owneruserid = u.id AND u.reputation >= 100 AND p.deletiondate IS NULL ORDER BY p.creationdate DESC LIMIT 100","CreationDate":"2020-10-08 19:52:42","validated":true,"QueryBody_Original":"SELECT  top 100 p.lastactivitydate as [Post Link], p.creationdate, p.title, p.id, p.score, p.viewcount, p.answercount, p.tags,\n  u.reputation\nfrom posts p, users u \nwhere p.owneruserid = u.id\n  \/* and p.answercount = 0 *\/\n  and u.reputation >= 100\n  and p.deletiondate is null\norder by p.creationdate desc\n"},{"QuerySetId":166950,"Title":"Site-wide average score per post per month and post type id","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS \"Year\", MONTH(CreationDate) AS \"Month\", PostTypeId AS \"Post Type\", AVG(CAST(Score AS FLOAT)) AS \"Average\", SUM(Score) AS \"Sum Score\", COUNT(Id) AS \"Post Count\" FROM Posts WHERE ClosedDate IS NULL AND CommunityOwnedDate IS NULL AND PostTypeId < 3 GROUP BY PostTypeId, YEAR(CreationDate), MONTH(CreationDate) ORDER BY Year, Month, PostTypeId","CreationDate":"2014-02-12 21:11:31","validated":true,"QueryBody_Original":"SELECT \n  Year(CreationDate) AS 'Year',\n  Month(CreationDate) AS 'Month',\n  PostTypeId AS 'Post Type',\n  AVG(CAST(Score  AS float)) AS 'Average',\n  SUM(Score) AS 'Sum Score',\n  Count(Id) AS 'Post Count'\nFROM Posts\nWHERE\n  ClosedDate IS NULL AND\n  CommunityOwnedDate IS NULL AND\n  PostTypeId < 3\nGROUP BY\n  PostTypeId,\n  Year(CreationDate),\n  Month(CreationDate)\nORDER BY\n  Year ASC,\n  Month ASC,\n  PostTypeId ASC"},{"QuerySetId":167731,"Title":"Stackoverflow Top 100 users from Banglore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kolkata%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2014-02-15 21:34:03","validated":true,"QueryBody_Original":"SELECT \nTOP (100) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kolkata%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":168352,"Title":"Find +1 comments ordered by length","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\" FROM Comments WHERE Text LIKE '+1%' ORDER BY LENGTH(Text) LIMIT 100","CreationDate":"2017-06-25 3:29:24","validated":true,"QueryBody_Original":"SELECT  TOP (100) Id AS [Comment Link]\nFROM Comments\nWHERE Text LIKE '+1%'\nORDER BY LEN(Text)"},{"QuerySetId":168925,"Title":"Top 1000 users from Colombia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%colombia%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2016-03-04 2:32:43","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%colombia%'  \nORDER BY\n    Reputation DESC;"},{"QuerySetId":169694,"Title":"Currently open questions with \"possible duplicate\" comments.","Description":null,"QueryBody":"SELECT Comments.PostId AS \"Post Link\", COUNT(*) AS \"Duplicate Count\" FROM Comments WHERE Comments.Text LIKE 'possible duplicate of%' AND (SELECT Posts.ClosedDate FROM Posts WHERE Id = Comments.PostId) IS NULL GROUP BY Comments.PostId ORDER BY \"Duplicate Count\" DESC","CreationDate":"2014-02-21 2:41:48","validated":true,"QueryBody_Original":"SELECT \n  Comments.PostId as [Post Link],\n  COUNT(*) as [Duplicate Count]\nFROM\n  Comments\nWHERE\n  Comments.Text LIKE 'possible duplicate of%' AND\n  (\n    SELECT Posts.ClosedDate FROM Posts\n    WHERE Id = Comments.PostId\n  ) IS NULL\nGROUP BY Comments.PostId\nORDER BY [Duplicate Count] DESC"},{"QuerySetId":169981,"Title":"Zero-answer zero-upvote unclosed questions with no recent updates since date","Description":null,"QueryBody":"SELECT p.Title, p.CreationDate, p.LastActivityDate, p.Tags, 'http:\/\/stackoverflow.com\/questions\/' + CAST(p.Id AS TEXT(50)) AS Link FROM Posts AS p LEFT JOIN PostLinks AS l ON l.PostId = p.Id LEFT JOIN Votes AS v ON p.Id = v.PostId WHERE p.PostTypeId = 1 \/* Question *\/ AND p.AnswerCount = 0 AND p.Score <= 0 AND l.Id IS NULL AND v.Id IS NULL AND p.ClosedDate IS NULL AND p.LastActivityDate <= '##NoActivitySince##'","CreationDate":"2014-02-24 12:22:55","validated":true,"QueryBody_Original":"SELECT  p.Title, p.CreationDate, p.LastActivityDate, p.Tags,\n'http:\/\/stackoverflow.com\/questions\/' + cast(p.Id as varchar(50)) as Link\nfrom Posts p\nleft join PostLinks l on l.PostId = p.Id\nleft join Votes v on p.Id = v.PostId\nwhere\n  p.PostTypeId = 1 -- Question\n  and p.AnswerCount = 0\n  and p.Score <= 0\n  and l.Id is null\n  and v.Id is null\n  and p.ClosedDate is null\n  and p.LastActivityDate <= '##NoActivitySince##'"},{"QuerySetId":172450,"Title":"Users with the Most Bounty Offers","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", MIN(u.Reputation) AS rep, SUM(v.BountyAmount) AS totalamount, COUNT(*) AS bountycount FROM Users AS u INNER JOIN Votes AS v ON u.Id = v.UserId INNER JOIN Posts AS p ON v.PostId = p.Id WHERE v.VoteTypeId = 8 AND p.PostTypeId = 1 AND p.OwnerUserId <> u.Id GROUP BY u.Id ORDER BY totalamount DESC","CreationDate":"2015-12-05 17:58:19","validated":true,"QueryBody_Original":"SELECT u.Id as [User Link], MIN(u.Reputation) AS rep,SUM(v.BountyAmount) AS totalamount,COUNT(*) AS bountycount\nFROM Users u INNER JOIN Votes v ON u.Id=v.UserId INNER JOIN Posts p ON v.PostId=p.Id\nWHERE v.VoteTypeId=8 AND p.PostTypeId=1 AND p.OwnerUserId!=u.Id\nGROUP BY u.Id\nORDER BY totalamount DESC"},{"QuerySetId":172492,"Title":"Downvoted -> edited -> upvoted after 2014","Description":null,"QueryBody":"SELECT COUNT(DISTINCT down.PostId) FROM Votes AS down JOIN PostHistory ON down.PostId = PostHistory.PostId AND PostHistory.CreationDate > down.CreationDate JOIN Votes AS up ON up.PostId = down.PostId AND up.CreationDate > PostHistory.CreationDate WHERE up.VoteTypeId = 2 AND down.VoteTypeId = 3 AND PostHistory.PostHistoryTypeId IN (4, 5, 6) AND PostHistory.CreationDate > '2014-1-1'","CreationDate":"2014-03-06 4:43:22","validated":true,"QueryBody_Original":"SELECT count(distinct down.PostId) from Votes as down\njoin PostHistory on\n  down.PostId = PostHistory.PostId and\n  PostHistory.CreationDate > down.CreationDate\njoin Votes as up on\n  up.PostId = down.PostId and\n  up.CreationDate > PostHistory.CreationDate\nwhere\n  up.VoteTypeId = 2 and\n  down.VoteTypeId = 3 and\n  PostHistory.PostHistoryTypeId IN (4, 5, 6) and\n  PostHistory.CreationDate > '2014-1-1'"},{"QuerySetId":173136,"Title":"Recently Active Users (within last 30 days) and Activity Level","Description":null,"QueryBody":"SELECT U.DisplayName, COUNT(P.Id) AS PostCount FROM Users AS U INNER JOIN Posts AS P ON P.OwnerUserID = U.Id WHERE P.CreationDate > GETUTCDATE() - 30 AND U.LastAccessDate > GETUTCDATE() - 30 AND P.PostTypeId = 2 \/* answers *\/ GROUP BY U.DisplayName ORDER BY PostCount DESC","CreationDate":"2015-06-03 14:36:11","validated":true,"QueryBody_Original":"SELECT  U.DisplayName, \n-- U.Reputation, U.LastAccessDate,\nCOUNT(P.Id) As PostCount\n     from Users as U\ninner join \n        Posts as P\nOn P.OwnerUserID=U.Id\n     \n        where P.CreationDate > GETUTCDATE()-30 and\n      U.LastAccessDate > GETUTCDATE()-30 and P.PostTypeId = 2 --answers\n\nGROUP BY U.DisplayName order by PostCount DESC;"},{"QuerySetId":173146,"Title":"Duplicate questions of deleted questions","Description":null,"QueryBody":"SELECT PostLinks.PostId AS \"Post Link\" FROM PostLinks WHERE PostLinks.LinkTypeId = 3 AND NOT (SELECT Posts.ID FROM Posts WHERE Posts.Id = PostLinks.PostId) IS NULL AND (SELECT Posts.Id FROM Posts WHERE Posts.Id = PostLinks.RelatedPostId) IS NULL GROUP BY PostLinks.PostId ORDER BY PostLinks.PostId","CreationDate":"2014-03-06 23:55:11","validated":true,"QueryBody_Original":"SELECT  PostLinks.PostId as [Post Link] FROM PostLinks\nWHERE\n  PostLinks.LinkTypeId = 3 AND\n  (SELECT Posts.ID FROM Posts WHERE Posts.Id = PostLinks.PostId) IS NOT NULL AND\n  (SELECT Posts.Id FROM Posts WHERE Posts.Id = PostLinks.RelatedPostId) IS NULL\nGROUP BY PostLinks.PostId\nORDER BY PostLinks.PostId"},{"QuerySetId":173779,"Title":"All questions marked as duplicates of your own questions","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT id FROM posts WHERE PostTypeId <> 1) AS T INNER JOIN (SELECT relatedpostid FROM postlinks WHERE postlinks.linktypeid = 1) AS T2 ON T.id = T2.RelatedPostId","CreationDate":"2016-04-18 4:44:05","validated":true,"QueryBody_Original":"SELECT  count(*) from\n(SELECT id from posts where PostTypeId <> 1) T\ninner join (SELECT relatedpostid from postlinks where postlinks.linktypeid = 1) T2\non T.id = T2.RelatedPostId;"},{"QuerySetId":173935,"Title":"Top stackoverflow users Sri lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Id) LIKE '%sri lanka%' ORDER BY Reputation DESC","CreationDate":"2014-03-11 15:51:00","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n     LOWER(Id) LIKE '%sri lanka%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":174125,"Title":"Top 50 Posts by score","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score FROM posts WHERE posttypeid = 2 ORDER BY score DESC LIMIT 50","CreationDate":"2014-03-12 22:18:47","validated":true,"QueryBody_Original":"SELECT  top 50 Id as [Post Link], Score from posts where posttypeid = 2 order by score desc"},{"QuerySetId":174851,"Title":"Accepted answers with score of 4 by <100 rep users","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId AND v.VoteTypeId = 1 INNER JOIN Users AS u ON p.OwnerUserId = u.Id AND u.Reputation < 100 WHERE p.Score = 4","CreationDate":"2014-03-17 16:32:11","validated":true,"QueryBody_Original":"SELECT   p.Id As [Post Link]\nFrom Posts p Inner Join Votes v On p.Id=v.PostId And v.VoteTypeId=1\n  Inner Join Users u On p.OwnerUserId=u.Id And u.Reputation<100\nWhere p.Score=4"},{"QuerySetId":179026,"Title":"Up and downvotes for site users","Description":null,"QueryBody":"SELECT DisplayName, Reputation, UpVotes, DownVotes, UpVotes + DownVotes AS TotalVotes, ROUND(UpVotes * 1.0 \/ (DownVotes + UpVotes) * 100.0, 1) AS UpvotePercentage FROM Users WHERE UpVotes + DownVotes > 0 ORDER BY ROUND(UpVotes * 1.0 \/ (DownVotes + UpVotes) * 100.0, 1)","CreationDate":"2014-03-28 2:50:42","validated":true,"QueryBody_Original":"SELECT  DisplayName, Reputation, UpVotes, DownVotes, UpVotes+DownVotes as TotalVotes, \nROUND(UpVotes*1.0\/(DownVotes+UpVotes)*100.0,1) as UpvotePercentage\nFROM Users\nWHERE UpVotes+DownVotes >0\nORDER BY ROUND(UpVotes*1.0\/(DownVotes+UpVotes)*100.0,1) asc"},{"QuerySetId":181546,"Title":"Comment Count to Score Ratio (Identifying Problematic Questions)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CommentCount \/ Score AS \"Comment to Score Ratio\", PostTypeId FROM Posts WHERE CommentCount > Score AND PostTypeId = 1 ORDER BY \"Comment to Score Ratio\" DESC LIMIT 100","CreationDate":"2014-04-08 4:04:48","validated":true,"QueryBody_Original":"SELECT  TOP 100 Id As [Post Link], CommentCount \/ Score AS [Comment to Score Ratio], PostTypeId\nFROM Posts\nWHERE CommentCount > Score AND PostTypeId = 1\nORDER BY [Comment to Score Ratio] Desc"},{"QuerySetId":183790,"Title":"Lists users in descending order of number of rollback edits they've done.","Description":"Lists users in descending order of number of rollback edits they've done.","QueryBody":"SELECT r.UserId AS \"User Link\", COUNT(*) AS \"Count\" FROM (SELECT h.UserId FROM PostHistory AS h WHERE h.PostHistoryTypeId IN (7, 8, 9) AND NOT h.UserId IS NULL GROUP BY h.UserId, h.RevisionGUID) AS r GROUP BY r.UserId ORDER BY 'Count' DESC","CreationDate":"2014-04-16 12:23:00","validated":true,"QueryBody_Original":"SELECT \n  r.UserId AS [User Link],\n  COUNT(*) AS 'Count'\nFROM (\n  SELECT\n    h.UserId\n  FROM\n    PostHistory h\n  WHERE\n    h.PostHistoryTypeId IN (7, 8, 9) AND\n    h.UserId IS NOT NULL\n  GROUP BY\n    h.UserId, h.RevisionGUID\n  ) r\nGROUP BY\n  r.UserId\nORDER BY\n  'Count' DESC"},{"QuerySetId":184008,"Title":"Analyse Number of Users Joining SO Over Time, Per Month and Year","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Number of Users\", TIME_TO_STR(\"CreationDate\", '%-mONT%-H') AS \"Month\", TIME_TO_STR(\"CreationDate\", '%YEAR') AS \"Year\" FROM USERS GROUP BY TIME_TO_STR(\"CreationDate\", '%YEAR'), TIME_TO_STR(\"CreationDate\", '%-mONT%-H') ORDER BY TIME_TO_STR(\"CreationDate\", '%YEAR'), TIME_TO_STR(\"CreationDate\", '%-mONT%-H')","CreationDate":"2014-04-17 12:24:04","validated":true,"QueryBody_Original":"SELECT    COUNT(*) AS 'Number of Users'\n        ,DATEPART(MONTH, [CreationDate]) AS 'Month'\n        ,DATEPART(YEAR, [CreationDate]) AS 'Year'\nFROM    USERS\nGROUP BY DATEPART(YEAR, [CreationDate]), DATEPART(MONTH, [CreationDate])\nORDER BY DATEPART(YEAR, [CreationDate]), DATEPART(MONTH, [CreationDate])"},{"QuerySetId":184010,"Title":"Activity of SO Users with Time (Advanced)","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Users Joined\", (SELECT COUNT(ID) AS \"UsersStillActive\" FROM USERS WHERE ARRAY(LastAccessDate) > DATEADD(MONTH, -1, GETDATE())), DATEPART(MONTH, ARRAY(CreationDate)) AS \"Month\", DATEPART(YEAR, ARRAY(CreationDate)) AS \"Year\" FROM USERS GROUP BY DATEPART(YEAR, ARRAY(CreationDate)), DATEPART(MONTH, ARRAY(CreationDate)) ORDER BY DATEPART(YEAR, ARRAY(CreationDate)), DATEPART(MONTH, ARRAY(CreationDate))","CreationDate":"2014-04-17 12:59:21","validated":true,"QueryBody_Original":"SELECT    COUNT(*) As 'Users Joined'\n        ,(\n              SELECT COUNT(ID) AS 'UsersStillActive'\n              FROM    USERS\n              WHERE   [LastAccessDate] > DATEADD(MONTH, -1, GETDATE())\n        )\n        ,DATEPART(MONTH, [CreationDate]) AS 'Month'\n        ,DATEPART(YEAR, [CreationDate]) AS 'Year'\nFROM    USERS \nGROUP BY DATEPART(YEAR, [CreationDate]), DATEPART(MONTH, [CreationDate])\nORDER BY DATEPART(YEAR, [CreationDate]), DATEPART(MONTH, [CreationDate])"},{"QuerySetId":184405,"Title":"Set of Answerers and Answer Id","Description":null,"QueryBody":"SELECT p.parentId AS Question, p.OwnerUserId AS Answerer, COUNT(*) AS Upvotes FROM Posts AS p INNER JOIN Votes AS v ON v.PostId = p.Id AND v.VoteTypeId = 1 WHERE NOT p.ParentId IS NULL AND p.PostTypeId = 2 AND p.ParentId IN (SELECT p.Id AS Post FROM Posts AS p WHERE p.viewCount > 0 AND p.PostTypeId = 1) GROUP BY p.parentId, p.OwnerUserId","CreationDate":"2015-05-15 10:23:44","validated":true,"QueryBody_Original":"SELECT  p.parentId as Question, p.OwnerUserId as Answerer, COUNT(*) as Upvotes\nfrom Posts as p\n        INNER JOIN Votes as v ON  v.PostId = p.Id and \n                                  v.VoteTypeId = 1\nwhere\n      p.ParentId is not null and\n      p.PostTypeId = 2 and\n      p.ParentId in\n      (\n      SELECT p.Id as Post from Posts as p\n        where p.viewCount > 0 and p.PostTypeId=1) \ngroup by p.parentId, p.OwnerUserId"},{"QuerySetId":184820,"Title":"Greece 1000 with Row Number","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC) AS Place, Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Thess%' OR Location LIKE N'%Greece%' OR Location LIKE N'%Gr' OR (Location LIKE N'%Athens%' AND NOT Location LIKE N'%GA%') ORDER BY reputation DESC LIMIT 1000","CreationDate":"2014-04-21 18:54:47","validated":true,"QueryBody_Original":"\nSELECT TOP 1000\n   row_number() OVER (ORDER BY reputation DESC) Place ,\n   Id as [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Thess%'\n   OR Location like N'%Greece%'\n   OR Location like N'%Gr'\n   OR (Location like N'%Athens%' AND Location NOT like N'%GA%')\nORDER BY\n   reputation DESC"},{"QuerySetId":185070,"Title":"Users with similar name to Super*","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, Location, Id AS \"User Link\", CreationDate AS \"Creation Date\", DisplayName AS \"Name\", Reputation FROM Users WHERE DisplayName LIKE 'Super%'","CreationDate":"2014-04-22 18:47:12","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id, Location,\n    Id AS [User Link],\n    CreationDate AS [Creation Date],\n    DisplayName AS [Name],\n    Reputation\nFROM\n    Users\nWHERE\n    DisplayName like 'Super%'"},{"QuerySetId":190360,"Title":"Find posts with HTML links in them","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", PostTypeId, CreationDate FROM Posts WHERE (SELECT Text FROM PostHistory WHERE Id IN (SELECT MAX(Id) FROM PostHistory WHERE PostId = Posts.Id AND PostHistoryTypeId IN (2, 5, 8))) LIKE '%<a href=%' ORDER BY CreationDate DESC","CreationDate":"2014-05-06 17:10:11","validated":true,"QueryBody_Original":"SELECT  Id AS [Post Link],\n       PostTypeId,\n       CreationDate\n  FROM Posts\n  WHERE (\n    SELECT Text\n      FROM PostHistory\n      WHERE Id IN (\n        SELECT MAX(Id)\n          FROM PostHistory\n        WHERE PostId = Posts.Id\n          AND PostHistoryTypeId IN (2, 5, 8)\n      )\n  ) LIKE '%<a href=%'\n  ORDER BY CreationDate DESC"},{"QuerySetId":190364,"Title":"My comments, ordered by score (Pundit badge progress)","Description":"My Comments, ordered by Score 2\n","QueryBody":"SELECT Comments.Score, Comments.Id AS \"Comment Link\", Comments.CreationDate FROM Comments WHERE UserId = @UserId ORDER BY Comments.Score DESC","CreationDate":"2020-12-03 5:03:27","validated":true,"QueryBody_Original":"SELECT \n    Comments.Score,\n    Comments.Id as [Comment Link],\n    Comments.CreationDate\nFROM \n    Comments\nWHERE \n    UserId = @UserId\nORDER BY \n    Comments.Score DESC"},{"QuerySetId":193928,"Title":"Top 50 Highest Rep Users","Description":null,"QueryBody":"SELECT \"Reputation\", \"DisplayName\", \"UpVotes\", \"DownVotes\" FROM \"Users\" ORDER BY \"Reputation\" DESC LIMIT 50","CreationDate":"2014-05-13 15:46:55","validated":true,"QueryBody_Original":"SELECT  TOP 50\n   [Reputation]\n  ,[DisplayName]\n  ,[UpVotes]\n  ,[DownVotes]\nFROM [Users]\nORDER BY [Reputation] DESC"},{"QuerySetId":194561,"Title":"Number of closed questions per day for the last month","Description":null,"QueryBody":"SELECT TIME_TO_STR(ClosedDate, '%j') AS \"Day\", COUNT(*) AS \"Number of Closed Questions\" FROM Posts WHERE PostTypeId = 1 \/* question *\/ AND NOT ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), ClosedDate) < 30 GROUP BY TIME_TO_STR(ClosedDate, '%j') ORDER BY TIME_TO_STR(ClosedDate, '%j')","CreationDate":"2014-06-12 12:58:05","validated":true,"QueryBody_Original":"SELECT \n  datepart(dayofyear, ClosedDate) as [Day], \n  count(*) as [Number of Closed Questions]\nfrom Posts\nwhere PostTypeId = 1 -- question\n  and ClosedDate is not null\n  and datediff(day, ClosedDate, getdate()) < 30\ngroup by datepart(dayofyear, ClosedDate)\norder by datepart(dayofyear, ClosedDate)"},{"QuerySetId":195487,"Title":"Number of users that fall within a certain reputation level that have the Marshal Badge","Description":null,"QueryBody":"SELECT COUNT(U.Id) AS \"Number of users\" FROM users AS U JOIN badges AS B ON U.id = B.userid AND B.name = 'Marshal' WHERE u.reputation > 1 AND U.reputation < 2999","CreationDate":"2014-05-19 19:57:48","validated":true,"QueryBody_Original":"SELECT  count(U.Id) as 'Number of users'\nFROM  users U\nJOIN badges B ON U.id = B.userid and B.name='Marshal'\nWHERE u.reputation > 1\nAND U.reputation < 2999"},{"QuerySetId":196033,"Title":"Low post content with accepted answer","Description":null,"QueryBody":"SELECT Posts1.id AS \"Post Link\", Posts1.CreationDate AS CreationDate, Posts1.Score AS Score FROM Posts AS Posts1, Posts AS Posts2 WHERE Posts1.id = Posts2.AcceptedAnswerId AND Posts1.CreationDate > '2014-03-01 00:00:00' AND LENGTH(Posts1.BODY) < 300 AND Posts1.BODY LIKE '%http:\/\/stackoverflow.com\/questions\/%' ORDER BY Posts1.CreationDate DESC","CreationDate":"2014-05-21 2:38:58","validated":true,"QueryBody_Original":"SELECT  Posts1.id AS [Post Link], Posts1.CreationDate AS CreationDate, Posts1.Score AS Score\nFROM Posts Posts1, Posts Posts2\nWHERE Posts1.id = Posts2.AcceptedAnswerId\nAND Posts1.CreationDate > '2014-03-01 00:00:00'\nAND LEN(Posts1.BODY) < 300\nAND Posts1.BODY like '%http:\/\/stackoverflow.com\/questions\/%'\nORDER BY Posts1.CreationDate DESC"},{"QuerySetId":198581,"Title":"Users by type of first post","Description":null,"QueryBody":"SELECT Posts.OwnerUserId, Posts.Id, Posts.PostTypeId, Posts.ParentId, Posts.CreationDate, Users.Reputation, users.LastAccessDate FROM Posts, Users WHERE Posts.CreationDate = (SELECT MIN(CreationDate) FROM Posts AS p WHERE p.OwnerUserId = Posts.OwnerUserId) AND Posts.OwnerUserId = Users.Id ORDER BY Users.Reputation DESC","CreationDate":"2014-06-03 3:13:00","validated":true,"QueryBody_Original":"SELECT  Posts.OwnerUserId, Posts.Id, Posts.PostTypeId, Posts.ParentId, Posts.CreationDate, Users.Reputation, users.LastAccessDate\nfrom   Posts, Users\nwhere  Posts.CreationDate = (SELECT min(CreationDate) from Posts p where p.OwnerUserId = Posts.OwnerUserId) and Posts.OwnerUserId = Users.Id\norder by Users.Reputation desc"},{"QuerySetId":198637,"Title":"Search my answer posts by tag...","Description":null,"QueryBody":"SELECT Answer.Id AS \"Post Link\", Answer.Score AS \"Score\", Answer.CreationDate AS \"Creation Date\" FROM Posts AS Question LEFT JOIN Posts AS Answer ON Question.ID = Answer.ParentId WHERE Answer.OwnerUserId = @MyUserID AND Answer.PostTypeId IN (2, 3) AND NOT Question.Tags LIKE '%' + @Tag + '%' AND UPPER(Question.Body) LIKE '%' + @PostText + '%' ORDER BY Answer.Score","CreationDate":"2017-09-23 17:50:18","validated":true,"QueryBody_Original":"SELECT\n    Answer.Id AS [Post Link],\n    Answer.Score AS [Score],\n    Answer.CreationDate AS [Creation Date]\nFROM\n    Posts Question\nLEFT JOIN Posts Answer ON Question.ID = Answer.ParentId\nWHERE\n    Answer.OwnerUserId = @MyUserID AND\n    Answer.PostTypeId IN (2, 3) AND\n    Question.Tags NOT LIKE '%' + @Tag + '%' AND\n    UPPER(Question.Body) LIKE '%' + @PostText + '%'    \nORDER BY\n    Answer.Score\nASC"},{"QuerySetId":200150,"Title":"Comment Count by User Since May 1st, 2014","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS \"Comments\" FROM Comments WHERE CreationDate >= '2014-05-01' GROUP BY UserId ORDER BY COUNT(*) DESC","CreationDate":"2014-06-10 8:06:22","validated":true,"QueryBody_Original":"SELECT  UserId AS [User Link], COUNT(*) AS [Comments]\nFROM Comments\nWHERE CreationDate >= '2014-05-01'\nGROUP BY UserId\nORDER By COUNT(*) Desc"},{"QuerySetId":201463,"Title":"Unclosed, negative voted questions with no answers upvoted","Description":null,"QueryBody":"SELECT p.Id AS \"Post ID\", p.Id AS \"Post Link\" FROM Posts AS p WHERE (p.AcceptedAnswerID IS NULL AND NOT (p.ClosedDate IS NULL) AND p.Score < 0 AND NOT EXISTS(SELECT 1 FROM Posts AS aa WHERE aa.ParentId = p.Id AND aa.Score > 0)) ORDER BY p.Id","CreationDate":"2014-06-16 0:23:38","validated":true,"QueryBody_Original":"SELECT  p.Id AS [Post ID], p.Id AS [Post Link]\nFROM Posts as p \nWHERE\n(\n  p.AcceptedAnswerID IS NULL AND\n  NOT ( p.ClosedDate IS NULL ) AND\n  p.Score < 0 \n  AND\n  not exists ( SELECT 1 from Posts as aa where aa.ParentId = p.Id and aa.Score > 0)\n)\nORDER BY p.Id ASC"},{"QuerySetId":202499,"Title":"Which abandoned tags only have a single tagged post?","Description":null,"QueryBody":"SELECT TagName FROM Tags WHERE Count = 1 AND ExcerptpostId IS NULL AND WikiPostId IS NULL ORDER BY Id","CreationDate":"2014-06-19 8:35:52","validated":true,"QueryBody_Original":"SELECT  TagName\nFROM Tags\nWHERE Count = 1\n  and ExcerptpostId is null\n  and WikiPostId is null\nORDER BY Id"},{"QuerySetId":203713,"Title":"Average Reputation by Join Date (Month)","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS cYear, MONTH(CreationDate) AS cMonth, AVG(Reputation) AS avgRep FROM Users GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY 1, 2","CreationDate":"2014-06-23 17:32:03","validated":true,"QueryBody_Original":"SELECT  YEAR(CreationDate) as cYear, Month(CreationDate) cMonth, AVG(Reputation) as avgRep\nFROM Users\nGROUP BY YEAR(CreationDate), Month(CreationDate)\nORDER BY 1,2"},{"QuerySetId":203743,"Title":"Probability of having answers accepted in 2013 by Reputation (in Hundreds)","Description":null,"QueryBody":"SELECT Tot.Rep, Tot.TotalAnswers, Acc.AcceptedAnswers, (1.0 * Acc.AcceptedAnswers \/ Tot.TotalAnswers) FROM (SELECT Users.Reputation \/ 100 AS Rep, COUNT(Users.Id) AS TotalAnswers FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 AND YEAR(Posts.CreationDate) = 2013 GROUP BY Users.Reputation \/ 100) AS Tot JOIN (SELECT Users.Reputation \/ 100 AS Rep, COUNT(Users.Id) AS AcceptedAnswers FROM Posts AS A JOIN Posts AS B ON A.AcceptedAnswerId = B.Id AND YEAR(B.CreationDate) = 2013 JOIN Users ON Users.Id = B.OwnerUserId GROUP BY Users.Reputation \/ 100) AS Acc ON Tot.Rep = Acc.Rep ORDER BY 1","CreationDate":"2014-06-24 17:05:24","validated":true,"QueryBody_Original":"SELECT  Tot.Rep, Tot.TotalAnswers, Acc.AcceptedAnswers, (1.0 * Acc.AcceptedAnswers \/ Tot.TotalAnswers)\nFROM \n(SELECT Users.Reputation \/ 100 as Rep, COUNT(Users.Id) as TotalAnswers\nFROM Posts JOIN Users \n     ON Posts.OwnerUserId = Users.Id\nWHERE Posts.PostTypeId = 2 AND YEAR(Posts.CreationDate) = 2013\nGROUP BY Users.Reputation \/ 100) as Tot\nJOIN\n(SELECT Users.Reputation \/ 100 as Rep, COUNT(Users.Id) as AcceptedAnswers\nFROM Posts as A \n     JOIN \n     Posts as B\n     on A.AcceptedAnswerId = B.Id AND YEAR(B.CreationDate) = 2013\n     JOIN \n     Users \n     on Users.Id = B.OwnerUserId \n     GROUP BY Users.Reputation \/ 100) as Acc\nOn Tot.Rep = Acc.Rep\nORDER BY 1"},{"QuerySetId":203911,"Title":"Probability of having an answer accepted by Join Date","Description":null,"QueryBody":"SELECT (ACC.cYear - 2011) * 12 + ACC.cMonth AS Monthy, (1.0 * ACC.AccAnswers \/ TOT.TotAnswers) AS Percentage FROM (SELECT YEAR(Users.CreationDate) AS cYear, MONTH(Users.CreationDate) AS cMonth, COUNT(Users.Id) AS AccAnswers FROM Posts AS A JOIN Posts AS B ON A.AcceptedAnswerId = B.Id JOIN Users ON Users.Id = B.OwnerUserId GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate)) AS ACC JOIN (SELECT YEAR(Users.CreationDate) AS cYear, MONTH(Users.CreationDate) AS cMonth, COUNT(Users.Id) AS TotAnswers FROM Posts AS A JOIN Users ON Users.Id = A.OwnerUserId WHERE A.PostTypeId = 2 GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate)) AS TOT ON ACC.cYear = TOT.cYear AND ACC.cMonth = TOT.cMonth ORDER BY 1, 2","CreationDate":"2014-06-24 22:05:12","validated":true,"QueryBody_Original":"SELECT  (ACC.cYear - 2011) * 12 +  ACC.cMonth as Monthy, (1.0 * ACC.AccAnswers \/ TOT.TotAnswers) as Percentage\nFROM\n(SELECT YEAR(Users.CreationDate) as cYear, Month(Users.CreationDate) cMonth, COUNT(Users.Id) as AccAnswers\nFROM Posts as A \n     JOIN \n     Posts as B\n     on A.AcceptedAnswerId = B.Id \n     JOIN \n     Users \n     on Users.Id = B.OwnerUserId \n     GROUP BY YEAR(Users.CreationDate), Month(Users.CreationDate)) AS ACC\nJOIN \n(SELECT YEAR(Users.CreationDate) as cYear, Month(Users.CreationDate) cMonth, COUNT(Users.Id) as TotAnswers\nFROM Posts as A \n     JOIN \n     Users \n     on Users.Id = A.OwnerUserId \n     WHERE A.PostTypeId = 2\n     GROUP BY YEAR(Users.CreationDate), Month(Users.CreationDate)) AS TOT\nON ACC.cYear = TOT.cYear AND ACC.cMonth = TOT.cMonth\nORDER BY 1,2"},{"QuerySetId":204641,"Title":"Most prolific downvoters: Weighted downvote ratio","Description":"Corrected and improved version of \nhttp:\/\/data.stackexchange.com\/travel%20answers\/query\/153885\/votes-upvote-to-downvote-ratio","QueryBody":"SELECT Id AS \"User Link\", Reputation, UpVotes, DownVotes, ROUND(CAST(DownVotes AS FLOAT) \/ (UpVotes + Downvotes), 1) * Downvotes AS Weighted FROM Users WHERE DownVotes > 0 AND Id > -1 ORDER BY Weighted DESC LIMIT 50","CreationDate":"2014-06-27 21:54:20","validated":true,"QueryBody_Original":"SELECT  TOP 50\n  \n  Id as [User Link],\n  Reputation,\n  UpVotes,\n  DownVotes,\n  ROUND(CAST(DownVotes AS float) \/ (UpVotes + Downvotes) , 1) * Downvotes as Weighted\n  \n  FROM Users\n  WHERE DownVotes > 0 AND Id > -1\n  ORDER BY Weighted DESC"},{"QuerySetId":206384,"Title":"users with large number of questions without accepted answer","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", COUNT(p.OwnerUserId) AS numberOfQuestionsWithoutAcceptedAnswer FROM Posts AS p WHERE AcceptedAnswerId IS NULL AND PostTypeId = 1 GROUP BY p.OwnerUserId ORDER BY numberOfQuestionsWithoutAcceptedAnswer DESC LIMIT 500","CreationDate":"2014-07-05 0:04:54","validated":true,"QueryBody_Original":"SELECT  TOP 500\n    p.OwnerUserId AS [User Link],\n    COUNT(p.OwnerUserId) AS numberOfQuestionsWithoutAcceptedAnswer\nFROM\n    Posts AS p\nWHERE\n    AcceptedAnswerId IS NULL\n    AND PostTypeId = 1\nGROUP BY\n    p.OwnerUserId\nORDER BY\n    numberOfQuestionsWithoutAcceptedAnswer DESC"},{"QuerySetId":206553,"Title":"viewcounts for posts with a hihg score","Description":null,"QueryBody":"SELECT p.viewcount, CASE p.posttypeid WHEN 1 THEN 'Q' WHEN 2 THEN 'A' END AS QA, p.id AS \"Post Link\" FROM posts AS p WHERE p.score > 100 ORDER BY p.viewcount DESC","CreationDate":"2014-07-05 19:34:49","validated":true,"QueryBody_Original":"SELECT  p.viewcount\n, case p.posttypeid when 1 then 'Q' when 2 then 'A' end as QA\n, p.id as [Post Link]\nfrom posts p\nwhere p.score > 100\norder by  p.viewcount desc"},{"QuerySetId":209922,"Title":"Closed questions grouped by reputation of the asking user","Description":null,"QueryBody":"SELECT u.Reputation, COUNT(*) FROM Posts AS p INNER JOIN Users AS u ON u.Id = 1387233 WHERE NOT ClosedDate IS NULL GROUP BY u.Reputation ORDER BY u.Reputation","CreationDate":"2015-11-21 19:54:29","validated":true,"QueryBody_Original":"SELECT  u.Reputation, COUNT(*)\nFROM\n  Posts p\nINNER JOIN Users u ON u.Id = 1387233\nWHERE\n  ClosedDate IS NOT NULL\nGROUP BY u.Reputation\nORDER BY u.Reputation"},{"QuerySetId":210058,"Title":"Plots average answer score, +\/- 1 standard deviation, as a function of binned answer length. Splits data into accepted vs. not accepted answers before doing so.","Description":"Plots average answer score, +\/- 1 standard deviation, as a function of binned answer length. Splits data into accepted vs. not accepted answers before doing so.","QueryBody":"SELECT AVG(LENGTH(A.Body)) AS AverageLength, AVG(A.Score) AS AnswerScore, AVG(A.Score) + STDEV(A.Score) AS PlusOneSigma, AVG(A.Score) - STDEV(A.Score) AS MinusOneSigma FROM Posts AS A INNER JOIN Posts AS Q ON A.ParentID = Q.Id WHERE A.PostTypeId = 2 AND LENGTH(A.Body) <= 20000 AND A.Id = Q.AcceptedAnswerID GROUP BY ROUND(LENGTH(A.Body), -3) ORDER BY ROUND(LENGTH(A.Body), -3)","CreationDate":"2014-07-24 9:42:29","validated":true,"QueryBody_Original":"SELECT  AVG(LEN(A.Body)) as AverageLength,\n       AVG(A.Score) AS AnswerScore,\n       AVG(A.Score) + STDEV(A.Score) AS PlusOneSigma,\n       AVG(A.Score) - STDEV(A.Score) AS MinusOneSigma\nFROM Posts A INNER JOIN Posts Q ON A.ParentID = Q.Id\nWHERE A.PostTypeId = 2 AND\n      LEN(A.Body) <= 20000 AND\n      A.Id = Q.AcceptedAnswerID\nGROUP BY ROUND(LEN(A.Body), -3) ORDER BY ROUND(LEN(A.Body), -3)"},{"QuerySetId":210069,"Title":"Answer score as a function of question score. Plots average answer score, +\/- 1 standard deviation, as a function of binned question score.","Description":"Plots average answer score, +\/- 1 standard deviation, as a function of binned question score. Increase the Q.Score cutoff to see more exaggerated but noisier trends.","QueryBody":"SELECT AVG(Q.Score) AS QuestionScore, AVG(A.Score) AS AnswerScore, AVG(A.Score) + STDEV(A.Score) AS PlusOneSigma, AVG(A.Score) - STDEV(A.Score) AS MinusOneSigma FROM Posts AS A INNER JOIN Posts AS Q ON A.ParentId = Q.Id WHERE A.PostTypeId = 2 AND Q.Score <= 100 GROUP BY SIGN(Q.Score) * ROUND(SQRT(ABS(Q.Score) * 10), 0) ORDER BY SIGN(Q.Score) * ROUND(SQRT(ABS(Q.Score) * 10), 0)","CreationDate":"2014-07-24 10:18:52","validated":true,"QueryBody_Original":"SELECT  AVG(Q.Score) AS QuestionScore,\n       AVG(A.Score) AS AnswerScore,\n       AVG(A.Score) + STDEV(A.Score) AS PlusOneSigma,\n       AVG(A.Score) - STDEV(A.Score) AS MinusOneSigma\nFROM Posts A INNER JOIN Posts Q ON A.ParentId = Q.Id\nWHERE A.PostTypeId = 2 AND\n      Q.Score <= 100\nGROUP BY SIGN(Q.Score)*ROUND(SQRT(ABS(Q.Score)*10), 0) ORDER BY SIGN(Q.Score)*ROUND(SQRT(ABS(Q.Score)*10), 0)"},{"QuerySetId":210255,"Title":"Users from a given place ranked by Rep","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\", U.Location, U.Age, U.Reputation, SUM(U.\"Reputation\") \/ P.\"Number of Posts\" AS \"Average Reputation per Post\" FROM Users AS U JOIN (SELECT OwnerUserId, COUNT(*) AS \"Number of Posts\" FROM Posts GROUP BY OwnerUserId) AS P ON U.Id = P.OwnerUserId WHERE U.Location LIKE '%##Location##' GROUP BY U.Id, U.Location, U.Age, U.Reputation, P.\"Number of Posts\" ORDER BY U.Reputation DESC","CreationDate":"2014-09-23 15:52:12","validated":true,"QueryBody_Original":"SELECT \n  U.Id as [User Link], \n  U.Location,\n  U.Age,\n  U.Reputation,\n  SUM(U.[Reputation])\/P.[Number of Posts] AS [Average Reputation per Post]\nFROM\n  Users AS U\nJOIN\n  (\n    SELECT\n      OwnerUserId,\n      COUNT(*) AS [Number of Posts]\n    FROM\n      Posts\n    GROUP BY\n      OwnerUserId\n  ) AS P\nON\n  U.Id = P.OwnerUserId\nWHERE\n  U.Location LIKE '%##Location##'\nGROUP BY\n  U.Id, \n  U.Location,\n  U.Age,\n  U.Reputation,\n  P.[Number of Posts]\nORDER BY\n  U.Reputation DESC"},{"QuerySetId":210813,"Title":"Post Status by Subjective Title","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE PostTypeId = 1 AND title LIKE '%How do you%'","CreationDate":"2014-07-28 12:32:31","validated":true,"QueryBody_Original":"SELECT  count(*)\nfrom posts\nwhere PostTypeId = 1\nand title like '%How do you%'"},{"QuerySetId":211122,"Title":"Average answer length of a user","Description":"Queries for statistics related to the length of a given user's answers","QueryBody":"SELECT u.DisplayName, u.Reputation, COUNT(*) AS \"AnswerCount\", (SUM(p.Score) * 10 + COUNT(p.Id) * 15) \/ COUNT(p.Id) AS \"AvgRepPerAnswer\", MIN(LENGTH(p.Body)) AS \"MinCharPerAns\", AVG(LENGTH(p.Body)) AS \"AvgCharPerAns\", MAX(LENGTH(p.Body)) AS \"MaxCharPerAns\" FROM Users AS u INNER JOIN Posts AS p ON (u.Id = P.OwnerUserId) WHERE p.PostTypeId = 2 GROUP BY u.DisplayName, u.Reputation ORDER BY AVG(LENGTH(p.Body)) DESC LIMIT 250","CreationDate":"2014-08-11 14:17:05","validated":true,"QueryBody_Original":"SELECT  TOP 250\n  u.DisplayName,\n  u.Reputation, \n  Count(*) AS [AnswerCount],\n  (SUM(p.Score) * 10 + COUNT(p.Id) * 15) \/ COUNT(p.Id) \n    AS 'AvgRepPerAnswer',\n  Min(Len(p.Body)) AS [MinCharPerAns],\n  Avg(Len(p.Body)) AS [AvgCharPerAns],\n  Max(Len(p.Body)) AS [MaxCharPerAns]\n   \nFROM Users u INNER JOIN Posts p ON (u.Id = P.OwnerUserId)\nWHERE \n  p.PostTypeId = 2\nGROUP BY \n  u.DisplayName, u.Reputation\nORDER BY \n  Avg(Len(p.Body)) DESC"},{"QuerySetId":211179,"Title":"Count of posts scored between (10,100), grouped by score","Description":null,"QueryBody":"SELECT Score, COUNT(Score) FROM Posts WHERE 10 < Score AND Score < 100 GROUP BY Score ORDER BY Score","CreationDate":"2014-07-30 4:33:04","validated":true,"QueryBody_Original":"SELECT  Score, COUNT(Score)\nFROM Posts\nWHERE 10 < Score AND Score < 100\nGROUP BY Score\nORDER BY Score"},{"QuerySetId":214024,"Title":"Identify-this-x questions with unaccepted answers","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", Score, DisplayName, Reputation FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE PostTypeId = 1 AND AcceptedAnswerId IS NULL AND AnswerCount <> 0 AND Tags LIKE '%identification-%'","CreationDate":"2014-08-22 10:27:13","validated":true,"QueryBody_Original":"SELECT  p.Id AS [Post Link], Score, DisplayName, Reputation\nFROM Posts p\nINNER JOIN Users u\nON p.OwnerUserId = u.Id\nWHERE PostTypeId = 1\nAND AcceptedAnswerId IS NULL\nAND AnswerCount != 0\nAND Tags LIKE '%identification-%'"},{"QuerySetId":215057,"Title":"Posts edited after a \"Whilst this may theoretically answer the question...\" comment","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE EXISTS(SELECT * FROM Comments WHERE Comments.Text LIKE 'While this link may answer the question, it is better to include the essential parts of the answer here%' AND Comments.PostId = Posts.Id AND Posts.LastEditDate > Comments.CreationDate) ORDER BY Posts.CreationDate DESC LIMIT 200","CreationDate":"2015-03-12 23:50:37","validated":true,"QueryBody_Original":"SELECT  TOP 200 \n  Id\nFROM Posts \nWHERE EXISTS (\n  SELECT * FROM Comments \n  WHERE Comments.Text LIKE 'While this link may answer the question, it is better to include the essential parts of the answer here%' \n  AND Comments.PostId = Posts.Id \n  AND Posts.LastEditDate > Comments.CreationDate\n) ORDER BY Posts.CreationDate DESC"},{"QuerySetId":215843,"Title":"Find my answers for user X","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.CreationDate FROM Posts AS q INNER JOIN Users AS u ON q.OwnerUserId = u.Id INNER JOIN Posts AS a ON q.Id = a.ParentID WHERE u.Id = 1164789 AND a.OwnerUserId = 2610249 ORDER BY a.CreationDate DESC","CreationDate":"2017-08-09 17:04:12","validated":true,"QueryBody_Original":"SELECT  a.Id AS [Post Link], a.CreationDate\nFROM Posts q\n  INNER JOIN Users u ON q.OwnerUserId = u.Id\n  INNER JOIN Posts a ON q.Id = a.ParentID\nWHERE u.Id = 1164789\n  AND a.OwnerUserId = 2610249\nORDER BY a.CreationDate DESC"},{"QuerySetId":216269,"Title":"questions that seem to contain part or all of a sudoers file","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount AS Views FROM Posts WHERE PostTypeId = 1 AND Body LIKE '%ALL=(ALL:ALL)%' ORDER BY Views DESC","CreationDate":"2015-04-20 20:04:45","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], Score, ViewCount as Views\nFROM Posts\nWHERE PostTypeId = 1 AND Body LIKE '%ALL=(ALL:ALL)%'\nORDER BY Views DESC"},{"QuerySetId":216672,"Title":"Unspectacular posts with a tag","Description":null,"QueryBody":"SELECT p.CreationDate, p.AnswerCount, p.Id AS \"Post Link\", p.Body FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE (p.PostTypeId = 1 AND p.AcceptedAnswerID IS NULL AND p.ClosedDate IS NULL AND p.Score <= 0 AND p.Tags LIKE '%##Tag##%' AND 1 >= ALL (SELECT a.Score FROM Posts AS a WHERE a.ParentId = p.Id)) ORDER BY p.CreationDate DESC","CreationDate":"2014-08-11 1:32:35","validated":true,"QueryBody_Original":"SELECT  p.CreationDate, p. AnswerCount, p.Id AS [Post Link], p.Body\nFROM Posts p \nINNER JOIN Users u \nON p.OwnerUserId =  u.Id\nWHERE (\n  p.PostTypeId = 1 AND\n  p.AcceptedAnswerID IS NULL AND\n  p.ClosedDate IS NULL AND\n  p.Score <= 0 AND\n  p.Tags LIKE '%##Tag##%' AND\n  1 >= ALL (\n    SELECT a.Score FROM Posts a WHERE a.ParentId = p.Id\n  )\n)\nORDER BY p.CreationDate DESC"},{"QuerySetId":217611,"Title":"Find users by display name","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE DisplayName LIKE '%##DisplayName##%' ORDER BY Reputation DESC","CreationDate":"2014-08-14 6:26:27","validated":true,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location\nfrom Users\nwhere DisplayName like '%##DisplayName##%'\norder by Reputation desc"},{"QuerySetId":218216,"Title":"Questions about Records (Movies & TV)","Description":null,"QueryBody":"SELECT DISTINCT Id AS \"Post Link\", Tags FROM Posts WHERE PostTypeId = 1 AND (Title LIKE 'What is the%' OR Title LIKE 'What was the%' OR Title LIKE 'Which%' OR Title LIKE 'Who was%' OR Title LIKE 'When did the%') AND (Title LIKE '%most%' OR Title LIKE '%longest%' OR Title LIKE '%first%' OR Title LIKE '%biggest%' OR Title LIKE '%latest%' OR Title LIKE '%earliest%') AND NOT (Tags LIKE '%-appearance%' OR Tags LIKE '%cinema-history%' OR Tags LIKE '%identify-this-%' OR Tags LIKE '%analysis%' OR Tags LIKE '%breaking-bad%' OR Tags LIKE '%the-other-woman%' OR Tags LIKE '%friends%' OR Tags LIKE '%sleepy-hollow%' OR Tags LIKE '%soundtrack%')","CreationDate":"2014-08-16 8:33:49","validated":true,"QueryBody_Original":"SELECT  DISTINCT Id as [Post Link], Tags\nFROM Posts\nWHERE PostTypeId = 1\nAND\n(\n     Title LIKE 'What is the%'\n  OR Title LIKE 'What was the%'\n  OR Title LIKE 'Which%'\n  OR Title LIKE 'Who was%'\n  OR Title LIKE 'When did the%'\n)\nAND\n(\n     Title LIKE '%most%'\n  OR Title LIKE '%longest%'\n  OR Title Like '%first%'\n  OR Title LIKE '%biggest%'\n  OR Title LIKE '%latest%'\n  OR Title LIKE '%earliest%'\n)\nAND NOT\n(\n     Tags LIKE '%-appearance%'\n  OR Tags LIKE '%cinema-history%'\n  OR Tags LIKE '%identify-this-%'\n  OR Tags LIKE '%analysis%'\n  OR Tags LIKE '%breaking-bad%'\n  OR Tags LIKE '%the-other-woman%'\n  OR Tags LIKE '%friends%'\n  OR Tags LIKE '%sleepy-hollow%'\n  OR Tags LIKE '%soundtrack%'\n)"},{"QuerySetId":218561,"Title":"Number of distinct users who posted a question, in the last year (365 days)","Description":"Number of distinct users who posted a Q or an A, in the last 30 days","QueryBody":"SELECT COUNT(DISTINCT Users.id) FROM Users JOIN Posts ON Posts.OwnerUserId = Users.Id AND (Posts.PostTypeId = 2) WHERE DATEDIFF(CURRENT_TIMESTAMP(), Posts.CreationDate) < 365","CreationDate":"2014-08-18 1:24:22","validated":true,"QueryBody_Original":"SELECT  \n  COUNT(DISTINCT Users.id)\nFROM \n  Users\nJOIN \n  Posts ON \n    Posts.OwnerUserId = Users.Id \n    AND (Posts.PostTypeId =2)\nWHERE \n  DATEDIFF(day, Posts.CreationDate, GETDATE()) < 365"},{"QuerySetId":219008,"Title":"What is the tag new users use the most when they first come to the site?","Description":null,"QueryBody":"SELECT p.OwnerDisplayName, COUNT(p.Title) FROM Posts AS p WHERE p.Tags = '<identification-request>' GROUP BY p.OwnerDisplayName HAVING COUNT(*) = 1","CreationDate":"2014-08-19 21:16:17","validated":true,"QueryBody_Original":"SELECT  p.OwnerDisplayName, COUNT(p.Title)\n  FROM Posts p\n WHERE p.Tags = '<identification-request>'\nGROUP BY p.OwnerDisplayName\nHAVING COUNT(*) = 1"},{"QuerySetId":219404,"Title":"Get questions where title is same as body","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Body, p.CreationDate FROM (SELECT * FROM Posts WHERE PostTypeId = 1 AND LENGTH(Body) < LENGTH(Title) + 30 AND LENGTH(Body) > LENGTH(Title)) AS p INNER JOIN (SELECT ph1.* FROM PostHistory AS ph1 INNER JOIN (SELECT PostId, MAX(CreationDate) AS CreationDate FROM PostHistory WHERE PostHistoryTypeId IN (2, 5, 8) GROUP BY PostId) AS ph2 ON ph1.PostId = ph2.PostId AND ph1.CreationDate = ph2.CreationDate WHERE PostHistoryTypeId IN (2, 5, 8)) AS ph ON p.Id = ph.PostId WHERE LOWER(p.Title) = LOWER(ph.Text) ORDER BY CreationDate DESC LIMIT 10","CreationDate":"2020-12-08 2:23:01","validated":true,"QueryBody_Original":"SELECT  TOP 10 p.Id AS [Post Link], p.Body, p.CreationDate\nFROM (\n  SELECT * FROM Posts\n  WHERE PostTypeId = 1\n    AND LEN(Body) < LEN(Title) + 30\n    AND LEN(Body) > LEN(Title)\n) p\nINNER JOIN (\n  SELECT ph1.* FROM PostHistory ph1\n  INNER JOIN (\n    SELECT PostId, MAX(CreationDate) AS CreationDate\n    FROM PostHistory\n    WHERE PostHistoryTypeId IN (2,5,8)\n    GROUP BY PostId\n  ) ph2\n  ON ph1.PostId = ph2.PostId AND ph1.CreationDate = ph2.CreationDate\n  WHERE PostHistoryTypeId IN (2,5,8)\n) ph\nON p.Id = ph.PostId\nWHERE LOWER(p.Title) = LOWER(ph.Text)\nORDER BY CreationDate DESC"},{"QuerySetId":219972,"Title":"Users with close-vote privileges ordered by last access date.","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY LastAccessDate DESC) AS \" \", Id AS \"User Link\", LastAccessDate FROM Users WHERE Reputation > 3000 ORDER BY LastAccessDate DESC","CreationDate":"2014-08-22 17:16:40","validated":true,"QueryBody_Original":"SELECT  \n  ROW_NUMBER() OVER (ORDER BY LastAccessDate DESC) AS ' ',\n  Id As [User Link],\n  LastAccessDate\nFROM\n  Users\nWHERE\n  Reputation >3000\nORDER BY\n  LastAccessDate \n  DESC"},{"QuerySetId":220047,"Title":"Accepted answers without accept vote","Description":null,"QueryBody":"SELECT p.AcceptedAnswerId AS \"Post Link\" FROM Posts AS p WHERE NOT p.AcceptedAnswerId IN (SELECT v.PostId FROM Votes AS v WHERE v.VoteTypeId = 1)","CreationDate":"2014-08-22 23:42:36","validated":true,"QueryBody_Original":"SELECT  p.AcceptedAnswerId as [Post Link] from Posts p \nwhere p.AcceptedAnswerId not in (\nSELECT v.PostId from Votes v \nwhere v.VoteTypeId = 1 )"},{"QuerySetId":220746,"Title":"Top 500 Favorited Posts","Description":null,"QueryBody":"SELECT id AS \"Post Link\", FavoriteCount, CreationDate FROM posts ORDER BY FavoriteCount DESC LIMIT 500","CreationDate":"2014-08-26 13:31:16","validated":true,"QueryBody_Original":"SELECT  top 500 id as [Post Link], FavoriteCount, CreationDate\nfrom posts\norder by FavoriteCount desc"},{"QuerySetId":220758,"Title":"Tor Top 100 Favorited Posts","Description":null,"QueryBody":"SELECT id AS \"Post Link\", FavoriteCount FROM posts ORDER BY FavoriteCount DESC LIMIT 100","CreationDate":"2014-08-26 14:17:17","validated":true,"QueryBody_Original":"SELECT  top 100 id as [Post Link], FavoriteCount\nfrom posts\norder by FavoriteCount desc"},{"QuerySetId":221243,"Title":"Number of posts in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId IN (1, 2) AND CreationDate >= DATEADD(DAY, -30, GETDATE())","CreationDate":"2014-08-28 17:55:32","validated":true,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts \nWHERE PostTypeId in (1,2) AND CreationDate >= DATEADD(DAY, -30, GETDATE())"},{"QuerySetId":221665,"Title":"Post Links by PostId ascending","Description":null,"QueryBody":"SELECT PostId, RelatedPostId FROM PostLinks WHERE LinkTypeId = 1 ORDER BY PostId","CreationDate":"2014-08-31 7:01:26","validated":true,"QueryBody_Original":"SELECT   PostId, RelatedPostId from PostLinks\nwhere LinkTypeId = 1\norder by PostId asc"},{"QuerySetId":223240,"Title":"Top SO users in South Carolina area","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%south carolina%' ORDER BY Reputation DESC","CreationDate":"2020-02-14 0:20:53","validated":true,"QueryBody_Original":"SELECT  Id AS [User Link],Reputation,Location\nFROM Users\nWHERE lower(Location) LIKE '%south carolina%'\nORDER BY Reputation DESC"},{"QuerySetId":225097,"Title":"Within a tag, percentage of questions with another tag","Description":null,"QueryBody":"SELECT COUNT(p.Id), COUNT(q.Id), COUNT(p.Id) \/ COUNT(q.Id) FROM Posts AS p, Posts AS q WHERE p.Tags LIKE '%##TagName##%' AND q.Tags LIKE '<##TagName##>'","CreationDate":"2014-09-14 3:22:40","validated":true,"QueryBody_Original":"SELECT  count(p.Id), count(q.Id), count(p.Id)\/count(q.Id) from Posts p, Posts q\nwhere p.Tags like '%##TagName##%' \nand q.Tags like '<##TagName##>'"},{"QuerySetId":227343,"Title":"users whose first question was closed but still had multiple posts","Description":null,"QueryBody":"SELECT sq.count, COUNT(DISTINCT sq.user) FROM (SELECT sq.user, CASE WHEN COUNT(DISTINCT posts.id) = 1 THEN '1' ELSE '>1' END AS count FROM (SELECT sq.user FROM (SELECT users.id AS \"user\", posts.id AS first_post, posts.closeddate, ROW_NUMBER() OVER (PARTITION BY users.id ORDER BY posts.creationdate) AS rn FROM users INNER JOIN posts ON posts.owneruserid = users.id WHERE posts.posttypeid = 1) AS sq INNER JOIN posthistory ON sq.first_post = posthistory.postid WHERE posthistory.PostHistoryTypeId = 10 AND sq.rn = 1) AS sq INNER JOIN posts ON posts.owneruserid = sq.user GROUP BY sq.user) AS sq GROUP BY sq.count ORDER BY sq.count","CreationDate":"2014-09-25 7:11:16","validated":true,"QueryBody_Original":"SELECT  sq.count, count(distinct sq.user)\nfrom (SELECT sq.user, case when count(distinct posts.id) = 1 then '1' else '>1' end as count\nfrom (SELECT sq.user\nfrom (SELECT users.id as [user], posts.id as first_post, posts.closeddate,\nrow_number() over(partition by users.id order by posts.creationdate) as rn\nfrom users\ninner join posts on posts.owneruserid = users.id\nwhere posts.posttypeid = 1) sq inner join\nposthistory on sq.first_post = posthistory.postid\nwhere posthistory.PostHistoryTypeId = 10 and sq.rn = 1) sq inner join\nposts on posts.owneruserid = sq.user\ngroup by sq.user) sq\ngroup by sq.count\norder by sq.count"},{"QuerySetId":228509,"Title":"comment length less than 15 chars","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", LENGTH(Text) AS Length, Score, CreationDate FROM Comments WHERE LENGTH(Text) < 15 ORDER BY Length DESC","CreationDate":"2014-09-29 5:06:59","validated":true,"QueryBody_Original":"SELECT  \n  Id as [Comment Link],\n  len(Text) as Length,\n  Score,\n  CreationDate\nFROM\n  Comments\nWHERE\n  len(Text) < 15\nORDER BY\n  Length desc"},{"QuerySetId":235221,"Title":"Newest users with reputation > 10k","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation, Users.CreationDate FROM Users WHERE Reputation > 10000 ORDER BY CreationDate DESC LIMIT 30","CreationDate":"2014-10-16 13:45:07","validated":true,"QueryBody_Original":"SELECT  \n    TOP 30\n    Users.Id as [User Link],\n    Users.Reputation,\n    Users.CreationDate\nFROM\n    Users\nWHERE\n    Reputation > 10000\nORDER BY\n    CreationDate DESC"},{"QuerySetId":238529,"Title":"Users by reputation in a country","Description":null,"QueryBody":"SELECT * FROM Users WHERE LOWER(location) LIKE '%##country##%' ORDER BY Reputation DESC","CreationDate":"2014-10-25 10:40:23","validated":true,"QueryBody_Original":"SELECT  *\n  from Users\n where lower(location) like '%##country##%'\n order by Reputation desc"},{"QuerySetId":241239,"Title":"find top 100 unaccapted c# good questions","Description":"Looks at unanswered questions in your top 20 tags and sorts them by\na combined weight which takes into account: score, askers reputation and how\nwell you do on that particular tag\n","QueryBody":"SELECT id AS \"Post Link\", tags, creationdate FROM posts WHERE ParentId IS NULL AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId IS NULL AND STR_POSITION(tags, 'c#') > 0 AND score > 10 ORDER BY creationdate DESC LIMIT 100","CreationDate":"2014-11-01 22:10:27","validated":true,"QueryBody_Original":"SELECT  top 100\n\tid as [Post Link], tags, creationdate\nfrom \n\tposts\nwhere \n\t\tParentId is null\n\tand \n\t\tCommunityOwnedDate is null \n\tand \n\t\tClosedDate is null \n\tand \n\t\tAcceptedAnswerId is null\n\tand        \n\t\tcharindex('c#', tags)>0\n\tand\n\t\tscore>10\norder by creationdate desc"},{"QuerySetId":242021,"Title":"Find number of Unanswered Questions on SO (questions with no answers at all)","Description":"Counts the number of unanswered questions on SO, that are not community-wiki, not closed and have no accepted answer.\n","QueryBody":"SELECT q.Id, q.ViewCount, q.Title FROM Posts AS q WHERE (SELECT COUNT(*) FROM Posts AS a WHERE a.ParentId = q.Id) = 0 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND q.ParentId IS NULL AND AcceptedAnswerId IS NULL ORDER BY ViewCount DESC","CreationDate":"2014-11-03 19:45:12","validated":true,"QueryBody_Original":"SELECT  q.Id,q.ViewCount,q.Title  from Posts q\nwhere (SELECT count(*) from Posts a where a.ParentId = q.Id) = 0\nand CommunityOwnedDate is null and ClosedDate is null and q.ParentId is null \nand AcceptedAnswerId is null order by ViewCount desc"},{"QuerySetId":242505,"Title":"Find questions titles that are not phrased as questions","Description":"Find question titles that do not contain the Five Ws (Who, What, When, Where and why), interrogative words, and question marks.\n\nThis query MAY be useful for identifying titles that aren't phrased as a question or low quality questions.\n\nSpecial thanks: s.tk\/users\/398665","QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE NOT Title LIKE '%Who%' AND NOT Title LIKE '%What%' AND NOT Title LIKE '%When%' AND NOT Title LIKE '%Where%' AND NOT Title LIKE '%Why%' AND NOT Title LIKE '%How%' AND NOT Title LIKE '%Can%' AND NOT Title LIKE '%Is%' AND NOT Title LIKE '%Which%' AND NOT Title LIKE '%Was%' AND NOT Title LIKE '%Are%' AND NOT Title LIKE '%Has%' AND NOT Title LIKE '%Will%' AND NOT Title LIKE '%Do%' AND NOT Title LIKE '%?%' AND ClosedDate IS NULL ORDER BY CreationDate DESC","CreationDate":"2016-06-22 12:21:02","validated":true,"QueryBody_Original":"SELECT  Id\nas [Post Link]\nfrom Posts \nwhere Title not like '%Who%'\nAND Title not like '%What%'\nAND Title not like '%When%'\nAND Title not like '%Where%'\nAND Title not like '%Why%'\nAND Title not like '%How%'\nAND Title not like '%Can%'\nAND Title not like '%Is%'\nAND Title not like '%Which%'\nAND Title not like '%Was%'\nAND Title not like '%Are%'\nAND Title not like '%Has%'\nAND Title not like '%Will%'\nAND Title not like '%Do%'\nAND Title not like '%?%'\nAND ClosedDate is null\norder by CreationDate desc"},{"QuerySetId":244019,"Title":"Questions with a tag favorited by users with matching tag badge","Description":null,"QueryBody":"SELECT p.CreationDate, p.Id AS \"Post Link\", p.Score, COUNT(b.UserId) AS \"Users\" FROM Posts AS p, Badges AS b, Votes AS v WHERE b.Name = '##tag##' AND v.VoteTypeId = 5 AND v.PostId = p.Id AND v.UserId = b.UserId AND p.Tags LIKE '%##tag##%' AND p.AnswerCount = 0 AND p.ClosedDate IS NULL GROUP BY p.Id, p.Score, p.CreationDate ORDER BY Users DESC","CreationDate":"2014-11-08 4:29:56","validated":true,"QueryBody_Original":"SELECT  p.CreationDate, p.Id as [Post Link], p.Score, count(b.UserId) as [Users] from Posts p, Badges b, Votes v  \nwhere b.Name='##tag##' \n  and v.VoteTypeId=5 \n  and v.PostId=p.Id \n  and v.UserId=b.UserId \n  and p.Tags like '%##tag##%' \n  and p.AnswerCount = 0 \n  and p.ClosedDate is Null\ngroup by p.Id, p.Score, p.CreationDate\norder by Users desc"},{"QuerySetId":244672,"Title":"find questions you answered which have no accepted answer","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Score, u2.LastAccessDate, u2.UpVotes FROM Posts AS a INNER JOIN Posts AS q ON a.ParentId = q.Id INNER JOIN Users AS u ON a.OwnerUserId = u.Id INNER JOIN Users AS u2 ON q.OwnerUserId = u2.Id WHERE u.Id = '##userId##' AND q.AcceptedAnswerId IS NULL ORDER BY u2.LastAccessDate DESC","CreationDate":"2014-11-13 14:07:01","validated":true,"QueryBody_Original":"SELECT \n  a.Id AS [Post Link],\n  a.Score,\n  u2.LastAccessDate,\n  u2.UpVotes\nFROM\n  Posts as a\nINNER JOIN\n  Posts as q\nON\n  a.ParentId = q.Id\nINNER JOIN\n  Users as u\nON\n  a.OwnerUserId = u.Id\nINNER JOIN\n  Users as u2\nON\n  q.OwnerUserId = u2.Id\nWHERE\n  u.Id = '##userId##'\n and\n  q.AcceptedAnswerId IS NULL\nORDER BY\n  u2.LastAccessDate DESC"},{"QuerySetId":246695,"Title":"Search for comments that prevent roomba deletion","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\" FROM Comments AS C INNER JOIN Posts AS p ON p.Id = c.PostId WHERE p.AnswerCount = 0 AND p.Score = 0 AND p.CommentCount = 3 AND p.CreationDate < (DATEADD(d, -365, GETDATE())) AND LOWER(c.Text) LIKE LOWER('##search##%') ORDER BY LEN(Text)","CreationDate":"2015-04-09 7:04:30","validated":true,"QueryBody_Original":"SELECT \n    c.Id as [Comment Link] \nfrom\n    Comments C\ninner join Posts p on p.Id = c.PostId \nwhere p.AnswerCount=0 \n  and p.Score=0 \n  and p.CommentCount=3 \n  and p.CreationDate < (DateAdd(d, -365, GetDate())) \n  and lower(c.Text) like lower('##search##%')  \norder by len(Text) asc"},{"QuerySetId":249753,"Title":"Marshal badge with no posts.","Description":null,"QueryBody":"SELECT b.UserId AS \"User Link\" FROM Badges AS b LEFT JOIN Posts AS p ON p.OwnerUserId = b.UserId WHERE b.Name = 'Marshal' AND p.Id IS NULL","CreationDate":"2014-11-22 5:57:35","validated":true,"QueryBody_Original":"SELECT  \n  b.UserId AS [User Link]\nFROM\n  Badges b\n  LEFT JOIN Posts p ON p.OwnerUserId = b.UserId\nWHERE\n  b.Name = 'Marshal'\n  AND p.Id IS NULL"},{"QuerySetId":250020,"Title":"Posts with an image and no TeX","Description":null,"QueryBody":"SELECT CreationDate, Id AS \"Post Link\", Score FROM Posts WHERE NOT Body LIKE '%$%' AND Body LIKE '%img%' AND ClosedDate IS NULL ORDER BY CreationDate DESC","CreationDate":"2014-11-23 7:27:45","validated":true,"QueryBody_Original":"SELECT  CreationDate, Id as [Post Link], Score from Posts\nwhere Body not like '%$%' and Body like '%img%'\nand ClosedDate is null\norder by CreationDate desc"},{"QuerySetId":250494,"Title":"Search words \/ strings in comments","Description":null,"QueryBody":"SELECT CreationDate, Id AS \"Comment Link\", postID AS \"Post Link\", Score FROM Comments WHERE Text LIKE '%##String##%' ORDER BY CreationDate DESC","CreationDate":"2020-03-13 6:18:01","validated":true,"QueryBody_Original":"SELECT CreationDate, Id [Comment Link], postID [Post Link], Score FROM Comments WHERE Text LIKE '%##String##%' ORDER BY CreationDate DESC;"},{"QuerySetId":251052,"Title":"UserByCityAndPoints (city input in lowercase)","Description":null,"QueryBody":"SELECT * FROM Users WHERE Reputation > '##Points##' AND WebsiteUrl <> '' AND LOWER(Location) LIKE '%##Location##%' ORDER BY Reputation","CreationDate":"2014-11-26 11:14:16","validated":true,"QueryBody_Original":"SELECT  * from Users where Reputation > '##Points##' and  WebsiteUrl <> '' and\n    LOWER(Location) LIKE '%##Location##%'\n    ORDER BY Reputation;"},{"QuerySetId":251228,"Title":"*Some* of the cases where LastEditor is blank and not the same as OP","Description":"This query probably misses the scenario where both the OP and the last editor are deleted, but are different deleted users.  That hypothetical edge-case is not important to the *current* issue under discussion.","QueryBody":"SELECT p.Id AS \"Post Link\", LastEditDate FROM Posts AS p WHERE NOT p.LastEditDate IS NULL AND p.LastEditorUserId IS NULL AND NOT p.OwnerUserId IS NULL ORDER BY p.LastEditDate DESC","CreationDate":"2014-11-27 6:05:24","validated":true,"QueryBody_Original":"SELECT \n        p.Id AS [Post Link]\n        , LastEditDate\nFROM\n        Posts p\nWHERE\n        p.LastEditDate      IS NOT NULL\nAND     p.LastEditorUserId  IS NULL\nAND     p.OwnerUserId       IS NOT NULL\nORDER BY\n        p.LastEditDate DESC"},{"QuerySetId":252030,"Title":"Total score of answers within 100 days of joining the site","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", SUM(p.Score) AS \"Total score\" FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE DATEDIFF(p.CreationDate, u.CreationDate) <= 100 GROUP BY u.Id ORDER BY \"Total score\" DESC LIMIT 100","CreationDate":"2014-11-30 18:06:27","validated":true,"QueryBody_Original":"SELECT  top 100 u.Id as [User Link], sum(p.Score) as [Total score] from Users u\ninner join Posts p\non p.OwnerUserId = u.Id\nwhere datediff(day, u.CreationDate, p.CreationDate) <= 100\ngroup by u.Id\norder by [Total score] desc"},{"QuerySetId":254071,"Title":"Graph: Total questions by date","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), COUNT(CAST(CreationDate AS DATE)) FROM Posts WHERE PostTypeId = 1 GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE)","CreationDate":"2014-12-04 17:48:06","validated":true,"QueryBody_Original":"SELECT \n cast(CreationDate as date), \n count(cast(CreationDate as date))\nfrom Posts\nwhere PostTypeId=1\ngroup by cast(CreationDate as date)\norder by cast(CreationDate as date);"},{"QuerySetId":254127,"Title":"Graph: Unanswered Q's by Month","Description":null,"QueryBody":"SELECT DATEFROMPARTS(YEAR(q.CreationDate), MONTH(q.CreationDate), 1), COUNT(DATEFROMPARTS(YEAR(q.CreationDate), MONTH(q.CreationDate), 1)) FROM Posts AS q WHERE q.PostTypeId = 1 AND q.AcceptedAnswerId IS NULL AND q.ClosedDate IS NULL AND COALESCE((SELECT MAX(a.Score) FROM Posts AS a WHERE a.ParentId = q.Id AND a.PostTypeId = 2), 0) <= 0 GROUP BY DATEFROMPARTS(YEAR(q.CreationDate), MONTH(q.CreationDate), 1) ORDER BY DATEFROMPARTS(YEAR(q.CreationDate), MONTH(q.CreationDate), 1)","CreationDate":"2014-12-04 18:37:12","validated":true,"QueryBody_Original":"SELECT \n datefromparts(year(q.CreationDate), month(q.CreationDate), 1),\n count(datefromparts(year(q.CreationDate), month(q.CreationDate), 1))\nfrom Posts q\nwhere q.PostTypeId=1 and q.AcceptedAnswerId is null\n  and q.ClosedDate is null\n  and isnull((\n      SELECT max(a.Score) from Posts a\n      where a.ParentId = q.Id and a.PostTypeId=2\n    ),0) <= 0\ngroup by datefromparts(year(q.CreationDate), month(q.CreationDate), 1)\norder by datefromparts(year(q.CreationDate), month(q.CreationDate), 1);"},{"QuerySetId":255568,"Title":"see questions that has or had bounties this month","Description":null,"QueryBody":"SELECT P.id AS \"Post Link\", V.BountyAmount, V.CreationDate AS \"Bounty Start\", P.Score, P.ViewCount, P.Title, P.Tags, P.Body, P.AnswerCount FROM Posts AS P INNER JOIN Votes AS V ON P.Id = V.PostId WHERE TIME_TO_STR(V.CreationDate, '%-M') = TIME_TO_STR(CURRENT_TIMESTAMP(), '%-M') AND TIME_TO_STR(V.CreationDate, '%Y') = TIME_TO_STR(CURRENT_TIMESTAMP(), '%Y') AND V.BountyAmount > 0 AND P.ParentId IS NULL ORDER BY V.BountyAmount DESC, V.CreationDate DESC","CreationDate":"2014-12-08 20:33:13","validated":true,"QueryBody_Original":"SELECT  P.id As [Post Link], V.BountyAmount, V.CreationDate As [Bounty Start], P.Score, \n  P.ViewCount, P.Title, P.Tags, P.Body, P.AnswerCount \nFROM Posts P INNER JOIN Votes V ON P.Id = V.PostId\nWHERE DATEPART(m, V.CreationDate) = DATEPART(m, getdate())\n  AND DATEPART(yyyy, V.CreationDate) = DATEPART(yyyy, getdate())\n  AND V.BountyAmount > 0\n  AND P.ParentId IS NULL\nORDER BY V.BountyAmount DESC, V.CreationDate DESC"},{"QuerySetId":255901,"Title":"Average question score vs number of comments on that question","Description":null,"QueryBody":"SELECT CommentCount, AVG(Score) AS AverageScore FROM Posts GROUP BY CommentCount ORDER BY CommentCount","CreationDate":"2014-12-09 8:56:27","validated":true,"QueryBody_Original":"SELECT  CommentCount, avg(Score) as AverageScore\n    FROM Posts\n\n    GROUP BY CommentCount\n    ORDER BY CommentCount"},{"QuerySetId":256118,"Title":"Users with at least 1K reputation and \"Civic Duty\", Deputy\" and \"Sheriff\" badges","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE Reputation >= 1000 AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Civic Duty') AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Deputy') AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Sheriff') ORDER BY LastAccessDate DESC","CreationDate":"2014-12-10 0:47:25","validated":true,"QueryBody_Original":"SELECT  Id as [User Link], Reputation, LastAccessDate\n from Users\n where Reputation >= 1000\n   and exists (SELECT Id from Badges b where b.UserId = Users.Id and b.Name = 'Civic Duty')\n   and exists (SELECT Id from Badges b where b.UserId = Users.Id and b.Name = 'Deputy')\n   and exists (SELECT Id from Badges b where b.UserId = Users.Id and b.Name = 'Sheriff')\norder by LastAccessDate desc"},{"QuerySetId":257711,"Title":"Average upvotes vs downvotes per post per month over time","Description":null,"QueryBody":"SELECT CAST(CONCAT(y, '-', m, '-', '01') AS DATE), (upvotes - downvotes) \/ numposts FROM (SELECT YEAR(CreationDate) AS py, MONTH(CreationDate) AS pm, COUNT(*) AS numposts FROM Posts GROUP BY YEAR(CreationDate), MONTH(CreationDate)) AS p JOIN (SELECT y, m, SUM(upvote) AS upvotes, SUM(downvote) AS downvotes FROM (SELECT YEAR(CreationDate) AS y, MONTH(CreationDate) AS m, 0 AS upvote, 1 AS downvote FROM Votes WHERE VoteTypeId = 3 UNION ALL SELECT YEAR(CreationDate) AS y, MONTH(CreationDate) AS m, 1 AS upvote, 0 AS downvote FROM Votes WHERE VoteTypeId = 2) AS allvotes GROUP BY y, m) AS v ON p.py = v.y AND p.pm = v.m ORDER BY y, m","CreationDate":"2014-12-13 10:57:30","validated":true,"QueryBody_Original":"SELECT \ncast(CONCAT(y, '-', m, '-', '01') as date), (upvotes-downvotes)\/numposts\nfrom (\n  SELECT year(CreationDate) as py, month(CreationDate) as pm, count(*) as numposts\n  from Posts\n  group by year(CreationDate), month(CreationDate)\n) as p\njoin (\n  SELECT\n  y, m, SUM(upvote) as upvotes, SUM(downvote) as downvotes\n  from (\n    SELECT\n    year(CreationDate) as y, month(CreationDate) as m, 0 as upvote, 1 as downvote\n    from Votes\n    where VoteTypeId=3\n    union all\n    SELECT\n    year(CreationDate) as y, month(CreationDate) as m, 1 as upvote, 0 as downvote\n    from Votes\n    where VoteTypeId=2\n  ) as allvotes\n  group by y, m\n) as v on p.py = v.y and p.pm = v.m\norder by y, m"},{"QuerySetId":257908,"Title":"Questions (total, answered, unanswered, users) by Date","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE) AS date, COUNT(DISTINCT p.OwnerUserId) AS users, SUM(1) AS total, SUM(CASE WHEN COALESCE(p.AcceptedAnswerId, 0) = 0 THEN 1 ELSE 0 END) AS unanswered, SUM(CASE WHEN COALESCE(p.AcceptedAnswerId, 0) = 0 THEN 0 ELSE 1 END) AS answered FROM Posts AS p GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE)","CreationDate":"2014-12-16 14:45:13","validated":true,"QueryBody_Original":"SELECT \n  cast(p.CreationDate as date) as date,\n  count(distinct p.OwnerUserId) as users,\n  sum(1) as total,\n  sum(case when isnull(p.AcceptedAnswerId,0) = 0 then 1 else 0 end) as unanswered,\n  sum(case when isnull(p.AcceptedAnswerId,0) = 0 then 0 else 1 end) as answered\nfrom Posts p\ngroup by cast(p.CreationDate as date)\norder by cast(p.CreationDate as date)"},{"QuerySetId":258627,"Title":"Questions (total, answered, unanswered, users) by Year and Month","Description":null,"QueryBody":"SELECT DATEFROMPARTS(YEAR(p.CreationDate), MONTH(p.CreationDate), 1) AS ym, COUNT(DISTINCT p.OwnerUserId) AS users, SUM(1) AS total, SUM(CASE WHEN COALESCE(p.AcceptedAnswerId, 0) = 0 THEN 1 ELSE 0 END) AS unanswered, SUM(CASE WHEN COALESCE(p.AcceptedAnswerId, 0) = 0 THEN 0 ELSE 1 END) AS answered FROM Posts AS p GROUP BY DATEFROMPARTS(YEAR(p.CreationDate), MONTH(p.CreationDate), 1) ORDER BY DATEFROMPARTS(YEAR(p.CreationDate), MONTH(p.CreationDate), 1)","CreationDate":"2014-12-16 18:36:17","validated":true,"QueryBody_Original":"SELECT \n  datefromparts(Year(p.CreationDate),Month(p.CreationDate),1) as ym,\n  count(distinct p.OwnerUserId) as users,\n  sum(1) as total,\n  sum(case when isnull(p.AcceptedAnswerId,0) = 0 then 1 else 0 end) as unanswered,\n  sum(case when isnull(p.AcceptedAnswerId,0) = 0 then 0 else 1 end) as answered\nfrom Posts p\ngroup by datefromparts(Year(p.CreationDate),Month(p.CreationDate),1)\norder by datefromparts(Year(p.CreationDate),Month(p.CreationDate),1)"},{"QuerySetId":259466,"Title":"Short answers with a question mark","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Score FROM Posts WHERE PostTypeId = 2 AND Score > 0 AND DATALENGTH(Body) < 200 AND DATALENGTH(Body) - DATALENGTH(REPLACE(Body, '?', '')) >= 2 ORDER BY Score DESC","CreationDate":"2014-12-19 15:42:50","validated":true,"QueryBody_Original":"SELECT  Posts.Id AS [Post Link], Score\nFROM Posts \nWHERE PostTypeId = 2 \n  AND Score > 0\n  AND DATALENGTH(Body) < 200\n  AND DATALENGTH(Body) - DATALENGTH(REPLACE(Body, '?', '')) >= 2\nORDER BY Score DESC"},{"QuerySetId":259651,"Title":"How many questions got reopened in the last 60 days?","Description":null,"QueryBody":"SELECT COUNT(PostId) FROM PostHistory WHERE PostHistoryTypeId = 11 AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) < 60","CreationDate":"2014-12-20 9:12:22","validated":true,"QueryBody_Original":"SELECT  Count(PostId)\nFROM PostHistory \nWHERE PostHistoryTypeId = 11\nAND DATEDIFF(day, CreationDate, GETDATE() ) < 60"},{"QuerySetId":259958,"Title":"Voters in moderator elections per year","Description":null,"QueryBody":"SELECT YEAR(b.Date) AS Election, COUNT(*) AS \"Number of voters\" FROM Badges AS b WHERE b.Name = 'Constituent' GROUP BY YEAR(b.Date) ORDER BY YEAR(b.Date)","CreationDate":"2014-12-22 22:53:43","validated":true,"QueryBody_Original":"SELECT  Year(b.Date) as Election, Count(*) as [Number of voters] from Badges b\nwhere b.Name='Constituent'\ngroup by Year(b.Date) \norder by Year(b.Date) asc"},{"QuerySetId":261059,"Title":"Average reputation of users given by Stack Overflow's Total Reputation boundaries","Description":null,"QueryBody":"SELECT 1, AVG(reputation) AS average, ((AVG(reputation) - 1) \/ 1.0) * 100 AS percentage FROM users AS u1 WHERE u1.reputation >= 1 UNION SELECT 200, AVG(u200.reputation) AS average, ((AVG(u200.reputation) - 1) \/ 200.0) * 100 AS percentage FROM users AS u200","CreationDate":"2019-10-30 10:50:27","validated":true,"QueryBody_Original":"SELECT \n  1,\n  avg(reputation)                     average,\n  ((avg(reputation) - 1) \/ 1.0) * 100 percentage\nFROM users u1\nWHERE u1.reputation >= 1\nUNION SELECT\n        200,\n        avg(u200.reputation)                         average,\n        ((avg(u200.reputation) - 1) \/ 200.0) * 100 percentage\n        FROM users u200"},{"QuerySetId":262132,"Title":"Posts with the longest initial revision","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", LENGTH(ph.Text) AS \"Initial Length\", LENGTH(p.Body) AS \"Current Length\", CASE WHEN p.PostTypeId = 1 THEN CAST(p.AnswerCount AS TEXT(8)) ELSE '-' END AS \"Answers\", p.Score AS \"Score\", p.CommentCount AS \"Comments\", p.ViewCount AS \"Views\", p.OwnerUserId AS \"User Link\", p.CreationDate AS \"Date\" FROM Posts AS p INNER JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE ph.PostHistoryTypeId = 2 \/* Initial Body *\/ AND (PostTypeId = 1 OR PostTypeId = 2) ORDER BY LENGTH(ph.Text) DESC LIMIT 100","CreationDate":"2015-01-02 7:05:47","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  p.Id AS [Post Link],\n  Len(ph.Text) AS [Initial Length],\n  Len(p.Body) AS [Current Length],\n  IIF(p.PostTypeId = 1, Cast(p.AnswerCount AS VarChar(8)), '-') AS [Answers],\n  p.Score AS [Score],\n  p.CommentCount AS [Comments],\n  p.ViewCount AS [Views],\n  p.OwnerUserId AS [User Link],\n  p.CreationDate AS [Date]\nFROM Posts p\nINNER JOIN PostHistory ph\nON ph.PostId = p.Id\nWHERE ph.PostHistoryTypeId = 2 -- Initial Body\n  AND (PostTypeId = 1 OR PostTypeId = 2)\nORDER BY Len(ph.Text) DESC"},{"QuerySetId":263848,"Title":"Soft [self-learning] questions without MathJax","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\", CreationDate, Tags FROM Posts WHERE PostTypeId = 1 \/* Question *\/ AND Tags LIKE '%<self-learning>%' AND (Tags LIKE '%<advice>%' OR Tags LIKE '%<soft-question>%' OR Tags LIKE '%<big-list>%' OR Tags LIKE '%<education>%' OR Tags LIKE '%<teaching>%' OR Tags = '<self-learning>' \/* it's the only tag *\/ OR (NOT Body LIKE '%$%' AND NOT Body LIKE '\\begin')) AND NOT Tags LIKE '%<learning>%' ORDER BY CreationDate","CreationDate":"2015-01-09 7:11:48","validated":true,"QueryBody_Original":"SELECT  \n  Score,\n  Id As [Post Link],\n  CreationDate,\n  Tags\nFROM Posts\nWHERE\n  PostTypeId=1 --Question\n  and Tags like '%<self-learning>%'\n  and (\n    Tags like '%<advice>%'\n    or Tags like '%<soft-question>%'\n    or Tags like '%<big-list>%'\n    or Tags like '%<education>%'\n    or Tags like '%<teaching>%'\n    or Tags='<self-learning>' --it's the only tag\n    or (not Body like '%$%' and not Body like '\\begin')\n  )\n  and not Tags like '%<learning>%'\nORDER BY CreationDate ASC"},{"QuerySetId":264335,"Title":"Who has asked unanswered questions?","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(Id) AS unanswereds FROM Posts WHERE PostTypeId = 1 \/* question *\/ AND AnswerCount = 0 AND ClosedDate IS NULL GROUP BY OwnerUserId HAVING COUNT(Id) > 0 ORDER BY unanswereds DESC","CreationDate":"2015-01-12 14:38:03","validated":true,"QueryBody_Original":"SELECT  OwnerUserId as [User Link], count(Id) as unanswereds from Posts\nwhere PostTypeId=1 -- question\nand AnswerCount=0\nand ClosedDate is null\ngroup by OwnerUserId having count(Id)>0 order by unanswereds desc"},{"QuerySetId":264337,"Title":"Who has asked nonupvoted questions with at least 20 questions?","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", CAST(100.0 * SUM(CASE WHEN PostTypeId = 1 AND Score <= 0 THEN 1 ELSE 0 END) \/ SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS FLOAT(10, 2)) AS Percentage FROM Posts GROUP BY OwnerUserId HAVING COUNT(CASE WHEN PostTypeId = 1 THEN 1 ELSE NULL END) > 20 ORDER BY Percentage DESC","CreationDate":"2015-10-23 20:10:24","validated":true,"QueryBody_Original":"select OwnerUserId as [User Link],\n       Convert(Decimal(10,2), 100.0 * sum(case when PostTypeId=1 and Score<=0 then 1 else 0 end) \n                                    \/ sum(case when PostTypeId=1 then 1 else 0 end)) as Percentage\nfrom Posts\ngroup by OwnerUserId \nhaving count(case when PostTypeId=1 then 1 else null end)>20\norder by Percentage desc"},{"QuerySetId":264590,"Title":"Getting most recent 100 users with non empty email hash","Description":null,"QueryBody":"SELECT Id AS \"User Link\", CreationDate, ProfileImageUrl, EmailHash FROM Users WHERE NOT EmailHash IS NULL ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2015-01-14 13:13:25","validated":true,"QueryBody_Original":"SELECT  Top 100 Id As [User Link], CreationDate, ProfileImageUrl, EmailHash\nFrom Users\nWhere EmailHash Is Not Null\nOrder By CreationDate Desc"},{"QuerySetId":264731,"Title":"Find comments by text","Description":"You can enter a user id and some text to search for in their comments. Result contains links to the post, the comment and displays the text.","QueryBody":"SELECT Id AS \"Comment Link\", Postid AS \"Post Link\", CAST(TIME_TO_STR(CreationDate, '%Y.%m.%d') AS TEXT(10)) AS Date, Text FROM Comments WHERE Text LIKE '%##Text##%'","CreationDate":"2015-07-30 2:37:04","validated":true,"QueryBody_Original":"SELECT \n    Id [Comment Link],\n    Postid [Post Link],\n    convert(char(10), CreationDate, 102) Date,\n    Text\nfrom Comments\nwhere Text like '%##Text##%'"},{"QuerySetId":269009,"Title":"5 answers containing inline `code` markup","Description":null,"QueryBody":"SELECT * FROM posts WHERE posttypeid = 2 AND (body LIKE '%`_`%' OR body LIKE '%`__`%' OR body LIKE '%`___`%' OR body LIKE '%`____`%' OR body LIKE '%`_____`%') AND (LEFT(body, 50) LIKE '%`_`%' OR LEFT(body, 50) LIKE '%`__`%' OR LEFT(body, 50) LIKE '%`___`%' OR LEFT(body, 50) LIKE '%`____`%' OR LEFT(body, 50) LIKE '%`_____`%') LIMIT 5","CreationDate":"2015-01-30 6:16:47","validated":true,"QueryBody_Original":"SELECT  top 5 \n  *\nfrom posts\nwhere\n  posttypeid = 2\n  and\n  (\n    body like '%`_`%'\n    or body like '%`__`%'\n    or body like '%`___`%'\n    or body like '%`____`%'\n    or body like '%`_____`%'\n  )\n  and\n  (\n    left(body, 50) like '%`_`%'\n    or left(body, 50) like '%`__`%'\n    or left(body, 50) like '%`___`%'\n    or left(body, 50) like '%`____`%'\n    or left(body, 50) like '%`_____`%'\n  )"},{"QuerySetId":270120,"Title":"graph of distribution of question view counts","Description":null,"QueryBody":"SELECT ViewCount \/ 100 AS Hundred_Views \/* integer math automatically floors *\/, COUNT(*) AS Nquestions FROM Posts WHERE posttypeid = 1 \/* only questions *\/ GROUP BY ViewCount \/ 100 ORDER BY ViewCount \/ 100","CreationDate":"2015-02-03 21:28:58","validated":true,"QueryBody_Original":"SELECT \n    ViewCount\/100 AS Hundred_Views -- integer math automatically floors\n  , count(*) AS Nquestions\nFrom Posts \nwhere posttypeid = 1 -- only questions\ngroup by ViewCount\/100\norder by ViewCount\/100"},{"QuerySetId":271666,"Title":"Question time and answer time, global with user links","Description":null,"QueryBody":"SELECT p.creationdate AS Questioned, a.creationdate AS Answered FROM posts AS p, posts AS a, votes AS v WHERE a.parentid = p.id AND p.acceptedanswerid = v.postid AND v.postid = a.id AND v.votetypeid = 1 AND p.body LIKE '%<code>%'","CreationDate":"2015-02-10 0:08:42","validated":true,"QueryBody_Original":"SELECT \np.creationdate as Questioned, a.creationdate as Answered\nfrom\nposts p,\nposts a,\nvotes v\nwhere a.parentid = p.id\nand p.acceptedanswerid = v.postid\nand v.postid = a.id\nand v.votetypeid = 1\nand p.body like '%<code>%'"},{"QuerySetId":273689,"Title":"users who got a welcome comment within 24 hours","Description":null,"QueryBody":"SELECT udfp.owneruserid, COUNT(c.id) AS numwelcomes FROM (SELECT p.owneruserid, MIN(p.creationdate) AS dfp FROM posts AS p WHERE p.posttypeid < 3 \/* Q\/A *\/ GROUP BY p.owneruserid) AS udfp LEFT OUTER JOIN posts AS p ON p.owneruserid = udfp.owneruserid AND p.posttypeid < 3 LEFT OUTER JOIN comments AS c ON UPPER(c.text) LIKE '%WELCOME%' AND c.postid = p.id AND DATEDIFF(c.creationdate, udfp.dfp) < 24 GROUP BY udfp.owneruserid HAVING COUNT(c.id) > 0 ORDER BY COUNT(c.id) DESC","CreationDate":"2015-02-15 12:37:17","validated":true,"QueryBody_Original":"SELECT  udfp.owneruserid, count(c.id) as numwelcomes\nfrom (\n  SELECT p.owneruserid, min(p.creationdate) as dfp\n  from posts p\n  where p.posttypeid < 3 -- Q\/A\n  group by p.owneruserid\n  ) udfp\nleft outer join posts p on\n      p.owneruserid = udfp.owneruserid\n  and p.posttypeid < 3\nleft outer join comments c on\n      upper(c.text) like '%WELCOME%'\n  and c.postid = p.id\n  and datediff(hh, udfp.dfp, c.creationdate) < 24\ngroup by udfp.owneruserid\n\nhaving count(c.id) > 0\norder by count(c.id) desc"},{"QuerySetId":280187,"Title":"Top users by median score","Description":null,"QueryBody":"SELECT Id, DisplayName, ((SELECT MAX(Score) FROM (SELECT PERCENT AS Score FROM Posts WHERE OwnerUserId = Users.Id ORDER BY Score LIMIT 50) AS BottomHalf) + (SELECT MIN(Score) FROM (SELECT PERCENT AS Score FROM Posts WHERE OwnerUserId = Users.Id ORDER BY Score DESC LIMIT 50) AS TopHalf)) \/ 2 AS MedianScore FROM Users WHERE (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = Users.Id) > 10 ORDER BY MedianScore DESC","CreationDate":"2015-03-04 19:13:22","validated":true,"QueryBody_Original":"SELECT  Id, DisplayName, (\n (SELECT MAX(Score) FROM\n   (SELECT TOP 50 PERCENT Score FROM Posts WHERE OwnerUserId = Users.Id ORDER BY Score) AS BottomHalf)\n +\n (SELECT MIN(Score) FROM\n   (SELECT TOP 50 PERCENT Score FROM Posts WHERE OwnerUserId = Users.Id ORDER BY Score DESC) AS TopHalf)\n) \/ 2 AS MedianScore\nFROM Users\nWHERE (\n  SELECT COUNT(*)\n  FROM Posts\n  WHERE OwnerUserId = Users.Id\n) > 10\nORDER BY MedianScore desc"},{"QuerySetId":281772,"Title":"Top 20 stackoverflow Moroccan users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%morocco%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2020-11-19 2:05:57","validated":true,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%morocco%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":284807,"Title":"First Question -> Good Question; How soon?","Description":null,"QueryBody":"SELECT fp.owneruserid AS \"User Link\", p1.id AS \"Post Link\", p1.score, DATEDIFF(b.date, p1.creationdate) AS DaysToGoodBadge FROM (SELECT p.owneruserid, MIN(p.creationdate) AS dateFirstPost FROM posts AS p WHERE p.posttypeid = 1 GROUP BY p.owneruserid) AS fp INNER JOIN posts AS p1 ON p1.creationdate = fp.dateFirstPost AND p1.owneruserid = fp.owneruserid AND p1.score >= 25 INNER JOIN badges AS b ON b.userid = p1.owneruserid AND b.Name = 'Good Question' ORDER BY DATEDIFF(b.date, p1.creationdate)","CreationDate":"2015-03-10 23:16:00","validated":true,"QueryBody_Original":"SELECT  fp.owneruserid as [User Link], p1.id as [Post Link], p1.score\n  , datediff(d, p1.creationdate, b.date) as DaysToGoodBadge\nfrom\n(\n  SELECT p.owneruserid, min(p.creationdate) as dateFirstPost\n  from posts p\n  where p.posttypeid = 1\n  group by  p.owneruserid\n) fp\ninner join posts p1\non p1.creationdate = fp.dateFirstPost\nand p1.owneruserid = fp.owneruserid\nand p1.score >= 25\ninner join badges b\non b.userid = p1.owneruserid\nand b.Name = 'Good Question'\norder by datediff(d, p1.creationdate, b.date) asc"},{"QuerySetId":286813,"Title":"Users with reputation at least 15 by date","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, CreationDate \/* COUNT(*) AS ReppedUsers *\/ FROM Users WHERE Reputation >= 15 ORDER BY CreationDate DESC","CreationDate":"2015-03-14 21:38:27","validated":true,"QueryBody_Original":"SELECT  \n    Id, DisplayName, Reputation, CreationDate\n    -- COUNT(*) AS ReppedUsers\nFROM Users\nWHERE \n    Reputation >= 15\nORDER BY CreationDate DESC"},{"QuerySetId":287068,"Title":"Answer Score MIN MAX AVG","Description":null,"QueryBody":"SELECT MIN(Score) AS min, MAX(Score) AS max, AVG(Score) AS avg FROM Posts WHERE PostTypeId = 2","CreationDate":"2015-03-16 1:59:33","validated":true,"QueryBody_Original":"SELECT  \n MIN(Score) as min,\n MAX(Score) as max,\n AVG(Score) as avg\nFROM Posts\nWHERE PostTypeId = 2"},{"QuerySetId":290080,"Title":"DBA - Total Posts per Month","Description":null,"QueryBody":"SELECT CONCAT(YEAR(P.CreationDate), '-', MONTH(P.CreationDate)) AS YearMonth, COUNT(*) AS PostCount FROM POSTS AS P GROUP BY YEAR(P.CreationDate), MONTH(P.CreationDate) ORDER BY YEAR(P.CreationDate) DESC, MONTH(P.CreationDate) DESC","CreationDate":"2015-03-18 20:26:42","validated":true,"QueryBody_Original":"SELECT  CONCAT(year(P.CreationDate), '-', month(P.CreationDate)) as YearMonth, COUNT(*) as PostCount\nFROM POSTS P\nGROUP BY year(P.CreationDate), month(P.CreationDate)\nORDER BY year(P.CreationDate) DESC, month(P.CreationDate) DESC"},{"QuerySetId":290690,"Title":"Question and answer counts vs reputation","Description":null,"QueryBody":"SELECT Users.Reputation, CAST(COUNT(DISTINCT questions.Id) AS FLOAT(10, 1)) \/ CAST(COUNT(DISTINCT answers.Id) AS FLOAT(10, 1)) AS QuestionsPerAnswer FROM Users INNER JOIN Posts AS questions ON Users.Id = questions.OwnerUserId AND questions.PostTypeId = 1 INNER JOIN Posts AS answers ON Users.Id = answers.OwnerUserId AND answers.PostTypeId = 2 GROUP BY Users.Id, Users.Reputation ORDER BY Users.Reputation DESC","CreationDate":"2015-03-20 0:01:57","validated":true,"QueryBody_Original":"SELECT \n  Users.Reputation,\n  CONVERT(DECIMAL(10,1),COUNT(DISTINCT questions.Id))\/CONVERT(DECIMAL(10,1),COUNT(DISTINCT answers.Id)) AS QuestionsPerAnswer\nFROM\n  Users\nINNER JOIN\n  Posts questions\n  ON Users.Id = questions.OwnerUserId AND questions.PostTypeId = 1\nINNER JOIN\n  Posts answers\n  ON Users.Id = answers.OwnerUserId AND answers.PostTypeId = 2\nGROUP BY \n  Users.Id, Users.Reputation\nORDER BY\n  Users.Reputation DESC"},{"QuerySetId":290786,"Title":"Questions with two answers from the same user. Community wiki answers are excluded.","Description":"List questions that have two or more answers posted by the same user.\nCommunity wiki answers are excluded.\n\nFIXME: if a user has posted 3 or more answers, each answer pair is listed, resulting in \u0398(n\u00b2) output. Fortunately this is rare.","QueryBody":"SELECT a.ParentId AS \"Post Link\", 'site:\/\/a\/' + CAST(a.Id AS TEXT(9)) + '|' + CAST(a.CreationDate AS TEXT(19)) AS \"Answer 1\", a.Score AS \"Score\", 'site:\/\/a\/' + CAST(b.Id AS TEXT(9)) + '|' + CAST(b.CreationDate AS TEXT(19)) AS \"Answer 2\", b.Score AS \"Score\", a.OwnerUserId AS \"User Link\" FROM Posts AS a, Posts AS b WHERE a.ParentId = b.ParentId AND a.Id < b.Id AND a.OwnerUserId = b.OwnerUserId AND a.CommunityOwnedDate IS NULL AND b.CommunityOwnedDate IS NULL ORDER BY a.ParentId","CreationDate":"2015-03-20 2:39:58","validated":true,"QueryBody_Original":"SELECT \n  a.ParentId as [Post Link],\n  'site:\/\/a\/' + cast(a.Id as varchar(9)) + '|' + cast(a.CreationDate as varchar(19)) [Answer 1],\n  a.Score AS [Score],\n  'site:\/\/a\/' + cast(b.Id as varchar(9)) + '|' + cast(b.CreationDate as varchar(19)) [Answer 2],\n  b.Score AS [Score],\n  a.OwnerUserId AS [User Link]\nfrom Posts a, Posts b\nwhere a.ParentId = b.ParentId\n  and a.Id < b.Id\n  and a.OwnerUserId = b.OwnerUserId\n  and a.CommunityOwnedDate is null\n  and b.CommunityOwnedDate is null\norder by a.ParentId ASC"},{"QuerySetId":295957,"Title":"Answers with competing answers to consider voting on to get Sportsmanship","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p WHERE p.Score > 0 AND p.ParentId IN (SELECT ParentId FROM Posts GROUP BY ParentId HAVING COUNT(*) >= 2)","CreationDate":"2015-04-06 4:43:15","validated":true,"QueryBody_Original":"SELECT  p.Id as [Post Link]\nfrom Posts p\nwhere p.Score > 0\nand p.ParentId in \n(SELECT ParentId\nfrom Posts\ngroup by ParentId\nhaving COUNT(*)>=2)"},{"QuerySetId":296069,"Title":"Top 20 stackoverflow Tunisian users","Description":"This query returns the list of Top 20 Tunisian Stackoverflow Users","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%tunisia%' OR LOWER(Location) LIKE '%tunisie%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2020-07-24 17:51:53","validated":true,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%tunisia%' OR LOWER(Location) LIKE '%tunisie%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":296671,"Title":"Users with Yearling badge","Description":null,"QueryBody":"SELECT u.CreationDate, u.Id, u.Id AS \"User Link\" FROM Users AS u INNER JOIN Badges AS b ON b.UserId = u.Id WHERE b.Name = 'Yearling' AND u.Reputation = 1 GROUP BY u.Id, u.CreationDate ORDER BY u.Id","CreationDate":"2015-04-06 6:13:14","validated":true,"QueryBody_Original":"SELECT  u.CreationDate, u.Id, u.Id as [User Link] from Users u\ninner join Badges b on b.UserId=u.Id\nwhere b.Name='Yearling'\nand u.Reputation = 1\ngroup by u.Id, u.CreationDate\norder by u.Id asc"},{"QuerySetId":297131,"Title":"Comments that consist of the same thing twice.","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", * FROM Comments WHERE LEFT(Text, LENGTH(Text) \/ 2) = RIGHT(Text, LENGTH(Text) \/ 2)","CreationDate":"2015-04-08 2:42:41","validated":true,"QueryBody_Original":"SELECT \n  Id AS [Comment Link],\n  *\nFROM\n  Comments\nWHERE \n  --LEN(Text) % 2 = 0 AND\n  LEFT(Text, LEN(Text) \/ 2) = RIGHT(Text, LEN(Text) \/ 2)"},{"QuerySetId":298954,"Title":" Egypt Top 200 users","Description":null,"QueryBody":"SELECT Id AS ID, DisplayName AS Name, Reputation, LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Egypt%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-11-19 17:45:14","validated":true,"QueryBody_Original":"SELECT  TOP 200 Id AS ID,DisplayName AS Name,Reputation,LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Egypt%' ORDER BY Reputation DESC"},{"QuerySetId":300923,"Title":"Distribution of Votes on Questions","Description":null,"QueryBody":"SELECT Score, COUNT(Score) FROM Posts WHERE PostTypeId = 1 GROUP BY Score ORDER BY Score","CreationDate":"2015-04-14 21:54:09","validated":true,"QueryBody_Original":"SELECT \n  Score,\n  COUNT(Score)\nFROM Posts\nWHERE\n  PostTypeId = 1\nGROUP BY Score\nORDER BY Score"},{"QuerySetId":301316,"Title":"View for Habib Ahmed Post 2014-2015","Description":null,"QueryBody":"SELECT DISTINCT (p1.id) AS \"Post Link\", p2.ViewCount FROM Posts AS p1 JOIN Posts AS p2 ON p1.ParentId = p2.Id WHERE p1.OwnerUserId = 961113 AND p1.CreationDate > '2015-07-01' \/* AND p1.CreationDate <= '2014-12-31' *\/","CreationDate":"2016-04-07 20:44:18","validated":true,"QueryBody_Original":"SELECT  DISTINCT(p1.id) as [Post Link], p2.ViewCount \nFROM Posts as p1\nJOIN Posts p2 ON p1.ParentId = p2.Id\nwhere p1.OwnerUserId = 961113\nAND  p1.CreationDate > '2015-07-01' --AND p1.CreationDate <= '2014-12-31'"},{"QuerySetId":301674,"Title":"Posts in danger of automatic deletion","Description":null,"QueryBody":"SELECT Title, Id AS \"Post Link\", DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) AS Age, Score, CommentCount FROM Posts AS p WHERE PostTypeId = 1 AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) > 300 AND ((Score <= 0) OR (Score <= 1 AND OwnerUserId IS NULL)) AND NOT EXISTS(SELECT 1 FROM Posts AS q WHERE p.Id = q.ParentId) ORDER BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)","CreationDate":"2015-04-20 20:27:11","validated":true,"QueryBody_Original":"SELECT  Title, Id AS [Post Link], DATEDIFF(day, CreationDate, GETDATE()) AS Age, Score, CommentCount\nFROM Posts p\nWHERE\n  PostTypeId = 1 AND\n  DATEDIFF(day, CreationDate, GETDATE()) > 300 AND\n  ((Score <= 0) OR (Score <= 1 AND OwnerUserId IS NULL)) AND\n  NOT EXISTS (\n    SELECT 1 FROM Posts q\n    WHERE p.Id = q.ParentId)\nORDER BY DATEDIFF(day, CreationDate, GETDATE())"},{"QuerySetId":301745,"Title":"Top 100 Users from India","Description":null,"QueryBody":"SELECT DisplayName, Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2015-04-16 14:34:58","validated":true,"QueryBody_Original":"SELECT  TOP 100\n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n   LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":302827,"Title":"Find first question of users","Description":null,"QueryBody":"SELECT MIN(OwnerUserId), MIN(Id) AS QuestionId FROM POSTS WHERE PostTypeId = 1 GROUP BY OwnerUserId","CreationDate":"2015-04-17 18:28:25","validated":true,"QueryBody_Original":"SELECT  MIN(OwnerUserId), MIN(Id) as QuestionId\nFROM POSTS\nWHERE PostTypeId = 1\nGROUP BY OwnerUserId\n;"},{"QuerySetId":303000,"Title":"Users with at least 100K reputation","Description":null,"QueryBody":"SELECT * FROM Users WHERE Reputation >= 100000 ORDER BY Reputation DESC","CreationDate":"2015-05-07 7:03:43","validated":true,"QueryBody_Original":"SELECT  *\nFROM\n    Users\nWHERE\n    Reputation >= 100000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":303622,"Title":"Find tags with no excerpts (\"definitions\")","Description":null,"QueryBody":"SELECT Count, ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, ExcerptPostId AS \"Post Link\", WikiPostId AS \"Post Link\" FROM Tags AS t LEFT JOIN Posts AS p ON p.Id = t.ExcerptPostId WHERE NOT (ExcerptPostId IS NULL) \/* no tag excerpt *\/ AND LENGTH(Body) > 0 \/* tag excerpt empty *\/ ORDER BY Count DESC","CreationDate":"2016-05-20 22:22:57","validated":true,"QueryBody_Original":"SELECT  Count,\n       ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName,\n       ExcerptPostId                              AS [Post Link],\n       WikiPostId                                 AS [Post Link]\nFROM   Tags t\n       LEFT JOIN Posts p\n         ON p.Id = t.ExcerptPostId\nWHERE  NOT(ExcerptPostId IS NULL) -- no tag excerpt\n       AND LEN(Body) > 0   -- tag excerpt empty\nORDER  BY Count DESC"},{"QuerySetId":304326,"Title":"Find 2nd postdate of top 3 users","Description":null,"QueryBody":"SELECT ph2.UserId, MIN(ph2.CreationDate) AS SecondPostTime FROM PostHistory AS ph2 WHERE ph2.CreationDate > (SELECT MIN(ph1.CreationDate) FROM PostHistory AS ph1) GROUP BY ph2.UserID LIMIT 3","CreationDate":"2015-04-21 19:11:29","validated":true,"QueryBody_Original":"SELECT  TOP 3 ph2.UserId, MIN( ph2.CreationDate) as SecondPostTime\n  FROM PostHistory ph2\n WHERE ph2.CreationDate > ( SELECT MIN( ph1.CreationDate ) \n                 FROM PostHistory ph1 )\n                 \n GROUP BY ph2.UserID\n;"},{"QuerySetId":305369,"Title":"Find posts in last 60 days with \"coreclr\" in title, body or tags","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", title, Posts.CreationDate, PostTypeId, AnswerCount, tags, ViewCount, Score, OwnerUserId AS \"User Link\", DisplayName, LastActivityDate, LastEditDate, ClosedDate, body FROM Posts, Users WHERE Posts.OwnerUserId = Users.Id AND Posts.CreationDate >= CURRENT_TIMESTAMP() - 60 AND (title LIKE '%coreclr%' OR body LIKE '%coreclr%' OR tags LIKE '%<coreclr>%')","CreationDate":"2015-07-01 20:16:50","validated":true,"QueryBody_Original":"SELECT  Posts.Id AS [Post Link], title,Posts.CreationDate,PostTypeId,AnswerCount,tags,ViewCount,Score, \n  OwnerUserId AS [User Link] , DisplayName, LastActivityDate, LastEditDate, ClosedDate, body\nfrom Posts, Users where Posts.OwnerUserId = Users.Id and Posts.CreationDate>=getdate()-60\nand (title like '%coreclr%' or body like '%coreclr%' or tags like '%<coreclr>%')"},{"QuerySetId":306020,"Title":"Show posts about Jon Skeet","Description":null,"QueryBody":"SELECT Title, ViewCount, Id FROM Posts WHERE PostTypeId = 1 AND Title LIKE '%Jon Skeet%' OR Title LIKE '%Jon-Skeet%'","CreationDate":"2015-04-24 16:47:43","validated":true,"QueryBody_Original":"SELECT  Title, ViewCount, Id\nFROM Posts\nWHERE PostTypeId = 1 AND\n      Title LIKE '%Jon Skeet%' OR Title LIKE '%Jon-Skeet%'"},{"QuerySetId":309334,"Title":"Top Stack Overflow Users in New York","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%new york%' OR LOWER(Location) LIKE 'ny' OR UPPER(Location) LIKE 'NY%' ORDER BY Reputation DESC","CreationDate":"2015-05-02 5:16:11","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%new york%' OR\n    LOWER(Location) LIKE 'ny' OR\n    UPPER(Location) LIKE 'NY%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":309513,"Title":"Identifies tags without a tag wiki, or only a very short one (less than 35).","Description":"Identifies tags without a tag wiki, or only a very short one.","QueryBody":"SELECT t.TagName, p.Body FROM Posts AS p LEFT JOIN Tags AS t ON t.ExcerptPostId = p.Id WHERE t.Id > 0 AND p.PostTypeId = 4 AND LENGTH(p.Body) < 35 ORDER BY t.TagName","CreationDate":"2015-05-03 6:36:22","validated":true,"QueryBody_Original":"SELECT  t.TagName, p.Body\nfrom Posts p\nleft join Tags t\non t.ExcerptPostId = p.Id\nwhere t.Id > 0\nand p.PostTypeId = 4\nand len(p.Body) < 35\norder by t.TagName asc"},{"QuerySetId":309530,"Title":"Identifies tags without a tag wiki, or only a very short one (less than 5000)","Description":"Identifies tags without a tag wiki, or only a very short one.","QueryBody":"SELECT t.TagName, p.Body FROM Posts AS p LEFT JOIN Tags AS t ON t.WikiPostId = p.Id WHERE t.Id > 0 AND p.PostTypeId = 5 AND LENGTH(p.Body) < 5000 ORDER BY t.TagName","CreationDate":"2016-06-23 17:34:22","validated":true,"QueryBody_Original":"SELECT  t.TagName, p.Body\nfrom Posts p\nleft join Tags t\non t.WikiPostId = p.Id\nwhere t.Id > 0\nand p.PostTypeId = 5\nand len(p.Body) < 5000\norder by t.TagName asc"},{"QuerySetId":309531,"Title":"Identifies tags without a tag wiki, or only a very short one.","Description":"Identifies tags without a tag wiki, or only a very short one.","QueryBody":"SELECT t.TagName, p.Body FROM Posts AS p LEFT JOIN Tags AS t ON t.ExcerptPostId = p.Id WHERE t.Id > 0 AND p.PostTypeId = 4 AND LENGTH(p.Body) < 35 ORDER BY t.TagName","CreationDate":"2015-05-03 6:40:47","validated":true,"QueryBody_Original":"SELECT  t.TagName, p.Body\nfrom Posts p\nleft join Tags t\non t.ExcerptPostId = p.Id\nwhere t.Id > 0\nand p.PostTypeId = 4\nand len(p.Body) < 35\norder by t.TagName asc"},{"QuerySetId":312833,"Title":"No reppers: Lowest 256 Reputation \/ (Answer + Question) Count ratios","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation, COUNT(*) AS PostCount, Users.Reputation \/ CAST(COUNT(*) AS FLOAT) AS Ratio FROM Users INNER JOIN Posts ON Users.id = Posts.OwnerUserId AND Posts.PostTypeId IN (1, 2) GROUP BY Users.Id, Users.Reputation ORDER BY Ratio LIMIT 256","CreationDate":"2015-11-19 16:56:05","validated":true,"QueryBody_Original":"SELECT  TOP 256\n  Users.Id AS [User Link],\n  Users.Reputation,\n  COUNT(*) AS PostCount,\n  Users.Reputation \/ CAST(COUNT(*) AS FLOAT) AS Ratio\nFROM\n  Users\nINNER JOIN\n  Posts\nON\n  Users.id = Posts.OwnerUserId AND\n  Posts.PostTypeId IN(1, 2)\nGROUP BY\n  Users.Id,\n  Users.Reputation\nORDER BY\n  Ratio ASC"},{"QuerySetId":313045,"Title":"Top 20 Comments on Your Site","Description":null,"QueryBody":"SELECT Score, Id AS \"Comment Link\", CreationDate AS \"Post Date\" FROM Comments ORDER BY Score DESC LIMIT 20","CreationDate":"2015-05-11 18:39:35","validated":true,"QueryBody_Original":"SELECT  TOP 20\n Score,\n Id as [Comment Link],\n CreationDate as [Post Date]\nFROM\n Comments\nORDER BY\n Score DESC"},{"QuerySetId":313454,"Title":"Users with more downvotes than upvotes","Description":null,"QueryBody":"SELECT DisplayName, DownVotes, UpVotes, (DownVotes - UpVotes) AS Difference FROM Users WHERE DownVotes > Upvotes ORDER BY Difference DESC","CreationDate":"2015-05-12 19:57:09","validated":true,"QueryBody_Original":"SELECT  DisplayName, DownVotes, UpVotes, (DownVotes - UpVotes) as Difference\nFROM Users\nWHERE DownVotes > Upvotes \nORDER BY Difference DESC"},{"QuerySetId":314318,"Title":"Number of questions closed by date","Description":null,"QueryBody":"SELECT CAST(closeddate AS DATE) AS \"date\", COUNT(1) AS \"questions closed\" FROM posts GROUP BY CAST(closeddate AS DATE) ORDER BY CAST(closeddate AS DATE) DESC","CreationDate":"2015-05-14 17:55:54","validated":true,"QueryBody_Original":"SELECT  cast(closeddate as date) \"date\", count(1) \"questions closed\"\nfrom posts\ngroup by cast(closeddate as date)\norder by cast(closeddate as date) desc"},{"QuerySetId":318036,"Title":"number of posts per day of week over the years","Description":null,"QueryBody":"SELECT COUNT(*) AS \"all\", SUM(CASE WHEN creationdate BETWEEN DATEADD(yy, -1, GETDATE()) AND GETDATE() THEN 1 ELSE 0 END) AS \"year\", SUM(CASE WHEN creationdate BETWEEN DATEADD(m, -1, GETDATE()) AND GETDATE() THEN 1 ELSE 0 END) AS \"month\", SUM(CASE WHEN creationdate BETWEEN DATEADD(wk, -1, GETDATE()) AND GETDATE() THEN 1 ELSE 0 END) AS \"week\", DATEPART(dw, creationdate) AS \"day of week\" FROM posts GROUP BY DATEPART(dw, creationdate)","CreationDate":"2015-05-24 18:51:27","validated":true,"QueryBody_Original":"SELECT  count(*) as [all]\n, sum( case \nwhen creationdate between dateadd(yy , -1, getdate()) and getdate() then 1\nelse 0\nend) as [year]\n, sum( case \nwhen creationdate between dateadd(m , -1, getdate()) and getdate() then 1\nelse 0\nend) as [month]\n, sum( case \nwhen creationdate between dateadd(wk , -1, getdate()) and getdate() then 1\nelse 0\nend) as [week]\n\n, datepart(dw, creationdate) as [day of week] \nfrom posts\ngroup by datepart(dw, creationdate)"},{"QuerySetId":320870,"Title":"How many tags have issued at least one tag badge?","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT tagname FROM badges INNER JOIN tags ON TagName = badges.name WHERE tagbased = 'true' GROUP BY tagname) AS tagbadges","CreationDate":"2015-05-30 23:23:46","validated":true,"QueryBody_Original":"SELECT  count(*)\nfrom (\n\tSELECT tagname\n\tfrom badges\n\tinner join tags on TagName = badges.name\n\twhere tagbased = 'true'\n    group by tagname) as tagbadges"},{"QuerySetId":320902,"Title":"Most voted questions tagged with Ruby","Description":null,"QueryBody":"SELECT Id, * FROM Posts AS Question WHERE Tags LIKE '%ruby%' AND PostTypeId = 2 ORDER BY Score DESC LIMIT 150","CreationDate":"2018-09-16 16:13:17","validated":true,"QueryBody_Original":"SELECT  TOP 150 Id,*\nFROM Posts Question\nWHERE \n  Tags LIKE '%ruby%' AND\n  PostTypeId = 2\nORDER BY Score DESC"},{"QuerySetId":324268,"Title":"Find first question from query","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", MIN(Id) AS \"Post Link\" FROM POSTS WHERE PostTypeId = 2 OR PostTypeId = 1 GROUP BY OwnerUserId","CreationDate":"2015-06-09 23:33:49","validated":true,"QueryBody_Original":"SELECT  OwnerUserId as [User Link], MIN(Id) as [Post Link]\nFROM POSTS\nWHERE PostTypeId = 2 OR PostTypeId = 1\nGROUP BY OwnerUserId"},{"QuerySetId":324777,"Title":"Find all users answering question 3368246","Description":null,"QueryBody":"SELECT Id, Id AS \"Post Link\", ParentId, Title, OwnerUserId FROM posts WHERE ParentId = 3368246 AND PostTypeId = 2","CreationDate":"2015-06-11 14:15:29","validated":true,"QueryBody_Original":"SELECT  Id, Id as [Post Link], ParentId, Title,  OwnerUserId\n  from posts\n  where ParentId = 3368246 and PostTypeId = 2"},{"QuerySetId":326075,"Title":"Top 100 questions by tags in the last year (sorted by viewcount)","Description":null,"QueryBody":"SELECT Id, Title, CreationDate, Tags, ClosedDate, FavoriteCount, ViewCount, Score FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%##TagName1##%' AND Tags LIKE '%##TagName2##%' AND NOT Tags LIKE '%##ExcludedTag##%' AND Posts.CreationDate > CURRENT_TIMESTAMP() - 365 ORDER BY ViewCount DESC, FavoriteCount DESC, Score DESC LIMIT 100","CreationDate":"2015-06-15 11:28:35","validated":true,"QueryBody_Original":"SELECT  TOP 100 Id,Title,CreationDate,Tags,ClosedDate,FavoriteCount,ViewCount,Score \nFROM Posts \nWHERE PostTypeId = 1 \nAND Tags LIKE '%##TagName1##%' \nAND Tags LIKE '%##TagName2##%' \nAND Tags NOT LIKE '%##ExcludedTag##%'\nAnd Posts.CreationDate > GETDATE() - 365\nORDER BY ViewCount DESC, FavoriteCount DESC, Score DESC"},{"QuerySetId":326616,"Title":"Who asked most number of questions?","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\", COUNT(P.Id) AS \"Number of Questions Asked\" FROM Posts AS P INNER JOIN Users AS U ON P.OwnerUserId = U.Id WHERE P.PostTypeId = 1 GROUP BY U.Id HAVING COUNT(P.Id) > 75 ORDER BY \"Number of Questions Asked\" DESC","CreationDate":"2015-11-12 23:48:27","validated":true,"QueryBody_Original":"SELECT  U.Id AS [User Link], COUNT(P.Id) [Number of Questions Asked]\nFROM Posts P\nINNER JOIN Users U ON P.OwnerUserId = U.Id\nWHERE P.PostTypeId = 1\nGROUP BY U.Id\nHAVING COUNT(P.Id) > 75\nORDER BY [Number of Questions Asked] DESC"},{"QuerySetId":326618,"Title":"Who answered most number of questions?","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\", COUNT(A.Id) AS \"Number of Accepted Answers\" FROM Posts AS Q INNER JOIN Posts AS A ON Q.AcceptedAnswerId = A.Id INNER JOIN Users AS U ON A.OwnerUserId = U.Id WHERE A.PostTypeId = 2 GROUP BY U.Id HAVING COUNT(A.Id) > 500 ORDER BY \"Number of Accepted Answers\" DESC","CreationDate":"2017-01-12 1:32:45","validated":true,"QueryBody_Original":"SELECT  U.Id AS [User Link], COUNT(A.Id) [Number of Accepted Answers]\nFROM Posts Q\nINNER JOIN Posts A ON Q.AcceptedAnswerId = A.Id\nINNER JOIN Users U ON A.OwnerUserId = U.Id\nWHERE A.PostTypeId = 2\nGROUP BY U.Id\nHAVING COUNT(A.Id) > 500\nORDER BY [Number of Accepted Answers] DESC"},{"QuerySetId":327455,"Title":"Questions with images from users with less than 10 reputation","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.Body LIKE '%<img%' AND u.reputation < 10 AND p.PostTypeId = 1 ORDER BY p.CreationDate DESC","CreationDate":"2015-06-18 21:58:25","validated":true,"QueryBody_Original":"SELECT  p.Id as [Post Link]\nfrom Posts p\ninner join Users u on u.Id = p.OwnerUserId  \nwhere p.Body LIKE '%<img%' and u.reputation<10 and p.PostTypeId = 1\norder by p.CreationDate desc"},{"QuerySetId":328212,"Title":"TOP Stackoverflow users from Kerala with reputation higher than 200","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kerala%' AND Reputation >= 200 ORDER BY Reputation DESC","CreationDate":"2015-06-21 20:43:33","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kerala%'\n    AND Reputation >= 200\nORDER BY\n    Reputation DESC;"},{"QuerySetId":328481,"Title":"max number of dupes on a question","Description":null,"QueryBody":"SELECT pl.postid AS \"Post Link\", COUNT(*) FROM postlinks AS pl INNER JOIN posts AS p ON p.id = pl.postid WHERE linktypeid = 3 GROUP BY postid HAVING COUNT(*) > 2 ORDER BY 2 DESC","CreationDate":"2015-07-12 22:55:28","validated":true,"QueryBody_Original":"SELECT  pl.postid as [Post Link]\n     , count(*)\nfrom postlinks pl\ninner join posts p on p.id = pl.postid\nwhere linktypeid = 3\ngroup by postid\nhaving count(*)>2\norder by 2 desc"},{"QuerySetId":330047,"Title":"Users above 1k rep, sorted by highest rep","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, a.AnswersCount, u.Reputation \/ a.AnswersCount AS RepPerAnswer FROM Users AS u JOIN (SELECT COUNT(1) AS AnswersCount, OwnerUserId FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS a ON u.id = a.OwnerUserId WHERE u.Reputation > 1000 ORDER BY u.Reputation DESC","CreationDate":"2015-06-29 5:27:37","validated":true,"QueryBody_Original":"SELECT \n  u.DisplayName,\n  u.Reputation,\n  a.AnswersCount,\n  u.Reputation \/ a.AnswersCount as RepPerAnswer\nfrom Users u\njoin\n(\n    SELECT\n      count(1) as AnswersCount,\n      OwnerUserId\n    from Posts\n    where PostTypeId = 2\n    group by OwnerUserId\n) a\n  on u.id = a.OwnerUserId\n  WHERE u.Reputation > 1000\norder by u.Reputation desc"},{"QuerySetId":330704,"Title":"Number of Bounties each year","Description":null,"QueryBody":"SELECT COUNT(PostId), YEAR(CreationDate) FROM Votes WHERE NOT BountyAmount IS NULL AND VoteTypeId = 8 \/* BountyStart *\/ GROUP BY YEAR(CreationDate)","CreationDate":"2015-06-30 17:44:02","validated":true,"QueryBody_Original":"SELECT  count(PostId), YEAR(CreationDate)\n  FROM Votes\n  WHERE BountyAmount IS NOT NULL \n  AND VoteTypeId = 8 -- BountyStart\n  GROUP BY YEAR(CreationDate)"},{"QuerySetId":333171,"Title":"Number of Users who have acheived each class of badge in 2015","Description":null,"QueryBody":"SELECT Badges.Class, COUNT(Users.DisplayName) AS NumberOfUsers FROM Badges INNER JOIN Users ON Badges.UserId = Users.Id WHERE Badges.Date LIKE '%2015%' GROUP BY Badges.Class","CreationDate":"2015-07-07 18:31:46","validated":true,"QueryBody_Original":"SELECT  Badges.Class, COUNT(Users.DisplayName) As NumberOfUsers\nFROM Badges INNER JOIN Users ON Badges.UserId = Users.Id\nWHERE Badges.Date LIKE '%2015%'\nGROUP BY Badges.Class"},{"QuerySetId":336069,"Title":"Users with the most Populist Badges","Description":null,"QueryBody":"SELECT DisplayName AS Name, COUNT(Badges.Name) AS Badges FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Name IN ('Populist') GROUP BY DisplayName ORDER BY Badges DESC","CreationDate":"2015-07-13 20:24:18","validated":true,"QueryBody_Original":"SELECT  DisplayName AS Name, COUNT(Badges.Name) AS Badges FROM Users,Badges \n WHERE Users.Id = Badges.UserId AND \n  Badges.Name IN \n   ('Populist') \n    GROUP BY DisplayName\nORDER BY Badges DESC"},{"QuerySetId":336155,"Title":"Questions that have been closed as being Opinion Based","Description":"Questions that have been closed for being Opinion Based.","QueryBody":"SELECT DISTINCT Q.Id AS \"Post Link\", CASE WHEN Q.ClosedDate IS NULL THEN 'open' ELSE 'closed' END AS \"State\", Q.Score AS \"Score\", Q.AnswerCount AS \"Answers\", Q.CreationDate AS \"Asked\" FROM Posts AS Q INNER JOIN PostHistory AS PH ON (Q.Id = PH.PostId) WHERE Q.PostTypeId = 1 AND PH.PostHistoryTypeId = 10 AND PH.Comment = 105 ORDER BY Q.Score DESC","CreationDate":"2015-07-14 13:16:25","validated":true,"QueryBody_Original":"SELECT  DISTINCT\n  Q.Id AS [Post Link],\n  IIF(Q.ClosedDate IS NULL, 'open', 'closed') AS [State],\n  Q.Score AS [Score],\n  Q.AnswerCount AS [Answers],\n  Q.CreationDate AS [Asked]\nFROM\n  Posts AS Q\n  INNER JOIN PostHistory PH ON (Q.Id = PH.PostId)\nWHERE \n  Q.PostTypeId = 1 AND\n  PH.PostHistoryTypeId = 10 AND\n  PH.Comment = 105\nORDER BY\n  Q.Score DESC"},{"QuerySetId":336223,"Title":"The questions with the most answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts AS p ORDER BY AnswerCount DESC LIMIT 50","CreationDate":"2015-07-14 15:29:36","validated":true,"QueryBody_Original":"SELECT  \n         TOP 50\n         Id as [Post Link], *\nFROM     Posts p\nORDER BY\n         AnswerCount DESC"},{"QuerySetId":337184,"Title":"Number of Questions for each year","Description":null,"QueryBody":"SELECT COUNT(Id), YEAR(CreationDate) FROM Posts WHERE PostTypeId = 1 GROUP BY YEAR(CreationDate)","CreationDate":"2015-07-16 22:36:27","validated":true,"QueryBody_Original":"SELECT  count(Id), YEAR(CreationDate)\n  FROM Posts\n  WHERE PostTypeId = 1\n  GROUP BY YEAR(CreationDate)"},{"QuerySetId":337355,"Title":"Reputation I have gained from answers to bad qestions","Description":null,"QueryBody":"SELECT SUM(CASE WHEN q.acceptedanswerid = a.id THEN 15 ELSE 0 END + CASE WHEN a.Score > 0 THEN a.Score * 10 ELSE 0 END) AS \"Reputation\" FROM Posts AS a INNER JOIN posts AS q ON a.parentid = q.id WHERE NOT q.closeddate IS NULL AND NOT EXISTS(SELECT 1 FROM PostHistory WHERE PostId = q.Id AND CreationDate = q.ClosedDate AND PostHistoryTypeId = 10 AND Comment IN (101, 1))","CreationDate":"2015-07-17 20:55:04","validated":true,"QueryBody_Original":"SELECT  SUM( iif(q.acceptedanswerid = a.id,15,0) + iif(a.Score > 0, a.Score*10, 0)) [Reputation]\nfrom\n  Posts a\n  inner join posts q on a.parentid = q.id\nwhere\n  q.closeddate is not null\n  and not exists (SELECT 1 from PostHistory where PostId=q.Id and CreationDate=q.ClosedDate and PostHistoryTypeId=10 and Comment in (101,1))"},{"QuerySetId":337478,"Title":"How many answers to bad questions are there?","Description":null,"QueryBody":"SELECT SUM(1) AS \"Answers\" FROM Posts AS a INNER JOIN posts AS q ON a.parentid = q.id WHERE NOT q.closeddate IS NULL AND NOT EXISTS(SELECT 1 FROM PostHistory WHERE PostId = q.Id AND CreationDate = q.ClosedDate AND PostHistoryTypeId = 10 AND Comment IN (101, 1))","CreationDate":"2015-07-17 20:59:30","validated":true,"QueryBody_Original":"SELECT  SUM(1) [Answers]\nfrom\n  Posts a\n  inner join posts q on a.parentid = q.id\nwhere\n  q.closeddate is not null\n  and not exists (SELECT 1 from PostHistory where PostId=q.Id and CreationDate=q.ClosedDate and PostHistoryTypeId=10 and Comment in (101,1))"},{"QuerySetId":337869,"Title":"How questions get closed since the beginning of 2014","Description":null,"QueryBody":"SELECT SUM(CASE WHEN userId = -1 THEN 1 ELSE 0 END) AS \"Community closed\", SUM(CASE WHEN userId = -1 THEN 0 ELSE 1 END) AS \"Mod or Dupehammer closed\", COUNT(Id) AS \"Total\" FROM PostHistory WHERE PostHistoryTypeId = 10 AND CreationDate >= '2014-01-01'","CreationDate":"2015-07-19 2:43:21","validated":true,"QueryBody_Original":"SELECT  sum(case when userId=-1 then 1 else 0 end) as [Community closed], \nsum(case when userId=-1 then 0 else 1 end) as [Mod or Dupehammer closed],\ncount(Id) as [Total]\nfrom PostHistory \nwhere PostHistoryTypeId = 10\nand CreationDate>='2014-01-01'"},{"QuerySetId":339883,"Title":"Proportion of Bounty Questions with an Accepted Answer","Description":null,"QueryBody":"SELECT 1.0 * COUNT(CASE WHEN NOT p.AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) \/ COUNT(p.Id) FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId WHERE v.VoteTypeId = 8","CreationDate":"2015-07-24 23:24:48","validated":true,"QueryBody_Original":"SELECT \n1.0 * COUNT(CASE WHEN p.AcceptedAnswerId IS NOT NULL THEN 1 ELSE NULL END)\n          \/ \nCount(p.Id)\nFROM Posts p\nINNER JOIN Votes v\n    ON p.Id = v.PostId\nWHERE v.VoteTypeId = 8"},{"QuerySetId":340525,"Title":"Active israeli users under 18","Description":null,"QueryBody":"SELECT DisplayName, Age, Reputation FROM Users WHERE LOWER(Location) LIKE '%israel%' AND Reputation > 101 AND Age <= 18 ORDER BY Reputation DESC","CreationDate":"2015-07-28 1:09:24","validated":true,"QueryBody_Original":"SELECT \n  DisplayName, Age, Reputation\nFROM\n  Users\nWHERE\n  LOWER(Location) LIKE '%israel%'\n  AND Reputation > 101\n  AND Age <= 18\nORDER BY\n  Reputation DESC;"},{"QuerySetId":342981,"Title":"Show 10 most viewed posts with links","Description":null,"QueryBody":"SELECT ViewCount, Id AS \"Post Link\" FROM Posts ORDER BY ViewCount DESC LIMIT 10","CreationDate":"2015-08-04 13:06:58","validated":true,"QueryBody_Original":"select top(10) ViewCount, Id AS [Post Link]\nfrom Posts\norder by ViewCount desc"},{"QuerySetId":345127,"Title":"Welcome comments on posts older than 14 days","Description":null,"QueryBody":"SELECT c.CreationDate, c.Id AS \"Comment Link\", c.Text FROM Comments AS c INNER JOIN Posts AS p ON p.Id = c.PostId WHERE Text LIKE 'Welcome to%' AND DATEDIFF(CURRENT_TIMESTAMP(), p.LastActivityDate) >= 14 ORDER BY c.CreationDate DESC","CreationDate":"2015-08-12 13:09:15","validated":true,"QueryBody_Original":"select c.CreationDate, c.Id as [Comment Link], c.Text from Comments c \ninner join Posts p on p.Id = c.PostId\nwhere Text like 'Welcome to%' \nand datediff(day, p.LastActivityDate, getdate())>=14\norder by c.CreationDate desc"},{"QuerySetId":348258,"Title":"Views on pure-id-req vs. pure-non-id-req","Description":null,"QueryBody":"SELECT 'Pure [identification-request]' AS \"Type\", SUM(ViewCount) AS \"Views\" FROM Posts WHERE PostTypeId = 1 AND Tags = '<identification-request>' UNION SELECT 'Pure non-[identification-request]' AS \"Type\", SUM(ViewCount) AS \"Views\" FROM Posts WHERE PostTypeId = 1 AND NOT Tags LIKE '%<identification-request>%'","CreationDate":"2015-08-12 2:22:01","validated":true,"QueryBody_Original":"SELECT \n  'Pure [identification-request]' AS \"Type\",\n  SUM(ViewCount) AS \"Views\"\nFROM\n  Posts\nWHERE\n  PostTypeId = 1\n  AND Tags = '<identification-request>'\n\n\nUNION\n\nSELECT\n  'Pure non-[identification-request]' AS \"Type\",\n  SUM(ViewCount) AS \"Views\"\nFROM\n  Posts\nWHERE\n  PostTypeId = 1\n  AND Tags NOT LIKE '%<identification-request>%'"},{"QuerySetId":351538,"Title":"Top 100 Users by Median Score (with Avg score)","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers, (SELECT MAX(Score) FROM (SELECT PERCENT AS Score FROM Posts AS PU WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND PU.OwnerUserId = Users.Id ORDER BY Score LIMIT 50) AS t) AS MedianAnswerScore FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL GROUP BY Users.Id, DisplayName ORDER BY MedianAnswerScore DESC LIMIT 100","CreationDate":"2015-08-18 20:12:08","validated":true,"QueryBody_Original":"SELECT TOP 100 Users.Id as [User Link],\n               Count(Posts.Id) AS Answers,\n               (SELECT MAX(Score) FROM \n                       (SELECT TOP 50 PERCENT Score FROM Posts AS PU\n                        WHERE PostTypeId = 2 AND \n                              CommunityOwnedDate IS NULL AND\n                              PU.OwnerUserId = Users.Id\n                        ORDER BY Score\n                        ) AS t\n               ) AS MedianAnswerScore\nFROM Posts\n  INNER JOIN Users ON Users.Id = OwnerUserId\nWHERE PostTypeId = 2 AND\n      CommunityOwnedDate IS NULL\nGROUP BY Users.Id, DisplayName\nORDER BY MedianAnswerScore DESC"},{"QuerySetId":352681,"Title":"How many questions about `Symbol#to_proc` are there in the [tag:ruby] tag?","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Tags LIKE '%ruby%' AND Title LIKE '%&:%' ORDER BY Id","CreationDate":"2015-08-20 12:37:49","validated":true,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE Tags LIKE '%ruby%' AND Title LIKE '%&:%' ORDER BY Id;"},{"QuerySetId":353449,"Title":"Show Questions With Questions as their Accepted Answer","Description":null,"QueryBody":"SELECT A.* FROM Posts AS Q INNER JOIN Posts AS A ON (Q.AcceptedAnswerId = A.Id) WHERE A.PostTypeId = 1","CreationDate":"2015-08-21 21:38:56","validated":true,"QueryBody_Original":"SELECT  A.*\nFROM Posts AS Q\nINNER JOIN Posts AS A ON (Q.AcceptedAnswerId = A.Id)\nWHERE A.PostTypeId = 1;"},{"QuerySetId":354849,"Title":"Rep per day (excluding association bonus)","Description":null,"QueryBody":"SELECT displayname, (reputation - 101.0) \/ DATEDIFF(CURRENT_TIMESTAMP(), creationdate) FROM users ORDER BY (reputation - 101.0) \/ DATEDIFF(CURRENT_TIMESTAMP(), creationdate) DESC","CreationDate":"2015-08-26 5:46:11","validated":true,"QueryBody_Original":"SELECT  displayname, (reputation - 101.0) \/ datediff(d,creationdate,getdate()) from\nusers\norder by (reputation - 101.0) \/ datediff(d,creationdate,getdate()) desc"},{"QuerySetId":358074,"Title":"Top 100 most famous (viewed) questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", ViewCount FROM Posts WHERE PostTypeId = 1 ORDER BY ViewCount DESC LIMIT 100","CreationDate":"2015-09-02 3:25:57","validated":true,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], OwnerUserId as [User Link], ViewCount\nFROM Posts\nWHERE PostTypeId = 1\nORDER BY ViewCount DESC"},{"QuerySetId":358297,"Title":"Users under 10k with gold tag badges","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", b.Name FROM Users AS u INNER JOIN Badges AS b ON u.Id = b.UserId WHERE b.TagBased = 1 AND b.Class = 1 AND u.Reputation < 10000","CreationDate":"2015-09-01 19:52:55","validated":true,"QueryBody_Original":"SELECT \n  u.Id [User Link],\n  b.Name\nfrom Users u\ninner join Badges b on u.Id = b.UserId\nwhere\n  b.TagBased = 1 and\n  b.Class = 1 and\n  u.Reputation < 10000"},{"QuerySetId":358421,"Title":"Top 20 most famous (viewed) questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", ViewCount FROM Posts WHERE PostTypeId = 1 ORDER BY ViewCount DESC LIMIT 20","CreationDate":"2015-09-02 3:27:50","validated":true,"QueryBody_Original":"SELECT  TOP 20 Id AS [Post Link], OwnerUserId as [User Link], ViewCount\nFROM Posts\nWHERE PostTypeId = 1\nORDER BY ViewCount DESC"},{"QuerySetId":360093,"Title":"Usersranked by average answer score","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", SUM(Posts.Score) AS \"Upvotes earned\", COUNT(*) AS \"Answers written\", 1.0 * SUM(Posts.Score) \/ COUNT(*) AS \"Average answer score\" FROM Posts LEFT JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 GROUP BY Users.Id ORDER BY \"Average answer score\" DESC","CreationDate":"2015-09-05 10:50:55","validated":true,"QueryBody_Original":"SELECT\n       Users.Id AS [User Link],\n       SUM(Posts.Score) AS \"Upvotes earned\",\n       COUNT(*) AS \"Answers written\",\n       1.0 * SUM(Posts.Score) \/ COUNT(*) AS \"Average answer score\"\nFROM Posts LEFT JOIN Users\nON Posts.OwnerUserId = Users.Id\nWHERE Posts.PostTypeId = 2\nGROUP BY Users.Id\nORDER BY \"Average answer score\" DESC"},{"QuerySetId":360094,"Title":"Top 2000 users ranked by average answer score","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", SUM(Posts.Score) AS \"Upvotes\", COUNT(*) AS \"Answers\", 1.0 * SUM(Posts.Score) \/ COUNT(*) AS \"Ave. score\", MAX(Posts.Score) AS \"Highest score\", 1.0 * MAX(Posts.Score) \/ SUM(Posts.Score) AS \"Fraction votes from highest scoring answer\" FROM Posts LEFT JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 GROUP BY Users.Id ORDER BY \"Ave. score\" DESC LIMIT 2000","CreationDate":"2018-05-06 12:56:31","validated":true,"QueryBody_Original":"SELECT\n       TOP 2000\n       Users.Id AS [User Link],\n       SUM(Posts.Score) AS \"Upvotes\",\n       COUNT(*) AS \"Answers\",\n       1.0 * SUM(Posts.Score) \/ COUNT(*) AS \"Ave. score\",\n       MAX(Posts.Score) AS \"Highest score\",\n       1.0 * MAX(Posts.Score) \/ SUM(Posts.Score) AS \"Fraction votes from highest scoring answer\"\nFROM Posts LEFT JOIN Users\nON Posts.OwnerUserId = Users.Id\nWHERE Posts.PostTypeId = 2\nGROUP BY Users.Id\nORDER BY \"Ave. score\" DESC"},{"QuerySetId":360291,"Title":"Questions with \"grammatically correct\" in their title","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM posts WHERE title LIKE '% grammatically correct%' AND posttypeid = 1","CreationDate":"2015-09-05 20:33:36","validated":true,"QueryBody_Original":"SELECT  id as [Post Link]\nfrom posts\nwhere title like '% grammatically correct%'\nand posttypeid = 1"},{"QuerySetId":361476,"Title":"Average score for accepted answers in Java language","Description":null,"QueryBody":"SELECT AVG(a.Score) FROM Posts AS a WHERE a.PostTypeId = 2 \/* Answer *\/ AND a.Tags LIKE '%java%'","CreationDate":"2015-09-09 0:45:50","validated":true,"QueryBody_Original":"SELECT  AVG(a.Score) \nfrom Posts as a\nwhere \na.PostTypeId = 2 -- Answer\nAND\na.Tags like '%java%'"},{"QuerySetId":362953,"Title":"Most common badges by count","Description":null,"QueryBody":"SELECT COUNT(UserId) AS Earned, Name, CASE WHEN Class = 1 THEN 'Gold' WHEN Class = 2 THEN 'Silver' WHEN Class = 3 THEN 'Bronze' END AS Class FROM Badges WHERE TagBased = 0 GROUP BY Name, Class ORDER BY Earned DESC","CreationDate":"2017-02-20 23:30:00","validated":true,"QueryBody_Original":"SELECT  COUNT(UserId) AS Earned, Name, \n  CASE\n    WHEN Class = 1 THEN 'Gold'\n    WHEN Class = 2 THEN 'Silver'\n    WHEN Class = 3 THEN 'Bronze'\n  END AS Class\nFROM Badges\nWHERE TagBased = 0\nGROUP BY Name, Class\nORDER BY Earned DESC"},{"QuerySetId":365785,"Title":"Top 150 users from Bulgaria","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Bulgaria%' OR Location LIKE '%Sofia%' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2015-09-18 9:19:17","validated":true,"QueryBody_Original":"SELECT  TOP 150 \n  Id\n  ,DisplayName\n  ,Reputation\n  ,WebsiteUrl\n  ,Location\nFROM Users\nWHERE \n  Location LIKE '%Bulgaria%' \n  OR Location LIKE '%Sofia%'\nORDER BY Reputation DESC"},{"QuerySetId":367000,"Title":"Comments telling people to migrate to ELL","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ClosedDate FROM Posts AS P WHERE P.Id IN (SELECT PostId FROM Comments WHERE Text LIKE '%on ELL%' OR Text LIKE '%on English Language Learners%') AND PostTypeId = 1 ORDER BY Id","CreationDate":"2015-09-21 18:28:22","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link],\nScore,\nClosedDate\nFROM Posts P\nWHERE P.Id in (\n  SELECT PostId \n  FROM Comments\n  WHERE Text LIKE '%on ELL%'\n  OR Text LIKE '%on English Language Learners%'\n)\nAND PostTypeId = 1\nORDER BY Id"},{"QuerySetId":370456,"Title":"What percentage of questions have been edited?","Description":null,"QueryBody":"SELECT COUNT(LastEditDate) AS \"Edited posts\", COUNT(*) AS \"All posts\", COUNT(LastEditDate) * 100.0 \/ COUNT(*) AS \"Percent edited\" FROM Posts WHERE Posts.PostTypeId = 1","CreationDate":"2015-10-02 18:19:28","validated":true,"QueryBody_Original":"SELECT \n  count(LastEditDate) AS \"Edited posts\",\n  count(*) AS \"All posts\",\n  count(LastEditDate) * 100.0 \/ count(*) AS \"Percent edited\"\nFROM Posts\nWHERE Posts.PostTypeId=1;"},{"QuerySetId":370549,"Title":"Profile average views \/ reputation \u2014 With view and without a picture","Description":null,"QueryBody":"SELECT AVG(Reputation \/ Views) FROM USERS WHERE NOT ProfileImageUrl IS NULL AND Views <> 0","CreationDate":"2015-10-02 21:52:06","validated":true,"QueryBody_Original":"SELECT  AVG(Reputation\/Views) FROM USERS WHERE ProfileImageUrl IS NOT NULL AND Views != 0"},{"QuerySetId":373702,"Title":"Top 100 oldest Questions for a Tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE TAGS LIKE '%<##tag##>%' ORDER BY CreationDate LIMIT 100","CreationDate":"2015-10-10 2:20:59","validated":true,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], CreationDate\nFROM Posts\nWHERE TAGS LIKE '%<##tag##>%'\nORDER BY CreationDate ASC;"},{"QuerySetId":373965,"Title":"Number of posts in Stack Overflow that are over the 30k soft character limit","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", (CASE WHEN p.PostTypeId = 1 THEN 'Q' ELSE 'A' END) AS Type, p.Id, LENGTH(p.Body) AS HtmlSize, LENGTH(ph.Text) AS MarkdownSize, p.CreationDate, ph.CreationDate AS LatestRevisionDate FROM Posts AS p INNER JOIN PostHistory AS ph ON ph.PostId = p.Id LEFT OUTER JOIN PostHistory AS phb ON phb.PostId = ph.PostId AND ph.CreationDate < phb.CreationDate WHERE (LENGTH(p.Body) > 30000 OR LENGTH(ph.Text) > 30000) AND ph.PostHistoryTypeId IN (2, 5, 8) AND phb.CreationDate IS NULL AND p.PostTypeId IN (1, 2) ORDER BY MarkdownSize DESC","CreationDate":"2015-10-11 7:11:23","validated":true,"QueryBody_Original":"SELECT \n  p.Id AS [Post Link],\n  (CASE WHEN p.PostTypeId = 1 THEN 'Q' ELSE 'A' END) AS Type,\n  p.Id,\n  LEN(p.Body) AS HtmlSize,\n  LEN(ph.Text) AS MarkdownSize,\n  p.CreationDate,\n  -- p.LastEditDate,\n  ph.CreationDate AS LatestRevisionDate\nFROM Posts p\n  INNER JOIN PostHistory ph\n    ON ph.PostId = p.Id\n  LEFT OUTER JOIN PostHistory phb\n    ON phb.PostId = ph.PostId AND ph.CreationDate < phb.CreationDate\nWHERE (LEN(p.Body) > 30000 OR LEN(ph.Text) > 30000)\n  AND ph.PostHistoryTypeId IN (2, 5, 8)\n  AND phb.CreationDate IS NULL\n  AND p.PostTypeId IN (1, 2)\nORDER BY MarkdownSize DESC"},{"QuerySetId":374926,"Title":"Find question in the past month that have links to JSFiddle or CodePen but no code","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score FROM Posts WHERE CreationDate > DATEADD(MONTH, -1, GETDATE()) AND PostTypeId = 1 AND (Body LIKE '%jsfiddle.net%' OR Body LIKE '%codepen.io%') AND NOT (Body LIKE '%    %' OR Body LIKE '%<pre>%' OR Body LIKE '%<code>%') ORDER BY id DESC","CreationDate":"2020-06-16 13:43:27","validated":true,"QueryBody_Original":"SELECT  Id [Post Link], Score\nfrom Posts\nwhere CreationDate > DATEADD(MONTH, -1, GETDATE())\nand PostTypeId = 1\nand (Body like '%jsfiddle.net%' or Body like '%codepen.io%')\nand not (Body like '%    %' or Body like '%<pre>%' or Body like '%<code>%')\norder by id desc"},{"QuerySetId":375986,"Title":"Get posts with C-c in their body","Description":null,"QueryBody":"SELECT id AS \"Post Link\", body FROM posts WHERE body LIKE '%C-c%'","CreationDate":"2020-09-17 17:45:35","validated":true,"QueryBody_Original":"SELECT  id [Post Link]\n,      body\nfrom   posts\nwhere  body like '%C-c%'"},{"QuerySetId":376049,"Title":"Users sorted by profile views","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Views FROM Users ORDER BY Views DESC","CreationDate":"2015-10-15 18:05:28","validated":true,"QueryBody_Original":"SELECT  Id AS [User Link], Views FROM Users ORDER BY Views DESC"},{"QuerySetId":376556,"Title":"Top Askers By View Count","Description":null,"QueryBody":"SELECT SUM(ViewCount) AS Tot_Score, DisplayName FROM posts AS p INNER JOIN users AS u ON u.Id = p.OwnerUserID WHERE posttypeid = 1 AND NOT OwnerUserID IS NULL GROUP BY DisplayName ORDER BY SUM(ViewCount) DESC","CreationDate":"2015-11-02 15:28:14","validated":true,"QueryBody_Original":"SELECT \nsum(ViewCount) as Tot_Score,\nDisplayName\nfrom posts p\ninner join users u\non u.Id = p.OwnerUserID\nwhere posttypeid = 1\nand OwnerUserID is not null\ngroup by DisplayName\norder by sum(ViewCount) desc"},{"QuerySetId":377635,"Title":"All possible Location entries for Brazil ('%Bra%')","Description":null,"QueryBody":"SELECT DISTINCT Location FROM Users WHERE Location LIKE '%Bra%'","CreationDate":"2018-01-16 2:41:43","validated":true,"QueryBody_Original":"SELECT  distinct \n  Location \n  \nFROM \n  Users \n\nWHERE \n  Location like '%Bra%'\n\n;"},{"QuerySetId":378497,"Title":"Users from a specific location","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, Location, WebsiteUrl, REPLACE(REPLACE(AboutMe, CHAR(13), ''), CHAR(10), '') AS AboutMe FROM Users WHERE Location LIKE '%##Location##%' ORDER BY Reputation DESC","CreationDate":"2018-01-16 2:44:12","validated":true,"QueryBody_Original":"SELECT  \n  Id [User Link], \n  Reputation, \n  Location, \n  WebsiteUrl,\n  REPLACE(REPLACE(AboutMe, CHAR(13), ''), CHAR(10), '') as AboutMe \n\nFROM \n  Users\n\nWHERE \n  Location like '%##Location##%'\n  \nORDER BY \n  Reputation DESC"},{"QuerySetId":380054,"Title":"Max rep of all days ever","Description":null,"QueryBody":"SELECT Rep, OwnerDisplayName, OwnerUserId, dt FROM (SELECT MAX(Score) AS Rep, OwnerDisplayName, OwnerUserId, CAST(TIME_TO_STR(CreationDate, '%m\/%d\/%Y') AS TEXT(30)) AS dt FROM Posts GROUP BY OwnerDisplayName, OwnerUserId, CAST(TIME_TO_STR(CreationDate, '%m\/%d\/%Y') AS TEXT(30))) AS a ORDER BY Rep DESC LIMIT 100","CreationDate":"2015-10-24 3:39:21","validated":true,"QueryBody_Original":"SELECT  TOP 100 Rep, OwnerDisplayName, OwnerUserId, dt \nFROM (\n    SELECT MAX(Score) Rep, OwnerDisplayName, OwnerUserId, convert(varchar, CreationDate, 101) dt\n        FROM Posts\n        GROUP BY OwnerDisplayName, OwnerUserId, convert(varchar, CreationDate, 101)\n    ) a\nORDER BY Rep DESC"},{"QuerySetId":386147,"Title":"Collect aggregate results for users","Description":null,"QueryBody":"SELECT u.id, u.reputation, (SELECT COUNT(*) FROM votes WHERE votetypeid IN (2, 3) AND postid IN (SELECT id FROM posts WHERE posttypeid = 1 AND OwnerUserId = u.id)) AS \"aggregate number of votes received on questions\" FROM users AS u WHERE u.id IN (83, 2926, 3289, 5862, 6292, 8705)","CreationDate":"2015-11-06 12:54:18","validated":true,"QueryBody_Original":"SELECT  u.id,u.reputation,\n(SELECT count(*) from votes where votetypeid in (2,3) and postid in\n    (SELECT id from posts where posttypeid=1 and OwnerUserId = u.id)) as [aggregate number of votes received on questions]\nfrom users u \nwhere u.id in\n(83,\n2926,\n3289,\n5862,\n6292,\n8705)"},{"QuerySetId":387083,"Title":"Top 80 SO Users from Croatia","Description":"SO users from Warsaw with highest reputation","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%croatia%' OR UPPER(Location) LIKE '%CROATIA%' OR Location LIKE '%Croatia%' AND Reputation >= 2000 ORDER BY Reputation DESC LIMIT 80","CreationDate":"2015-12-16 15:09:21","validated":true,"QueryBody_Original":"SELECT  TOP 80\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%croatia%'\n    OR UPPER(Location) LIKE '%CROATIA%'\n    or Location like '%Croatia%'\n    AND Reputation >= 2000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":388828,"Title":"Tag wiki editors who don't link to anything","Description":null,"QueryBody":"SELECT e.LastEditorUserId AS \"User Link\", COUNT(*), MAX(e.Id) AS \"Post Link\" FROM Tags AS t INNER JOIN Posts AS e ON e.Id = t.ExcerptPostId INNER JOIN Posts AS w ON w.Id = t.WikiPostId WHERE NOT w.Body LIKE '%href%' AND NOT e.Body LIKE '%href%' AND LENGTH(e.Body) > 2 AND LENGTH(w.Body) > 2 GROUP BY e.LastEditorUserId ORDER BY COUNT(*) DESC","CreationDate":"2016-01-30 5:05:57","validated":true,"QueryBody_Original":"SELECT  e.LastEditorUserId as [User Link], COUNT(*), MAX(e.Id) as [Post Link]\nfrom Tags t\ninner join Posts e on e.Id = t.ExcerptPostId\ninner join Posts w on w.Id = t.WikiPostId\nwhere w.Body not like '%href%'\nand e.Body not like '%href%'\nand LEN(e.Body) > 2\nand LEN(w.Body) > 2\ngroup by e.LastEditorUserId\norder by COUNT(*) DESC"},{"QuerySetId":392180,"Title":"List of questions with bounties","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", CreationDate, BountyAmount FROM Votes WHERE NOT BountyAmount IS NULL ORDER BY CreationDate DESC, BountyAmount DESC LIMIT 500","CreationDate":"2016-09-02 22:15:35","validated":true,"QueryBody_Original":"SELECT  TOP 500 PostId AS [Post Link], CreationDate, BountyAmount\nFROM Votes\nWHERE BountyAmount IS NOT NULL\nOrder By CreationDate Desc, BountyAmount Desc"},{"QuerySetId":392331,"Title":"Count Reopened Questions Edited By Owner","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS p WHERE \/* reopened *\/ \/* closed *\/ p.PostTypeId = 1 \/* questions only *\/ AND EXISTS(SELECT * FROM PostHistory AS ph INNER JOIN PostHistory AS ph2 ON ph2.postId = ph.postId AND ph2.PostHistoryTypeId IN (5) AND ph2.CreationDate > ph.CreationDate AND ph2.UserId = p.OwnerUserId WHERE ph.postId = p.Id AND ph.PostHistoryTypeId = 10 \/* closed *\/) \/* closed *\/ AND EXISTS(SELECT * FROM PostHistory AS ph WHERE ph.postId = p.Id AND ph.PostHistoryTypeId = 11 \/* reopened *\/) \/* reopened *\/","CreationDate":"2015-11-15 15:09:31","validated":true,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts p\nWHERE \n    p.PostTypeId = 1 -- questions only\n    AND EXISTS (\n      SELECT * FROM PostHistory ph\n          INNER JOIN PostHistory ph2 ON ph2.postId = ph.postId\n          AND ph2.PostHistoryTypeId IN (5) -- edit title(4), body(5), tags(6)\n            AND ph2.CreationDate > ph.CreationDate\n            AND ph2.UserId = p.OwnerUserId\n      WHERE ph.postId = p.Id\n        AND ph.PostHistoryTypeId = 10 -- closed\n        )\n    AND EXISTS (\n      SELECT * FROM PostHistory ph\n      WHERE ph.postId = p.Id\n        AND ph.PostHistoryTypeId = 11 -- reopened\n        )"},{"QuerySetId":394235,"Title":"Top 20 users called Nathan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE DisplayName LIKE '%Nathan%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2015-11-19 18:08:33","validated":true,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    DisplayName like '%Nathan%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":396306,"Title":"Top 5 StackOverflow members in Kolkata","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%kolkata%' OR UPPER(Location) LIKE '%KOLKATA%' OR Location LIKE '%kolkata%' ORDER BY Reputation DESC LIMIT 5","CreationDate":"2015-11-21 20:49:39","validated":true,"QueryBody_Original":"SELECT  TOP 5\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%kolkata%'\n    OR UPPER(Location) LIKE '%KOLKATA%'\n    or Location like '%kolkata%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":396820,"Title":"Top 500 SO Users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%india' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2016-09-07 15:07:30","validated":true,"QueryBody_Original":"SELECT  TOP 500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%india'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":396842,"Title":"Top 50 in New Zealand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%zealand' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2015-11-23 9:16:38","validated":true,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%zealand'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":397276,"Title":"Ten users with most gold badges (fixed to use official list of string gold badge names)","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) FROM Badges WHERE Name IN ('Socratic', 'Stellar Question', 'Great Question', 'Famous Question', 'Illuminator', 'Great Answer', 'Populist', 'Reversal', 'Unsung Hero', 'Fanatic', 'Legendary', 'Gold Badge', 'Marshal', 'Constable', 'Sheriff', 'Steward', 'Copy Editor', 'Electorate', 'Publicist') GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 10","CreationDate":"2019-03-05 6:00:51","validated":true,"QueryBody_Original":"SELECT  TOP 10 UserId AS [User Link], COUNT(*) \nFROM Badges\nWHERE Name IN ('Socratic', 'Stellar Question', 'Great Question', 'Famous Question', 'Illuminator', 'Great Answer', 'Populist', 'Reversal', 'Unsung Hero', 'Fanatic', 'Legendary', 'Gold Badge', 'Marshal', 'Constable', 'Sheriff', 'Steward', 'Copy Editor', 'Electorate', 'Publicist')\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":400278,"Title":"Badge: Scholar, by month (2011)","Description":null,"QueryBody":"SELECT DATEADD(m, MONTH(Date), '2010-12-01') AS \"Month\", COUNT(Id) AS \"Scholar\" FROM Badges WHERE YEAR(Date) = 2011 AND Name = 'Scholar' GROUP BY MONTH(Date) ORDER BY MONTH(Date)","CreationDate":"2015-11-28 2:44:26","validated":true,"QueryBody_Original":"SELECT \n  DateAdd(m, Month(Date), '2010-12-01') As [Month],\n  Count(Id) As [Scholar]\nFrom\n  Badges\nWhere\n  Year(Date) = 2011 And\n  Name = 'Scholar'\nGroup By\n  Month(Date)\nOrder By\n  Month(Date);"},{"QuerySetId":400279,"Title":"Badge: Nice Answer, by month (2011)","Description":null,"QueryBody":"SELECT DATEADD(m, MONTH(Date), '2010-12-01') AS \"Month\", COUNT(Id) AS \"Nice Answer\" FROM Badges WHERE YEAR(Date) = 2011 AND Name = 'Nice Answer' GROUP BY MONTH(Date) ORDER BY MONTH(Date)","CreationDate":"2015-11-28 2:45:46","validated":true,"QueryBody_Original":"SELECT \n  DateAdd(m, Month(Date), '2010-12-01') As [Month],\n  Count(Id) As [Nice Answer]\nFrom\n  Badges\nWhere\n  Year(Date) = 2011 And\n  Name = 'Nice Answer'\nGroup By\n  Month(Date)\nOrder By\n  Month(Date);"},{"QuerySetId":400755,"Title":"Answer count by post (2011)","Description":null,"QueryBody":"SELECT Id, CreationDate, CommunityOwnedDate, AnswerCount FROM Posts WHERE YEAR(CreationDate) = 2011 AND PostTypeId = 1 ORDER BY CreationDate","CreationDate":"2015-11-30 0:31:59","validated":true,"QueryBody_Original":"SELECT \n  Id,\n  CreationDate,\n  CommunityOwnedDate,\n  AnswerCount\nFrom\n  Posts\nWhere\n  Year(CreationDate) = 2011 And\n  PostTypeId = 1\nOrder By\n  CreationDate;"},{"QuerySetId":401887,"Title":"Demographic solved posts by user","Description":null,"QueryBody":"SELECT p.Id, p.Title, p.PostTypeId, p.CreationDate, p.ClosedDate, p.Score, p.ViewCount, p.AnswerCount, p.Tags, p.OwnerUserId, p.OwnerDisplayName, owner.Location, owner.Reputation, c.Id AS AnswerId, c.Score AS AnswerScore, responseOwner.Id AS ResponseOwnerId, responseOwner.DisplayName AS ResponseOwnerDisplayName, responseOwner.Location AS ResponseOwnerLocation, responseOwner.UpVotes, responseOwner.DownVotes FROM Posts AS p INNER JOIN Posts AS c ON c.Id = p.AcceptedAnswerId INNER JOIN Users AS owner ON p.OwnerUserId = owner.Id INNER JOIN Users AS responseOwner ON c.OwnerUserId = responseOwner.Id","CreationDate":"2015-12-08 2:43:26","validated":true,"QueryBody_Original":"SELECT  p.Id, p.Title, p.PostTypeId, p.CreationDate, p.ClosedDate,\np.Score, p.ViewCount, p.AnswerCount, p.Tags,\np.OwnerUserId, p.OwnerDisplayName, owner.Location, owner.Reputation,\nc.Id as AnswerId, c.Score AnswerScore, \nresponseOwner.Id as ResponseOwnerId, \nresponseOwner.DisplayName as ResponseOwnerDisplayName,\nresponseOwner.Location as ResponseOwnerLocation,\nresponseOwner.UpVotes, responseOwner.DownVotes\nfrom Posts p\nINNER JOIN Posts c ON c.Id=p.AcceptedAnswerId\nINNER JOIN Users owner ON p.OwnerUserId=owner.Id\nINNER JOIN Users responseOwner ON c.OwnerUserId=responseOwner.Id"},{"QuerySetId":406369,"Title":"What is my average question and answer score?","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", CAST(SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END * Score) AS FLOAT) \/ SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS AverageQuestionScore, CAST(SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END * Score) AS FLOAT) \/ SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS AverageAnswerScore FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2 GROUP BY (OwnerUserId) HAVING SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) > 0 ORDER BY AverageQuestionScore DESC LIMIT 100","CreationDate":"2016-09-01 23:51:55","validated":true,"QueryBody_Original":"SELECT  TOP 100\n    OwnerUserId AS [User Link],\n    CAST(SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END * Score) AS FLOAT) \/ SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS AverageQuestionScore,\n    CAST(SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END * Score) AS FLOAT) \/ SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS AverageAnswerScore\n    \nFROM\n    Posts\nWHERE \n    PostTypeId = 1 OR PostTypeId = 2\n    \nGROUP BY (OwnerUserId)\nHAVING SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) > 0\n    AND SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) > 0\n\nORDER BY AverageQuestionScore DESC"},{"QuerySetId":407161,"Title":"Most 100 popular posts with tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags, ViewCount FROM Posts WHERE Tags LIKE '%##TagName1##%' ORDER BY ViewCount DESC LIMIT 100","CreationDate":"2015-12-11 8:29:06","validated":true,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], Tags, ViewCount  FROM Posts WHERE Tags LIKE '%##TagName1##%' ORDER BY ViewCount  DESC"},{"QuerySetId":414233,"Title":"Top 150 Hyderabad, India Users","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation FROM Users WHERE Location LIKE N'%Hyderabad%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2015-12-22 18:17:00","validated":true,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation\nFROM\n   Users\nWHERE\n   Location like N'%Hyderabad%'\nORDER BY\n   reputation DESC"},{"QuerySetId":417055,"Title":"Get the name of tags used in 2011","Description":"Query for luckydonald\nhttp:\/\/stackoverflow.com\/questions\/34485255\/get-each-tag-in-string-stackexchange-database?noredirect","QueryBody":"SELECT DISTINCT TagName AS Tag FROM PostHistory JOIN Tags ON PostHistory.Text LIKE ('%<' + Tags.TagName + '>%') WHERE YEAR(CreationDate) = 2011 AND PostHistoryTypeId IN (3, 6, 9)","CreationDate":"2015-12-29 21:05:54","validated":true,"QueryBody_Original":"SELECT  DISTINCT TagName AS Tag FROM PostHistory \n  JOIN Tags ON PostHistory.Text LIKE ('%<' + Tags.TagName + '>%')\n\n WHERE  year(CreationDate) = 2011\n    AND    PostHistoryTypeId IN (3\n                           , 6 \n                           , 9) "},{"QuerySetId":418401,"Title":"All posts in year 2017","Description":null,"QueryBody":"SELECT COUNT(Id), PostTypeId FROM Posts WHERE CreationDate >= 2017 - 01 - 01 AND CreationDate <= 2018 - 31 - 12 GROUP BY PostTypeId","CreationDate":"2018-03-29 18:00:38","validated":true,"QueryBody_Original":"SELECT  Count(Id), PostTypeId FROM Posts \nWHERE\nCreationDate >= 2017-01-01\nand CreationDate <= 2018-31-12\nGROUP BY PostTypeId"},{"QuerySetId":424037,"Title":"Top users from Pune","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE UPPER(Location) LIKE '%PUNE%' ORDER BY Reputation DESC","CreationDate":"2016-01-15 13:09:06","validated":true,"QueryBody_Original":"SELECT  Id [User Link], *\nfrom Users\nwhere UPPER(Location) like '%PUNE%'  \norder by Reputation desc"},{"QuerySetId":425098,"Title":"cliffer some closed questions that need cliffering 2","Description":"http:\/\/meta.stackexchange.com\/questions\/78048\/enable-automatic-deletion-of-old-unanswered-zero-score-questions-after-a-year\/92006#92006","QueryBody":"SELECT q.Id AS \"Post Link\", q.Score AS qScore, a.Score AS aScore, q.ViewCount AS Views, q.CreationDate AS qDate FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 AND q.Score < 1 AND a.Score = 1 AND q.AcceptedAnswerId IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), q.ClosedDate) > 10 AND (DATEDIFF(CURRENT_TIMESTAMP(), q.LastEditDate) > 10 OR q.LastEditDate IS NULL) AND NOT q.Id IN (SELECT PostId FROM PostLinks) \/* avoids duplicates *\/ AND NOT EXISTS(SELECT * FROM Posts WHERE ParentId = q.Id AND Score > 1) GROUP BY q.Id, q.Score, a.Score, q.ViewCount, q.CreationDate ORDER BY a.Score","CreationDate":"2016-06-28 4:02:55","validated":true,"QueryBody_Original":"SELECT \n  q.Id AS [Post Link],\n  q.Score AS qScore,\n  a.Score AS aScore,\n  q.ViewCount AS Views,\n  q.CreationDate AS qDate\nFROM\n  Posts AS q\nINNER JOIN\n  Posts AS a\nON\n  a.ParentId = q.Id\nWHERE\n     q.PostTypeId = 1\n and a.PostTypeId = 2\n and q.Score < 1\n and a.Score = 1\n and q.AcceptedAnswerId IS NULL\n and DATEDIFF(DAY, q.ClosedDate, GETDATE()) > 10\n and (DATEDIFF(DAY, q.LastEditDate, GETDATE()) > 10 OR q.LastEditDate IS NULL)\n and q.Id NOT IN (SELECT PostId FROM PostLinks) -- avoids duplicates\n and not exists (SELECT * FROM Posts WHERE ParentId = q.Id AND Score > 1)\n GROUP BY q.Id, q.Score, a.Score, q.ViewCount, q.CreationDate\n  ORDER BY\n   a.Score ASC"},{"QuerySetId":429686,"Title":"StackOverflow Users filtered by Location sorted by Reputation","Description":null,"QueryBody":"SELECT Id, Reputation, DisplayName, Location, LastAccessDate, Views FROM Users WHERE Location LIKE '%##Location##%' ORDER BY Reputation DESC","CreationDate":"2016-01-30 5:57:10","validated":true,"QueryBody_Original":"select Id, Reputation, DisplayName, Location, LastAccessDate, Views \nfrom Users\nwhere Location like '%##Location##%'\norder by Reputation desc"},{"QuerySetId":432081,"Title":"Tags used more than once without a wiki","Description":null,"QueryBody":"SELECT t.* FROM tags AS t WHERE t.count > 1 AND (t.excerptpostid IS NULL OR t.wikipostid IS NULL) ORDER BY t.count DESC, t.id DESC","CreationDate":"2016-02-04 15:42:30","validated":true,"QueryBody_Original":"SELECT  t.*\nFROM tags t\nWHERE t.count > 1\n  AND (  t.excerptpostid IS NULL\n      OR t.wikipostid IS NULL\n      )\nORDER BY\n  t.count DESC,\n  t.id DESC;"},{"QuerySetId":432482,"Title":"Bottom 1,000 questions on Stack Overflow","Description":null,"QueryBody":"SELECT answer.Score, answer.Id AS \"Post Link\", (CASE WHEN answer.Id = question.AcceptedAnswerId THEN 'yes' ELSE 'no' END) AS \"Accepted?\", question.CreationDate AS \"Asked On\", answer.CreationDate AS \"Answered On\" FROM Posts AS answer INNER JOIN Posts AS question ON answer.ParentId = question.Id WHERE answer.PostTypeId = 2 AND answer.Id = question.AcceptedAnswerId ORDER BY answer.Score LIMIT 1000","CreationDate":"2016-02-08 21:08:26","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n  answer.Score,\n  answer.Id                                                                             [Post Link],\n  (CASE WHEN answer.Id = question.AcceptedAnswerId\n    THEN 'yes'\n   ELSE 'no' END)                                                                    AS 'Accepted?',\n  question.CreationDate                                                              AS 'Asked On',\n  answer.CreationDate                                                                AS 'Answered On'\nFROM Posts answer\n  INNER JOIN Posts question ON answer.ParentId = question.Id\nWHERE answer.PostTypeId = 2 AND answer.Id = question.AcceptedAnswerId\nORDER BY answer.Score ASC;"},{"QuerySetId":435670,"Title":"How old are the best scored posts (ie score>= 101)?","Description":null,"QueryBody":"SELECT age, \"PostTypeId\", AVG(score) AS average_score FROM (SELECT CAST((DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) \/ 12) AS TEXT) + ' Y' AS Age, score, PostTypeId FROM posts WHERE score >= 101) AS t GROUP BY age, PostTypeId ORDER BY PostTypeId, age","CreationDate":"2016-02-13 2:20:20","validated":true,"QueryBody_Original":"SELECT  age, [PostTypeId], avg(score) average_score from (\nSELECT cast((DATEDIFF(m, CreationDate, GETDATE())\/12) as varchar) + ' Y' as Age,\n       score, PostTypeId\nfrom posts\nwhere score >=101\n) t\ngroup by age, PostTypeId\norder by PostTypeId asc,  age asc"},{"QuerySetId":435764,"Title":"Mentions of c4.8xlarge since 2016","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", COUNT(Posts.OwnerUserId) AS mentions FROM Posts WHERE Posts.CreationDate > '20160601 00:00:00' AND Posts.Body LIKE '%c4.8xlarge%' GROUP BY Posts.OwnerUserId ORDER BY mentions DESC","CreationDate":"2017-05-13 0:09:13","validated":true,"QueryBody_Original":"SELECT \n  Posts.OwnerUserId as [User Link],\n  COUNT(Posts.OwnerUserId) as mentions\nFROM Posts\nWHERE\n  Posts.CreationDate > '20160601 00:00:00'\n  AND Posts.Body LIKE '%c4.8xlarge%'\nGROUP BY Posts.OwnerUserId\nORDER BY mentions DESC"},{"QuerySetId":444205,"Title":"Tags with TagName like 'git'","Description":null,"QueryBody":"SELECT * FROM Tags AS t WHERE t.TagName LIKE '%git%' ORDER BY t.TagName","CreationDate":"2016-03-03 19:09:25","validated":true,"QueryBody_Original":"SELECT  * \nFROM Tags t\nWHERE t.TagName like '%git%' ORDER BY t.TagName"},{"QuerySetId":444207,"Title":"Tags with empty Excerpts or Wikis","Description":null,"QueryBody":"SELECT t.Id, t.Count, t.TagName, ep.Body, wp.Body FROM Tags AS t LEFT JOIN Posts AS ep ON ep.Id = t.ExcerptPostId LEFT JOIN Posts AS wp ON wp.Id = t.WikiPostId WHERE ep.Body IS NULL OR ep.Body = '' OR wp.Body IS NULL OR wp.Body = '' ORDER BY t.Count, t.TagName","CreationDate":"2016-03-03 19:34:07","validated":true,"QueryBody_Original":"SELECT  t.Id, t.Count, t.TagName, ep.Body, wp.Body\nFROM Tags t\nLEFT JOIN Posts ep ON ep.Id = t.ExcerptPostId\nLEFT JOIN Posts wp ON wp.Id = t.WikiPostId\nWHERE \nep.Body IS NULL\nOR ep.Body = ''\nOR wp.Body IS NULL \nOR wp.Body = ''\nORDER BY t.Count, t.TagName"},{"QuerySetId":446441,"Title":"Lists the most commonly used tags with empty\/missing tag wiki excerpt.","Description":"Lists the most commonly used tags with empty\/missing tag wiki excerpt.","QueryBody":"SELECT Count, ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, ExcerptPostId AS \"Post Link\", WikiPostId AS \"Post Link\" FROM Tags AS t LEFT JOIN Posts AS pe ON pe.Id = t.ExcerptPostId LEFT JOIN Posts AS pw ON pw.Id = t.WikiPostId WHERE ExcerptPostId IS NULL \/* no excerpt post *\/ OR LENGTH(pe.Body) = 0 \/* excerpt empty *\/ ORDER BY Count DESC","CreationDate":"2016-03-07 2:52:34","validated":true,"QueryBody_Original":"SELECT  Count,\n       ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName,\n       ExcerptPostId                              AS [Post Link],\n       WikiPostId                                 AS [Post Link]\nFROM   Tags t\n       LEFT JOIN Posts pe\n         ON pe.Id = t.ExcerptPostId\n       LEFT JOIN Posts pw\n         ON pw.Id = t.WikiPostId\nWHERE  ExcerptPostId IS NULL -- no excerpt post\n       OR LEN(pe.Body) = 0   -- excerpt empty\nORDER  BY Count DESC"},{"QuerySetId":447261,"Title":"Questions asked in previous month","Description":"Retrieves the set of questions asked in the previous month and orders them by score.","QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, p.Score, p.ViewCount, p.ClosedDate FROM Posts AS p WHERE p.PostTypeId = 1 AND MONTH(p.CreationDate) = MONTH(CURRENT_TIMESTAMP()) - 1 AND YEAR(p.CreationDate) = YEAR(CURRENT_TIMESTAMP()) ORDER BY p.Score DESC","CreationDate":"2016-03-09 1:22:22","validated":true,"QueryBody_Original":"SELECT  p.Id as [Post Link]\n  , p.CreationDate\n  , p.Score\n  , p.ViewCount\n  , p.ClosedDate\nfrom Posts p\nwhere p.PostTypeId = 1\n  and Month(p.CreationDate) = Month(getdate())-1\n  and Year(p.CreationDate) = Year(getDate())\norder by p.Score desc"},{"QuerySetId":451727,"Title":"Questions with accepted answer by year","Description":null,"QueryBody":"SELECT p.CreationDate, p.hasAnswer AS has_answer, COUNT(*) AS Count FROM (SELECT YEAR(CreationDate) AS CreationDate, CASE WHEN NOT AcceptedAnswerid IS NULL THEN 'YES' ELSE 'NO' END AS hasAnswer FROM Posts) AS p GROUP BY p.CreationDate, p.hasAnswer","CreationDate":"2016-03-17 14:52:07","validated":true,"QueryBody_Original":"SELECT  p.CreationDate, p.hasAnswer as has_answer, count(*) as Count\nfrom (\n  SELECT \n  YEAR(CreationDate) as CreationDate,\n  case  \n    when AcceptedAnswerid is not null then 'YES'\n    else 'NO' end as hasAnswer\n  from Posts\n  ) p\ngroup by p.CreationDate, p.hasAnswer"},{"QuerySetId":466162,"Title":"Top 1000 Users in India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2016-04-04 21:55:25","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":467693,"Title":"A list of the top 20 users with the highest average answer score excluding\ncommunity wiki \/ closed posts or users with less than 10 answers\n","Description":"A list of the top 500 users with the highest average answer score excluding\ncommunity wiki \/ closed posts or users with less than 10 answers\n","QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.Id) > 10 ORDER BY \"Average Answer Score\" DESC LIMIT 20","CreationDate":"2019-06-22 12:13:58","validated":true,"QueryBody_Original":"SELECT  \n    TOP 20\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Answers,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Answer Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(Posts.Id) > 10\nORDER BY\n    [Average Answer Score] DESC"},{"QuerySetId":469392,"Title":"Java in-memory database popularity by time","Description":null,"QueryBody":"SELECT d, SUM(h2) OVER (ORDER BY d) AS h2, SUM(hsqldb) OVER (ORDER BY d) AS hsqldb, SUM(derby) OVER (ORDER BY d) AS derby, SUM(sqlite) OVER (ORDER BY d) AS sqlite, SUM(firebird) OVER (ORDER BY d) AS firebird FROM (SELECT CAST(CreationDate AS DATE) AS d, COUNT(CASE WHEN Tags LIKE '%<h2>%' THEN 1 END) AS h2, COUNT(CASE WHEN Tags LIKE '%<hsqldb>%' THEN 1 END) AS hsqldb, COUNT(CASE WHEN Tags LIKE '%<derby>%' THEN 1 END) AS derby, COUNT(CASE WHEN Tags LIKE '%<sqlite>%' THEN 1 END) AS sqlite, COUNT(CASE WHEN Tags LIKE '%<firebird>%' THEN 1 END) AS firebird FROM Posts GROUP BY CAST(CreationDate AS DATE)) AS DailyPosts ORDER BY d","CreationDate":"2018-02-28 19:30:17","validated":true,"QueryBody_Original":"SELECT  \n  d,\n  SUM(h2)     OVER (ORDER BY d) AS h2,\n  SUM(hsqldb) OVER (ORDER BY d) AS hsqldb,\n  SUM(derby)  OVER (ORDER BY d) AS derby,\n  SUM(sqlite)  OVER (ORDER BY d) AS sqlite,\n  SUM(firebird)  OVER (ORDER BY d) AS firebird\nFROM (\n  SELECT \n    CAST(CreationDate AS DATE) AS d, \n    COUNT(CASE WHEN Tags LIKE '%<h2>%'     THEN 1 END) AS h2,\n    COUNT(CASE WHEN Tags LIKE '%<hsqldb>%' THEN 1 END) AS hsqldb,\n    COUNT(CASE WHEN Tags LIKE '%<derby>%'  THEN 1 END) AS derby,\n    COUNT(CASE WHEN Tags LIKE '%<sqlite>%'  THEN 1 END) AS sqlite,\n    COUNT(CASE WHEN Tags LIKE '%<firebird>%'  THEN 1 END) AS firebird\n  FROM Posts\n  GROUP BY CAST(CreationDate AS DATE)\n) AS DailyPosts\nORDER BY d ASC"},{"QuerySetId":471472,"Title":"Upvoted posts containing lower-case \"i\"","Description":"Posts containing a body that is less than 5 chars long\n","QueryBody":"SELECT Id AS \"Post Link\", Body, Score, CreationDate FROM Posts WHERE ParentId IS NULL AND Score > 1 AND Body LIKE '%i%' COLLATE SQL_Latin1_General_CP1_CS_AS ORDER BY CreationDate DESC","CreationDate":"2016-04-21 18:32:07","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], Body, Score, CreationDate from Posts where  \nParentId is null\nand Score > 1 and\nBody like '%i%'\nCOLLATE SQL_Latin1_General_CP1_CS_AS\nORDER BY CreationDate DESC"},{"QuerySetId":476040,"Title":"Which questions are the targets of dupe closures most often?","Description":null,"QueryBody":"SELECT posts.id AS \"Post Link\", COUNT(DISTINCT postlinks.id) AS number_of_closures FROM posts INNER JOIN postlinks ON postlinks.relatedpostid = posts.id WHERE linktypeid = 3 GROUP BY posts.id ORDER BY COUNT(DISTINCT postlinks.id) DESC","CreationDate":"2016-04-21 5:32:12","validated":true,"QueryBody_Original":"SELECT  posts.id as [Post Link], count(distinct postlinks.id) as number_of_closures\nfrom posts inner join\npostlinks on postlinks.relatedpostid = posts.id\nwhere linktypeid = 3\ngroup by posts.id\norder by count(distinct postlinks.id) desc"},{"QuerySetId":476292,"Title":"Top 20 voted CSS answers","Description":null,"QueryBody":"SELECT COUNT(v.postid) AS \"Vote count\", v.postid AS \"Post Link\", p.body FROM votes AS v INNER JOIN Tags AS t ON v.id = t.id INNER JOIN posts AS p ON p.id = v.postid WHERE PostTypeId = 2 AND VoteTypeId = 2 AND t.TagName = 'CSS' GROUP BY v.postid, p.body ORDER BY 'Vote count' DESC LIMIT 20","CreationDate":"2016-04-21 20:12:17","validated":true,"QueryBody_Original":"SELECT  top 20 count(v.postid) as 'Vote count', v.postid AS [Post Link],p.body\nfrom votes v inner join Tags t \non v.id = t.id\ninner join posts p on p.id=v.postid\nwhere PostTypeId = 2 and VoteTypeId=2 and\nt.TagName = 'CSS'\ngroup by v.postid,p.body\norder by 'Vote count' desc"},{"QuerySetId":476659,"Title":"Questions and their average answers score with more than 5 answers","Description":null,"QueryBody":"SELECT P1.Id AS QuestionId, AVG(1.0 * P2.Score) AS AverageScore FROM Posts AS P1 JOIN Posts AS P2 ON P1.Id = P2.ParentId WHERE P1.PostTypeId = 1 GROUP BY P1.Id HAVING COUNT(P2.Id) > 5 LIMIT 10","CreationDate":"2016-04-22 18:03:40","validated":true,"QueryBody_Original":"SELECT  TOP 10 P1.Id as QuestionId, AVG(1.0 * P2.Score) as AverageScore\nFROM Posts as P1 JOIN Posts as P2 ON P1.Id=P2.ParentId\nWHERE P1.PostTypeId=1 GROUP BY P1.Id HAVING Count(P2.Id)>5"},{"QuerySetId":477627,"Title":"TOP 1000 users by up votes vs vote delta","Description":null,"QueryBody":"SELECT DisplayName, UpVotes, UpVotes - DownVotes AS delta FROM Users WHERE Id <> -1 ORDER BY UpVotes DESC LIMIT 1000","CreationDate":"2016-04-25 10:47:04","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n  DisplayName, UpVotes, UpVotes-DownVotes AS delta\nFROM \n  Users\n  WHERE Id != -1\nORDER BY UpVotes DESC"},{"QuerySetId":477837,"Title":"Question Score VS Question Size","Description":null,"QueryBody":"SELECT Id, score, LENGTH(body) AS size FROM posts WHERE PostTypeId = 1 ORDER BY score DESC LIMIT 1000","CreationDate":"2016-04-25 19:04:40","validated":true,"QueryBody_Original":"SELECT  TOP 1000 Id, score, LEN(body) AS size\nFROM posts\nWHERE PostTypeId = 1\nORDER BY score DESC"},{"QuerySetId":477871,"Title":"Number of Users by Locality","Description":null,"QueryBody":"SELECT location, COUNT(*) AS pop FROM Users WHERE location LIKE '%##Location##%' GROUP BY location ORDER BY pop DESC","CreationDate":"2016-04-26 3:31:58","validated":true,"QueryBody_Original":"SELECT  location, Count(*) as pop from Users\n  where location like '%##Location##%'\n  group by location\n  order by pop DESC"},{"QuerySetId":478426,"Title":"Questions per day on Stack Exchange since 2015-07-31","Description":null,"QueryBody":"SELECT DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate)), COUNT(*) FROM Posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE p.PostTypeId = 1 AND DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate)) > '2015-07-31 00:00:00' GROUP BY DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate)) ORDER BY DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate))","CreationDate":"2016-05-31 5:15:48","validated":true,"QueryBody_Original":"SELECT \n    DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate)),\n    COUNT(*)\nFROM\n        Posts p\n    inner join users u on u.id = p.owneruserid\nWHERE p.PostTypeId = 1\nand  DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate))> '2015-07-31 00:00:00'\nGROUP BY\n    DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate))\nORDER BY\n    DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate))"},{"QuerySetId":482447,"Title":"Top 100 Users Under 22","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM (SELECT * FROM Users WHERE Age <> '' AND Age > 0 AND Age < 22 ORDER BY Reputation DESC LIMIT 100) AS users","CreationDate":"2016-05-04 3:40:48","validated":true,"QueryBody_Original":"SELECT  Id AS [User Link], * FROM(SELECT TOP 100 * FROM Users\n  WHERE Age<>'' AND Age > 0 AND Age < 22\n  ORDER BY Reputation DESC) users"},{"QuerySetId":482743,"Title":"Top 50 users from Turkey","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%turkey' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-05-04 22:16:04","validated":true,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%turkey'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":483475,"Title":"Questions with \"what have you tried comments\" between two dates","Description":null,"QueryBody":"SELECT COUNT(*) AS QuestionCount, SUM(A.TriedComments) AS TriedCount FROM (SELECT SUM(CASE WHEN C.text LIKE '%have you tried%' OR c.text LIKE '%you have tried%' THEN 1 ELSE 0 END) AS TriedComments, P.ID FROM Posts AS P LEFT JOIN Comments AS C ON C.PostID = P.ID WHERE P.creationdate BETWEEN @pStartDate AND @pEndDate AND P.posttypeid = 1 GROUP BY P.ID) AS A","CreationDate":"2017-05-14 23:05:00","validated":true,"QueryBody_Original":"select\n  count(*) as QuestionCount,\n  sum(A.TriedComments) as TriedCount\nfrom\n  (\n  select\n    sum(case when C.text like '%have you tried%' or c.text like '%you have tried%' then 1 else 0 end) as TriedComments,\n    P.ID\n  from\n    Posts as P\n    left join Comments as C on C.PostID = P.ID \n  where    \n    P.creationdate between @pStartDate and @pEndDate\n    and P.posttypeid = 1\n  group by\n    P.ID\n    ) as A"},{"QuerySetId":484396,"Title":"count Votes group by postid, votetypeid","Description":null,"QueryBody":"SELECT postid, votetypeid, COUNT(1) FROM votes GROUP BY postid, votetypeid","CreationDate":"2016-05-10 17:10:10","validated":true,"QueryBody_Original":"SELECT  postid, votetypeid, count(1)\nfrom votes\ngroup by postid, votetypeid"},{"QuerySetId":484865,"Title":"Unique Most Recent Post For Each User","Description":null,"QueryBody":"SELECT OwnerUserId, Score FROM Posts INNER JOIN (SELECT OwnerUserId AS id, MAX(CreationDate) AS maxDate FROM Posts GROUP BY OwnerUserId) AS p ON Posts.OwnerUserId = p.id AND Posts.CreationDate = p.maxDate LIMIT 20","CreationDate":"2016-05-12 1:54:02","validated":true,"QueryBody_Original":"SELECT  Top 20 \n    OwnerUserId, Score FROM Posts\n    inner join (\n      SELECT OwnerUserId id, Max(CreationDate) maxDate\n      FROM Posts\n      Group By OwnerUserId\n    ) p on Posts.OwnerUserId = p.id and Posts.CreationDate = p.maxDate"},{"QuerySetId":485430,"Title":"Top users from Morgantown, WV","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Morgantown%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2016-05-13 9:51:19","validated":true,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like N'%Morgantown%' \nORDER BY\n   reputation DESC"},{"QuerySetId":488747,"Title":"What is my average answer score?","Description":null,"QueryBody":"SELECT AVG(CAST(Score AS FLOAT)) AS AverageAnswerScore FROM Posts WHERE PostTypeId = 1","CreationDate":"2016-05-20 18:25:26","validated":true,"QueryBody_Original":"SELECT  \n    AVG(CAST(Score AS float)) AS AverageAnswerScore\nFROM\n    Posts\n  WHERE\n    PostTypeId = 1"},{"QuerySetId":488861,"Title":"Find tags and their excerpts (\"definitions\")","Description":null,"QueryBody":"SELECT Count, ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, ExcerptPostId AS \"Post Link\" FROM Tags AS t LEFT JOIN Posts AS p ON p.Id = t.ExcerptPostId WHERE NOT (ExcerptPostId IS NULL) \/* no tag excerpt *\/ AND LENGTH(Body) > 0 \/* tag excerpt empty *\/ ORDER BY Count DESC","CreationDate":"2016-05-20 22:24:46","validated":true,"QueryBody_Original":"SELECT  Count,\n       ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName,\n       ExcerptPostId                              AS [Post Link]\nFROM   Tags t\n       LEFT JOIN Posts p\n         ON p.Id = t.ExcerptPostId\nWHERE  NOT(ExcerptPostId IS NULL) -- no tag excerpt\n       AND LEN(Body) > 0   -- tag excerpt empty\nORDER  BY Count DESC"},{"QuerySetId":489021,"Title":"Counts and Scores and Averages for Questions and Answers","Description":null,"QueryBody":"SELECT ownerUserId AS \"User Link\", question_count, question_score, (CASE WHEN question_count > 0 THEN (1.0 * question_score \/ question_count) ELSE 0 END) AS score_per_question, answer_count, answer_score, (CASE WHEN answer_count > 0 THEN (1.0 * answer_score \/ answer_count) ELSE 0 END) AS score_per_answer FROM (SELECT p.ownerUserId, SUM(CASE WHEN p.postTypeId = 1 THEN 1 ELSE 0 END) AS question_count, SUM(CASE WHEN p.postTypeId = 1 THEN p.score ELSE 0 END) AS question_score, SUM(CASE WHEN p.postTypeId = 2 THEN 1 ELSE 0 END) AS answer_count, SUM(CASE WHEN p.postTypeId = 2 THEN p.score ELSE 0 END) AS answer_score FROM posts AS p JOIN users AS u ON p.ownerUserId = u.Id GROUP BY p.ownerUserId) AS a","CreationDate":"2016-06-10 0:59:09","validated":true,"QueryBody_Original":"SELECT  ownerUserId as [User Link],\n       question_count,\n       question_score,\n       (case when question_count > 0 then (1.0*question_score\/question_count) else 0 end) as score_per_question,\n       answer_count,\n       answer_score,\n       (case when answer_count > 0 then (1.0*answer_score\/answer_count) else 0 end) as score_per_answer\nfrom\n(SELECT p.ownerUserId, \nsum(case when p.postTypeId=1 then 1 else 0 end) question_count,\nsum(case when p.postTypeId=1 then p.score else 0 end) question_score,\nsum(case when p.postTypeId=2 then 1 else 0 end) answer_count,\nsum(case when p.postTypeId=2 then p.score else 0 end) answer_score\nfrom posts p\njoin users u\non p.ownerUserId = u.Id\ngroup by p.ownerUserId) a"},{"QuerySetId":489051,"Title":"Top 100 users by total comment score","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", SUM(Comments.Score) AS \"Total comment score\" FROM Users INNER JOIN Comments ON Users.Id = Comments.UserId GROUP BY Users.Id ORDER BY SUM(Comments.Score) DESC LIMIT 100","CreationDate":"2016-05-22 0:23:47","validated":true,"QueryBody_Original":"SELECT  Top 100\n  Users.Id as [User Link],\n  SUM(Comments.Score) AS 'Total comment score'\nFROM Users\nINNER JOIN Comments ON Users.Id = Comments.UserId\nGROUP BY Users.Id\nORDER BY SUM(Comments.Score) DESC"},{"QuerySetId":490982,"Title":"Top 5000 users from Roorkee","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%roorkee%' OR UPPER(Location) LIKE '%ROORKEE' ORDER BY Reputation DESC LIMIT 5000","CreationDate":"2016-05-26 16:28:17","validated":true,"QueryBody_Original":"SELECT  TOP 5000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%roorkee%'\n    OR UPPER(Location) LIKE '%ROORKEE'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":491677,"Title":"Top 10 users with the most questions.","Description":null,"QueryBody":"SELECT DisplayName AS \"User\", COUNT(Posts.Id) AS Questions FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 GROUP BY Users.Id, DisplayName ORDER BY \"Questions\" DESC LIMIT 10","CreationDate":"2016-05-28 0:36:09","validated":true,"QueryBody_Original":"SELECT  \n    TOP 10\n    DisplayName as [User],\n    Count(Posts.Id) AS Questions\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2\nGROUP BY\n    Users.Id, DisplayName\nORDER BY\n    [Questions] DESC"},{"QuerySetId":494321,"Title":"Questions Visit Count per Month","Description":null,"QueryBody":"SELECT \"Month\", SUM(ViewCount) AS QueViewCount FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", ViewCount FROM Posts AS p) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2016-06-02 23:15:39","validated":true,"QueryBody_Original":"SELECT  [Month], \n       sum(ViewCount) QueViewCount\nfrom\n(\n  SELECT CAST(\n      cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) + '-01'\n    as datetime) [Month], \n    ViewCount\n     \n  from Posts p\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":497536,"Title":"Rate of accepted answers for the site","Description":null,"QueryBody":"SELECT COUNT(q.id), COUNT(q2.id), ROUND(COUNT(q2.id) * 100 \/ COUNT(q.id), 2) FROM Posts AS q LEFT JOIN Posts AS q2 ON q.id = q2.id AND q.AnswerCount > 0 WHERE q.PostTypeId = 1","CreationDate":"2016-06-08 20:01:35","validated":true,"QueryBody_Original":"SELECT  COUNT(q.id), COUNT(q2.id), ROUND(COUNT(q2.id) * 100 \/ COUNT(q.id) , 2)\nfrom Posts q\n LEFT JOIN Posts q2 ON q.id = q2.id\n     AND q.AnswerCount > 0\nwhere q.PostTypeId = 1;"},{"QuerySetId":499932,"Title":"Up Votes vs Down Votes","Description":null,"QueryBody":"SELECT (SELECT CAST(COUNT(Votes.Id) AS FLOAT) FROM Votes WHERE VoteTypeId = 2) \/ (SELECT CAST(COUNT(Votes.Id) AS FLOAT) FROM Votes WHERE VoteTypeId = 3) AS \"Up Votes \/ Down Votes\"","CreationDate":"2016-06-14 21:54:33","validated":true,"QueryBody_Original":"SELECT \n  (\n  SELECT CAST(COUNT(Votes.Id) AS FLOAT)\n    FROM Votes\n    WHERE\n    VoteTypeId = 2\n  ) \/\n  (\n  SELECT CAST(COUNT(Votes.Id) AS FLOAT)\n    FROM Votes\n    WHERE\n    VoteTypeId = 3\n  ) AS 'Up Votes \/ Down Votes'"},{"QuerySetId":501571,"Title":"Users with Peer Pressure Badge by Reputation","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation FROM Users AS u LEFT JOIN Badges AS b ON b.UserId = u.Id WHERE b.Name = 'Peer Pressure' AND u.Reputation > 101 ORDER BY Reputation","CreationDate":"2016-06-17 6:59:40","validated":true,"QueryBody_Original":"SELECT  u.Id as [User Link],u.Reputation\nfrom Users u\nleft join Badges b On b.UserId = u.Id \nWhere b.Name = 'Peer Pressure'\nAND u.Reputation > 101\nORDER BY Reputation"},{"QuerySetId":506465,"Title":"Questions with multiple bounties by any users","Description":null,"QueryBody":"SELECT questions.Id AS \"Post Link\", 'site:\/\/posts\/' + CAST(questions.Id AS TEXT) + '\/timeline|timeline' AS \"Timeline link\", COUNT(*) AS \"Number of bounties\", SUM(votes.BountyAmount) AS \"Total bounty amount\" FROM Posts AS questions LEFT JOIN Votes AS votes ON votes.PostId = questions.Id WHERE Votes.VoteTypeId = 8 \/* BountyStart *\/ GROUP BY questions.Id HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC","CreationDate":"2016-06-30 18:45:14","validated":true,"QueryBody_Original":"SELECT \n  questions.Id AS [Post Link],\n  'site:\/\/posts\/'+CAST(questions.Id AS varchar)+'\/timeline|timeline' AS 'Timeline link',\n  COUNT(*) AS 'Number of bounties',\n  SUM(votes.BountyAmount) AS 'Total bounty amount'\nFROM Posts questions\nLEFT JOIN Votes votes\n  ON votes.PostId = questions.Id\nWHERE Votes.VoteTypeId = 8 --BountyStart\nGROUP BY questions.Id\nHAVING COUNT(*)>1\nORDER BY COUNT(*) DESC"},{"QuerySetId":507938,"Title":"Users with most profile views","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Views DESC) AS \"#\", Id AS \"User Link\", Reputation, Views, LastAccessDate, WebsiteURL FROM Users ORDER BY Views DESC LIMIT 1000","CreationDate":"2016-07-05 12:44:53","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Views DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Views,\n    LastAccessDate,\n    WebsiteURL\nFROM\n    Users\nORDER BY\n    Views DESC;"},{"QuerySetId":509675,"Title":"How many stack exchange users and their votes?","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"total users\", SUM(u.UpVotes) AS \"total upvotes\", SUM(u.DownVotes) AS \"total downvotes\" FROM Users AS u","CreationDate":"2016-07-09 9:39:27","validated":true,"QueryBody_Original":"SELECT  count(u.Id) as \"total users\", sum(u.UpVotes) as \"total upvotes\", sum(u.DownVotes) as \"total downvotes\"\nFROM Users u"},{"QuerySetId":509676,"Title":"Average question score this month","Description":null,"QueryBody":"SELECT AVG(Score) FROM Posts WHERE PostTypeId = 1 AND CreationDate > DATEADD(month, -1, GETDATE())","CreationDate":"2016-07-09 9:58:24","validated":true,"QueryBody_Original":"SELECT  AVG(Score)\nfrom Posts \nwhere PostTypeId = 1 and CreationDate > dateadd(month, -1, GETDATE());"},{"QuerySetId":510674,"Title":"TOTAL number of SUCCESSFUL questions","Description":null,"QueryBody":"SELECT COUNT(DISTINCT p.Id) FROM POSTS AS p WHERE p.PostTypeId = 1 AND NOT p.AcceptedAnswerId IS NULL","CreationDate":"2016-07-12 1:11:26","validated":true,"QueryBody_Original":"SELECT  COUNT(DISTINCT p.Id)\nFROM POSTS p\nWHERE p.PostTypeId = 1 \nAND p.AcceptedAnswerId IS NOT NULL"},{"QuerySetId":513068,"Title":"What other questions do Favoriters like?","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Score AS \"Score\", COUNT(1) AS \"Favorited By\" FROM Votes AS \"Favorited Post\" JOIN Votes AS \"Other Favorites\" ON \"Favorited Post\".UserId = \"Other Favorites\".UserId JOIN Posts ON \"Other Favorites\".PostId = Posts.Id WHERE \"Favorited Post\".VoteTypeId = @FavoriteType AND \"Other Favorites\".VoteTypeId = @FavoriteType GROUP BY Posts.Id, Posts.Score ORDER BY \"Favorited By\" DESC LIMIT 100","CreationDate":"2016-07-19 18:36:37","validated":true,"QueryBody_Original":"SELECT\n  TOP 100\n  Posts.Id AS [Post Link],\n  Posts.Score AS [Score],\n  Count(1) AS [Favorited By]\nFROM Votes [Favorited Post]\nJOIN Votes [Other Favorites]\n  On [Favorited Post].UserId = [Other Favorites].UserId\nJOIN Posts\n  On [Other Favorites].PostId = Posts.Id\nWHERE [Favorited Post].VoteTypeId = @FavoriteType\nAND [Other Favorites].VoteTypeId = @FavoriteType\nGROUP BY \n  Posts.Id, Posts.Score\nOrder by\n  [Favorited By] desc"},{"QuerySetId":514638,"Title":"Amount of posts per day","Description":null,"QueryBody":"SELECT CreationDate AS \"date\", COUNT(1) AS \"questions\" FROM Posts WHERE PostTypeId = 1 GROUP BY CreationDate ORDER BY CreationDate","CreationDate":"2017-02-17 8:37:03","validated":true,"QueryBody_Original":"SELECT  CreationDate AS \"date\", count(1) AS \"questions\" FROM Posts WHERE PostTypeId = 1\ngroup by CreationDate order by CreationDate ASC"},{"QuerySetId":514933,"Title":"Search by Location And AboutMe","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%##Location##%' AND AboutMe LIKE '%##AboutMe##%' ORDER BY Reputation DESC","CreationDate":"2016-07-20 17:50:29","validated":true,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location\nfrom Users\nwhere Location like '%##Location##%' AND AboutMe like '%##AboutMe##%'\norder by Reputation desc"},{"QuerySetId":519591,"Title":"Top 100 Users From Kolkata, India","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Kolkata%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2016-07-31 0:13:08","validated":true,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like '%Kolkata%' \nORDER BY\n   reputation DESC"},{"QuerySetId":520253,"Title":"Net votes on questions per month","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, Votes.CreationDate), 0), SUM(CASE WHEN VoteTypeId = 2 THEN 1 WHEN VoteTypeId = 3 THEN -1 END) AS NetVotes FROM Votes INNER JOIN Posts ON Posts.Id = Votes.PostId WHERE Posts.PostTypeId = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, Votes.CreationDate), 0) ORDER BY DATEADD(month, DATEDIFF(month, 0, Votes.CreationDate), 0)","CreationDate":"2016-08-02 15:09:01","validated":true,"QueryBody_Original":"SELECT  dateadd(month, datediff(month, 0, Votes.CreationDate), 0), \n  sum(case when VoteTypeId = 2 then 1 when VoteTypeId = 3 then -1 end) NetVotes\nfrom Votes\ninner join Posts on Posts.Id = Votes.PostId\nwhere Posts.PostTypeId=1\ngroup by dateadd(month, datediff(month, 0, Votes.CreationDate), 0)\norder by dateadd(month, datediff(month, 0, Votes.CreationDate), 0)"},{"QuerySetId":526225,"Title":"Users 'ranking' by sign up date and activity","Description":null,"QueryBody":"SELECT u.Id AS \"ID\", u.Id AS \"User Link\", u.Reputation, MIN(u.CreationDate) AS \"User Creation Date\", MIN(DATEDIFF(CURRENT_TIMESTAMP(), u.CreationDate)) - 7 AS \"Days Passed Since\", MIN(p.CreationDate) AS \"Last Activity Date\", MIN(DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate)) - 7 AS \"Days Passed Since\" FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE u.Id <> -1 GROUP BY u.Id, u.Reputation ORDER BY Reputation DESC","CreationDate":"2016-09-10 12:39:34","validated":true,"QueryBody_Original":"SELECT\n  u.Id AS [ID],\n  u.Id AS [User Link],\n  u.Reputation,\n  MIN(u.CreationDate) AS [User Creation Date], \n  MIN(DATEDIFF(dd, u.CreationDate, GETDATE()))-7 AS [Days Passed Since],\n  MIN(p.CreationDate) AS [Last Activity Date],\n  MIN(DATEDIFF(dd, p.CreationDate, GETDATE()))-7 AS [Days Passed Since]\n\nFROM Users u\n  INNER JOIN Posts p ON p.OwnerUserId = u.Id\n\nWHERE \n  u.Id != -1\n\nGROUP BY \n  u.Id,\n  u.Reputation\n  \nORDER BY Reputation DESC"},{"QuerySetId":529756,"Title":"Number of active users last month","Description":null,"QueryBody":"SELECT COUNT(*) AS ActiveUsersLastMonth FROM Users WHERE LastAccessDate >= DATEADD(month, -1, (SELECT MAX(LastAccessDate) FROM Users))","CreationDate":"2016-08-27 12:08:43","validated":true,"QueryBody_Original":"SELECT  count(*) ActiveUsersLastMonth\n\nfrom Users\n\nwhere LastAccessDate >= DATEADD(month, -1, \n                                  (SELECT max(LastAccessDate) from Users)\n                                )"},{"QuerySetId":529759,"Title":"SOes - Number of active posts last month per mod","Description":null,"QueryBody":"SELECT COUNT(*) AS PostsLastMonth, 1 AS Moderators, (COUNT(*) \/ 1) AS PostsLastMonthPerMod FROM Posts WHERE LastActivityDate >= DATEADD(month, -1, (SELECT MAX(LastActivityDate) FROM Posts))","CreationDate":"2016-08-27 12:34:06","validated":true,"QueryBody_Original":"SELECT  \n  count(*) PostsLastMonth, \n  1 Moderators, \n  (count(*) \/ 1) PostsLastMonthPerMod\n\nfrom Posts\n\nwhere LastActivityDate >= DATEADD(month, -1, \n                                  (SELECT max(LastActivityDate) from Posts)\n                                )"},{"QuerySetId":529763,"Title":"SOpt - Number of active posts last month per mod","Description":null,"QueryBody":"SELECT COUNT(*) AS PostsLastMonth, 6 AS Moderators, (COUNT(*) \/ 6) AS PostsLastMonthPerMod FROM Posts WHERE LastActivityDate >= DATEADD(month, -1, (SELECT MAX(LastActivityDate) FROM Posts))","CreationDate":"2016-08-27 12:35:52","validated":true,"QueryBody_Original":"SELECT  \n  count(*) PostsLastMonth, \n  6 Moderators, \n  (count(*) \/ 6) PostsLastMonthPerMod\n\nfrom Posts\n\nwhere LastActivityDate >= DATEADD(month, -1, \n                                  (SELECT max(LastActivityDate) from Posts)\n                                )"},{"QuerySetId":529764,"Title":"SO - Number of active posts last month per 19 moderators","Description":null,"QueryBody":"SELECT COUNT(*) AS PostsLastMonth, 19 AS Moderators, (COUNT(*) \/ 19) AS PostsLastMonthPerMod FROM Posts WHERE LastActivityDate >= DATEADD(month, -1, (SELECT MAX(LastActivityDate) FROM Posts))","CreationDate":"2016-08-27 12:37:15","validated":true,"QueryBody_Original":"SELECT  \n  count(*) PostsLastMonth, \n  19 Moderators, \n  (count(*) \/ 19) PostsLastMonthPerMod\n\nfrom Posts\n\nwhere LastActivityDate >= DATEADD(month, -1, \n                                  (SELECT max(LastActivityDate) from Posts)\n                                )"},{"QuerySetId":529767,"Title":"SOja - Number of active posts last month per 3 moderators","Description":null,"QueryBody":"SELECT COUNT(*) AS PostsLastMonth, 3 AS Moderators, (COUNT(*) \/ 3) AS PostsLastMonthPerMod FROM Posts WHERE LastActivityDate >= DATEADD(month, -1, (SELECT MAX(LastActivityDate) FROM Posts))","CreationDate":"2016-08-27 12:40:22","validated":true,"QueryBody_Original":"SELECT  \n  count(*) PostsLastMonth, \n  3 Moderators, \n  (count(*) \/ 3) PostsLastMonthPerMod\n\nfrom Posts\n\nwhere LastActivityDate >= DATEADD(month, -1, \n                                  (SELECT max(LastActivityDate) from Posts)\n                                )"},{"QuerySetId":530259,"Title":"Number\/Count of user who have 5000+ reputation.","Description":null,"QueryBody":"SELECT COUNT(*), (SELECT COUNT(*) FROM Users), COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM Users) FROM Users WHERE Reputation > 5000","CreationDate":"2016-08-29 8:56:28","validated":true,"QueryBody_Original":"SELECT  count(*), (SELECT count(*) from Users), count(*) * 100.0 \/ (SELECT count(*) from Users)\nFROM Users \nWHERE Reputation > 5000"}]