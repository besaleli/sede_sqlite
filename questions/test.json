[{"QuerySetId":539106,"Title":"Top 200 users from Kolkata,India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kolkata%' OR UPPER(Location) LIKE '%KOLKATA' ORDER BY Reputation DESC LIMIT 2000","CreationDate":"2016-09-14 12:30:06","validated":true,"QueryBody_Original":"SELECT  TOP 2000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kolkata%'\n    OR UPPER(Location) LIKE '%KOLKATA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":539672,"Title":"Top 25 SO Users from Delhi","Description":"Top 30 SO Users from Pune, Maharashtra, India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%Delhi%' OR UPPER(Location) LIKE '%DELHI%' OR Location LIKE '%delhi%' ORDER BY Reputation DESC LIMIT 25","CreationDate":"2018-09-06 10:26:13","validated":true,"QueryBody_Original":"SELECT  TOP 25\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%Delhi%'\n    OR UPPER(Location) LIKE '%DELHI%'\n    or Location like '%delhi%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":542264,"Title":"Top users in Amsterdam or Netherlands","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%Amsterdam%') OR LOWER(Location) LIKE LOWER('%netherlands%') ORDER BY Reputation DESC","CreationDate":"2016-09-21 3:44:51","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Location,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%Amsterdam%')\n    OR\n    LOWER(Location) LIKE LOWER('%netherlands%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":542974,"Title":"Top 50 Users from Ahmedabad.","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"http:\/\/stackoverflow.com\/users\/1844392\/piyush\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ahmedabad%' OR UPPER(Location) LIKE '%AHMEDABAD' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-09-22 16:49:14","validated":true,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [http:\/\/stackoverflow.com\/users\/1844392\/piyush], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ahmedabad%'\n    OR UPPER(Location) LIKE '%AHMEDABAD'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":544775,"Title":"Bumped Posts - New Answer Yet Unresolved","Description":null,"QueryBody":"SELECT BH.*, 'http:\/\/stackoverflow.com\/questions\/' + CAST(BH.PostID AS TEXT(30)) + '\/' AS PostLink, Posts.* FROM (SELECT PH.PostId, MAX(PH.CreationDate) AS LastBump, COUNT(1) AS BumpCount, (SELECT MAX(CreationDate) AS AnswerDate FROM Posts AS AP WHERE AP.ParentID = PH.PostId AND AP.Score = 0) AS LastAnswer FROM PostHistory AS PH GROUP BY PostId) AS BH LEFT JOIN Posts ON Posts.Id = BH.PostId WHERE Posts.AcceptedAnswerID IS NULL AND Posts.Score >= 0 AND NOT EXISTS(SELECT * FROM Posts AS AP WHERE AP.ParentID = Posts.Id AND AP.Score > 0) AND BH.BumpCount > 1 ORDER BY BumpCount DESC, Score DESC","CreationDate":"2016-09-26 20:22:05","validated":true,"QueryBody_Original":"SELECT  \n        BH.*,\n    'http:\/\/stackoverflow.com\/questions\/' + CONVERT(varchar,BH.PostID) + '\/' AS PostLink,\n        Posts.*\nFROM\n        (SELECT\n                PH.PostId,\n                MAX(PH.CreationDate) AS LastBump,\n                COUNT(1) AS BumpCount,\n                (SELECT Max(CreationDate) AS AnswerDate FROM Posts AP WHERE AP.ParentID=PH.PostId AND AP.Score=0) AS LastAnswer\n        FROM\n                PostHistory PH\n        GROUP BY\n                PostId) BH\nLEFT JOIN\n        Posts ON Posts.Id=BH.PostId\nWHERE \n        Posts.AcceptedAnswerID IS NULL\n        AND Posts.Score>=0\n        AND NOT EXISTS (SELECT * FROM Posts AP WHERE AP.ParentID=Posts.Id AND AP.Score>0)\n        AND BH.BumpCount>1\nORDER BY\n        BumpCount DESC,\n        Score DESC"},{"QuerySetId":544929,"Title":"Average question score by reputation","Description":null,"QueryBody":"SELECT AVG(CAST(ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) AS INT)) AS UserReputation, AVG(CAST(Posts.Score AS FLOAT)) AS AverageQuestionScore FROM Posts INNER JOIN Users ON (Users.Id = Posts.OwnerUserId) WHERE PostTypeId = 1 GROUP BY ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) ORDER BY UserReputation","CreationDate":"2016-09-26 22:09:22","validated":true,"QueryBody_Original":"SELECT \n  AVG(CAST(ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) AS BigInt)) AS UserReputation,\n  AVG(CAST(Posts.Score AS Float)) AS AverageQuestionScore\nFROM\n  Posts\nINNER JOIN\n  Users ON (Users.Id = Posts.OwnerUserId)\nWHERE\n  PostTypeId = 1\nGROUP BY\n ROUND(Reputation, -FLOOR(LOG(Reputation, 10)))\nORDER BY\n  UserReputation"},{"QuerySetId":551084,"Title":"Hidden gems: Highest question score per thousand views, minimum 10 views","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE ViewCount >= 10 AND PostTypeId = 1 ORDER BY Score * 1000 \/ ViewCount DESC LIMIT 1000","CreationDate":"2016-10-24 13:38:14","validated":true,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE ViewCount >= 10 AND PostTypeId = 1\nORDER BY Score*1000\/ViewCount DESC"},{"QuerySetId":551108,"Title":"Running total of initial votes vs time in an election","Description":null,"QueryBody":"SELECT b.Date, SUM(COUNT(b.Date)) OVER (ORDER BY b.Date) AS running FROM badges AS b WHERE b.Name = 'Constituent' AND b.Date BETWEEN '##ElectionYear##-01-01' AND '##ElectionYear##-12-31' GROUP BY b.Date ORDER BY b.Date","CreationDate":"2016-10-05 20:36:04","validated":true,"QueryBody_Original":"SELECT  b.Date, SUM(COUNT(b.Date)) OVER (ORDER BY b.Date) running \nFROM badges AS b \nWHERE b.Name = 'Constituent' \n  AND b.Date BETWEEN '##ElectionYear##-01-01' \n                 AND '##ElectionYear##-12-31' \nGROUP BY b.Date \nORDER BY b.Date;"},{"QuerySetId":551415,"Title":"All norwegian users and their global site rank (sorted by reputation and filtered by location)","Description":null,"QueryBody":"SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS GlobalRank, Users.Id AS \"User Link\", Reputation, Location FROM Users) AS x WHERE UPPER(Location) LIKE '%NORWAY%' OR UPPER(Location) LIKE '%NORGE%' ORDER BY Reputation DESC","CreationDate":"2016-10-06 17:32:01","validated":true,"QueryBody_Original":"SELECT  *\nFROM (\n    SELECT\n        ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS GlobalRank,\n        Users.Id as [User Link],\n        Reputation,\n        Location\n    FROM\n        Users) AS x\nWHERE\n    UPPER(Location) LIKE '%NORWAY%'\n OR UPPER(Location) LIKE '%NORGE%'    \nORDER BY\n    Reputation DESC"},{"QuerySetId":551939,"Title":"Top 10 users by reputation in Cyprus","Description":null,"QueryBody":"SELECT Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%Cyprus%' AND Reputation > 0 ORDER BY Reputation DESC LIMIT 10","CreationDate":"2016-10-07 17:32:05","validated":true,"QueryBody_Original":"SELECT  TOP(10) Reputation, DisplayName, Location FROM Users \nWHERE Location LIKE '%Cyprus%' AND Reputation > 0\nORDER BY Reputation DESC"},{"QuerySetId":552121,"Title":"Percentage of questions with at least one answer with removal of recent questions","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%j'), CAST(SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(Posts.Id) AS Ratio FROM Posts WHERE (PostTypeId = 1 AND CreationDate < '##Date##') GROUP BY TIME_TO_STR(CreationDate, '%j') ORDER BY TIME_TO_STR(CreationDate, '%j')","CreationDate":"2016-10-07 20:57:35","validated":true,"QueryBody_Original":"SELECT \n  DATEPART(dayofyear,CreationDate),\n  CAST(SUM(CASE when AnswerCount > 0 then 1 else 0 END) as float)\/COUNT(Posts.Id) as Ratio\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate<'##Date##') \nGROUP BY DATEPART(dayofyear,CreationDate)\nORDER BY DATEPART(dayofyear,CreationDate) ASC"},{"QuerySetId":552236,"Title":"Percentage of questions with at least one answer by week","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W'), CAST(SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(Posts.Id) AS Ratio FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY TIME_TO_STR(CreationDate, '%W') ORDER BY TIME_TO_STR(CreationDate, '%W')","CreationDate":"2016-10-08 2:15:43","validated":true,"QueryBody_Original":"SELECT \n  DATEPART(week,CreationDate),\n  CAST(SUM(CASE when AnswerCount > 0 then 1 else 0 END) as float)\/COUNT(Posts.Id) as Ratio\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY DATEPART(week,CreationDate)\nORDER BY DATEPART(week,CreationDate) ASC"},{"QuerySetId":559288,"Title":"Users with their own Silver Tag Badges","Description":null,"QueryBody":"SELECT B.Name, B.UserId AS \"User Link\", (SELECT COUNT(B2.Name) FROM Badges AS B2 WHERE B2.Name = B.Name) AS \"Total Gold, Silver, and Bronze Badges Awarded for this Tag\" FROM Badges AS B WHERE Class = 2 AND TagBased = 1 AND (SELECT COUNT(B2.Name) FROM Badges AS B2 WHERE B2.Name = B.Name AND B2.Class = 2 AND B2.TagBased = 1) = 1 GROUP BY B.Name, B.UserId ORDER BY B.Name","CreationDate":"2017-07-06 17:14:44","validated":true,"QueryBody_Original":"SELECT  B.Name, B.UserId AS [User Link], (SELECT Count(B2.Name) FROM Badges B2 WHERE B2.Name = B.Name) as [Total Gold, Silver, and Bronze Badges Awarded for this Tag]\nFROM Badges B\nWHERE Class = 2\nAND TagBased = 1\nAND (SELECT Count(B2.Name)\n     FROM Badges B2\n     WHERE B2.Name = B.Name\n     AND B2.Class = 2\n     AND B2.TagBased = 1) = 1\nGROUP BY B.Name, B.UserId\nORDER BY B.Name"},{"QuerySetId":560207,"Title":"Unanswered questions from established users","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Tags, p.CreationDate FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.AnswerCount = 0 AND u.Reputation >= 1000 ORDER BY p.CreationDate DESC","CreationDate":"2016-10-20 13:45:01","validated":true,"QueryBody_Original":"SELECT \np.Id AS [Post Link], p.Tags, p.CreationDate\nFROM Posts p\nINNER JOIN Users u ON u.Id = p.OwnerUserId\nWHERE \np.AnswerCount = 0 AND u.Reputation >= 1000\n  \nORDER BY p.CreationDate DESC"},{"QuerySetId":564905,"Title":"Instances of 'well actually' in answers","Description":null,"QueryBody":"SELECT Id, Body FROM posts WHERE posttypeid = 2 AND (LOWER(Body) LIKE '%well actually%')","CreationDate":"2016-10-27 9:25:50","validated":true,"QueryBody_Original":"SELECT  Id, Body\nfrom posts\nwhere posttypeid = 2 \nand (lower(Body) like '%well actually%')"},{"QuerySetId":565309,"Title":"Search for text in comments (with parameters)","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Id AS \"Comment Link\", \"Text\", \"CreationDate\" FROM Comments WHERE Text LIKE '%##SearchString##%' ORDER BY CreationDate DESC","CreationDate":"2018-10-28 16:44:04","validated":true,"QueryBody_Original":"SELECT  PostId AS [Post Link], Id AS [Comment Link], [Text], [CreationDate] FROM Comments \nWHERE Text LIKE '%##SearchString##%'\nORDER BY CreationDate DESC"},{"QuerySetId":567274,"Title":"Answers of users in Latvia","Description":null,"QueryBody":"SELECT OwnerUserId AS \"UserId\", SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS \"QuestionsCount\", SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS \"AnswersCount\", SUM(CASE WHEN PostTypeId = 1 THEN Score ELSE 0 END) AS \"QuestionsScore\", SUM(CASE WHEN PostTypeId = 2 THEN Score ELSE 0 END) AS \"AnswersScore\" FROM Posts AS p WHERE EXISTS(SELECT * FROM Users AS u WHERE u.Id = p.OwnerUserId AND (UPPER(u.Location) LIKE '%LATVIJA%' OR UPPER(u.Location) LIKE '%LATVIA%' OR UPPER(u.Location) = 'LV')) GROUP BY OwnerUserId","CreationDate":"2016-11-01 23:29:21","validated":true,"QueryBody_Original":"SELECT  OwnerUserId [UserId]\n, sum(case when PostTypeId = 1 then 1 else 0 end) [QuestionsCount]\n, sum(case when PostTypeId = 2 then 1 else 0 end) [AnswersCount]\n, sum(case when PostTypeId = 1 then Score else 0 end) [QuestionsScore]\n, sum(case when PostTypeId = 2 then Score else 0 end) [AnswersScore]\nfrom Posts p\nwhere exists (\n  SELECT *\n  from Users u\n  where u.Id = p.OwnerUserId\n  and (upper(u.Location) like '%LATVIJA%' \n    or upper(u.Location) like '%LATVIA%' \n    or upper(u.Location) = 'LV'\n  )\n)\ngroup by OwnerUserId"},{"QuerySetId":574212,"Title":"The top 250 answers with the most up-votes (ignores down-votes)","Description":null,"QueryBody":"SELECT COUNT(v.postid) AS \"Vote count\", v.postid AS \"Post Link\", p.body FROM votes AS v INNER JOIN posts AS p ON p.id = v.postid WHERE PostTypeId = 2 AND VoteTypeId = 2 GROUP BY v.postid, p.body ORDER BY 'Vote count' DESC LIMIT 250","CreationDate":"2016-11-08 11:08:10","validated":true,"QueryBody_Original":"SELECT  top 250 count(v.postid) as 'Vote count', v.postid AS [Post Link],p.body\nfrom votes v \ninner join posts p on p.id=v.postid\nwhere PostTypeId = 2 and VoteTypeId=2\ngroup by v.postid,p.body\norder by 'Vote count' desc"},{"QuerySetId":575753,"Title":"StackOverflow score to length ratio","Description":null,"QueryBody":"SELECT id AS \"Post Link\", Score, LENGTH(body) AS Length, CAST(score AS FLOAT) \/ LENGTH(body) AS Ratio, OwnerUserId AS \"User Link\" FROM posts ORDER BY CAST(score AS FLOAT) \/ LENGTH(body) DESC","CreationDate":"2016-11-10 21:36:33","validated":true,"QueryBody_Original":"SELECT id as [Post Link], Score, len(body) as Length, cast(score as float) \/ len(body) as Ratio, OwnerUserId as [User Link] from posts order by cast(score as float) \/ len(body) desc"},{"QuerySetId":575842,"Title":"Post length to score ratio","Description":null,"QueryBody":"SELECT id AS \"Post Link\", Score, LENGTH(body) AS Length, CAST(score AS FLOAT) \/ LENGTH(body) AS Ratio, OwnerUserId AS \"User Link\" FROM posts WHERE body <> '' ORDER BY CAST(score AS FLOAT) \/ LENGTH(body) DESC","CreationDate":"2016-11-11 1:11:20","validated":true,"QueryBody_Original":"SELECT  id as [Post Link], Score, len(body) as Length, cast(score as float) \/ len(body) as Ratio, OwnerUserId as [User Link]\nfrom posts\nwhere body <> ''\norder by cast(score as float) \/ len(body) desc"},{"QuerySetId":576944,"Title":"questions from 2010.01.01 to 2010 10.10","Description":null,"QueryBody":"SELECT * FROM posts WHERE creationdate >= '2010-01-01 00:00:00' AND creationdate < '2010-01-10 00:00:00' AND PostTypeId = 2 ORDER BY creationdate DESC","CreationDate":"2016-11-13 14:25:24","validated":true,"QueryBody_Original":"SELECT  * from posts where \ncreationdate >= '2010-01-01 00:00:00' and creationdate < '2010-01-10 00:00:00'\nand PostTypeId = 2\norder by creationdate desc"},{"QuerySetId":579261,"Title":"Find people with a tag-based silver badge in a certain country","Description":"Find people with a tag-based silver badge in a certain country.\nUseful to search experts on a given subject.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE LOWER(Users.Location) LIKE LOWER('%##CountryName##%') AND Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 AND LOWER(Badges.name) = LOWER('##TagName##') ORDER BY Reputation DESC","CreationDate":"2016-11-16 19:27:21","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    LOWER(Users.Location) LIKE LOWER('%##CountryName##%')\n    AND Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    AND LOWER(Badges.name) = LOWER('##TagName##')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":579868,"Title":"total of unanswered questions x user reputation","Description":null,"QueryBody":"SELECT p.id, ownerdisplayname, u.reputation, title, tags, viewcount, p.creationdate, answercount, COUNT(*) FROM posts AS p, users AS u WHERE AnswerCount > 0 AND AcceptedAnswerId IS NULL AND p.owneruserid = u.id GROUP BY p.id, ownerdisplayname, u.reputation, title, tags, viewcount, p.creationdate, answercount","CreationDate":"2016-11-17 23:14:35","validated":true,"QueryBody_Original":"SELECT  p.id, ownerdisplayname, u.reputation, title, tags, viewcount, p.creationdate, answercount, count(*)\nfrom posts p, users u\nwhere \nAnswerCount > 0 and\nAcceptedAnswerId is null and\np.owneruserid = u.id\ngroup by p.id, ownerdisplayname, u.reputation, title, tags, viewcount, p.creationdate, answercount"},{"QuerySetId":580560,"Title":"Last 5 Notable Question Badges in MATLAB Tag","Description":null,"QueryBody":"SELECT DISTINCT CreationDate, Posts.Id AS \"Post Link\", Posts.Tags AS \"Tagged With\" FROM Posts WHERE (Tags LIKE '%matlab%') ORDER BY CreationDate DESC LIMIT 5","CreationDate":"2016-11-19 10:01:59","validated":true,"QueryBody_Original":"SELECT  DISTINCT TOP 5 \nCreationDate,\nPosts.Id as [Post Link],\nPosts.Tags as [Tagged With]\nFROM Posts \nWHERE (Tags LIKE '%matlab%')\nORDER BY CreationDate DESC"},{"QuerySetId":581360,"Title":"Find user info all users in Paris","Description":null,"QueryBody":"SELECT Id AS \"Id Link\", DisplayName, Reputation, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, EmailHash, Age, AccountId FROM Users WHERE LOWER(Location) LIKE '%paris%' ORDER BY Reputation DESC","CreationDate":"2016-11-21 18:47:21","validated":true,"QueryBody_Original":"SELECT  \n  Id AS [Id Link],\n  DisplayName,\n  Reputation,\n  WebsiteUrl,\n  Location,\n  AboutMe,\n  Views,\n  UpVotes,\n  DownVotes,\n  EmailHash,\n  Age,\n  AccountId\nFROM \n  Users\nWHERE\n   LOWER(Location) LIKE '%paris%'\nORDER BY\n  Reputation DESC"},{"QuerySetId":582502,"Title":"Top 100 users in Italy.","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('Italy') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-11-23 18:12:21","validated":true,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('Italy')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":583553,"Title":"Top 20 users from kochi","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Kochi, Kerala%' OR UPPER(Location) LIKE '%Kochi, Kerala%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2017-09-28 19:12:56","validated":true,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Kochi, Kerala%'\n    OR UPPER(Location) LIKE '%Kochi, Kerala%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":586301,"Title":"Get unanswered Latest 20 Questions By Tag","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.TAGS FROM Posts AS q LEFT OUTER JOIN Posts AS a ON q.Id = a.ParentId AND a.PostTypeId = 2 WHERE q.PostTypeId = 1 AND a.Id IS NULL AND q.TAGS LIKE '%<##TagName##>%' ORDER BY q.CreationDate LIMIT 20","CreationDate":"2016-11-29 18:18:08","validated":true,"QueryBody_Original":"SELECT  TOP 20\n    q.Id AS [Post Link],\n    q.TAGS\nFROM\n    Posts q\n  LEFT OUTER JOIN\n    Posts a \n    ON \n    q.Id = a.ParentId\n    AND\n    a.PostTypeId = 2\nWHERE\n    q.PostTypeId = 1\n    AND\n    a.Id IS NULL\n    AND\n    q.TAGS LIKE '%<##TagName##>%'\nORDER BY\n    q.CreationDate"},{"QuerySetId":586332,"Title":"Search keyword in user comments","Description":null,"QueryBody":"SELECT CONCAT('http:\/\/worldbuilding.stackexchange.com\/questions\/', PostID), Score, Text, CreationDate FROM comments WHERE Text LIKE '%##Keyword##%' COLLATE Latin1_General_100_CI_AI_SC ORDER BY CreationDate DESC","CreationDate":"2018-06-12 2:01:18","validated":true,"QueryBody_Original":"SELECT  CONCAT('http:\/\/worldbuilding.stackexchange.com\/questions\/', PostID), Score, Text, CreationDate FROM comments WHERE Text Like '%##Keyword##%' COLLATE Latin1_General_100_CI_AI_SC ORDER BY CreationDate DESC"},{"QuerySetId":592404,"Title":"Top 20 highest upvoted questions regarding Android","Description":null,"QueryBody":"SELECT p.Title, p.Body, COUNT(v.PostID), v.PostID AS \"Post Link\", p.Tags FROM Posts AS P JOIN Votes AS V ON p.Id = v.Postid WHERE PostTypeId = 1 AND VoteTypeId = 2 AND p.Tags LIKE '%android%' GROUP BY p.Title, p.Body, v.PostID, p.Tags ORDER BY COUNT(v.PostID) DESC LIMIT 20","CreationDate":"2016-12-08 15:35:05","validated":true,"QueryBody_Original":"SELECT  TOP 20 p.Title, p.Body, COUNT(v.PostID), v.PostID AS [Post Link], p.Tags\nFROM Posts P\nJOIN Votes V on p.Id=v.Postid\nWHERE PostTypeId = 1 \nAND VoteTypeId=2 \nAND p.Tags LIKE '%android%'\nGROUP BY p.Title, p.Body, v.PostID, p.Tags\nORDER BY COUNT(v.PostID) DESC"},{"QuerySetId":596263,"Title":"Number of comments on each user's posts","Description":null,"QueryBody":"SELECT users.displayname, COUNT(posts.id) AS number_of_posts, SUM(commentcount) * 1.0 \/ COUNT(posts.id) AS number_of_comments_per_post FROM users INNER JOIN posts ON posts.owneruserid = users.id GROUP BY displayname ORDER BY 2 DESC","CreationDate":"2016-12-12 16:36:24","validated":true,"QueryBody_Original":"SELECT  users.displayname, count(posts.id) as number_of_posts,\nSUM(commentcount) * 1.0 \/ count(posts.id) as number_of_comments_per_post\nfrom users inner join\nposts on posts.owneruserid = users.id\n--where posts.parentid IS NOT NULL\ngroup by displayname\norder by 2 desc"},{"QuerySetId":596423,"Title":"Questions going from [status-declined] to [status-completed] after posting a bounty","Description":null,"QueryBody":"SELECT DISTINCT (d.postid) AS \"Post Link\" FROM posthistory AS d INNER JOIN posthistory AS c ON d.postid = c.postid INNER JOIN votes AS v ON v.postid = c.postid AND v.creationdate > d.creationdate AND v.creationdate < c.creationdate WHERE d.posthistorytypeid = 6 AND d.text LIKE '%<status-declined>%' AND c.posthistorytypeid = 6 AND c.text LIKE '%<status-completed>%' AND v.votetypeid = 8","CreationDate":"2016-12-12 19:08:46","validated":true,"QueryBody_Original":"SELECT  DISTINCT(d.postid) AS [Post Link]\n  FROM posthistory AS d\n  INNER JOIN posthistory AS c\n    ON d.postid = c.postid\n  INNER JOIN votes AS v\n    ON v.postid = c.postid\n    AND v.creationdate > d.creationdate\n    AND v.creationdate < c.creationdate\n  WHERE d.posthistorytypeid = 6\n    AND d.text LIKE '%<status-declined>%'\n    AND c.posthistorytypeid = 6\n    AND c.text LIKE '%<status-completed>%'\n    AND v.votetypeid = 8"},{"QuerySetId":599669,"Title":"Users Mentioning DropBox in AboutMe","Description":null,"QueryBody":"SELECT Id AS \"User ID\", DisplayName AS \"User Name\", Reputation AS \"Reputation\", Location AS \"Location\", AboutMe AS \"User Bio\" FROM Users WHERE AboutMe LIKE '%dropbox%' ORDER BY Reputation DESC","CreationDate":"2017-01-05 23:43:45","validated":true,"QueryBody_Original":"SELECT \nId as 'User ID',\nDisplayName as 'User Name',\nReputation as 'Reputation',\nLocation as 'Location',\nAboutMe as 'User Bio'\nfrom Users\nwhere AboutMe like '%dropbox%'\norder by Reputation desc"},{"QuerySetId":600611,"Title":"Most upvoted questions by tag","Description":null,"QueryBody":"SELECT COUNT(v.PostID), v.PostID AS \"Post Link\", p.Tags, TIME_TO_STR(p.CreationDate, '%Year') FROM Posts AS P JOIN Votes AS V ON p.Id = v.Postid WHERE PostTypeId = 1 AND VoteTypeId = 2 GROUP BY p.Title, p.Body, v.PostID, p.Tags, TIME_TO_STR(p.CreationDate, '%Year') ORDER BY COUNT(v.PostID) DESC LIMIT 12","CreationDate":"2017-05-06 11:21:49","validated":true,"QueryBody_Original":"SELECT  TOP 12 COUNT(v.PostID), v.PostID AS [Post Link], p.Tags, DATEPART(Year,p.CreationDate)\nFROM Posts P\nJOIN Votes V on p.Id=v.Postid\nWHERE PostTypeId = 1 \nAND VoteTypeId=2 \nGROUP BY p.Title, p.Body, v.PostID, p.Tags, DATEPART(Year,p.CreationDate)\nORDER BY COUNT(v.PostID) DESC"},{"QuerySetId":607410,"Title":"Community Voting Statistics of Stack Overflow","Description":"http:\/\/meta.stackexchange.com\/questions\/156143\/community-voting-statistics-of-stack-overflow\/288704#288704","QueryBody":"SELECT YEAR(v.creationdate), SUM(CASE WHEN votetypeid = 1 THEN 1 ELSE 0 END) AS accepted, SUM(CASE WHEN votetypeid = 2 AND posttypeid = 1 THEN 1 ELSE 0 END) AS \"Q upmod\", SUM(CASE WHEN votetypeid = 3 AND posttypeid = 1 THEN 1 ELSE 0 END) AS \"Q downmod\", SUM(CASE WHEN votetypeid = 2 AND posttypeid = 2 THEN 1 ELSE 0 END) AS \"A upmod\", SUM(CASE WHEN votetypeid = 3 AND posttypeid = 2 THEN 1 ELSE 0 END) AS \"A downmod\" FROM posts AS p INNER JOIN votes AS v ON v.postid = p.id WHERE votetypeid IN (1, 2, 3) GROUP BY YEAR(v.creationdate)","CreationDate":"2016-12-23 20:32:29","validated":true,"QueryBody_Original":"SELECT  year(v.creationdate)\n     , sum(case when votetypeid = 1 then 1 else 0 end) as accepted\n     , sum(case when votetypeid = 2 and posttypeid = 1 then 1 else 0 end) as [Q upmod]\n     , sum(case when votetypeid = 3 and posttypeid = 1 then 1 else 0 end) as [Q downmod]\n     , sum(case when votetypeid = 2 and posttypeid = 2 then 1 else 0 end) as [A upmod]\n     , sum(case when votetypeid = 3 and posttypeid = 2 then 1 else 0 end) as [A downmod]\nfrom posts p \ninner join votes v on v.postid = p.id\nwhere votetypeid in (1,2,3)\ngroup by year(v.creationdate)"},{"QuerySetId":607686,"Title":"Top 100 users from shanghai","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%shanghai%' OR UPPER(Location) LIKE '%shanghai%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-02-22 18:58:19","validated":true,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%shanghai%'\n    OR UPPER(Location) LIKE '%shanghai%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":609937,"Title":"TensorFlow: number of answerers over time","Description":null,"QueryBody":"SELECT a.OwnerUserId, MIN(a.CreationDate), ROW_NUMBER() OVER (ORDER BY MIN(a.CreationDate)) AS AnswerCount FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.Tags LIKE '%<tensorflow>%' GROUP BY a.OwnerUserId ORDER BY MIN(a.CreationDate)","CreationDate":"2016-12-30 5:16:29","validated":true,"QueryBody_Original":"SELECT  a.OwnerUserId, MIN(a.CreationDate), ROW_NUMBER() OVER(ORDER BY MIN(a.CreationDate) ASC) AS AnswerCount\nFROM Posts q INNER JOIN Posts a ON a.ParentId = q.Id\nWHERE q.Tags LIKE '%<tensorflow>%'\nGROUP BY a.OwnerUserId\nORDER BY MIN(a.CreationDate) ASC"},{"QuerySetId":610056,"Title":"Top Users in New Zealand","Description":"Created by samliew (http:\/\/stackoverflow.com\/users\/584192\/samuel-liew)\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName, Reputation, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%New Zealand%') ORDER BY Reputation DESC","CreationDate":"2016-12-30 13:53:50","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    DisplayName, \n    Reputation, \n    Location \nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%New Zealand%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":610369,"Title":"Top 5 Users from Pakistan by Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK' ORDER BY Reputation DESC LIMIT 5","CreationDate":"2017-01-08 0:01:21","validated":true,"QueryBody_Original":"SELECT  TOP 5\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":611173,"Title":"\"Very well, thank you\" comments","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", c.Id AS \"Comment Link\", c.CreationDate, c.Score FROM users AS u LEFT JOIN comments AS c ON c.UserId = u.Id WHERE UPPER(text) LIKE UPPER('%very well, thank you%') ORDER BY c.CreationDate","CreationDate":"2017-01-04 6:37:22","validated":true,"QueryBody_Original":"SELECT \n  u.Id as [User Link],\n  c.Id as [Comment Link],\n  c.CreationDate,\n  c.Score\nfrom users u\n  left join comments c\n    on c.UserId = u.Id\nwhere UPPER(text) like UPPER('%very well, thank you%') \n\n\norder by c.CreationDate asc"},{"QuerySetId":611591,"Title":"Answers with word \".BY\" for \"data.table\" tag posts","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", Id AS \"Post Link\" FROM Posts WHERE ParentId IN (SELECT ID FROM Posts WHERE Tags LIKE '%data.table%' AND Body COLLATE Latin1_General_CS_AS LIKE '%column%') AND Body COLLATE Latin1_General_CS_AS LIKE '%.BY%'","CreationDate":"2017-01-05 4:59:10","validated":true,"QueryBody_Original":"SELECT  OwnerUserId as [User Link], Id As [Post Link]\nFROM Posts\nWHERE ParentId IN (\n    SELECT ID\n    FROM Posts\n    WHERE Tags like '%data.table%'\n      AND Body COLLATE Latin1_General_CS_AS like '%column%'\n  )\n  AND Body COLLATE Latin1_General_CS_AS like '%.BY%'"},{"QuerySetId":612830,"Title":"Count of Tags relevant to Taxonomist","Description":"Returns the number of tags that would be eligible for awarding Taxonomist if it could be awarded multiple times","QueryBody":"SELECT COUNT(*) AS Tag_Count FROM Tags AS t WHERE t.Count >= 50","CreationDate":"2017-01-09 7:52:35","validated":true,"QueryBody_Original":"SELECT  \n  COUNT(*) as Tag_Count\nFROM Tags t\nWHERE\n  t.Count >= 50"},{"QuerySetId":614190,"Title":"Silver Badges for C++ Worldwide","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 1 AND Badges.TagBased = 1 AND Badges.name = 'c++' ORDER BY Reputation DESC","CreationDate":"2017-04-27 20:44:23","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 1\n    AND Badges.TagBased = 1\n    AND Badges.name = 'c++'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":614659,"Title":"Users between 21 and 29 and votes 200 to 1000","Description":null,"QueryBody":"SELECT * FROM Users WHERE LOWER(Location) LIKE LOWER('%##Location##%') AND AGE BETWEEN 21 AND 29 AND UPVOTES BETWEEN 200 AND 1000","CreationDate":"2017-01-12 1:48:22","validated":true,"QueryBody_Original":"SELECT     \n*\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##Location##%')\n    AND AGE BETWEEN 21 AND 29\n    AND UPVOTES BETWEEN 200 AND 1000"},{"QuerySetId":616934,"Title":"Questions by users with high rep (above 20K)","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Posts.Id AS \"Post Link\", Posts.LastEditDate FROM Users INNER JOIN Posts ON Users.Id = OwnerUserId WHERE Reputation >= 20000 AND PostTypeId = 2 ORDER BY \"LastEditDate\" DESC LIMIT 50","CreationDate":"2018-02-21 21:36:37","validated":true,"QueryBody_Original":"SELECT  \n    TOP 50\n    Users.Id as [User Link],\n    Posts.Id as [Post Link],\n    Posts.LastEditDate\nFROM\n    Users\n  INNER JOIN\n    Posts ON Users.Id = OwnerUserId\nWHERE \n    Reputation >= 20000 AND PostTypeId = 2\nORDER BY\n    [LastEditDate] DESC"},{"QuerySetId":616935,"Title":"Top 20 Users from bangalore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bengaluru%' OR LOWER(Location) LIKE '%bengalore%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2017-06-09 14:28:54","validated":true,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bengaluru%' OR\n    LOWER(Location) LIKE '%bengalore%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":617031,"Title":"Open questions by users with rep>1000 from the past year, with link to post","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Posts.Title AS \"Posts Link\", 'http:\/\/english.stackexchange.com\/questions\/' + CAST(posts.id AS TEXT), Posts.LastEditDate, posts.creationdate, posts.closeddate, posts.acceptedanswerid FROM Users INNER JOIN Posts ON Users.Id = OwnerUserId WHERE Reputation >= 1000 AND Title <> '' AND posts.creationdate > CURRENT_TIMESTAMP() - 365 AND closeddate IS NULL AND posts.acceptedanswerid IS NULL ORDER BY \"LastEditDate\" DESC","CreationDate":"2017-01-18 7:09:56","validated":true,"QueryBody_Original":"SELECT  \n    \n    Users.Id as [User Link],\n    Posts.Title as [Posts Link],\n    'http:\/\/english.stackexchange.com\/questions\/'+ cast(posts.id as nvarchar), \n    Posts.LastEditDate,\n    posts.creationdate,\n    posts.closeddate,\n    posts.acceptedanswerid\n    FROM\n    Users\n  INNER JOIN\n    Posts ON Users.Id = OwnerUserId\nWHERE \nReputation >= 1000 AND Title != '' and posts.creationdate>getdate()-365 and closeddate is null and posts.acceptedanswerid is null\nORDER BY\n    [LastEditDate] DESC"},{"QuerySetId":617064,"Title":"Top 250 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", us.id AS \"User Link\", us.DisplayName, us.Reputation, us.Location FROM Users AS us WHERE LOWER(us.Location) LIKE '%india' ORDER BY Reputation DESC LIMIT 250","CreationDate":"2019-04-26 15:37:24","validated":true,"QueryBody_Original":"SELECT  top 250 ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],us.id [User Link],\n       us.DisplayName,\n       us.Reputation,us.Location\nFROM Users us\nWHERE lower(us.Location) like '%india'\nORDER BY Reputation DESC;"},{"QuerySetId":617436,"Title":"count of questions with an accepted answer","Description":null,"QueryBody":"SELECT COUNT(q.id) FROM posts AS q INNER JOIN posts AS a ON q.AcceptedAnswerId = a.id WHERE q.PostTypeId = 1","CreationDate":"2017-04-07 17:43:04","validated":true,"QueryBody_Original":"SELECT  count (q.id) from posts q inner join posts a on q.AcceptedAnswerId = a.id\nwhere q.PostTypeId = 1 "},{"QuerySetId":620685,"Title":"COMMENTS - Top 1000 Join the Users table with the Posts table to get Display Name with Location","Description":null,"QueryBody":"SELECT Comments.Id, PostId, UserId, DisplayName, Location FROM Comments JOIN Users ON Comments.UserId = Users.Id LIMIT 1000","CreationDate":"2017-01-27 21:26:11","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n  Comments.Id, PostId, UserId, DisplayName, Location\nFROM\n  Comments\nJOIN\n  Users\nON \n  Comments.UserId = Users.Id"},{"QuerySetId":621414,"Title":"Biblical Hermeneutics > Top 50 Posts by Views per day","Description":null,"QueryBody":"SELECT P.Id AS \"Post Link\", P.Title, P.ViewCount, P.Score, CAST(CURRENT_TIMESTAMP() - P.CreationDate AS INT) AS \"Days Active\", ViewCount \/ CAST(CURRENT_TIMESTAMP() - P.CreationDate AS INT) AS \"Average Views Per Day\", U.DisplayName FROM Posts AS P INNER JOIN Users AS U ON P.OwnerUserId = U.Id ORDER BY P.ViewCount \/ CAST(CURRENT_TIMESTAMP() - P.CreationDate AS INT) DESC LIMIT 50","CreationDate":"2017-01-30 21:34:04","validated":true,"QueryBody_Original":"SELECT  TOP (50) P.Id as [Post Link], P.Title, P.ViewCount, P.Score, CAST(GETDATE() - P.CreationDate AS Integer) AS [Days Active], ViewCount\/CAST(GETDATE() - P.CreationDate AS Integer) AS [Average Views Per Day], U.DisplayName\nFROM Posts As P Inner Join Users as U ON P.OwnerUserId = U.Id\nORDER BY P.ViewCount\/CAST(GETDATE() - P.CreationDate AS Integer) DESC"},{"QuerySetId":622987,"Title":"Relatively obscure questions with more than four characters","Description":null,"QueryBody":"SELECT * FROM Tags WHERE LENGTH(Text) > 4 ORDER BY Count","CreationDate":"2017-02-03 10:00:36","validated":true,"QueryBody_Original":"SELECT  \n    * \nFROM \n    Tags \nWHERE \n    LEN(Text) > 4\nORDER BY \n    Count ASC;"},{"QuerySetId":623165,"Title":"Gold Badges for Node.js in Poland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 1 AND Badges.TagBased = 1 AND Badges.name = 'node.js' AND LOWER(Users.Location) LIKE LOWER('%Poland%') ORDER BY Reputation DESC","CreationDate":"2017-02-03 16:51:26","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 1\n    AND Badges.TagBased = 1\n    AND Badges.name = 'node.js'\n    AND LOWER(Users.Location) LIKE LOWER('%Poland%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":625404,"Title":"Broken software-centre links in Ask Ubuntu","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE Body LIKE '%bit.ly\/software-small%' OR Body LIKE '%bit.ly\/software-larse%' ORDER BY CreationDate DESC","CreationDate":"2017-03-14 5:21:45","validated":true,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  CreationDate\nFROM Posts\nWHERE Body LIKE '%bit.ly\/software-small%'\nOR Body LIKE '%bit.ly\/software-larse%'\nORDER BY CreationDate DESC"},{"QuerySetId":626108,"Title":"Active Users -- Two Question Posts a Week during Twenty Weeks For Python Tag","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, COUNT(*) AS QNum FROM Users AS u INNER JOIN (SELECT OwnerUserId, TIME_TO_STR(CreationDate, 'WEEK') AS Week FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%python%' AND NOT OwnerUserId IS NULL GROUP BY OwnerUserId, TIME_TO_STR(CreationDate, 'WEEK') HAVING COUNT(*) > 2) AS r ON u.Id = r.OwnerUserId GROUP BY u.Id, u.DisplayName ORDER BY QNum DESC","CreationDate":"2017-02-09 18:43:05","validated":true,"QueryBody_Original":"SELECT  u.Id, u.DisplayName, COUNT(*) as QNum\nFROM Users u INNER JOIN\n  (SELECT OwnerUserId, DATEPART(WEEK, CreationDate) as Week\n   FROM Posts \n   WHERE PostTypeId = 1 AND\n    Tags LIKE '%python%' AND\n    NOT OwnerUserId IS NULL\n  GROUP BY OwnerUserId, DATEPART(WEEK, CreationDate)\n  HAVING COUNT(*) > 2) r ON u.Id = r.OwnerUserId\nGROUP BY u.Id, u.DisplayName\nORDER BY QNum desc"},{"QuerySetId":627911,"Title":"Uber Employees on Stack Overflow by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Users.AboutMe) LIKE LOWER('% Uber %') ORDER BY Reputation DESC","CreationDate":"2017-02-14 2:00:16","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n  lower(Users.AboutMe) LIKE lower('% Uber %')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":628571,"Title":"Links to the old Astronomy SE site","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE Body LIKE '%astronomy.stackexchange.com%' ORDER BY CreationDate DESC","CreationDate":"2017-02-15 19:27:59","validated":true,"QueryBody_Original":"SELECT \nId As [Post Link],\nCreationDate\nFROM Posts\nWHERE Body LIKE '%astronomy.stackexchange.com%'\nORDER BY CreationDate DESC"},{"QuerySetId":631732,"Title":"Find Best Developers in location with Specific Badge","Description":null,"QueryBody":"SELECT DISTINCT u.Id AS \"User Link\", u.Reputation FROM Users AS u INNER JOIN Badges AS b ON b.UserId = u.Id WHERE LOWER(Location) LIKE LOWER('%##CityName##%') AND LOWER(b.Name) LIKE LOWER('%##BadgeName##%') ORDER BY Reputation DESC","CreationDate":"2017-02-24 5:57:24","validated":true,"QueryBody_Original":"SELECT  DISTINCT  \n    u.Id AS [User Link], \n    u.Reputation\nFROM\n    Users u\nINNER JOIN Badges b ON b.UserId = u.Id\nWHERE\n    LOWER(Location) LIKE LOWER('%##CityName##%')\n    AND LOWER(b.Name) LIKE LOWER('%##BadgeName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":634518,"Title":"London based Python Bronze Badge","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 AND Badges.name = 'python' AND LOWER(Users.Location) LIKE LOWER('%London%') ORDER BY Reputation DESC","CreationDate":"2017-03-01 15:20:28","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    AND Badges.name = 'python'\n    AND LOWER(Users.Location) LIKE LOWER('%London%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":637386,"Title":"Number of Questions per month","Description":"Android questions per day in 2011\n","QueryBody":"SELECT YEAR(CreationDate) AS Year, MONTH(CreationDate) AS Month, COUNT(CreationDate) AS Count FROM Posts WHERE PostTypeId = 1 GROUP BY MONTH(CreationDate), YEAR(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2017-04-30 9:22:59","validated":true,"QueryBody_Original":"SELECT \n    YEAR(CreationDate) as Year,\n    MONTH(CreationDate) as Month,\n    COUNT(CreationDate) as Count\nFROM Posts\nWHERE PostTypeId=1\nGROUP BY MONTH(CreationDate), YEAR(CreationDate)\nORDER BY YEAR(CreationDate) ASC, MONTH(CreationDate) ASC;"},{"QuerySetId":638492,"Title":"Search post where post text like PostText","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE UPPER(Body) LIKE UPPER('%##PostText##%') ORDER BY Score DESC","CreationDate":"2017-03-10 5:50:10","validated":true,"QueryBody_Original":"SELECT  Id AS [Post Link], Body\n  FROM Posts \n WHERE UPPER(Body) LIKE UPPER('%##PostText##%')\n ORDER BY Score DESC"},{"QuerySetId":641954,"Title":"Top 200 users from Uganda","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%uganda%' OR UPPER(Location) LIKE '%UGA' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2017-03-16 7:13:34","validated":true,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%uganda%'\n    OR UPPER(Location) LIKE '%UGA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":646250,"Title":"Count questions by Year for andriod testing Tag","Description":null,"QueryBody":"SELECT COUNT(P.Id) AS Posts, YEAR(P.CreationDate) AS Year_Data FROM Posts AS P WHERE P.Tags LIKE '%android-testing%' GROUP BY YEAR(P.CreationDate)","CreationDate":"2017-07-25 22:06:53","validated":true,"QueryBody_Original":"SELECT  count(P.Id) as Posts, YEAR(P.CreationDate) as Year_Data\nFROM Posts P\nWHERE P.Tags like '%android-testing%'\nGROUP BY YEAR(P.CreationDate)"},{"QuerySetId":647529,"Title":"average votes per view for questions","Description":null,"QueryBody":"SELECT MAX(value) FROM (SELECT CAST(COUNT(v.Id) AS FLOAT) \/ p.ViewCount AS value FROM Votes AS v, Posts AS p WHERE v.VoteTypeId IN (2, 3) AND p.Id = v.PostId AND p.posttypeid = 1 AND p.ViewCount >= 1 GROUP BY p.ViewCount, p.id) AS t","CreationDate":"2018-05-08 22:58:28","validated":true,"QueryBody_Original":"SELECT  max(value)\nfrom (\nSELECT cast(count(v.Id) as float) \/ p.ViewCount as value\nfrom Votes v, Posts p\nwhere v.VoteTypeId in (2, 3)\nand p.Id = v.PostId\nand p.posttypeid = 1\nand p.ViewCount >= 1\ngroup by p.ViewCount, p.id\n) t"},{"QuerySetId":649059,"Title":"Questions closed\/reopened by mod intervention on the ServerFault","Description":null,"QueryBody":"SELECT *, CASE WHEN Voter = 9140 THEN 1 ELSE 0 END AS b FROM (SELECT JSON_EXTRACT_SCALAR(Text, '$.Voters[0].Id') AS Voter, Id, CreationDate FROM PostHistory WHERE PostHistoryTypeId IN (10, 11) UNION SELECT JSON_EXTRACT_SCALAR(Text, '$.Voters[1].Id') AS Voter, Id, CreationDate FROM PostHistory WHERE PostHistoryTypeId IN (10, 11) UNION SELECT JSON_EXTRACT_SCALAR(Text, '$.Voters[2].Id') AS Voter, Id, CreationDate FROM PostHistory WHERE PostHistoryTypeId IN (10, 11) UNION SELECT JSON_EXTRACT_SCALAR(Text, '$.Voters[3].Id') AS Voter, Id, CreationDate FROM PostHistory WHERE PostHistoryTypeId IN (10, 11) UNION SELECT JSON_EXTRACT_SCALAR(Text, '$.Voters[4].Id') AS Voter, Id, CreationDate FROM PostHistory WHERE PostHistoryTypeId IN (10, 11)) AS p WHERE NOT Id IS NULL LIMIT 100","CreationDate":"2017-03-27 23:04:00","validated":true,"QueryBody_Original":"SELECT  TOP 100 *, CASE WHEN Voter = 9140 THEN 1 ELSE 0 END AS b FROM (\n  SELECT JSON_VALUE(Text, '$.Voters[0].Id') AS Voter, Id, CreationDate\n  FROM PostHistory\n  WHERE PostHistoryTypeId IN (10, 11)\n\n  UNION\n\n  SELECT JSON_VALUE(Text, '$.Voters[1].Id') AS Voter, Id, CreationDate\n  FROM PostHistory\n  WHERE PostHistoryTypeId IN (10, 11)\n\n  UNION\n\n  SELECT JSON_VALUE(Text, '$.Voters[2].Id') AS Voter, Id, CreationDate\n  FROM PostHistory\n  WHERE PostHistoryTypeId IN (10, 11)\n\n  UNION\n\n  SELECT JSON_VALUE(Text, '$.Voters[3].Id') AS Voter, Id, CreationDate\n  FROM PostHistory\n  WHERE PostHistoryTypeId IN (10, 11)\n\n  UNION\n\n  SELECT JSON_VALUE(Text, '$.Voters[4].Id') AS Voter, Id, CreationDate\n  FROM PostHistory\n  WHERE PostHistoryTypeId IN (10, 11)) p\nWHERE Id IS NOT NULL;"},{"QuerySetId":652079,"Title":"New Android Testing by Year","Description":null,"QueryBody":"SELECT COUNT(P.Title), YEAR(P.CreationDate) FROM Posts AS P WHERE (P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%robolectric%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%') GROUP BY YEAR(P.CreationDate)","CreationDate":"2017-04-20 22:23:49","validated":true,"QueryBody_Original":"SELECT  count(P.Title), YEAR(P.CreationDate)\nFROM Posts P\nWHERE\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%robolectric%') OR\n(P.Tags LIKE '%android-espresso%') OR\n\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\nGROUP BY YEAR(P.CreationDate)"},{"QuerySetId":652818,"Title":"Questions with the highest number of answers.\n","Description":"Questions with the highest number of answers.\n","QueryBody":"SELECT p.OwnerUserId AS \"User Link\", p.Id AS \"Post Link\", p.AnswerCount AS \"Answers\", Score AS \"Votes\", ViewCount AS \"Views\" FROM Posts AS p WHERE p.OwnerUserId = 64785 ORDER BY p.AnswerCount DESC LIMIT 100","CreationDate":"2017-04-30 9:20:04","validated":true,"QueryBody_Original":"SELECT  TOP 100\n    p.OwnerUserId as [User Link],\n    p.Id as [Post Link],\n    p.AnswerCount as [Answers],\n    Score as [Votes],\n    ViewCount  as [Views]\nFROM Posts p\nwhere p.OwnerUserId = 64785\nORDER BY p.AnswerCount DESC"},{"QuerySetId":656447,"Title":"Earliest and Latest Bumps for Questions Bumped N Times by Community User","Description":null,"QueryBody":"SELECT S.BumpCount, MIN(S.FirstBump) AS EarliestBump, MAX(S.LastBump) AS LatestBump FROM (SELECT P.ID, B.BumpCount, B.FirstBump, B.LastBump, P.Title FROM Posts AS P JOIN (SELECT H.PostID, COUNT(*) AS BumpCount, MIN(H.CreationDate) AS FirstBump, MAX(H.CreationDate) AS LastBump FROM PostHistory AS H WHERE PostHistoryTypeID = 50 GROUP BY PostID) AS B ON P.ID = B.PostID) AS S GROUP BY S.BumpCount ORDER BY S.BumpCount","CreationDate":"2017-04-11 4:17:39","validated":true,"QueryBody_Original":"SELECT  S.BumpCount, MIN(S.FirstBump) AS EarliestBump, MAX(S.LastBump) AS LatestBump\n  FROM (SELECT P.ID, B.BumpCount, B.FirstBump, B.LastBump, P.Title\n          FROM Posts AS P\n          JOIN (SELECT H.PostID, COUNT(*) AS BumpCount,\n                       MIN(H.CreationDate) AS FirstBump,\n                       MAX(H.CreationDate) AS LastBump\n                  FROM PostHistory AS H\n                 WHERE PostHistoryTypeID  = 50\n                 GROUP BY PostID\n               ) AS B\n            ON P.ID = B.PostID\n       ) AS S\n GROUP BY S.BumpCount\n ORDER BY S.BumpCount;"},{"QuerySetId":657180,"Title":"Time between first comment and question closure","Description":null,"QueryBody":"SELECT posts.id AS \"Post Link\", users.reputation, DATEDIFF(closeddate, first_comment) AS time_between_comment_and_close_vote FROM posts INNER JOIN (SELECT postid, MIN(creationdate) AS first_comment FROM comments GROUP BY postid) AS comment ON comment.postid = posts.id INNER JOIN users ON users.id = posts.owneruserid WHERE NOT posts.closeddate IS NULL ORDER BY reputation","CreationDate":"2017-04-12 6:43:15","validated":true,"QueryBody_Original":"SELECT  posts.id as [Post Link], users.reputation, datediff(n, first_comment, closeddate) as time_between_comment_and_close_vote\nfrom posts inner join\n(SELECT postid, min(creationdate) as first_comment from\ncomments\ngroup by postid) comment on comment.postid = posts.id inner join\nusers on users.id = posts.owneruserid\nwhere posts.closeddate IS NOT NULL\norder by reputation"},{"QuerySetId":658416,"Title":"Top SO users in Krakow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank, Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%krakow%' ORDER BY Reputation DESC","CreationDate":"2017-05-06 10:17:50","validated":true,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Rank,\n  Id AS [User Link], Reputation\nFROM Users\nWHERE LOWER(Location) LIKE '%krakow%'\nORDER BY Reputation DESC;"},{"QuerySetId":661084,"Title":"Total users added, by month, with reputation at least 50","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, u.CreationDate), 0) AS \"month\", COUNT(*) AS \"# Users Added\", COUNT(IIF(u.Reputation >= 50, 1, NULL)) AS \"# Users Added (current rep >= 50)\" FROM Users AS u GROUP BY DATEADD(month, DATEDIFF(month, 0, u.CreationDate), 0) ORDER BY DATEADD(month, DATEDIFF(month, 0, u.CreationDate), 0)","CreationDate":"2017-04-20 19:34:45","validated":true,"QueryBody_Original":"select dateadd(month, datediff(month, 0, u.CreationDate), 0) as 'month', \n  count(*) as '# Users Added',\n  count(iif(u.Reputation >= 50, 1, null)) as '# Users Added (current rep >= 50)'\n\nfrom Users u\n\ngroup by dateadd(month, datediff(month, 0, u.CreationDate), 0)\norder by dateadd(month, datediff(month, 0, u.CreationDate), 0)"},{"QuerySetId":661156,"Title":"Answers that have been unaccepted","Description":null,"QueryBody":"SELECT a.id AS \"Post Link\", a.CreationDate, q.LastActivityDate FROM posts AS a INNER JOIN posts AS q ON q.id = a.parentid WHERE q.acceptedanswerid <> a.id AND (SELECT COUNT(*) FROM votes WHERE postid = a.id AND votetypeid = 1) > 0","CreationDate":"2017-04-21 1:36:49","validated":true,"QueryBody_Original":"SELECT  a.id as [Post Link],a.CreationDate,q.LastActivityDate\nfrom posts a inner join posts q on q.id = a.parentid\nwhere q.acceptedanswerid <> a.id\nand (SELECT count(*) from votes where postid = a.id and votetypeid = 1) > 0"},{"QuerySetId":664978,"Title":"Number of users with 1 reputation","Description":null,"QueryBody":"SELECT COUNT(*) AS count_min_rep FROM users WHERE reputation = '1'","CreationDate":"2017-04-30 2:07:50","validated":true,"QueryBody_Original":"SELECT  \n count( * ) count_min_rep\nfrom users WHERE reputation = '1';"},{"QuerySetId":667195,"Title":"Search Users By Area and Tag","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY SUM(p.score) DESC) AS \"#\", p.OwnerUserId AS \"User Link\", MAX(u.Reputation) AS \"Total Reputation\", SUM(p.score) AS \"Tag Upvote\", SUM(p.score) * 10 + MAX(CASE q.AcceptedAnswerId WHEN p.Id THEN 15 ELSE 0 END) AS \"Tag Reputation\", SUM(CASE q.AcceptedAnswerId WHEN p.Id THEN 1 ELSE 0 END) AS \"Accepted Answers\", COUNT(p.id) AS \"Answers per Tag\" FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id INNER JOIN Posts AS q ON q.id = p.parentid WHERE LOWER(u.Location) LIKE LOWER('%##CityName##%') AND p.posttypeid = 2 \/* just answers *\/ AND q.tags LIKE LOWER('%<##TagName##>%') GROUP BY p.OwnerUserId ORDER BY SUM(p.score) DESC","CreationDate":"2017-05-04 22:51:22","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY SUM(p.score) DESC) AS [#], \n    p.OwnerUserId AS [User Link], \n    Max(u.Reputation) as [Total Reputation],\n    SUM(p.score) as [Tag Upvote],\n    SUM(p.score)*10 + MAX(CASE q.AcceptedAnswerId\n     WHEN p.Id THEN 15   \n     ELSE 0  \n     END) As [Tag Reputation],\n     SUM(CASE q.AcceptedAnswerId\n     WHEN p.Id THEN 1   \n     ELSE 0  \n     END) As [Accepted Answers],\n    Count(p.id) as [Answers per Tag]\nFROM Users u\nJOIN Posts p ON p.OwnerUserId = u.Id\nINNER JOIN Posts q on q.id = p.parentid\nWHERE\n    LOWER(u.Location) LIKE LOWER('%##CityName##%')\n    AND p.posttypeid = 2 -- just answers\n    AND q.tags like LOWER('%<##TagName##>%')\nGROUP BY p.OwnerUserId\nORDER BY sum(p.score) DESC"},{"QuerySetId":670788,"Title":"Number of posts by year","Description":null,"QueryBody":"SELECT DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) \/ 365 AS yearsBack, COUNT(Id) AS postsCount FROM Posts GROUP BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) \/ 365 ORDER BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) \/ 365 DESC","CreationDate":"2017-05-13 7:53:01","validated":true,"QueryBody_Original":"SELECT  datediff(day, CreationDate, getdate())\/365 as yearsBack,\n  count(Id) as postsCount \n  from Posts\ngroup by datediff(day, CreationDate, getdate())\/365 \norder by datediff(day, CreationDate, getdate())\/365 desc"},{"QuerySetId":670871,"Title":"Posts by day of the week","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W') AS D, COUNT(*) AS Posts FROM Posts GROUP BY TIME_TO_STR(CreationDate, '%A'), TIME_TO_STR(CreationDate, '%W') ORDER BY D","CreationDate":"2017-05-14 0:16:20","validated":true,"QueryBody_Original":"SELECT  datepart(weekday, CreationDate) D,\n       count(*) Posts\nfrom Posts\ngroup by datename(weekday, CreationDate), datepart(weekday, CreationDate) \norder by D"},{"QuerySetId":670935,"Title":"Latest 1000 Protected Questions (which haven't been unprotected)","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", ph.CreationDate AS \"ProtectionDate\" FROM PostHistory AS ph WHERE PostHistoryTypeId = 19 AND NOT EXISTS(SELECT * FROM PostHistory AS ph2 WHERE ph2.PostId = ph.PostId AND ph2.PostHistoryTypeId = 20 AND ph2.CreationDate > ph.CreationDate) ORDER BY ph.CreationDate DESC LIMIT 1000","CreationDate":"2017-06-03 3:23:38","validated":true,"QueryBody_Original":"SELECT  Top 1000\n  ph.PostId as [Post Link], ph.CreationDate as [ProtectionDate]\nFrom PostHistory ph\nWhere PostHistoryTypeId = 19 and not exists (\n    SELECT * \n    From PostHistory ph2 \n    Where ph2.PostId = ph.PostId and ph2.PostHistoryTypeId = 20 and ph2.CreationDate > ph.CreationDate\n  )\nOrder By ph.CreationDate Desc"},{"QuerySetId":671268,"Title":"Counting http -> https edits by the Community User","Description":null,"QueryBody":"SELECT COUNT(*) FROM PostHistory WHERE PostHistoryTypeId = 5 \/* edited body *\/ AND UserId = -1 \/* community user *\/ AND Comment LIKE 'replaced http%' \/* comments are of the form \"replaced http:\/\/... with https:\/\/...\" *\/","CreationDate":"2017-05-15 19:18:39","validated":true,"QueryBody_Original":"SELECT  Count(*)\nFrom PostHistory\nWhere PostHistoryTypeId = 5              -- edited body\n      and UserId = -1                    -- community user\n      and Comment like 'replaced http%'  -- comments are of the form \"replaced http:\/\/... with https:\/\/...\""},{"QuerySetId":671524,"Title":"Questions favorited by the OP","Description":null,"QueryBody":"SELECT posts.id AS \"Post Link\", posts.FavoriteCount, posts.Score, posts.CreationDate, votes.userid AS \"User Link\" FROM votes JOIN posts ON (posts.id = votes.postid) WHERE votetypeid = 5 AND posts.PostTypeId = 1 AND posts.OwnerUserId = votes.UserId ORDER BY posts.CreationDate DESC","CreationDate":"2017-05-16 16:02:48","validated":true,"QueryBody_Original":"SELECT  posts.id as [Post Link], posts.FavoriteCount, posts.Score, posts.CreationDate, votes.userid as [User Link]\nfrom votes\njoin posts on (posts.id = votes.postid) \nwhere\n  votetypeid=5 and\n  posts.PostTypeId = 1 and\n  posts.OwnerUserId = votes.UserId\n  order by posts.CreationDate desc"},{"QuerySetId":671527,"Title":"Questions with negative score favorited only by the OP","Description":null,"QueryBody":"SELECT posts.id AS \"Post Link\", posts.FavoriteCount, posts.Score, posts.CreationDate, votes.userid AS \"User Link\" FROM votes JOIN posts ON (posts.id = votes.postid) WHERE posts.FavoriteCount = 1 AND posts.Score < 0 AND votetypeid = 5 AND posts.PostTypeId = 1 AND posts.OwnerUserId = votes.UserId ORDER BY posts.CreationDate DESC","CreationDate":"2017-05-16 16:08:10","validated":true,"QueryBody_Original":"SELECT  posts.id as [Post Link], posts.FavoriteCount, posts.Score, posts.CreationDate, votes.userid as [User Link]\nfrom votes\njoin posts on (posts.id = votes.postid) \nwhere\n  posts.FavoriteCount = 1 and\n  posts.Score < 0 and\n  votetypeid=5 and\n  posts.PostTypeId = 1 and\n  posts.OwnerUserId = votes.UserId\n  order by posts.CreationDate desc"},{"QuerySetId":671546,"Title":"Questions favorited by a single user","Description":null,"QueryBody":"SELECT posts.id AS \"Post Link\", posts.FavoriteCount, posts.Score, posts.CreationDate, posts.OwnerUserId AS \"User Link\", votes.userid AS \"User Link\" FROM votes JOIN posts ON (posts.id = votes.postid) WHERE posts.FavoriteCount = 1 AND votetypeid = 5 AND posts.PostTypeId = 1 ORDER BY posts.CreationDate DESC","CreationDate":"2017-05-16 17:31:48","validated":true,"QueryBody_Original":"SELECT  posts.id as [Post Link], posts.FavoriteCount, posts.Score, posts.CreationDate, posts.OwnerUserId as [User Link], votes.userid as [User Link]\nfrom votes\njoin posts on (posts.id = votes.postid) \nwhere\n  posts.FavoriteCount = 1 and\n  votetypeid=5 and\n  posts.PostTypeId = 1\n  order by posts.CreationDate desc"},{"QuerySetId":672441,"Title":"Question Closures by Vote Counts","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", u.DisplayName AS CloseUser, COUNT(v.value) AS VoterCount FROM PostHistory AS ph JOIN Posts AS p ON p.Id = ph.PostId JOIN Users AS u ON u.Id = ph.UserId JOIN LATERAL OPENJSON(ph.Text, '$.Voters') AS v WHERE PostHistoryTypeId = 10 AND p.PostTypeId = 1 GROUP BY ph.PostID, ph.Text, ph.Comment, u.DisplayName LIMIT 10","CreationDate":"2017-05-18 16:11:26","validated":true,"QueryBody_Original":"SELECT  TOP 10\n  ph.PostId AS [Post Link],\n  u.DisplayName AS CloseUser,\n  COUNT(v.value) AS VoterCount\nFROM PostHistory ph\nJOIN Posts p ON p.Id = ph.PostId\nJOIN Users u ON u.Id = ph.UserId\nCROSS APPLY OPENJSON(ph.Text,'$.Voters') AS v\nWHERE PostHistoryTypeId = 10\n  AND p.PostTypeId = 1\nGROUP BY\n  ph.PostID,\n  ph.Text,\n  ph.Comment,\n  u.DisplayName"},{"QuerySetId":674291,"Title":"Average score of questions without an accepted answer","Description":null,"QueryBody":"SELECT AVG(score + 0.000001) FROM Posts WHERE PostTypeId = 1 AND AcceptedAnswerId IS NULL","CreationDate":"2017-05-22 23:26:16","validated":true,"QueryBody_Original":"SELECT  avg(score+0.000001) from Posts \nwhere PostTypeId = 1 and AcceptedAnswerId is null"},{"QuerySetId":680410,"Title":"Average Reputation of SO Users n Manchester, United Kingdom with reputation more than 15","Description":null,"QueryBody":"SELECT AVG(reputation) AS \"Average Reputation\", COUNT(Id) AS \"Total Users\" FROM Users WHERE LOWER(Location) LIKE '%manchester, united kingdom' AND reputation >= 15","CreationDate":"2017-06-03 21:57:06","validated":true,"QueryBody_Original":"SELECT  \nAVG(reputation) as [Average Reputation],\nCOUNT(Id) as [Total Users]\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%manchester, united kingdom' and reputation >= 15"},{"QuerySetId":680412,"Title":"Average Reputation of SO Users in Manchester, United Kingdom with reputation equal or more than 15","Description":null,"QueryBody":"SELECT AVG(reputation) AS \"Average Reputation\", COUNT(Id) AS \"Total Users\" FROM Users WHERE LOWER(Location) LIKE '%manchester, united kingdom' AND reputation >= 15","CreationDate":"2017-06-03 22:01:08","validated":true,"QueryBody_Original":"SELECT  \nAVG(reputation) as [Average Reputation],\nCOUNT(Id) as [Total Users]\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%manchester, united kingdom' and reputation >= 15"},{"QuerySetId":681797,"Title":"Tolkien questions with low scoring answers and no accepted answer","Description":null,"QueryBody":"SELECT q.id AS \"Post Link\", q.creationdate, COUNT(a.id) AS answers, MAX(a.score) AS max_score FROM posts AS q LEFT JOIN posts AS a ON a.parentid = q.id WHERE q.posttypeid = 1 AND q.AcceptedAnswerID IS NULL AND q.tags LIKE '%star-wars-legends%' AND q.deletiondate IS NULL AND q.closeddate IS NULL GROUP BY q.id, q.creationdate HAVING MAX(a.score) < 10 ORDER BY max_score, creationdate","CreationDate":"2017-11-23 1:08:08","validated":true,"QueryBody_Original":"SELECT \n  q.id AS [Post Link],\n  q.creationdate,\n  COUNT(a.id) AS answers,\n  MAX(a.score) AS max_score\nFROM posts q\nLEFT JOIN posts a ON a.parentid = q.id\nWHERE q.posttypeid = 1\n  AND q.AcceptedAnswerID IS NULL\n  AND q.tags LIKE '%star-wars-legends%'\n  AND q.deletiondate IS NULL\n  AND q.closeddate IS NULL\nGROUP BY\n  q.id,\n  q.creationdate\nHAVING MAX(a.score) < 10\nORDER BY\n  max_score,\n  creationdate"},{"QuerySetId":681814,"Title":"Posts with more than 10 comments","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.tags, p.creationdate, COUNT(c.id) AS comments FROM posts AS p LEFT JOIN comments AS c ON c.postid = p.id WHERE p.posttypeid IN (1, 2) GROUP BY p.id, p.tags, p.creationdate HAVING COUNT(c.id) > 10 ORDER BY comments DESC","CreationDate":"2017-06-06 23:32:31","validated":true,"QueryBody_Original":"SELECT \n  p.id AS [Post Link],\n  p.tags,\n  p.creationdate,\n  COUNT(c.id) AS comments\nFROM posts p\nLEFT JOIN comments c ON c.postid = p.id\nWHERE p.posttypeid IN (1, 2)\nGROUP BY\n  p.id,\n  p.tags,\n  p.creationdate\nHAVING COUNT(c.id) > 10\nORDER BY comments DESC"},{"QuerySetId":682052,"Title":"How many points as user made from (NOT) EXISTS queries","Description":null,"QueryBody":"SELECT * FROM (SELECT DisplayName, question, answer, CASE WHEN id = acceptedAnswerId THEN score * 10 + 15 ELSE score * 10 END AS \"postScore\", body FROM (SELECT u.DisplayName, 'https:\/\/stackoverflow.com\/questions\/' + CAST(p.parentId AS TEXT) AS \"question\", 'https:\/\/stackoverflow.com\/questions\/' + CAST(p.parentId AS TEXT) + '\/#' + CAST(p.id AS TEXT) AS \"answer\", p.id, p2.acceptedAnswerId, p.score, p.body FROM users AS u INNER JOIN posts AS p ON u.id = p.owneruserid INNER JOIN posts AS p2 ON p2.id = p.parentId WHERE u.id = @UserId AND (p.body LIKE '%where%exists%' OR p.body LIKE '%where%not%exists%') AND p.postTypeId = 2) AS result) AS result","CreationDate":"2017-06-07 17:01:34","validated":true,"QueryBody_Original":"SELECT  *\nfrom\n(SELECT\n  DisplayName\n  , question\n  , answer\n  , case \n      when id = acceptedAnswerId\n        then score * 10 + 15\n      else score * 10\n   end [postScore]\n   , body\nfrom\n(SELECT\n  u.DisplayName\n  , 'https:\/\/stackoverflow.com\/questions\/' + cast(p.parentId as nvarchar(max)) [question]\n  , 'https:\/\/stackoverflow.com\/questions\/' + cast(p.parentId as nvarchar(max)) + '\/#' + cast(p.id as nvarchar(max)) [answer]\n  , p.id\n  , p2.acceptedAnswerId\n  , p.score\n  , p.body\nfrom users u\n  inner join posts p on u.id = p.owneruserid\n  inner join posts p2 on p2.id = p.parentId\nwhere u.id = @UserId\n  and (\n    p.body like '%where%exists%'\n    or\n    p.body like '%where%not%exists%'\n    )    \n  and p.postTypeId = 2\n  ) result\n  ) result"},{"QuerySetId":682824,"Title":"Unanswered questions that have a zero-score","Description":"Questions that can be marked as answered by upvoting a self-answered question.\n","QueryBody":"SELECT q.Id AS \"Post Link\" FROM Posts AS q WHERE q.PostTypeId = 1 AND q.ClosedDate IS NULL AND q.AcceptedAnswerId IS NULL AND q.AnswerCount > 0 AND EXISTS(SELECT a.Id FROM Posts AS a WHERE a.Score = 0 AND a.ParentId = q.Id) AND NOT EXISTS(SELECT a.Id FROM Posts AS a WHERE a.Score > 0 AND a.ParentId = q.Id) ORDER BY q.Id DESC","CreationDate":"2017-06-09 6:29:41","validated":true,"QueryBody_Original":"SELECT  q.Id AS [Post Link]\nFROM Posts q \nWHERE q.PostTypeId = 1 \n      AND q.ClosedDate IS NULL\n      AND q.AcceptedAnswerId IS NULL\n      AND q.AnswerCount > 0\n      AND EXISTS (SELECT a.Id\n                  FROM Posts a\n                  WHERE a.Score = 0\n                        AND a.ParentId = q.Id)\n      AND NOT EXISTS (SELECT a.Id \n                      FROM Posts a \n                      WHERE a.Score > 0 \n                            AND a.ParentId = q.Id) \nORDER BY q.Id DESC"},{"QuerySetId":683029,"Title":"Sandboxed posts that have a score > 1 and no activity for a month","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", LastActivityDate AS \"Last Active\", Body AS \"Post Content\" FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(MONTH, -1, GETDATE()) AND Score > 1 ORDER BY LastActivityDate","CreationDate":"2017-06-09 19:12:56","validated":true,"QueryBody_Original":"SELECT  Id AS [Post Link], LastActivityDate as [Last Active], Body as [Post Content] FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(MONTH, -1, GETDATE()) AND Score > 1 ORDER BY LastActivityDate"},{"QuerySetId":685056,"Title":"find unanswered question of users with reputation lower than 102","Description":"find unanswered question of users with reputation lower than 102","QueryBody":"SELECT q.Id, q.title, 'https:\/\/math.stackexchange.com\/questions\/' + CAST(q.id AS TEXT(16)), q.Tags FROM Posts AS q INNER JOIN Users AS u ON u.Id = q.OwnerUserId WHERE u.Reputation < 102 AND q.PostTypeId = 1 AND q.AcceptedAnswerId IS NULL ORDER BY q.LastEditDate DESC","CreationDate":"2017-06-16 2:13:40","validated":true,"QueryBody_Original":"SELECT \nq.Id,q.title ,'https:\/\/math.stackexchange.com\/questions\/'+cast(q.id as varchar(16)),\nq.Tags\nfrom\n    Posts q\n  inner join\n    Users u\n  on u.Id = q.OwnerUserId\nwhere\n  u.Reputation < 102\n  and q.PostTypeId = 1\n  and q.AcceptedAnswerId  is null\n  order by q.LastEditDate desc"},{"QuerySetId":685459,"Title":"Users with the most edits of other users' posts in 2017","Description":null,"QueryBody":"SELECT a.UserId AS \"User Link\", COUNT(a.PostId) AS \"Count\", a.UserId AS \"UserId\" FROM PostHistory AS a INNER JOIN Posts AS b ON a.PostId = b.id WHERE a.PostHistoryTypeId = 5 \/* Edit Body *\/ AND b.CreationDate < '2018-01-01' AND a.CreationDate >= '2017-01-01' GROUP BY a.UserId ORDER BY COUNT(a.PostId) DESC","CreationDate":"2017-06-18 13:06:35","validated":true,"QueryBody_Original":"SELECT  \n  a.UserId AS [User Link]\n  , COUNT(a.PostId) AS \"Count\"\n  , a.UserId as \"UserId\"\nFROM \n  PostHistory a\n  INNER JOIN Posts b\n  ON a.PostId = b.id\nWHERE \n  a.PostHistoryTypeId = 5 -- Edit Body\n  AND b.CreationDate < '2018-01-01'\n  AND a.CreationDate >= '2017-01-01'\nGROUP BY a.UserId\nORDER BY COUNT(a.PostId) DESC;"},{"QuerySetId":686676,"Title":"Open questions with no comments or answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount AS \"View Count\" FROM Posts WHERE PostTypeId = 1 AND DeletionDate IS NULL AND AnswerCount = 0 AND CommentCount = 0 AND ClosedDate IS NULL AND CommunityOwnedDate IS NULL AND NOT EXISTS(SELECT * FROM PostHistory WHERE Posts.Id = PostHistory.PostId AND PostHistory.PostHistoryTypeId = 37 \/* No merged questions. *\/) \/* No merged questions. *\/ \/* No merged questions. *\/ ORDER BY ViewCount DESC","CreationDate":"2017-06-20 23:26:40","validated":true,"QueryBody_Original":"SELECT  \n    Id AS [Post Link],\n    Score,\n    ViewCount AS \"View Count\"\nFROM Posts\nWHERE\n    PostTypeId = 1 \n    AND DeletionDate IS null\n    AND AnswerCount = 0\n    AND CommentCount = 0\n    AND ClosedDate IS null\n    AND CommunityOwnedDate IS null\n    AND NOT EXISTS (\n        SELECT \n            *\n        FROM PostHistory\n        WHERE \n            Posts.Id = PostHistory.PostId\n            AND PostHistory.PostHistoryTypeId = 37 -- No merged questions.\n    )\nORDER BY ViewCount DESC"},{"QuerySetId":692473,"Title":"Number of harry potter Questions by Day","Description":null,"QueryBody":"SELECT DATEADD(DAY, 0, DATEDIFF(day, 0, CreationDate)) AS cdate, COUNT(*) AS count FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%harry-potter%' GROUP BY DATEADD(DAY, 0, DATEDIFF(day, 0, CreationDate)) ORDER BY count DESC","CreationDate":"2017-07-06 22:55:20","validated":true,"QueryBody_Original":"SELECT  dateadd(DAY,0, datediff(day,0, CreationDate )) as cdate, count(*) as count\nfrom Posts\nwhere PostTypeId = 1\nand Tags like '%harry-potter%'\ngroup by dateadd(DAY,0, datediff(day,0, CreationDate ))\norder by count desc"},{"QuerySetId":695599,"Title":"Top 100 user with highest posts from Kolkata","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND LOWER(Users.Location) LIKE LOWER('%kolkata%') GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.Id) > 5 ORDER BY \"Average Answer Score\" DESC LIMIT 100","CreationDate":"2017-07-14 14:48:54","validated":true,"QueryBody_Original":"SELECT  \n    TOP 100\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Answers,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Answer Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null\n    AND LOWER(Users.Location) LIKE LOWER('%kolkata%')\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(Posts.Id) > 5\nORDER BY\n    [Average Answer Score] DESC"},{"QuerySetId":700579,"Title":"questions with only a single tag","Description":null,"QueryBody":"SELECT id FROM posts WHERE PostTypeId = 0 AND LENGTH(tags) = 1","CreationDate":"2017-07-24 3:07:56","validated":true,"QueryBody_Original":"SELECT  id \nfrom posts \nwhere PostTypeId = 0 and len(tags) = 1"},{"QuerySetId":701190,"Title":"all the questions with jira in the title and tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, Body, Tags FROM Posts WHERE Tags LIKE '%jira%' OR Title LIKE '%JIRA%'","CreationDate":"2017-07-25 5:32:14","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], Title, Body, Tags from Posts where Tags LIKE '%jira%' OR Title LIKE '%JIRA%';"},{"QuerySetId":701560,"Title":"percentage of homework tagged questions that are closed","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.PostTypeId, Posts.ClosedDate, Posts.Tags FROM PostHistory JOIN Posts ON Posts.Id = PostHistory.PostId WHERE PostHistoryTypeId IN (3, 6) AND PostHistory.Text LIKE '%homework-and-exercises%' AND ClosedDate <> ''","CreationDate":"2017-07-26 5:00:00","validated":true,"QueryBody_Original":"SELECT \n  Posts.Id AS [Post Link],\n  Posts.PostTypeId,\n  Posts.ClosedDate,\n  Posts.Tags\nFROM PostHistory\nJOIN Posts on Posts.Id = PostHistory.PostId\nWHERE PostHistoryTypeId IN (3,6) --initial tags, tag edits\n  AND PostHistory.Text LIKE '%homework-and-exercises%'\n  AND ClosedDate != ''"},{"QuerySetId":702843,"Title":"Total DTD (Range)  'classroom'  in Title","Description":null,"QueryBody":"SELECT ID AS \"Post Link\", CreationDate, Tags, Score, AnswerCount, CommentCount FROM Posts WHERE Posts.Title LIKE '%classroom%' AND CreationDate BETWEEN @StartDate AND @EndDate ORDER BY CreationDate","CreationDate":"2017-07-28 23:13:12","validated":true,"QueryBody_Original":"SELECT \n  ID as [Post Link],\n  CreationDate,\n  Tags,\n  Score, AnswerCount,CommentCount\n  FROM Posts \nWHERE \n  Posts.Title Like '%classroom%'  \n  and \n  CreationDate \n  BETWEEN \n  @StartDate \n  and\n  @EndDate \nORDER BY CreationDate ASC"},{"QuerySetId":703485,"Title":"Top SO users From India","Description":null,"QueryBody":"SELECT * FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%INDIA%' OR Location LIKE '%India%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-11-21 14:16:47","validated":true,"QueryBody_Original":"SELECT \n    *\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%INDIA%'\n    or Location like '%India%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":708190,"Title":"My \\newcommand comments without \\begingroup","Description":null,"QueryBody":"SELECT CONCAT('https:\/\/math.stackexchange.com\/questions\/', PostID), Score, Text, CreationDate FROM comments WHERE UserId = 11994 AND Text LIKE '%\\newcommand%' AND NOT Text LIKE '%\\begingroup%' COLLATE Latin1_General_100_CI_AI_SC ORDER BY CreationDate DESC","CreationDate":"2017-08-08 22:55:14","validated":true,"QueryBody_Original":"SELECT  CONCAT('https:\/\/math.stackexchange.com\/questions\/', PostID), Score, Text, CreationDate FROM comments WHERE UserId = 11994 AND Text Like '%\\newcommand%' AND Text Not Like '%\\begingroup%' COLLATE Latin1_General_100_CI_AI_SC ORDER BY CreationDate DESC"},{"QuerySetId":708918,"Title":"Attempt to flush out Users part of a voting ring. Targeting the Multi-votes per post in even fashion pattern","Description":"My first attempt to flush out Users part of a voting ring. \n\nTargeting the Multi-votes per post in even fashion pattern.","QueryBody":"SELECT vdv.USER_ID AS \"User Link\", CAST(TIME_TO_STR(vdv.VOTE_DATE, '%b %d, %Y') AS TEXT(20)) AS \"Date of Occurence\", vdv.VOTE_COUNT AS \"Votes per Post\", COUNT(vdv.POST_ID) AS \"Posts Upvoted\" FROM (SELECT COUNT(v.Id) AS VOTE_COUNT, p.Id AS POST_ID, p.OwnerUserId AS USER_ID, v.CreationDate AS VOTE_DATE FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id WHERE v.VoteTypeId = 2 GROUP BY p.Id, v.CreationDate, p.OwnerUserId HAVING COUNT(v.Id) > 1 AND COUNT(v.Id) < 10) AS vdv INNER JOIN Users AS u ON vdv.USER_ID = u.Id GROUP BY vdv.USER_ID, vdv.VOTE_DATE, vdv.VOTE_COUNT HAVING COUNT(vdv.POST_ID) > 3 ORDER BY vdv.VOTE_DATE DESC","CreationDate":"2017-08-10 19:43:11","validated":true,"QueryBody_Original":"SELECT  \nvdv.USER_ID AS [User Link],\nCONVERT(VARCHAR(20), vdv.VOTE_DATE, 107) AS [Date of Occurence],\nvdv.VOTE_COUNT AS [Votes per Post],\nCOUNT(vdv.POST_ID) AS [Posts Upvoted]\n\nFROM\n(\n\n--- Posts that have recieved more then 2 votes a day \nSELECT \nCOUNT(v.Id) AS VOTE_COUNT,\np.Id AS POST_ID,\np.OwnerUserId AS USER_ID,\nv.CreationDate AS VOTE_DATE\n\nFROM Votes AS v\nINNER JOIN Posts AS p ON v.PostId = p.Id\nWHERE v.VoteTypeId = 2\nGROUP BY p.Id, v.CreationDate, p.OwnerUserId\nHAVING COUNT(v.Id) > 1 AND COUNT(v.Id) < 10\n) AS vdv\n\nINNER JOIN Users AS u ON vdv.USER_ID = u.Id\n\nGROUP BY \nvdv.USER_ID,\nvdv.VOTE_DATE,\nvdv.VOTE_COUNT\n\nHAVING COUNT(vdv.POST_ID) > 3\n\nORDER BY vdv.VOTE_DATE DESC"},{"QuerySetId":712200,"Title":"Golden Tag Badges of the site","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Badges.UserId) AS Row, Badges.UserId AS \"User Link\", Tags.TagName AS \"TagName\", Badges.Date AS Date FROM Badges, Tags WHERE Badges.TagBased = 1 AND Badges.Class = 1 AND Badges.Name = Tags.TagName ORDER BY Badges.UserId, Badges.Date","CreationDate":"2017-08-30 5:11:05","validated":true,"QueryBody_Original":"SELECT \n  ROW_NUMBER() OVER(ORDER BY Badges.UserId ASC) AS Row,\n  Badges.UserId AS [User Link],\n  Tags.TagName AS [TagName],\n  Badges.Date AS Date\nFROM Badges, Tags\nWHERE\n  Badges.TagBased = 1\n  AND\n  Badges.Class = 1\n  AND\n  Badges.Name = Tags.TagName\nORDER BY Badges.UserId, Badges.Date"},{"QuerySetId":712228,"Title":"Top 50 users from Finland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%finland%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2017-08-19 23:34:25","validated":true,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%finland%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":721229,"Title":"Users with the most downvoted questions","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS N FROM Posts WHERE PostTypeId = 1 AND Score < 0 GROUP BY OwnerUserId ORDER BY N DESC LIMIT 1000","CreationDate":"2017-09-11 4:32:18","validated":true,"QueryBody_Original":"SELECT  TOP 1000 OwnerUserId AS [User Link], COUNT(*) AS N\nFROM Posts\nWHERE PostTypeId = 1 AND Score < 0\nGROUP BY OwnerUserId\nORDER BY N DESC"},{"QuerySetId":722669,"Title":"MVP - Pull Contribution (Based on User ID)","Description":null,"QueryBody":"SELECT U.DisplayName AS \"Name\", TIME_TO_STR(P.CreationDate, '%YEAR') AS \"Year\", SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Number of Answers\", COUNT(P.Id) AS \"Number of Posts\", CAST(SUM(P.Score) AS FLOAT(6, 2)) \/ COUNT(P.Id) AS \"Average Score\", MAX(P.Score) AS \"Max Score\", SUM(CASE WHEN P.PostTypeId = 2 THEN parent.ViewCount ELSE 0 END) AS \"Views of Answers\" FROM Posts AS P INNER JOIN Users AS U ON U.Id = P.OwnerUserId LEFT OUTER JOIN Posts AS parent ON parent.Id = P.ParentId WHERE P.OwnerUserId = '##UserId##' AND P.CreationDate >= '##asOf##' GROUP BY U.DisplayName, TIME_TO_STR(P.CreationDate, '%YEAR')","CreationDate":"2017-09-14 1:00:12","validated":true,"QueryBody_Original":"SELECT \n  U.DisplayName as [Name],\n  DATEPART(YEAR, P.CreationDate) as [Year],\n  SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) as [Number of Answers],\n  COUNT(P.Id) as [Number of Posts],\n  CAST(SUM(P.Score) as decimal(6,2)) \/ COUNT(P.Id) as [Average Score],\n  MAX(P.Score) as [Max Score],\n  SUM(CASE WHEN P.PostTypeId = 2 THEN parent.ViewCount ELSE 0 END) as [Views of Answers]\nFROM Posts P\ninner join Users U on U.Id = P.OwnerUserId\nleft outer join Posts parent on parent.Id = P.ParentId\nWHERE P.OwnerUserId = '##UserId##' AND P.CreationDate >= '##asOf##'\nGROUP BY U.DisplayName, DATEPART(YEAR, P.CreationDate)"},{"QuerySetId":726230,"Title":"Longest Answers by Markdown for User","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", LENGTH(ph.Text) AS \"Markdown Length\", p.Score AS \"Score\" FROM Posts AS p, PostHistory AS ph\/* initial body, edit body, rollback body *\/  WHERE p.PostTypeId = 2 \/* is an answer *\/ AND ph.PostId = p.Id \/* getting history for the right post *\/ AND ph.PostHistoryTypeId IN (2, 5, 8) AND NOT EXISTS(SELECT * FROM PostHistory AS phtwo WHERE phtwo.PostId = p.Id AND phtwo.PostHistoryTypeId IN (2, 5, 8) AND phtwo.CreationDate > ph.CreationDate) AND p.OwnerUserId = 26369 ORDER BY LENGTH(ph.Text) DESC LIMIT 100","CreationDate":"2017-10-02 4:00:56","validated":true,"QueryBody_Original":"SELECT  Top 100 \n      p.Id AS [Post Link], \n      Len(ph.Text) as [Markdown Length],\n      p.Score as [Score]\nFrom Posts p, PostHistory ph\nWhere p.PostTypeId = 2                     -- is an answer\n      and ph.PostId = p.Id                 -- getting history for the right post\n      and ph.PostHistoryTypeId in (2,5,8)  -- initial body, edit body, rollback body\n      and not exists (                     -- no later revisions of the body\n        SELECT * from PostHistory phtwo\n        Where phtwo.PostId = p.Id\n          and phtwo.PostHistoryTypeId in (2,5,8)\n          and phtwo.CreationDate > ph.CreationDate\n      )\n      and p.OwnerUserId = 26369\nOrder By Len(ph.Text) Desc"},{"QuerySetId":727283,"Title":"Search tag-speified developers in the City","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", Reputation, DisplayName, Location, Tags FROM Users AS u JOIN Posts AS p ON p.ownerUserId = u.id WHERE Location LIKE '%##Location##%' AND tags LIKE '%##tags##%' ORDER BY Reputation DESC","CreationDate":"2017-09-25 19:02:11","validated":true,"QueryBody_Original":"SELECT  u.Id [User Link], Reputation, DisplayName, Location, Tags\nfrom Users u\njoin Posts p on p.ownerUserId=u.id\nwhere Location like '%##Location##%' and tags like '%##tags##%'\norder by Reputation desc"},{"QuerySetId":737145,"Title":"Posts from Jon Skeet that have down votes","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", score, CASE WHEN posttypeid = 1 THEN 'Q' ELSE 'A' END AS \"Q\/A\" FROM posts AS p INNER JOIN votes AS v ON v.postid = p.id WHERE p.owneruserid = 22656 \/* jon skeet *\/ AND v.votetypeid = 3 \/* down votes *\/ ORDER BY score","CreationDate":"2017-11-06 1:17:24","validated":true,"QueryBody_Original":"SELECT  p.id as [Post Link]\n     , score\n     , case when posttypeid = 1 then 'Q' else 'A' end [Q\/A]\nfrom posts p\ninner join votes v on v.postid = p.id\nwhere p.owneruserid = 22656 -- jon skeet\nand v.votetypeid = 3 -- down votes\norder by score"},{"QuerySetId":737727,"Title":"Number of users authored at least one post","Description":null,"QueryBody":"SELECT COUNT(DISTINCT owneruserid) FROM posts","CreationDate":"2019-03-04 22:03:32","validated":true,"QueryBody_Original":"SELECT count(distinct owneruserid) from posts"},{"QuerySetId":738993,"Title":"Find old posts (more than 2 months) without any answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE CreationDate > DATEADD(month, -2, GETDATE()) AND AcceptedAnswerID IS NULL AND PostTypeId = 1 AND AnswerCount = 0","CreationDate":"2017-10-10 22:38:17","validated":true,"QueryBody_Original":"SELECT  Id AS [Post Link], Tags FROM Posts\n  WHERE CreationDate > DATEADD(month, -2, GETDATE())\n    AND AcceptedAnswerID IS NULL\n    AND PostTypeId = 1\n    AND AnswerCount = 0"},{"QuerySetId":739207,"Title":"Answered questions with LaTeX \\newcommand's","Description":null,"QueryBody":"SELECT questions.Id AS \"Post Link\", questions.OwnerUserId AS \"User Link\", questions.CreationDate, COUNT(*) FROM Posts AS questions JOIN Posts AS answers ON answers.ParentID = questions.Id WHERE questions.PostTypeId = 1 \/* questions *\/ AND questions.Body LIKE '%newcommand%' GROUP BY questions.Id, questions.OwnerUserId, questions.CreationDate ORDER BY questions.CreationDate DESC","CreationDate":"2020-04-15 16:50:42","validated":true,"QueryBody_Original":"SELECT \n  questions.Id AS [Post Link],\n  questions.OwnerUserId AS [User Link],\n  questions.CreationDate,\n  COUNT(*)\nFROM Posts questions\nJOIN Posts answers ON answers.ParentID = questions.Id\nWHERE questions.PostTypeId = 1 --questions\n  AND questions.Body LIKE '%newcommand%'\nGROUP BY questions.Id, questions.OwnerUserId, questions.CreationDate\nORDER BY questions.CreationDate DESC"},{"QuerySetId":744219,"Title":"Top SO Users from Poznan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pozna%' OR UPPER(Location) LIKE '%POZNA%' OR Location LIKE '%Pozna%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2017-10-18 16:44:53","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pozna%'\n    OR UPPER(Location) LIKE '%POZNA%'\n    or Location like '%Pozna%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":744548,"Title":"Short ID questions to review","Description":null,"QueryBody":"SELECT score, LENGTH(Body) AS BodyLength, creationDate, id AS \"Post Link\", p.id, ViewCount, LastEditDate FROM posts AS p WHERE tags LIKE '%identify%' AND posttypeid = 1 AND acceptedanswerid IS NULL AND closeddate IS NULL ORDER BY LENGTH(Body), CreationDate","CreationDate":"2017-10-19 19:24:25","validated":true,"QueryBody_Original":"SELECT \n  score, \n  len(Body) as BodyLength,\n  creationDate,\n  id AS [Post Link],\n  p.id,\n  ViewCount,\n  LastEditDate\n  \nfrom posts p\nwhere tags like '%identify%'\n  and posttypeid = 1\n  and acceptedanswerid is null\n  and closeddate is null\norder by len(Body), CreationDate"},{"QuerySetId":745146,"Title":"view all 1000 question titles","Description":null,"QueryBody":"SELECT Title FROM Posts WHERE NOT Title IS NULL ORDER BY score DESC LIMIT 1000","CreationDate":"2017-10-30 15:16:37","validated":true,"QueryBody_Original":"SELECT  top 1000 Title from Posts where Title is not null Order by score Desc"},{"QuerySetId":745178,"Title":"A list of users from Saint Petersburg","Description":null,"QueryBody":"SELECT Id AS \"User Link\" FROM Users WHERE Location LIKE '%\u0421\u0430\u043d\u043a\u0442%' OR Location LIKE '%Saint%'","CreationDate":"2017-10-22 1:08:45","validated":true,"QueryBody_Original":"SELECT  Id [User Link]\nFROM Users\nWHERE Location LIKE '%\u0421\u0430\u043d\u043a\u0442%' OR Location LIKE '%Saint%'"},{"QuerySetId":750867,"Title":"A set of users creating a high number of txtspk questions","Description":null,"QueryBody":"SELECT COUNT(*) AS QuestCount, P.OwnerUserId, U.DisplayName, U.Reputation, U.LastAccessDate FROM Posts AS P INNER JOIN Users AS U ON (P.OwnerUserId = U.Id) WHERE P.ParentId IS NULL AND (P.Body LIKE '%plz%' OR P.Body LIKE '%pls%' OR P.Body LIKE '%thx%' OR P.Body LIKE '%thnx%' OR P.Body LIKE '%smth%' OR P.Body LIKE '%sth%') GROUP BY P.OwnerUserId, U.DisplayName, U.Reputation, U.LastAccessDate HAVING COUNT(*) > 40 ORDER BY COUNT(*) DESC LIMIT 20","CreationDate":"2018-07-02 2:25:12","validated":true,"QueryBody_Original":"SELECT \nTOP 20\nCOUNT(*) QuestCount, P.OwnerUserId, U.DisplayName,\nU.Reputation, U.LastAccessDate FROM\nPosts P\nINNER JOIN Users U ON (P.OwnerUserId = U.Id)\nWHERE\nP.ParentId IS NULL\nAND (\n   P.Body LIKE '%plz%'\n   OR P.Body LIKE '%pls%'\n   OR P.Body LIKE '%thx%'\n   OR P.Body LIKE '%thnx%'\n   OR P.Body LIKE '%smth%'\n   OR P.Body LIKE '%sth%'\n)\nGROUP BY P.OwnerUserId, U.DisplayName, U.Reputation, U.LastAccessDate\nHAVING COUNT(*) > 40\nORDER BY COUNT(*) DESC"},{"QuerySetId":756921,"Title":"SO highest accept rate of answers","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(*) AS NumAnswers, SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) AS NumAccepted, (SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) * 100.0 \/ COUNT(*)) AS AcceptedPercent FROM Posts AS a INNER JOIN Users AS u ON u.Id = a.OwnerUserId INNER JOIN Posts AS q ON a.ParentId = q.Id WHERE (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL) \/* no self answers *\/ GROUP BY u.Id ORDER BY AcceptedPercent DESC, NumAnswers DESC LIMIT 30000","CreationDate":"2017-11-13 6:02:05","validated":true,"QueryBody_Original":"SELECT TOP 30000\n  u.Id AS [User Link],\n  count(*) AS NumAnswers,\n  sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end) AS NumAccepted,\n  (sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end)*100.0\/count(*)) AS AcceptedPercent\nFROM Posts a\nINNER JOIN Users u ON u.Id = a.OwnerUserId\nINNER JOIN Posts q ON a.ParentId = q.Id\nWHERE \n  (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL)   --no self answers\nGROUP BY u.Id\nORDER BY AcceptedPercent DESC, NumAnswers DESC"},{"QuerySetId":771169,"Title":"Users with most reputation from different states","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", Reputation, Location \/* t.tagname, *\/ \/* count(p.id) *\/ FROM Users AS u WHERE LOWER(Location) LIKE LOWER('%##countryname##%') OR LOWER(Location) LIKE LOWER('%##countryname1##%') OR LOWER(Location) LIKE LOWER('%##countryname2##%') ORDER BY Reputation DESC","CreationDate":"2017-12-16 17:27:04","validated":true,"QueryBody_Original":"SELECT  \n    u.Id AS [User Link], \n    Reputation, Location\n    -- t.tagname,\n    --count(p.id)\nFROM Users u\nWHERE LOWER(Location) LIKE LOWER('%##countryname##%')\n   or LOWER(Location) LIKE LOWER('%##countryname1##%')\n   or LOWER(Location) LIKE LOWER('%##countryname2##%')\nORDER BY Reputation DESC;"},{"QuerySetId":771229,"Title":"Bounties per month since 2013","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) AS Month, COUNT(*) AS Bounties FROM Votes WHERE VoteTypeId = 8 AND CreationDate >= '2013-01-01' GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) ORDER BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)","CreationDate":"2017-12-16 21:19:32","validated":true,"QueryBody_Original":"SELECT  DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) AS Month,\n       COUNT(*) as Bounties\nFROM   Votes\nWHERE  VoteTypeId = 8\n  AND  CreationDate >= '2013-01-01'\nGROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\nORDER BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)"},{"QuerySetId":772701,"Title":"Top ten lowest scored answers with OwnerUserID","Description":null,"QueryBody":"SELECT \"Id\" AS \"Post Link\", \"Score\", \"OwnerUserID\" AS \"User Link\" FROM \"Posts\" WHERE \"PostTypeId\" = 2 AND \"Score\" < 0 ORDER BY \"Score\" LIMIT 10","CreationDate":"2017-12-20 1:46:18","validated":true,"QueryBody_Original":"SELECT  top(10) [Id] as [Post Link], [Score], [OwnerUserID] as [User Link] from [Posts]\nwhere [PostTypeId] = 2 and [Score] < 0\norder by [Score]"},{"QuerySetId":774958,"Title":"Unanswered questions with at least one answer having zero score","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score FROM Posts AS p WHERE AnswerCount > 0 AND (SELECT MAX(Score) FROM Posts WHERE ParentId = p.Id) = 0 AND ClosedDate IS NULL AND AcceptedAnswerId IS NULL ORDER BY Score DESC","CreationDate":"2017-12-25 16:11:18","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], Score\nFROM Posts p\nWHERE AnswerCount > 0\nAND \n  (SELECT MAX(Score) FROM Posts\n  WHERE ParentId = p.Id) = 0\nAND ClosedDate IS NULL\nAND AcceptedAnswerId IS NULL\nORDER BY Score DESC"},{"QuerySetId":775289,"Title":"Users in Bangalore ordered according to Rep","Description":null,"QueryBody":"SELECT * FROM Users WHERE LOWER(Location) LIKE '%bangalore%' ORDER BY Reputation DESC","CreationDate":"2018-04-04 12:32:57","validated":true,"QueryBody_Original":"SELECT  * FROM Users\nWHERE LOWER(Location) LIKE '%bangalore%' \nOrder by Reputation DESC;"},{"QuerySetId":775750,"Title":"Top 50 Users by Country Name","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName, Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%') ORDER BY Reputation DESC LIMIT 50","CreationDate":"2017-12-29 12:12:33","validated":true,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    DisplayName,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##CountryName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":776924,"Title":"Questions & Answers with \"Thanks in advance\"","Description":null,"QueryBody":"SELECT p.CreationDate, CASE WHEN (2 = p.PostTypeId) THEN 'Answer' ELSE 'Question' END AS PostType, p.Score, CASE WHEN (2 = p.PostTypeId) THEN t.Title ELSE p.Title END AS QuestionTitle, p.Body, p.Id AS \"Post Link\" FROM Posts AS p LEFT OUTER JOIN Posts AS t ON (p.ParentId = t.Id) WHERE 1 = 1 AND p.CreationDate >= DATEADD(DAY, -10, GETDATE()) AND (UPPER(p.Body) LIKE UPPER('%thanks in advanced%')) ORDER BY p.Score DESC","CreationDate":"2018-04-09 15:53:59","validated":true,"QueryBody_Original":"SELECT  p.CreationDate,\n  CASE WHEN (2 = p.PostTypeId) THEN 'Answer'\n       ELSE                         'Question'\n       END AS PostType,\n  p.Score,\n  CASE WHEN (2 = p.PostTypeId) THEN t.Title\n       ELSE                         p.Title\n       END AS QuestionTitle,\n  p.Body,\n  p.Id as [Post Link]\nFROM Posts p LEFT OUTER JOIN Posts t on (p.ParentId = t.Id)\nWHERE 1=1 AND\n\n-- only needed on Stack Overflow\np.CreationDate >= DATEADD(DAY, -10, GETDATE()) AND\n\n(\n\nUPPER(p.Body) LIKE UPPER('%thanks in advanced%')\n)\n\nORDER BY p.Score DESC"},{"QuerySetId":778537,"Title":"Date of first questions 2017","Description":null,"QueryBody":"SELECT CAST(Posts.CreationDate AS DATE) AS asked, COUNT(1) AS questions FROM (SELECT MIN(Id) AS Id, OwnerUserId FROM Posts GROUP BY OwnerUserId) AS temp, Posts WHERE temp.Id = Posts.Id AND CAST(Posts.CreationDate AS DATE) BETWEEN '01\/01\/2017' AND '01\/01\/2018' AND TIME_TO_STR(CAST(Posts.CreationDate AS DATE), '%W') IN (2, 3, 4, 5, 6) GROUP BY CAST(Posts.CreationDate AS DATE) ORDER BY CAST(Posts.CreationDate AS DATE)","CreationDate":"2018-01-09 22:02:16","validated":true,"QueryBody_Original":"SELECT  CAST(Posts.CreationDate AS DATE) as asked, count(1) as questions\nfrom (\n  SELECT Min(Id) as Id, OwnerUserId\n  from Posts\n  group by OwnerUserId\n) temp, Posts\nwhere temp.Id = Posts.Id\n  and CAST(Posts.CreationDate AS DATE) between '01\/01\/2017' and '01\/01\/2018'\n  and DATEPART(dw,CAST(Posts.CreationDate AS DATE)) in (2, 3, 4, 5, 6)\ngroup by CAST(Posts.CreationDate AS DATE)\norder by CAST(Posts.CreationDate AS DATE)"},{"QuerySetId":778802,"Title":"A list of the top 500 users with the highest average answer score excluding\ncommunity wiki \/ closed posts\n","Description":"A list of the top 500 users with the highest average answer score excluding\ncommunity wiki \/ closed posts or users with less than 10 answers\n","QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Questions, users.reputation AS Reputation, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Question Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, users.reputation, DisplayName ORDER BY \"Average Question Score\" DESC LIMIT 500","CreationDate":"2018-01-08 3:52:28","validated":true,"QueryBody_Original":"SELECT  \n    TOP 500\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Questions, users.reputation as Reputation,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Question Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 1 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, users.reputation, DisplayName\nORDER BY\n    [Average Question Score] DESC"},{"QuerySetId":780208,"Title":"Top Node.js Developers in Warsaw, Poland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Badges.name AS Badge, Badges.Class AS Class, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.TagBased = 1 AND Badges.name = 'node.js' AND LOWER(Users.Location) LIKE LOWER('%Warsaw%') ORDER BY Reputation DESC","CreationDate":"2018-01-09 18:06:12","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Badges.name AS Badge,\n    Badges.Class AS Class,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.TagBased = 1\n    AND Badges.name = 'node.js'\n    AND LOWER(Users.Location) LIKE LOWER('%Warsaw%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":780209,"Title":"Top Frontend Developers in Warsaw, Poland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Badges.name AS Badge, Badges.Class AS Class, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.TagBased = 1 AND Badges.name IN ('angular', 'reactjs', 'frontend', 'vuejs', 'aurelia', 'ember.js', 'html', 'html5') AND LOWER(Users.Location) LIKE LOWER('%Warsaw%') ORDER BY Reputation DESC","CreationDate":"2018-01-10 17:45:21","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Badges.name AS Badge,\n    Badges.Class AS Class,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.TagBased = 1\n    AND Badges.name IN (\n      'angular', 'reactjs', 'frontend',\n      'vuejs', 'aurelia', 'ember.js',\n      'html', 'html5'\n    )\n    AND LOWER(Users.Location) LIKE LOWER('%Warsaw%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":780210,"Title":"Users by number of profile-trackable badges obtained","Description":"Total is 47; currently only Stack Overflow has users on the max.","QueryBody":"SELECT * FROM Badges WHERE Name IN ('Copy Editor', 'Electorate', 'Fanatic', 'Illuminator', 'Legendary', 'Marshal', 'Socratic') OR Name IN ('Archaeologist', 'Civic Duty', 'Deputy', 'Enthusiast', 'Epic', 'Inquisitive', 'Necromancer', 'Refiner', 'Research Assistant', 'Sportsmanship', 'Strunk & White') LIMIT 500","CreationDate":"2018-01-09 18:22:51","validated":true,"QueryBody_Original":"SELECT  TOP 500\n*\nFROM Badges\nWHERE Name IN ('Copy Editor', 'Electorate', 'Fanatic', 'Illuminator', 'Legendary', 'Marshal', 'Socratic')\n   OR Name IN ('Archaeologist', 'Civic Duty', 'Deputy', 'Enthusiast', 'Epic', 'Inquisitive', 'Necromancer', 'Refiner', 'Research Assistant', 'Sportsmanship', 'Strunk & White')"},{"QuerySetId":782706,"Title":"Women (AboutMe contains \"a female\", \"a girl\", \"a woman\", \"a mother\" or \"a mom\")","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, Location, WebsiteUrl, REPLACE(REPLACE(AboutMe, CHAR(13), ''), CHAR(10), '') AS AboutMe FROM Users WHERE AboutMe LIKE '%a female%' OR AboutMe LIKE '%a girl%' OR AboutMe LIKE '%a woman%' OR AboutMe LIKE '%a mom%' OR AboutMe LIKE '%a mother%' ORDER BY Reputation DESC","CreationDate":"2018-08-17 0:27:39","validated":true,"QueryBody_Original":"SELECT  \n  Id [User Link],\n  Reputation, \n  Location,\n  WebsiteUrl,\n  REPLACE(REPLACE(AboutMe, CHAR(13), ''), CHAR(10), '') as AboutMe\n  \nFROM \n  Users\n  \nWHERE \n  AboutMe LIKE '%a female%' \n  OR AboutMe LIKE '%a girl%'\n  OR AboutMe LIKE '%a woman%' \n  OR AboutMe LIKE '%a mom%' \n  OR AboutMe LIKE '%a mother%'\n  \nORDER BY \n  Reputation DESC;"},{"QuerySetId":792107,"Title":"Stack overflow users count for each country","Description":null,"QueryBody":"SELECT * FROM (SELECT COUNT(Id) AS UserCount, Location FROM Users AS u GROUP BY Location) AS K ORDER BY UserCount DESC","CreationDate":"2018-01-26 15:40:04","validated":true,"QueryBody_Original":"SELECT  * FROM\n(\n  SELECT Count(Id) as UserCount , Location\n  FROM Users as u\n  Group By Location\n) as K\nOrder By UserCount Desc"},{"QuerySetId":792681,"Title":"Top SO users by tag and location","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY u.reputation DESC) AS \"#\", u.id AS \"User Link\", u.reputation FROM users AS u JOIN posts AS a ON a.ownerUserId = u.id AND a.postTypeId = 2 JOIN posts AS q ON q.id = a.parentId AND q.tags LIKE LOWER('%##Tag##%') WHERE LOWER(location) LIKE LOWER('%##Location##%') AND reputation >= 1000 GROUP BY u.id, u.reputation ORDER BY u.reputation DESC","CreationDate":"2018-01-27 20:46:45","validated":true,"QueryBody_Original":"SELECT \n  row_number() over (order by u.reputation desc) as [#], \n  u.id as [User Link], \n  u.reputation    \nfrom\n  users u\n  join posts a on a.ownerUserId = u.id and a.postTypeId = 2 \n  join posts q on q.id = a.parentId and q.tags like lower('%##Tag##%')\nwhere  \n  lower(location) like lower('%##Location##%')\n  and reputation >= 1000    \ngroup by\n  u.id, \n  u.reputation\norder by\n  u.reputation desc"},{"QuerySetId":793943,"Title":"Count of Questions with no Answer","Description":null,"QueryBody":"SELECT COUNT(Q.Id) FROM Posts AS Q WHERE Q.AnswerCount = 0 AND Q.PostTypeId = 1","CreationDate":"2018-01-29 23:42:07","validated":true,"QueryBody_Original":"SELECT  count(Q.Id)\nFROM Posts Q\nWHERE Q.AnswerCount = 0 and Q.PostTypeId = 1"},{"QuerySetId":793944,"Title":"Count of Question with no Accepted Answer","Description":null,"QueryBody":"SELECT COUNT(Q.Id) FROM Posts AS Q WHERE Q.AcceptedAnswerId IS NULL AND Q.PostTypeId = 1 AND q.ClosedDate IS NULL","CreationDate":"2018-03-29 16:09:16","validated":true,"QueryBody_Original":"SELECT  count(Q.Id)\nFROM Posts Q\nWHERE Q.AcceptedAnswerId is NULL and Q.PostTypeId = 1 and q.ClosedDate is NULL"},{"QuerySetId":794213,"Title":"Find questions containing given tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags, CreationDate FROM Posts WHERE PostTypeId = 1 AND (Tags LIKE '%<##Tagname?geometry##>%') ORDER BY CreationDate DESC","CreationDate":"2020-02-01 17:21:51","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], Tags, CreationDate\nFROM Posts\nWHERE  PostTypeId = 1  AND (Tags LIKE '%<##Tagname?geometry##>%')\nORDER BY CreationDate DESC"},{"QuerySetId":795496,"Title":"posts of a user that are tagged as apex","Description":null,"QueryBody":"SELECT DISTINCT u.DisplayName, CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.Location, u.AboutMe, u.Reputation FROM users AS u, posts AS q, posts AS a WHERE u.id = a.OwnerUserId AND a.ParentId = q.id AND a.PostTypeId = 2 AND q.tags LIKE '%apex%' AND q.PostTypeId = 1 ORDER BY u.Reputation DESC","CreationDate":"2019-06-26 2:42:03","validated":true,"QueryBody_Original":"SELECT  distinct u.DisplayName,\nCONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link], u.Location, u.AboutMe, u.Reputation\nfrom users u, posts q, posts a\nwhere u.id=a.OwnerUserId\nand a.ParentId=q.id\nand a.PostTypeId=2\nand q.tags like '%apex%'\nand q.PostTypeId=1\norder by u.Reputation desc;"},{"QuerySetId":795612,"Title":"Code golf answers that wouldn't show on the leaderboard","Description":null,"QueryBody":"SELECT Posts.Body, Posts.Id AS \"Post Link\", Users.DisplayName AS \"Poster name\" FROM Posts INNER JOIN Posts AS Question ON Posts.ParentId = Question.Id INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 AND Question.Tags LIKE '%<code-golf>%' AND NOT Posts.Body LIKE '<h_>%'","CreationDate":"2018-02-01 19:59:35","validated":true,"QueryBody_Original":"SELECT  Posts.Body, \nPosts.Id AS [Post Link],\nUsers.DisplayName as 'Poster name'\nfrom Posts\n\n\ninner join Posts as Question on Posts.ParentId = Question.Id\ninner join Users on Posts.OwnerUserId = Users.Id\n\nwhere Posts.PostTypeId = 2\n  and Question.Tags like '%<code-golf>%'\n  and Posts.Body not like '<h_>%'"},{"QuerySetId":795641,"Title":"List of tags and excerpt","Description":null,"QueryBody":"SELECT t.tagName, e.body AS \"Excerpt\", t.count AS \"Number\" FROM tags AS t LEFT JOIN Posts AS e ON t.ExcerptPostId = e.Id ORDER BY t.count DESC","CreationDate":"2018-02-01 19:37:00","validated":true,"QueryBody_Original":"SELECT  \n  t.tagName,\n  e.body as 'Excerpt',\n  t.count as \"Number\"\nfrom tags t\nleft join Posts e\n  on t.ExcerptPostId = e.Id\n\norder by t.count desc"},{"QuerySetId":795961,"Title":"Length of posts over time","Description":null,"QueryBody":"SELECT CAST(creationdate AS DATE), SUM(LENGTH(body)) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2 GROUP BY CAST(creationdate AS DATE) ORDER BY CAST(creationdate AS DATE)","CreationDate":"2018-02-02 9:50:37","validated":true,"QueryBody_Original":"SELECT  CAST(creationdate as DATE),SUM (len(body) )\nFROM Posts\nWHERE PostTypeId =1 OR PostTypeId = 2\nGROUP BY CAST(creationdate as DATE)\nORDER BY  CAST(creationdate as DATE)"},{"QuerySetId":797981,"Title":"questions about Excel or VBA Scraping (by score)","Description":null,"QueryBody":"SELECT id AS \"post link\", score, viewcount, title, creationdate, tags, commentcount FROM posts WHERE posttypeid = 1 AND (tags LIKE '%excel%' OR tags LIKE '%vba%') AND (title LIKE '%scrap%' OR tags LIKE '%scraping%') ORDER BY score DESC","CreationDate":"2018-02-06 11:24:30","validated":true,"QueryBody_Original":"SELECT  id as [post link], score, viewcount, title, creationdate, tags, commentcount\nfrom posts\nwhere \n   posttypeid = 1\n   and (tags like '%excel%' or tags like '%vba%')\n   and (title like '%scrap%' or tags like '%scraping%')\norder by score desc"},{"QuerySetId":800979,"Title":"Amount of votes by top 5 voters","Description":null,"QueryBody":"SELECT SUM(Downvotes), SUM(Upvotes), SUM(Downvotes) \/ CAST(TotalDown AS FLOAT) * 100 AS \"% of downvotes\", SUM(Downvotes) \/ CAST(TotalPosts AS FLOAT) * 100 AS \"% of Posts Downvoted\" FROM (SELECT Users.Downvotes, Users.Upvotes FROM Users ORDER BY Users.Downvotes DESC LIMIT 5) AS T CROSS JOIN (SELECT SUM(Downvotes) AS TotalDown FROM Users WHERE Users.Id <> -1) AS D CROSS JOIN (SELECT SUM(Downvotes) AS TotalUp FROM Users WHERE Users.Id <> -1) AS U CROSS JOIN (SELECT SUM(Downvotes) AS TotalPosts FROM Users WHERE Users.Id <> -1) AS P GROUP BY TotalDown, TotalUp, TotalPosts","CreationDate":"2018-02-09 21:07:57","validated":true,"QueryBody_Original":"SELECT  SUM(Downvotes), SUM(Upvotes),\nSUM(Downvotes)\/CAST(TotalDown As Float)*100 As '% of downvotes',\nSUM(Downvotes)\/CAST(TotalPosts As Float)*100 As '% of Posts Downvoted'\nFROM (\n\nSELECT TOP(5) Users.Downvotes, Users.Upvotes\nFROM Users\nORDER BY Users.Downvotes Desc\n\n\n) AS T\n\n--Grab a total to use for percentage of total downvotes\nCROSS JOIN (\n  SELECT SUM(Downvotes) As TotalDown\n  From Users\n  Where Users.Id != -1\n) As D\n\n--Grab a total to use for percentage of total downvotes\nCROSS JOIN (\n  SELECT SUM(Downvotes) As TotalUp\n  From Users\n  Where Users.Id != -1\n) As U\n\n--Grab a total to use for percentage of total downvotes\nCROSS JOIN (\n  SELECT SUM(Downvotes) As TotalPosts\n  From Users\n  Where Users.Id != -1\n) As P\n\nGROUP BY TotalDown, TotalUp, TotalPosts"},{"QuerySetId":801382,"Title":"Questions about Excel\/VBA Web Scraping","Description":null,"QueryBody":"SELECT id AS \"Post Link\", score, viewcount, title, creationdate, tags, commentcount, LENGTH(body) AS len_body FROM posts WHERE posttypeid = 1 AND (tags LIKE '%excel%' COLLATE SQL_Latin1_General_CP1_CI_AS OR tags LIKE '%vba%' COLLATE SQL_Latin1_General_CP1_CI_AS) AND (tags LIKE '%scraping%' OR title LIKE '%scrape%' COLLATE SQL_Latin1_General_CP1_CI_AS OR body LIKE '%scrape%' COLLATE SQL_Latin1_General_CP1_CI_AS OR title LIKE '%scraping%' COLLATE SQL_Latin1_General_CP1_CI_AS OR body LIKE '%scraping%' COLLATE SQL_Latin1_General_CP1_CI_AS) ORDER BY score DESC, viewcount DESC","CreationDate":"2018-02-18 15:45:09","validated":true,"QueryBody_Original":"SELECT  \n  id as [Post Link], \n  score, \n  viewcount, \n  title, \n  creationdate, \n  tags, \n  commentcount,\n  len(body) as len_body\n  \nfrom \n  posts\n  \nwhere \n   posttypeid = 1\n   and (tags like '%excel%' COLLATE SQL_Latin1_General_CP1_CI_AS \n        or tags like '%vba%' COLLATE SQL_Latin1_General_CP1_CI_AS )\n   and (tags like '%scraping%' \n        or title like '%scrape%' COLLATE SQL_Latin1_General_CP1_CI_AS \n        or body like '%scrape%' COLLATE SQL_Latin1_General_CP1_CI_AS\n        or title like '%scraping%' COLLATE SQL_Latin1_General_CP1_CI_AS \n        or body like '%scraping%' COLLATE SQL_Latin1_General_CP1_CI_AS)\n   --and score>0\n   \norder by \n  score desc, \n  viewcount desc"},{"QuerySetId":802724,"Title":"post with text like \"seems like a list question\"","Description":null,"QueryBody":"\"seems like a list question\"","CreationDate":"2018-02-12 22:42:59","validated":true,"QueryBody_Original":"\"seems like a list question\""},{"QuerySetId":803444,"Title":"500 Longest questions with score and poster rep since 2013-01-01","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", LENGTH(Body) AS Length, Score, UserRep = (SELECT Reputation FROM Users WHERE Id = OwnerUserId) FROM Posts WHERE PostTypeId = 1 AND creationdate > 2013 - 01 - 01 ORDER BY LENGTH(Body) DESC LIMIT 500","CreationDate":"2018-02-13 21:23:26","validated":true,"QueryBody_Original":"SELECT  TOP 500 Id as [Post Link], len(Body) AS Length, Score,\nUserRep = (SELECT Reputation FROM Users WHERE Id = OwnerUserId)\nFROM Posts WHERE PostTypeId=1 AND creationdate > 2013-01-01 ORDER BY len(Body) DESC"},{"QuerySetId":805504,"Title":"Comments from rene regarding get more rep","Description":null,"QueryBody":"SELECT Id, PostId AS \"Post Link\", Text FROM Comments WHERE LOWER(Text) LIKE '%get more rep%' AND UserId = 578411 ORDER BY LENGTH(Text), Id","CreationDate":"2018-02-15 21:47:05","validated":true,"QueryBody_Original":"SELECT  Id, PostId as [Post Link], Text \nfrom Comments\nwhere lower(Text) like '%get more rep%' and UserId = 578411 \norder by len(Text), Id asc"},{"QuerySetId":805507,"Title":"Comments regarding rep","Description":null,"QueryBody":"SELECT Id, PostId AS \"Post Link\", Text FROM Comments WHERE LOWER(Text) LIKE '% rep %' ORDER BY LENGTH(Text), Id","CreationDate":"2018-02-15 21:52:12","validated":true,"QueryBody_Original":"SELECT  Id, PostId as [Post Link], Text \nfrom Comments\nwhere lower(Text) like '% rep %' \norder by len(Text), Id asc"},{"QuerySetId":806441,"Title":"Test - top 20 viewcount","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Tags, OwnerUserId, OwnerDisplayName, ParentId FROM Posts ORDER BY ViewCount DESC LIMIT 20","CreationDate":"2018-02-17 19:28:29","validated":true,"QueryBody_Original":"SELECT  top 20 Id as [Post Link], Score, Tags, OwnerUserId, OwnerDisplayName, ParentId\nfrom Posts\norder by ViewCount desc"},{"QuerySetId":807646,"Title":"Questions per day over time","Description":null,"QueryBody":"SELECT DATEADD(year, DATEDIFF(year, '20120101', CreationDate), '20120101'), COUNT(*) \/ 365.0 AS QpD FROM Posts WHERE PostTypeId = 1 GROUP BY DATEDIFF(year, '20120101', CreationDate) ORDER BY DATEDIFF(year, '20120101', CreationDate)","CreationDate":"2018-02-19 19:17:02","validated":true,"QueryBody_Original":"SELECT  dateadd(year, datediff(year, '20120101', CreationDate), '20120101'),\n       count(*)\/365.0 QpD\nfrom Posts\nwhere PostTypeId = 1\ngroup by datediff(year, '20120101', CreationDate)\norder by datediff(year, '20120101', CreationDate)"},{"QuerySetId":815013,"Title":"Questions closed\/reopen most time with community votes","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COUNT(*) AS Count FROM PostHistory WHERE PostHistoryTypeId IN (10, 11) AND NOT JSON_EXTRACT_SCALAR(Text, '$.Voters[4].Id') IS NULL GROUP BY PostId ORDER BY Count DESC, PostId LIMIT 100","CreationDate":"2018-03-06 16:37:00","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  PostId AS [Post Link],\n  COUNT(*) AS Count\nFROM PostHistory\nWHERE\n  PostHistoryTypeId IN (10, 11)\n  AND\n  JSON_VALUE(Text, '$.Voters[4].Id') IS NOT NULL\nGROUP BY PostId\nORDER BY Count DESC, PostId"},{"QuerySetId":818198,"Title":"barely viewed VBA\/Excel questions over a day old","Description":null,"QueryBody":"SELECT id, id AS \"Post Link\", creationdate, score, viewcount, answercount, commentcount, favoritecount, owneruserid AS \"User Link\", tags FROM posts WHERE DATEDIFF(CURRENT_TIMESTAMP(), creationdate) >= 24 \/* 24hours old *\/ AND viewcount < 10 \/* under 10 views *\/ AND posttypeid = 1 AND YEAR(creationdate) >= YEAR(CURRENT_TIMESTAMP()) - 1 \/* since beginning of last year *\/ AND (tags LIKE '%vba%' OR tags LIKE '%excel%') AND deletiondate IS NULL AND closeddate IS NULL AND acceptedanswerid IS NULL ORDER BY creationdate DESC","CreationDate":"2018-03-11 17:23:14","validated":true,"QueryBody_Original":"SELECT  \n  id,\n  id as [Post Link],\n  creationdate,\n  score,\n  viewcount,\n  answercount,\n  commentcount,\n  favoritecount,\n  owneruserid as [User Link],\n  tags\n\nfrom \n  posts\n\nwhere \n  datediff(hh,creationdate,getdate()) >=24 --24hours old\n  and viewcount <10 --under 10 views\n  and posttypeid = 1\n  and year(creationdate) >= year(getdate())-1 --since beginning of last year\n  and ( tags like '%vba%' or tags like '%excel%' )\n  and deletiondate is null\n  and closeddate is null\n  and acceptedanswerid is null\n \norder by\n  creationdate desc"},{"QuerySetId":818597,"Title":"posts tagged excel or vba","Description":null,"QueryBody":"SELECT COUNT(id) AS num FROM posts WHERE tags LIKE '%vba%' OR tags LIKE '%excel%'","CreationDate":"2018-03-12 2:01:27","validated":true,"QueryBody_Original":"SELECT \n  --tags,\n  count(id) as num\n  \nfrom \n  posts\n\nwhere \n  tags like '%vba%' or tags like '%excel%'\n\n\/*group by\n  tags\n  \norder by\n  count(id) desc*\/"},{"QuerySetId":819124,"Title":"Number of duplicate for specific question","Description":null,"QueryBody":"SELECT COUNT(*) FROM postlinks WHERE linktypeid = 3 \/* duplicate *\/ AND relatedPostid = 218384","CreationDate":"2018-03-14 17:52:04","validated":true,"QueryBody_Original":"SELECT  count(*)\nfrom postlinks\nwhere linktypeid = 3 -- duplicate\nAND relatedPostid = 218384"},{"QuerySetId":820352,"Title":"Most Answered Questions (>= 10)","Description":null,"QueryBody":"SELECT ps.Id, ps.Title, ps.ViewCount, ps.Score FROM Posts AS ps WHERE PostTypeId = 1 \/* 1 = question, 2 = answer *\/ AND ViewCount >= 10 ORDER BY Score DESC","CreationDate":"2018-03-20 15:13:51","validated":true,"QueryBody_Original":"SELECT  ps.Id, ps.Title, ps.ViewCount, ps.Score  \nfrom Posts ps\nwhere PostTypeId = 1 \/* 1 = question, 2 = answer *\/\n  and ViewCount >= 10\norder by Score DESC"},{"QuerySetId":823334,"Title":"VBA Question Answer'ers with the TOP REP","Description":null,"QueryBody":"SELECT u.displayname, u.reputation AS ActualRep, COUNT(a.id) AS NumAnswers, LastAccessDate FROM posts AS q, posts AS a, users AS u WHERE q.tags LIKE '%vba%' AND a.owneruserid = u.id AND a.parentid = q.id GROUP BY u.displayname, u.reputation, LastAccessDate ORDER BY u.reputation DESC","CreationDate":"2018-03-17 5:13:27","validated":true,"QueryBody_Original":"SELECT \n  u.displayname,\n  u.reputation as ActualRep,\n  count(a.id) as NumAnswers,\n  LastAccessDate \n  \nfrom \n  posts q,\n  posts a,\n  users u\n  \nwhere \n  q.tags like '%vba%'\n  and a.owneruserid = u.id\n  and a.parentid = q.id\n  \n\ngroup by\n  u.displayname,\n  u.reputation,\n  LastAccessDate\n  \norder by\n  u.reputation desc"},{"QuerySetId":825243,"Title":"Users who have asked the most unanswered questions (Excluding any User with any Answer))","Description":null,"QueryBody":"SELECT COUNT(*) AS UnansweredCount, OwnerUserId AS \"User Link\" FROM Posts AS p WHERE p.PostTypeId = 1 AND p.AnswerCount = 0 AND NOT p.OwnerUserId IN (SELECT DISTINCT OwnerUserId FROM Posts AS p2 WHERE p2.PostTypeId = 1 AND NOT p2.OwnerUserId IS NULL AND p2.AnswerCount > 0) GROUP BY OwnerUserId ORDER BY UnansweredCount DESC LIMIT 10","CreationDate":"2018-03-19 14:08:42","validated":true,"QueryBody_Original":"SELECT  TOP(10)\n    COUNT(*) AS UnansweredCount,\n    OwnerUserId  as[User Link]\nFROM\n    Posts p\nWHERE\n    p.PostTypeId = 1 AND\n    p.AnswerCount = 0 AND\n    p.OwnerUserId NOT IN (\n        SELECT DISTINCT OwnerUserId\n        FROM Posts p2\n        WHERE\n            p2.PostTypeId = 1 AND\n            p2.OwnerUserId IS NOT NULL AND\n            p2.AnswerCount > 0\n            \n    )\nGROUP BY OwnerUserId\nORDER BY UnansweredCount DESC"},{"QuerySetId":828175,"Title":"Number of Posts by Day","Description":null,"QueryBody":"SELECT CAST(creationdate AS DATE), COUNT(id) AS numPosts FROM posts GROUP BY CAST(creationdate AS DATE) ORDER BY CAST(creationdate AS DATE)","CreationDate":"2018-03-24 5:06:41","validated":true,"QueryBody_Original":"SELECT  \n  convert(date,creationdate), \n  count (id) as numPosts\nfrom posts \n--where year(creationdate) >=2013\ngroup by convert(date,creationdate)\norder by convert(date,creationdate)"},{"QuerySetId":830022,"Title":"Questions posted this year, by day","Description":null,"QueryBody":"SELECT CAST(creationdate AS DATE) AS dt, COUNT(id) AS num, AVG(CAST(score AS FLOAT)) AS AvgScore FROM posts WHERE YEAR(creationdate) >= YEAR(CURRENT_TIMESTAMP()) AND posttypeid = 1 GROUP BY CAST(creationdate AS DATE) ORDER BY CAST(creationdate AS DATE)","CreationDate":"2018-03-31 3:17:13","validated":true,"QueryBody_Original":"SELECT  \n  cast (creationdate as date) as dt, \n  count(id) as num,\n  avg(cast(score as decimal)) as AvgScore\n  \nfrom \n  posts\n  \nwhere\n  year(creationdate)>=year(getdate())\n  and posttypeid = 1\n\ngroup by\n  cast (creationdate as date)\n  \norder by\n  cast (creationdate as date)"},{"QuerySetId":830174,"Title":"Get All Users of Posts for a aws-lambda tag","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id IN (SELECT OwnerUserId FROM Posts WHERE ParentId IN (SELECT Id FROM Posts WHERE Tags LIKE '%aws-lambda%'))","CreationDate":"2018-03-25 13:52:50","validated":true,"QueryBody_Original":"SELECT  * FROM Users WHERE Id IN \n(SELECT OwnerUserId FROM Posts WHERE ParentId IN (\n  SELECT Id FROM Posts WHERE Tags LIKE '%aws-lambda%')\n)"},{"QuerySetId":831178,"Title":"Users with Generalist badge ordered by their reputation","Description":"Users with Generalist badge ordered by their reputation","QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation, b.Date FROM Badges AS b INNER JOIN Users AS u ON u.Id = b.UserId WHERE b.Name = 'Generalist' ORDER BY u.Reputation","CreationDate":"2018-03-31 12:15:22","validated":true,"QueryBody_Original":"SELECT  u.Id as [User Link], u.Reputation, b.Date from Badges b\ninner join Users u on u.Id = b.UserId\nwhere b.Name = 'Generalist'\norder by u.Reputation asc"},{"QuerySetId":832400,"Title":"Percentage of Questions edited by Owner, by Year","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"Year\", COUNT(id) AS \"NumQs\", SUM(CASE WHEN NOT LastEditorUserId IS NULL THEN 1 ELSE 0 END) AS \"Edited\", SUM(CASE WHEN LastEditorUserId = owneruserid THEN 1 ELSE 0 END) AS \"Edit by Owner\", NUMBER_TO_STR(SUM(CASE WHEN LastEditorUserId = owneruserid THEN 1.0 ELSE 0.0 END) \/ SUM(CASE WHEN NOT LastEditorUserId IS NULL THEN 1.0 ELSE 0.0 END), '0.0%') AS \"% Owner Edit\" FROM posts WHERE posttypeid = 1 GROUP BY YEAR(creationdate)","CreationDate":"2018-03-28 22:16:38","validated":true,"QueryBody_Original":"SELECT \n  year(creationdate) as [Year],\n  \n  count(id) [NumQs],\n  \n  sum(case when LastEditorUserId is not null\n   then 1 else 0 end ) as [Edited],\n   \n  sum(case when LastEditorUserId = owneruserid\n   then 1 else 0 end ) as [Edit by Owner],\n   \n  format(sum(case when LastEditorUserId = owneruserid\n   then 1.0 else 0.0 end ) \/ sum(case when LastEditorUserId is not null\n   then 1.0 else 0.0 end ),'0.0%') as [% Owner Edit]\n  \nfrom \n  posts\n\nwhere \n  posttypeid = 1\n \ngroup by \n  year(creationdate)"},{"QuerySetId":834260,"Title":"Popular MongoDB Queries by Score","Description":null,"QueryBody":"SELECT Score, ViewCount, CreationDate, DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) AS \"DaysOpen\", LastActivityDate, Title, Id, tags FROM Posts WHERE Title LIKE '%mongodb%' OR Tags LIKE '%mongodb%' ORDER BY Score DESC","CreationDate":"2018-04-03 22:25:31","validated":true,"QueryBody_Original":"SELECT  Score, ViewCount, CreationDate, DATEDIFF(DAY, CreationDate, GETDATE()) AS \"DaysOpen\", LastActivityDate, Title, Id, tags\nFROM Posts\nWHERE Title LIKE '%mongodb%' or Tags LIKE '%mongodb%'\nORDER BY Score DESC"},{"QuerySetId":834852,"Title":"Comments with Fixed, thank* (bunches of obsolete comments after edits)","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\" FROM Comments AS c WHERE c.Text LIKE '%Fixed, thank%' AND LENGTH(c.Text) < 20 ORDER BY c.CreationDate LIMIT 100","CreationDate":"2018-04-04 23:04:24","validated":true,"QueryBody_Original":"SELECT  TOP 100\n c.Id as [Comment Link]\nfrom Comments c  \nwhere c.Text like '%Fixed, thank%' and len(c.Text) < 20 \norder by c.CreationDate asc;"},{"QuerySetId":834972,"Title":"Finding basic thank you comments (fewer than 50 characters)","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.Text AS \"comment body\", (SELECT COUNT(c.Id) AS \"Comment Link\" FROM Comments AS c WHERE (c.Text LIKE '%fack%' OR c.Text LIKE '%fck%') AND LENGTH(c.Text) < 50) AS \"total comments\" FROM Comments AS c WHERE (c.Text LIKE '%fu%' OR c.Text LIKE '%fuu%') AND LENGTH(c.Text) < 50 ORDER BY c.CreationDate DESC","CreationDate":"2018-04-05 5:06:48","validated":true,"QueryBody_Original":"SELECT  \n c.Id as [Comment Link],\n c.Text as [comment body],\n (SELECT count(c.Id) as [Comment Link] from Comments c  where  \n(c.Text like '%fack%' or c.Text like '%fck%') and len(c.Text) < 50 )\nas [total comments]\nfrom Comments c  \nwhere  (c.Text like '%fu%' or c.Text like '%fuu%') and len(c.Text) < 50 \norder by c.CreationDate desc;"},{"QuerySetId":835058,"Title":"Ever Protected Questions, simple search","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", ph.CreationDate AS \"Protected Date\", CASE ph.UserId WHEN NULL THEN ph.UserDisplayName ELSE ph.UserId END AS \"User Link\" FROM PostHistory AS ph WHERE ph.PostHistoryTypeId = 19 \/* protected *\/ ORDER BY ph.PostId, ph.CreationDate","CreationDate":"2018-04-05 3:27:17","validated":true,"QueryBody_Original":"SELECT \n    ph.PostId           AS [Post Link],\n    ph.CreationDate     AS [Protected Date],\n    CASE ph.UserId\n        WHEN NULL       THEN ph.UserDisplayName\n        ELSE            ph.UserId\n    END AS [User Link]\nFROM        PostHistory ph\nWHERE       ph.PostHistoryTypeId = 19  -- protected\nORDER BY    ph.PostId, ph.CreationDate"},{"QuerySetId":835239,"Title":"Questions and Answers per Day on a Monthly Basis","Description":null,"QueryBody":"SELECT (SUM(pd.Questions) * 1.00 \/ COUNT(pd.Date)) AS \"Questions per Day\", (SUM(pd.Answers) * 1.00 \/ COUNT(pd.Date)) AS \"Answers per Day\", TIME_TO_STR(pd.Date, '%m') AS \"Month\", TIME_TO_STR(pd.Date, '%Y') AS \"Year\" FROM (SELECT SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Questions\", SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Answers\", CAST(p.CreationDate AS DATE) AS \"Date\" FROM Posts AS p WHERE p.ClosedDate IS NULL GROUP BY CAST(p.CreationDate AS DATE)) AS pd GROUP BY TIME_TO_STR(pd.Date, '%Y'), TIME_TO_STR(pd.Date, '%m') ORDER BY TIME_TO_STR(pd.Date, '%Y') DESC, TIME_TO_STR(pd.Date, '%m') DESC","CreationDate":"2018-06-06 11:08:46","validated":true,"QueryBody_Original":"SELECT \n\n(SUM(pd.Questions) * 1.00 \/ COUNT(pd.Date)) AS [Questions per Day],\n(SUM(pd.Answers) * 1.00 \/ COUNT(pd.Date)) AS [Answers per Day],\nDATEPART(month,pd.Date) AS [Month],\nDATEPART(year,pd.Date) AS [Year]\nFROM\n(\n\nSELECT \n\nSUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS [Questions],\nSUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS [Answers],\nCAST(p.CreationDate AS Date) AS [Date]\n\nFROM Posts AS p\nWHERE p.ClosedDate IS NULL\nGROUP BY CAST(p.CreationDate AS Date)\n) AS pd\n\nGROUP BY DATEPART(year,pd.Date),DATEPART(month,pd.Date)\nORDER BY DATEPART(year,pd.Date) DESC,DATEPART(month,pd.Date)DESC"},{"QuerySetId":835349,"Title":"Comments that should be Answers","Description":null,"QueryBody":"SELECT c.CreationDate, c.Id AS \"Comment Link\", c.Score, a.NumberOfAnswers, CASE WHEN (2 = p.PostTypeId) THEN t.Title ELSE p.Title END AS QuestionTitle FROM Comments AS c LEFT OUTER JOIN Posts AS p ON (c.PostId = p.Id) LEFT OUTER JOIN Posts AS t ON (p.ParentId = t.Id) LEFT OUTER JOIN (SELECT ParentId, COUNT(*) AS NumberOfAnswers FROM Posts WHERE PostTypeId = 2 GROUP BY ParentId) AS a ON (c.PostId = a.ParentId) WHERE 1 = p.PostTypeId AND (UPPER(c.Text) LIKE UPPER('%post%as%answer%') OR c.Text IN ('')) ORDER BY c.Id DESC","CreationDate":"2018-04-06 22:27:57","validated":true,"QueryBody_Original":"SELECT  c.CreationDate, c.Id [Comment Link], c.Score, a.NumberOfAnswers,\n  CASE WHEN (2 = p.PostTypeId) THEN t.Title\n       ELSE                         p.Title\n       END AS QuestionTitle\nFROM Comments c\n  LEFT OUTER JOIN Posts p on (c.PostId = p.Id)\n  LEFT OUTER JOIN Posts t on (p.ParentId = t.Id)\n  LEFT OUTER JOIN (\n    SELECT ParentId, Count(*) NumberOfAnswers\n    FROM Posts\n    WHERE PostTypeId = 2\n    GROUP BY ParentId\n    ) a on (c.PostId = a.ParentId)\nWHERE\n1 = p.PostTypeId AND\n(\nUPPER(c.Text) LIKE UPPER('%post%as%answer%')\nOR\nc.Text in ('')) ORDER BY c.Id DESC"},{"QuerySetId":837620,"Title":"AVERAGE SCORE using votes on questions in FIRST 14 DAYS, by year","Description":null,"QueryBody":"SELECT YEAR(p.creationdate), CAST(SUM(CASE WHEN votetypeid = 2 THEN 1 ELSE -1 END) AS FLOAT) \/ COUNT(p.id) AS \"Avgscore\" FROM posts AS p LEFT OUTER JOIN votes AS v ON p.id = v.postid\/* (2=up, 3=down) *\/  WHERE \/* votes within 2 weeks *\/ p.creationdate < DATEADD(dd, 14, GETDATE()) AND \/* votes within 2 weeks *\/ v.creationdate <= DATEADD(dd, 14, p.creationdate) \/* votes within 2 weeks *\/ AND votetypeid IN (2, 3) AND p.posttypeid = 1 GROUP BY YEAR(p.creationdate) ORDER BY YEAR(p.creationdate)","CreationDate":"2019-06-29 3:08:19","validated":true,"QueryBody_Original":"SELECT  \n  --datefromparts(year(p.creationdate),month(p.creationdate),1) as YearMth,\n  year(p.creationdate),\n  cast(sum(case when votetypeid = 2 then 1 else -1 end ) as decimal)\n      \/ count(p.id) as [Avgscore]\n  \nfrom \n  posts p left outer join votes v\n  on p.id = v.postid\n  \nwhere\n--  year(p.creationdate)>=year(getdate())-1  --questions in the last 2 yrs\n--  and \n  p.creationdate<dateadd(dd,14,getdate()) \n  and v.creationdate<=dateadd(dd,14,p.creationdate) --votes within 2 weeks\n  and votetypeid in(2,3) --(2=up, 3=down)\n  and p.posttypeid=1\n  \ngroup by \n  year(p.creationdate)\n\norder by\n  year(p.creationdate)"},{"QuerySetId":839711,"Title":"Top Users from New Delhi","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%New Delhi%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2018-04-15 1:29:32","validated":true,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like '%New Delhi%' \nORDER BY\n   reputation DESC"},{"QuerySetId":841218,"Title":"Question Count answered in month of July, 2017","Description":null,"QueryBody":"SELECT COUNT(Id) AS QuestionAnswered FROM Posts WHERE PostTypeId = 2 AND CreationDate BETWEEN '2017-07-01' AND '2017-07-31'","CreationDate":"2018-04-18 13:16:35","validated":true,"QueryBody_Original":"SELECT  Count(Id) as QuestionAnswered from Posts\n\nwhere \nPostTypeId = 2 and CreationDate between '2017-07-01' and '2017-07-31'"},{"QuerySetId":841253,"Title":"Get total questions answered by a user in July","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE OwnerUserId = 5140781 AND PostTypeId = 2 AND CreationDate BETWEEN '2017-07-01' AND '2017-07-31'","CreationDate":"2018-04-18 12:58:18","validated":true,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts\nWHERE OwnerUserId = 5140781 and PostTypeId = 2 and CreationDate BETWEEN '2017-07-01' and '2017-07-31'"},{"QuerySetId":841945,"Title":"Search SO users from Germantown","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location, AboutMe FROM Users AS DisplayName WHERE Location LIKE '%Germantown%' ORDER BY Reputation DESC","CreationDate":"2018-05-10 20:02:05","validated":true,"QueryBody_Original":"SELECT \n  Id [User Link],\n  Reputation,\n  DisplayName,\n  Location,\n  AboutMe\nFROM Users AS DisplayName \nWHERE Location LIKE '%Germantown%'\nORDER BY Reputation DESC"},{"QuerySetId":843316,"Title":"Stack Overflow Links shared in a specific user's Comments","Description":null,"QueryBody":"SELECT PATINDEX('%\/\/stackoverflow.com\/%', text), RIGHT(text, LENGTH(text) - PATINDEX('%\/\/stackoverflow.com\/%', text) + 1), CASE WHEN NULLIF(STR_POSITION(RIGHT(text, LENGTH(text) - PATINDEX('%\/\/stackoverflow.com\/%', text) + 1), ' '), 0) < NULLIF(STR_POSITION(RIGHT(text, LENGTH(text) - PATINDEX('%\/\/stackoverflow.com\/%', text) + 1), ')'), 0) THEN STR_POSITION(RIGHT(text, LENGTH(text) - PATINDEX('%\/\/stackoverflow.com\/%', text) + 1), ' ') ELSE STR_POSITION(RIGHT(text, LENGTH(text) - PATINDEX('%\/\/stackoverflow.com\/%', text) + 1), ')') END FROM comments WHERE userid = @userid AND text LIKE '%\/\/stackoverflow.com\/%'","CreationDate":"2018-04-22 17:14:24","validated":true,"QueryBody_Original":"SELECT  \n  patindex('%\/\/stackoverflow.com\/%',text),\n  \n  right(text,len(text)-patindex('%\/\/stackoverflow.com\/%',text)+1),\n  \n  case when\n  nullif(charindex(' ',right(text,len(text)-patindex('%\/\/stackoverflow.com\/%',text)+1)),0)<\n  nullif(charindex(')',right(text,len(text)-patindex('%\/\/stackoverflow.com\/%',text)+1)),0)\n  then\n  charindex(' ',right(text,len(text)-patindex('%\/\/stackoverflow.com\/%',text)+1))\n  else\n  charindex(')',right(text,len(text)-patindex('%\/\/stackoverflow.com\/%',text)+1))\n  end\n\n\nfrom\n  comments\n  \nwhere \n  userid = @userid \n  and text like '%\/\/stackoverflow.com\/%'"},{"QuerySetId":843547,"Title":"About Me from all Users","Description":null,"QueryBody":"SELECT Id AS \"Profile Link\", WebsiteUrl AS \"Website\", AboutMe AS \"About Me\" FROM Users","CreationDate":"2018-04-23 13:57:44","validated":true,"QueryBody_Original":"SELECT  Id as [Profile Link], WebsiteUrl as [Website], AboutMe as [About Me] FROM Users;"},{"QuerySetId":844513,"Title":"Total Perl6 users with all tags","Description":null,"QueryBody":"SELECT b.DisplayName AS owner, a.N FROM (SELECT OwnerUserId, COUNT(*) AS N FROM Posts WHERE (Tags LIKE '%perl6%' OR Tags LIKE '%rakudo%' OR (Tags LIKE '%parrot%' AND Tags LIKE '%perl%')) GROUP BY OwnerUserId) AS a, (SELECT Id, DisplayName FROM Users) AS b WHERE a.OwneruserId = b.Id ORDER BY N DESC","CreationDate":"2018-04-25 10:48:08","validated":true,"QueryBody_Original":"SELECT  b.DisplayName as owner, a.N from\n(SELECT OwnerUserId, count(*) as N from Posts where (Tags like '%perl6%' or Tags like '%rakudo%' or (Tags like '%parrot%' and Tags like '%perl%')) group by OwnerUserId) as a,\n(SELECT Id, DisplayName from Users) as b\nwhere a.OwneruserId = b.Id order by N desc;"},{"QuerySetId":844721,"Title":"How many users with 4 questions?","Description":null,"QueryBody":"SELECT COUNT(a.uid) FROM (SELECT OwnerUserId AS uid FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId HAVING COUNT(Id) = 4) AS a","CreationDate":"2018-04-25 20:54:40","validated":true,"QueryBody_Original":"SELECT  count(a.uid) from (\n  SELECT OwnerUserId as uid from Posts\n  where PostTypeId = 1\n  group by OwnerUserId\n  having count(Id) = 4\n) a"},{"QuerySetId":844766,"Title":"Search posts with string after some date","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE CreationDate >= '##datefrom##' AND Body LIKE '%##string##%'","CreationDate":"2018-04-26 1:54:10","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link] from Posts\nwhere CreationDate >= '##datefrom##' \nand Body like '%##string##%'"},{"QuerySetId":845981,"Title":"Top users from Moscow, Russia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%moscow%' OR UPPER(Location) LIKE '%MOSCOW%' OR Location LIKE '%Moscow%' AND Reputation >= 100 ORDER BY Reputation DESC","CreationDate":"2018-04-30 13:29:47","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%moscow%'\n    OR UPPER(Location) LIKE '%MOSCOW%'\n    or Location like '%Moscow%'\n    AND Reputation >= 100\nORDER BY\n    Reputation DESC;"},{"QuerySetId":847017,"Title":"Links to Chip Pearson's site","Description":null,"QueryBody":"SELECT p.Id, p.PostTypeId, p.CreationDate, u.DisplayName, p.Score, p.Tags FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.Body LIKE '%cpearson.com%' ORDER BY p.CreationDate","CreationDate":"2018-05-03 5:48:00","validated":true,"QueryBody_Original":"SELECT  p.Id, p.PostTypeId, p.CreationDate, u.DisplayName, p.Score, p.Tags\nfrom Posts p\ninner join Users u on p.OwnerUserId = u.Id\nwhere p.Body like '%cpearson.com%'\norder by p.CreationDate"},{"QuerySetId":847310,"Title":"Top Comments of all time, site-wide","Description":null,"QueryBody":"SELECT c.score, c.userid AS \"User Link\", c.creationdate, c.postid AS \"Post Link\", c.text AS C_text FROM comments AS c INNER JOIN posts AS p ON p.id = c.postid LEFT OUTER JOIN posts AS pp ON pp.id = p.parentid INNER JOIN users AS u ON c.userid = u.id WHERE c.score >= 50 ORDER BY c.score DESC","CreationDate":"2019-09-25 5:27:48","validated":true,"QueryBody_Original":"SELECT  c.score, c.userid as [User Link], c.creationdate, c.postid as [Post Link]\n  ,c.text as C_text\nfrom comments c\ninner join posts p on p.id = c.postid\nleft outer join posts pp on pp.id = p.parentid\ninner join users u on c.userid = u.id\nwhere c.score >= 50\norder by c.score desc"},{"QuerySetId":849365,"Title":"Top 100 Users from Jaipur","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName, Reputation, Location, WebsiteUrl FROM Users WHERE Location LIKE N'%Jaipur%' LIMIT 100","CreationDate":"2018-06-01 14:10:58","validated":true,"QueryBody_Original":"SELECT  TOP 100\n ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id AS [User Link],\n   DisplayName,\n   Reputation,\n   Location,\n   WebsiteUrl\nFROM\n   Users\nWHERE\n   Location like N'%Jaipur%'"},{"QuerySetId":850068,"Title":"Stack Oveflow users names, reputation and number of posts (main + meta) with main\/meta ratio","Description":null,"QueryBody":"SELECT 'https:\/\/stackoverflow.com\/u\/' + CAST(Main.Id AS TEXT) + '|' + Main.DisplayName, Main.Reputation, Main.Total AS \"# of posts (main)\", Meta.Total AS \"# of posts (meta)\", CASE WHEN Meta.Total = 0 THEN NULL ELSE ROUND(CAST(Main.Total AS FLOAT) \/ Meta.Total, 2) END AS \"Ratio\" FROM (SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS Total FROM \"StackOverflow\".dbo.Users AS u INNER JOIN \"StackOverflow\".dbo.Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id, u.DisplayName, u.Reputation) AS Main INNER JOIN (SELECT u.Id, COUNT(*) AS Total FROM \"StackOverflow.Meta\".dbo.Users AS u INNER JOIN \"StackOverflow.Meta\".dbo.Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id) AS Meta ON Main.Id = Meta.Id ORDER BY Main.Reputation DESC","CreationDate":"2018-05-10 4:27:11","validated":true,"QueryBody_Original":"SELECT  'https:\/\/stackoverflow.com\/u\/' + CAST(Main.Id AS NVARCHAR)\n  + '|' + Main.DisplayName,\n  Main.Reputation,\n  Main.Total AS '# of posts (main)',\n  Meta.Total AS '# of posts (meta)',\n  CASE WHEN Meta.Total = 0 THEN NULL\n       ELSE ROUND(CAST(Main.Total AS FLOAT) \/ Meta.Total, 2) END AS 'Ratio'\n\nFROM\n\n(SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS Total\n  FROM [StackOverflow].dbo.Users AS u\n  INNER JOIN [StackOverflow].dbo.Posts AS p ON u.Id = p.OwnerUserId\n  GROUP BY u.Id, u.DisplayName, u.Reputation) AS Main\n\nINNER JOIN\n\n(SELECT u.Id, COUNT(*) AS Total\n  FROM [StackOverflow.Meta].dbo.Users AS u\n  INNER JOIN [StackOverflow.Meta].dbo.Posts AS p ON u.Id = p.OwnerUserId\n  GROUP BY u.Id) AS Meta\n  \nON Main.Id = Meta.Id\n\nORDER BY Main.Reputation DESC"},{"QuerySetId":851611,"Title":"AWS and IBM topic counts","Description":null,"QueryBody":"SELECT 'AWS' AS Service, COUNT(*) AS Count FROM Posts AS p WHERE p.Tags LIKE '%amazon%' OR p.Tags LIKE '%aws%' UNION ALL (SELECT 'IBM' AS Service, COUNT(*) AS Count FROM Posts AS p WHERE p.Tags LIKE '%ibm-cloud%')","CreationDate":"2018-05-14 17:11:33","validated":true,"QueryBody_Original":"SELECT  'AWS' AS Service, COUNT(*) AS Count\n  FROM Posts p \n  WHERE p.Tags LIKE '%amazon%' OR p.Tags LIKE '%aws%'\nUNION ALL\n(\n  SELECT 'IBM' AS Service, COUNT(*) AS Count\n  FROM Posts p \n  WHERE p.Tags LIKE '%ibm-cloud%'\n)"},{"QuerySetId":853182,"Title":"Questions tagged with mediawiki","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%mediawiki%'","CreationDate":"2018-05-31 4:05:52","validated":true,"QueryBody_Original":"SELECT  *\nFROM Posts\nWHERE PostTypeId = 1\n  AND Tags LIKE '%mediawiki%'"},{"QuerySetId":853427,"Title":"Questions with dependency-injection and dagger-2 tag","Description":null,"QueryBody":"SELECT Id, AcceptedAnswerId, CreationDate FROM Posts WHERE Tags LIKE '%dependency-injection%' AND Tags LIKE '%dagger-2%'","CreationDate":"2018-05-18 23:44:07","validated":true,"QueryBody_Original":"SELECT  Id, AcceptedAnswerId, CreationDate from Posts where Tags like '%dependency-injection%' and Tags like '%dagger-2%';"},{"QuerySetId":855969,"Title":"Search answers by any keyword","Description":null,"QueryBody":"SELECT p.CreationDate, p.Body, p.Id AS \"Post Link\" FROM Posts AS p WHERE p.PostTypeId = 2 AND p.Body LIKE '%##keyword1##%'","CreationDate":"2018-05-25 15:26:16","validated":true,"QueryBody_Original":"SELECT  p.CreationDate, p.Body, p.Id  as [Post Link]\nfrom Posts p\nwhere p.PostTypeId = 2\nand p.Body like '%##keyword1##%'"},{"QuerySetId":856687,"Title":"Users with highest Rep\/Posts ratio","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS \"Total Number of Posts\", u.Reputation \/ COUNT(*) AS Ratio FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.postTypeId IN (1, 2) GROUP BY u.Id, u.DisplayName, u.Reputation ORDER BY Ratio DESC LIMIT 1000","CreationDate":"2018-05-28 14:57:38","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n   u.Id,\n   u.DisplayName,\n   u.Reputation,\n   count(*) as [Total Number of Posts],\n   u.Reputation\/count(*) as Ratio\nFROM Users u\njoin Posts p on p.OwnerUserId = u.Id\nwhere p.postTypeId in (1,2)\ngroup by u.Id,u.DisplayName,u.Reputation\nORDER BY Ratio DESC"},{"QuerySetId":857723,"Title":"Percentage of users with less than 1000 reputation","Description":"Number of Users Under 1000 Reputation","QueryBody":"SELECT (((SELECT CAST(COUNT(*) AS FLOAT) FROM Users WHERE Reputation < 1000) \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM Users)) * 100) AS \"% of users with < 1000 rep.\"","CreationDate":"2018-05-31 16:23:17","validated":true,"QueryBody_Original":"SELECT \n(\n((SELECT CAST(COUNT(*) AS decimal) FROM Users WHERE Reputation < 1000) \/\n(SELECT CAST(COUNT(*) AS decimal) FROM Users)) * 100\n) As \"% of users with < 1000 rep.\""},{"QuerySetId":858107,"Title":"MONTHLY QUESTION AND ANSWER POST COUNT with %Q","Description":"Posts this year grouped by date created UTC, split into: questions, answers, other","QueryBody":"SELECT DATEFROMPARTS(YEAR(creationdate), MONTH(creationdate), 1) AS \"date\", SUM(CASE WHEN posttypeid = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN posttypeid = 2 THEN 1 ELSE 0 END) AS Answers, SUM(CASE WHEN NOT posttypeid IN (1, 2) THEN 1 ELSE 0 END) AS Other, COUNT(*) AS \"TOTAL\", NUMBER_TO_STR(CAST(SUM(CASE WHEN posttypeid = 1 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(*), '0.0%') AS \"Questions%\" FROM posts WHERE YEAR(creationdate) = YEAR(CURRENT_TIMESTAMP()) GROUP BY DATEFROMPARTS(YEAR(creationdate), MONTH(creationdate), 1) ORDER BY DATEFROMPARTS(YEAR(creationdate), MONTH(creationdate), 1)","CreationDate":"2018-06-01 14:05:16","validated":true,"QueryBody_Original":"SELECT  \ndatefromparts(year(creationdate),month(creationdate),1) as [date],\n  sum(case when posttypeid = 1 then 1 else 0 end ) as Questions,\n  sum(case when posttypeid = 2 then 1 else 0 end ) as Answers,\n  sum(case when posttypeid not in (1,2) then 1 else 0 end ) as Other,\n  count(*) as [TOTAL],\n  format(cast(sum(case when posttypeid = 1 then 1 else 0 end ) as decimal) \/ count(*),'0.0%') as [Questions%]\nfrom posts\nwhere year(creationdate) = year(getdate())\ngroup by datefromparts(year(creationdate),month(creationdate),1)\norder by datefromparts(year(creationdate),month(creationdate),1)"},{"QuerySetId":861093,"Title":"Top 5 posts of top 10000 SO users","Description":null,"QueryBody":"SELECT P.* FROM (SELECT Id FROM Users ORDER BY Reputation DESC LIMIT 10000) AS U JOIN LATERAL (SELECT * FROM Posts AS P WHERE P.OwnerUserId = U.Id ORDER BY P.Score DESC LIMIT 5) AS P","CreationDate":"2018-06-12 9:36:08","validated":true,"QueryBody_Original":"SELECT  P.*\nFROM (\n  SELECT TOP(10000) Id\n  FROM Users\n  ORDER BY Reputation DESC\n) AS U\nCROSS APPLY(\n  SELECT TOP(5) *\n  FROM Posts P\n  WHERE P.OwnerUserId = U.Id\n  ORDER BY P.Score DESC\n) AS P"},{"QuerySetId":861606,"Title":"Count answered questions closed between 2^(n-1) and 2^n minutes","Description":null,"QueryBody":"SELECT t.slot AS \"n\", COUNT(*) AS \"# answered questions closed between 2^(n-1) and 2^n minutes\" FROM (SELECT FLOOR(LOG(CAST(ClosedDate - CreationDate AS FLOAT) \/ CAST(CAST('00:01:00' AS DATETIME) AS FLOAT) + 1.0) \/ LOG(2)) AS slot FROM Posts WHERE PostTypeID = 1 AND AnswerCount > 0 AND NOT ClosedDate IS NULL) AS t GROUP BY t.slot ORDER BY t.slot","CreationDate":"2018-06-12 11:35:19","validated":true,"QueryBody_Original":"SELECT  t.slot as 'n',\ncount(*) as '# answered questions closed between 2^(n-1) and 2^n minutes'\nfrom (\n  SELECT floor(log(convert(float, ClosedDate - CreationDate)\n  \/convert(float, convert(datetime,'00:01:00'))+1.0)\/log(2))\n  as slot from Posts\n  where PostTypeID = 1 and AnswerCount > 0\n  and ClosedDate is not null\n) as t\ngroup by t.slot\norder by t.slot asc"},{"QuerySetId":861631,"Title":"Time to closure CDF of answered questions","Description":null,"QueryBody":"SELECT MAX(h.t), h.pc AS \"Percent of closed answered questions over time\" FROM (SELECT q.t AS t, NTILE(100) OVER (ORDER BY q.t) AS pc FROM (SELECT ClosedDate - CreationDate AS t FROM Posts WHERE PostTypeID = 1 AND AnswerCount > 0 AND NOT ClosedDate IS NULL) AS q) AS h WHERE h.t <= '23:59:59' GROUP BY h.pc ORDER BY h.pc","CreationDate":"2018-06-30 21:55:38","validated":true,"QueryBody_Original":"SELECT  max(h.t), h.pc as 'Percent of closed answered questions over time' from (\n  SELECT q.t as t, ntile(100) over (order by q.t) as pc\n  from (\n    SELECT ClosedDate - CreationDate as t\n    from Posts\n    where PostTypeID = 1 and AnswerCount > 0\n    and ClosedDate is not null\n  ) as q\n) as h\nwhere h.t <= '23:59:59'\ngroup by h.pc\norder by h.pc"},{"QuerySetId":862123,"Title":"All questions with pandas and R tag","Description":null,"QueryBody":"SELECT DISTINCT P.Title, P.ViewCount, P.Score, P.AcceptedAnswerId, P.tags, 'http:\/\/stackoverflow.com\/q\/' + CAST(P.Id AS TEXT) AS URL FROM Posts AS P \/* left join PendingFlags PD on PD.PostId = P.Id *\/ WHERE P.Tags LIKE '%<pandas>%' AND P.Tags LIKE '%<r>%' AND P.Score > 0 AND NOT P.AcceptedAnswerId IS NULL","CreationDate":"2018-06-13 20:15:40","validated":true,"QueryBody_Original":"SELECT  distinct\nP.Title, P.ViewCount, P.Score, P.AcceptedAnswerId, P.tags, 'http:\/\/stackoverflow.com\/q\/' + Cast(P.Id as varchar) as URL\nFROM Posts P\n--left join PendingFlags PD on PD.PostId = P.Id\nWHERE \nP.Tags LIKE '%<pandas>%' AND P.Tags LIKE '%<r>%' and\nP.Score > 0 and\nP.AcceptedAnswerId is not null"},{"QuerySetId":862268,"Title":"Number of questions by people with the Informed badge","Description":null,"QueryBody":"SELECT p.OwnerUserId AS Owner, p.Id AS \"post link\", CASE WHEN NOT b.id IS NULL THEN 1 ELSE 0 END AS Informed, CASE WHEN b.id IS NULL THEN 1 ELSE 0 END AS Uninformed, p.Score, p.ViewCount AS Views FROM Posts AS p LEFT OUTER JOIN Badges AS b ON b.userid = p.owneruserid AND b.name = 'Informed' WHERE p.PostTypeId = 1 ORDER BY p.OwnerUserId DESC","CreationDate":"2018-06-14 22:05:42","validated":true,"QueryBody_Original":"SELECT  p.OwnerUserId as Owner, p.Id as [post link], \n       case when b.id is not null then 1 else 0 end as Informed,\n       case when b.id is null then 1 else 0 end as Uninformed,\n       p.Score, p.ViewCount as Views\nfrom Posts as p\nleft outer join Badges b\non\n  b.userid = p.owneruserid\n  and b.name = 'Informed'\nwhere p.PostTypeId = 1\norder by p.OwnerUserId DESC"},{"QuerySetId":864760,"Title":"Users with the highest posts to total rep ratio","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation, COUNT(*) AS \"Total Number of Posts\", COUNT(*) \/ u.Reputation AS Ratio FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.postTypeId IN (1, 2) GROUP BY u.Id, u.DisplayName, u.Reputation ORDER BY Ratio DESC LIMIT 100","CreationDate":"2018-06-20 8:17:01","validated":true,"QueryBody_Original":"SELECT  TOP 100\n   u.Id as [User Link],\n   u.Reputation,\n   count(*) as [Total Number of Posts],\n   count(*)\/u.Reputation as Ratio\nFROM Users u\njoin Posts p on p.OwnerUserId = u.Id\nwhere p.postTypeId in (1,2)\ngroup by u.Id,u.DisplayName,u.Reputation\nORDER BY Ratio DESC"},{"QuerySetId":867566,"Title":"500 unanswered questions with score > 2","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body, Score, ViewCount FROM Posts WHERE Score > 2 AND ParentId IS NULL AND AcceptedAnswerId IS NULL ORDER BY ViewCount LIMIT 500","CreationDate":"2018-06-27 4:45:50","validated":true,"QueryBody_Original":"SELECT  top 500 Id as [Post Link], Body, Score, ViewCount from Posts \nwhere Score > 2 and ParentId is null and AcceptedAnswerId is null\norder by ViewCount asc"},{"QuerySetId":869988,"Title":"Questions and Answers per Month and Tag Name","Description":null,"QueryBody":"SELECT \"Month\", SUM(CASE WHEN 0 < 1 THEN 1 ELSE 0 END) AS All_Questions, SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS Questions_with_Answers FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", AnswerCount FROM Posts AS p WHERE (ClosedDate IS NULL) AND (PostTypeId = 1) AND (Tags LIKE '%##tagname##%')) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2020-06-20 4:23:25","validated":true,"QueryBody_Original":"SELECT  [Month], \n  sum(case when 0 < 1 then 1 else 0 end) All_Questions,\n  sum(case when AnswerCount > 0 then 1 else 0 end) Questions_with_Answers\nFROM (\n  SELECT cast(cast(DATEPART(YYYY, CreationDate) AS varchar) + '-' + cast(datepart(MM, CreationDate) AS varchar) + '-01' AS datetime) [Month],\n    AnswerCount\n  FROM Posts p\n  WHERE (ClosedDate IS NULL) AND\n    (PostTypeId = 1) AND\n    (Tags LIKE '%##tagname##%')\n) AS X\nGROUP BY [Month]\nORDER BY [Month] ASC"},{"QuerySetId":871939,"Title":"VBA & Excel tag badges","Description":"This one may be better: https:\/\/data.stackexchange.com\/stackoverflow\/query\/869444\/how-would-removing-tagexcel-vba-affect-excel-and-vba-tag-badges","QueryBody":"SELECT date, userid, userid AS \"User Link\", name, class FROM badges WHERE tagbased = 'true' AND (name LIKE '%vba%' OR name LIKE '%excel%') ORDER BY userid, date","CreationDate":"2018-07-09 19:45:39","validated":true,"QueryBody_Original":"SELECT  \n  date,\n  userid,\n  userid as [User Link],\n  name,\n  class\n\nfrom badges\nwhere tagbased = 'true'\n  and (name like '%vba%' or name like '%excel%' )\norder by userid, date"},{"QuerySetId":875403,"Title":"Users with most unique badges","Description":"Most decorated users\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rank, UserId AS \"User Link\", COUNT(DISTINCT Name) AS badges FROM Badges WHERE TagBased <> 0 GROUP BY UserId ORDER BY Badges DESC LIMIT 500","CreationDate":"2020-03-15 20:46:29","validated":true,"QueryBody_Original":"SELECT  TOP 500 row_number() over(order by count(*) desc) as rank, \n  UserId AS [User Link], count(DISTINCT Name) AS badges\nFROM Badges WHERE TagBased <> 0\nGROUP BY UserId\nORDER BY Badges DESC"},{"QuerySetId":880233,"Title":"Questions counted by time to first answer","Description":null,"QueryBody":"SELECT LOG(DATEDIFF(a.CreationDate, q.CreationDate), 10) AS \"Log Time (m)\", LOG(COUNT(*), 10) FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id LEFT OUTER JOIN Posts AS a2 \/* earlier answer, should not exist *\/ ON a.ParentId = a2.ParentId AND a.CreationDate > a2.CreationDate\/*    AND DATEDIFF(HOUR, q.CreationDate, a.CreationDate) < 24 *\/ \/* AND COUNT(*) > 0 *\/  WHERE a2.Id IS NULL AND a.CreationDate >= q.CreationDate \/* negative values can happen due to question merges *\/ AND DATEDIFF(a.CreationDate, q.CreationDate) > 0 GROUP BY DATEDIFF(a.CreationDate, q.CreationDate) ORDER BY DATEDIFF(a.CreationDate, q.CreationDate)","CreationDate":"2018-07-28 14:41:26","validated":true,"QueryBody_Original":"SELECT  LOG(DATEDIFF(MINUTE, q.CreationDate, a.CreationDate), 10) AS 'Log Time (m)',\n  LOG(COUNT(*), 10)\n  FROM Posts AS q\n  INNER JOIN Posts AS a\n    ON a.ParentId = q.Id\n  LEFT OUTER JOIN Posts AS a2 -- earlier answer, should not exist\n    ON a.ParentId = a2.ParentId\n   AND a.CreationDate > a2.CreationDate\n  WHERE a2.Id IS NULL\n    AND a.CreationDate >= q.CreationDate -- negative values can happen due to question merges\n    --    AND DATEDIFF(HOUR, q.CreationDate, a.CreationDate) < 24\n    -- AND COUNT(*) > 0\n    AND DATEDIFF(MINUTE, q.CreationDate, a.CreationDate) > 0\n  GROUP BY DATEDIFF(MINUTE, q.CreationDate, a.CreationDate)\n  ORDER BY DATEDIFF(MINUTE, q.CreationDate, a.CreationDate)"},{"QuerySetId":880245,"Title":"Top SO users from Taiwan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS Link, DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%taiwan%' OR UPPER(Location) LIKE '%Taiwan%' OR Location LIKE '%\u53f0\u7063%') ORDER BY Reputation DESC LIMIT 50","CreationDate":"2020-11-28 18:19:28","validated":true,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS Link, \n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%taiwan%' OR \n    UPPER(Location) LIKE '%Taiwan%' OR Location LIKE '%\u53f0\u7063%' )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":884132,"Title":"Most reputation users from Sri Lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%sri lanka%' ORDER BY Reputation DESC","CreationDate":"2018-08-07 22:41:24","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%sri lanka%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":887338,"Title":"Comments under 15 characters long","Description":"\"uhhh, how the...?\"","QueryBody":"SELECT LENGTH(text) AS Length, id AS \"Comment Link\", userid AS \"User Link\", postid AS \"Post Link\", TIME_TO_STR(creationdate, '%b %-d, %Y %H:%m') AS \"Date\", Score FROM comments WHERE LENGTH(text) < 15 ORDER BY LENGTH(text)","CreationDate":"2018-08-16 10:07:37","validated":true,"QueryBody_Original":"SELECT  \n  len(text) as Length, \n  id as [Comment Link], \n  userid as [User Link], \n  postid as [Post Link], \n  format(creationdate,'MMM d, yyyy HH:MM') as [Date], \n  Score\nfrom comments \nwhere len(text)<15 \norder by len(text)"},{"QuerySetId":887468,"Title":"\"very much\" questions","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\" FROM Comments AS c WHERE c.Text LIKE '%very much%' ORDER BY c.CreationDate","CreationDate":"2019-06-29 16:02:05","validated":true,"QueryBody_Original":"SELECT \nc.Id as [Comment Link]\nfrom Comments c  \nwhere c.Text like '%very much%'\norder by c.CreationDate asc;"},{"QuerySetId":888075,"Title":"Post CreationDate is not unique","Description":null,"QueryBody":"SELECT p.Id AS \"A Id\", twn.Id AS \"B Id\", p.CreationDate, p.PostTypeId AS \"A Type\", twn.PostTypeId AS \"B Type\", p.Tags AS \"A Tags\", twn.Tags AS \"B Tags\", p.Title AS \"A Title\", twn.Title AS \"B Title\" FROM posts AS p INNER JOIN posts AS twn ON (p.CreationDate = twn.CreationDate AND p.Id < twn.Id) ORDER BY p.CreationDate, p.Id, twn.Id LIMIT 20000","CreationDate":"2018-08-17 21:40:21","validated":true,"QueryBody_Original":"SELECT       TOP 20000\n            p.Id                AS [A Id]\n            , twn.Id            AS [B Id]\n            , p.CreationDate\n            , p.PostTypeId      AS [A Type]\n            , twn.PostTypeId    AS [B Type]\n            , p.Tags            AS [A Tags]\n            , twn.Tags          AS [B Tags]\n            , p.Title           AS [A Title]\n            , twn.Title         AS [B Title]\nFROM        posts p\nINNER JOIN  posts twn\nON          (p.CreationDate = twn.CreationDate  AND  p.Id < twn.Id)\nORDER BY    p.CreationDate\n            , p.Id\n            , twn.Id"},{"QuerySetId":888598,"Title":"Posts about 18.04 closed as off topic before release","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Score AS Score, q.AnswerCount AS Answers, q.ViewCount AS Views, q.Tags AS Tags FROM Posts AS q JOIN PostHistory AS ph ON ph.PostId = q.Id WHERE q.PostTypeId = 1 AND q.Body LIKE '%18.04%' AND q.CreationDate > '2018-01-01' AND q.CreationDate < '2018-05-01' AND NOT q.ClosedDate IS NULL AND ph.Comment LIKE '102' ORDER BY q.CreationDate","CreationDate":"2018-08-20 11:47:54","validated":true,"QueryBody_Original":"SELECT  q.Id AS [Post Link],\n       q.Score AS Score,\n       q.AnswerCount AS Answers,\n       q.ViewCount AS Views,\n       q.Tags AS Tags\n       \nFROM Posts q\n\nJOIN PostHistory ph ON ph.PostId = q.Id\n\nWHERE q.PostTypeId = 1\n      AND q.Body LIKE '%18.04%'\n      AND q.CreationDate > '2018-01-01'\n      AND q.CreationDate < '2018-05-01'\n      AND q.ClosedDate IS NOT NULL\n      AND ph.Comment LIKE '102'\n      \nORDER BY q.CreationDate ASC"},{"QuerySetId":889151,"Title":"Search for gold badge holders in Python tag","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", b.Name FROM Users AS u INNER JOIN Badges AS b ON b.UserId = u.Id WHERE b.Class = 1 AND b.Name = 'python' GROUP BY u.Id, b.Name","CreationDate":"2018-08-21 20:27:21","validated":true,"QueryBody_Original":"SELECT  u.Id AS [User Link], b.Name\n  FROM Users AS u\n  INNER JOIN Badges AS b\n    ON b.UserId = u.Id\n  WHERE b.Class = 1 AND b.Name = 'python'\n  GROUP BY u.Id, b.Name"},{"QuerySetId":889471,"Title":"Top users by bounties","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", SUM(bountyamount) FROM votes WHERE NOT bountyamount IS NULL AND votetypeid = 8 GROUP BY UserId ORDER BY SUM(bountyamount) DESC","CreationDate":"2018-08-22 17:15:08","validated":true,"QueryBody_Original":"SELECT  UserId as [User Link], sum(bountyamount)\n\nfrom votes \n\nwhere bountyamount is not null and votetypeid = 8\n\ngroup by UserId\n\norder by sum(bountyamount) desc;"},{"QuerySetId":889473,"Title":"Top users by bounties","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", SUM(bountyamount) FROM votes WHERE NOT bountyamount IS NULL GROUP BY UserId ORDER BY SUM(bountyamount) DESC","CreationDate":"2018-08-22 17:17:51","validated":true,"QueryBody_Original":"SELECT  UserId as [User Link], sum(bountyamount)\n\nfrom votes \n\nwhere bountyamount is not null\n\ngroup by UserId\n\norder by sum(bountyamount) desc;"},{"QuerySetId":890535,"Title":"Number of posts by certain moderators","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(p.Id) FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id GROUP BY u.Id ORDER BY u.Id","CreationDate":"2018-08-25 14:22:37","validated":true,"QueryBody_Original":"SELECT  \n  u.Id AS [User Link], COUNT(p.Id)\nFROM Users u INNER JOIN Posts p ON p.OwnerUserId=u.Id\nGROUP BY u.Id\nORDER BY u.Id ASC"},{"QuerySetId":891746,"Title":"Percentage of questions in a given tag per week","Description":null,"QueryBody":"SELECT number = ROW_NUMBER() OVER (ORDER BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W')), (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tagname##>%') THEN 1 ELSE 0 END) AS FLOAT) * 100 \/ COUNT(Posts.Id)) AS \"Perc\" FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W') ORDER BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W')","CreationDate":"2018-08-28 21:24:48","validated":true,"QueryBody_Original":"SELECT \n  number = ROW_NUMBER() OVER (ORDER BY Year(CreationDate), DatePart(week,CreationDate) ASC),\n  (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tagname##>%') THEN 1 ELSE 0 END) as float)*100\/COUNT(Posts.Id)) AS [Perc]\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY Year(CreationDate), DatePart(week,CreationDate)\nORDER BY Year(CreationDate), DatePart(week,CreationDate) ASC"},{"QuerySetId":892082,"Title":"Most Viewed Questions by Tag","Description":null,"QueryBody":"SELECT Id AS \"Post ID\", Title AS \"Post\", AnswerCount, ViewCount FROM Posts WHERE PostTypeId = 1 ORDER BY ViewCount DESC LIMIT 2000","CreationDate":"2018-11-23 12:51:06","validated":true,"QueryBody_Original":"SELECT  TOP 2000\nId \nAS [Post ID],\nTitle \nAS [Post],\nAnswerCount, \nViewCount\nFROM Posts\nWHERE PostTypeId = 1\nORDER BY ViewCount DESC"},{"QuerySetId":892104,"Title":"Days with at least one post by MathOverflow moderators","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE) FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE u.Id IN (2, 3, 66, 121, 1409, 2000, 2926) GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE) DESC","CreationDate":"2018-08-29 15:52:13","validated":true,"QueryBody_Original":"SELECT \n  CAST(p.CreationDate as Date)\nFROM Users u INNER JOIN Posts p ON p.OwnerUserId=u.Id\nWHERE u.Id IN (2,3,66,121,1409,2000,2926)\nGROUP by CAST(p.CreationDate as Date)\nORDER by CAST(p.CreationDate as Date) DESC"},{"QuerySetId":893579,"Title":"Percentage of questions with tags probability or statistics per week","Description":null,"QueryBody":"SELECT number = ROW_NUMBER() OVER (ORDER BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W')), (CAST(SUM(CASE WHEN ((Tags LIKE '%<probability>%') OR (Tags LIKE '%<statistics>%')) THEN 1 ELSE 0 END) AS FLOAT) * 100 \/ COUNT(Posts.Id)) AS \"Perc\" FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W') ORDER BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W')","CreationDate":"2018-09-01 20:31:39","validated":true,"QueryBody_Original":"SELECT \n  number = ROW_NUMBER() OVER (ORDER BY Year(CreationDate), DatePart(week,CreationDate) ASC),\n  (CAST(SUM(CASE WHEN ((Tags LIKE '%<probability>%') OR (Tags LIKE '%<statistics>%')) THEN 1 ELSE 0 END) as float)*100\/COUNT(Posts.Id)) AS [Perc]\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY Year(CreationDate), DatePart(week,CreationDate)\nORDER BY Year(CreationDate), DatePart(week,CreationDate) ASC"},{"QuerySetId":893581,"Title":"Percentage of questions in given two tags per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(creationdate), (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tag1##>%') THEN 1 ELSE 0 END) AS FLOAT) * 100 \/ COUNT(Posts.Id)) AS \"Perc1\", (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tag2##>%') THEN 1 ELSE 0 END) AS FLOAT) * 100 \/ COUNT(Posts.Id)) AS \"Perc2\" FROM Posts WHERE (PostTypeId = 1) GROUP BY LAST_DATE_OF_MONTH(creationdate) ORDER BY LAST_DATE_OF_MONTH(creationdate)","CreationDate":"2018-09-01 23:45:14","validated":true,"QueryBody_Original":"SELECT\n  eomonth(creationdate),\n  (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tag1##>%') THEN 1 ELSE 0 END) as float)*100\/COUNT(Posts.Id)) AS [Perc1],\n  (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tag2##>%') THEN 1 ELSE 0 END) as float)*100\/COUNT(Posts.Id)) AS [Perc2]\n  FROM Posts WHERE (PostTypeId=1)\nGROUP BY eomonth(creationdate)\nORDER BY eomonth(creationdate) ASC"},{"QuerySetId":894415,"Title":"Average reputation gain per day from old posts","Description":null,"QueryBody":"SELECT temp.Average, u.Id AS \"User Link\", u.Reputation FROM (SELECT SUM(CASE p.PostTypeId WHEN 1 THEN 5 WHEN 2 THEN 10 ELSE 0 END) \/ 31.0 AS \"Average\", p.OwnerUserId FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id WHERE v.VoteTypeId = 2 AND p.CreationDate < '2018-01-01' \/* random cutoff date *\/ AND v.CreationDate BETWEEN '2018-07-01' AND '2018-07-31' AND p.CommunityOwnedDate IS NULL AND NOT p.OwnerUserId IS NULL GROUP BY p.OwnerUserId ORDER BY SUM(CASE p.PostTypeId WHEN 1 THEN 5 WHEN 2 THEN 10 ELSE 0 END) DESC LIMIT 100) AS temp INNER JOIN Users AS u ON temp.OwnerUserId = u.Id","CreationDate":"2018-09-04 21:28:43","validated":true,"QueryBody_Original":"SELECT  temp.Average, u.Id AS [User Link], u.Reputation\nFROM\n(\nSELECT TOP 100 SUM(CASE p.PostTypeId WHEN 1 THEN 5 WHEN 2 THEN 10 ELSE 0 END) \/ 31.0 AS 'Average',\n  p.OwnerUserId\n  FROM Votes AS v\n  INNER JOIN Posts AS p ON v.PostId = p.Id\n  WHERE v.VoteTypeId = 2 \n    AND p.CreationDate < '2018-01-01' -- random cutoff date\n    AND v.CreationDate BETWEEN '2018-07-01' AND '2018-07-31'\n    AND p.CommunityOwnedDate IS NULL\n    AND p.OwnerUserId IS NOT NULL\n  GROUP BY p.OwnerUserId\n  ORDER BY SUM(CASE p.PostTypeId WHEN 1 THEN 5 WHEN 2 THEN 10 ELSE 0 END) DESC\n) AS temp\nINNER JOIN Users AS u ON temp.OwnerUserId = u.Id"},{"QuerySetId":894618,"Title":"Off-topic' comments on migrated questions","Description":null,"QueryBody":"SELECT c.creationdate, h.creationdate AS \"Migration date\", c.id AS \"Comment Link\", c.postid AS \"Post Link\" FROM posthistory AS h INNER JOIN comments AS c ON c.postid = h.postid AND h.posthistorytypeid = 36 \/* Post Migrated Here *\/ AND h.creationdate > c.creationdate INNER JOIN posts AS p ON c.postid = p.id AND p.posttypeid = 1 \/* Question *\/ WHERE c.text LIKE '%off-topic%' ORDER BY c.creationdate DESC","CreationDate":"2018-10-04 17:14:36","validated":true,"QueryBody_Original":"SELECT  \n  c.creationdate,\n  h.creationdate AS 'Migration date',\n  c.id as [Comment Link], \n  c.postid as [Post Link]\nFROM posthistory AS h\nINNER JOIN comments AS c\n  ON c.postid = h.postid\n AND h.posthistorytypeid = 36 -- Post Migrated Here\n AND h.creationdate > c.creationdate\nINNER JOIN posts AS p\n  ON c.postid = p.id\n AND p.posttypeid = 1 -- Question\nWHERE c.text like '%off-topic%'\nORDER BY c.creationdate DESC"},{"QuerySetId":894931,"Title":"Find a comment about the Good Work","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.Text AS te FROM Comments AS c WHERE c.Text LIKE '%BOUNTY%' OR c.Text LIKE '%AWARD%' OR c.Text LIKE '%REP%' ORDER BY c.CreationDate","CreationDate":"2018-10-12 0:35:29","validated":true,"QueryBody_Original":"SELECT  \nc.Id AS [Comment Link], \nc.Text AS te\nFROM Comments AS c\nWHERE c.Text LIKE '%BOUNTY%' \nOR c.Text LIKE '%AWARD%' \nOR c.Text LIKE '%REP%'\nORDER BY c.CreationDate;"},{"QuerySetId":897887,"Title":"Top 100 Posts by score","Description":null,"QueryBody":"SELECT p.PostTypeId, p.Id, p.ParentId, p.title, p.Body, p.Tags, p.OwnerUserId, u.DisplayName, u.AboutMe, u.ProfileImageUrl, u.Reputation, u.WebsiteUrl, u.Location, u.CreationDate, u.LastAccessDate FROM Posts AS p LEFT JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 ORDER BY Score DESC LIMIT 100","CreationDate":"2018-09-18 2:40:18","validated":true,"QueryBody_Original":"SELECT  top 100 p.PostTypeId, p.Id, p.ParentId, p.title, p.Body, p.Tags,\np.OwnerUserId, \nu.DisplayName, u.AboutMe, u.ProfileImageUrl, \nu.Reputation, u.WebsiteUrl, \nu.Location, u.CreationDate, u.LastAccessDate\nfrom Posts p\nleft join Users u on p.OwnerUserId = u.Id\nwhere p.PostTypeId = 1\norder by Score desc"},{"QuerySetId":899223,"Title":"Users who've added a status tag to a post on Meta","Description":null,"QueryBody":"SELECT COUNT(PostId) AS \"Count\", UserId AS \"User Link\" FROM PostHistory WHERE UserId <> -1 AND PostHistoryTypeId = 6 AND Text LIKE '%status-%' GROUP BY UserID ORDER BY COUNT(PostId) DESC","CreationDate":"2019-07-21 19:52:15","validated":true,"QueryBody_Original":"SELECT  Count(PostId) as [Count], UserId as [User Link] from PostHistory \nwhere UserId != -1 AND PostHistoryTypeId = 6 AND Text LIKE '%status-%' GROUP BY UserID \nORDER BY Count(PostId) DESC;"},{"QuerySetId":900322,"Title":"Positive scored questions without answers for c++ tags","Description":null,"QueryBody":"SELECT id AS \"Post Link\", * FROM posts WHERE answercount = 0 AND tags LIKE '%c++%' AND score > 0 AND ClosedDate IS NULL ORDER BY score DESC","CreationDate":"2018-09-20 8:33:41","validated":true,"QueryBody_Original":"SELECT  id as \"Post Link\",* from posts\nwhere answercount=0 and tags like '%c++%' and score > 0 and ClosedDate is null\norder by score desc"},{"QuerySetId":900948,"Title":"Users with the most Necromancer badges","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\", COUNT(B.Id) AS NumBadges FROM Badges AS B INNER JOIN Users AS U ON U.Id = B.UserId WHERE B.Name = 'Necromancer' GROUP BY U.Id, U.DisplayName HAVING COUNT(B.Id) >= 5 ORDER BY NumBadges DESC","CreationDate":"2019-08-18 3:56:36","validated":true,"QueryBody_Original":"SELECT  U.Id as [User Link], count(B.Id) as NumBadges\nfrom Badges B\ninner join Users U on U.Id = B.UserId\nwhere B.Name = 'Necromancer'\ngroup by U.Id, U.DisplayName\nhaving count(B.Id) >= 5\norder by NumBadges desc"},{"QuerySetId":901357,"Title":"Registered users per month and year","Description":null,"QueryBody":"SELECT TIME_TO_STR(u.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(u.CreationDate, '%m') AS \"Month\", COUNT(*) AS \"Registered Users Count\" FROM Users AS u GROUP BY TIME_TO_STR(u.CreationDate, '%Y'), TIME_TO_STR(u.CreationDate, '%m') ORDER BY \"Year\", \"Month\"","CreationDate":"2018-09-23 22:17:32","validated":true,"QueryBody_Original":"SELECT  datepart(year, u.CreationDate) as [Year],\n  datepart(month, u.CreationDate) as [Month],\n  count(*) as [Registered Users Count]\nfrom Users u\ngroup by datepart(year, u.CreationDate),\n  datepart(month, u.CreationDate)\norder by [Year], [Month]"},{"QuerySetId":902247,"Title":"Users by rep on closed questions","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(DISTINCT ClosedQuestions.Id) AS \"Closed Answers\" FROM Users INNER JOIN Posts AS ClosedAnswers ON ClosedAnswers.OwnerUserId = Users.Id INNER JOIN Posts AS ClosedQuestions ON ClosedQuestions.id = ClosedAnswers.ParentId WHERE AllAnswers.PostTypeId = 2 AND AllAnswers.CommunityOwnedDate IS NULL AND ClosedAnswers.PostTypeId = 2 AND ClosedAnswers.CommunityOwnedDate IS NULL AND ClosedQuestions.PostTypeId = 1 AND NOT ClosedQuestions.ClosedDate IS NULL GROUP BY Users.Id ORDER BY \"Closed Answers\" DESC LIMIT 500","CreationDate":"2018-09-26 3:07:18","validated":true,"QueryBody_Original":"SELECT\n TOP 500\n    Users.Id AS [User Link],\n    Count(DISTINCT ClosedQuestions.Id) as [Closed Answers]\nFROM\n Users \n INNER JOIN Posts as ClosedAnswers\n    ON ClosedAnswers.OwnerUserId = Users.Id\n INNER JOIN Posts as ClosedQuestions\n    ON ClosedQuestions.id = ClosedAnswers.ParentId\nWHERE \n AllAnswers.PostTypeId = 2\n AND AllAnswers.CommunityOwnedDate is null\n AND ClosedAnswers.PostTypeId = 2\n AND ClosedAnswers.CommunityOwnedDate is null\n AND ClosedQuestions.PostTypeId = 1\n AND ClosedQuestions.ClosedDate is not null\n\nGROUP BY Users.Id\nORDER BY  [Closed Answers] DESC;\n"},{"QuerySetId":904169,"Title":"Bounties: on own questions vs. others' questions","Description":null,"QueryBody":"SELECT SUM(CASE v.UserId WHEN p.OwnerUserId THEN 1 ELSE 0 END) AS \"Own\", 100 * SUM(CASE v.UserId WHEN p.OwnerUserId THEN 1 ELSE 0 END) \/ COUNT(*) AS \"%\", SUM(CASE v.UserId WHEN p.OwnerUserId THEN 0 ELSE 1 END) AS \"Other\", 100 * SUM(CASE v.UserId WHEN p.OwnerUserId THEN 0 ELSE 1 END) \/ COUNT(*) AS \"%\" FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id WHERE v.VoteTypeId = 8 \/* BountyStart *\/","CreationDate":"2018-09-29 11:46:33","validated":true,"QueryBody_Original":"SELECT \n  SUM(CASE v.UserId WHEN p.OwnerUserId THEN 1 ELSE 0 END) AS 'Own',\n  100 * SUM(CASE v.UserId WHEN p.OwnerUserId THEN 1 ELSE 0 END) \/ COUNT(*) AS '%',\n  SUM(CASE v.UserId WHEN p.OwnerUserId THEN 0 ELSE 1 END) AS 'Other',\n  100 * SUM(CASE v.UserId WHEN p.OwnerUserId THEN 0 ELSE 1 END) \/ COUNT(*) AS '%'\n  FROM Votes AS v\n  INNER JOIN Posts AS p ON v.PostId = p.Id\n  WHERE v.VoteTypeId = 8 -- BountyStart"},{"QuerySetId":905245,"Title":"Comments mentioning \" close\"","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", CreationDate, Score FROM Comments WHERE (LOWER(Text) LIKE '% close%') ORDER BY Comments.CreationDate DESC","CreationDate":"2020-07-17 7:07:16","validated":true,"QueryBody_Original":"SELECT  Id as [Comment Link], CreationDate, Score from Comments\n  where (\n      lower(Text) like '% close%'\n    )\n  order by Comments.CreationDate DESC"},{"QuerySetId":909727,"Title":"Does presence of a question mark affected whether a question gets answers, and it's score? (Yearly)","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"Year\", CASE WHEN title LIKE '%?%' THEN 'hasQMark' ELSE 'noQMark' END AS hasQMark, NUMBER_TO_STR(SUM(1), '#,##0') AS \"#Questions\", ROUND(1.0 * SUM(score) \/ SUM(1), 2) AS Score, ROUND(1.0 * SUM(answercount) \/ SUM(1), 2) AS \"Avg#Answers\", NUMBER_TO_STR(1.0 * SUM(CASE WHEN answercount > 0 THEN 1 ELSE 0 END) \/ SUM(1), '0.0%') AS hasAnswers FROM posts WHERE posttypeid = 1 AND closeddate IS NULL GROUP BY CASE WHEN title LIKE '%?%' THEN 'hasQMark' ELSE 'noQMark' END, YEAR(creationdate) ORDER BY YEAR(creationdate)","CreationDate":"2018-10-11 10:35:59","validated":true,"QueryBody_Original":"SELECT  \n  year(creationdate) as [Year],\n  case when title like '%?%' then 'hasQMark' else 'noQMark' end as hasQMark,\n  format(sum(1),'#,##0') as [#Questions],\n  round(1.0*sum(score)\/sum(1),2) as Score,\n  round(1.0*sum(answercount)\/sum(1),2) as [Avg#Answers],\n  format(1.0*sum(case when answercount>0 then 1 else 0 end)\/sum(1),'0.0%') as hasAnswers\nfrom\n  posts\nwhere \n  posttypeid=1 \n  and closeddate is null\ngroup by \n  case when title like '%?%' then 'hasQMark' else 'noQMark' end,\n  year(creationdate)\norder by year(creationdate)"},{"QuerySetId":910828,"Title":"Top C Devs in Greece","Description":null,"QueryBody":"SELECT u.id AS id, COUNT(a.id) AS answerCount FROM posts AS a JOIN users AS u ON u.id = a.owneruserid JOIN posts AS q ON a.parentid = q.id WHERE q.tags LIKE '%C++%' AND u.location LIKE '%Greece%' GROUP BY u.id","CreationDate":"2018-10-15 15:34:03","validated":true,"QueryBody_Original":"SELECT u.id id, count(a.id) answerCount from posts a join users u on u.id = a.owneruserid join posts q on a.parentid = q.id where q.tags like '%C++%' and u.location like '%Greece%' group by u.id "},{"QuerySetId":913361,"Title":"Dump Question & Answers For \"Java\" or \"code\" Tags","Description":null,"QueryBody":"SELECT Title, Body FROM Posts WHERE Tags LIKE '%<java>%' AND Body LIKE '%<code>%'","CreationDate":"2018-10-18 19:18:43","validated":true,"QueryBody_Original":"SELECT  Title, Body\n from Posts\n  where Tags like '%<java>%' and Body like '%<code>%'"},{"QuerySetId":915293,"Title":"number of question ask per Tuesday","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE) AS DateField, COUNT(p.Id) FROM Posts AS p WHERE PostTypeId = 1 AND TIME_TO_STR(CreationDate, 'WEEKDA%Y') = 'Tuesday' GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE) DESC","CreationDate":"2018-10-23 20:26:44","validated":true,"QueryBody_Original":"SELECT  \n  CAST(CreationDate as DATE) as DateField, count(p.Id)\nFROM\n  Posts p\nWHERE \n  PostTypeId = 1 and DATENAME(WEEKDAY, CreationDate) = 'Tuesday'\nGROUP BY \n  CAST(CreationDate as DATE)\nORDER BY\n  CAST(CreationDate as DATE) desc\n;"},{"QuerySetId":916428,"Title":"Migrations from specified site to this one","Description":null,"QueryBody":"SELECT ph.postid AS \"Post Link\", ph.* FROM Posts AS p INNER JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE ph.PostHistoryTypeId = 36 \/* Post Migrated Here *\/ AND ph.Comment LIKE '%:\/\/##FromSiteURLStart##%' \/* e.g. ell, english, stackoverflow *\/ AND p.posttypeid = 1 \/* Question *\/ ORDER BY ph.creationdate DESC","CreationDate":"2018-10-25 4:26:01","validated":true,"QueryBody_Original":"SELECT \n  ph.postid as [Post Link],\n  ph.*\nfrom\n  Posts p\n  inner join PostHistory ph on ph.PostId = p.Id\nwhere\n  ph.PostHistoryTypeId = 36 -- Post Migrated Here\n  and ph.Comment like '%:\/\/##FromSiteURLStart##%' -- e.g. ell, english, stackoverflow\n  and p.posttypeid = 1 -- Question\norder by ph.creationdate desc"},{"QuerySetId":917324,"Title":"What are the most popular first 3 words in question titles?","Description":null,"QueryBody":"SELECT SUBSTRING(p.Title, 1, STR_POSITION(p.Title, ' ', STR_POSITION(p.Title, ' ', STR_POSITION(p.Title, ' ') + 1) + 1)) AS First3Words, COUNT(DISTINCT p.Id) AS Questions, AVG(p.Score) AS AvgScore FROM dbo.Posts AS p WHERE p.PostTypeId = 1 AND STR_POSITION(p.Title, ' ', STR_POSITION(p.Title, ' ', STR_POSITION(p.Title, ' ') + 1) + 1) > 0 GROUP BY SUBSTRING(p.Title, 1, STR_POSITION(p.Title, ' ', STR_POSITION(p.Title, ' ', STR_POSITION(p.Title, ' ') + 1) + 1)) ORDER BY COUNT(DISTINCT p.Id) DESC LIMIT 100","CreationDate":"2018-10-27 22:52:59","validated":true,"QueryBody_Original":"SELECT  TOP 100 SUBSTRING(p.Title, 1, CHARINDEX(' ', p.Title, CHARINDEX(' ', p.Title, CHARINDEX(' ', p.Title) + 1) + 1)) AS First3Words, \n    COUNT(DISTINCT p.Id) AS Questions, AVG(p.Score) AS AvgScore\n  FROM dbo.Posts p\n  WHERE p.PostTypeId = 1\n    AND CHARINDEX(' ', p.Title, CHARINDEX(' ', p.Title, CHARINDEX(' ', p.Title) + 1) + 1) > 0\n  GROUP BY SUBSTRING(p.Title, 1, CHARINDEX(' ', p.Title, CHARINDEX(' ', p.Title, CHARINDEX(' ',p.Title) + 1) + 1))\n  ORDER BY COUNT(DISTINCT p.Id) DESC;"},{"QuerySetId":917475,"Title":"Post by Date and germany user","Description":null,"QueryBody":"SELECT CAST(comments.CreationDate AS DATE), COUNT(comments.id) FROM comments INNER JOIN users ON comments.UserId = users.id WHERE users.Location LIKE '%, Germany' AND comments.CreationDate <= '2017-12-31' AND comments.CreationDate >= '2017-01-01' GROUP BY CAST(comments.CreationDate AS DATE)","CreationDate":"2018-10-28 20:17:44","validated":true,"QueryBody_Original":"SELECT  CAST(comments.CreationDate AS DATE), COUNT(comments.id) FROM comments INNER JOIN users ON comments.UserId = users.id WHERE users.Location LIKE '%, Germany' AND comments.CreationDate <= '2017-12-31' AND comments.CreationDate >= '2017-01-01' GROUP BY CAST(comments.CreationDate AS DATE)"},{"QuerySetId":918265,"Title":"Sorting users by a vocab filtering in theme about-me section.","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(AboutMe) LIKE LOWER('%##Vocab##%') ORDER BY Reputation DESC","CreationDate":"2018-10-30 15:22:25","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(AboutMe) LIKE LOWER('%##Vocab##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":928171,"Title":"Ratio of Community Wiki to Non-Community Wiki Questions","Description":null,"QueryBody":"SELECT (SELECT COUNT(ID) FROM POSTS WHERE PostTypeId = 1 AND AnswerCount > 0 AND CommunityOwnedDate IS NULL) AS Non_Community_Count, (SELECT COUNT(ID) FROM POSTS WHERE PostTypeId = 1 AND AnswerCount > 0 AND NOT CommunityOwnedDate IS NULL) AS Community_Count, (SELECT CAST(COUNT(ID) AS FLOAT) FROM POSTS WHERE PostTypeId = 1 AND AnswerCount > 0 AND NOT CommunityOwnedDate IS NULL) \/ (SELECT COUNT(ID) FROM POSTS WHERE PostTypeId = 1 AND AnswerCount > 0 AND CommunityOwnedDate IS NULL) AS Ratio","CreationDate":"2018-11-16 2:08:27","validated":true,"QueryBody_Original":"SELECT  \n(SELECT COUNT(ID) FROM POSTS WHERE PostTypeId = 1 AND AnswerCount > 0 AND CommunityOwnedDate IS NULL) AS Non_Community_Count,\n(SELECT COUNT(ID) FROM POSTS WHERE PostTypeId = 1 AND AnswerCount > 0 AND CommunityOwnedDate IS NOT NULL) AS Community_Count,\n(SELECT CONVERT(FLOAT, COUNT(ID)) FROM POSTS WHERE PostTypeId = 1 AND AnswerCount > 0 AND CommunityOwnedDate IS NOT NULL)\n\/\n(SELECT COUNT(ID) FROM POSTS WHERE PostTypeId = 1 AND AnswerCount > 0 AND CommunityOwnedDate IS NULL)\nAS Ratio"},{"QuerySetId":928427,"Title":"HTTP links (instead of HTTPS) for isfdb.org","Description":null,"QueryBody":"SELECT p.creationdate, t.tagname, p.id AS \"Post Link\" FROM posts AS p JOIN tags AS t ON ((p.posttypeid = 4 AND t.excerptpostid = p.id) OR (p.posttypeid = 5 AND t.wikipostid = p.id)) WHERE p.posttypeid IN (4, 5) AND p.body LIKE '%http:\/\/%' AND NOT p.body LIKE '%http:\/\/isfdb.org%' AND NOT p.body LIKE '%http:\/\/www.isfdb.org%' ORDER BY p.creationdate DESC","CreationDate":"2019-10-30 16:30:22","validated":true,"QueryBody_Original":"SELECT\n  p.creationdate,\n  t.tagname,\n  p.id AS [Post Link]\nFROM posts p\nJOIN tags t\nON ((p.posttypeid = 4 AND t.excerptpostid = p.id) OR (p.posttypeid = 5 AND t.wikipostid = p.id))\nWHERE p.posttypeid IN (4, 5)\nAND p.body LIKE '%http:\/\/%'\nAND p.body NOT LIKE '%http:\/\/isfdb.org%'\nAND p.body NOT LIKE '%http:\/\/www.isfdb.org%'\nORDER BY p.creationdate DESC"},{"QuerySetId":929919,"Title":"Questions that contain python code snippets","Description":null,"QueryBody":"SELECT Body FROM Posts AS Question WHERE (Question.Title LIKE '%implement%' AND Question.Title LIKE '%how%') AND Question.Tags LIKE '%python%' AND Question.Body LIKE '%<code>%' LIMIT 100","CreationDate":"2018-11-30 23:25:36","validated":true,"QueryBody_Original":"SELECT  TOP 100 Body FROM \n  Posts AS Question \n  where    \n  (Question.Title LIKE '%implement%' AND Question.Title LIKE '%how%') AND\n  Question.Tags LIKE '%python%' AND \n  Question.Body LIKE '%<code>%'"},{"QuerySetId":930117,"Title":"Search Questions Asked A Specific Period of Time","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE (CreationDate >= @beg AND CreationDate <= @endi AND Score >= @score AND PostTypeId = 1) LIMIT 500","CreationDate":"2018-11-20 8:57:50","validated":true,"QueryBody_Original":"SELECT TOP 500 Id AS [Post Link], CreationDate FROM Posts WHERE (CreationDate >= @beg AND CreationDate <= @endi AND Score >= @score AND PostTypeId = 1)"},{"QuerySetId":935283,"Title":"Top 50 Android Developers from Kochi","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kochi%' AND (LOWER(AboutMe) LIKE '%android%') ORDER BY Reputation DESC LIMIT 50","CreationDate":"2020-11-06 23:07:20","validated":true,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    lower(Location) LIKE '%kochi%' AND\n    (lower(AboutMe) LIKE '%android%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":939849,"Title":"Delay between question and answer in answered questions for Beam \/ Dataflow","Description":null,"QueryBody":"SELECT Questions.Id AS \"Question\", Questions.CreationDate AS \"QuestionDate\", COUNT(Answers.Id) AS \"AnswerCount\", MIN(Answers.CreationDate) AS \"QuickestAnswerDate\", DATEDIFF(MIN(Answers.CreationDate), Questions.CreationDate) \/ 3600.0 AS \"Delay\" FROM Posts AS Questions INNER JOIN Posts AS Answers ON Answers.ParentId = Questions.Id WHERE (Questions.Tags LIKE '%apache-beam%' OR Questions.Tags LIKE '%google-cloud-dataflow%') GROUP BY Questions.Id, Questions.CreationDate","CreationDate":"2018-12-04 2:37:49","validated":true,"QueryBody_Original":"SELECT \n    Questions.Id as 'Question',\n    Questions.CreationDate as 'QuestionDate',\n    COUNT(Answers.Id) as 'AnswerCount',\n    MIN(Answers.CreationDate) as 'QuickestAnswerDate',\n    DATEDIFF(second, Questions.CreationDate, MIN(Answers.CreationDate)) \/ 3600.0 as 'Delay'\n  FROM\n    Posts as Questions\n    INNER JOIN Posts as Answers ON Answers.ParentId = Questions.Id\n  WHERE\n  (Questions.Tags LIKE '%apache-beam%' OR Questions.Tags LIKE '%google-cloud-dataflow%')\n    GROUP BY Questions.Id, Questions.CreationDate"},{"QuerySetId":940632,"Title":"Top 40 User from Bangladesh in Stackoverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR UPPER(Location) LIKE '%bd' ORDER BY Reputation DESC LIMIT 40","CreationDate":"2018-12-05 13:56:48","validated":true,"QueryBody_Original":"SELECT  TOP 40\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR UPPER(Location) LIKE '%bd'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":942396,"Title":"How many answers by reputable users are accepted, and their accepted percentage?","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(*) AS NumAnswers, SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) AS NumAccepted, (SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) * 100.0 \/ COUNT(*)) AS AcceptedPercent FROM Posts AS a INNER JOIN Users AS u ON u.Id = a.OwnerUserId INNER JOIN Posts AS q ON a.ParentId = q.Id WHERE (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL) GROUP BY u.Id ORDER BY AcceptedPercent DESC, NumAnswers DESC LIMIT 100","CreationDate":"2018-12-08 7:01:26","validated":true,"QueryBody_Original":"SELECT TOP 100\n  u.Id AS [User Link],\n  count(*) AS NumAnswers,\n  sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end) AS NumAccepted,\n  (sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end)*100.0\/count(*)) AS AcceptedPercent\nFROM Posts a\nINNER JOIN Users u ON u.Id = a.OwnerUserId\nINNER JOIN Posts q ON a.ParentId = q.Id\nWHERE \n  (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL) \nGROUP BY u.Id\nORDER BY AcceptedPercent DESC, NumAnswers DESC"},{"QuerySetId":942742,"Title":"How many answers are accepted?","Description":null,"QueryBody":"SELECT COUNT(a.Id) AS \"# answers\", SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) AS \"# accepted answers\", CAST(1.0 * COUNT(q.AcceptedAnswerId) \/ COUNT(a.Id) AS FLOAT(3, 2)) AS \"fraction accepted\" FROM Posts AS q JOIN Posts AS a ON a.ParentId = q.Id JOIN Votes AS v ON v.PostId = a.Id WHERE q.PostTypeId = 1 \/* question *\/ AND v.VoteTypeId = 1 \/* accepted by originator *\/","CreationDate":"2018-12-08 23:14:17","validated":true,"QueryBody_Original":"SELECT \n  COUNT(a.Id) AS \"# answers\",\n  sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end) AS \"# accepted answers\",\n  CAST(1.0*COUNT(q.AcceptedAnswerId)\/COUNT(a.Id) AS DECIMAL(3,2)) AS \"fraction accepted\"\nFROM Posts q\n  JOIN Posts a ON a.ParentId = q.Id\n  JOIN Votes v ON v.PostId = a.Id\nWHERE q.PostTypeId = 1 -- question\n  AND v.VoteTypeId = 1  -- accepted by originator"},{"QuerySetId":943466,"Title":"Top 200 users with lowest defeat rate of their answers","Description":null,"QueryBody":"SELECT COUNT(*) AS NumAnswers, SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) AS NumAccepted, CAST(SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) * 1.0 \/ COUNT(*) AS FLOAT(3, 2)) AS fraction, u.Id AS UserId, u.DisplayName AS Name FROM Posts AS a INNER JOIN Users AS u ON u.Id = a.OwnerUserId INNER JOIN Posts AS q ON a.ParentId = q.Id WHERE (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL) \/* no self answers *\/ GROUP BY u.Id, u.DisplayName ORDER BY NumAccepted DESC, NumAnswers DESC LIMIT 200","CreationDate":"2018-12-10 5:51:04","validated":true,"QueryBody_Original":"SELECT TOP 200\n  count(*) AS NumAnswers,\n  sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end) AS NumAccepted,\n  CAST(sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end)*1.0\/count(*) AS DECIMAL(3,2)) AS fraction,\n  u.Id AS UserId,\n  u.DisplayName AS Name\nFROM Posts a\nINNER JOIN Users u ON u.Id = a.OwnerUserId\nINNER JOIN Posts q ON a.ParentId = q.Id\nWHERE \n  (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL)   --no self answers\nGROUP BY u.Id, u.DisplayName\nORDER BY NumAccepted DESC, NumAnswers DESC"},{"QuerySetId":947297,"Title":"Images that need a description (have \"enter image description here\")","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE body LIKE '%enter image description here%' LIMIT 1000","CreationDate":"2018-12-16 22:21:13","validated":true,"QueryBody_Original":"SELECT  TOP 1000\n    Id as [Post Link]\nFROM\n    Posts\nWHERE\n    body LIKE '%enter image description here%'"},{"QuerySetId":952654,"Title":"All keras posts with score greater than 5","Description":null,"QueryBody":"SELECT Title, Body FROM Posts WHERE Tags LIKE '%keras%' AND Score > 5","CreationDate":"2018-12-24 22:00:02","validated":true,"QueryBody_Original":"SELECT  Title , Body from Posts WHERE \nTags like '%keras%' and Score > 5;"},{"QuerySetId":954166,"Title":"List of all edits where edit summary contains given keyword (with revision history)","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Comment, UserId AS \"User Link\", CreationDate, url = 'site:\/\/posts\/' + CAST(PostId AS TEXT) + '\/revisions' FROM PostHistory WHERE Comment LIKE '%##keyword##%' ORDER BY CreationDate","CreationDate":"2018-12-28 16:50:53","validated":true,"QueryBody_Original":"SELECT  PostId as [Post Link], Comment, UserId as [User Link], CreationDate,\n  url = 'site:\/\/posts\/' + CAST(PostId AS varchar)+'\/revisions'\nFrom PostHistory\nWhere Comment Like '%##keyword##%'\nOrder By CreationDate"},{"QuerySetId":954184,"Title":"Highest ranked SO users from Armenia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%yerevan%' OR LOWER(Location) LIKE '%armenia%') ORDER BY Reputation DESC","CreationDate":"2018-12-28 19:06:28","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%yerevan%'\n    OR LOWER(Location) LIKE '%armenia%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":954586,"Title":"Number of tag-info edits (including deleted users)","Description":null,"QueryBody":"SELECT postid, COUNT(*) FROM (SELECT h.RevisionGUID, h.postid, h.id, h.UserId AS \"User Link\", h.UserDisplayName FROM PostHistory AS h JOIN Posts AS p ON h.PostId = p.Id WHERE (p.PostTypeId IN (4, 5)) AND (h.PostHistoryTypeId IN (2, 5))) AS data GROUP BY postid ORDER BY COUNT(*) DESC","CreationDate":"2018-12-29 17:51:27","validated":true,"QueryBody_Original":"SELECT  postid\n     , count(*)\nfrom\n(\n\nSELECT h.RevisionGUID\n     , h.postid\n     , h.id\n     , h.UserId AS [User Link]\n     , h.UserDisplayName\nFROM PostHistory h \nJOIN Posts p ON h.PostId=p.Id\nWHERE (p.PostTypeId in (4,5)) \nAND (h.PostHistoryTypeId in (2,5))\n) data\ngroup by postid\norder by count(*) desc"},{"QuerySetId":957159,"Title":"Percentage of questions tagged with 'tensorflow' each week between dates","Description":null,"QueryBody":"SELECT number = ROW_NUMBER() OVER (ORDER BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W')), (CAST(SUM(CASE WHEN (Tags LIKE '%<tensorflow>%') THEN 1 ELSE 0 END) AS FLOAT) * 100 \/ COUNT(Posts.Id)) AS \"Perc\" FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W') ORDER BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W')","CreationDate":"2019-01-01 12:28:14","validated":true,"QueryBody_Original":"SELECT \n  number = ROW_NUMBER() OVER (ORDER BY Year(CreationDate), DatePart(week,CreationDate) ASC),\n  (CAST(SUM(CASE WHEN (Tags LIKE '%<tensorflow>%') THEN 1 ELSE 0 END) as float)*100\/COUNT(Posts.Id)) AS [Perc]\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY Year(CreationDate), DatePart(week,CreationDate)\nORDER BY Year(CreationDate), DatePart(week,CreationDate) ASC"},{"QuerySetId":959004,"Title":"Top 300 users by Reputation in Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Iran%' ORDER BY reputation DESC LIMIT 300","CreationDate":"2019-01-19 20:42:41","validated":true,"QueryBody_Original":"SELECT  TOP 300\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Iran%'\nORDER BY\n   reputation DESC"},{"QuerySetId":965561,"Title":"Number of questions that remain undeleted (per day, between dates)","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE), COUNT(p.Id) FROM Posts AS p WHERE p.PostTypeId = 1 AND p.CreationDate >= '##Date1##' AND p.CreationDate <= '##Date2##' GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE)","CreationDate":"2019-01-15 12:06:26","validated":true,"QueryBody_Original":"SELECT \n  CAST(p.CreationDate AS date), COUNT(p.Id)\nFROM Posts p\nWHERE p.PostTypeId=1 AND p.CreationDate >= '##Date1##' AND p.CreationDate <= '##Date2##'\nGROUP BY CAST(p.CreationDate AS date)\nORDER BY CAST(p.CreationDate AS date)"},{"QuerySetId":967824,"Title":"Commenters from more commented questions - android","Description":null,"QueryBody":"SELECT c.PostId AS PostId, c.UserId AS C_UserId FROM Comments AS c WHERE c.PostId IN (SELECT p2.Id FROM Posts AS p2 WHERE p2.Tags LIKE '%android%' ORDER BY p2.CommentCount DESC LIMIT 500)","CreationDate":"2019-01-21 21:18:10","validated":true,"QueryBody_Original":"SELECT  c.PostId as PostId, c.UserId as C_UserId FROM \n  Comments as c\n  where c.PostId in (\n    SELECT TOP 500 p2.Id from Posts as p2\n    where\n    p2.Tags like '%android%' order by p2.CommentCount desc)"},{"QuerySetId":968190,"Title":"Top 100 posts with all comments upvoted","Description":"Inspired by this post: https:\/\/meta.stackexchange.com\/questions\/322566\/say-to-the-new-contributor-that-upvoting-comments-does-almost-nothing-for-comm","QueryBody":"SELECT Posts.Id AS \"Post Link\" FROM Posts, Comments WHERE Posts.PostTypeId = 1 AND Posts.CommentCount > 3 AND Posts.Id = Comments.PostId AND Posts.OwnerUserId <> Comments.UserId GROUP BY Posts.Id HAVING MIN(Comments.Score) = 1 AND MAX(Comments.Score) = 1 LIMIT 100","CreationDate":"2019-01-19 0:35:58","validated":true,"QueryBody_Original":"SELECT  TOP 100 Posts.Id AS [Post Link] FROM Posts, Comments WHERE Posts.PostTypeId=1 AND Posts.CommentCount>3 AND Posts.Id = Comments.PostId AND Posts.OwnerUserId != Comments.UserId GROUP BY Posts.Id HAVING MIN(Comments.Score) = 1 AND MAX(Comments.Score) = 1"},{"QuerySetId":969301,"Title":"Top 5 User from Surat","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%surat%' OR UPPER(Location) LIKE '%SURAT' ORDER BY Reputation DESC LIMIT 5","CreationDate":"2019-01-22 9:46:21","validated":true,"QueryBody_Original":"SELECT  TOP 5\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%surat%'\n    OR UPPER(Location) LIKE '%SURAT'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":970242,"Title":"Golden tag badge owners by reputation","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Id, Reputation FROM Users WHERE Id IN (SELECT UserId FROM Badges WHERE TagBased = 1 AND Class = 1) ORDER BY Reputation DESC, Id","CreationDate":"2019-01-24 7:29:20","validated":true,"QueryBody_Original":"SELECT \n  Id AS [User Link],\n  Id,\n  Reputation\nFROM Users\nWHERE Id IN (\n  SELECT UserId\n  FROM Badges\n  WHERE TagBased = 1 AND Class=1\n)\nORDER BY Reputation DESC, Id"},{"QuerySetId":970822,"Title":"2018 answers by users with no answers before 2018","Description":null,"QueryBody":"SELECT A.Id AS \"Post Link\", A.Score, U.DisplayName FROM Posts AS A JOIN Users AS U ON A.OwnerUserId = U.Id WHERE YEAR(A.CreationDate) = 2018 AND A.PostTypeId = 1 \/* Post is question? *\/ AND NOT EXISTS(SELECT * FROM Posts AS A2 WHERE A2.OwnerUserId = U.Id AND YEAR(A2.CreationDate) < 2018 AND A2.PostTypeId = 1) ORDER BY A.Score DESC","CreationDate":"2019-01-25 10:13:14","validated":true,"QueryBody_Original":"SELECT  A.Id AS [Post Link], A.Score, U.DisplayName\n  FROM Posts A JOIN Users U ON A.OwnerUserId = U.Id\n    WHERE year(A.CreationDate) = 2018\n    AND A.PostTypeId = 1 -- Post is question?\n    AND NOT EXISTS (SELECT *\n                    FROM Posts A2\n                    WHERE A2.OwnerUserId = U.Id\n                    AND year(A2.CreationDate) < 2018\n                    AND A2.PostTypeId = 1)\n  ORDER BY A.Score DESC"},{"QuerySetId":973905,"Title":"Posts which had given tag in the past","Description":null,"QueryBody":"SELECT DISTINCT PostHistory.PostId AS \"Post Link\", url = 'site:\/\/posts\/' + CAST(PostHistory.PostId AS TEXT) + '\/revisions', Posts.OwnerUserId AS \"User Link\", Posts.Score, Posts.Tags, Posts.CreationDate, Posts.LastActivityDate FROM PostHistory INNER JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistoryTypeId IN (3, 6, 9) AND Text LIKE '%<##tagName##>%' ORDER BY CreationDate","CreationDate":"2019-01-30 17:59:47","validated":true,"QueryBody_Original":"SELECT \nDistinct PostHistory.PostId as [Post Link], \n  url = 'site:\/\/posts\/' + CAST(PostHistory.PostId AS varchar)+'\/revisions',\n  Posts.OwnerUserId as [User Link], Posts.Score, Posts.Tags,\n  Posts.CreationDate, Posts.LastActivityDate\nFrom PostHistory INNER JOIN Posts\n  ON PostHistory.PostId=Posts.Id\nwhere PostHistoryTypeId in (3,6,9) and Text Like '%<##tagName##>%'\nOrder By CreationDate"},{"QuerySetId":975438,"Title":"Top users from Stuttgart, Germany","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%stuttgart%' OR UPPER(Location) LIKE '%STUTTGART%' OR Location LIKE '%Stuttgart%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2020-07-07 20:58:30","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%stuttgart%'\n    OR UPPER(Location) LIKE '%STUTTGART%'\n    or Location like '%Stuttgart%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":977856,"Title":"#2: User vs. Num Answers","Description":null,"QueryBody":"SELECT COUNT(p.Id) AS \"Num Answers\", u.Id AS \"User Link\", u.DisplayName, u.Reputation FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 2 AND u.Reputation > 10 GROUP BY u.Id, u.Reputation, u.DisplayName ORDER BY u.Reputation DESC","CreationDate":"2019-02-08 5:56:21","validated":true,"QueryBody_Original":"SELECT  count(p.Id) as \"Num Answers\", u.Id as [User Link], u.DisplayName, u.Reputation\nFROM Posts p\nJOIN Users u ON p.OwnerUserId = u.Id\nWHERE p.PostTypeId = 2 and u.Reputation > 10\nGROUP BY u.Id, u.Reputation, u.DisplayName\nORDER BY u.Reputation DESC"},{"QuerySetId":980053,"Title":"Likely video-only answers (and possibly spam)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM posts WHERE PostTypeId = 2 AND LENGTH(body) <= 400 AND (LOWER(body) LIKE '%<a href=\"http%youtube.com%' OR LOWER(bodY) LIKE '%<a href=\"http%youtu.be%')","CreationDate":"2019-06-05 1:20:45","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], Body\nFROM posts \nWHERE PostTypeId=2\n    AND len(body) <= 400 \n    AND (\n        lower(body) LIKE '%<a href=\"http%youtube.com%'\n        OR LOWER(bodY) LIKE '%<a href=\"http%youtu.be%'\n    )"},{"QuerySetId":980157,"Title":"Distribution of users' up\/down cast votes: graph","Description":null,"QueryBody":"SELECT ROUND(100 * UpVotes \/ (UpVotes + DownVotes + 0.1), 0) AS UpRatio, COUNT(*) AS N FROM (SELECT * FROM Users AS U WHERE U.UpVotes + U.DownVotes > 100) AS a GROUP BY ROUND(100 * UpVotes \/ (UpVotes + DownVotes + 0.1), 0) ORDER BY UpRatio","CreationDate":"2019-02-11 1:32:46","validated":true,"QueryBody_Original":"select\n\nround ( 100*UpVotes \/ ( UpVotes + DownVotes + 0.1 ), 0) AS UpRatio,\ncount(*) AS N\n\nFROM\n\n(SELECT * FROM Users U Where U.UpVotes + U.DownVotes > 100) a\n\n  \nGROUP BY\n round ( 100*UpVotes \/ ( UpVotes + DownVotes + 0.1 ), 0)\n\n \nORDER BY\n  UpRatio ASC"},{"QuerySetId":980512,"Title":"Average time to Answer a question","Description":null,"QueryBody":"SELECT p1.id AS \"AnsID\", p1.ParentId AS \"QuestionId\", p1.Creationdate AS \"AnsCreationdate\", p2.Creationdate AS \"QuestionCreationdate\", DATEDIFF(p1.Creationdate, p2.Creationdate) AS Time_Difference FROM posts AS p1 JOIN posts AS p2 ON p1.ParentId = p2.Id WHERE p1.PostTypeId = 2 AND p1.parentid IN (SELECT pq.id FROM posts AS pq, users AS u WHERE pq.owneruserid = u.id AND pq.PostTypeId = 1)","CreationDate":"2019-02-11 13:17:54","validated":true,"QueryBody_Original":"SELECT  p1.id      AS \"AnsID\",\n  p1.ParentId     AS \"QuestionId\",\n  p1.Creationdate AS \"AnsCreationdate\",\n  p2.Creationdate AS \"QuestionCreationdate\",\n  DATEDIFF(minute, p2.Creationdate, p1.Creationdate) AS Time_Difference\nFROM posts p1\nJOIN posts p2\nON p1.ParentId     = p2.Id\nWHERE p1.PostTypeId=2\nAND p1.parentid   IN\n  (SELECT pq.id\n  FROM posts pq ,\n    users u\n  WHERE pq.owneruserid= u.id\n  AND pq.PostTypeId   =1);"},{"QuerySetId":989072,"Title":"Users with lots of comments but no other posts","Description":null,"QueryBody":"SELECT U.Id \/* , COUNT(C.Id) *\/ FROM Users AS U \/* INNER JOIN Comments C *\/ \/* ON C.UserId = U.Id *\/ WHERE NOT U.Id IN (SELECT OwnerUserId FROM Posts WHERE PostTypeID IN (1, 2))","CreationDate":"2019-02-20 21:53:19","validated":true,"QueryBody_Original":"SELECT  U.Id--, COUNT(C.Id)\nFROM Users U\n--INNER JOIN Comments C\n--ON C.UserId = U.Id\nWHERE U.Id NOT IN (SELECT OwnerUserId FROM Posts WHERE PostTypeID IN (1, 2))\n--GROUP BY U.Id"},{"QuerySetId":990313,"Title":"Comments containing string1 but not string2, string3, string4","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%##string1?\\ve##%' AND NOT (Text LIKE '%##string2?\\vec##%') AND NOT (Text LIKE '%##string3?\\ver##%') AND NOT (Text LIKE '%##string4?\\vee##%') ORDER BY CreationDate DESC","CreationDate":"2019-02-24 0:29:56","validated":true,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%##string1?\\ve##%'\n  AND NOT(Text LIKE '%##string2?\\vec##%') \n  AND NOT(Text LIKE '%##string3?\\ver##%') \n  AND NOT(Text LIKE '%##string4?\\vee##%') \nORDER BY CreationDate DESC\n---\\ver catches both \\verb and \\vert"},{"QuerySetId":991617,"Title":"Most disliked users by square-sum of their downvoted posts","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", -SQRT(1.0 * SUM(Score * Score)) AS DownSqrtSum FROM Posts WHERE Score < 0 AND OwnerUserId > 0 GROUP BY Posts.OwnerUserId ORDER BY DownSqrtSum, OwnerUserId LIMIT 100","CreationDate":"2019-02-26 16:39:37","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  OwnerUserId AS [User Link],\n  -SQRT(1.0 * SUM(Score*Score)) AS DownSqrtSum\nFROM Posts\nWHERE\n  Score < 0\n  AND\n  OwnerUserId > 0\nGROUP BY Posts.OwnerUserId\nORDER BY DownSqrtSum, OwnerUserId"},{"QuerySetId":992744,"Title":"StackOverflow User reputation count histogram","Description":null,"QueryBody":"SELECT Reputation, COUNT(id) FROM Users WHERE Reputation > 24999 GROUP BY Reputation ORDER BY Reputation","CreationDate":"2019-08-30 21:06:02","validated":true,"QueryBody_Original":"SELECT  Reputation, count(id) from Users\nwhere Reputation > 24999\nGROUP BY Reputation\nORDER BY Reputation"},{"QuerySetId":995148,"Title":"Which users do have a post as favorite","Description":null,"QueryBody":"SELECT v.Id, v.PostId, v.VoteTypeId, v.UserId, v.CreationDate, p.CreationDate, p.Score, p.ViewCount, p.OwnerUserId, p.Title, p.FavoriteCount, u.Reputation, u.CreationDate, u.DisplayName, u.UpVotes, u.DownVotes FROM Votes AS v INNER JOIN Posts AS p ON p.Id = v.PostId INNER JOIN Users AS u ON u.Id = v.UserId WHERE v.VoteTypeId = 5","CreationDate":"2019-03-11 13:57:36","validated":true,"QueryBody_Original":"SELECT\n    v.Id\n  , v.PostId\n  , v.VoteTypeId\n  , v.UserId\n  , v.CreationDate\n  , p.CreationDate\n  , p.Score\n  , p.ViewCount\n  , p.OwnerUserId\n  , p.Title\n  , p.FavoriteCount\n  , u.Reputation\n  , u.CreationDate\n  , u.DisplayName\n  , u.UpVotes\n  , u.DownVotes\nFROM\n    Votes v\nINNER JOIN\n    Posts p\nON\n    p.Id = v.PostId\nINNER JOIN\n    Users u\nON\n    u.Id = v.UserId\nWHERE\n    v.VoteTypeId = 5"},{"QuerySetId":1000167,"Title":"Top 50 users from Iasi (Romania)","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, AboutMe, ProfileImageUrl FROM Users WHERE LOWER(Location) LIKE '%iasi%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2019-03-06 17:33:04","validated":true,"QueryBody_Original":"SELECT \nTOP (50) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    AboutMe,\n    ProfileImageUrl\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%iasi%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1001432,"Title":"Dupe questions by summed rep of orig + dupe","Description":"Well, using the sum of the log of the reps to ordering gives much better results.","QueryBody":"SELECT Orig.Id AS \"Post Link\", OrigUser.Id AS \"User Link\", OrigUser.Reputation AS OrigRep, Dupe.Id AS \"Post Link\", DupeUser.Id AS \"User Link\", DupeUser.Reputation AS DupeRep FROM Posts AS Orig, Users AS OrigUser, Posts AS Dupe, Users AS DupeUser, PostLinks WHERE PostLinks.RelatedPostId = Orig.Id AND Orig.OwnerUserId = OrigUser.Id AND PostLinks.PostId = Dupe.Id AND Dupe.OwnerUserId = DupeUser.Id AND DupeUser.Id <> OrigUser.Id AND PostLinks.LinkTypeId = 3 ORDER BY LOG(DupeUser.Reputation) + LOG(OrigUser.Reputation) DESC LIMIT 100","CreationDate":"2019-03-08 15:24:25","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  Orig.Id AS [Post Link],\n  OrigUser.Id AS [User Link],\n  OrigUser.Reputation AS OrigRep,\n  Dupe.Id AS [Post Link],\n  DupeUser.Id AS [User Link],\n  DupeUser.Reputation AS DupeRep\nFROM\n  Posts Orig,\n  Users OrigUser,\n  Posts Dupe,\n  Users DupeUser,\n  PostLinks\nWHERE\n  PostLinks.RelatedPostId = Orig.Id\n  AND\n  Orig.OwnerUserId = OrigUser.Id\n  AND\n  PostLinks.PostId = Dupe.Id\n  AND\n  Dupe.OwnerUserId = DupeUser.Id\n  AND\n  DupeUser.Id <> OrigUser.Id\n  AND\n  PostLinks.LinkTypeId = 3\nORDER BY LOG(DupeUser.Reputation) + LOG(OrigUser.Reputation) DESC"},{"QuerySetId":1003115,"Title":"Total number of answers by month","Description":null,"QueryBody":"SELECT DATETIMEFROMPARTS(TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m'), 1, 0, 0, 0, 0) AS date, COUNT(*) AS count FROM posts WHERE posttypeid = 2 GROUP BY TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m') ORDER BY TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m')","CreationDate":"2019-03-11 22:30:50","validated":true,"QueryBody_Original":"SELECT  datetimefromparts(datepart(year, creationdate), datepart(month, creationdate), 1, 0, 0, 0, 0) date, count(*) count\nfrom posts\nwhere posttypeid = 2\ngroup by datepart(year, creationdate), datepart(month, creationdate)\norder by datepart(year, creationdate), datepart(month, creationdate)"},{"QuerySetId":1009509,"Title":"Comments asking the downvoter to explain","Description":null,"QueryBody":"SELECT Comments.Id AS \"Comment Link\", Comments.UserId AS \"User Link\", Posts.ClosedDate AS Closed, Comments.CreationDate FROM Comments INNER JOIN Posts ON Comments.PostId = Posts.Id WHERE (LOWER(Text) LIKE '%@downvoter%' OR LOWER(Text) LIKE '%downvoter%' OR LOWER(Text) LIKE '%the downvote%' OR LOWER(Text) LIKE '%downvote%' OR LOWER(Text) LIKE '%down-voter%' OR LOWER(Text) LIKE '%@down-voter%') AND Comments.CreationDate > '2019-01-01' ORDER BY Comments.CreationDate DESC","CreationDate":"2019-03-18 13:26:17","validated":true,"QueryBody_Original":"SELECT  Comments.Id      as [Comment Link], \n       Comments.UserId  as [User Link], \n       Posts.ClosedDate as Closed, \n       Comments.CreationDate from Comments \n       inner join Posts on Comments.PostId = Posts.Id\n       where (\n           lower(Text) like '%@downvoter%' or\n           lower(Text) like '%downvoter%' or\n           lower(Text) like '%the downvote%' or\n           lower(Text) like '%downvote%' or\n           lower(Text) like '%down-voter%' or\n           lower(Text) like '%@down-voter%'\n       ) and Comments.CreationDate > '2019-01-01'\norder by Comments.CreationDate DESC"},{"QuerySetId":1013289,"Title":"Total count of up- and downvotes in the system from the Users and the Votes table","Description":null,"QueryBody":"SELECT 'Users Table' AS Source, SUM(UpVotes) AS Ups, SUM(DownVotes) AS Downs FROM Users UNION SELECT 'Votes Table' AS Source, COUNT(CASE WHEN VoteTypeId = 2 THEN 1 ELSE NULL END) AS Ups, COUNT(CASE WHEN VoteTypeId = 3 THEN 1 ELSE NULL END) AS Downs FROM Votes","CreationDate":"2019-03-22 13:29:47","validated":true,"QueryBody_Original":"SELECT \n  'Users Table' AS Source,\n  SUM(UpVotes) AS Ups,\n  SUM(DownVotes) AS Downs\nFROM Users\n\nUNION\n\nSELECT\n  'Votes Table' AS Source,\n  COUNT(CASE WHEN VoteTypeId=2 THEN 1 ELSE NULL END) Ups,\n  COUNT(CASE WHEN VoteTypeId=3 THEN 1 ELSE NULL END) Downs\nFROM Votes"},{"QuerySetId":1013482,"Title":"Closed questions with highest (current) OP reputation","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Id AS PostId, Posts.Score, Users.Id AS \"User Link\", Users.Id AS UserId, Users.Reputation AS UserReputation FROM Posts, Users WHERE Posts.OwnerUserId = Users.Id AND NOT Posts.ClosedDate IS NULL ORDER BY Users.Reputation DESC, Users.Id LIMIT 100","CreationDate":"2019-03-22 19:56:34","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  Posts.Id AS [Post Link],\n  Posts.Id AS PostId,\n  Posts.Score,\n  Users.Id AS [User Link],\n  Users.Id AS UserId,\n  Users.Reputation AS UserReputation\nFROM Posts, Users\nWHERE\n  Posts.OwnerUserId = Users.Id\n  AND\n  Posts.ClosedDate IS NOT NULL\nORDER BY\n  Users.Reputation DESC, Users.Id"},{"QuerySetId":1014350,"Title":"Table of population as a function of number of votes on the post","Description":"https:\/\/chat.stackexchange.com\/transcript\/message\/49612762#49612762","QueryBody":"SELECT A.Count AS \"Votes\", COUNT(*) AS \"Count\", ROUND(COUNT(*) \/ (CAST(B.Total AS FLOAT)) * 100, 5) AS \"%age\" FROM (SELECT COUNT(*) AS \"Count\" FROM Posts JOIN Votes ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId = 2 OR Votes.VoteTypeId = 3 GROUP BY Posts.Id) AS A JOIN (SELECT COUNT(*) AS \"Total\" FROM Posts WHERE Posts.PostTypeId = 1 OR Posts.PostTypeId = 2 OR Posts.PostTypeId = 3) AS B ON 1 = 1 GROUP BY A.Count, B.Total ORDER BY '%age' DESC, 'Votes' DESC","CreationDate":"2019-03-23 16:54:20","validated":true,"QueryBody_Original":"SELECT  A.Count as 'Votes', COUNT(*) as 'Count', ROUND(COUNT(*) \/ (CAST(B.Total AS float)) * 100, 5) as '%age'\n\nFROM \n\n(SELECT\n  COUNT(*) AS 'Count'\n  FROM Posts\n    JOIN Votes\n    ON Votes.PostId = Posts.Id\n  WHERE Votes.VoteTypeId = 2 or Votes.VoteTypeId = 3\n  GROUP BY Posts.Id) as A\n\nJOIN\n\n(SELECT\n  COUNT(*) as 'Total'\n  FROM Posts\n  WHERE Posts.PostTypeId = 1 or Posts.PostTypeId = 2 or Posts.PostTypeId = 3) as B\n\nON 1 = 1\n\nGROUP BY A.Count, B.Total\nORDER BY '%age' DESC, 'Votes' DESC;"},{"QuerySetId":1014591,"Title":"Posts by Programming language per month","Description":null,"QueryBody":"SELECT MONTH(CreationDate), COUNT(Id) FROM posts WHERE tags LIKE '%<lang>%' GROUP BY MONTH(CreationDate)","CreationDate":"2019-03-23 19:07:29","validated":true,"QueryBody_Original":"SELECT  MONTH(CreationDate), COUNT(Id) FROM posts WHERE tags like '%<lang>%'\nGROUP BY MONTH(CreationDate)"},{"QuerySetId":1015754,"Title":"(fout) Percentage of solved questions","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) AS YEAR, Percentage_Solved_Questions = SUM(CASE WHEN NOT AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) \/ CAST(COUNT(id) AS FLOAT) FROM Posts GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) ORDER BY year","CreationDate":"2019-05-11 15:26:34","validated":true,"QueryBody_Original":"SELECT  DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) as YEAR, Percentage_Solved_Questions = SUM(CASE WHEN AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END) \/ cast(COUNT(id) as float)\nFROM Posts\ngroup by DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\norder BY year"},{"QuerySetId":1015937,"Title":"Post without image from low rep users","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.body, owneruserid AS \"User Link\" FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE NOT p.body LIKE '%imgur.com%' AND p.posttypeid = 1 AND u.reputation < 100","CreationDate":"2019-03-26 6:33:13","validated":true,"QueryBody_Original":"SELECT  p.id [Post Link], p.body, owneruserid [User Link]\nfrom posts p inner join users u on u.id = p.owneruserid\nwhere\n    p.body not like '%imgur.com%' \n    and p.posttypeid = 1 \n    and u.reputation < 100"},{"QuerySetId":1017992,"Title":"Top 2500 SO Users from NC","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE Location LIKE '%NC%' OR LOWER(Location) LIKE '%north carolina%' AND NOT LOWER(Location) LIKE '%france%' AND NOT Location LIKE '%NCR%' ORDER BY Reputation DESC LIMIT 2500","CreationDate":"2019-03-28 17:30:44","validated":true,"QueryBody_Original":"SELECT  TOP 2500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\nLocation LIKE '%NC%' OR LOWER(Location) LIKE '%north carolina%'\n   AND LOWER(Location) NOT LIKE '%france%'\n   AND Location NOT LIKE '%NCR%'\nORDER BY\n   Reputation DESC;"},{"QuerySetId":1019831,"Title":"Number of questions with a positive score and at least one downvote","Description":null,"QueryBody":"SELECT COUNT(DISTINCT (p.Id)) FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId AND v.VoteTypeId = 2 WHERE p.PostTypeId = 1 AND p.Score > 0","CreationDate":"2019-03-30 4:11:10","validated":true,"QueryBody_Original":"SELECT  COUNT(DISTINCT(p.Id))\n  FROM Posts AS p\n  INNER JOIN Votes AS v ON p.Id = v.PostId AND v.VoteTypeId = 2\n  WHERE p.PostTypeId = 1\n    AND p.Score > 0"},{"QuerySetId":1020914,"Title":"Q:A ratio for top users","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, CASE Questions WHEN 0 THEN '1:infinity' ELSE '1:' + CAST(ROUND(Answers \/ CAST(Questions AS FLOAT), 2) AS TEXT) END AS \"Q:A ratio\" FROM (SELECT u.Id, u.Reputation, SUM(CASE p.PostTypeId WHEN 1 THEN 1 ELSE 0 END) AS \"Questions\", SUM(CASE p.PostTypeId WHEN 2 THEN 1 ELSE 0 END) AS \"Answers\" FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id, u.Reputation ORDER BY u.Reputation DESC LIMIT 50) AS temp","CreationDate":"2019-04-01 18:38:29","validated":true,"QueryBody_Original":"SELECT  Id AS [User Link], Reputation,\n  CASE Questions\n    WHEN 0 THEN '1:infinity'\n    ELSE '1:' + CAST(ROUND(Answers \/ CAST(Questions AS FLOAT), 2) AS NVARCHAR)\n  END AS 'Q:A ratio'\n  FROM\n\n(SELECT TOP 50 u.Id, u.Reputation,\nSUM(CASE p.PostTypeId WHEN 1 THEN 1 ELSE 0 END) AS 'Questions',\nSUM(CASE p.PostTypeId WHEN 2 THEN 1 ELSE 0 END) AS 'Answers'\n  FROM Users AS u\n  INNER JOIN Posts AS p ON u.Id = p.OwnerUserId\n  GROUP BY u.Id, u.Reputation\n  ORDER BY u.Reputation DESC) AS temp"},{"QuerySetId":1022641,"Title":"Top 10 stackoverflow users from Himachal","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%himachal%' OR UPPER(Location) LIKE '%HIMACHAL%' OR Location LIKE '%Himachal%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 10","CreationDate":"2019-04-03 10:41:19","validated":true,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%himachal%'\n    OR UPPER(Location) LIKE '%HIMACHAL%'\n    or Location like '%Himachal%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1024265,"Title":"how many people have earned the bash tag","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY b.Date), b.UserId, b.Date AS DateReceived, u.DisplayName FROM Users AS u, Badges AS b WHERE b.name = 'bash' AND b.class = 3 AND u.Id = b.UserId GROUP BY b.Date, b.UserId, u.DisplayName","CreationDate":"2019-07-27 0:33:37","validated":true,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY b.Date ASC), b.UserId, b.Date DateReceived, u.DisplayName\nFROM Users u, Badges b\nWHERE b.name='bash' and b.class=3\nand u.Id=b.UserId\nGROUP BY b.Date, b.UserId, u.DisplayName"},{"QuerySetId":1025903,"Title":"Posts by owner's display name","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Body FROM Posts WHERE PostTypeId <= 2 AND OwnerUserId IS NULL AND OwnerDisplayName = '##DisplayName##' ORDER BY CreationDate","CreationDate":"2019-04-09 11:51:54","validated":true,"QueryBody_Original":"SELECT  Id AS [Post Link], Score, Body\nFROM Posts\nWHERE PostTypeId <=2 AND OwnerUserId IS NULL AND OwnerDisplayName = '##DisplayName##'\nORDER BY CreationDate ASC"},{"QuerySetId":1026020,"Title":"All questions after January 1, 2019","Description":null,"QueryBody":"SELECT Id, Body, Title, Tags, AnswerCount, Score, ViewCount, CommentCount FROM Posts WHERE CreationDate >= '2019-01-01' AND PostTypeId = 1 LIMIT 20000","CreationDate":"2019-04-11 8:11:34","validated":true,"QueryBody_Original":"SELECT  TOP 20000 Id, Body, Title, Tags, AnswerCount, Score, ViewCount, CommentCount\nFROM Posts\nWHERE CreationDate >= '2019-01-01'\n      AND PostTypeId = 1"},{"QuerySetId":1028307,"Title":"Top Warsaw SO Users","Description":"SO users from Warsaw with highest reputation","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%warsaw%' OR UPPER(Location) LIKE '%WARSAW%' OR Location LIKE '%Warsaw%') AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-04-12 12:01:40","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%warsaw%'\n    OR UPPER(Location) LIKE '%WARSAW%'\n    or Location like '%Warsaw%')\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1029127,"Title":"Most recent 100 HNQ (Hot Network Questions)","Description":null,"QueryBody":"SELECT postid AS \"Post Link\", creationdate AS \"Entering the list on\" FROM posthistory WHERE posthistorytypeid = 52 ORDER BY creationdate DESC LIMIT 100","CreationDate":"2019-04-13 20:00:13","validated":true,"QueryBody_Original":"SELECT  top 100 postid as [Post Link], creationdate as [Entering the list on]\n  from posthistory\n  where posthistorytypeid = 52\n  order by creationdate desc"},{"QuerySetId":1032203,"Title":"Top users by offered bounties in 2017","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY SUM(Votes.BountyAmount) DESC, Users.ID) AS rnSum, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC, Users.ID) AS rnCount, Users.ID, Users.DisplayName, Users.Reputation, SUM(Votes.BountyAmount) AS BountyOfferedTotal, COUNT(*) AS BountyOfferedCount FROM Votes INNER JOIN Posts ON Posts.ID = Votes.PostID INNER JOIN Users ON Users.ID = Posts.OwnerUserID WHERE NOT Votes.BountyAmount IS NULL AND Votes.VoteTypeID = 8 \/* BountyStart *\/ AND Posts.PostTypeID = 1 \/* Question *\/ AND Votes.CreationDate BETWEEN '01\/01\/2017' AND '12\/31\/2017' GROUP BY Users.ID, Users.DisplayName, Users.Reputation ORDER BY BountyOfferedTotal DESC, Users.ID LIMIT 100","CreationDate":"2019-04-18 6:57:17","validated":true,"QueryBody_Original":"SELECT  TOP(100)\n  ROW_NUMBER() OVER (ORDER BY SUM(Votes.BountyAmount) DESC, Users.ID) AS rnSum\n  ,ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC, Users.ID) AS rnCount\n  ,Users.ID\n  ,Users.DisplayName\n  ,Users.Reputation\n  ,SUM(Votes.BountyAmount) AS BountyOfferedTotal\n  ,COUNT(*) AS BountyOfferedCount\nFROM\n  Votes\n  INNER JOIN Posts ON Posts.ID = Votes.PostID\n  INNER JOIN Users ON Users.ID = Posts.OwnerUserID\nWHERE\n  Votes.BountyAmount IS NOT NULL\n  AND Votes.VoteTypeID = 8 -- BountyStart\n  AND Posts.PostTypeID = 1 -- Question\n  AND Votes.CreationDate between '01\/01\/2017' AND '12\/31\/2017'\nGROUP BY\n  Users.ID\n  ,Users.DisplayName\n  ,Users.Reputation\nORDER BY BountyOfferedTotal DESC, Users.ID\n;"},{"QuerySetId":1032536,"Title":"Tumbleweeds and Scholars over the years","Description":null,"QueryBody":"SELECT YEAR(Date), SUM(CASE WHEN Name = 'Scholar' THEN 1 ELSE 0 END) AS Scholars, SUM(CASE WHEN Name = 'Tumbleweed' THEN 1 ELSE 0 END) AS Tumbleweeds, SUM(CASE WHEN Name = 'Lifejacket' THEN 1 ELSE 0 END) AS LJ, SUM(CASE WHEN Name = 'Lifeboat' THEN 1 ELSE 0 END) AS LB FROM Badges WHERE YEAR(Date) < YEAR(CURRENT_TIMESTAMP()) GROUP BY YEAR(Date)","CreationDate":"2019-06-19 13:55:34","validated":true,"QueryBody_Original":"SELECT  year(Date), \n--       sum(iif(Name = 'Nice Answer', 1, 0)) 'Nice Answers',\n       sum(iif(Name = 'Scholar', 1, 0)) Scholars,\n--       sum(iif(Name = 'Teacher', 1, 0)) Teacher,\n       sum(iif(Name = 'Tumbleweed', 1, 0)) Tumbleweeds,\n       sum(iif(Name = 'Lifejacket', 1, 0)) LJ,\n       sum(iif(Name = 'Lifeboat', 1, 0)) LB\nfrom Badges\nwhere year(Date) < year(getdate())\ngroup by year(Date)"},{"QuerySetId":1033605,"Title":"Yet another questions per month stat","Description":null,"QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%M'), 1) AS Month, COUNT(*) AS Count FROM Posts WHERE PostTypeId = 1 GROUP BY DATEFROMPARTS(TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%M'), 1) ORDER BY Month","CreationDate":"2019-04-20 20:14:05","validated":true,"QueryBody_Original":"SELECT \n  DATEFROMPARTS(\n    DATEPART(yyyy, CreationDate),\n    DATEPART(mm, CreationDate),\n    1) AS Month,\n  COUNT(*) AS Count\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY DATEFROMPARTS(\n  DATEPART(yyyy, CreationDate),\n  DATEPART(mm, CreationDate),\n  1)\nORDER BY Month;"},{"QuerySetId":1036156,"Title":"Multiple self answers from asker, sorted by the number of times self-answered","Description":"Multiple self answers from asker, sorted by the number of times self-answered, and filtered to exclude questions prior to Jan 1, 2010. (To avoid questions from 2008 with historical locks.)\n","QueryBody":"SELECT question.Id AS \"Post Link\", question.CreationDate, COUNT(selfAnswer.Id) AS \"Count\" FROM posts AS question INNER JOIN posts AS selfAnswer ON selfAnswer.owneruserid = question.owneruserid AND selfAnswer.parentid = question.id INNER JOIN Users AS users ON users.Id = question.owneruserid WHERE question.posttypeid = 1 AND selfAnswer.posttypeid = 2 GROUP BY question.Id, question.CreationDate HAVING COUNT(DISTINCT selfAnswer.id) > 0 ORDER BY \"Count\" DESC, question.CreationDate DESC LIMIT 1000","CreationDate":"2019-04-22 21:55:38","validated":true,"QueryBody_Original":"SELECT  TOP 1000 question.Id as [Post Link], \n       question.CreationDate,\n       count(selfAnswer.Id) as [Count]\nfrom posts as question\n    inner join posts as selfAnswer\n        on  selfAnswer.owneruserid = question.owneruserid\n        and selfAnswer.parentid = question.id\n        inner join Users as users on users.Id = question.owneruserid\nwhere question.posttypeid = 1\nand selfAnswer.posttypeid = 2\n--and question.CommunityOwnedDate is null\ngroup by question.Id, \n         question.CreationDate\nhaving count(distinct selfAnswer.id) > 0\norder by \n        [Count] DESC,\n        question.CreationDate DESC"},{"QuerySetId":1037485,"Title":"question for a dask tag","Description":null,"QueryBody":"SELECT *, Tags, CreationDate, LastActivityDate, AnswerCount, PostTypeId FROM Posts WHERE Tags LIKE '%dask%' ORDER BY ParentId, Id","CreationDate":"2019-04-29 0:05:10","validated":true,"QueryBody_Original":"SELECT  *, Tags,CreationDate,LastActivityDate,AnswerCount,PostTypeId  \nfrom Posts\nwhere Tags like '%dask%'\norder by ParentId,Id"},{"QuerySetId":1040580,"Title":"Highest viewcounts for bountied questions","Description":null,"QueryBody":"SELECT SUM(v.BountyAmount) AS \"Total Bounties\", COUNT(v.BountyAmount) AS \"Bounties Count\", p.Id AS \"Post Link\", p.ViewCount FROM Posts AS p JOIN Votes AS v ON v.PostId = p.Id WHERE v.VotetypeId = 8 GROUP BY p.Id, p.ViewCount ORDER BY p.ViewCount DESC","CreationDate":"2019-05-01 16:44:11","validated":true,"QueryBody_Original":"SELECT \n  SUM(v.BountyAmount) AS [Total Bounties], COUNT(v.BountyAmount) AS [Bounties Count], p.Id AS [Post Link], p.ViewCount\nFROM Posts p JOIN Votes v ON v.PostId=p.Id\nWHERE v.VotetypeId=8\nGROUP BY p.Id, p.ViewCount\nORDER BY p.ViewCount DESC"},{"QuerySetId":1041065,"Title":"Get all \"Unclear What You're Asking\" with <5 answers","Description":null,"QueryBody":"SELECT p.Id AS \"Post ID\", CONCAT('stackoverflow.com\/q\/', p.Id) AS \"SO Link\", p.Title AS \"Question Title\" FROM Posts AS p JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE p.PostTypeId = 1 \/* 1 = question, 2 = answer *\/ AND ph.PostHistoryTypeId = 10 \/* Closed *\/ AND ph.Comment = 103 \/* \"Unclear what you're asking\" close reason *\/ AND p.AnswerCount <= 5 \/* Less than 5 answers *\/","CreationDate":"2019-05-02 19:31:06","validated":true,"QueryBody_Original":"SELECT  \n  p.Id AS [Post ID],\n  CONCAT('stackoverflow.com\/q\/', p.Id) AS [SO Link],\n  p.Title as [Question Title]\nFROM Posts p\n  JOIN PostHistory ph ON ph.PostId = p.Id\nWHERE \n  p.PostTypeId = 1 --1 = question, 2 = answer\n  AND ph.PostHistoryTypeId = 10 --Closed\n  AND ph.Comment = 103 --\"Unclear what you're asking\" close reason\n  AND p.AnswerCount <= 5 --Less than 5 answers"},{"QuerySetId":1042843,"Title":"Users of one-time badges awarded multiple times","Description":null,"QueryBody":"SELECT name AS \"Badge Name\", badge_count AS \"Badge Count\", userid AS \"User Link\" FROM (SELECT name, userid, COUNT(*) AS badge_count FROM badges WHERE tagbased = 0 AND NOT name IN ('Yearling', 'Caucus', 'Constituent', 'Reviewer', 'Custodian', 'Reversal', 'Steward', 'Not a Robot', 'Census', 'Favorite Question', 'Stellar Question', 'Nice Question', 'Good Question', 'Great Question', 'Announcer', 'Populist', 'Revival', 'Necromancer', 'Popular Question', 'Notable Question', 'Famous Question', 'Guru', 'Booster', 'Publicist', 'Enlightened', 'Nice Answer', 'Good Answer', 'Great Answer') AND NOT name IN ('Autobiographer', 'Curious', 'Inquisitive', 'Socratic', 'Supporter', 'Benefactor') GROUP BY name, userid) AS b INNER JOIN users AS u ON b.userid = u.id WHERE b.badge_count > 1 ORDER BY b.badge_count DESC","CreationDate":"2019-05-08 18:26:04","validated":true,"QueryBody_Original":"SELECT  name as [Badge Name], badge_count as [Badge Count], userid as [User Link]\nfrom (\n  SELECT name, userid, count(*) badge_count\n  from badges\n  where tagbased = 0\n  and name not in ('Yearling','Caucus','Constituent','Reviewer','Custodian','Reversal','Steward','Not a Robot','Census','Favorite Question','Stellar Question','Nice Question','Good Question','Great Question','Announcer','Populist','Revival','Necromancer','Popular Question','Notable Question','Famous Question','Guru','Booster','Publicist','Enlightened','Nice Answer','Good Answer','Great Answer')\n  and name not in ('Autobiographer', 'Curious', 'Inquisitive', 'Socratic', 'Supporter', 'Benefactor')\n  group by name, userid\n) b inner join users u\non b.userid = u.id\nwhere b.badge_count > 1\norder by b.badge_count desc"},{"QuerySetId":1042980,"Title":"5 YEAR TREND FOR NON-EXPERTS","Description":null,"QueryBody":"SELECT * FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE creationdate >= '20130101' AND creationdate < '20130201' AND lastaccessdate >= '20190101' AND reputation >= 551) AND posttypeid = 1 AND creationdate >= '20180101' AND creationdate < '20190101' ORDER BY owneruserid, creationdate","CreationDate":"2019-05-28 20:41:24","validated":true,"QueryBody_Original":"SELECT  * from posts where owneruserid in \n(SELECT id from users where creationdate >= '20130101'and creationdate < '20130201'\nand lastaccessdate >= '20190101'\nand reputation >= 551\n)\nand posttypeid = 1\nand creationdate >= '20180101'and creationdate < '20190101'\norder by owneruserid, creationdate"},{"QuerySetId":1050819,"Title":"Produces a histogram of the number of users involved in closing questions as a duplicate (ruling out OP-accepted duplicates and gold-badge closures) over the past three years","Description":"Produces a histogram of the number of users involved in closing questions as a duplicate (ruling out OP-accepted duplicates and gold-badge closures) over the past three years","QueryBody":"SELECT NumberOfUsersClosing, COUNT(*) FROM (SELECT LEN(Text) - LEN(REPLACE(Text, '\"Id\"', '\"d\"')) AS NumberOfUsersClosing FROM PostHistory WHERE Comment = '101' AND CreationDate > DATEADD(year, -3, GETDATE()) AND NOT Text LIKE '%GoldTagBadge%' AND NOT Text LIKE '%DuplicateApprovedByAsker%') AS counts GROUP BY NumberOfUsersClosing ORDER BY NumberOfUsersClosing","CreationDate":"2019-05-14 2:53:54","validated":true,"QueryBody_Original":"SELECT \nNumberOfUsersClosing,\nCOUNT(*)\nFROM \n(\nSELECT\n  LEN(Text)-LEN(REPLACE(Text,'\"Id\"','\"d\"')) AS NumberOfUsersClosing\nFROM PostHistory\nWHERE Comment = '101'\n  AND CreationDate > DATEADD(year,-3,GETDATE())\n  AND Text NOT LIKE '%GoldTagBadge%'\n  AND Text NOT LIKE '%DuplicateApprovedByAsker%'\n) AS counts\nGROUP BY NumberOfUsersClosing\nORDER BY NumberOfUsersClosing"},{"QuerySetId":1053212,"Title":"Users with the highest average question score","Description":null,"QueryBody":"SELECT MAX(U.DisplayName), COUNT(P.Id) AS NumPosts, AVG(P.Score) AS AvgScore FROM Users AS U INNER JOIN Posts AS P ON P.OwnerUserId = U.Id WHERE P.PostTypeId = 1 GROUP BY U.Id ORDER BY AvgScore DESC","CreationDate":"2019-05-18 20:23:47","validated":true,"QueryBody_Original":"SELECT  MAX(U.DisplayName), COUNT(P.Id) AS NumPosts, AVG(P.Score) AS AvgScore FROM Users U\nINNER JOIN Posts P\nON P.OwnerUserId = U.Id\nWHERE P.PostTypeId = 1\nGROUP BY U.Id\nORDER BY AvgScore DESC"},{"QuerySetId":1054209,"Title":"Number of posts with \"API\" in their title","Description":null,"QueryBody":"SELECT COUNT(DISTINCT Id) FROM Posts AS p WHERE p.PostTypeId = 1 AND Title LIKE '% API %'","CreationDate":"2019-05-22 2:34:47","validated":true,"QueryBody_Original":"SELECT  count(distinct Id)\nfrom Posts p\nwhere p.PostTypeId = 1\nand Title like '% API %'"},{"QuerySetId":1060212,"Title":"Posts with the longest close\/reopen\/delete\/undelete history","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COUNT(*) AS Count FROM PostHistory WHERE PostHistoryTypeId BETWEEN 10 AND 13 GROUP BY PostId ORDER BY Count DESC, PostId LIMIT 1000","CreationDate":"2019-06-03 18:33:52","validated":true,"QueryBody_Original":"SELECT  TOP 1000 PostId AS [Post Link], COUNT(*) AS Count\nFROM PostHistory\nWHERE PostHistoryTypeId BETWEEN 10 AND 13\nGROUP BY PostId\nORDER BY Count DESC, PostId"},{"QuerySetId":1061632,"Title":"Active people from Greece before 2019","Description":null,"QueryBody":"SELECT COUNT(*) FROM users WHERE LastAccessDate >= '2018-01-01' AND CreationDate <= '2019-01-01' AND Location LIKE '%greece%' COLLATE Latin1_General_CI_AI_KS_WS","CreationDate":"2019-06-07 1:53:18","validated":true,"QueryBody_Original":"SELECT  count(*) from users where LastAccessDate >= '2018-01-01' and CreationDate <= '2019-01-01' and Location like '%greece%' COLLATE Latin1_General_CI_AI_KS_WS;"},{"QuerySetId":1065552,"Title":"Short comments containing a given string","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Text, Score, Comments.CreationDate, Users.DisplayName, Users.Reputation FROM Comments INNER JOIN Users ON Comments.UserId = Users.Id WHERE Text LIKE '%##tstring?bro##%' AND LENGTH(Text) < 20 ORDER BY CreationDate DESC","CreationDate":"2019-06-15 12:16:03","validated":true,"QueryBody_Original":"SELECT  \n  PostId As [Post Link],\n  Text,\n  Score,\n  Comments.CreationDate,\n  Users.DisplayName,\n  Users.Reputation\nFROM \n  Comments inner join \n  Users on Comments.UserId = Users.Id\nWHERE Text LIKE '%##tstring?bro##%' AND LEN(Text) < 20 \nORDER BY CreationDate DESC"},{"QuerySetId":1068407,"Title":"Gold, SIlver and Bronze Badges for Node.js Worldwide Chronological","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Date) AS \"Badge #\", Users.Id AS \"User Link\", Reputation, CASE WHEN Class = 1 THEN 'Gold' WHEN Class = 2 THEN 'Silver' WHEN Class = 3 THEN 'Bronze' ELSE 'Unknown' END AS \"Badge\", Name AS \"Badge for\", Date AS \"Badge earned\", Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 AND Badges.name = 'node.js' ORDER BY \"Badge earned\"","CreationDate":"2019-06-21 14:53:14","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Date ASC) AS [Badge #],\n    Users.Id AS [User Link],\n    Reputation,\n       case \n         when Class = 1 then 'Gold' \n         when Class = 2 then 'Silver' \n         when Class = 3 then 'Bronze' \n         else 'Unknown' \n       end as \"Badge\",\n    Name as \"Badge for\",\n    Date as \"Badge earned\",\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    AND Badges.name = 'node.js'\nORDER BY\n    \"Badge earned\" ASC;"},{"QuerySetId":1069449,"Title":"Users where location = melbourne","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('melbourne') ORDER BY Reputation DESC","CreationDate":"2019-08-14 14:39:08","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Location,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('melbourne')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1073345,"Title":"Top 200 users in Uruguay","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", AboutMe, Reputation FROM Users WHERE LOWER(Location) LIKE '%uruguay%' OR UPPER(Location) LIKE '%URU' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2019-07-03 21:56:46","validated":true,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    AboutMe,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%uruguay%'\n    OR UPPER(Location) LIKE '%URU'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1074636,"Title":"What is the intraday activity profile like for CV","Description":"https:\/\/stats.meta.stackexchange.com\/questions\/1561\/what-is-the-intraday-activity-profile-like-for-cv\/5706#5706","QueryBody":"SELECT TIME_TO_STR(creationdate, '%I') AS \"hour\", COUNT(*) AS \"#all\", SUM(CASE WHEN posttypeid = 1 THEN 1 ELSE 0 END) AS \"#questions\", SUM(CASE WHEN posttypeid = 2 THEN 1 ELSE 0 END) AS \"#answers\" FROM posts WHERE posttypeid IN (1, 2) GROUP BY TIME_TO_STR(creationdate, '%I') ORDER BY \"hour\"","CreationDate":"2019-07-07 15:40:44","validated":true,"QueryBody_Original":"SELECT  datepart(hh, creationdate) [hour]\n     , count(*) [#all]\n     , sum(case when posttypeid = 1 then 1 else 0 end) [#questions]\n     , sum(case when posttypeid = 2 then 1 else 0 end) [#answers]\nfrom posts\nwhere posttypeid in (1,2)\ngroup by datepart(hh, creationdate)\norder by [hour]"},{"QuerySetId":1075252,"Title":"Top SO users from Turkey","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User_ID\", (CASE WHEN DisplayName LIKE '%arbar%zha%' THEN '[| ' + DisplayName + ' |]' ELSE DisplayName END) AS DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%turke%' OR LOWER(Location) LIKE '%t\u00fcrki%' OR LOWER(Location) LIKE '%turki%') ORDER BY Reputation DESC LIMIT 1500","CreationDate":"2020-10-19 16:56:44","validated":true,"QueryBody_Original":"SELECT  TOP 1500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id as [User_ID], \n    (case when DisplayName LIKE '%arbar%zha%' then \n      '[| '+DisplayName+' |]'\n     else\n       DisplayName\n     end\n     ) as\n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%turke%' OR\n     LOWER(Location) LIKE '%t\u00fcrki%' OR\n     LOWER(Location) LIKE '%turki%'  \n    )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1075294,"Title":"Days to Close a Question by Creation Month","Description":null,"QueryBody":"SELECT date1, AVG(diff1) AS cnt FROM (SELECT DATEDIFF(d.ClosedDate, d.CreationDate) AS \"diff1\", TIME_TO_STR(d.CreationDate, '%y-%m') AS \"date1\", TIME_TO_STR(d.ClosedDate, '%y-%m') AS \"date2\", (d.Id) AS id FROM Posts AS d \/* d=duplicate *\/ LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/) AS t1 GROUP BY date1 ORDER BY date1","CreationDate":"2019-07-09 15:23:21","validated":true,"QueryBody_Original":"SELECT  date1, AVG(diff1) as cnt\nFROM (\n\n  SELECT \n    DATEDIFF(day, d.CreationDate, d.ClosedDate) as [diff1],\n    FORMAT (d.CreationDate, 'yy-MM') as [date1],\n    FORMAT (d.ClosedDate, 'yy-MM') as [date2],\n    (d.Id) as id\n  FROM Posts d  -- d=duplicate\n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    AND ph.PostHistoryTypeId = 10  -- 10=Post Closed\n    \n  ) as t1\ngroup by date1\norder by date1"},{"QuerySetId":1075311,"Title":"Posts with links to files with particular extension (by CreationDate, only body)","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE Body LIKE '%http%##ext?jpg##%' AND CreationDate >= '##Date1?2019-01-01##' AND CreationDate <= '##Date2?2020-01-01##' ORDER BY Id","CreationDate":"2019-07-09 15:41:06","validated":true,"QueryBody_Original":"SELECT  Body\nFROM Posts\nWHERE Body LIKE '%http%##ext?jpg##%'\n  AND CreationDate >= '##Date1?2019-01-01##' AND CreationDate <= '##Date2?2020-01-01##'\nORDER BY Id ASC"},{"QuerySetId":1077142,"Title":"How Unsung am I? (Search by Display Name)","Description":null,"QueryBody":"SELECT COUNT(a.Id) AS \"Accepted Answers\", SUM(CASE WHEN a.Score = 0 THEN 0 ELSE 1 END) AS \"Scored Answers\", SUM(CASE WHEN a.Score = 0 THEN 1 ELSE 0 END) AS \"Unscored Answers\", SUM(CASE WHEN a.Score = 0 THEN 1 ELSE 0 END) * 1000 \/ COUNT(a.Id) \/ 10.0 AS \"Percentage Unscored\" FROM Posts AS q INNER JOIN Posts AS a ON a.Id = q.AcceptedAnswerId INNER JOIN Users AS u ON u.Id = a.OwnerUserId WHERE a.CommunityOwnedDate IS NULL AND a.OwnerUserId = u.Id AND q.OwnerUserId <> u.Id AND a.postTypeId = 2 AND u.DisplayName = '##DisplayName##'","CreationDate":"2019-07-16 13:23:31","validated":true,"QueryBody_Original":"SELECT \n    count(a.Id) as [Accepted Answers],\n    sum(case when a.Score = 0 then 0 else 1 end) as [Scored Answers],  \n    sum(case when a.Score = 0 then 1 else 0 end) as [Unscored Answers],\n    sum(CASE WHEN a.Score = 0 then 1 else 0 end)*1000 \/ count(a.Id) \/ 10.0 as [Percentage Unscored]\nfrom\n    Posts q\n  inner join Posts a on a.Id = q.AcceptedAnswerId\n  inner join Users u on u.Id = a.OwnerUserId\n  \nwhere\n      a.CommunityOwnedDate is null\n  and a.OwnerUserId = u.Id\n  and q.OwnerUserId != u.Id\n  and a.postTypeId = 2\n  and u.DisplayName = '##DisplayName##'"},{"QuerySetId":1077335,"Title":"top users in el salvador","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##country##%') ORDER BY Reputation DESC","CreationDate":"2019-07-17 1:39:51","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##country##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1077511,"Title":"Average Votes Count based on Comments Count on Question","Description":null,"QueryBody":"SELECT p.CommentCount, AVG(CAST(p.Score AS FLOAT)) AS AvgScore FROM posts AS p GROUP BY CommentCount ORDER BY CommentCount","CreationDate":"2019-07-17 18:33:18","validated":true,"QueryBody_Original":"SELECT  p.CommentCount, AVG(CAST(p.Score as Float)) as AvgScore\nFrom posts p\ngroup by CommentCount\norder by CommentCount ASC"},{"QuerySetId":1079713,"Title":"Questions with the most answers by a single user","Description":null,"QueryBody":"SELECT ParentId AS \"Post Link\", OwnerUserId AS \"User Link\", CreationDate, COUNT(*) FROM Posts AS a WHERE PostTypeId = 2 AND OwnerUserId <> -1 GROUP BY ParentId, OwnerUserId, CreationDate ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2019-07-23 19:29:41","validated":true,"QueryBody_Original":"SELECT  TOP 100 ParentId AS [Post Link], OwnerUserId AS [User Link],\n  CreationDate, COUNT(*)\n  FROM Posts AS a\n  WHERE PostTypeId = 2 AND OwnerUserId != -1\n  GROUP BY ParentId, OwnerUserId, CreationDate\n  ORDER BY COUNT(*) DESC"},{"QuerySetId":1081271,"Title":"Number of post history changes in the last year","Description":null,"QueryBody":"SELECT COUNT(*) FROM PostHistory\/* Ignore Community user *\/  WHERE CreationDate > DATEADD(year, -1, GETDATE()) AND UserId > -1","CreationDate":"2019-07-27 8:40:28","validated":true,"QueryBody_Original":"SELECT  count(*) FROM PostHistory\nWHERE CreationDate > DATEADD(year,-1,GETDATE())\n-- Ignore Community user\nAND UserId > -1"},{"QuerySetId":1082169,"Title":"Users got the most downs","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", COUNT(*) AS Count FROM Posts, Votes WHERE Posts.Id = Votes.PostId AND Votes.VoteTypeId = 3 AND Posts.OwnerUserId > 0 GROUP BY Posts.OwnerUserId ORDER BY Count DESC, Posts.OwnerUserId LIMIT 100","CreationDate":"2019-07-29 13:31:27","validated":true,"QueryBody_Original":"SELECT  TOP 100 Posts.OwnerUserId AS [User Link], COUNT(*) AS Count\nFROM Posts, Votes\nWHERE\n  Posts.Id = Votes.PostId\n  AND\n  Votes.VoteTypeId = 3\n  AND\n  Posts.OwnerUserId > 0\nGROUP BY Posts.OwnerUserId\nORDER BY Count DESC, Posts.OwnerUserId"},{"QuerySetId":1083126,"Title":"get question bodies and tags in specific period","Description":null,"QueryBody":"SELECT Body, Tags FROM Posts\/* adjust! *\/ \/* adjust! *\/  WHERE CreationDate > '2018-08-01' AND CreationDate < '2019-08-01' AND Tags <> '' LIMIT 1000000 \/* adjust! *\/","CreationDate":"2019-07-30 18:12:56","validated":true,"QueryBody_Original":"SELECT  \n   TOP 1000000                        -- adjust!\n   Body, Tags  \nFROM Posts \nWHERE \n   CreationDate>'2018-08-01' and      -- adjust!\n   CreationDate<'2019-08-01' and      -- adjust!\n   Tags <> ''"},{"QuerySetId":1084525,"Title":"Average gained rep by questions and answers","Description":"It counts only accept\/up\/down votes on not deleted posts. PostTypeId = 1 means a question. PostTypeId = 2 means an answer.","QueryBody":"SELECT AVG(1.0 * CASE WHEN Votes.VoteTypeId = 1 THEN 15 WHEN Votes.VoteTypeId = 3 THEN -2 WHEN Posts.PostTypeId = 1 THEN 5 ELSE 10 END) AS Rep, Posts.PostTypeId FROM Posts, Votes WHERE Votes.PostId = Posts.Id AND Votes.VoteTypeId <= 3 AND Posts.PostTypeId <= 2 GROUP BY Posts.PostTypeId","CreationDate":"2019-07-31 23:28:01","validated":true,"QueryBody_Original":"SELECT \n  AVG(1.0 *\n    CASE\n      WHEN Votes.VoteTypeId = 1 THEN 15\n      WHEN Votes.VoteTypeId = 3 THEN -2\n      WHEN Posts.PostTypeId = 1 THEN 5\n      ELSE 10\n    END) AS Rep,\n  Posts.PostTypeId\nFROM Posts, Votes\nWHERE\n  Votes.PostId = Posts.Id\n  AND\n  Votes.VoteTypeId <= 3\n  AND\n  Posts.PostTypeId <= 2\nGROUP BY Posts.PostTypeId"},{"QuerySetId":1085709,"Title":"Find posts with specific text","Description":null,"QueryBody":"SELECT p.CreationDate AS \"Date\", u.Id AS \"User ID\", u.DisplayName AS \"User Name\", p.Id AS \"Post Link\" FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.Body LIKE '%##SpecifiedText##%'","CreationDate":"2019-08-05 0:57:55","validated":true,"QueryBody_Original":"SELECT  \n  p.CreationDate AS \"Date\", \n  u.Id AS \"User ID\", \n  u.DisplayName AS \"User Name\", \n  p.Id AS [Post Link]\nFROM Posts p\n  JOIN Users u ON u.Id = p.OwnerUserId\nWHERE p.Body LIKE '%##SpecifiedText##%'"},{"QuerySetId":1086998,"Title":"Count of first-posts by month","Description":null,"QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%M'), 1) AS Month, COUNT(*) AS Count FROM Posts WHERE Id IN (SELECT MIN(Id) AS Id FROM Posts WHERE OwnerUserId > 0 GROUP BY OwnerUserId) GROUP BY DATEFROMPARTS(TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%M'), 1) ORDER BY Month DESC","CreationDate":"2019-08-08 1:47:28","validated":true,"QueryBody_Original":"SELECT \n  DATEFROMPARTS(\n    DATEPART(yyyy, CreationDate),\n    DATEPART(mm, CreationDate),\n    1) AS Month,\n    COUNT(*) AS Count\nFROM Posts\nWHERE Id IN (\n  SELECT MIN(Id) AS Id\n  FROM Posts\n  WHERE OwnerUserId > 0\n  GROUP BY OwnerUserId\n)\nGROUP BY DATEFROMPARTS(\n  DATEPART(yyyy, CreationDate),\n  DATEPART(mm, CreationDate),\n  1)\nORDER BY Month DESC;"},{"QuerySetId":1087081,"Title":"All Posts and answers with less then 300 characters after 5\/10\/2015","Description":null,"QueryBody":"SELECT Id, CreationDate, ParentId, PostTypeId, Body FROM Posts AS p WHERE LENGTH(Body) <= 300 AND p.CreationDate > '2015-05-10'","CreationDate":"2019-08-08 13:26:23","validated":true,"QueryBody_Original":"SELECT  Id, CreationDate, ParentId, PostTypeId, Body from Posts p WHERE len(Body) <= 300 and p.CreationDate > '2015-05-10'"},{"QuerySetId":1088555,"Title":"All answers with specific tag","Description":null,"QueryBody":"SELECT q.title AS Question, a.body AS Answer FROM posts AS q INNER JOIN posts AS a ON q.id = a.parentid WHERE q.tags LIKE '%<##TagName##>%' ORDER BY a.score DESC","CreationDate":"2020-07-08 22:40:33","validated":true,"QueryBody_Original":"SELECT  q.title as Question, a.body as Answer\nFROM posts q INNER JOIN posts a ON q.id = a.parentid\nWHERE q.tags LIKE '%<##TagName##>%' \nORDER BY a.score DESC"},{"QuerySetId":1089892,"Title":"All answers with links to indianscriptures.com","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Body FROM Posts WHERE LOWER(Body) LIKE '%www.indianscriptures.com%pdf%' \/* Link to PDF *\/ OR LOWER(Body) LIKE '%www.indianscriptures.com%chapter%' \/* Link to Chapter\/Topic *\/ ORDER BY CreationDate","CreationDate":"2019-08-13 4:59:29","validated":true,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  CreationDate,\n  Body\nFROM \n  Posts\nWHERE \n  lower(Body) LIKE '%www.indianscriptures.com%pdf%'      -- Link to PDF\n  OR\n  lower(Body) LIKE '%www.indianscriptures.com%chapter%'  -- Link to Chapter\/Topic\n\nORDER BY CreationDate ASC"},{"QuerySetId":1091707,"Title":"Questions in need of a friendly\/helpful comment","Description":null,"QueryBody":"SELECT q.Title, q.Tags, 'https:\/\/codereview.stackexchange.com\/questions\/' + CAST(q.Id AS TEXT) AS URL FROM Posts AS q WHERE (SELECT COUNT(*) FROM Posts AS a WHERE a.ParentId = q.Id AND a.Score > 0) = 0 AND (SELECT COUNT(*) FROM Comments AS c WHERE c.PostId = q.Id) = 0 AND q.Score <= 0 AND q.CommunityOwnedDate IS NULL AND q.ClosedDate IS NULL AND q.ParentId IS NULL AND q.AcceptedAnswerId IS NULL AND q.LastActivityDate <= DATEADD(mm, -1, GETDATE()) AND q.LastActivityDate >= DATEADD(mm, -2, GETDATE()) ORDER BY CreationDate DESC","CreationDate":"2019-08-16 1:02:14","validated":true,"QueryBody_Original":"SELECT  \n      q.Title  \n    , q.Tags\n    , 'https:\/\/codereview.stackexchange.com\/questions\/' + CAST(q.Id AS VARCHAR) as URL\nfrom Posts q\nwhere \n    (   SELECT count(*) \n        from Posts a \n        where a.ParentId = q.Id and a.Score > 0\n    ) = 0\n    and \n    (   SELECT count(*) \n        from Comments c \n        where c.PostId = q.Id\n    ) = 0\n    and q.Score <= 0\n    and q.CommunityOwnedDate is null \n    and q.ClosedDate is null \n    and q.ParentId is null \n    and q.AcceptedAnswerId is null\n    and q.LastActivityDate <= DATEADD(mm, -1, GETDATE())\n    and q.LastActivityDate >= DATEADD(mm, -2, GETDATE())\norder by CreationDate desc\n;"},{"QuerySetId":1093251,"Title":"Number of questions and answers per user","Description":null,"QueryBody":"SELECT COUNT(CASE WHEN p.PostTypeId = 1 THEN 1 END) AS \"Questions\", COUNT(CASE WHEN p.PostTypeId = 2 THEN 1 END) AS \"Answers\" FROM Posts AS p WHERE p.PostTypeId = 1 OR p.PostTypeId = 2 GROUP BY p.OWNERUSERID","CreationDate":"2019-08-19 18:35:28","validated":true,"QueryBody_Original":"SELECT  COUNT(CASE WHEN p.PostTypeId=1 THEN 1 END) as [Questions],\n       COUNT(CASE WHEN p.PostTypeId=2 THEN 1 END) as [Answers]\nFROM Posts p\nWHERE p.PostTypeId = 1 OR p.PostTypeId = 2\nGROUP BY p.OWNERUSERID"},{"QuerySetId":1094697,"Title":"Question score vs. highest voted Answer score","Description":null,"QueryBody":"SELECT q.Score AS \"Q-Score\", a.Score AS \"A-Score\" FROM Posts AS q INNER JOIN (SELECT DISTINCT a.ParentId, MAX(a.Score) AS \"Score\" FROM Posts AS a WHERE a.PostTypeId = 2 \/* answers *\/ GROUP BY a.ParentId) AS a ON q.Id = a.ParentId WHERE q.PostTypeId = 1 \/* questions *\/ AND q.ClosedDate IS NULL \/* not closed *\/","CreationDate":"2019-08-22 12:33:23","validated":true,"QueryBody_Original":"SELECT  q.Score AS [Q-Score], a.Score as [A-Score]\nFROM Posts q\nINNER JOIN\n (SELECT DISTINCT a.ParentId, MAX(a.Score) AS [Score]\n FROM Posts a\n WHERE a.PostTypeId = 2 -- answers\n GROUP BY a.ParentId) a\nON q.Id = a.ParentId\nWHERE q.PostTypeId = 1 -- questions\n AND q.ClosedDate is null -- not closed"},{"QuerySetId":1095972,"Title":"Watson Studio questions - July 2019","Description":null,"QueryBody":"SELECT Id, Body, CreationDate, ViewCount, Tags FROM Posts WHERE Tags LIKE '%watson-studio%' AND ParentId IS NULL AND CreationDate > '2019-07-01' AND CreationDate <= '2019-07-31' ORDER BY CreationDate DESC","CreationDate":"2019-08-25 1:01:49","validated":true,"QueryBody_Original":"SELECT  Id, Body, CreationDate, ViewCount, Tags from Posts\nwhere Tags like '%watson-studio%' \nand ParentId is null\nand CreationDate > '2019-07-01'\nand CreationDate <= '2019-07-31'\norder by CreationDate desc"},{"QuerySetId":1102871,"Title":"Selects all posts where the number of upvotes is greater than the number of downvotes, but where the number of downvotes is at least half the number of upvotes. The result is ordered by the number of upvotes (the highest on top).","Description":"Selects all posts where the number of upvotes is greater than the number of downvotes, but where the number of downvotes is at least half the number of upvotes. The result is ordered by the number of upvotes (the highest on top).","QueryBody":"SELECT CONCAT('https:\/\/stackoverflow.com\/a\/', PostId), Upvotes, Downvotes FROM (SELECT PostId, Upvotes, Downvotes, 2 * Downvotes \/ NULLIF(Upvotes, 0) AS Ratio FROM (SELECT PostId, Upvotes = SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END), Downvotes = SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) FROM Votes WHERE VoteTypeId IN (2, 3) GROUP BY PostId) AS VoteCounts INNER JOIN Posts ON Posts.Id = VoteCounts.PostId WHERE Upvotes > 0 AND Downvotes > 0) AS Scores WHERE Ratio >= 1 ORDER BY Upvotes DESC","CreationDate":"2019-09-10 17:55:42","validated":true,"QueryBody_Original":"SELECT  concat('https:\/\/stackoverflow.com\/a\/', PostId), Upvotes, Downvotes\nfrom (\n    SELECT PostId, Upvotes, Downvotes, 2 * Downvotes \/ nullif(Upvotes, 0) as Ratio\n    from (\n        SELECT\n            PostId, \n            Upvotes = sum(case when VoteTypeId = 2 then 1 else 0 end),\n            Downvotes = sum(case when VoteTypeId = 3 then 1 else 0 end)\n        from Votes\n        where VoteTypeId in (2,3)\n        group by PostId\n    ) as VoteCounts inner join Posts on Posts.Id = VoteCounts.PostId\n    where Upvotes > 0 and Downvotes > 0\n) as Scores\nwhere Ratio >= 1\norder by Upvotes desc"},{"QuerySetId":1113107,"Title":"High reputation users who've been inactive for at least 12 months","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, CAST(LastAccessDate AS DATE) AS LastActive FROM Users WHERE Reputation > 25000 AND DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) > 12 ORDER BY LastAccessDate DESC","CreationDate":"2019-09-23 22:22:18","validated":true,"QueryBody_Original":"SELECT \nId AS [User Link],\nReputation,\nCAST(LastAccessDate AS DATE) AS LastActive\nFROM Users\nWHERE Reputation > 25000\nAND DATEDIFF(month, LastAccessDate, GETDATE()) > 12\nORDER BY LastAccessDate DESC"},{"QuerySetId":1115525,"Title":"Answers to Duplicate Questions by User","Description":null,"QueryBody":"SELECT \"Post Link\" = p.Id, a.Score, Answer = CASE WHEN p.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END FROM Posts AS p INNER JOIN Posts AS a ON a.ParentId = p.Id WHERE EXISTS(SELECT 1 FROM PostLinks AS pl WHERE pl.PostId = p.Id AND pl.LinkTypeId = 3)","CreationDate":"2019-09-26 23:44:09","validated":true,"QueryBody_Original":"SELECT     [Post Link] = p.Id\n  , a.Score\n  , Answer    = case when p.AcceptedAnswerId = a.Id then 1 else 0 end\nfrom Posts p\n  inner join Posts a\n    on a.ParentId = p.Id\nwhere exists (\n  SELECT 1\n  from PostLinks pl\n  where pl.PostId = p.Id\n    and pl.LinkTypeId = 3\n  )"},{"QuerySetId":1119328,"Title":"Users with most accepted answers","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", COUNT(*) AS Num FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id INNER JOIN Users ON Users.Id = Posts.OwnerUserId WHERE Votes.VoteTypeId = 1 AND Posts.PostTypeId = 2 GROUP BY Posts.OwnerUserId ORDER BY Num DESC","CreationDate":"2019-10-03 3:59:36","validated":true,"QueryBody_Original":"SELECT Posts.OwnerUserId AS [User Link],\n       COUNT(*) AS Num\nFROM Posts\nINNER JOIN Votes ON Votes.PostId = Posts.Id\nINNER JOIN Users ON Users.Id = Posts.OwnerUserId\nWHERE Votes.VoteTypeId = 1\n  AND Posts.PostTypeId = 2\nGROUP BY Posts.OwnerUserId\nORDER BY Num DESC"},{"QuerySetId":1121195,"Title":"Questions with no upvoted answers","Description":null,"QueryBody":"SELECT q.ID AS \"Post Link\" FROM Posts AS q WHERE PostTypeId = 1 AND Score > 0 AND ClosedDate IS NULL AND (SELECT COUNT(*) FROM Posts AS a WHERE a.ParentId = q.Id AND a.Score > -1) = 0 AND AcceptedAnswerId IS NULL ORDER BY CreationDate","CreationDate":"2019-10-06 20:49:17","validated":true,"QueryBody_Original":"SELECT  q.ID AS [Post Link]\nFROM Posts q \nWHERE PostTypeId = 1 \nAND Score > 0 \nAND ClosedDate is null \nAND (SELECT count(*) from Posts a where a.ParentId = q.Id and a.Score > -1) = 0\nAND AcceptedAnswerId is null \nORDER BY CreationDate asc"},{"QuerySetId":1122254,"Title":"Top 100 Lowest Rated Posts","Description":null,"QueryBody":"SELECT Posts.id AS \"Post Link\", Posts.score AS \"Score\" FROM \"Posts\" WHERE \"PostTypeId\" = 1 AND \"Score\" < 0 ORDER BY \"Score\" LIMIT 100","CreationDate":"2019-10-09 3:08:54","validated":true,"QueryBody_Original":"SELECT  top(100) Posts.id as [Post Link], Posts.score as [Score] from [Posts]\nwhere [PostTypeId] = 1 and [Score] < 0\norder by [Score]"},{"QuerySetId":1122552,"Title":"Number of Queries in 2017","Description":null,"QueryBody":"SELECT COUNT(Id) AS \"COUNT_ID\" FROM Posts WHERE YEAR(CreationDate) = 2017 GROUP BY Tags ORDER BY COUNT_ID DESC","CreationDate":"2019-10-10 8:35:56","validated":true,"QueryBody_Original":"SELECT Count(Id) AS 'COUNT_ID' FROM Posts \nWHERE Year(CreationDate) = 2017\nGROUP BY Tags\nORDER BY COUNT_ID DESC"},{"QuerySetId":1122854,"Title":"posts up and down votes","Description":null,"QueryBody":"SELECT PostId, up = SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END), down = SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) FROM Votes WHERE VoteTypeId IN (2, 3) GROUP BY PostId","CreationDate":"2019-10-09 22:38:30","validated":true,"QueryBody_Original":"SELECT \n    PostId, \n    up = sum(case when VoteTypeId = 2 then 1 else 0 end), \n    down = sum(case when VoteTypeId = 3 then 1 else 0 end)\nfrom Votes\nwhere VoteTypeId in (2,3)\ngroup by PostId"},{"QuerySetId":1123289,"Title":"Top 10 shortest questions with non-negative score","Description":null,"QueryBody":"SELECT LENGTH(p.body) AS len, p.body, p.id FROM Posts AS p WHERE p.score > -1 AND PostTypeId = 1 AND LENGTH(p.body) > 0 ORDER BY len LIMIT 10","CreationDate":"2019-10-10 14:37:58","validated":true,"QueryBody_Original":"SELECT  TOP 10 LEN(p.body) as len, p.body, p.id\nfrom Posts as p\nwhere p.score>-1 AND PostTypeId=1 AND LEN(p.body)>0\nORDER BY len asc"},{"QuerySetId":1123888,"Title":"User's Favorited Posts. Ordered by Date Favorited (DESC).","Description":null,"QueryBody":"SELECT postid AS \"Post Link\", v.creationdate AS \"Favorited on\" FROM votes AS v INNER JOIN posts AS p ON p.id = v.postid WHERE userid = 25197 AND votetypeid = 5 ORDER BY v.creationdate DESC","CreationDate":"2019-10-11 9:03:35","validated":true,"QueryBody_Original":"SELECT  postid as [Post Link] \n     , v.creationdate as [Favorited on]\nfrom votes v \ninner join posts p on p.id = v.postid\nwhere userid = 25197\nand votetypeid = 5 \norder by v.creationdate desc"},{"QuerySetId":1125068,"Title":"Answers that are linked by their parent post","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.creationdate, pl.relatedpostid AS \"Post Link\", CASE pl.linktypeid WHEN 1 THEN 'Mentioned' WHEN 3 THEN 'Duplicate' ELSE '' END AS \"Link type\" FROM posts AS p LEFT OUTER JOIN postlinks AS pl ON pl.postid = COALESCE(p.parentid, p.id) AND posttypeid = 2 \/* A *\/","CreationDate":"2019-10-14 13:50:16","validated":true,"QueryBody_Original":"SELECT  p.id as [Post Link]\n     , p.creationdate\n     , pl.relatedpostid as [Post Link]\n     , case pl.linktypeid \n       when 1 then 'Mentioned'\n       when 3 then 'Duplicate'\n       else ''\n       end [Link type]\n     \nfrom posts p\nleft outer join postlinks pl on pl.postid = coalesce(p.parentid, p.id)\nand posttypeid = 2 -- A"},{"QuerySetId":1125135,"Title":"Questions and answers per year","Description":null,"QueryBody":"SELECT Date AS \"Dates\", SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Questions\", SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Answers\" FROM (SELECT YEAR(CreationDate) AS \"Date\", PostTypeId FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS Sel GROUP BY Date ORDER BY Date DESC","CreationDate":"2019-10-14 16:16:35","validated":true,"QueryBody_Original":"SELECT \n  Date AS [Dates],\n  SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS [Questions],\n  SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS [Answers]\nFROM\n(\n  SELECT\n    YEAR(CreationDate) AS [Date],\n    PostTypeId\n  FROM\n    Posts\n  WHERE\n    PostTypeId = 1 or PostTypeId = 2\n) AS Sel\nGROUP BY\n  Date\nORDER BY\n  Date DESC"},{"QuerySetId":1125353,"Title":"Search for \"grimble\" in user profiles","Description":null,"QueryBody":"SELECT aboutme, id AS \"User Link\" FROM users WHERE aboutme LIKE '%grimble%'","CreationDate":"2019-10-21 17:12:30","validated":true,"QueryBody_Original":"SELECT  aboutme, id as [User Link] from users \nwhere aboutme like '%grimble%'"},{"QuerySetId":1125373,"Title":"TOP 50 StackOverflow user in Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS PositionNumber, Id AS \"User Link\", DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%Bangladesh%') ORDER BY Reputation DESC LIMIT 50","CreationDate":"2019-10-14 23:20:27","validated":true,"QueryBody_Original":"SELECT  TOP(50) ROW_NUMBER() OVER (ORDER BY Reputation Desc) as PositionNumber, Id [User Link], DisplayName, Reputation, WebsiteUrl, Location\nFrom Users\nWhere LOWER(Location) LIKE LOWER('%Bangladesh%')\nORDER BY\nReputation DESC;"},{"QuerySetId":1126489,"Title":"Most upvoted questions tagged with \"tensorflow\"","Description":null,"QueryBody":"SELECT COUNT(v.postid) AS \"Vote count\", v.postid AS \"Post Link\", p.body FROM votes AS v INNER JOIN posts AS p ON p.id = v.postid WHERE p.tags LIKE '%tensorflow%' GROUP BY v.postid, p.body ORDER BY 'Vote count' DESC LIMIT 100","CreationDate":"2020-08-11 9:26:28","validated":true,"QueryBody_Original":"SELECT  TOP 100 count(v.postid) AS 'Vote count', v.postid AS [Post Link],p.body\nFROM votes v \nINNER JOIN posts p on p.id=v.postid\nWHERE p.tags LIKE '%tensorflow%'\nGROUP BY v.postid,p.body\nORDER BY 'Vote count' DESC"},{"QuerySetId":1131594,"Title":"Number of up- and downvotes per day","Description":null,"QueryBody":"SELECT LEFT(CAST(TIME_TO_STR(CreationDate, '%Y%m%d') AS TEXT(30)), 6) AS \"CreationDate\", SUM(CASE VoteTypeId WHEN 2 THEN 1 ELSE 0 END) AS \"Upvotes\", SUM(CASE VoteTypeId WHEN 3 THEN 1 ELSE 0 END) AS \"Downvotes\" FROM Votes WHERE VoteTypeId IN (2, 3) GROUP BY LEFT(CAST(TIME_TO_STR(CreationDate, '%Y%m%d') AS TEXT(30)), 6) ORDER BY LEFT(CAST(TIME_TO_STR(CreationDate, '%Y%m%d') AS TEXT(30)), 6)","CreationDate":"2019-10-23 19:22:09","validated":true,"QueryBody_Original":"SELECT  LEFT(CONVERT(varchar, CreationDate,112),6) as 'CreationDate',\n  SUM(CASE VoteTypeId WHEN 2 THEN 1 ELSE 0 END) AS 'Upvotes',\n  SUM(CASE VoteTypeId WHEN 3 THEN 1 ELSE 0 END) AS 'Downvotes'\n  FROM Votes\n  WHERE VoteTypeId IN (2, 3)\n  GROUP BY LEFT(CONVERT(varchar, CreationDate,112),6)\n  ORDER BY LEFT(CONVERT(varchar, CreationDate,112),6)"},{"QuerySetId":1137469,"Title":"Extract questions and answers","Description":null,"QueryBody":"SELECT q.id, q.title, q.body AS q_body, q.parentid AS qpid, q.acceptedanswerid, q.score AS q_score, q.answercount, q.tags, q.viewcount, answers.parentid AS aa_pid, answers.id AS aa_id, answers.body AS aa_body, answers.score AS aa_score, answers.posttypeid FROM posts AS answers INNER JOIN posts AS q ON answers.parentid = q.id WHERE (answers.id = q.acceptedanswerid) LIMIT 2","CreationDate":"2019-11-08 19:57:51","validated":true,"QueryBody_Original":"SELECT  TOP 2 q.id, \n             q.title, \n             q.body           q_body, \n             q.parentid       qpid, \n             q.acceptedanswerid, \n             q.score          q_score, \n             q.answercount, \n             q.tags, \n             q.viewcount, \n             answers.parentid aa_pid, \n             answers.id       aa_id, \n             answers.body     aa_body, \n             answers.score    AS aa_score, \n             answers.posttypeid \nFROM posts answers \n  INNER JOIN posts q \n    ON answers.parentid = q.id \nWHERE  (answers.id = q.acceptedanswerid) "},{"QuerySetId":1146040,"Title":"TOP 200 users from BANGLADESH","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, CreationDate, Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Bangladesh%' ORDER BY reputation DESC LIMIT 200","CreationDate":"2019-11-10 12:53:53","validated":true,"QueryBody_Original":"SELECT  TOP 200\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id,\n   CreationDate,\n   Id AS [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Bangladesh%' \nORDER BY\n   reputation DESC"},{"QuerySetId":1148217,"Title":"Estimated Rep Bump from Question Upvote Change","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", COUNT(1) AS \"Total Upvotes On Questions\", COUNT(1) * 5 AS \"Estimated Rep Gain\" FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId WHERE p.PostTypeId = 1 \/* Question *\/ AND v.VoteTypeId = 2 \/* UpMod aka upvotes *\/ GROUP BY p.OwnerUserId ORDER BY 3 DESC","CreationDate":"2019-11-14 4:01:02","validated":true,"QueryBody_Original":"SELECT  p.OwnerUserId AS [User Link], COUNT(1) AS 'Total Upvotes On Questions', COUNT(1) * 5 AS 'Estimated Rep Gain'\n  FROM Posts p \n    INNER JOIN Votes v ON p.Id = v.PostId\n  WHERE p.PostTypeId = 1 -- Question\n    AND v.VoteTypeId = 2 -- UpMod aka upvotes\n    GROUP BY p.OwnerUserId\n    ORDER BY 3 DESC"},{"QuerySetId":1148451,"Title":"Top 500 tagged with tidyverse","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, Tags FROM Posts WHERE Tags LIKE '%<##tag?tidyverse##>%' ORDER BY ViewCount DESC LIMIT 500","CreationDate":"2019-11-14 18:59:42","validated":true,"QueryBody_Original":"SELECT  top 500 Id as [Post Link], Score, ViewCount, Tags from Posts \nwhere Tags like '%<##tag?tidyverse##>%'\norder by ViewCount desc"},{"QuerySetId":1148839,"Title":"TOP 100 Bosnians on StackOverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, UpVotes, DownVotes, Views, Location, AboutMe, WebsiteUrl FROM Users WHERE LOWER(Location) LIKE '%bosnia%' OR LOWER(Location) LIKE '%bosna%' OR Location LIKE '% BiH%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-11-15 14:26:51","validated":true,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],     \n    Reputation,\n    UpVotes,\n    DownVotes,\n    Views,\n    Location,\n    AboutMe,\n    WebsiteUrl\nFROM\n    Users\nWHERE\n    LOWER(Location) like '%bosnia%' \n    OR LOWER(Location) like '%bosna%'\n    OR Location like '% BiH%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1158570,"Title":"Answers with the most downs","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Id AS Id, MIN(Posts.Score) AS Score, COUNT(*) AS Downs FROM Posts, Votes WHERE Posts.PostTypeId = 2 AND Votes.VoteTypeId = 3 AND Votes.PostId = Posts.Id GROUP BY Posts.Id ORDER BY Downs DESC, Posts.Id LIMIT 100","CreationDate":"2019-11-25 8:56:19","validated":true,"QueryBody_Original":"SELECT  TOP 100\n  Posts.Id AS [Post Link],\n  Posts.Id AS Id,\n  MIN(Posts.Score) AS Score,\n  COUNT(*) AS Downs\nFROM Posts, Votes\nWHERE\n  Posts.PostTypeId = 2\n  AND\n  Votes.VoteTypeId = 3\n  AND\n  Votes.PostId = Posts.Id\nGROUP BY Posts.Id\nORDER BY Downs DESC, Posts.Id"},{"QuerySetId":1159374,"Title":"Max and average reputation per month 2019","Description":null,"QueryBody":"SELECT YEAR(p.creationdate) AS y, MONTH(p.creationdate) AS m, COUNT_BIG(1) AS num_answers, AVG(CAST(u.reputation AS INT)) AS avg_rep, MAX(u.reputation) AS max_rep FROM posts AS p JOIN users AS u ON p.owneruserid = u.id WHERE p.posttypeid = 2 AND p.creationdate >= '2019-01-01' GROUP BY YEAR(p.creationdate), MONTH(p.creationdate) ORDER BY 1, 2, 3","CreationDate":"2019-11-27 2:20:52","validated":true,"QueryBody_Original":"SELECT  year(p.creationdate) as y\n, month(p.creationdate) as m\n, count_big(1) as num_answers\n, avg(cast(u.reputation as bigint)) as avg_rep\n, max(u.reputation) as max_rep\nfrom posts p\njoin users u\n  on p.owneruserid = u.id\nwhere p.posttypeid = 2\n  and p.creationdate >= '2019-01-01'\ngroup by year(p.creationdate)\n, month(p.creationdate)\norder by 1,2,3;"},{"QuerySetId":1159686,"Title":"Deleted user's answers (w. scores & attributed questions)","Description":null,"QueryBody":"SELECT a.Id AS link, q.Title AS title, q.Body AS question, q.OwnerUserId AS asker, q.OwnerDisplayName AS asker_name, a.Body AS answer, q.Tags AS tags, a.Score AS score FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId AND a.postTypeId = 2 AND q.postTypeId = 1 WHERE a.CommunityOwnedDate IS NULL AND a.OwnerDisplayName = '##UserName##' AND a.OwnerUserId IS NULL ORDER BY a.Score DESC","CreationDate":"2019-11-28 0:22:35","validated":true,"QueryBody_Original":"SELECT \n    a.Id as link,\n    q.Title as title,\n    q.Body as question,\n    q.OwnerUserId as asker,\n    q.OwnerDisplayName as asker_name,\n    a.Body as answer,\n    q.Tags as tags,\n    a.Score as score\nfrom\n    Posts q\n  inner join\n    Posts a\n  on q.Id = a.ParentId and a.postTypeId = 2 and q.postTypeId = 1\nwhere\n      a.CommunityOwnedDate is null\n  and a.OwnerDisplayName = '##UserName##'\n  and a.OwnerUserId is null\norder by a.Score desc"},{"QuerySetId":1159859,"Title":"All tags with no body","Description":null,"QueryBody":"SELECT t.TagName, p.Body, t.Count, t.WikiPostId FROM Tags AS t INNER JOIN Posts AS p ON t.ExcerptPostId = p.Id WHERE p.Body LIKE '' ORDER BY t.\"Count\" DESC","CreationDate":"2020-02-04 14:34:52","validated":true,"QueryBody_Original":"SELECT  t.TagName, p.Body, t.Count, t.WikiPostId\nFrom Tags t Inner Join Posts p On t.ExcerptPostId=p.Id\nWhere p.Body Like ''\nOrder By t.[Count] Desc"},{"QuerySetId":1159967,"Title":"Users with username containing the given string","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, LastAccessDate, Location, UpVotes, DownVotes, Views, DisplayName FROM Users WHERE DisplayName LIKE '%##text?Monica##%' ORDER BY Reputation DESC","CreationDate":"2019-11-28 20:18:48","validated":true,"QueryBody_Original":"SELECT \n  Id AS [User Link],\n  Reputation,\n  LastAccessDate,\n  Location, UpVotes, DownVotes, Views,\n  DisplayName\nFROM Users\nWHERE DisplayName LIKE '%##text?Monica##%'\nORDER BY Reputation DESC"},{"QuerySetId":1165483,"Title":"Highest Scoring Solo Question Askers With Reputation above 10K","Description":null,"QueryBody":"SELECT * FROM Users AS u INNER JOIN (SELECT u.Id FROM Users AS u INNER JOIN (SELECT p.OwnerUserId FROM Posts AS p GROUP BY p.OwnerUserId HAVING COUNT(*) = 1) AS a ON a.OwnerUserId = u.Id WHERE Reputation > 10000) AS a ON a.Id = u.Id INNER JOIN Posts AS p ON p.OwnerUserId = u.Id AND p.PostTypeId = 1","CreationDate":"2019-12-10 20:36:52","validated":true,"QueryBody_Original":"SELECT   *\n  FROM  Users u\n    INNER JOIN  (\n                SELECT  u.Id\n                  FROM  Users u\n                    INNER JOIN (\n                                SELECT  p.OwnerUserId\n                                  FROM  Posts p\n                                  GROUP BY p.OwnerUserId\n                                  HAVING COUNT(*) = 1\n                               ) a ON a.OwnerUserId = u.Id\n                  WHERE Reputation > 10000\n                ) a ON a.Id = u.Id\n    INNER JOIN Posts p ON p.OwnerUserId = u.Id AND p.PostTypeId = 1"},{"QuerySetId":1166054,"Title":"Posts honored by VoteType 4","Description":null,"QueryBody":"SELECT Id, CreationDate, PostId AS \"Post Link\", 'site:\/\/q\/' + CAST(PostId AS TEXT) + '|Link' AS \"Working link\" FROM Votes WHERE VoteTypeId = 4 ORDER BY Id","CreationDate":"2019-12-11 21:08:15","validated":true,"QueryBody_Original":"SELECT \n  Id,\n  CreationDate,\n  PostId AS [Post Link],\n  'site:\/\/q\/' + CAST(PostId AS VARCHAR(MAX)) + '|Link' AS\n    [Working link]\nFROM Votes\nWHERE VoteTypeId = 4\nORDER BY Id"},{"QuerySetId":1166505,"Title":"Find top community wiki-locked questions","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Tags, p.CreationDate, p.Score FROM Posts AS p INNER JOIN posthistory AS phl ON phl.postid = p.id LEFT OUTER JOIN posthistory AS phu ON phu.postid = p.id WHERE p.PostTypeId = 1 \/* Questions *\/ AND NOT p.CommunityOwnedDate IS NULL AND phl.posthistorytypeid = 14 AND (phu.posthistorytypeid = NULL OR (phu.posthistorytypeid = 15 AND phu.creationdate > phl.creationdate)) ORDER BY p.Score DESC LIMIT 10","CreationDate":"2019-12-12 17:01:54","validated":true,"QueryBody_Original":"SELECT  TOP 10 \n  p.Id AS [Post Link], \n  p.Tags, \n  p.CreationDate, \n  p.Score\nFROM Posts AS p\ninner join posthistory phl on phl.postid = p.id\nleft outer join posthistory phu on phu.postid = p.id\nWHERE\n    p.PostTypeId = 1 -- Questions\n    AND p.CommunityOwnedDate is not null\n    AND phl.posthistorytypeid = 14\n    AND (phu.posthistorytypeid = null \n    or (phu.posthistorytypeid = 15 and phu.creationdate > phl.creationdate))\nORDER BY p.Score DESC"},{"QuerySetId":1178204,"Title":"Everyone with a Marshall badge and reputation > 10000","Description":null,"QueryBody":"SELECT DisplayName FROM Badges AS b LEFT JOIN Users AS u ON b.UserId = u.Id WHERE b.Name = 'Marshal' AND u.Reputation > 10000","CreationDate":"2020-01-11 0:20:16","validated":true,"QueryBody_Original":"SELECT  DisplayName\nFROM Badges b\nLEFT JOIN Users u ON b.UserId = u.Id\nWHERE b.Name = 'Marshal' and u.Reputation > 10000"},{"QuerySetId":1182894,"Title":"Top langs vs C, Python, JavaScript, Java & Rust average question score","Description":null,"QueryBody":"SELECT CASE WHEN Tags LIKE '%<c>%' THEN 'C' WHEN Tags LIKE '%<python>%' THEN 'Python' WHEN Tags LIKE '%<javascript>%' THEN 'JavaScript' WHEN Tags LIKE '%<java>%' THEN 'Java' WHEN Tags LIKE '%<rust>%' THEN 'Rust' ELSE 'Anything else' END AS Language, AVG(CAST(Score AS FLOAT)) AS \"Average score\", COUNT(*) AS \"N questions\" FROM Posts WHERE PostTypeId = 1 GROUP BY CASE WHEN Tags LIKE '%<c>%' THEN 'C' WHEN Tags LIKE '%<python>%' THEN 'Python' WHEN Tags LIKE '%<javascript>%' THEN 'JavaScript' WHEN Tags LIKE '%<java>%' THEN 'Java' WHEN Tags LIKE '%<rust>%' THEN 'Rust' ELSE 'Anything else' END","CreationDate":"2020-01-19 20:24:00","validated":true,"QueryBody_Original":"SELECT \n  CASE\n    WHEN Tags LIKE '%<c>%'          THEN 'C'\n    WHEN Tags LIKE '%<python>%'     THEN 'Python'\n    WHEN Tags LIKE '%<javascript>%' THEN 'JavaScript'\n    WHEN Tags LIKE '%<java>%'       THEN 'Java'\n    WHEN Tags LIKE '%<rust>%'       THEN 'Rust'\n    ELSE 'Anything else'    \n  END AS Language,\n  AVG(CAST(Score as float)) as [Average score],\n  COUNT(*) as [N questions]\n  \n  FROM Posts\n  WHERE\n    PostTypeId = 1\n  \nGROUP BY\n\n  CASE\n    WHEN Tags LIKE '%<c>%'          THEN 'C'\n    WHEN Tags LIKE '%<python>%'     THEN 'Python'\n    WHEN Tags LIKE '%<javascript>%' THEN 'JavaScript'\n    WHEN Tags LIKE '%<java>%'       THEN 'Java'\n    WHEN Tags LIKE '%<rust>%'       THEN 'Rust'\n    ELSE 'Anything else'\n  END"},{"QuerySetId":1186350,"Title":"Tags associated with \"data\" posts (2017-onward)","Description":null,"QueryBody":"SELECT Tags, ViewCount FROM Posts WHERE CreationDate >= '2017-01-01' AND body LIKE '%data%' ORDER BY ViewCount DESC","CreationDate":"2020-01-24 9:44:20","validated":true,"QueryBody_Original":"SELECT  Tags, ViewCount\nfrom Posts\nwhere CreationDate >= '2017-01-01' AND body like '%data%'\norder by ViewCount desc"},{"QuerySetId":1186390,"Title":"Questions related to the Evolvability Assurance of Microservices","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Score, AnswerCount, AcceptedAnswerId AS \"Post Link\", Body FROM Posts WHERE PostTypeId = 1 AND TIME_TO_STR(CreationDate, '%y') >= 2014 AND Score >= 0 AND (STR_POSITION(Title, 'microservice') > 0 OR STR_POSITION(Body, 'microservice') > 0)","CreationDate":"2020-01-24 15:10:40","validated":true,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  CreationDate,\n  Score,\n  AnswerCount,\n  AcceptedAnswerId AS [Post Link],\n  Body\nFROM Posts\nWHERE PostTypeId = 1\n  AND DATEPART(yy,CreationDate) >= 2014\n  AND Score >= 0\n  AND (\n    CHARINDEX('microservice', Title) > 0\n    OR CHARINDEX('microservice', Body) > 0\n  )"},{"QuerySetId":1187123,"Title":"Number Upvotes and Downvotes and acceptance ratio for a meta.stackexchange question","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Votes, Upvotes, Downvotes, Upvotes * 1.0 \/ Votes FROM (SELECT p.Id, COUNT(CASE WHEN VoteTypeId = 2 THEN 1 END) AS \"Upvotes\", COUNT(CASE WHEN VoteTypeId = 3 THEN 1 END) AS \"Downvotes\", COUNT(CASE WHEN VoteTypeId = 2 OR VoteTypeId = 3 THEN 1 END) AS \"Votes\" FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId WHERE p.PostTypeId = 1 AND p.ClosedDate IS NULL GROUP BY p.Id)","CreationDate":"2020-01-26 19:16:42","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], Votes, Upvotes, Downvotes, Upvotes * 1.0 \/ Votes\nfrom\n(SELECT p.Id, count(case when VoteTypeId = 2 then 1 end) as [Upvotes],\n  count(case when VoteTypeId = 3 then 1 end) AS [Downvotes],\n  count(case when VoteTypeId = 2 or VoteTypeId = 3 then 1 end) as [Votes]\nfrom Posts p inner join Votes v on p.Id = v.PostId\nwhere p.PostTypeId = 1 and p.ClosedDate is null\ngroup by p.Id) "},{"QuerySetId":1193355,"Title":"Get all posts since 2016-01-01","Description":null,"QueryBody":"SELECT AnswerCount, Body, CommentCount, CreationDate, FavoriteCount, Posts.Id AS Posts_ID, LastActivityDate, OwnerUserId, PostTypeId, Score, Tags, Title, ViewCount FROM Posts WHERE PostTypeId = 1 AND CreationDate >= '2016-01-01'","CreationDate":"2020-02-07 2:05:43","validated":true,"QueryBody_Original":"SELECT  AnswerCount, Body, CommentCount,\n      CreationDate, FavoriteCount, Posts.Id AS Posts_ID,\n      LastActivityDate, OwnerUserId, PostTypeId,\n      Score, Tags, Title, ViewCount \nfrom Posts\nwhere PostTypeId = 1 AND CreationDate >= '2016-01-01'"},{"QuerySetId":1194155,"Title":"Top 10 users from united arab emirates","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%united arab emirates%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2020-02-08 21:28:44","validated":true,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%united arab emirates%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1195304,"Title":"Posts with accepted answer answered after a week","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts AS a LEFT JOIN posts AS b ON a.AcceptedAnswerId = b.Id WHERE NOT a.AcceptedAnswerId IS NULL AND DATEDIFF(b.CreationDate, a.CreationDate) > 6","CreationDate":"2020-02-11 22:30:55","validated":true,"QueryBody_Original":"SELECT  count(*) from posts as a left join posts as b on a.AcceptedAnswerId = b.Id  \nwhere a.AcceptedAnswerId is not null and datediff(day,a.CreationDate,b.CreationDate) > 6"},{"QuerySetId":1196694,"Title":"Top 100 Java coders from Pakistan","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", SUM(p.Score) AS ReactScore, u.Reputation, u.Location FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE (LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK') AND p.Tags LIKE '%java%' GROUP BY u.Id, u.Reputation, u.Location ORDER BY ReactScore DESC LIMIT 100","CreationDate":"2020-09-20 22:10:16","validated":true,"QueryBody_Original":"SELECT  TOP 100\n    u.Id AS [User Link], \n    SUM(p.Score) AS ReactScore,\n    u.Reputation,\n    u.Location\nFROM\n    Users u\nINNER JOIN Posts p ON p.OwnerUserId = u.Id\nWHERE\n    (LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK')\n    AND p.Tags LIKE '%java%'\nGROUP BY\n  u.Id, u.Reputation, u.Location\nORDER BY\n    ReactScore DESC;"},{"QuerySetId":1197252,"Title":"Number of answerers in a period of time","Description":null,"QueryBody":"SELECT COUNT(DISTINCT OwnerUserId) FROM Posts WHERE PostTypeId = 2 AND CreationDate >= '##start##' AND CreationDate < '##end##'","CreationDate":"2020-02-17 0:47:21","validated":true,"QueryBody_Original":"SELECT  count(distinct OwnerUserId) from Posts \nwhere PostTypeId = 2\nand CreationDate >= '##start##'\nand CreationDate < '##end##'"},{"QuerySetId":1199300,"Title":"Top 100K users by hit rate (accepted answer percentage rate)","Description":"100 users having the highest accepted answer percentage rate (among users with >100 answers)","QueryBody":"SELECT u.Id AS \"User Link\", COUNT(a.Id), (CAST(SUM(CASE WHEN a.Id = q.AcceptedAnswerId THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(a.Id)) * 100 AS HitRate FROM Users AS u JOIN Posts AS a ON a.OwnerUserId = u.Id AND a.PostTypeId = 2 JOIN Posts AS q ON a.ParentId = q.Id GROUP BY u.Id HAVING COUNT(a.Id) > 25 ORDER BY HitRate DESC LIMIT 100000","CreationDate":"2020-07-03 19:06:46","validated":true,"QueryBody_Original":"SELECT TOP 100000\n    u.Id AS [User Link], COUNT(a.Id),\n    (CAST(SUM(CASE WHEN a.Id=q.AcceptedAnswerId THEN 1 ELSE 0 END) AS float) \/ COUNT(a.Id)) * 100 AS HitRate \nFROM Users u\n    JOIN Posts a ON a.OwnerUserId = u.Id and a.PostTypeId = 2\n    JOIN Posts q ON a.ParentId = q.Id\nGROUP BY u.Id\nHAVING COUNT(a.Id) > 25\nORDER BY HitRate DESC"},{"QuerySetId":1203595,"Title":"Finding all post IDs for each tag","Description":null,"QueryBody":"SELECT Id, Tags FROM POSTS WHERE PostTypeId = 1 AND NOT Tags IS NULL ORDER BY CreationDate DESC","CreationDate":"2020-02-27 10:03:24","validated":true,"QueryBody_Original":"SELECT  Id, Tags\nFROM POSTS\nWhere PostTypeId = 1 AND\n  Tags IS NOT NULL\nORDER BY CreationDate DESC"},{"QuerySetId":1205329,"Title":"Number of views on questions by users with up to a specified reputation","Description":null,"QueryBody":"SELECT @MaxRep, SUM(CAST(p.viewcount AS INT)) AS \"No. views\" FROM Posts AS p LEFT JOIN Users AS u ON u.id = p.OwnerUserId WHERE p.posttypeid = 1 AND u.Reputation <= @MaxRep","CreationDate":"2020-03-04 12:10:44","validated":true,"QueryBody_Original":"select    @MaxRep, SUM(convert(bigint,p.viewcount)) \"No. views\"\n  from    Posts p\nLEFT JOIN Users u ON u.id = p.OwnerUserId\n  where   p.posttypeid = 1\n  and     u.Reputation <= @MaxRep"},{"QuerySetId":1208266,"Title":"Answered questions - Windows Phone","Description":null,"QueryBody":"SELECT Id, LastActivityDate, CreationDate, Score, ViewCount, Body, OwnerUserId, Title, Tags, AnswerCount FROM Posts WHERE Tags LIKE '%<windows-phone%' AND PostTypeId = 1 ORDER BY LastActivityDate DESC","CreationDate":"2020-03-09 21:30:56","validated":true,"QueryBody_Original":"SELECT  Id, LastActivityDate, CreationDate, Score, ViewCount, Body, OwnerUserId, Title, Tags, AnswerCount\nFROM Posts\nWHERE Tags like '%<windows-phone%'\nand PostTypeId = 1 \nORDER BY LastActivityDate DESC"},{"QuerySetId":1217087,"Title":"Questions that define new LaTeX commands","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE PostTypeId = 1 AND Body LIKE '%newcommand%' ORDER BY CreationDate DESC","CreationDate":"2020-04-01 15:01:43","validated":true,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  CreationDate\nFROM Posts\nWHERE PostTypeId = 1\n  AND Body LIKE '%newcommand%'\nORDER BY CreationDate DESC"},{"QuerySetId":1217720,"Title":"number of question per month after 2019","Description":null,"QueryBody":"SELECT COUNT(*), MONTH(CreationDate) FROM Posts WHERE PostTypeId = 1 AND CreationDate > '2019' GROUP BY MONTH(CreationDate)","CreationDate":"2020-04-03 22:11:02","validated":true,"QueryBody_Original":"SELECT  count(*), Month(CreationDate)\nfrom Posts\nwhere PostTypeId=1 and CreationDate > '2019'\ngroup by Month(CreationDate);"},{"QuerySetId":1222539,"Title":"Number of questions and their answers per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", COUNT(p.Id) AS \"Questions\", SUM(p.AnswerCount) AS \"Answers\" FROM Posts AS p WHERE p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##' AND (p.PostTypeId = 1) GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-08 8:09:40","validated":true,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  COUNT(p.Id) AS [Questions],\n  SUM(p.AnswerCount) AS [Answers]\nFROM Posts p\nWHERE p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##'\n  and (p.PostTypeId=1)\n----  and (p.ClosedDate IS NULL) \n---- counting all questions\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1223755,"Title":"Number of views and answers by month of CreationDate","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", SUM(p.ViewCount) AS \"Total Views\", SUM(p.AnswerCount) AS \"Total Answers\" FROM Posts AS p WHERE p.PostTypeId = 1 GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-10 15:18:09","validated":true,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  SUM(p.ViewCount) AS [Total Views],\n  SUM(p.AnswerCount) AS [Total Answers]\nFROM Posts p\nWHERE p.PostTypeId=1\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1225028,"Title":"Number of questions\/answers\/posts per month - only CW","Description":null,"QueryBody":"SELECT MONTH(p.CreationDate) AS \"month\", COUNT(p.Id) AS \"Total Posts\", SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Total Questions\", SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Total Answers\" FROM Posts AS p WHERE (NOT CommunityOwnedDate IS NULL) GROUP BY MONTH(p.CreationDate) ORDER BY MONTH(p.CreationDate)","CreationDate":"2020-04-13 16:09:13","validated":true,"QueryBody_Original":"SELECT  month(p.CreationDate) [month],\n  COUNT(p.Id) AS [Total Posts],\n  SUM(case when p.PostTypeId = 1 then 1 else 0 end) AS [Total Questions],\n  SUM(case when p.PostTypeId = 2 then 1 else 0 end) AS [Total Answers]\nFROM Posts p\n  WHERE (CommunityOwnedDate IS NOT NULL)\nGROUP BY month(p.CreationDate)\nORDER BY month(p.CreationDate)"},{"QuerySetId":1225062,"Title":"Number of votes on answers and votes on questions per month (with some tags excluded)","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(v.CreationDate), COUNT(v.Id) AS \"Total Upvotes\", SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Question Upvotes\", SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Answer Upvotes\" FROM Posts AS p INNER JOIN Votes AS v ON v.PostId = p.Id\/* -VoteTypeId=2 Upvotes *\/ \/* -VoteTypeId=3 Downvotes *\/  WHERE v.VoteTypeId = 2 AND NOT ((p.Tags LIKE '%<##tag1?big-list##>%') OR (p.Tags LIKE '%<##tag2?soft-question##>%')) AND NOT (p.PostTypeId = 2 AND (p.ParentId IN (SELECT Id FROM Posts WHERE ((Tags LIKE '%<##tag1##>%') OR (Tags LIKE '%<##tag2##>%'))))) GROUP BY LAST_DATE_OF_MONTH(v.CreationDate) ORDER BY LAST_DATE_OF_MONTH(v.CreationDate)","CreationDate":"2020-04-13 17:20:04","validated":true,"QueryBody_Original":"SELECT \n  eomonth(v.CreationDate),\n  COUNT(v.Id) AS [Total Upvotes],\n  SUM(CASE WHEN p.PostTypeId=1 THEN 1 ELSE 0 END) AS [Question Upvotes],\n  SUM(CASE WHEN p.PostTypeId=2 THEN 1 ELSE 0 END) AS [Answer Upvotes]\nFROM Posts p INNER JOIN Votes v ON v.PostId = p.Id\nWHERE v.VoteTypeId=2\n---VoteTypeId=2 Upvotes\n---VoteTypeId=3 Downvotes\n  AND NOT((p.Tags Like '%<##tag1?big-list##>%') OR (p.Tags Like '%<##tag2?soft-question##>%'))\n  AND NOT(p.PostTypeId=2 AND (p.ParentId IN (SELECT Id FROM Posts WHERE ((Tags Like '%<##tag1##>%') OR (Tags Like '%<##tag2##>%')))))\n---exclude the given two tags\nGROUP BY eomonth(v.CreationDate)\nORDER BY eomonth(v.CreationDate)"},{"QuerySetId":1228053,"Title":"Daily Activity Posts Comments Users","Description":null,"QueryBody":"SELECT * FROM (SELECT CAST(CreationDate AS DATE) AS Date_Posted, SUM(CASE WHEN PostTypeID = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN PostTypeID = 2 THEN 1 ELSE 0 END) AS Answers FROM Posts WHERE YEAR(CreationDate) = 2020 AND DeletionDate IS NULL GROUP BY CAST(CreationDate AS DATE)) AS a FULL OUTER JOIN (SELECT CAST(CreationDate AS DATE) AS Date_Joined, COUNT(*) AS Users FROM Users WHERE YEAR(CreationDate) = 2020 GROUP BY CAST(CreationDate AS DATE)) AS b ON a.Date_Posted = b.Date_Joined FULL OUTER JOIN (SELECT CAST(CreationDate AS DATE) AS Date_Commented, COUNT(*) AS Comments FROM Comments WHERE YEAR(CreationDate) = 2020 GROUP BY CAST(CreationDate AS DATE)) AS c ON c.Date_Commented = a.Date_Posted","CreationDate":"2020-04-17 17:31:10","validated":true,"QueryBody_Original":"SELECT  *\nFROM\n\n(\nSELECT   CAST (CreationDate AS Date)Date_Posted\n\t,SUM(CASE WHEN PostTypeID=1 THEN 1 ELSE 0 END) As Questions\n    ,SUM(CASE WHEN PostTypeID=2 THEN 1 ELSE 0 END) As Answers\nFROM Posts\n WHERE YEAR(CreationDate)=2020 and DeletionDate is null\n GROUP BY CAST(CreationDate as Date)\n )a\n\n FULL OUTER JOIN\n \n (\n SELECT CAST (CreationDate AS Date)Date_Joined\n     ,COUNT(*) AS Users\n FROM Users\n  WHERE YEAR(CreationDate)=2020\n GROUP BY CAST(CreationDate as Date)\n )b\n \n on a.Date_Posted = b.Date_Joined\n \nFULL OUTER JOIN\n(\n SELECT CAST (CreationDate AS Date)Date_Commented\n     ,COUNT(*) AS Comments\n FROM Comments\n  WHERE YEAR(CreationDate)=2020\n GROUP BY CAST(CreationDate as Date)\n )c\n \n ON c.Date_Commented = a.Date_Posted"},{"QuerySetId":1228096,"Title":"Percentage of closed question per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.creationdate), ROUND((COUNT(p.ClosedDate)) * 100.0 \/ (COUNT(p.Id)), 2) AS percentage FROM Posts AS p WHERE (p.PostTypeId = 1) AND (p.CreationDate >= '##Date1?2010-01-01##') AND (p.CreationDate <= '##Date2?2021-01-01##') GROUP BY LAST_DATE_OF_MONTH(p.creationdate) ORDER BY LAST_DATE_OF_MONTH(p.creationdate)","CreationDate":"2020-04-17 20:15:24","validated":true,"QueryBody_Original":"SELECT \n  eomonth(p.creationdate),\n  ROUND((COUNT(p.ClosedDate))*100.0\/(COUNT(p.Id)),2) AS percentage\nFROM Posts p\nWHERE (p.PostTypeId=1)\n   AND (p.CreationDate >= '##Date1?2010-01-01##') AND (p.CreationDate <= '##Date2?2021-01-01##')\nGROUP BY eomonth(p.creationdate)\nORDER BY eomonth(p.creationdate)"},{"QuerySetId":1229412,"Title":"Users with 10 or more meta posts with score of 2 or more (Convention badge)","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(*) AS NumPosts FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.Score >= 2 GROUP BY u.Id HAVING COUNT(*) >= 10 ORDER BY NumPosts DESC","CreationDate":"2020-04-20 14:35:52","validated":true,"QueryBody_Original":"SELECT \n  u.Id AS [User Link],\n  count(*) AS NumPosts\nFROM Posts p\nINNER JOIN Users u ON u.Id = p.OwnerUserId\nWHERE \n  p.Score >= 2\nGROUP BY u.Id\nHAVING\n  count(*) >= 10\nORDER BY NumPosts DESC"},{"QuerySetId":1236797,"Title":"Votes on which day after posting (only questions)","Description":null,"QueryBody":"SELECT DATEDIFF(v.CreationDate, p.CreationDate) AS Days, COUNT(v.Id) AS Count FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id WHERE p.PostTypeId = 1 GROUP BY DATEDIFF(v.CreationDate, p.CreationDate) ORDER BY DATEDIFF(v.CreationDate, p.CreationDate)","CreationDate":"2020-05-10 0:12:05","validated":true,"QueryBody_Original":"SELECT \nDATEDIFF(day, p.CreationDate, v.CreationDate) AS Days,\n  COUNT(v.Id) AS Count\nFROM Votes v INNER JOIN Posts p ON v.PostId=p.Id\nWHERE p.PostTypeId=1\n---only questions\nGROUP BY DATEDIFF(day, p.CreationDate, v.CreationDate) \nORDER BY DATEDIFF(day, p.CreationDate, v.CreationDate)"},{"QuerySetId":1236801,"Title":"Percentage of votes - depending on day after posting (only questions)","Description":null,"QueryBody":"SELECT DATEDIFF(v.CreationDate, p.CreationDate) AS Days, COUNT(v.Id) AS Count, COUNT(v.Id) * 100.0 \/ SUM(COUNT(v.Id)) OVER () AS Percentage \/* -see: https:\/\/stackoverflow.com\/questions\/46909494\/percentage-from-total-sum-after-group-by-sql-server *\/ FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id WHERE p.PostTypeId = 1 GROUP BY DATEDIFF(v.CreationDate, p.CreationDate) ORDER BY DATEDIFF(v.CreationDate, p.CreationDate)","CreationDate":"2020-05-10 0:48:55","validated":true,"QueryBody_Original":"SELECT \n  DATEDIFF(day, p.CreationDate, v.CreationDate) AS Days,\n  COUNT(v.Id) AS Count,\n  COUNT(v.Id) * 100.0 \/ SUM(COUNT(v.Id)) OVER () AS Percentage\n---see: https:\/\/stackoverflow.com\/questions\/46909494\/percentage-from-total-sum-after-group-by-sql-server\nFROM Votes v INNER JOIN Posts p ON v.PostId=p.Id\nWHERE p.PostTypeId=1\n----only questions\nGROUP BY DATEDIFF(day, p.CreationDate, v.CreationDate)\nORDER BY DATEDIFF(day, p.CreationDate, v.CreationDate)"},{"QuerySetId":1236806,"Title":"Average score of questions per month","Description":null,"QueryBody":"SELECT p.Tags, AVG(CAST(p.Score AS FLOAT)) FROM Posts AS p WHERE (p.PostTypeId = 1) AND (p.CreationDate >= '##Date1?2010-01-01##') AND (p.CreationDate <= '##Date2?2021-01-01##') GROUP BY p.Tags","CreationDate":"2020-05-10 3:29:03","validated":true,"QueryBody_Original":"SELECT \n  p.Tags,\n  AVG(CAST(p.Score AS decimal))\nFROM Posts p\nWHERE (p.PostTypeId=1)\n  AND (p.CreationDate >= '##Date1?2010-01-01##') AND (p.CreationDate <= '##Date2?2021-01-01##')\nGROUP BY p.Tags"},{"QuerySetId":1236864,"Title":"Most common tags with missing wiki\/excerpt","Description":"Lists the most commonly used tags with empty\/missing tag wikis (wiki or excerpt).","QueryBody":"SELECT Count, ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, ExcerptPostId AS \"Post Link\", WikiPostId AS \"Post Link\" FROM Tags AS t LEFT JOIN Posts AS pe ON pe.Id = t.ExcerptPostId LEFT JOIN Posts AS pw ON pw.Id = t.WikiPostId WHERE ExcerptPostId IS NULL \/* no excerpt post *\/ OR WikiPostId IS NULL \/* no wiki post *\/ OR LENGTH(pe.Body) = 0 \/* excerpt empty *\/ OR LENGTH(pw.Body) = 0 \/* wiki empty *\/ ORDER BY Count DESC","CreationDate":"2020-05-10 14:03:22","validated":true,"QueryBody_Original":"SELECT  Count,\n       ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName,\n       ExcerptPostId                              AS [Post Link],\n       WikiPostId                                 AS [Post Link]\nFROM   Tags t\n       LEFT JOIN Posts pe\n         ON pe.Id = t.ExcerptPostId\n       LEFT JOIN Posts pw\n         ON pw.Id = t.WikiPostId\nWHERE  ExcerptPostId IS NULL -- no excerpt post\n       OR WikiPostId IS NULL -- no wiki post\n       OR LEN(pe.Body) = 0   -- excerpt empty\n       OR LEN(pw.Body) = 0   -- wiki empty\nORDER  BY Count DESC"},{"QuerySetId":1238881,"Title":"Top 5000 users from guajrat","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%gujarat%' OR UPPER(Location) LIKE '%GUJARAT' ORDER BY Reputation DESC LIMIT 5000","CreationDate":"2020-06-23 8:03:05","validated":true,"QueryBody_Original":"SELECT  TOP 5000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%gujarat%'\n    OR UPPER(Location) LIKE '%GUJARAT'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1241380,"Title":"TOP 200 HAMMER JUGGLERS: Users with many gold tag badges","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS Hammers FROM Badges AS b WHERE b.TagBased = 1 AND b.class = 1 GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 200","CreationDate":"2020-05-21 23:27:12","validated":true,"QueryBody_Original":"SELECT  TOP 200 UserId AS [User Link], COUNT(*) as Hammers\nFROM Badges b\nWHERE b.TagBased=1 and b.class=1\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":1243888,"Title":"Comments with \"Infinity is not a number\"","Description":null,"QueryBody":"SELECT parent.score, postid AS \"Post Link\", comments.creationdate, text FROM comments JOIN posts AS parent ON (comments.postid = parent.id) WHERE text LIKE '%infinity%not a number%' ORDER BY parent.score DESC, creationdate DESC","CreationDate":"2020-05-27 20:24:05","validated":true,"QueryBody_Original":"SELECT  parent.score, postid as [Post Link], comments.creationdate, text from comments\njoin posts parent on (comments.postid = parent.id)\nwhere  text like '%infinity%not a number%'\norder by parent.score desc, creationdate desc"},{"QuerySetId":1247208,"Title":"Top 10 Stackoverflow Users in Saudi Arabia","Description":null,"QueryBody":"SELECT DisplayName, Location, 'https:\/\/stackoverflow.com\/users\/' + CAST(id AS TEXT), Reputation FROM Users WHERE LOWER(Location) LIKE '%saudi%' OR LOWER(Location) LIKE '%saudi arabia%' ORDER BY 4 DESC LIMIT 10","CreationDate":"2020-06-04 17:16:02","validated":true,"QueryBody_Original":"SELECT  top 10 DisplayName, \n       Location,\n       'https:\/\/stackoverflow.com\/users\/'+cast(id as varchar),\n       Reputation\nfrom Users \nwhere  lower(Location) LIKE '%saudi%' or \n       lower(Location) LIKE '%saudi arabia%' order by 4 desc"},{"QuerySetId":1250266,"Title":"AWS Questions: Time until Answer","Description":null,"QueryBody":"SELECT Question.Id, MIN(Question.creationdate) AS Question_date, MIN(Answer.creationdate) AS Answer_date FROM Posts AS Question LEFT OUTER JOIN Posts AS Answer ON Question.Id = Answer.ParentId WHERE Question.PostTypeId = 1 \/* Question *\/ AND Question.ClosedDate IS NULL \/* Exclude Closed questions *\/ AND (Question.Tags LIKE '%<amazon-%' OR Question.Tags LIKE '%<aws-%') AND Question.CreationDate >= '2020-01-01' AND Question.creationdate <> Answer.creationdate \/* Many are the same! *\/ AND (Answer.OwnerUserId IS NULL OR Question.OwnerUserId <> Answer.OwnerUserId) AND Answer.creationdate IS NULL GROUP BY Question.Id LIMIT 10","CreationDate":"2020-06-11 17:07:34","validated":true,"QueryBody_Original":"SELECT  TOP 10\n  Question.Id,\n  MIN(Question.creationdate) as Question_date,\n  MIN(Answer.creationdate) as Answer_date\nFROM Posts as Question\nLEFT OUTER JOIN Posts as Answer ON Question.Id = Answer.ParentId\n\nWHERE Question.PostTypeId = 1 -- Question\n  AND Question.ClosedDate IS NULL -- Exclude Closed questions\n  AND (Question.Tags LIKE '%<amazon-%' OR Question.Tags LIKE '%<aws-%')\n  AND Question.CreationDate >= '2020-01-01'\n  AND Question.creationdate <> Answer.creationdate -- Many are the same!\n  AND (Answer.OwnerUserId IS NULL OR Question.OwnerUserId <> Answer.OwnerUserId)\n  AND Answer.creationdate IS NULL\nGROUP BY Question.Id"},{"QuerySetId":1250681,"Title":"Bounties (with users) between two dates","Description":null,"QueryBody":"SELECT bs.PostId AS \"Post Link\", u.Id AS \"User Link\", u.Reputation, bs.CreationDate, bs.BountyAmount FROM Users AS u INNER JOIN Votes AS bs ON u.Id = bs.UserId WHERE bs.VoteTypeId = 8 \/* BountyStart *\/ AND bs.CreationDate >= '##Date1?2020-06-01##' AND bs.CreationDate <= '##Date2?2020-07-01##' ORDER BY bs.CreationDate DESC","CreationDate":"2020-06-12 11:28:12","validated":true,"QueryBody_Original":"SELECT  bs.PostId AS [Post Link], u.Id AS [User Link], u.Reputation, bs.CreationDate, bs.BountyAmount\nFROM Users u INNER JOIN Votes bs ON u.Id = bs.UserId\nWHERE\n bs.VoteTypeId = 8  -- BountyStart\nAND bs.CreationDate >= '##Date1?2020-06-01##' AND bs.CreationDate <= '##Date2?2020-07-01##'\nORDER BY bs.CreationDate DESC"},{"QuerySetId":1251944,"Title":"Posts where last event was CW-ification","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", revisions = 'site:\/\/posts\/' + CAST(ph.PostId AS TEXT) + '\/revisions' FROM PostHistory AS ph\/* -16 = CW *\/  WHERE (ph.PostHistoryTypeId = 16) AND ph.Id IN (SELECT MAX(Id) AS last FROM PostHistory GROUP BY PostId) ORDER BY ph.PostId DESC","CreationDate":"2020-06-16 16:33:31","validated":true,"QueryBody_Original":"SELECT \n ph.PostId AS [Post Link],\n revisions = 'site:\/\/posts\/' + CAST(ph.PostId AS varchar)+'\/revisions'\nFROM PostHistory ph\n WHERE (ph.PostHistoryTypeId=16)\n---16 = CW\nAND ph.Id IN (\n   SELECT\n     MAX(Id) as last\n    FROM PostHistory\n    GROUP BY PostId\n)\n---only look at the last event for the given post\nORDER BY ph.PostId DESC"},{"QuerySetId":1252270,"Title":"Posts where last event was CW-ification and it wasn't done by the OP","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", revisions = 'site:\/\/posts\/' + CAST(ph.PostId AS TEXT) + '\/revisions' FROM PostHistory AS ph INNER JOIN Posts AS p ON p.Id = ph.PostId\/* -turned to CW by a user other than the OP *\/ \/* -16 = CW *\/  WHERE (ph.PostHistoryTypeId = 16) AND (ph.UserId <> p.OwnerUserId) AND ph.Id IN (SELECT MAX(Id) AS last FROM PostHistory GROUP BY PostId) ORDER BY ph.PostId DESC","CreationDate":"2020-06-17 4:53:27","validated":true,"QueryBody_Original":"SELECT \n ph.PostId AS [Post Link],\n revisions = 'site:\/\/posts\/' + CAST(ph.PostId AS varchar)+'\/revisions'\nFROM PostHistory ph INNER JOIN Posts p ON p.Id=ph.PostId\n WHERE (ph.PostHistoryTypeId=16)\n---16 = CW\nAND (ph.UserId!=p.OwnerUserId)\n---turned to CW by a user other than the OP\nAND ph.Id IN (\n   SELECT\n     MAX(Id) as last\n    FROM PostHistory\n    GROUP BY PostId\n)\n---only look at the last event for the given post\nORDER BY ph.PostId DESC"},{"QuerySetId":1258220,"Title":"Distribution of post frequency by users","Description":null,"QueryBody":"SELECT c.post_count, c.cum_posts, 100.0 * c.cum_posts \/ MAX(c.cum_posts) OVER (ORDER BY c.post_count DESC) AS cum_posts_pctg, c.cum_users, 100.0 * c.cum_users \/ MAX(c.cum_users) OVER (ORDER BY c.post_count DESC) AS cum_users_pctg FROM (SELECT b.post_count, 1.0 * SUM(b.post_count) OVER (ORDER BY b.post_count DESC) AS cum_posts, 1.0 * SUM(b.users_having_post_count) OVER (ORDER BY b.post_count DESC) AS cum_users FROM (SELECT a.post_count, COUNT(a.user_id) AS users_having_post_count FROM (SELECT OwnerUserId AS user_id, COUNT(Id) AS post_count FROM Posts WHERE NOT OwnerUserId IS NULL GROUP BY OwnerUserId) AS a GROUP BY a.post_count) AS b) AS c ORDER BY 1 DESC","CreationDate":"2020-07-03 4:16:36","validated":true,"QueryBody_Original":"SELECT \n   c.post_count\n  ,c.cum_posts\n  ,100.0* c.cum_posts \/ max(c.cum_posts) \n     over (order by c.post_count desc) cum_posts_pctg\n  ,c.cum_users\n  ,100.0* c.cum_users \/ max(c.cum_users) \n     over (order by c.post_count desc) cum_users_pctg\nfrom(\n  SELECT\n    b.post_count\n   ,1.0*sum(b.post_count) over (order by b.post_count desc) \n      as cum_posts\n   ,1.0*sum(b.users_having_post_count) over (order by b.post_count desc) \n      as cum_users\n  from (\n    SELECT \n       a.post_count\n      ,count(a.user_id) as users_having_post_count\n    from (\n      SELECT\n         OwnerUserId as user_id\n        ,count(Id) as post_count\n      from Posts\n      where OwnerUserId is not null\n      group by OwnerUserId\n    ) as a\n    group by a.post_count\n  ) as b\n) as c\norder by 1 desc\n;"},{"QuerySetId":1259424,"Title":"Top users by average answer score","Description":null,"QueryBody":"SELECT a.OwnerUserId AS \"User Link\", a.OwnerDisplayName, AVG(CAST(a.Score AS FLOAT)) AS \"Average Score\", SUM(a.Score) AS \"Total Score\", COUNT(a.Id) AS \"Num Answers\" FROM Posts AS a WHERE a.PostTypeId = 2 GROUP BY a.OwnerUserId, a.OwnerDisplayName ORDER BY AVG(a.Score) DESC LIMIT 100","CreationDate":"2020-07-06 18:56:20","validated":true,"QueryBody_Original":"SELECT  TOP 100\na.OwnerUserId AS [User Link], a.OwnerDisplayName, AVG(CAST(a.Score AS decimal)) AS [Average Score], SUM(a.Score) AS [Total Score], COUNT(a.Id) AS [Num Answers]\nFROM Posts a\nWHERE a.PostTypeId=2 \nGROUP BY a.OwnerUserId, a.OwnerDisplayName\nORDER BY AVG(a.Score) DESC"},{"QuerySetId":1259738,"Title":"Comments containing the given two keywords","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE (Text LIKE '%##Word1?student##%') AND (Text LIKE '%##Word2?homework##%') ORDER BY CreationDate","CreationDate":"2020-07-07 15:42:58","validated":true,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE (Text LIKE '%##Word1?student##%') AND (Text LIKE '%##Word2?homework##%')\nORDER BY CreationDate"},{"QuerySetId":1260806,"Title":"find posts and the revisions of \"moderator only\" content","Description":"like the election page, the on-topic help page, tour (payoff, do, don't)","QueryBody":"SELECT p.id, body \/* , p.creationdate *\/, ph.userid AS \"User Link\", CONCAT('site:\/\/posts\/', postid, '\/revisions|Revision') AS \"revision\", ph.creationdate, ph.comment, ph.text FROM posts AS p INNER JOIN posthistory AS ph ON ph.postid = p.id WHERE posttypeid = 7 ORDER BY postid, ph.creationdate","CreationDate":"2020-07-09 14:39:34","validated":true,"QueryBody_Original":"SELECT  p.id\n     , body\n     -- , p.creationdate\n     , ph.userid as [User Link]\n     , concat('site:\/\/posts\/', postid, '\/revisions|Revision') [revision]\n     , ph.creationdate\n     , ph.comment\n     , ph.text\nfrom posts p\ninner join posthistory ph on ph.postid = p.id\nwhere posttypeid = 7 \norder by postid, ph.creationdate"},{"QuerySetId":1261627,"Title":"Get the SO users from China created after 2017-01-01","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%china%' OR UPPER(Location) LIKE '%China%' AND CreationDate >= '2017-01-01' ORDER BY Reputation DESC","CreationDate":"2020-07-11 19:06:08","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%china%'\n    OR UPPER(Location) LIKE '%China%'\n    AND CreationDate >= '2017-01-01'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1262279,"Title":"Questions that have been unprotected at some point","Description":null,"QueryBody":"SELECT ph.PostId, p.Id AS \"Post Link\", ph.CreationDate AS \"Unprotected At\" FROM PostHistory AS ph INNER JOIN Posts AS p ON ph.PostId = p.Id WHERE ph.PostHistoryTypeId = 20 ORDER BY \"Unprotected At\" DESC","CreationDate":"2020-07-13 7:36:34","validated":true,"QueryBody_Original":"SELECT ph.PostId,\n       p.Id AS [Post Link],\n       ph.CreationDate AS [Unprotected At]\nFROM PostHistory ph\nINNER JOIN Posts p ON ph.PostId = p.Id\nWHERE ph.PostHistoryTypeId = 20\nORDER BY [Unprotected At] DESC;"},{"QuerySetId":1266413,"Title":"Questions and Answers per Day since some date","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers FROM Posts WHERE CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(10)) >= '##Date##' GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE) DESC","CreationDate":"2020-07-24 23:36:34","validated":true,"QueryBody_Original":"SELECT \n    CAST(CreationDate AS DATE),\n    SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,\n    SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers\nFROM\n    Posts\nWHERE\n    convert(varchar(10),CreationDate, 120) >= '##Date##'\nGROUP BY\n    CAST(CreationDate AS DATE)\nORDER BY\n    CAST(CreationDate AS DATE) Desc"},{"QuerySetId":1266858,"Title":"posts with more than 2 comments before the first period","Description":null,"QueryBody":"SELECT SUBSTRING(Body, 0, (STR_POSITION(Body, '.') + 1)), STR_POSITION(BODY, '.') + 1, Body FROM Posts WHERE CommentCount > 2","CreationDate":"2020-07-25 2:07:05","validated":true,"QueryBody_Original":"SELECT SUBSTRING(Body, 0, (CHARINDEX('.', Body)+1)), CHARINDEX('.', BODY)+1, Body FROM Posts WHERE CommentCount > 2 ;"},{"QuerySetId":1267821,"Title":"Find number of comment with the given  search text","Description":null,"QueryBody":"SELECT c.text, c.id AS \"Comment Link\", creationdate FROM comments AS c WHERE c.text LIKE '%##keyword1##%' ORDER BY creationdate DESC","CreationDate":"2020-07-28 14:33:01","validated":true,"QueryBody_Original":"SELECT  c.text, \n         c.id AS [Comment Link], \n         creationdate \nFROM     comments c \nWHERE    c.text LIKE '%##keyword1##%' \nORDER BY creationdate desc"},{"QuerySetId":1274670,"Title":"Percent of users who added this [tag]?","Description":null,"QueryBody":"SELECT FIRST_USER AS \"User Link\", COUNT(PostId) AS \"COUNT\", COUNT(PostId) * 100 \/ SUM(COUNT(PostId)) OVER () AS \"%\" FROM (SELECT MAX(CreationDate) AS CDATE, PostId, FIRST_USER FROM (SELECT FIRST_VALUE(PH.UserId) OVER (PARTITION BY PH.PostId ORDER BY PH.CreationDate) AS FIRST_USER, * FROM PostHistory AS PH WHERE PH.Text LIKE '%<' + @tagToSearch + '>%') AS P GROUP BY PostId, FIRST_USER) AS FULL_DATA GROUP BY FIRST_USER ORDER BY COUNT(PostId) DESC","CreationDate":"2020-08-12 8:47:31","validated":true,"QueryBody_Original":"SELECT\nFIRST_USER as [User Link],\nCOUNT(PostId) AS 'COUNT',\nCOUNT(PostId)*100\/SUM(COUNT(PostId)) OVER () AS '%'\nFROM\n(select\nMAX(CreationDate) AS CDATE,\nPostId,\nFIRST_USER\nfrom\n(SELECT\nFIRST_VALUE(PH.UserId) OVER (PARTITION BY PH.PostId ORDER BY PH.CreationDate) AS FIRST_USER,\n*\nFROM \nPostHistory as PH\nWHERE\nPH.Text like '%<' + @tagToSearch + '>%'\n) AS P\ngroup by\nPostId,FIRST_USER\n) AS FULL_DATA\n\nGROUP BY\n\nFIRST_USER\n\nORDER BY\n\nCOUNT(PostId) desc"},{"QuerySetId":1274714,"Title":"Score vs. Number of bookmarks","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Total questions\", SUM(CASE WHEN Score > COALESCE(FavoriteCount, 0) THEN 1 ELSE 0 END) AS \"Score > Bookmarks\", SUM(CASE WHEN Score = COALESCE(FavoriteCount, 0) THEN 1 ELSE 0 END) AS \"Score = Bookmarks\", SUM(CASE WHEN Score < COALESCE(FavoriteCount, 0) THEN 1 ELSE 0 END) AS \"Score < Bookmarks\" FROM Posts WHERE PostTypeId = 1 \/* Questions *\/","CreationDate":"2020-08-12 10:38:26","validated":true,"QueryBody_Original":"SELECT  COUNT(*) AS 'Total questions',\n  SUM(IIF(Score > COALESCE(FavoriteCount, 0), 1, 0)) AS 'Score > Bookmarks',\n  SUM(IIF(Score = COALESCE(FavoriteCount, 0), 1, 0)) AS 'Score = Bookmarks',\n  SUM(IIF(Score < COALESCE(FavoriteCount, 0), 1, 0)) AS 'Score < Bookmarks'\n  FROM Posts\n  WHERE PostTypeId = 1 -- Questions"},{"QuerySetId":1275759,"Title":"Accepted answers after closing a question","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.ClosedDate AS \"Closed on\", v.CreationDate AS \"Accepted on\" FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId INNER JOIN Votes AS v ON a.Id = v.PostId WHERE v.VoteTypeId = 1 \/* Accept *\/ AND v.CreationDate > q.ClosedDate ORDER BY q.CreationDate DESC","CreationDate":"2020-08-13 0:34:48","validated":true,"QueryBody_Original":"SELECT  q.Id AS [Post Link],\n  q.ClosedDate AS 'Closed on',\n  v.CreationDate AS 'Accepted on'\n  FROM Posts AS q\n  INNER JOIN Posts AS a\n    ON q.Id = a.ParentId\n  INNER JOIN Votes AS v\n    ON a.Id = v.PostId\n  WHERE v.VoteTypeId = 1 -- Accept\n    AND v.CreationDate > q.ClosedDate\n  ORDER BY q.CreationDate DESC"},{"QuerySetId":1279722,"Title":"Top score in answer between two dates","Description":null,"QueryBody":"SELECT RANK() OVER (ORDER BY SUM(Score) DESC) AS \"Rank\", OwnerUserId AS \"User Link\", SUM(Score) AS \"Total Score\", COUNT(Id) AS \"Count\" FROM Posts WHERE (CreationDate >= '##Date1?2020-01-01##') AND (CreationDate <= '##Date2?2021-01-01##') AND (PostTypeId = 2) \/* -answers *\/ GROUP BY OwnerUserId ORDER BY SUM(Score) DESC LIMIT 500","CreationDate":"2020-08-17 11:42:45","validated":true,"QueryBody_Original":"SELECT  TOP (500)\n  RANK() OVER(ORDER BY SUM(Score) DESC) AS [Rank],\n  OwnerUserId AS [User Link],\n  SUM(Score) AS [Total Score],\n  COUNT(Id) AS [Count]\nFROM Posts\nWHERE (CreationDate >= '##Date1?2020-01-01##') AND (CreationDate <= '##Date2?2021-01-01##')\n  AND (PostTypeId=2) ---answers\nGROUP BY OwnerUserId\nORDER BY SUM(Score) DESC"},{"QuerySetId":1287791,"Title":"Year Answer Count and Number of Posts","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%YEAR') AS \"Year\", p.AnswerCount AS \"Number of Answers\", CAST(COUNT(p.Id) AS INT) AS \"Number of Posts\" FROM Posts AS p WHERE p.DeletionDate IS NULL AND p.PostTypeId = 1 GROUP BY TIME_TO_STR(p.CreationDate, '%YEAR'), p.AnswerCount ORDER BY p.AnswerCount, TIME_TO_STR(p.CreationDate, '%YEAR')","CreationDate":"2020-08-28 20:42:11","validated":true,"QueryBody_Original":"SELECT  DATEPART(YEAR, p.CreationDate) as [Year], p.AnswerCount as [Number of Answers], convert(BigInt, count(p.Id)) as [Number of Posts]\nfrom Posts p\nwhere p.DeletionDate is null and p.PostTypeId = 1\ngroup by DATEPART(YEAR, p.CreationDate), p.AnswerCount\norder by p.AnswerCount, DATEPART(YEAR, p.CreationDate)"},{"QuerySetId":1289247,"Title":"Number of gold badge holders for each tag","Description":null,"QueryBody":"SELECT b.name AS tag, COUNT(*) AS holders FROM Badges AS b, Users AS u WHERE b.class = 1 AND b.tagBased = 1 AND u.Id = b.UserId GROUP BY b.name ORDER BY holders DESC","CreationDate":"2020-09-02 0:35:36","validated":true,"QueryBody_Original":"SELECT  b.name tag, count(*) holders\nFROM Badges b, Users u\nWHERE b.class=1 and b.tagBased = 1 and u.Id=b.UserId \nGROUP BY b.name\nORDER BY holders DESC"},{"QuerySetId":1291750,"Title":"Questions which were bumped by community user many times","Description":null,"QueryBody":"SELECT RANK() OVER (ORDER BY COUNT(ph.Id) DESC) AS \"Rank\", COUNT(ph.Id) AS \"Count\", ph.PostId AS \"Post Link\", 'site:\/\/posts\/' + CAST(ph.PostId AS TEXT) + '\/revisions' AS \"Revision History\" FROM PostHistory AS ph WHERE ph.PostHistoryTypeId = 50 GROUP BY ph.PostId ORDER BY COUNT(ph.Id) DESC","CreationDate":"2020-09-07 18:01:24","validated":true,"QueryBody_Original":"SELECT \n  RANK() OVER (ORDER BY COUNT(ph.Id) DESC) AS [Rank],\n  COUNT(ph.Id) AS [Count],\n  ph.PostId AS [Post Link], \n  'site:\/\/posts\/' + CAST(ph.PostId AS varchar)+'\/revisions' AS [Revision History]\nFROM PostHistory ph\nWHERE ph.PostHistoryTypeId=50\n---50 = Bumped by Community User\nGROUP BY ph.PostId\nORDER BY COUNT(ph.Id) DESC"},{"QuerySetId":1295307,"Title":"Comments containing the given two keywords (case insensitive) 2","Description":null,"QueryBody":"SELECT PostID AS \"Post Link\", id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE (Text LIKE '%##Word1?student##%' COLLATE Latin1_General_CI_AI) AND (Text LIKE '%##Word2?homework##%' COLLATE Latin1_General_CI_AI) ORDER BY CreationDate","CreationDate":"2020-09-17 11:39:28","validated":true,"QueryBody_Original":"SELECT  PostID AS [Post Link], id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE (Text LIKE '%##Word1?student##%' COLLATE Latin1_General_CI_AI) AND (Text LIKE '%##Word2?homework##%' COLLATE Latin1_General_CI_AI)\nORDER BY CreationDate"},{"QuerySetId":1297289,"Title":"Top users from Bia\u0142ystok, Poland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Pos, Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bia_ystok%' ORDER BY Reputation DESC","CreationDate":"2020-12-08 16:43:49","validated":true,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Pos,\n  Id As [User Link],\n  Reputation\nFROM Users \nWHERE LOWER(Location) Like '%bia_ystok%'\nORDER BY Reputation DESC"},{"QuerySetId":1311738,"Title":"User rank in the world","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users ORDER BY Reputation DESC","CreationDate":"2020-10-19 15:17:43","validated":true,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1312484,"Title":"Posts-Answers Change For a Single Month","Description":null,"QueryBody":"SELECT MonthIndex, SUM(PostsAnswersCount) AS TotalPosts FROM (SELECT Posts.Id AS CurrentId, Posts.Title AS CurrentTitle, 1 + Posts.AnswerCount AS PostsAnswersCount, MONTH(Posts.CreationDate) AS CreationMonthCurrent, YEAR(Posts.CreationDate) AS CreationYearCurrent, DATEDIFF(CreationDate, '2008-07-01') AS MonthIndex FROM Posts WHERE Posts.PostTypeId = 1) AS PostsAnswersCounts GROUP BY MonthIndex ORDER BY MonthIndex","CreationDate":"2020-10-22 4:46:36","validated":true,"QueryBody_Original":"SELECT  \n  MonthIndex, SUM(PostsAnswersCount) AS TotalPosts\nFROM (\n  SELECT \n    Posts.Id AS CurrentId, \n    Posts.Title AS CurrentTitle, \n    1 + Posts.AnswerCount AS PostsAnswersCount, \n    MONTH(Posts.CreationDate) AS CreationMonthCurrent, \n    YEAR(Posts.CreationDate) AS CreationYearCurrent,\n    DATEDIFF(month, '2008-07-01', CreationDate) AS MonthIndex\n  FROM Posts\n  WHERE Posts.PostTypeId = 1\n) AS PostsAnswersCounts\nGROUP BY MonthIndex\nORDER BY MonthIndex"},{"QuerySetId":1313321,"Title":"Count of Users who can Downvote (have reputation above 125)","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"Total Users\", COUNT(CASE WHEN u.Reputation >= 125 THEN 1 ELSE NULL END) AS \"Total Can DV\", CAST(ROUND(COUNT(CASE WHEN u.Reputation >= 125 THEN 1 ELSE NULL END) \/ CAST(COUNT(u.Id) AS FLOAT) * 100, 4) AS TEXT) + '%' AS \"% Can DV\" FROM Users AS u","CreationDate":"2020-10-22 3:26:38","validated":true,"QueryBody_Original":"SELECT \nCOUNT(u.Id) AS 'Total Users',\nCOUNT(CASE WHEN u.Reputation >= 125 THEN 1 ELSE NULL END) AS 'Total Can DV',\nCAST(\nROUND(\n  COUNT(\n    CASE WHEN u.Reputation >= 125 THEN 1 ELSE NULL END\n    ) \/ CAST(COUNT(u.Id) AS Float) * 100\n, 4)\nAS nvarchar) + '%' AS '% Can DV'\nFROM Users u\n\n-- 125 pulled from https:\/\/stackoverflow.com\/help\/privileges\/vote-down"},{"QuerySetId":1316407,"Title":"Posts starting with upper case vs. lower case","Description":null,"QueryBody":"SELECT SUM(CASE WHEN Text LIKE '[ABCDEFGHIJKLMNOPQRSTUVWXYZ]%' THEN 1 ELSE 0 END) AS \"Upper\", SUM(CASE WHEN Text LIKE '[abcdefghijklmnopqrstuvwxyz]%' THEN 1 ELSE 0 END) AS \"Lower\" FROM PostHistory WHERE PostHistoryTypeId = 2","CreationDate":"2020-10-27 22:32:00","validated":true,"QueryBody_Original":"SELECT \n  SUM(CASE WHEN Text LIKE '[ABCDEFGHIJKLMNOPQRSTUVWXYZ]%' THEN 1 ELSE 0 END) AS 'Upper',\n  SUM(CASE WHEN Text LIKE '[abcdefghijklmnopqrstuvwxyz]%' THEN 1 ELSE 0 END) AS 'Lower'\n  FROM PostHistory\n  WHERE PostHistoryTypeId = 2"},{"QuerySetId":1319897,"Title":"Closed questions that have answers for year 2020","Description":null,"QueryBody":"SELECT AnswerCount, COUNT(1) FROM (SELECT PostID FROM PostHistory WHERE PostHistoryTypeID = 10) AS Hist INNER JOIN (SELECT ID, AnswerCount FROM Posts WHERE PostTypeID = 1 AND YEAR(CreationDate) = 2020) AS Post ON Hist.PostID = Post.ID GROUP BY AnswerCount ORDER BY AnswerCount","CreationDate":"2020-11-02 7:06:46","validated":true,"QueryBody_Original":"SELECT  AnswerCount, count(1)\nfrom\n(SELECT PostID \n from PostHistory\n where PostHistoryTypeID=10\n ) Hist\n inner join \n (SELECT ID, AnswerCount\n  from Posts\n  where PostTypeID=1\n  and year(CreationDate)=2020\n  ) Post\n on Hist.PostID=Post.ID\n group by  AnswerCount\n order by  AnswerCount"},{"QuerySetId":1329907,"Title":"Q&As with the most comments","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.CommentCount + COALESCE(SUM(a.CommentCount), 0) FROM Posts AS q LEFT OUTER JOIN Posts AS a ON q.Id = a.ParentId GROUP BY q.Id, q.CommentCount ORDER BY q.CommentCount + COALESCE(SUM(a.CommentCount), 0) DESC LIMIT 100","CreationDate":"2020-11-13 1:01:13","validated":true,"QueryBody_Original":"SELECT  TOP 100 q.Id AS [Post Link],\n   q.CommentCount + COALESCE(SUM(a.CommentCount), 0)\n   FROM Posts AS q\n   LEFT OUTER JOIN Posts AS a\n     ON q.Id = a.ParentId\n   GROUP BY q.Id, q.CommentCount\n   ORDER BY q.CommentCount + COALESCE(SUM(a.CommentCount), 0) DESC"},{"QuerySetId":1337082,"Title":"Users from Moldova and Romania","Description":null,"QueryBody":"SELECT * FROM users WHERE users.location LIKE '%Moldova%' OR users.location LIKE '%Romania%'","CreationDate":"2020-11-26 6:19:52","validated":true,"QueryBody_Original":"SELECT  *\nfrom users\nwhere users.location like '%Moldova%' or users.location like '%Romania%'"},{"QuerySetId":1337687,"Title":"Most viewed questions by Python or Regex tags","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, LastActivityDate, viewCount, Score FROM Posts WHERE Tags LIKE '%regex%' AND Tags LIKE '%python%' ORDER BY viewCount DESC","CreationDate":"2020-12-09 20:41:37","validated":true,"QueryBody_Original":"SELECT  Id as [Post Link], CreationDate, LastActivityDate, viewCount, Score\nfrom Posts\nwhere Tags like '%regex%' and Tags like '%python%'\norder by viewCount desc"},{"QuerySetId":1339618,"Title":"Questions closed as 'Needs details or clarity'","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p INNER JOIN PostHistory AS ph ON p.Id = ph.PostId AND ph.PostHistoryTypeId = 10 \/* Post Closed *\/ AND ph.Comment = '103' \/* Needs details or clarity *\/ WHERE NOT p.ClosedDate IS NULL ORDER BY p.CreationDate DESC","CreationDate":"2020-12-02 21:15:23","validated":true,"QueryBody_Original":"SELECT  p.Id AS [Post Link]\n  FROM Posts AS p\n  INNER JOIN PostHistory AS ph\n    ON p.Id = ph.PostId\n   AND ph.PostHistoryTypeId = 10 -- Post Closed\n   AND ph.Comment = '103' -- Needs details or clarity\n  WHERE p.ClosedDate IS NOT NULL\n  ORDER BY p.CreationDate DESC"},{"QuerySetId":1340757,"Title":"Time to first answer by minutes (self-answers excluded)","Description":null,"QueryBody":"SELECT DATEDIFF(a.CreationDate, q.CreationDate), COUNT(*) AS \"Number of questions answered within x minutes\" FROM Posts AS q JOIN LATERAL (SELECT OwnerUserId, CreationDate FROM Posts WHERE ParentId = q.Id AND CreationDate >= q.CreationDate ORDER BY CreationDate LIMIT 1) AS a WHERE q.OwnerUserId <> a.OwnerUserId GROUP BY DATEDIFF(a.CreationDate, q.CreationDate) ORDER BY DATEDIFF(a.CreationDate, q.CreationDate)","CreationDate":"2020-12-05 0:28:45","validated":true,"QueryBody_Original":"SELECT  DATEDIFF(MINUTE, q.CreationDate, a.CreationDate),\n  COUNT(*) AS 'Number of questions answered within x minutes'\n  FROM Posts AS q\n  CROSS APPLY (\n    SELECT TOP 1 OwnerUserId, CreationDate\n      FROM Posts\n      WHERE ParentId = q.Id\n        AND CreationDate >= q.CreationDate\n      ORDER BY CreationDate\n  ) a\n  WHERE q.OwnerUserId != a.OwnerUserId\n  GROUP BY DATEDIFF(MINUTE, q.CreationDate, a.CreationDate)\n  ORDER BY DATEDIFF(MINUTE, q.CreationDate, a.CreationDate)"}]