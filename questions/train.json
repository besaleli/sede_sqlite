[{"QuerySetId":466,"Title":"Most controversial posts on the site","Description":"Looks for posts with more than half the amount of downvotes as they have upvotes\nOrdered by upvotes\n","QueryBody":"SELECT * FROM Votes","CreationDate":"2020-06-24 11:23:10","validated":false,"QueryBody_Original":"SELECT \n* from Votes"},{"QuerySetId":784,"Title":"Comments asking for questions to be made wiki","Description":"All comments that contain the text should and wiki","QueryBody":"SELECT PostId AS \"Post Link\", Text FROM Comments WHERE Text LIKE '%should%wiki%'","CreationDate":"2019-07-07 11:01:51","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], Text from Comments\nwhere Text like '%should%wiki%'"},{"QuerySetId":873,"Title":"Posts containing a very short body","Description":"Posts containing a body that is less than 8 chars long\n","QueryBody":"SELECT Id AS \"Post Link\", Body, Score FROM Posts WHERE LENGTH(Body) < 64 AND Title <> 'undefined'","CreationDate":"2020-11-30 04:11:17","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body, Score from Posts where Len(Body) < 64 AND Title <> 'undefined'"},{"QuerySetId":877,"Title":"Posts containing a very short title","Description":"Posts containing a body that is less than 5 chars long\n","QueryBody":"SELECT Id AS \"Post Link\", Body, Score FROM Posts WHERE LENGTH(Title) < 20 AND ParentId IS NULL","CreationDate":"2020-11-25 01:19:00","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body, Score from Posts where Len(Title) < 20 and ParentId is null"},{"QuerySetId":886,"Title":"Posts with many \"thank you\" answers","Description":"Looking at posts shorter than 200 with the text `hank` somewhere in it\n","QueryBody":"SELECT ParentId AS \"Post Link\", COUNT(id) FROM posts WHERE posttypeid = 2 AND LENGTH(body) <= 200 AND (body LIKE '%hey i%') GROUP BY parentid HAVING COUNT(id) > 1 ORDER BY COUNT(id) DESC","CreationDate":"2020-11-30 02:23:24","validated":false,"QueryBody_Original":"SELECT \n   ParentId as [Post Link],\n   count(id)\nfrom posts\nwhere posttypeid = 2 and len(body) <= 200\n  and (body like '%hey i%')\ngroup by parentid\nhaving count(id) > 1\norder by count(id) desc;"},{"QuerySetId":951,"Title":"Low views, high votes yet unanswered","Description":"A list of questions with a high score and low view count\n","QueryBody":"SELECT questao.Id AS \"Post Link\", questao.Score, questao.ViewCount, comentario.Id, comentario.Score AS socre_comentario, comentario.ViewCount AS views_comentario FROM Posts AS questao JOIN Posts AS comentario ON questao.id = comentario.ParentId\/* AND questao.CreationDate >= '01\/01\/2018' *\/  WHERE questao.Tags LIKE '%<android%' AND questao.ParentId IS NULL ORDER BY questao.ViewCount LIMIT 100","CreationDate":"2020-04-04 04:29:48","validated":false,"QueryBody_Original":"SELECT \nTOP 100\nquestao.Id as [Post Link],\nquestao.Score,\nquestao.ViewCount,\ncomentario.Id,\ncomentario.Score as socre_comentario,\ncomentario.ViewCount as views_comentario\nFROM\nPosts questao\nJOIN Posts comentario ON questao.id = comentario.ParentId\nWHERE\nquestao.Tags like '%<android%'\n--AND questao.CreationDate >= '01\/01\/2018'\nAND questao.ParentId is null\nORDER BY\n questao.ViewCount ASC"},{"QuerySetId":952,"Title":"Top 500 answerers on the site","Description":"A list of the top 500 users with the highest average answer score excluding\ncommunity wiki \/ closed posts or users with less than 10 answers\n","QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.Id) > 10 ORDER BY \"Average Answer Score\" DESC LIMIT 500","CreationDate":"2020-11-28 22:11:05","validated":false,"QueryBody_Original":"SELECT  \n    TOP 500\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Answers,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Answer Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(Posts.Id) > 10\nORDER BY\n    [Average Answer Score] DESC"},{"QuerySetId":1080,"Title":"Top Users by Number of Bounties Won","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", COUNT(*) AS BountiesWon FROM Votes INNER JOIN Posts ON Votes.PostId = Posts.Id WHERE VoteTypeId = 9 GROUP BY Posts.OwnerUserId ORDER BY BountiesWon DESC LIMIT 300","CreationDate":"2020-09-24 00:04:31","validated":false,"QueryBody_Original":"SELECT  Top 300\n  Posts.OwnerUserId As [User Link], COUNT(*) As BountiesWon\nFROM Votes\n  INNER JOIN Posts ON Votes.PostId = Posts.Id\nWHERE\n  VoteTypeId=9\nGROUP BY\n  Posts.OwnerUserId\nORDER BY\n  BountiesWon DESC"},{"QuerySetId":1484,"Title":"Badge CreationDate is always NULL (IS THIS A BUG?)","Description":null,"QueryBody":"SELECT Name, (SELECT COUNT(*) FROM Badges AS B WHERE B.Name = C.Name AND CreationDate IS NULL) AS \"CountNull\", (SELECT COUNT(*) FROM Badges AS B WHERE B.Name = C.Name AND NOT CreationDate IS NULL) AS \"CountNotNull\" FROM Badges AS C GROUP BY Name","CreationDate":"2010-05-28 06:35:30","validated":false,"QueryBody_Original":"SELECT  Name, (SELECT Count(*) FROM Badges B WHERE B.Name=C.Name AND CreationDate Is NULL) As [CountNull],\n(SELECT Count(*) FROM Badges B WHERE B.Name=C.Name AND CreationDate Is NOT NULL) As [CountNotNull]\nFROM Badges C\nGroup By Name"},{"QuerySetId":1703,"Title":"Up vs Down votes by week day","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, 'WEEKDA%Y') AS Day, COUNT(*) AS Amount, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) AS UpVoteDownVoteRatio FROM Votes GROUP BY TIME_TO_STR(CreationDate, 'WEEKDA%Y'), TIME_TO_STR(CreationDate, 'WEEKDA%Y') ORDER BY TIME_TO_STR(CreationDate, 'WEEKDA%Y')","CreationDate":"2010-05-29 07:17:20","validated":false,"QueryBody_Original":"SELECT \n    DATENAME(WEEKDAY, CreationDate) AS Day,\n    Count(*) AS Amount,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float)) AS UpVoteDownVoteRatio\nFROM\n    Votes\nGROUP BY\n    DATENAME(WEEKDAY, CreationDate), DATEPART(WEEKDAY, CreationDate)\nORDER BY\n    DATEPART(WEEKDAY, CreationDate)"},{"QuerySetId":1717,"Title":"Up vs Down votes by hour of day of Question or Answer","Description":null,"QueryBody":"SELECT CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END AS \"Post Type\", TIME_TO_STR(p.CreationDate, '%-HOUR') AS Hour, COUNT(*) AS Amount, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) AS UpVoteDownVoteRatio FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id WHERE PostTypeId IN (1, 2) AND VoteTypeId IN (2, 3) GROUP BY PostTypeId, TIME_TO_STR(p.CreationDate, '%-HOUR') ORDER BY PostTypeId, TIME_TO_STR(p.CreationDate, '%-HOUR')","CreationDate":"2012-06-06 19:45:20","validated":false,"QueryBody_Original":"SELECT \n    CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END As [Post Type],\n    DATEPART(HOUR, p.CreationDate) AS Hour,\n    Count(*) AS Amount,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float)) AS UpVoteDownVoteRatio\nFROM\n    Votes v JOIN Posts p ON v.PostId=p.Id\nWHERE\n    PostTypeId In (1,2)\n  AND\n    VoteTypeId In (2,3)\nGROUP BY\n    PostTypeId, DATEPART(HOUR, p.CreationDate)\nORDER BY\n    PostTypeId, DATEPART(HOUR, p.CreationDate)"},{"QuerySetId":1718,"Title":"Up vs Down votes by day of week of Question or Answer","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END AS \"Post Type\", SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id WHERE PostTypeId IN (1) AND VoteTypeId IN (2, 3) AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId IS NULL AND YEAR(p.CreationDate) = 2020 GROUP BY p.Id, PostTypeId HAVING SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) = 0 ORDER BY DownVotes DESC LIMIT 50","CreationDate":"2020-05-04 15:31:23","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    p.Id as [Post Link],\n    CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END As [Post Type],\n    --DATENAME(WEEKDAY, p.CreationDate) AS Day,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes\nFROM\n    Votes v \n    JOIN Posts p ON v.PostId=p.Id\nWHERE\n    PostTypeId In (1) AND VoteTypeId In (2,3)\n    and CommunityOwnedDate is null and ClosedDate is null \n    and AcceptedAnswerId is null\n    and YEAR(p.CreationDate) = 2020\nGROUP BY p.Id, PostTypeId\n  HAVING SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) = 0\nORDER BY DownVotes desc"},{"QuerySetId":1782,"Title":"Up vs Down votes by hour of week of Question or Answer","Description":null,"QueryBody":"SELECT CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END AS \"Post Type\", TIME_TO_STR(p.CreationDate, 'WEEKDA%Y') AS \"Day\", TIME_TO_STR(p.CreationDate, '%-HOUR') AS \"Hour\", COUNT(*) AS Amount, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) AS UpVoteDownVoteRatio FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id GROUP BY PostTypeId, TIME_TO_STR(p.CreationDate, 'WEEKDA%Y'), TIME_TO_STR(p.CreationDate, 'WEEKDA%Y'), TIME_TO_STR(p.CreationDate, '%-HOUR') ORDER BY PostTypeId \/* DATEPART(WEEKDAY, p.CreationDate), DATEPART(HOUR, p.CreationDate) *\/, 7","CreationDate":"2010-05-29 17:58:51","validated":false,"QueryBody_Original":"SELECT \n    CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END As [Post Type],\n    DATENAME(WEEKDAY, p.CreationDate) AS [Day],\n    DATEPART(HOUR, p.CreationDate) AS [Hour],\n    Count(*) AS Amount,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float)) AS UpVoteDownVoteRatio\nFROM\n    Votes v JOIN Posts p ON v.PostId=p.Id\nGROUP BY\n    PostTypeId, DATEPART(WEEKDAY, p.CreationDate), DATENAME(WEEKDAY, p.CreationDate), DATEPART(HOUR, p.CreationDate)\nORDER BY\n    PostTypeId, --DATEPART(WEEKDAY, p.CreationDate), DATEPART(HOUR, p.CreationDate)\n7"},{"QuerySetId":1933,"Title":"Users with high self-accept rates (and having > 10 answers)","Description":"(the extreme self-learners)\n","QueryBody":"SELECT Users.Id AS \"User Link\", (CAST(COUNT(a.Id) AS FLOAT) \/ CAST((SELECT COUNT(*) FROM Posts AS p WHERE p.OwnerUserId = Users.Id AND PostTypeId = 1) AS FLOAT) * 100) AS SelfAnswerPercentage FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id INNER JOIN Users ON Users.Id = q.OwnerUserId WHERE q.OwnerUserId = a.OwnerUserId GROUP BY Users.Id, DisplayName HAVING COUNT(a.Id) > 20 ORDER BY SelfAnswerPercentage DESC LIMIT 100","CreationDate":"2020-02-22 19:02:24","validated":false,"QueryBody_Original":"SELECT  \n    TOP 100\n    Users.Id AS [User Link],\n    (CAST(Count(a.Id) AS float) \/ CAST((SELECT Count(*) FROM Posts p WHERE p.OwnerUserId = Users.Id AND PostTypeId = 1) AS float) * 100) AS SelfAnswerPercentage\nFROM\n    Posts q\n  INNER JOIN \n    Posts a ON q.AcceptedAnswerId = a.Id\n  INNER JOIN\n    Users ON Users.Id = q.OwnerUserId\nWHERE \n    q.OwnerUserId = a.OwnerUserId\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(a.Id) > 20\nORDER BY\n    SelfAnswerPercentage DESC"},{"QuerySetId":2142,"Title":"Find people from a company","Description":"Enter a company name to search for people working at that company\n","QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation FROM Users WHERE LOWER(Users.AboutMe) LIKE LOWER('%##CompanyName##%') ORDER BY Users.Reputation DESC","CreationDate":"2020-08-03 19:18:18","validated":false,"QueryBody_Original":"SELECT  \n      Users.Id as [User Link],\n      Users.Reputation\nFROM \n      Users\nWHERE \n      lower(Users.AboutMe) LIKE lower('%##CompanyName##%')\nORDER BY \n      Users.Reputation desc"},{"QuerySetId":2305,"Title":"Posts containing bit.ly shortened URLs","Description":"Posts containing bit.ly shortened URLs, which allow for tracking clicks :-(\nSee http:\/\/meta.stackoverflow.com\/questions\/29518\/can-and-should-stack-overflow-automatically-rewrite-bit-ly-links\nSee http:\/\/stackapps.com\/questions\/121\/what-ideas-do-you-have-for-the-api\/546#546\n","QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE Body LIKE '%http:\/\/bit.ly%'","CreationDate":"2010-06-05 16:54:37","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body\nfrom Posts \nwhere Body like '%http:\/\/bit.ly%'"},{"QuerySetId":2471,"Title":"Worst 100 Askers from the top 1500 by question count on the site","Description":"A list of the bottom 100 askers of questions\nordered by average answer score excluding\ncommunity wiki \/ closed posts, from the top 1500 by question count\n","QueryBody":"SELECT * FROM (SELECT OwnerUserId AS \"User Link\", COUNT(Posts.Id) AS Questions, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Question Score\" FROM Posts WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY OwnerUserId ORDER BY COUNT(Posts.Id) DESC LIMIT 1500) AS D ORDER BY \"Average Question Score\" LIMIT 100","CreationDate":"2010-06-07 17:44:41","validated":false,"QueryBody_Original":"SELECT  TOP 100 * FROM (\nSELECT \n    TOP 1500\n    OwnerUserId as [User Link],\n    Count(Posts.Id) AS Questions,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Question Score]\nFROM\n    Posts\nWHERE \n    PostTypeId = 1 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    OwnerUserId\nORDER BY\n    Count(Posts.Id) DESC\n)D\nORDER BY\n    [Average Question Score] ASC"},{"QuerySetId":2765,"Title":"Recent Tab Works - You Just Have to save a query for it to show up here","Description":"It works\n","QueryBody":"SELECT 'waffles keeps on changing stuff here, and will be adding a spy tab where you can see everything'","CreationDate":"2019-07-07 11:02:38","validated":false,"QueryBody_Original":"SELECT  'waffles keeps on changing stuff here, and will be adding a spy tab where you can see everything'"},{"QuerySetId":3631,"Title":"List of Users in a given location","Description":"This query lists all users in a given location sorted by reputation.\n","QueryBody":"SELECT * FROM Users WHERE Location LIKE '%##location##%' ORDER BY CreationDate","CreationDate":"2020-04-17 03:04:42","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Location LIKE '%##location##%'\nORDER BY CreationDate ASC"},{"QuerySetId":5486,"Title":"Users with the most rep-gaining answer acceptances","Description":"\n","QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation, (SELECT COUNT(*) FROM Posts AS q WHERE q.OwnerUserId = u.Id AND q.PostTypeId = 1) AS \"All Questions\", (SELECT COUNT(*) FROM Votes AS v INNER JOIN Posts AS a ON a.Id = v.PostId INNER JOIN Posts AS q ON q.Id = a.ParentId WHERE q.OwnerUserId = u.Id AND v.VoteTypeId = 1 AND q.OwnerUserId <> a.OwnerUserId AND (q.CommunityOwnedDate IS NULL OR q.CommunityOwnedDate > v.CreationDate)) AS \"Rep-gaining Acceptances\" FROM Users AS u ORDER BY 'Rep-gaining Acceptances' DESC LIMIT 100","CreationDate":"2010-06-26 20:37:53","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    u.Id AS [User Link],\n    u.Reputation,\n    (\n        SELECT COUNT(*) FROM Posts q\n            WHERE\n                q.OwnerUserId = u.Id AND\n                q.PostTypeId = 1\n    ) AS 'All Questions',\n    (\n        SELECT COUNT(*) FROM Votes v\n            INNER JOIN Posts a ON a.Id = v.PostId\n            INNER JOIN Posts q ON q.Id = a.ParentId\n            WHERE\n                q.OwnerUserId = u.Id AND\n                v.VoteTypeId = 1 AND\n                q.OwnerUserId != a.OwnerUserId AND\n                (q.CommunityOwnedDate IS NULL OR q.CommunityOwnedDate > v.CreationDate)\n    ) AS 'Rep-gaining Acceptances'\nFROM Users u\nORDER BY 'Rep-gaining Acceptances' DESC"},{"QuerySetId":5646,"Title":"#Temporary tables, indexes and procedures work!","Description":"#Temporary views and functions return errors stating they're not allowed.\r\nUse Text-only results, and include the execution plan to see the index has been used.\r\n","QueryBody":"SELECT * FROM tags","CreationDate":"2014-05-14 01:25:24","validated":false,"QueryBody_Original":"SELECT  * from tags"},{"QuerySetId":6134,"Title":"Total Questions and Answers per Month for the last 12","Description":"Total number of questions and answers for the last 12 months (in 30 day chunks)\n","QueryBody":"SELECT COUNT(Id) FROM Posts WHERE ParentId IS NULL AND CreationDate >= '2014\/11\/01' AND CreationDate < '2014\/12\/01' AND Tags LIKE '%google-cast%'","CreationDate":"2015-07-25 00:25:36","validated":false,"QueryBody_Original":"SELECT \n      count(Id)\n    FROM\n      Posts\n    WHERE\n      ParentId is null \n      and CreationDate >= '2014\/11\/01'\n      and CreationDate < '2014\/12\/01'\n      and Tags like '%google-cast%';"},{"QuerySetId":6193,"Title":"Find Stack Overflow Users In Your City","Description":"A simply query to find users in your city or country.\n","QueryBody":"SELECT Id, Reputation, DisplayName FROM Users WHERE Location LIKE '%##Location##%' ORDER BY Reputation DESC","CreationDate":"2016-03-24 16:39:00","validated":false,"QueryBody_Original":"SELECT  Id,Reputation,DisplayName\nFROM Users\nWHERE Location LIKE '%##Location##%'\nORDER BY Reputation DESC"},{"QuerySetId":6559,"Title":"Number of Qs and As per month","Description":null,"QueryBody":"SELECT MONTH(CreationDate) AS month, YEAR(CreationDate) AS year, (SELECT COUNT(id) FROM Posts WHERE PostTypeId = 1 AND (MONTH(CreationDate) = MONTH(p1.CreationDate) AND YEAR(CreationDate) = YEAR(p1.CreationDate))) AS questions, (SELECT COUNT(id) FROM Posts WHERE PostTypeId = 2 AND (MONTH(CreationDate) = MONTH(p1.CreationDate) AND YEAR(CreationDate) = YEAR(p1.CreationDate))) AS answers, COUNT(Id) AS total FROM Posts AS p1 GROUP BY MONTH(CreationDate), YEAR(CreationDate) ORDER BY year DESC, month DESC","CreationDate":"2010-07-07 23:14:14","validated":false,"QueryBody_Original":"SELECT  \n  month(CreationDate) as month, \n  year(CreationDate) as year,\n  (SELECT \n    count(id) \n   from \n     Posts \n   where \n     PostTypeId=1 and \n     (month(CreationDate) = month(p1.CreationDate)and \n      year(CreationDate) = year(p1.CreationDate))) as questions,\n  (SELECT \n    count(id) \n   from \n     Posts\n   where \n     PostTypeId=2 and \n     (month(CreationDate) = month(p1.CreationDate)and \n      year(CreationDate) = year(p1.CreationDate))) as answers,\n  count(Id) as total\nfrom \n  Posts as p1\ngroup by \n  month(CreationDate), year(CreationDate)\norder by \n  year desc, month desc"},{"QuerySetId":6651,"Title":"Question rep vs Answer rep","Description":"My scores from questions and answers\n","QueryBody":"SELECT CASE WHEN p.PostTypeId = 1 THEN 'Question' ELSE 'Answer' END AS \"Post Type\", CASE WHEN p.PostTypeId = 1 THEN SUM(p.Score) * 5 WHEN p.PostTypeId = 2 THEN SUM(p.Score) * 10 END AS \"Score\" FROM Posts AS p WHERE p.OwnerUserId = 31716 GROUP BY p.PostTypeId","CreationDate":"2016-07-22 23:58:30","validated":false,"QueryBody_Original":"SELECT \n   case \n   when p.PostTypeId = 1 then\n       'Question'\n   else\n       'Answer'\n   end as 'Post Type',\n   case \n   when p.PostTypeId = 1 then \n       SUM(p.Score) * 5 \n   when p.PostTypeId = 2 then\n       SUM(p.Score) * 10 \n   end as 'Score'\n   \nFROM\n  Posts p\nWHERE\n  p.OwnerUserId = 31716\nGROUP BY p.PostTypeId"},{"QuerySetId":7802,"Title":"Posts with many \"thank you\" answers -- yet no accepted answer","Description":null,"QueryBody":"SELECT p.ParentId AS \"Post Link\", COUNT(p.id) FROM posts AS p INNER JOIN posts AS parent ON parent.id = p.parentId WHERE p.posttypeid = 2 AND LENGTH(p.body) <= 200 AND (p.body LIKE '%hank%') AND parent.AcceptedAnswerId IS NULL GROUP BY p.parentid HAVING COUNT(p.id) > 1 ORDER BY COUNT(p.id) DESC","CreationDate":"2010-07-21 00:14:10","validated":false,"QueryBody_Original":"SELECT \n   p.ParentId as [Post Link],\n   count(p.id)\nfrom posts p\ninner join posts as parent on parent.id=p.parentId\nwhere p.posttypeid = 2 and len(p.body) <= 200\n  and (p.body like '%hank%')\n  and parent.AcceptedAnswerId is null\ngroup by p.parentid\nhaving count(p.id) > 1\norder by count(p.id) desc;"},{"QuerySetId":8164,"Title":"Amount of Bounties for Each Bounty Amount","Description":"Shows all bounty values and the amount of bounties for each bounty amount.\n","QueryBody":"SELECT BountyAmount, COUNT(*) AS AmountOfBounties FROM Votes WHERE NOT BountyAmount IS NULL AND BountyAmount > 0 GROUP BY BountyAmount ORDER BY BountyAmount DESC","CreationDate":"2010-07-25 13:00:03","validated":false,"QueryBody_Original":"SELECT  BountyAmount, count(*) AmountOfBounties\nfrom Votes\nwhere BountyAmount is not null\nand BountyAmount > 0\ngroup by BountyAmount\norder by BountyAmount desc"},{"QuerySetId":8479,"Title":"Which users have the most favourites?","Description":null,"QueryBody":"SELECT COUNT(v.Id) AS UserFaves, u.Reputation FROM Users AS u INNER JOIN Votes AS v ON v.UserId = u.Id AND v.VoteTypeId = 5 GROUP BY u.Id, u.Reputation ORDER BY UserFaves DESC","CreationDate":"2010-07-29 04:42:56","validated":false,"QueryBody_Original":"SELECT \n count(v.Id) as UserFaves,\n u.Reputation\nfrom Users u\ninner Join Votes v on v.UserId = u.Id and v.VoteTypeId = 5\ngroup by u.Id, u.Reputation\norder by UserFaves desc"},{"QuerySetId":9000,"Title":"Up vs Down votes by day of week of Accepted Answer","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, 'WEEKDA%Y') AS Day, COUNT(*) AS Amount, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) AS UpVoteDownVoteRatio FROM Votes AS v JOIN Posts AS p ON v.PostId = p.AcceptedAnswerId WHERE PostTypeId = 1 AND NOT p.AcceptedAnswerId IS NULL AND VoteTypeId IN (2, 3) GROUP BY TIME_TO_STR(p.CreationDate, 'WEEKDA%Y'), TIME_TO_STR(p.CreationDate, 'WEEKDA%Y') ORDER BY TIME_TO_STR(p.CreationDate, 'WEEKDA%Y')","CreationDate":"2012-05-10 21:11:02","validated":false,"QueryBody_Original":"SELECT \n    DATENAME(WEEKDAY, p.CreationDate) AS Day,\n    Count(*) AS Amount,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float)) AS UpVoteDownVoteRatio\nFROM\n    Votes v JOIN Posts p ON v.PostId=p.AcceptedAnswerId\nWHERE\n    PostTypeId=1 AND p.AcceptedAnswerId IS NOT NULL\n AND \n    VoteTypeId In (2,3)\nGROUP BY\n    DATEPART(WEEKDAY, p.CreationDate), DATENAME(WEEKDAY, p.CreationDate)\nORDER BY\n    DATEPART(WEEKDAY, p.CreationDate)"},{"QuerySetId":9001,"Title":"Up vs Down votes by hour of day of Accepted Answer","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%-HOUR') AS Hour, COUNT(*) AS Amount, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) AS UpVoteDownVoteRatio FROM Votes AS v JOIN Posts AS p ON v.PostId = p.AcceptedAnswerId WHERE PostTypeId = 1 AND NOT AcceptedAnswerId IS NULL GROUP BY TIME_TO_STR(p.CreationDate, '%-HOUR') ORDER BY TIME_TO_STR(p.CreationDate, '%-HOUR')","CreationDate":"2010-08-04 15:39:16","validated":false,"QueryBody_Original":"SELECT \n    DATEPART(HOUR, p.CreationDate) AS Hour,\n    Count(*) AS Amount,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float)) AS UpVoteDownVoteRatio\nFROM\n    Votes v JOIN Posts p ON v.PostId=p.AcceptedAnswerId\nWHERE\n    PostTypeId = 1 AND AcceptedAnswerId IS NOT NULL\nGROUP BY\n    DATEPART(HOUR, p.CreationDate)\nORDER BY\n    DATEPART(HOUR, p.CreationDate)"},{"QuerySetId":9003,"Title":"Up vs Down votes by hour of week of Accepted Answer","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, 'WEEKDA%Y') AS \"Day\", TIME_TO_STR(p.CreationDate, '%-HOUR') AS \"Hour\", COUNT(*) AS Amount, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) AS UpVoteDownVoteRatio FROM Votes AS v JOIN Posts AS p ON v.PostId = p.AcceptedAnswerId WHERE PostTypeId = 1 AND NOT AcceptedAnswerId IS NULL GROUP BY PostTypeId, TIME_TO_STR(p.CreationDate, 'WEEKDA%Y'), TIME_TO_STR(p.CreationDate, 'WEEKDA%Y'), TIME_TO_STR(p.CreationDate, '%-HOUR') ORDER BY PostTypeId \/* DATEPART(WEEKDAY, p.CreationDate), DATEPART(HOUR, p.CreationDate) *\/, 6","CreationDate":"2010-08-04 15:56:59","validated":false,"QueryBody_Original":"SELECT \n    DATENAME(WEEKDAY, p.CreationDate) AS [Day],\n    DATEPART(HOUR, p.CreationDate) AS [Hour],\n    Count(*) AS Amount,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float)) AS UpVoteDownVoteRatio\nFROM\n    Votes v JOIN Posts p ON v.PostId=p.AcceptedAnswerId\nWHERE\n    PostTypeId = 1 AND AcceptedAnswerId IS NOT NULL\nGROUP BY\n    PostTypeId, DATEPART(WEEKDAY, p.CreationDate), DATENAME(WEEKDAY, p.CreationDate), DATEPART(HOUR, p.CreationDate)\nORDER BY\n    PostTypeId, --DATEPART(WEEKDAY, p.CreationDate), DATEPART(HOUR, p.CreationDate)\n6"},{"QuerySetId":9849,"Title":"Top 100 users by average normalized score","Description":"Users who have the highest share in total score received by all answers to the questions they answered\n(among users with >100 eligible answers, includes answers with score >=0 and questions with total score of answers >0)\n","QueryBody":"SELECT u.Id AS \"User Link\", AVG(a.NormalizedScore) AS AvgNormalizedScore FROM Users AS u JOIN (SELECT (CAST(a.Score AS FLOAT) \/ SUM(allA.Score)) * 100 AS NormalizedScore, a.Id, a.OwnerUserId FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id JOIN Posts AS allA ON allA.ParentId = q.Id WHERE a.PostTypeId = 2 AND a.Score >= 0 AND allA.score > 0 GROUP BY a.Id, a.OwnerUserId, a.Score HAVING SUM(allA.Score) > 0) AS a ON a.OwnerUserId = u.Id GROUP BY u.Id HAVING COUNT(a.Id) > 100 ORDER BY AvgNormalizedScore DESC LIMIT 100","CreationDate":"2010-08-25 13:57:03","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    u.Id as [User Link], AVG(a.NormalizedScore) as AvgNormalizedScore\nFROM Users u JOIN\n    (SELECT (CAST(a.Score AS float) \/ SUM(allA.Score)) * 100 AS NormalizedScore,\n        a.Id, a.OwnerUserId\n    FROM Posts a \n        JOIN Posts q ON a.ParentId = q.Id\n        JOIN Posts allA ON allA.ParentId = q.Id\n    WHERE a.PostTypeId = 2\n          and a.Score >= 0 and allA.score > 0\n    GROUP BY a.Id, a.OwnerUserId, a.Score\n    HAVING SUM(allA.Score) > 0) a\n    ON a.OwnerUserId = u.Id\nGROUP BY u.Id\nHAVING COUNT(a.Id) > 100\nORDER BY AvgNormalizedScore DESC"},{"QuerySetId":9919,"Title":"Best hour of the day to ask a question","Description":"Which UTC hour of the day gets the most accepted answers\n","QueryBody":"SELECT TIME_TO_STR(CreationDate, '%I'), COUNT(*) FROM Posts WHERE PostTypeId = 2 AND ID IN (SELECT AcceptedAnswerID FROM Posts WHERE NOT AcceptedAnswerID IS NULL) GROUP BY TIME_TO_STR(CreationDate, '%I') ORDER BY 2 DESC","CreationDate":"2010-08-26 09:02:56","validated":false,"QueryBody_Original":"SELECT   \nDATEPART(hh, CreationDate), COUNT(*) FROM Posts\nWHERE PostTypeId = 2\nAND ID in (\n  SELECT AcceptedAnswerID FROM Posts WHERE AcceptedAnswerID IS NOT NULL\n)\nGROUP BY DATEPART(hh, CreationDate)\nORDER BY 2 DESC"},{"QuerySetId":10121,"Title":"Accounts with my e-mail hash","Description":"Find all accounts with an e-mail hash equal to mine.\n","QueryBody":"SELECT COUNT(*) FROM Users WHERE NOT EmailHash IS NULL","CreationDate":"2014-07-28 14:30:50","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Users\nWHERE EmailHash IS NOT NULL"},{"QuerySetId":10243,"Title":"Top 50 Biggest Favorite Lists","Description":"Shows the top 50 post favoriters, so that you can browse all those favorites.\n","QueryBody":"SELECT Id AS \"User Link\", (SELECT COUNT(*) FROM Votes WHERE VoteTypeId = 5 AND UserId = Users.Id) AS Favorites FROM Users ORDER BY Favorites DESC LIMIT 50","CreationDate":"2010-09-04 06:16:57","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    Id AS [User Link],\n    (\n        SELECT COUNT(*) FROM Votes\n        WHERE\n            VoteTypeId = 5 AND\n            UserId = Users.Id\n    ) AS Favorites    \n    FROM Users\n    ORDER BY Favorites DESC"},{"QuerySetId":10392,"Title":"Your Posting Quality (Reputation per Posts)","Description":"Enter your user ID and find out how much rep you earn per post\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"rank\", Id AS \"User Link\", Id, Reputation, counts.\"# Posts\", Reputation \/ counts.\"# Posts\" AS \"Rep Per Post\" FROM Users JOIN LATERAL (SELECT COUNT(*) FROM posts WHERE posts.OwnerUserId = Users.Id) AS counts(\"# Posts\") WHERE counts.\"# Posts\" > 0 ORDER BY \"Rep Per Post\" DESC LIMIT 2000","CreationDate":"2020-01-29 16:20:52","validated":false,"QueryBody_Original":"SELECT  TOP 2000\nROW_NUMBER() OVER (ORDER BY Reputation DESC) AS [rank],\n    Id AS [User Link],\n    Id,\n    Reputation,\n    counts.[# Posts],\n    Reputation \/\n    counts.[# Posts] AS [Rep Per Post]\nFROM Users\n  CROSS APPLY (\n    SELECT COUNT(*)\n    FROM posts\n    WHERE posts.OwnerUserId = Users.Id\n  ) counts([# Posts])\nWHERE counts.[# Posts] > 0\nORDER BY [Rep Per Post] DESC"},{"QuerySetId":10814,"Title":"50 Newest Users with >= X Reputation","Description":"\n","QueryBody":"SELECT Id AS \"User Link\", Reputation, 1 + DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) AS \"DaysMembership\" FROM Users WHERE Reputation >= '##Cutoff##' ORDER BY DaysMembership LIMIT 50","CreationDate":"2010-09-12 22:25:33","validated":false,"QueryBody_Original":"SELECT  TOP 50\n      Id as [User Link],\n      Reputation,\n1+DateDiff(Day, CreationDate, GETDATE()) As [DaysMembership]\n\nFROM\n      Users\nWHERE\n      Reputation >= '##Cutoff##'\nORDER BY\n      DaysMembership ASC"},{"QuerySetId":11255,"Title":"Find user by display name","Description":"Because partial searches don't work on the live site anymore\n","QueryBody":"SELECT Id AS \"User Link\", Reputation, EmailHash FROM Users WHERE DisplayName LIKE '%##DisplayName##%'","CreationDate":"2010-09-17 01:29:32","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], Reputation, EmailHash\nFROM Users\nWHERE DisplayName LIKE '%##DisplayName##%'\n\n-- Enter Query Description"},{"QuerySetId":11438,"Title":"Are you one of the top SO-users in your country or state?","Description":"As in the title. Depends on what people type into the country description.\n","QueryBody":"SELECT reputation, id AS \"User Link\", location, age FROM users WHERE location LIKE '%##country##%' ORDER BY reputation DESC","CreationDate":"2012-06-29 00:25:36","validated":false,"QueryBody_Original":"SELECT  reputation, id as [User Link], location, age from users \nwhere location like '%##country##%'\norder by reputation desc"},{"QuerySetId":11670,"Title":"Find Gaps in Post IDs","Description":"Sample for SO Question 3788552 SQL interview question","QueryBody":"SELECT low, high FROM (SELECT ID, low FROM (SELECT n1.ID AS ID, MIN(n2.ID) + 1 AS low FROM posts AS n1 INNER JOIN posts AS n2 ON n1.ID < n2.ID WHERE n1.ID < 5000 AND n2.ID < 5000 GROUP BY n1.ID) AS t WHERE NOT t.low IN (SELECT ID FROM posts) AND t.low < (SELECT MAX(ID) FROM posts)) AS t INNER JOIN (SELECT ID - 1 AS ID, high FROM (SELECT n1.ID AS ID, MIN(n2.ID) - 1 AS high FROM posts AS n1 INNER JOIN posts AS n2 ON n1.ID < n2.ID WHERE n1.ID < 5000 AND n2.ID < 5000 GROUP BY n1.ID) AS t WHERE NOT t.high IN (SELECT ID FROM posts)) AS t2 ON t.ID = t2.ID","CreationDate":"2010-09-24 20:56:10","validated":false,"QueryBody_Original":"SELECT  low, high\nFROM \n\n(\n\nSELECT ID, low \n\nFROM\n(SELECT n1.ID ID, min(n2.ID) + 1 low\n from posts n1\ninner join posts n2\non n1.ID < n2.ID \nWHERE n1.ID < 5000\n and n2.ID < 5000\n\nGroup by n1.ID) t\nWHERE t.low not in (SELECT ID FROM posts)\nand t.low < (SELECT MAX(ID) from posts) \n) t\n\nINNER JOIN \n(\n\nSELECT ID - 1 ID, high\n FROM\n(SELECT n1.ID ID , min(n2.ID) - 1 high\n from posts n1\ninner join posts n2\non n1.ID < n2.ID \nWHERE n1.ID < 5000\n and n2.ID < 5000\n \nGroup by n1.ID) t\nWHERE t.high not in (SELECT ID FROM posts) \n) t2\nON t.ID = t2.ID"},{"QuerySetId":11879,"Title":"Average Number of Votes on Answers per Month","Description":"The average number of votes (upvotes and downvotes) on answers per month\n","QueryBody":"SELECT YEAR(v.CreationDate) AS year, MONTH(v.CreationDate) AS month, CAST(COUNT(*) AS FLOAT) \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM posts AS p WHERE YEAR(p.CreationDate) = YEAR(v.CreationDate) AND MONTH(p.CreationDate) = MONTH(v.CreationDate) AND p.PostTypeId = 2) AS votes_per_answer FROM votes AS v INNER JOIN posts AS p ON (p.id = v.postid AND p.PostTypeId = 2) WHERE YEAR(v.CreationDate) >= 2012 GROUP BY YEAR(v.CreationDate), MONTH(v.CreationDate) ORDER BY 1 DESC, 2 DESC","CreationDate":"2015-08-13 00:27:52","validated":false,"QueryBody_Original":"SELECT      YEAR(v.CreationDate) year, \n           MONTH(v.CreationDate) month, \n           CAST(COUNT(*) AS float) \/ \n           (\n              SELECT CAST (COUNT(*) AS float)\n              FROM   posts p\n              WHERE  YEAR(p.CreationDate) = YEAR(v.CreationDate) AND\n                     MONTH(p.CreationDate) = MONTH(v.CreationDate) AND\n                     p.PostTypeId = 2\n           ) votes_per_answer\nFROM       votes v\nINNER JOIN posts p ON (p.id = v.postid AND p.PostTypeId = 2)\nwhere YEAR(v.CreationDate) >= 2012\nGROUP BY   YEAR(v.CreationDate), MONTH(v.CreationDate)\nORDER BY   1 DESC, 2 DESC"},{"QuerySetId":12192,"Title":"High on favorites, but low on votes","Description":"Find out which questions were favorited more than twice their score\n","QueryBody":"SELECT Id AS \"Post Link\", FavoriteCount, Score FROM Posts WHERE Score > 10 AND FavoriteCount > 10 ORDER BY FavoriteCount DESC","CreationDate":"2013-02-16 20:12:27","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], FavoriteCount, Score from Posts where Score\n> 10 and FavoriteCount > 10 order by FavoriteCount desc"},{"QuerySetId":12432,"Title":"Question and answer counts group by hour","Description":"Find the most quiet moment to ask or answer questions\n","QueryBody":"SELECT q.hour AS \"UTC Hour\", CAST(q.questions AS TEXT) + ' (' + CAST(q.percentage AS TEXT) + '%)' AS Questions, CAST(a.answers AS TEXT) + ' (' + CAST(a.percentage AS TEXT) + '%)' AS Answers FROM (SELECT TIME_TO_STR(CreationDate, '%h') AS hour, COUNT(*) AS questions, 100.0 * COUNT(*) \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1) AS percentage FROM Posts WHERE PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%h')) AS q INNER JOIN (SELECT TIME_TO_STR(CreationDate, '%h') AS hour, COUNT(*) AS answers, 100.0 * COUNT(*) \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 2) AS percentage FROM Posts WHERE PostTypeId = 2 GROUP BY TIME_TO_STR(CreationDate, '%h')) AS a ON q.hour = a.hour ORDER BY questions \/* q.hour, *\/, answers","CreationDate":"2012-12-19 16:19:39","validated":false,"QueryBody_Original":"SELECT \n  q.hour AS [UTC Hour],\n  CAST(q.questions AS varchar) + ' (' + CAST(q.percentage AS varchar) + '%)' AS Questions,\n  CAST(a.answers AS varchar) + ' (' + CAST(a.percentage AS varchar) + '%)' AS Answers\nFROM\n\n(SELECT\n  DATEPART(hour, CreationDate) AS hour,\n  COUNT(*) AS questions,\n  100.0 * COUNT(*) \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1) AS percentage\nFROM\n  Posts\nWHERE\n  PostTypeId = 1\nGROUP BY\n  DATEPART(hour, CreationDate)\n) q\nINNER JOIN\n(SELECT\n  DATEPART(hour, CreationDate) AS hour,\n  COUNT(*) AS answers,\n  100.0 * COUNT(*) \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 2) AS percentage\nFROM\n  Posts\nWHERE\n  PostTypeId = 2\nGROUP BY\n  DATEPART(hour, CreationDate)\n) a\nON q.hour = a.hour\n\nORDER BY\n  --q.hour,\n  questions,\n  answers"},{"QuerySetId":12879,"Title":"Nice persons (top 500 users ordered by profile views per day)","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY \"Views per Day\" DESC) AS \"#\", * FROM (SELECT u.Id AS \"User Link\", u.Views, u.Reputation, 1. * u.Views \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) AS \"Views per Day\" FROM Users AS u) AS q ORDER BY \"Views per Day\" DESC LIMIT 500","CreationDate":"2015-05-25 16:53:41","validated":false,"QueryBody_Original":"SELECT   TOP 500\n        ROW_NUMBER() OVER (ORDER BY [Views per Day] DESC) AS [#], *\nFROM    (\n        SELECT  u.Id AS [User Link], u.Views, u.Reputation, 1. * u.Views \/ DATEDIFF(d, CreationDate, GETDATE()) AS [Views per Day]\n        FROM    Users u\n        ) q\nORDER BY\n        [Views per Day] DESC"},{"QuerySetId":13007,"Title":"Top 100 users having highest votes per day ratio","Description":"Lists top 100 users who have highest votes\/day ratio excluding community user and minimum of 100 votes cast. Uncomment last line to filter by id.\n","QueryBody":"SELECT id AS \"User Link\", DATEDIFF(CURRENT_TIMESTAMP(), creationdate) AS \"Days\", (upvotes + downvotes) AS \"Votes\", ROUND(CAST(NULLIF((upvotes + downvotes), 0) AS FLOAT) \/ DATEDIFF(CURRENT_TIMESTAMP(), creationdate), 4) AS \"Votes\/Day Ratio\" FROM users WHERE id = 59435 AND (upvotes + downvotes) > 100 ORDER BY \"Votes\/Day Ratio\" DESC","CreationDate":"2013-04-24 22:22:35","validated":false,"QueryBody_Original":"SELECT  \n     id [User Link]\n     , datediff(dd, creationdate, GETDATE() )\"Days\"\n     ,(upvotes+downvotes) \"Votes\"\n     , round(cast(nullif((upvotes+downvotes), 0)as float) \/ datediff(dd, creationdate, GETDATE()),4)  \"Votes\/Day Ratio\"\nfrom users\nwhere  id = 59435\nand  (upvotes+downvotes)> 100\n-- and id = ##User_ID##\norder by \"Votes\/Day Ratio\" desc"},{"QuerySetId":13152,"Title":"View Deadweight (Phase 2) questions","Description":"View latest questions older than 3 months that have score < 1 and all answers have score < 0\n","QueryBody":"SELECT id AS \"Post Link\", Title, Body FROM posts AS q WHERE PostTypeId = 1 AND Score < 1 AND CreationDate < DATEADD(MONTH, -3, GETDATE()) AND ClosedDate IS NULL AND AcceptedAnswerId IS NULL AND AnswerCount > 0 AND NOT EXISTS(SELECT * FROM posts AS a WHERE PostTypeId = 2 AND ParentId = q.id AND Score >= 0) ORDER BY CreationDate DESC","CreationDate":"2010-10-22 19:02:23","validated":false,"QueryBody_Original":"SELECT  id as [Post Link],Title,Body  from posts as q\nwhere PostTypeId=1\nAND Score < 1\nAND CreationDate < DATEADD(MONTH, -3, GETDATE())\nAND ClosedDate is null\nand AcceptedAnswerId is null\nAND AnswerCount > 0\nAND NOT EXISTS (\n    SELECT * from posts as a where PostTypeId=2 and ParentId=q.id and Score>=0\n)\nORDER BY CreationDate DESC"},{"QuerySetId":14151,"Title":"Number of questions per month","Description":"Number of questions per month\n","QueryBody":"SELECT YEAR(CreationDate), MONTH(CreationDate), COUNT(*) FROM Posts WHERE ParentId IS NULL GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY 1 DESC, 2 DESC","CreationDate":"2010-11-13 21:38:55","validated":false,"QueryBody_Original":"SELECT  year(CreationDate), month(CreationDate), count(*)\nfrom Posts where ParentId is null\ngroup by year(CreationDate), month(CreationDate)\norder by 1 desc, 2 desc"},{"QuerySetId":14647,"Title":"Number of questions per day","Description":null,"QueryBody":"SELECT AVG(c) AS AvgQuesPerDay FROM (SELECT YEAR(CreationDate) AS y, MONTH(CreationDate) AS m, DAY(CreationDate) AS d, COUNT(*) AS c FROM Posts WHERE ParentId IS NULL AND CreationDate > DATEADD(DAY, -90, CURRENT_TIMESTAMP()) GROUP BY YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate)) AS t","CreationDate":"2018-12-01 21:35:21","validated":false,"QueryBody_Original":"SELECT  AVG(c) AS AvgQuesPerDay FROM (\nSELECT \n  year(CreationDate) AS y, \n  month(CreationDate) AS m, \n  day(CreationDate) AS d, \n  count(*) AS c\nfrom Posts where ParentId is null\nand CreationDate > DATEADD(DAY, -90, CURRENT_TIMESTAMP)\ngroup by year(CreationDate), month(CreationDate), day(CreationDate)\n) AS t"},{"QuerySetId":15901,"Title":"How is your favourite language\/tag doing on SO?","Description":"Shows the trend for your favourite tag\r\n","QueryBody":"SELECT * FROM tags ORDER BY count DESC","CreationDate":"2018-04-26 17:47:07","validated":false,"QueryBody_Original":"SELECT  * from tags order by count desc;"},{"QuerySetId":16630,"Title":"Select random non-closed, non-cw answers","Description":"Enter Query Description\n","QueryBody":"SELECT LENGTH(body) AS body_len, score FROM posts WHERE communityowneddate IS NULL AND closeddate IS NULL AND PostTypeId = 2 ORDER BY NEWID() LIMIT 1000","CreationDate":"2010-12-19 10:13:13","validated":false,"QueryBody_Original":"SELECT  TOP 1000 len(body) as body_len, score \nFROM posts \nWHERE communityowneddate is null \n  and closeddate is null\n  and PostTypeId = 2\norder by NEWID()"},{"QuerySetId":16722,"Title":"How many questions have been posted on 2010-12-01?","Description":"Counts the number of posts on a given day\n","QueryBody":"SELECT COUNT(Id) AS \"Questions posted\" FROM Posts WHERE CreationDate > '2010-12-01 00:00' AND CreationDate < '2010-12-01 23:59:59' AND PostTypeId = 1","CreationDate":"2010-12-20 16:24:20","validated":false,"QueryBody_Original":"SELECT \n    count(Id) as [Questions posted]\nfrom Posts\nwhere\n      CreationDate > '2010-12-01 00:00'\nand\n      CreationDate < '2010-12-01 23:59:59'\nand \n      PostTypeId = 1"},{"QuerySetId":17071,"Title":"The best (or the worst) of the best and worst","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\", AnswerCount FROM Posts WHERE Title LIKE '%worst%' OR Title LIKE '%best%' ORDER BY Score DESC","CreationDate":"2010-12-28 02:51:15","validated":false,"QueryBody_Original":"SELECT  Score, Id AS [Post Link], AnswerCount FROM Posts\nWHERE Title LIKE '%worst%' OR Title LIKE '%best%'\nORDER BY Score DESC"},{"QuerySetId":17291,"Title":"Average Question Score by Hour","Description":"Find out if time of day when you ask a question may affect the\nnumber of votes you receive.\n\nResults are skewed by different parts of the world being awake\nat different times, with each region possibly asking questions of\ndifferent perceived quality.\n","QueryBody":"SELECT TIME_TO_STR(creationdate, '%h') AS hour, COUNT(*) AS posts, AVG(CAST(score AS FLOAT)) AS \"average score\" FROM posts GROUP BY TIME_TO_STR(creationdate, '%h') ORDER BY hour","CreationDate":"2011-01-01 00:34:21","validated":false,"QueryBody_Original":"SELECT \n  datepart(hour,creationdate) AS hour,\n  count(*) AS posts,\n  avg(CAST(score AS float)) AS \"average score\"\nFROM posts\nGROUP BY datepart(hour,creationdate)\nORDER BY hour;"},{"QuerySetId":17321,"Title":"My Activity by UTC Hour","Description":"What time of day do I post questions and answers most?\n","QueryBody":"SELECT TIME_TO_STR(creationdate, '%h') AS hour, COUNT(CASE WHEN posttypeid = 1 THEN 1 END) AS questions, COUNT(CASE WHEN posttypeid = 2 THEN 1 END) AS answers FROM posts WHERE posttypeid IN (1, 2) GROUP BY TIME_TO_STR(creationdate, '%h') ORDER BY hour","CreationDate":"2014-11-11 09:42:11","validated":false,"QueryBody_Original":"SELECT \n datepart(hour,creationdate) AS hour,\n count(CASE WHEN posttypeid = 1 THEN 1 END) AS questions,\n count(CASE WHEN posttypeid = 2 THEN 1 END) AS answers\nFROM posts\nWHERE\n  posttypeid IN (1,2) \nGROUP BY datepart(hour,creationdate)\nORDER BY hour"},{"QuerySetId":17349,"Title":"Are SO users voting less per each Q\/A","Description":"Shows monthly aggregate averages of\nscores, page view counts, and answers counts\n","QueryBody":"SELECT PT, Month, Year, COUNT(*) \/ 1000 AS kCount, ROUND(AVG(CAST(Score AS FLOAT)), 2) AS mScore, ROUND(AVG(CAST(ViewCount AS FLOAT)), 0) AS mViewCount, ROUND(AVG(CAST(AnswerCount AS FLOAT)), 2) AS mAnswerCount FROM (SELECT PT = CASE PostTypeId WHEN 1 THEN 'Q' WHEN 2 THEN 'A' ELSE '?' END, Month = TIME_TO_STR(CreationDate, '%m'), Year = TIME_TO_STR(CreationDate, '%Y'), * FROM Posts WHERE CommunityOwnedDate IS NULL) AS t GROUP BY PT, Year, Month ORDER BY PT, Year, Month","CreationDate":"2011-01-01 05:52:28","validated":false,"QueryBody_Original":"SELECT \n  PT,\n  Month,\n  Year,\n  count(*)\/1000 as kCount,\n  round(avg(cast(Score as numeric)),2) as mScore,\n  round(avg(cast(ViewCount as numeric)),0) as mViewCount,\n  round(avg(cast(AnswerCount as numeric)),2) as mAnswerCount\n\n  from\n  (SELECT\n    PT = case PostTypeId\n      when 1 then 'Q'\n      when 2 then 'A'\n      else '?'\n    end,\n    Month = datepart(month, CreationDate),\n    Year = datepart(year, CreationDate),\n    *\n\n    from Posts\n    where CommunityOwnedDate is null\n  ) as t\n  group by PT, Year, Month\n  order by PT, Year, Month\n "},{"QuerySetId":17731,"Title":"UserId, question count, answer count, and reputation","Description":"for graphical analysis","QueryBody":"SELECT OwnerUserId, SUM(CNT_Q) AS \"Q Count\", SUM(CNT_A) AS \"A Count\", Reputation FROM (SELECT OwnerUserId, PostTypeId, (SELECT COUNT(PostTypeId) FROM Posts AS p1 WHERE PostTypeId = 1 AND p1.Id = p.Id) AS CNT_Q, (SELECT COUNT(PostTypeId) FROM Posts AS p2 WHERE PostTypeId = 2 AND p2.Id = p.Id) AS CNT_A, Reputation FROM Posts AS p INNER JOIN Users ON p.OwnerUserId = Users.Id WHERE NOT OwnerUserId IS NULL AND OwnerUserId <> -1) AS Q GROUP BY OwnerUserId, Reputation ORDER BY OwnerUserId","CreationDate":"2011-01-06 10:30:59","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, SUM(CNT_Q) AS \"Q Count\", SUM(CNT_A) AS \"A Count\", Reputation\nFROM (\nSELECT OwnerUserId, \n PostTypeId, \n (SELECT COUNT(PostTypeId) FROM Posts p1 where PostTypeId=1 and p1.Id=p.Id) as CNT_Q,\n (SELECT COUNT(PostTypeId) FROM Posts p2 where PostTypeId=2 and p2.Id=p.Id) as CNT_A, \n Reputation\nFROM Posts p INNER JOIN Users ON p.OwnerUserId=Users.Id\nWHERE OwnerUserId IS NOT NULL\nAND OwnerUserId <> -1\n) Q\nGROUP BY OwnerUserId, Reputation\nORDER BY OwnerUserId"},{"QuerySetId":18321,"Title":"Users with highst number of combined Views","Description":"Returns the Users with the highest number of total views for their questions\n","QueryBody":"SELECT Users.Id AS \"User Link\", SUM(ViewCount) AS TotalViews FROM Posts INNER JOIN Users ON Users.Id = Posts.OwnerUserId WHERE PostTypeId = 1 GROUP BY Users.Id ORDER BY TotalViews DESC","CreationDate":"2011-01-15 14:59:27","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link], Sum(ViewCount) as TotalViews FROM Posts INNER JOIN Users ON Users.Id = Posts.OwnerUserId WHERE PostTypeId = 1 GROUP BY Users.Id ORDER BY TotalViews DESC"},{"QuerySetId":25632,"Title":"Question View count (that are <10k) with average and grouped by user","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", SUM(ViewCount) AS VC, AVG(ViewCount) AS AVC, COUNT(p.OwnerUserId) AS QC FROM Posts AS p JOIN Users ON p.OwnerUserId = Users.Id WHERE PostTypeId = 1 AND ViewCount < 10000 AND CommunityOwnedDate IS NULL GROUP BY p.OwnerUserId HAVING COUNT(p.OwnerUserId) > 50 ORDER BY VC DESC LIMIT 100","CreationDate":"2011-01-29 04:58:22","validated":false,"QueryBody_Original":"SELECT \n    TOP 100\n    p.OwnerUserId  AS [User Link],\n    sum(ViewCount) as VC,\n    avg(ViewCount) as AVC,\n    COUNT(p.OwnerUserId ) as QC\n\nFROM Posts p\njoin Users on p.OwnerUserId = Users.Id\nwhere PostTypeId = 1 and ViewCount<10000 and CommunityOwnedDate is null\ngroup by p.OwnerUserId  \nHAVING COUNT(p.OwnerUserId ) > 50\norder by VC desc"},{"QuerySetId":26897,"Title":"Current candidates for proposed Hard Question badge","Description":"http:\/\/meta.stackoverflow.com\/questions\/78568\/new-badge-hard-question\n","QueryBody":"SELECT Q.Id AS \"Post Link\", Q.Score FROM Posts AS Q WHERE Q.Score >= 15 AND Q.PostTypeId = 1 AND Q.ClosedDate IS NULL AND Q.AcceptedAnswerId IS NULL AND NOT EXISTS(SELECT A.Id FROM Posts AS A WHERE A.Score >= 2 AND A.ParentId = Q.Id) ORDER BY Q.Score DESC","CreationDate":"2011-02-09 18:04:55","validated":false,"QueryBody_Original":"SELECT  Q.Id as [Post Link], Q.Score from Posts Q\nwhere Q.Score >= 15\nand Q.PostTypeId=1\nand Q.ClosedDate is null\nand Q.AcceptedAnswerId is null\nand not exists (SELECT A.Id from Posts A where A.Score >= 2 and A.ParentId = Q.Id)\norder by Q.Score desc"},{"QuerySetId":27276,"Title":"Where does Col Sharpnel place in downvoting percentage","Description":"Where does Col Sharpnel place in downvoting percentage\n","QueryBody":"SELECT SUM(CASE WHEN downvotes = 0 THEN 1 WHEN 1.0 * upvotes \/ NULLIF(downvotes, 0) >= y THEN 1 END), SUM(CASE WHEN 1.0 * upvotes \/ NULLIF(downvotes, 0) < y THEN 1 END) FROM users CROSS JOIN (SELECT y = 1.0 * upvotes \/ downvotes FROM users WHERE id = 285587) AS x WHERE users.upvotes > 0 AND users.reputation > 1000","CreationDate":"2011-02-13 15:43:56","validated":false,"QueryBody_Original":"SELECT \nsum(case when downvotes=0 then 1 when 1.0*upvotes\/nullif(downvotes,0) >= y then 1 end),\nsum(case when 1.0*upvotes\/nullif(downvotes,0) < y then 1 end)\nfrom users\ncross join (SELECT y=1.0*upvotes\/downvotes from users where id=285587) x\nwhere users.upvotes > 0\n  and users.reputation > 1000"},{"QuerySetId":27791,"Title":"Benford's law on SO - improved","Description":null,"QueryBody":"SELECT firstDigit, COUNT(*) AS \"Count\", CAST(100.0 * COUNT(*) \/ SUM(COUNT(*)) OVER () AS FLOAT(5, 2)) AS Percentage, Benford.p AS Law FROM (SELECT LEFT(LENGTH(post.Body), 1) AS firstDigit FROM Posts AS post) AS \" \" INNER JOIN (VALUES (1, 30.1), (2, 17.6), (3, 12.5), (4, 9.7), (5, 7.9), (6, 6.7), (7, 5.8), (8, 5.1), (9, 4.6)) AS Benford(d, p) ON Benford.d = \" \".firstDigit GROUP BY firstDigit, Benford.p ORDER BY firstDigit","CreationDate":"2011-02-17 06:02:22","validated":false,"QueryBody_Original":"SELECT  firstDigit,\n       COUNT(*) [Count],\n       convert(decimal(5,2),100.0*COUNT(*)\/SUM(COUNT(*)) OVER ()) Percentage,\n       Benford.p Law\nFROM\n(\n    SELECT LEFT(LEN(post.Body),1) as firstDigit\n    FROM Posts as post\n) [ ]\ninner join\n(   values\n    (1, 30.1),   (2, 17.6),   (3, 12.5),\n    (4, 9.7),    (5, 7.9),    (6, 6.7),\n    (7, 5.8),    (8, 5.1),    (9, 4.6)\n) Benford(d,p) on Benford.d = [ ].firstDigit\nGROUP BY firstDigit, Benford.p\nOrder by firstDigit"},{"QuerySetId":28339,"Title":"Top Users Reputation per Post","Description":"\n","QueryBody":"SELECT OwnerUserId AS \"User Link\", SUM(Posts.Score) AS Score, Users.Reputation, COUNT(Posts.Id) AS Posts, CAST(Users.Reputation AS FLOAT) \/ COUNT(Posts.Id) AS Ratio FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE Users.Reputation >= 1000 GROUP BY OwnerUserId, Users.Reputation HAVING COUNT(Posts.Id) > 50 ORDER BY Ratio DESC LIMIT 100","CreationDate":"2011-02-23 09:58:32","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  OwnerUserId as [User Link],\n  SUM(Posts.Score) AS Score,\n  Users.Reputation,\n  COUNT(Posts.Id) AS Posts,\n  CAST(Users.Reputation AS FLOAT)\/COUNT(Posts.Id) AS Ratio\nFROM\n  Posts\nINNER JOIN Users ON Users.Id = OwnerUserId\nWHERE\n  Users.Reputation >= 1000\nGROUP BY\n  OwnerUserId,\n  Users.Reputation\nHAVING\n  COUNT(Posts.Id) > 50\nORDER BY\n  Ratio DESC"},{"QuerySetId":28603,"Title":"Top 10 users with largest rep","Description":null,"QueryBody":"SELECT * FROM USERS ORDER BY Reputation DESC LIMIT 10","CreationDate":"2011-02-24 21:17:45","validated":false,"QueryBody_Original":"SELECT  TOP 10 * FROM USERS ORDER BY Reputation DESC"},{"QuerySetId":28950,"Title":"Death to \"Belongs on SU\"","Description":"Comments from migrations into Super User about migrating to Super User\n","QueryBody":"SELECT c.PostId AS \"Post Link\", c.text AS Commented FROM Comments AS C WHERE C.Text LIKE '%belongs on su%' ORDER BY c.creationdate DESC LIMIT 300","CreationDate":"2011-02-28 09:03:24","validated":false,"QueryBody_Original":"SELECT  TOP 300  c.PostId AS [Post Link], c.text AS Commented\nFROM Comments C\nWhere  C.Text LIKE '%belongs on su%'\nOrder By c.creationdate desc"},{"QuerySetId":28952,"Title":"Death to \"Belongs on SF\"","Description":"Comments from migrations into Server Fault about migrating to Server Fault\n","QueryBody":"SELECT c.PostId AS \"Post Link\", c.text AS Commented FROM Comments AS C WHERE C.Text LIKE '%belongs on server fault%' OR C.Text LIKE '%belongs on serverfault%' OR C.Text LIKE '%belongs on sf%' ORDER BY c.creationdate DESC LIMIT 300","CreationDate":"2011-02-28 09:05:06","validated":false,"QueryBody_Original":"SELECT  TOP 300  c.PostId AS [Post Link], c.text AS Commented\nFROM Comments C\nWhere  C.Text LIKE '%belongs on server fault%'\nor C.Text LIKE '%belongs on serverfault%'\nor C.Text LIKE '%belongs on sf%'\nOrder By c.creationdate desc"},{"QuerySetId":29348,"Title":"Short Answers containing \"same problem\"","Description":"Finds extremely short Answer posts that contain the phrase \"same problem\"\nThese are almost always very low quality non-answers.\n","QueryBody":"SELECT Id AS \"Post Link\", body FROM Posts WHERE posttypeid = 2 AND LENGTH(body) <= 100 AND (body LIKE '%can you help%')","CreationDate":"2018-03-24 00:25:15","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], body\nFrom Posts\nWhere posttypeid = 2 and len(body) <= 100\n  and (body like '%can you help%')"},{"QuerySetId":29494,"Title":"Questions shorter than their title","Description":"Finds questions where the body is shorter than the title.\nThese are usually low quality, and we should consider either closing or editing.\nAt the very least, leave a comment asking for clarification.\n","QueryBody":"SELECT Id AS \"Post Link\", body FROM Posts WHERE PostTypeId = 1 \/* Question *\/ AND LENGTH(Body) <= LENGTH(Title) ORDER BY Posts.LastActivityDate","CreationDate":"2016-12-10 07:37:21","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], body\nFrom Posts\nWhere PostTypeId = 1 --Question\nand len(Body) <= len(Title)\nORDER BY Posts.LastActivityDate ASC"},{"QuerySetId":31018,"Title":"Questions and Users by time of day","Description":"Average score, views, answers, user rep and user age in days, by time of day a question is asked\n","QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%I') AS \"Post Hour\", COUNT(p.Id) AS \"Questions Asked\", AVG(CAST(p.Score AS FLOAT)) AS \"Avg Score\", AVG(p.ViewCount) AS \"Avg Views\", AVG(CAST(p.AnswerCount AS FLOAT)) AS \"Avg Answers\", AVG(CAST(u.Reputation AS INT)) AS \"Avg Asker Rep\", AVG(CAST(DATEDIFF(p.CreationDate, u.CreationDate) AS FLOAT)) AS \"Avg User age in Days\" FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.PostTypeId = 1 GROUP BY TIME_TO_STR(p.CreationDate, '%I')","CreationDate":"2011-03-29 13:30:35","validated":false,"QueryBody_Original":"SELECT  DATEPART(hh, p.CreationDate) AS [Post Hour],\n       COUNT(p.Id) as [Questions Asked],\n       AVG(CAST(p.Score as numeric)) AS [Avg Score],\n       AVG(p.ViewCount) AS [Avg Views],\n       AVG(CAST(p.AnswerCount as numeric)) AS [Avg Answers],\n       AVG(CAST(u.Reputation as bigint)) AS [Avg Asker Rep],\n       AVG(CAST(DATEDIFF(dd, u.CreationDate, p.CreationDate) as numeric)) as [Avg User age in Days]\nFROM Posts p JOIN Users u ON u.Id = p.OwnerUserId\nWHERE p.PostTypeId = 1\nGROUP BY DATEPART(hh, p.CreationDate)"},{"QuerySetId":31056,"Title":"Answers by Hour of Day","Description":"Answers contributed and average score per hour of day\n","QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%I') AS \"Answer Hour\", COUNT(p.Id) AS \"Questions Answered\", AVG(CAST(p.Score AS FLOAT)) AS \"Avg Score\" FROM Posts AS p WHERE p.PostTypeId = 2 GROUP BY TIME_TO_STR(p.CreationDate, '%I')","CreationDate":"2011-03-29 14:01:26","validated":false,"QueryBody_Original":"SELECT  DATEPART(hh, p.CreationDate) AS [Answer Hour],\n       COUNT(p.Id) as [Questions Answered],\n       AVG(CAST(p.Score as numeric)) AS [Avg Score]\nFROM Posts p\nWHERE p.PostTypeId = 2\nGROUP BY DATEPART(hh, p.CreationDate)"},{"QuerySetId":31215,"Title":"TOP 500 users from Greece","Description":"Lists the top 500 users (ranked by reputation) that are located in Greece according to their profile information.\nA range of options is used to pinpoint members from Greece based on popular locations used.\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Thess%' OR Location LIKE N'%Greece%' OR Location LIKE N'%Gr' OR Location LIKE N'%Patra%' OR (Location LIKE N'%Athens%' AND NOT Location LIKE N'%GA%' AND NOT Location LIKE N'%OH%' AND NOT Location LIKE N'%Ga%' AND NOT Location LIKE N'%Oh%') ORDER BY reputation DESC LIMIT 500","CreationDate":"2011-03-31 14:08:18","validated":false,"QueryBody_Original":"SELECT  TOP 500\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Thess%'\n   OR Location like N'%Greece%'\n   OR Location like N'%Gr'\n   OR Location like N'%Patra%'\n   OR (Location like N'%Athens%' AND Location NOT like N'%GA%' AND Location NOT like N'%OH%' AND Location NOT like N'%Ga%' AND Location NOT like N'%Oh%')\nORDER BY\n   reputation DESC"},{"QuerySetId":31319,"Title":"Users from the Zwolle, the Netherlands","Description":"Lists every user (ranked by reputation) that is located in the Zwolle based on their profile info\r\n","QueryBody":"SELECT Users.id, Users.Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users INNER JOIN posthistory AS ph ON ph.userid = Users.id INNER JOIN posts ON posts.id = ph.postid WHERE Location LIKE N'%Zwolle%' AND tags LIKE '%php%' ORDER BY reputation DESC","CreationDate":"2016-07-06 12:27:57","validated":false,"QueryBody_Original":"SELECT  \n  Users.id,\n   Users.Id as [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\n\ninner join posthistory ph\n  on ph.userid = Users.id\ninner join posts\n  on posts.id = ph.postid\n  \n\nWHERE\n   Location like N'%Zwolle%'\n\nAND tags like '%php%'\n\nORDER BY\n   reputation DESC"},{"QuerySetId":31515,"Title":"\"Leet\" Users (reputation of precisely 1337)","Description":"Return the DisplayName of currently \"Leet\" users.","QueryBody":"SELECT DisplayName FROM Users WHERE Reputation = 1337","CreationDate":"2011-04-02 01:06:45","validated":false,"QueryBody_Original":"SELECT  DisplayName from Users where Reputation = 1337; "},{"QuerySetId":31520,"Title":"\"Eleet\" Users (reputation of precisely 31337)","Description":"Returns DisplayName of currently \"Eleet\" users.","QueryBody":"SELECT DisplayName FROM Users WHERE Reputation = 31337","CreationDate":"2011-04-02 01:10:06","validated":false,"QueryBody_Original":"SELECT  DisplayName from Users where Reputation = 31337; "},{"QuerySetId":32698,"Title":"UK Users UpVotes Down Votes","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location, UpVotes, DownVotes FROM Users WHERE (Location LIKE '%brazil%') ORDER BY reputation DESC","CreationDate":"2016-04-09 22:23:06","validated":false,"QueryBody_Original":"SELECT  ALL\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location,\n   UpVotes,\n   DownVotes\nFROM\n   Users\nWHERE\n  (Location like '%brazil%')\nORDER BY\n   reputation DESC"},{"QuerySetId":32822,"Title":"Search History by revision ID","Description":"Enter Query Description\n","QueryBody":"SELECT * FROM PostHistory WHERE RevisionGUID = '##RevID##'","CreationDate":"2011-04-18 10:01:55","validated":false,"QueryBody_Original":"SELECT  * from PostHistory\nwhere RevisionGUID= '##RevID##'"},{"QuerySetId":32893,"Title":"Search Users by User Name","Description":null,"QueryBody":"SELECT * FROM Users WHERE LOWER(DisplayName) LIKE LOWER('%##UserName##%')","CreationDate":"2011-04-18 17:31:28","validated":false,"QueryBody_Original":"SELECT  * from Users \nwhere LOWER(DisplayName) LIKE LOWER('%##UserName##%')"},{"QuerySetId":33044,"Title":"Number of Android questions and answers on Stack Overflow","Description":"Grouped by Month\n","QueryBody":"SELECT COUNT(id) AS Questions, SUM(AnswerCount) AS Answers FROM Posts WHERE Tags LIKE '%android%'","CreationDate":"2013-02-01 09:06:18","validated":false,"QueryBody_Original":"SELECT  count(id) as Questions, sum(AnswerCount) as Answers\n    from Posts\n   where Tags like '%android%'"},{"QuerySetId":33180,"Title":"Tag names that have plural counterparts","Description":null,"QueryBody":"SELECT S.TagName, S.Count AS \"Singular\", P.Count AS \"Plural\" FROM Tags AS S, Tags AS P WHERE P.TagName = S.TagName + 's' AND S.Count > 0 AND P.Count > 0","CreationDate":"2011-04-21 18:18:59","validated":false,"QueryBody_Original":"SELECT  S.TagName, S.Count AS [Singular], P.Count AS [Plural]\nFROM Tags AS S, Tags AS P\nWHERE P.TagName = S.TagName + 's'\nAND S.Count > 0\nAND P.Count > 0;"},{"QuerySetId":33185,"Title":"\"Not an answer\" candidates (upgraded)","Description":"This query attempts to find answers that aren't answers within 2 month\nDetects thanks, same problem, problem also, @\n","QueryBody":"SELECT Id AS \"Post Link\", body FROM Posts WHERE (Body LIKE '%hank%' OR Body LIKE 'same problem' OR Body LIKE 'problem also' OR Body LIKE '@') AND PostTypeId = 2 AND Score < 1 AND LENGTH(Body) < 200 ORDER BY LENGTH(body) LIMIT 500","CreationDate":"2014-08-08 02:59:20","validated":false,"QueryBody_Original":"SELECT  TOP 500 Id as [Post Link], body\nFROM Posts \nWHERE \n  (Body LIKE '%hank%' OR Body LIKE 'same problem' OR Body LIKE 'problem also' OR Body LIKE '@')\n  AND PostTypeId = 2\n  AND Score < 1\n  AND len(Body) < 200\n--  AND CreationDate >= DATEADD(MONTH, -2, GETDATE())\n  order by len(body)"},{"QuerySetId":33579,"Title":"TOP 100 users from Cambridge, UK","Description":"Lists the top 100 users (ranked by reputation) that are located Cambridge, UK according to their profile information.\n","QueryBody":"SELECT Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users WHERE (Location LIKE N'%Cambridge%' AND NOT Location LIKE N'%MA%') ORDER BY reputation DESC LIMIT 100","CreationDate":"2011-04-28 03:39:01","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id AS [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n  (Location like N'%Cambridge%' AND Location NOT like N'%MA%')\nORDER BY\n   reputation DESC"},{"QuerySetId":34111,"Title":"Finds Posts with images ranked by score","Description":null,"QueryBody":"SELECT Score AS \"Score\", Id AS \"Post Link\" FROM Posts WHERE PostTypeId = 2 AND Body LIKE '%http:\/\/i.imgur.com\/%' ORDER BY Score","CreationDate":"2011-05-03 23:48:39","validated":false,"QueryBody_Original":"SELECT \n  Score AS \"Score\",\n  Id AS [Post Link]\nFROM\n  Posts\nWHERE\n  PostTypeId = 2 AND\n  Body LIKE '%http:\/\/i.imgur.com\/%'\nORDER BY\n  Score"},{"QuerySetId":34643,"Title":"Question score by time of day","Description":"Questions with at least one answer, grouped by UTC hour.\n","QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W') AS \"Week\", COUNT(*) AS \"Total questions\", ROUND(100.0 * COUNT(CASE WHEN Score < 0 THEN 1 END) \/ COUNT(*), 2) AS \"% score<0\", ROUND(100.0 * COUNT(CASE WHEN Score > 0 THEN 1 END) \/ COUNT(*), 2) AS \"% score>0\" \/* Round(100.0 * Count(CASE WHEN Score < 0 THEN 1 END) \/ Count(*), 2) AS [% score<0], *\/ \/* Round(100.0 * Count(CASE WHEN Score = 0 THEN 1 END) \/ Count(*), 1) AS [% score=0], *\/ \/* Round(100.0 * Count(CASE WHEN Score = 1 THEN 1 END) \/ Count(*), 1) AS [% score=1], *\/ \/* Round(100.0 * Count(CASE WHEN Score > 1 THEN 1 END) \/ Count(*), 1) AS [% score>1] *\/ FROM Posts WHERE PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%W') ORDER BY TIME_TO_STR(CreationDate, '%W')","CreationDate":"2015-02-25 14:07:56","validated":false,"QueryBody_Original":"SELECT  \n    DATEPART(ww, CreationDate) AS [Week],\n    Count(*) AS [Total questions],\n    Round(100.0 * Count(CASE WHEN Score < 0 THEN 1 END) \/ Count(*), 2) AS [% score<0],\n    Round(100.0 * Count(CASE WHEN Score > 0 THEN 1 END) \/ Count(*), 2) AS [% score>0]\n    --Round(100.0 * Count(CASE WHEN Score < 0 THEN 1 END) \/ Count(*), 2) AS [% score<0],\n    --Round(100.0 * Count(CASE WHEN Score = 0 THEN 1 END) \/ Count(*), 1) AS [% score=0],\n    --Round(100.0 * Count(CASE WHEN Score = 1 THEN 1 END) \/ Count(*), 1) AS [% score=1],\n    --Round(100.0 * Count(CASE WHEN Score > 1 THEN 1 END) \/ Count(*), 1) AS [% score>1]\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY DatePart(ww, CreationDate)\nORDER BY DatePart(ww, CreationDate)"},{"QuerySetId":34990,"Title":"C# and Linq - Hard Questions","Description":"Tough questions relating to C# and Linq\n","QueryBody":"SELECT P.Id AS \"Post Link\", P.Tags, P.Title, FavoriteCount, ViewCount, AnswerCount, DATEDIFF(CURRENT_TIMESTAMP(), P.CreationDate) AS \"DaysOutstanding\", U.Reputation AS \"Owner Rep\", U.Id AS \"User Link\" FROM Posts AS P JOIN Users AS U ON P.OwnerUserID = U.Id WHERE FavoriteCount > 10 AND ViewCount > 100 AND AcceptedAnswerId IS NULL AND U.Reputation BETWEEN 100 AND 10000 AND (P.Tags LIKE '%c#%' AND P.Tags LIKE '%linq%') ORDER BY P.CreationDate DESC","CreationDate":"2011-05-11 21:33:39","validated":false,"QueryBody_Original":"SELECT  \n P.Id [Post Link],\n P.Tags,  \n P.Title,\n FavoriteCount, \n ViewCount,\n AnswerCount, \n DateDiff(DD, P.CreationDate, GETDATE()) [DaysOutstanding],\n U.Reputation [Owner Rep],\n U.Id [User Link]\nFROM\n Posts P JOIN Users U ON P.OwnerUserID = U.Id\nWHERE\n FavoriteCount > 10 AND\n ViewCount > 100 AND \n AcceptedAnswerId IS NULL AND\n U.Reputation BETWEEN 100 AND 10000 AND\n (P.Tags LIKE '%c#%' AND P.Tags LIKE '%linq%')\nORDER BY P.CreationDate DESC"},{"QuerySetId":35067,"Title":"Questions close to be nice, good, great or favorite","Description":"Looks for posts with 9, 24, 99 total score\nOr favorited by 24 people\nOrdered by most remarquable then by total views\n","QueryBody":"SELECT Users.CreationDate FROM Users JOIN Badges ON Users.Id = Badges.UserId \/* JOIN   Votes v ON u.Id=v.UserId  *\/ WHERE Name LIKE 'Legendary' \/* + *\/","CreationDate":"2014-10-02 16:47:46","validated":false,"QueryBody_Original":"SELECT  Users.CreationDate\nFrom Users\nJOIN  Badges ON Users.Id = Badges.UserId\n--JOIN   Votes v ON u.Id=v.UserId  \nWhere Name Like 'Legendary' --+"},{"QuerySetId":35772,"Title":"Highest view rate questions (non-Community Wiki). [2]","Description":"Highest hitrate non-CW questions, (presumably) what questions are viewed the most per time unit from Google searches.\n","QueryBody":"SELECT p.Id AS \"Post Link\", Score AS \"Votes\", ViewCount AS \"Views\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS age, p.ViewCount \/ DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS \"View Rate\" FROM Posts AS p\/* Field CommunityOwnedDate is absent for non-CW posts. *\/ \/* On Stack Overflow there are 100 non-CW post with more than about 28000. *\/  WHERE p.ViewCount > 1000 AND p.CommunityOwnedDate IS NULL AND p.ViewCount \/ DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) > 50 ORDER BY \"View Rate\" DESC LIMIT 100","CreationDate":"2011-05-22 03:37:46","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    p.Id as [Post Link],\n    Score as [Votes],\n    ViewCount as [Views],\n    DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP) as age,\n    p.ViewCount \/ DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP) as [View Rate]\nFROM Posts p\nWHERE p.ViewCount > 1000 AND --On Stack Overflow there are 100 non-CW post with more than about 28000.\n      p.CommunityOwnedDate is null and -- Field CommunityOwnedDate is absent for non-CW posts.\n      p.ViewCount \/ DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP) > 50\n      -- ViewCount \/ age >\nORDER BY [View Rate] DESC"},{"QuerySetId":36359,"Title":"Answers by time of week","Description":"Find the number of answers posted at various times of day and days of week.\r\n","QueryBody":"SELECT \"TimeOfDay\", SUM(CASE WHEN dow = 1 THEN 1 ELSE 0 END) AS Sunday, SUM(CASE WHEN dow = 2 THEN 1 ELSE 0 END) AS Monday, SUM(CASE WHEN dow = 3 THEN 1 ELSE 0 END) AS Tuesday, SUM(CASE WHEN dow = 4 THEN 1 ELSE 0 END) AS Wednesday, SUM(CASE WHEN dow = 5 THEN 1 ELSE 0 END) AS Thursday, SUM(CASE WHEN dow = 6 THEN 1 ELSE 0 END) AS Friday, SUM(CASE WHEN dow = 7 THEN 1 ELSE 0 END) AS Saturday FROM (SELECT CAST(RIGHT('0' + CAST(TIME_TO_STR(CreationDate, '%-HOUR') AS TEXT(2)), 2) + ':' + RIGHT('0' + CAST(TIME_TO_STR(CreationDate, '%-mINUTE') \/ 15 * 15 AS TEXT(30)), 2) AS DATETIME) AS \"TimeOfDay\", CAST(TIME_TO_STR(CreationDate, 'WEEKDA%Y') AS INT) AS dow FROM Posts AS p WHERE PostTypeId = 2) AS X GROUP BY \"TimeOfDay\" ORDER BY \"TimeOfDay\"","CreationDate":"2012-01-16 14:40:48","validated":false,"QueryBody_Original":"SELECT  [TimeOfDay], \n  sum(case when dow = 1 then 1 else 0 end) Sunday,\n  sum(case when dow = 2 then 1 else 0 end) Monday,\n  sum(case when dow = 3 then 1 else 0 end) Tuesday,\n  sum(case when dow = 4 then 1 else 0 end) Wednesday,\n  sum(case when dow = 5 then 1 else 0 end) Thursday,\n  sum(case when dow = 6 then 1 else 0 end) Friday,\n  sum(case when dow = 7 then 1 else 0 end) Saturday\nfrom\n(\n  SELECT\n    cast(\n      right('0' + convert(varchar(2), DATEPART(HOUR, CreationDate)), 2) +\n      ':' +\n      right('0' + convert(varchar, DATEPART(MINUTE, CreationDate) \/ 15 * 15), 2)\n      as datetime\n    ) as [TimeOfDay],\n    convert(int, DATEPART(WEEKDAY, CreationDate)) as dow\n  from Posts p\n  where PostTypeId = 2\n) as X\ngroup by [TimeOfDay]\norder by [TimeOfDay] asc"},{"QuerySetId":36390,"Title":"Old unanswered questions whose asker is still around","Description":"Unanswered questions where the asked has been active in the last 30 days, order with the oldest question first","QueryBody":"SELECT Question.Id, Question.Id AS \"Post Link\", Users.LastAccessDate, Question.AnswerCount FROM Posts AS Question JOIN Users ON Question.OwnerUserId = Users.Id WHERE Question.AcceptedAnswerId IS NULL AND NOT EXISTS(SELECT * FROM Posts AS Answer WHERE Answer.ParentId = Question.Id AND Answer.Score > 0) AND Question.PostTypeId = 1 AND Question.ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), Users.LastAccessDate) < 30 ORDER BY Question.Id","CreationDate":"2011-05-30 17:34:08","validated":false,"QueryBody_Original":"SELECT \nQuestion.Id, Question.Id AS [Post Link],\nUsers.LastAccessDate, Question.AnswerCount\nFROM Posts AS Question\nJOIN Users ON Question.OwnerUserId = Users.Id\nWHERE Question.AcceptedAnswerId IS NULL\nAND NOT EXISTS (SELECT * FROM Posts AS Answer WHERE Answer.ParentId = Question.Id AND Answer.Score > 0)\nAND Question.PostTypeId = 1\nAND Question.ClosedDate IS NULL\nAND DateDiff( Day, Users.LastAccessDate, GETDATE() ) < 30\nORDER BY Question.Id ASC"},{"QuerySetId":36934,"Title":"Orphan questions that were migrated from another site","Description":"Questions that were migrated and have no owner\n","QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate AS \"Date\", p.OwnerDisplayName AS \"Current user name\", ph.Comment AS \"Comment\" FROM Posts AS p INNER JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE ph.PostHistoryTypeId = 17 AND p.PostTypeId = 1 AND p.OwnerUserId IS NULL ORDER BY p.Id DESC LIMIT 1000","CreationDate":"2011-06-06 02:27:00","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  p.Id As [Post Link],\n  p.CreationDate As [Date],\n--  ph.UserId As [User Link], -- always Community\n--  ph.UserDisplayName As [History user name], -- always null\n  p.OwnerDisplayName As [Current user name],\n  ph.Comment As [Comment]\nFROM Posts p\nINNER JOIN PostHistory ph ON ph.PostId = p.Id\nWHERE ph.PostHistoryTypeId = 17\n  AND p.PostTypeId = 1\n  AND p.OwnerUserId IS NULL\nORDER BY p.Id DESC"},{"QuerySetId":38704,"Title":"Average question score\/views by hour","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%M') AS Month, TIME_TO_STR(CreationDate, '%Y') AS Year, ROUND(AVG(CAST(Score AS FLOAT)), 2) AS AvgScore, AVG(ViewCount) AS AvgViews FROM Posts WHERE PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%M'), TIME_TO_STR(CreationDate, '%Y') ORDER BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%M')","CreationDate":"2012-02-29 21:29:13","validated":false,"QueryBody_Original":"SELECT \nDatePart(mm,CreationDate) Month,\nDatePart(yyyy,CreationDate) Year,\nRound(Avg(Cast(Score as float)),2) AvgScore,\nAvg(ViewCount) AvgViews\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY DatePart(mm,CreationDate), DatePart(yyyy,CreationDate)\nORDER BY DatePart(yyyy,CreationDate), DatePart(mm,CreationDate)"},{"QuerySetId":39068,"Title":"Show 10 most viewed posts on SO","Description":null,"QueryBody":"SELECT ViewCount, Id AS \"Post Link\" FROM Posts ORDER BY ViewCount DESC LIMIT 10","CreationDate":"2015-08-04 13:04:25","validated":false,"QueryBody_Original":"SELECT  top(10) ViewCount, Id AS [Post Link]\nfrom Posts\norder by ViewCount desc"},{"QuerySetId":39198,"Title":"The 'I don't want any badges' guys","Description":"Or the higher conversion rate between badges and reputation\n","QueryBody":"SELECT u.id AS \"User Link\", u.reputation AS Reputation, COUNT(1) AS Badges, u.reputation \/ COUNT(1) AS ReputationsForABadge FROM badges AS b INNER JOIN users AS u ON b.userid = u.id WHERE u.reputation > 121 GROUP BY u.id, u.reputation ORDER BY ReputationsForABadge DESC LIMIT 1000","CreationDate":"2013-01-21 03:55:25","validated":false,"QueryBody_Original":"SELECT  TOP 1000 u.id [User Link],\n       u.reputation as Reputation,\n       count(1) as Badges,\n       u.reputation\/count(1) as ReputationsForABadge\nfrom badges b\n    inner join users u\n        on b.userid = u.id\nwhere u.reputation > 121\ngroup by u.id, u.reputation\norder by ReputationsForABadge desc"},{"QuerySetId":39838,"Title":"median comment count on all questions","Description":null,"QueryBody":"SELECT ((SELECT MAX(CommentCount) FROM (SELECT PERCENT AS CommentCount FROM Posts WHERE PostTypeId = 1 ORDER BY CommentCount LIMIT 50) AS BottomHalf) + (SELECT MIN(CommentCount) FROM (SELECT PERCENT AS CommentCount FROM Posts WHERE PostTypeId = 1 ORDER BY CommentCount DESC LIMIT 50) AS TopHalf)) \/ 2 AS Median","CreationDate":"2011-07-09 09:26:23","validated":false,"QueryBody_Original":"SELECT \n(\n (SELECT MAX(CommentCount) FROM\n   (SELECT TOP 50 PERCENT CommentCount FROM Posts where PostTypeId = 1 ORDER BY CommentCount) AS BottomHalf)\n +\n (SELECT MIN(CommentCount) FROM\n   (SELECT TOP 50 PERCENT CommentCount FROM Posts where PostTypeId = 1 ORDER BY CommentCount DESC) AS TopHalf)\n) \/ 2 AS Median"},{"QuerySetId":39889,"Title":"Response time: distribution in hours until accepted answer","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Count\", DATEDIFF(ans.CreationDate, qu.CreationDate) AS Hours FROM posts AS qu JOIN posts AS ans ON qu.AcceptedAnswerId = ans.Id GROUP BY DATEDIFF(ans.CreationDate, qu.CreationDate) ORDER BY \"Hours\"","CreationDate":"2012-11-21 18:25:42","validated":false,"QueryBody_Original":"SELECT  COUNT(*) AS [Count], \n      datediff(Hour, qu.CreationDate, ans.CreationDate) AS Hours\nfrom posts qu\njoin posts ans on qu.AcceptedAnswerId = ans.Id\nGROUP BY datediff(Hour, qu.CreationDate, ans.CreationDate)\norder by [Hours] ASC"},{"QuerySetId":40360,"Title":"High View Counts with no Images","Description":"Questions whos answers don't have any screenshots but have a very high view count\n","QueryBody":"SELECT P.Id AS \"Post Link\", P.Score, P.ViewCount FROM Posts AS P WHERE P.ClosedDate IS NULL AND P.PostTypeId = 1 AND P.AnswerCount >= 1 AND NOT P.Id IN (SELECT A.ParentId FROM Posts AS A WHERE A.PostTypeId = 2 AND A.Score >= 2 AND A.Body LIKE '%imgur%') ORDER BY P.ViewCount DESC","CreationDate":"2011-07-16 01:40:31","validated":false,"QueryBody_Original":"SELECT  P.Id AS [Post Link], P.Score, P.ViewCount FROM Posts AS P\nWHERE P.ClosedDate IS NULL\nAND P.PostTypeId = 1\nAND P.AnswerCount >= 1\nAND P.Id NOT IN\n(\n    SELECT A.ParentId FROM Posts AS A\n    WHERE A.PostTypeId = 2\n    AND A.Score >= 2\n    AND A.Body LIKE '%imgur%'\n)\nORDER BY P.ViewCount DESC"},{"QuerySetId":42432,"Title":"Questions by Time of Day","Description":"Designed to consider whether \"night\" questions have more visibility than \"day\" questions\n","QueryBody":"SELECT TIME_TO_STR(Posts.CreationDate, '%h') AS Hour, COUNT(Posts.Id) AS Questions FROM Posts WHERE PostTypeid = 1 \/* 1 = Question *\/ GROUP BY TIME_TO_STR(Posts.CreationDate, '%h') ORDER BY TIME_TO_STR(Posts.CreationDate, '%h')","CreationDate":"2015-02-08 22:34:16","validated":false,"QueryBody_Original":"SELECT  datepart(hour, Posts.CreationDate) Hour, count(Posts.Id) Questions\n  from Posts\n  where PostTypeid = 1 -- 1 = Question\n  group by datepart(hour, Posts.CreationDate)\n  order by datepart(hour, Posts.CreationDate)\n--  order by count(posts.id) desc"},{"QuerySetId":42437,"Title":"Questions by Time of Day and Day of Week","Description":"Designed to consider whether \"night\" questions have more visibility than \"day\" questions\n","QueryBody":"SELECT ((TIME_TO_STR(Posts.CreationDate, '%W')) + (TIME_TO_STR(Posts.CreationDate, '%h')) \/ 24.0) AS HourOfWeek, COUNT(Posts.Id) AS Questions FROM Posts WHERE PostTypeid = 1 \/* 1 = Question *\/ GROUP BY TIME_TO_STR(Posts.CreationDate, '%W'), TIME_TO_STR(Posts.CreationDate, '%h') ORDER BY HourOfWeek","CreationDate":"2015-02-08 22:53:22","validated":false,"QueryBody_Original":"SELECT \n  ((datepart(weekday, Posts.CreationDate))\n    + (datepart(hour, Posts.CreationDate))\/24.0) as HourOfWeek,\n  count(Posts.Id) Questions\n  from Posts\n  where PostTypeid = 1 -- 1 = Question\n  group by datepart(weekday, Posts.CreationDate), datepart(hour, Posts.CreationDate)\n  order by HourOfWeek asc\n-- order by count(posts.id) desc"},{"QuerySetId":42438,"Title":"Answers by Time of Day and Day of Week","Description":"Designed to consider whether \"night\" questions have more visibility than \"day\" questions\n","QueryBody":"SELECT TIME_TO_STR(Posts.CreationDate, '%A') AS Weekday, TIME_TO_STR(Posts.CreationDate, '%h') AS Hour, COUNT(Posts.Id) AS Answers FROM Posts WHERE PostTypeid = 2 \/* 2 = answer *\/ GROUP BY TIME_TO_STR(Posts.CreationDate, '%A'), TIME_TO_STR(Posts.CreationDate, '%h') ORDER BY COUNT(posts.id) DESC","CreationDate":"2011-07-29 07:02:34","validated":false,"QueryBody_Original":"SELECT \ndatename(weekday, Posts.CreationDate) Weekday,\ndatepart(hour, Posts.CreationDate) Hour,\ncount(Posts.Id) Answers\nfrom Posts\nwhere PostTypeid = 2 -- 2 = answer\ngroup by datename(weekday, Posts.CreationDate),\ndatepart(hour, Posts.CreationDate)\n-- order by datepart(hour, Posts.CreationDate)\norder by count(posts.id) desc"},{"QuerySetId":44641,"Title":"Find tags that only differ by hyphenation","Description":null,"QueryBody":"SELECT CASE WHEN a.Count >= b.Count THEN a.TagName ELSE b.TagName END AS First, CASE WHEN a.Count < b.Count THEN a.TagName ELSE b.TagName END AS Second FROM Tags AS a, Tags AS b WHERE a.Id < b.Id AND REPLACE(a.TagName, '-', '') = REPLACE(b.TagName, '-', '')","CreationDate":"2014-10-30 22:18:50","validated":false,"QueryBody_Original":"SELECT  CASE WHEN a.Count >= b.Count THEN a.TagName ELSE b.TagName END  AS First,\nCASE WHEN a.Count < b.Count THEN a.TagName ELSE b.TagName END  AS Second\nFROM Tags AS a, Tags AS b\nWHERE a.Id < b.Id\nAND REPLACE(a.TagName, '-', '') = REPLACE(b.TagName, '-', '');"},{"QuerySetId":44776,"Title":"The longest post that don't contain awesome newlines.","Description":"For some people, the enter key seems to be broken...","QueryBody":"SELECT ph1.PostId AS \"Post Link\", LENGTH(ph1.Text) FROM PostHistory AS ph1 WHERE NOT REPLACE(REPLACE(ph1.Text, CHAR(13), 'AWESOMENEWLINE'), CHAR(10), 'AWESOMENEWLINE') LIKE '%AWESOMENEWLINE%' AND NOT EXISTS(SELECT ph2.Id FROM PostHistory AS ph2 WHERE ph2.PostId = ph1.PostId AND ph2.CreationDate > ph1.CreationDate) ORDER BY LENGTH(Text) DESC LIMIT 100","CreationDate":"2011-08-20 16:12:16","validated":false,"QueryBody_Original":"SELECT  TOP 100 ph1.PostId AS [Post Link], LEN(ph1.Text) FROM PostHistory ph1 WHERE REPLACE(REPLACE(ph1.Text, CHAR(13), 'AWESOMENEWLINE'), CHAR(10), 'AWESOMENEWLINE') NOT LIKE '%AWESOMENEWLINE%' AND NOT EXISTS (SELECT ph2.Id FROM PostHistory ph2 WHERE ph2.PostId = ph1.PostId AND ph2.CreationDate > ph1.CreationDate) ORDER BY LEN(Text) DESC"},{"QuerySetId":44968,"Title":"All answers containing \"same problem\"","Description":null,"QueryBody":"SELECT *, Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%same problem%' AND Score < 0","CreationDate":"2011-08-23 23:24:33","validated":false,"QueryBody_Original":"SELECT  *,Id as [Post Link] FROM Posts WHERE Body LIKE '%same problem%' AND Score < 0 "},{"QuerySetId":44982,"Title":"Show all answers with lenght < 100 with link to other SO answer","Description":null,"QueryBody":"SELECT Score, Body, Id AS \"Post Link\" FROM Posts WHERE PostTypeId = 2 AND Body LIKE '%stackoverflow.com\/questions\/%' AND LENGTH(Body) < 100 ORDER BY Score","CreationDate":"2011-08-23 23:59:36","validated":false,"QueryBody_Original":"SELECT  \n  Score, \n Body,\n  Id as [Post Link] \nFROM \n  Posts \nWHERE \n  PostTypeId = 2 AND \n  Body LIKE '%stackoverflow.com\/questions\/%' AND \n  LEN(Body) < 100\nORDER BY Score ASC"},{"QuerySetId":45152,"Title":"Downvoted answers of answerers own questions","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Score AS \"Score\", a.CreationDate AS \"Date\" FROM Posts AS a INNER JOIN Posts AS q ON a.ParentID = q.Id AND a.OwnerUserID = q.OwnerUserId WHERE a.PostTypeId = 2 AND a.Score < 0 AND a.Id <> q.AcceptedAnswerId ORDER BY a.Score, a.CreationDate","CreationDate":"2011-08-26 00:42:31","validated":false,"QueryBody_Original":"SELECT \n  a.Id As [Post Link],\n  a.Score As [Score],\n  a.CreationDate as [Date]\nFROM Posts a\nINNER JOIN Posts q on a.ParentID = q.Id and a.OwnerUserID = q.OwnerUserId\nWHERE a.PostTypeId = 2\nAND a.Score < 0\nand a.Id != q.AcceptedAnswerId\norder by a.Score, a.CreationDate"},{"QuerySetId":45220,"Title":"Number of active users with >= 1 post in last 30 days","Description":"Enter Query Description\n","QueryBody":"SELECT COUNT(*) FROM Users WHERE Reputation > 500 AND DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) > 365","CreationDate":"2017-08-11 17:21:11","validated":false,"QueryBody_Original":"SELECT  \n  Count(*)\n  FROM Users\n  WHERE \n    Reputation > 500 AND\n    --DATEDIFF(day,CreationDate, GETDATE()) > 30 AND\n    DATEDIFF(day,LastAccessDate, GETDATE()) > 365\n    \/*(SELECT\n    Count(*) FROM Posts\n      WHERE \n        (Posts.OwnerUserId = Users.Id) AND\n        (DATEDIFF(day, CreationDate, GETDATE()) < 365)\n    ) > 1*\/"},{"QuerySetId":45726,"Title":"What percentage of my answers are accepted?","Description":"Returns the total number of answers, the number of accepted answers, and what percentage of answers are accepted.\n","QueryBody":"SELECT COUNT(a.Id) AS \"Total Answers\", SUM(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) AS \"Accepted Answers\", ROUND(SUM(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) * 100.0 \/ COUNT(a.Id), 1) AS \"Percentage Accepted\" FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE a.OwnerUserId = 11742502 AND q.postTypeId = 1 AND a.postTypeId = 2","CreationDate":"2019-11-01 18:05:32","validated":false,"QueryBody_Original":"SELECT \n    Count(a.Id) AS [Total Answers],\n    Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) AS [Accepted Answers],  \n    Round(Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) * 100.0 \/ Count(a.Id), 1) AS [Percentage Accepted]\nFROM\n    Posts AS a\n  JOIN Posts AS q\n    ON a.ParentId = q.Id\nWHERE\n      a.OwnerUserId = 11742502\n  AND q.postTypeId = 1\n  AND a.postTypeId = 2"},{"QuerySetId":45843,"Title":"Find identical titles (no closed questions, same owner)","Description":"We also show the creation date of the posts.\n","QueryBody":"SELECT a.Id AS \"Post Link\", a.CreationDate AS \"First Date\", b.Id AS \"Post Link\", b.CreationDate AS \"Second Date\" FROM Posts AS a JOIN Posts AS b ON a.Title = b.Title AND a.OwnerUserId = b.OwnerUserId WHERE a.Id < b.Id AND a.ClosedDate IS NULL AND b.ClosedDate IS NULL","CreationDate":"2011-08-31 23:01:01","validated":false,"QueryBody_Original":"SELECT  a.Id AS [Post Link], a.CreationDate AS \"First Date\",\n       b.Id AS [Post Link], b.CreationDate AS \"Second Date\"\nFROM Posts AS a JOIN Posts AS b ON a.Title = b.Title\n                             and a.OwnerUserId = b.OwnerUserId\nWHERE a.Id < b.Id\n  and a.ClosedDate IS NULL\n  and b.ClosedDate IS NULL;"},{"QuerySetId":45846,"Title":"Find identical titles (no closed questions, different owner)","Description":"We also show the creation date of the posts.\n","QueryBody":"SELECT a.Id AS \"Post Link\", a.CreationDate AS \"First Date\", b.Id AS \"Post Link\", b.CreationDate AS \"Second Date\" FROM Posts AS a JOIN Posts AS b ON a.Title = b.Title WHERE a.Id < b.Id AND a.OwnerUserId <> b.OwnerUserId AND a.ClosedDate IS NULL AND b.ClosedDate IS NULL","CreationDate":"2011-08-31 23:07:11","validated":false,"QueryBody_Original":"SELECT  a.Id AS [Post Link], a.CreationDate AS \"First Date\",\n       b.Id AS [Post Link], b.CreationDate AS \"Second Date\"\nFROM Posts AS a JOIN Posts AS b ON a.Title = b.Title\nWHERE a.Id < b.Id\n  and a.OwnerUserId != b.OwnerUserId\n  and a.ClosedDate IS NULL\n  and b.ClosedDate IS NULL;"},{"QuerySetId":46080,"Title":"Something to Flag \"Not an answer\" in the body of an answer","Description":"Enter Query Description\n","QueryBody":"SELECT id AS \"Post Link\" FROM posts WHERE body LIKE '% Edit: %'","CreationDate":"2016-02-09 07:13:11","validated":false,"QueryBody_Original":"SELECT  id [Post Link] from posts where body like '% Edit: %'"},{"QuerySetId":46322,"Title":"Find identical titles (no closed questions) by the same user","Description":"We also show the creation date of the posts.\n","QueryBody":"SELECT a.Id AS \"Post Link\", a.CreationDate AS \"First Date\", b.Id AS \"Post Link\", b.CreationDate AS \"Second Date\" FROM Posts AS a JOIN Posts AS b ON a.Title = b.Title WHERE a.Id < b.Id AND a.ClosedDate IS NULL AND b.ClosedDate IS NULL AND a.OwnerUserId = b.OwnerUserId","CreationDate":"2011-09-04 17:02:01","validated":false,"QueryBody_Original":"SELECT  a.Id AS [Post Link], a.CreationDate AS \"First Date\",\n       b.Id AS [Post Link], b.CreationDate AS \"Second Date\"\nFROM Posts AS a JOIN Posts AS b ON a.Title = b.Title\nWHERE a.Id < b.Id\n  and a.ClosedDate IS NULL\n  and b.ClosedDate IS NULL\n  and a.OwnerUserId = b.OwnerUserId;"},{"QuerySetId":46557,"Title":"Newest questions with score > 10 and \"best\" in their title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, CreationDate, ClosedDate FROM Posts WHERE PostTypeId = 1 AND Score > 10 AND (Title LIKE '%best%' OR Title LIKE '%Best%') ORDER BY CreationDate DESC, Score DESC LIMIT 100","CreationDate":"2011-09-07 08:08:35","validated":false,"QueryBody_Original":"SELECT  Top 100 Id [Post Link], Score, CreationDate, ClosedDate\nFROM Posts\nWHERE PostTypeId = 1\nAND Score > 10\nAND (Title LIKE '%best%' \nOR Title LIKE '%Best%')\nORDER BY CreationDate DESC, Score DESC\n\n-- Enter Query Description"},{"QuerySetId":46878,"Title":"Number of Unanswered post with single tag, sorted by tag","Description":null,"QueryBody":"SELECT Tags, COUNT(*) FROM Posts WHERE NOT Tags LIKE '%><%' AND PostTypeId = 1 AND ClosedDate IS NULL AND AnswerCount = 0 GROUP BY Tags ORDER BY COUNT(*) DESC, Tags","CreationDate":"2011-09-09 16:28:02","validated":false,"QueryBody_Original":"SELECT  \n    Tags, COUNT(*)\nFROM\n    Posts\nWHERE\n    Tags NOT LIKE '%><%' AND\n    PostTypeId = 1 AND\n    ClosedDate IS NULL AND\n    AnswerCount = 0\nGROUP BY Tags\nORDER BY COUNT(*) DESC, Tags"},{"QuerySetId":47326,"Title":"Copy Editor and Strunk & White","Description":null,"QueryBody":"SELECT COUNT(DISTINCT PostId) FROM PostHistory AS ph WHERE PostHistoryTypeId IN (4, 5) AND NOT PostId IN (SELECT p.Id FROM Posts AS p WHERE p.OwnerUserId = ph.UserId) AND UserId = 572644","CreationDate":"2011-09-15 10:53:12","validated":false,"QueryBody_Original":"SELECT \n    COUNT(distinct PostId)\nfrom\n    PostHistory ph\nwhere\n    PostHistoryTypeId in (4,5)\n    and PostId not in (SELECT p.Id from Posts p where p.OwnerUserId = ph.UserId)\n    and UserId = 572644"},{"QuerySetId":47367,"Title":"Proportion of users who've asked no questions","Description":"Counts the number of users with Rep>=1000 who've asked no questions, and the total number of users with Rep>=1000.","QueryBody":"SELECT (SELECT COUNT(u.DisplayName) FROM Users AS u WHERE u.Reputation >= 1000) AS \"significant users\", (SELECT COUNT(u.DisplayName) FROM Users AS u WHERE NOT u.Id IN (SELECT DISTINCT OwnerUserId FROM Posts WHERE PostTypeId = 1 AND OwnerUserId <> '') AND u.Reputation >= 94000) AS \"with no questions\"","CreationDate":"2015-08-02 18:22:45","validated":false,"QueryBody_Original":"SELECT \n(SELECT\n count(u.DisplayName)\n from\n  Users u\nwhere u.Reputation >= 1000) as [significant users],\n(SELECT\n count(u.DisplayName)\n from\n  Users u\n  where u.Id not in\n    (SELECT distinct OwnerUserId\n       from Posts\n       where PostTypeId = 1\n         and OwnerUserId != '')\nand u.Reputation >= 94000) as [with no questions]\n;"},{"QuerySetId":47443,"Title":"You're probably doing it wrong (Something to flag)","Description":"Questions with Multiple Answers by the OP\n","QueryBody":"SELECT a.ParentId AS \"Post Link\", a.owneruserid, u.DisplayName, COUNT(a.id) FROM posts AS a INNER JOIN posts AS q ON a.parentid = q.id AND q.owneruserid = a.owneruserid INNER JOIN users AS u ON q.owneruserid = u.id WHERE a.postTypeid = 2 GROUP BY a.Parentid, a.owneruserid, u.DisplayName, q.creationdate HAVING COUNT(a.id) > 2 ORDER BY COUNT(a.id) DESC","CreationDate":"2011-09-16 01:15:39","validated":false,"QueryBody_Original":"SELECT \n a.ParentId [Post Link],\n a.owneruserid,\n u.DisplayName,\n Count(a.id)\nFROM\n posts a\n INNER JOIN posts q \n on a.parentid = q.id\n and q.owneruserid = a.owneruserid\n inner join users u\non q.owneruserid = u.id\nWHERE a.postTypeid = 2\nGROUP by \n a.Parentid,\n a.owneruserid,\n u.DisplayName,\n q.creationdate\nHaving count(a.id) > 2\norder by count(a.id)desc"},{"QuerySetId":47481,"Title":"BURN WITH FIRE ALL STUPID UNICORN COMMENTS","Description":"They are just stupid noise.\n","QueryBody":"SELECT PostID AS \"Post Link\", Text FROM Comments WHERE Text LIKE '%unicorn%'","CreationDate":"2011-09-16 19:15:31","validated":false,"QueryBody_Original":"SELECT  PostID as [Post Link], Text FROM Comments WHERE Text LIKE '%unicorn%'"},{"QuerySetId":48029,"Title":"Rep Breakdown of unaccepted answer","Description":null,"QueryBody":"SELECT CAST((reputation \/ 10) * 10 AS TEXT) + ' - ' + CAST((reputation \/ 10) * 10 + 9 AS TEXT) AS RepRange, COUNT(*) AS Count FROM users GROUP BY reputation \/ 10 ORDER BY reputation \/ 10","CreationDate":"2012-12-16 19:10:40","validated":false,"QueryBody_Original":"SELECT  CAST((reputation\/10)*10 AS VARCHAR) + ' - ' + CAST((reputation\/10)*10+9 AS VARCHAR) AS RepRange, \n      COUNT(*) AS Count\nfrom users\nGROUP BY reputation\/10\nORDER BY reputation\/10"},{"QuerySetId":50291,"Title":"Total of questions asked per month","Description":"This query fetches the amount of questions asked per month, organized by month and year.  Modified to sort by year first.\n","QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') AS year, COUNT(id) AS total FROM Posts WHERE PostTypeId = 1 AND tags LIKE '%<r>%' GROUP BY TIME_TO_STR(CreationDate, '%Y') ORDER BY TIME_TO_STR(CreationDate, '%Y')","CreationDate":"2019-12-04 21:32:49","validated":false,"QueryBody_Original":"SELECT \n    datepart(year,CreationDate) as year,\n    COUNT(id) as total\nFROM\n    Posts\nWHERE\n    PostTypeId = 1 AND tags LIKE '%<r>%'\nGROUP BY\n    datepart(year,CreationDate)\nORDER BY\n    datepart(year,CreationDate)"},{"QuerySetId":50550,"Title":"Percent of Questions Accepted and Answered to Total Questions","Description":"This was written in an attempt to provide stats for this:\nhttp:\/\/www.reddit.com\/r\/Wordpress\/comments\/ljlsy\/what_do_you_guys_think_of\/\nI'm not 100% sure this is correct, but I'm pretty sure it is close.\nWould love it if someone who knows the schema better can review it.\n","QueryBody":"SELECT Questions, Accepted, Answered, CAST(Questions - Answered AS INT) AS Unanswered, CAST(CAST(Accepted \/ Questions * 100 AS FLOAT(5, 1)) AS TEXT(5)) + '%' AS PercentAccepted, CAST(CAST(Answered \/ Questions * 100 AS FLOAT(5, 1)) AS TEXT(5)) + '%' AS PercentAnswered FROM (SELECT COUNT(*) * 1.0 AS Questions, SUM(CASE WHEN AcceptedAnswerId IS NULL THEN 0 ELSE 1 END) * 1.0 AS Accepted, SUM(CASE WHEN COALESCE(AnswerCount, 0) = 0 THEN 0 ELSE 1 END) * 1.0 AS Answered FROM Posts WHERE 1 = 1 AND PostTypeId = 1 AND ClosedDate IS NULL AND CommunityOwnedDate IS NULL) AS x","CreationDate":"2011-10-26 03:10:18","validated":false,"QueryBody_Original":"SELECT  \n    Questions,\n    Accepted,\n    Answered,\n    cast( Questions - Answered as int ) as Unanswered,\n    cast( cast( Accepted\/Questions*100 as decimal(5,1) ) as varchar(5) ) +'%' as PercentAccepted,\n    cast( cast( Answered\/Questions*100 as decimal(5,1) ) as varchar(5) ) +'%' as PercentAnswered\nfrom (\nSELECT\n    count(*)*1.0 as Questions,\n    sum(case when AcceptedAnswerId is null then 0 else 1 end)*1.0 as Accepted,\n    sum(case when ISNULL(AnswerCount,0)=0 then 0 else 1 end)*1.0 as Answered\nfrom\n   Posts \nwhere 1=1\n   and PostTypeId=1\n   and ClosedDate IS NULL \n   and CommunityOwnedDate IS NULL\n) x"},{"QuerySetId":50707,"Title":"Find \"me too\" (so-called) answers","Description":"Finds the answers to questions that appear to be the \"me too\" style of answers that contribute absolutely nothiing to the question and should either be removed or converted to a comment by a mod.\n","QueryBody":"SELECT Id AS \"Post Link\", SUBSTRING(Body, STR_POSITION(Body, 'me too') - 15, 45) AS \"Occurrence\" FROM Posts WHERE PostTypeId = 2 AND (Body LIKE 'me too%' OR Body LIKE '% me too%') AND NOT Body LIKE '%affects me too%' AND NOT Body LIKE '%fixed it%' AND NOT BODY LIKE '%resolved%'","CreationDate":"2011-10-28 06:22:29","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link],\n       SUBSTRING(Body, CHARINDEX('me too', Body) - 15, 45) as [Occurrence]\nFROM Posts WHERE\n    PostTypeId = 2 AND\n    (Body LIKE 'me too%' OR Body LIKE '% me too%') AND\n    Body NOT LIKE '%affects me too%' AND\n    Body NOT LIKE '%fixed it%' AND\n    BODY NOT LIKE '%resolved%'"},{"QuerySetId":50888,"Title":"Number of unanswered questions per month by calendar month","Description":"Shows how the chance of getting an answer has fallen over time\n","QueryBody":"SELECT a.month, total, unanswered, CAST(CAST(unanswered * 1.0 \/ total * 100 AS FLOAT(5, 1)) AS TEXT(5)) + '%' AS PercentUnanswered FROM (SELECT CAST(TIME_TO_STR(creationdate, '%Y%m%d') AS TEXT(6)) AS month, COUNT(*) AS total FROM posts WHERE posttypeid = 1 GROUP BY CAST(TIME_TO_STR(creationdate, '%Y%m%d') AS TEXT(6))) AS a, (SELECT CAST(TIME_TO_STR(creationdate, '%Y%m%d') AS TEXT(6)) AS month, COUNT(*) AS unanswered FROM posts WHERE postTypeID = 1 AND NOT id IN (SELECT DISTINCT ParentId FROM posts WHERE PostTypeId = 2) GROUP BY CAST(TIME_TO_STR(creationdate, '%Y%m%d') AS TEXT(6))) AS b WHERE a.month = b.month ORDER BY a.month","CreationDate":"2011-10-31 22:28:50","validated":false,"QueryBody_Original":"SELECT  a.month, total, unanswered,\ncast(cast(unanswered*1.0\/total*100 as decimal(5,1)) as varchar(5)) + '%' as PercentUnanswered\nfrom \n  (SELECT Convert(varchar(6), creationdate, 112) as month,  count(*) as total\n   from posts \n   where posttypeid = 1\n   group by Convert(varchar(6), creationdate, 112)) a,\n  (SELECT Convert(varchar(6), creationdate, 112) as month,  count(*) as unanswered\n   from posts \n   where postTypeID = 1\n   and id not in (\n     SELECT distinct ParentId from posts \n     where PostTypeId = 2)   \n  group by Convert(varchar(6), creationdate, 112)) b\nwhere a.month = b.month\norder by a.month"},{"QuerySetId":51338,"Title":"How Popular is my name?","Description":"Inspired by MSO\/q\/111104\/, I threw this together for the fun of it.  Displays the most popular usernames and the number of users with that name.  A name must have over 50 users to be counted.\n","QueryBody":"SELECT displayname AS Name, COUNT(displayname) AS \"Number of Users With This Name\" FROM users GROUP BY displayname HAVING displayname = 'Matthias Klupsch' ORDER BY COUNT(displayname) DESC","CreationDate":"2016-02-02 15:35:02","validated":false,"QueryBody_Original":"SELECT  displayname as Name, count(displayname) as 'Number of Users With This Name'\nfrom users group by displayname\nhaving displayname = 'Matthias Klupsch'\norder by count(displayname) desc"},{"QuerySetId":51725,"Title":"Explained reasons why people downvote answers","Description":"Enter Query Description\n","QueryBody":"SELECT c.Postid AS \"Post Link\", c.text, p.score FROM comments AS c INNER JOIN Posts AS p ON c.postID = p.id WHERE p.PostTypeID = 2 AND c.text LIKE '-1%' ORDER BY SCORE","CreationDate":"2011-11-09 01:37:37","validated":false,"QueryBody_Original":"SELECT  \n    c.Postid [Post Link], \n    c.text ,\n    p.score\nFROM \n    comments c \n    INNER JOIN Posts p\n    ON c.postID = p.id\nWHERE \n    p.PostTypeID = 2\n    and\n    c.text like '-1%'\nORDER BY SCORE "},{"QuerySetId":52800,"Title":"Obsolete \"should be wiki\" comments","Description":"comments containing \"should be wiki\" or \"should be a wiki\" on CW questions\n","QueryBody":"SELECT c.PostId AS \"Post Link\", C.CreationDate, c.text AS Body FROM Comments AS C, Posts AS P WHERE ((C.Text LIKE '%should be wiki%' OR C.Text LIKE '%should be a wiki%') AND C.PostID = P.ID AND P.ClosedDate IS NULL AND P.PostTypeId = 1 AND NOT CommunityOwnedDate IS NULL) ORDER BY creationdate LIMIT 1000","CreationDate":"2011-11-16 19:17:37","validated":false,"QueryBody_Original":"SELECT  TOP 1000  c.PostId AS [Post Link], C.CreationDate, c.text AS Body\nFROM Comments C, Posts P\nWhere (\n  (C.Text LIKE '%should be wiki%' or C.Text LIKE '%should be a wiki%') AND\n  C.PostID = P.ID AND\n  P.ClosedDate IS NULL AND\n  P.PostTypeId = 1 AND\n  CommunityOwnedDate is not null\n)\norder by creationdate"},{"QuerySetId":53124,"Title":"Even our heroes can fail","Description":"If you are upset of a few downwote know that even the biggest can fail too. See the most downvoted answers of the top users\n","QueryBody":"SELECT p.id AS \"Post Link\", Score, u.id AS \"User Link\" FROM Posts AS p, Users AS u ORDER BY Score LIMIT 10","CreationDate":"2018-12-07 03:20:35","validated":false,"QueryBody_Original":"SELECT  TOP 10 p.id AS [Post Link], Score, u.id AS [User Link]\nFROM Posts p, Users u\nORDER BY Score ASC"},{"QuerySetId":53178,"Title":"Total number of posts by months","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts","CreationDate":"2018-04-25 23:02:05","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts"},{"QuerySetId":53942,"Title":"Posts using the ambiguous [unit] tag","Description":"Posts tagged [unit] but not tagged [unit-testing] or [testing]\n","QueryBody":"SELECT Posts.Id, Posts.Title, Posts.Tags FROM Posts WHERE Posts.Tags LIKE '%<unit>%' AND NOT Posts.Tags LIKE '%<testing>%' AND NOT Posts.Tags LIKE '%<unit-testing>%'","CreationDate":"2011-11-26 14:32:43","validated":false,"QueryBody_Original":"SELECT  Posts.Id, Posts.Title, Posts.Tags\nfrom Posts\nwhere Posts.Tags like '%<unit>%'\nand Posts.Tags not like '%<testing>%'\nand Posts.Tags not like '%<unit-testing>%'"},{"QuerySetId":54294,"Title":"Candidate obsolete comments mentioning accept rate","Description":"Picks up variations like 'acceptance' rate, and references to meta post on accepting answers.\r\n","QueryBody":"SELECT c.PostId AS \"Post Link\", c.CreationDate FROM Comments AS c JOIN Posts AS a ON a.Id = c.PostId AND a.PostTypeId = 2 \/* Answer *\/ JOIN Posts AS q ON q.Id = a.ParentId AND q.PostTypeId = 1 \/* Question *\/ WHERE (c.Text LIKE '%accept% rate%' OR c.Text LIKE '%\/5234\/%') ORDER BY c.CreationDate","CreationDate":"2013-08-12 19:04:44","validated":false,"QueryBody_Original":"SELECT  \n  c.PostId as [Post Link],\n  c.CreationDate\nfrom Comments c\njoin Posts a\non   a.Id = c.PostId\nand  a.PostTypeId = 2 -- Answer\njoin Posts q\non   q.Id = a.ParentId\nand  q.PostTypeId = 1 -- Question\nwhere (\n      c.Text LIKE '%accept% rate%'\n      or c.Text LIKE '%\/5234\/%'\n      )\norder by\n      c.CreationDate"},{"QuerySetId":55195,"Title":"Number of users with displayname like 'John%'","Description":"case-insensitive\n","QueryBody":"SELECT COUNT(id) FROM users WHERE LOWER(displayname) LIKE 'john%'","CreationDate":"2011-12-06 01:08:44","validated":false,"QueryBody_Original":"SELECT \ncount(id)\nfrom users\nwhere lower(displayname) like 'john%'"},{"QuerySetId":55849,"Title":"How many moderators have the \"Sportsmanship\" badge?","Description":"Note: SEDE currently does not have a good way to determine if a user is a moderator.\n","QueryBody":"SELECT u.Id AS \"User Link\" \/* , b.Name *\/, CASE WHEN b.Name IS NULL THEN N'\u2716 Not sporting' ELSE N'\u2714 Sporting' END AS \"Good Sport?\" FROM Users AS u LEFT JOIN Badges AS b ON (u.Id = b.UserId AND (b.Name IS NULL OR LOWER(b.Name) = 'sportsmanship')) \/* List of SO mods.  SEDE has no good method for mod detection! *\/ WHERE u.Id IN (105971, 1288, 106224, 50776, 54680, 419, 267, 13531, 396458, 102937, 50049, 1228) ORDER BY u.DisplayName","CreationDate":"2011-12-11 03:29:13","validated":false,"QueryBody_Original":"SELECT       u.Id    AS [User Link]\n        --, b.Name\n          , CASE\n                WHEN b.Name IS NULL     THEN N'\u2716 Not sporting'\n                ELSE N'\u2714 Sporting'\n            END AS [Good Sport?]\nFROM        Users   u\nLEFT JOIN   Badges  b\nON          (   u.Id = b.UserId\n                AND\n                (b.Name IS NULL     OR LOWER(b.Name) = 'sportsmanship')\n            )\n-- List of SO mods.  SEDE has no good method for mod detection!\nWHERE       u.Id    IN (105971, 1288, 106224, 50776, 54680, 419, 267, 13531, 396458, 102937, 50049, 1228)\nORDER BY    u.DisplayName"},{"QuerySetId":56359,"Title":"Gold Java Badge Ranking in South Africa","Description":"This query retrieves all the gold java badge users and ranks them according to their gold badge date received.\n","QueryBody":"SELECT b.UserId, MAX(b.Date) AS DateReceived, u.DisplayName FROM Users AS u, Badges AS b WHERE b.name = 'java' AND u.Id = b.UserId AND LOWER(u.Location) LIKE '%russia%' GROUP BY b.UserId, u.DisplayName HAVING COUNT(*) > 2 ORDER BY DateReceived","CreationDate":"2020-09-18 23:23:35","validated":false,"QueryBody_Original":"SELECT  b.UserId, max(b.Date) DateReceived, u.DisplayName\nFROM Users u, Badges b\nWHERE b.name='java'\nand u.Id=b.UserId\nand lower(u.Location) like '%russia%'\nGROUP BY b.UserId, u.DisplayName\nHAVING COUNT(*)>2\nORDER BY DateReceived"},{"QuerySetId":56730,"Title":"Find questions ripe for the Revival and Necromancer badges","Description":"Searches for open, non-CW posts older than 60 days with no accepted answer and no answer scoring 2 or more. (Now updated so merged questions do not appear.)\r\n","QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.CreationDate AS \"Asked Date\", p.ViewCount FROM Posts AS p WHERE p.AcceptedAnswerId IS NULL AND p.PostTypeId = 1 AND p.CreationDate < CURRENT_TIMESTAMP() - 60 AND p.CommunityOwnedDate IS NULL AND p.ClosedDate IS NULL AND NOT EXISTS(SELECT * FROM Posts AS p2 WHERE p2.ParentId = p.Id AND p2.Score >= 2 AND p2.PostTypeId = 2) AND NOT EXISTS(SELECT * FROM PostHistory AS ph WHERE ph.PostId = p.Id AND ph.PostHistoryTypeId = 14) ORDER BY p.Score DESC LIMIT 1000","CreationDate":"2012-03-28 05:52:15","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    p.Id AS [Post Link],\n    p.Score,\n    p.CreationDate as [Asked Date],\n    p.ViewCount\nFROM\n    Posts p\nWHERE\n    p.AcceptedAnswerId IS NULL\n    AND\n    p.PostTypeId = 1\n    AND\n    p.CreationDate < GETDATE() - 60\n    AND\n    p.CommunityOwnedDate IS NULL\n    AND\n    p.ClosedDate IS NULL\nAND NOT EXISTS\n    (\n        SELECT *\n        FROM Posts p2\n        WHERE p2.ParentId = p.Id\n        AND p2.Score >= 2\n        AND p2.PostTypeId = 2\n    )\nAND NOT EXISTS\n    (\n        SELECT *\n        FROM PostHistory ph\n        WHERE ph.PostId = p.Id\n        AND ph.PostHistoryTypeId = 14\n     )  \nORDER BY\n    p.Score DESC"},{"QuerySetId":56944,"Title":"How many posts were possibly made Community-Wiki by suggested edits?","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CommunityOwnedDate, ph.CreationDate AS \"Suggested Edit date\" FROM Posts AS p INNER JOIN PostHistory AS ph ON ph.PostId = p.id WHERE NOT p.CommunityOwnedDate IS NULL AND ph.CreationDate <= p.CommunityOwnedDate AND ph.PostHistoryTypeId = 24 \/* Suggested edits. *\/ AND p.PostTypeId < 3 \/* Q's and A's only. *\/","CreationDate":"2011-12-20 16:16:11","validated":false,"QueryBody_Original":"SELECT           p.Id            [Post Link]\n              , p.CommunityOwnedDate\n              , ph.CreationDate [Suggested Edit date]\nFROM            Posts           p\nINNER JOIN      PostHistory     ph\nON              ph.PostId       = p.id\nWHERE           p.CommunityOwnedDate    IS NOT NULL\nAND             ph.CreationDate         <= p.CommunityOwnedDate    \nAND             ph.PostHistoryTypeId    = 24  -- Suggested edits.\nAND             p.PostTypeId    < 3 -- Q's and A's only."},{"QuerySetId":57585,"Title":"Accepted answers close to Nice Answer and Good answer","Description":"Finds answers which are accepted and close to getting Nice answer or Good answer badges","QueryBody":"SELECT a.Id AS \"Post Link\", q.Score AS \"Question Score\", a.Score AS \"Answer Score\" FROM Posts AS q JOIN Posts AS a ON a.Id = q.AcceptedAnswerId WHERE q.Score >= 0 AND a.Score = 9 OR (a.score > 22 AND a.score < 25) ORDER BY q.Score DESC, a.Score","CreationDate":"2011-12-29 17:38:54","validated":false,"QueryBody_Original":"SELECT  a.Id as [Post Link], q.Score [Question Score], a.Score [Answer Score]\nfrom Posts q\njoin Posts a on a.Id = q.AcceptedAnswerId\nwhere q.Score >=0 and a.Score = 9 or ( a.score >22 and a.score <25 )\norder by q.Score desc, a.Score asc"},{"QuerySetId":58002,"Title":"Percentage of posts that mention imgur","Description":"Computes the percentage of posts (questions and answers) that match 'imgur' (would be nice to refine it to count actual images).","QueryBody":"SELECT (SELECT CAST(COUNT(*) AS FLOAT) FROM Posts WHERE Body LIKE '%imgur%') \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM Posts) * 100 AS \"Percentage of posts mentioning imgur\"","CreationDate":"2012-01-05 13:46:09","validated":false,"QueryBody_Original":"SELECT \n(SELECT\n cast(count(*) as float)\n from\n  Posts\n  where Body like '%imgur%')\/\n(SELECT\n cast(count(*) as float)\n from\n  Posts)*100 as [Percentage of posts mentioning imgur]\n;"},{"QuerySetId":58890,"Title":"Percent with an accepted answer 7 days after being asked","Description":null,"QueryBody":"SELECT Month, (SUM(GotAnswer) \/ (COUNT(*) + 0.0)) * 100.0 AS \"Percent answered in 7 days\" FROM (SELECT CAST(CreationDate AS DATE) AS Month, CASE WHEN EXISTS(SELECT 1 FROM Votes AS v WHERE PostId = AcceptedAnswerId AND VoteTypeId = 1 AND v.CreationDate < p.CreationDate + 7) THEN 1 ELSE 0 END AS \"GotAnswer\" FROM Posts AS p WHERE PostTypeId = 1 AND CreationDate > CURRENT_TIMESTAMP() - 720) AS X GROUP BY Month ORDER BY Month","CreationDate":"2019-07-07 10:18:30","validated":false,"QueryBody_Original":"SELECT  Month, (sum(GotAnswer) \/ (count(*) + 0.0)) * 100.0 \n         [Percent answered in 7 days] from\n  (\n   SELECT \n   cast(CreationDate as Date) Month, \n   case when exists \n       (\n          SELECT 1 from Votes v\n          where PostId = AcceptedAnswerId and \n                VoteTypeId = 1 and \n                v.CreationDate < p.CreationDate + 7\n          \n        ) then 1\n        else 0 \n        end [GotAnswer]\n   from Posts p\n   where PostTypeId = 1\n   and CreationDate > GETDATE() - 720 \n) as X\ngroup by Month\norder by Month asc"},{"QuerySetId":58891,"Title":"Percent with an accepted answer 7 day after being asked","Description":null,"QueryBody":"SELECT Month, (SUM(GotAnswer) \/ (COUNT(*) + 0.0)) * 100.0 AS \"Percent answered in 7 days\" FROM (SELECT CAST(CreationDate AS DATE) AS Month, CASE WHEN EXISTS(SELECT 1 FROM Votes AS v WHERE PostId = AcceptedAnswerId AND VoteTypeId = 1 AND v.CreationDate < p.CreationDate + 7) THEN 1 ELSE 0 END AS \"GotAnswer\" FROM Posts AS p WHERE PostTypeId = 1 AND ClosedDate IS NULL AND CreationDate > CURRENT_TIMESTAMP() - 720) AS X GROUP BY Month ORDER BY Month","CreationDate":"2012-01-11 03:16:48","validated":false,"QueryBody_Original":"SELECT  Month, (sum(GotAnswer) \/ (count(*) + 0.0)) * 100.0 \n         [Percent answered in 7 days] from\n  (\n   SELECT \n   cast(CreationDate as Date) Month, \n   case when exists \n       (\n          SELECT 1 from Votes v\n          where PostId = AcceptedAnswerId and \n                VoteTypeId = 1 and \n                v.CreationDate < p.CreationDate + 7\n          \n        ) then 1\n        else 0 \n        end [GotAnswer]\n   from Posts p\n   where PostTypeId = 1\n   and ClosedDate Is Null\n   and CreationDate > GETDATE() - 720 \n) as X\ngroup by Month\norder by Month asc"},{"QuerySetId":58892,"Title":"Percent with an accepted answer 1 day after being asked","Description":null,"QueryBody":"SELECT Month, (SUM(GotAnswer) \/ (COUNT(*) + 0.0)) * 100.0 AS \"Percent answered in 7 days\" FROM (SELECT CAST(CreationDate AS DATE) AS Month, CASE WHEN EXISTS(SELECT 1 FROM Votes AS v WHERE PostId = AcceptedAnswerId AND VoteTypeId = 1 AND v.CreationDate < p.CreationDate + 1) THEN 1 ELSE 0 END AS \"GotAnswer\" FROM Posts AS p WHERE PostTypeId = 1 AND CreationDate > CURRENT_TIMESTAMP() - 720) AS X GROUP BY Month ORDER BY Month","CreationDate":"2019-07-07 10:17:16","validated":false,"QueryBody_Original":"SELECT  Month, (sum(GotAnswer) \/ (count(*) + 0.0)) * 100.0 \n         [Percent answered in 7 days] from\n  (\n   SELECT \n   cast(CreationDate as Date) Month, \n   case when exists \n       (\n          SELECT 1 from Votes v\n          where PostId = AcceptedAnswerId and \n                VoteTypeId = 1 and \n                v.CreationDate < p.CreationDate + 1\n          \n        ) then 1\n        else 0 \n        end [GotAnswer]\n   from Posts p\n   where PostTypeId = 1\n   and CreationDate > GETDATE() - 720 \n) as X\ngroup by Month\norder by Month asc"},{"QuerySetId":59224,"Title":"How many tags per question for top questions?","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.tags FROM posts AS p WHERE p.posttypeid = 1 AND p.viewcount > 10000 ORDER BY p.viewcount","CreationDate":"2012-01-14 05:23:09","validated":false,"QueryBody_Original":"SELECT \n    p.id as [Post Link],\n    p.tags \nfrom \n    posts as p\nwhere \n    p.posttypeid = 1\n    and p.viewcount > 10000\norder by p.viewcount"},{"QuerySetId":59227,"Title":"Unanswered questions that have a zero-score answer from the questioner","Description":"Questions that can be marked as answered by upvoting a self-answered question.\r\n","QueryBody":"SELECT q.Id AS \"Post Link\", q.Creationdate, q.Score, q.Commentcount, q.Answercount, q.Viewcount, u.Reputation FROM Posts AS q JOIN Users AS u ON u.Id = q.OwnerUserId WHERE q.PostTypeId = 1 AND q.ClosedDate IS NULL AND q.AcceptedAnswerId IS NULL AND q.AnswerCount > 0 AND EXISTS(SELECT a.Id FROM Posts AS a WHERE a.Score = 0 AND a.ParentId = q.Id AND a.OwnerUserId = q.OwnerUserId) AND NOT EXISTS(SELECT a.Id FROM Posts AS a WHERE a.Score > 0 AND a.ParentId = q.Id) ORDER BY U.Reputation DESC, q.Creationdate, q.id","CreationDate":"2020-06-20 18:31:11","validated":false,"QueryBody_Original":"SELECT  q.Id AS [Post Link],\n      q.Creationdate,\n      q.Score,\n      q.Commentcount,\n      q.Answercount,\n      q.Viewcount,\n      u.Reputation\n      \n   \n   \nFROM Posts q \nJOIN Users u ON u.Id = q.OwnerUserId\n\nWHERE q.PostTypeId = 1 \n      AND q.ClosedDate IS NULL\n      AND q.AcceptedAnswerId IS NULL\n      AND q.AnswerCount > 0\n      AND EXISTS (SELECT a.Id\n                  FROM Posts a\n                  WHERE a.Score = 0\n                        AND a.ParentId = q.Id\n                        AND a.OwnerUserId = q.OwnerUserId)\n      AND NOT EXISTS (SELECT a.Id \n                      FROM Posts a \n                      WHERE a.Score > 0 \n                            AND a.ParentId = q.Id) \n                            \n\n\nORDER BY U.Reputation desc, \nq.Creationdate,\nq.id"},{"QuerySetId":59250,"Title":"Get top users by country","Description":"Get top users by country, other queries are not using a param ","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%##country##%' ORDER BY Reputation DESC","CreationDate":"2019-07-07 10:16:01","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%##country##%'\nORDER BY\n    Reputation desc;"},{"QuerySetId":59255,"Title":"What questions have the highest ratio of votes to views?","Description":"Returns the top 50 questions, ordered by their score divided by the number of views they've received.","QueryBody":"SELECT UpVotes, Views FROM Users WHERE AccountId = 9464","CreationDate":"2018-02-05 03:58:28","validated":false,"QueryBody_Original":"SELECT  UpVotes, Views from Users \nwhere AccountId = 9464\n--order by ScoreRatio desc"},{"QuerySetId":59301,"Title":"Questions per month top 10 tags compared","Description":"How many questions per month does each tag in the top 10 tags get","QueryBody":"SELECT TagName, Count, Body FROM Tags INNER JOIN Posts ON Tags.ExcerptPostId = Posts.Id ORDER BY Count DESC LIMIT 100","CreationDate":"2017-06-02 08:07:35","validated":false,"QueryBody_Original":"SELECT  TOP 100 TagName, Count, Body from Tags INNER JOIN Posts ON Tags.ExcerptPostId=Posts.Id order by Count DESC;"},{"QuerySetId":59815,"Title":"Find questions with \"at home\" in them","Description":null,"QueryBody":"SELECT P.Score, p.Id AS \"Post Link\", YEAR(p.CreationDate) AS Year, MONTH(p.CreationDate) AS Month, p.Body AS Body FROM Posts AS P WHERE (P.PostTypeID = 1 AND P.Body LIKE '%at home%' AND P.ClosedDate IS NULL) ORDER BY Year, Month LIMIT 1000","CreationDate":"2012-01-21 08:01:15","validated":false,"QueryBody_Original":"SELECT  TOP 1000 P.Score, p.Id AS [Post Link], YEAR(p.CreationDate) AS Year, Month(p.CreationDate) AS Month, p.Body AS Body\nFROM Posts P\nWhere (\n  P.PostTypeID = 1 AND\n  P.Body LIKE '%at home%' AND\n  P.ClosedDate IS NULL)\nOrder By Year, Month"},{"QuerySetId":59833,"Title":"Finding Posts tagged only homework","Description":null,"QueryBody":"SELECT *, Id AS \"User Link\" FROM Users WHERE Id < 100 ORDER BY LastAccessDate","CreationDate":"2012-07-04 01:44:15","validated":false,"QueryBody_Original":"SELECT  *, Id AS [User Link]\nFROM Users\nWHERE Id<100\nORDER BY LastAccessDate"},{"QuerySetId":59916,"Title":"Potentially smelly homework questions that are still open","Description":"Returns questions tagged homework that are negatively scored and still open","QueryBody":"SELECT P.Id AS \"Post Link\", P.Score FROM Posts AS P WHERE (P.PostTypeId = 1 AND P.Score < 0 AND P.Tags LIKE '%homework%' AND P.ClosedDate IS NULL) ORDER BY P.Score","CreationDate":"2019-07-01 22:07:35","validated":false,"QueryBody_Original":"SELECT  P.Id AS [Post Link], P.Score\nFROM Posts P \nWHERE (\n   P.PostTypeId = 1 AND\n   P.Score < 0 AND \n   P.Tags LIKE '%homework%' AND\n   P.ClosedDate IS NULL\n)\nORDER BY P.Score ASC"},{"QuerySetId":59926,"Title":"Look for a word or substring in user profiles","Description":null,"QueryBody":"SELECT * FROM Users WHERE AboutMe LIKE '%' + '##Text##' + '%'","CreationDate":"2012-01-22 23:22:15","validated":false,"QueryBody_Original":"SELECT \n  *\nFROM Users\nWHERE AboutMe LIKE '%' + '##Text##' + '%'"},{"QuerySetId":59953,"Title":"# Questions asked with 0 answers","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Reputation, COUNT(Posts.Id) AS QuestionsAskedWithoutAnswers FROM POSTS LEFT JOIN Users ON Users.Id = Posts.OwnerUserId WHERE Posts.PostTypeId = 1 AND AnswerCount = 0 GROUP BY Users.Id, Reputation ORDER BY COUNT(Posts.Id) DESC LIMIT 10","CreationDate":"2012-01-23 16:03:44","validated":false,"QueryBody_Original":"SELECT  TOP 10 Users.Id AS [User Link],Reputation,COUNT(Posts.Id) AS QuestionsAskedWithoutAnswers\nFROM POSTS\nLEFT JOIN Users ON Users.Id=Posts.OwnerUserId\nWHERE Posts.PostTypeId=1 AND AnswerCount=0\nGROUP BY Users.Id,Reputation\nORDER BY COUNT(Posts.Id) DESC"},{"QuerySetId":59979,"Title":"Number of \"Expert\" Users By Year and Month","Description":null,"QueryBody":"SELECT COUNT(DisplayName), YEAR(CreationDate), MONTH(CreationDate) FROM Users WHERE Reputation >= 2000 GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2012-03-07 19:31:54","validated":false,"QueryBody_Original":"SELECT  COUNT(DisplayName), YEAR(CreationDate), MONTH(CreationDate)\nFROM Users\nWHERE Reputation >= 2000\nGROUP BY YEAR(CreationDate), MONTH(CreationDate)\nORDER BY YEAR(CreationDate), MONTH(CreationDate)"},{"QuerySetId":60095,"Title":"Closed non dupe questions ","Description":"Closed non duplicate questions, plus total questions and percentage (for the lazy)","QueryBody":"SELECT COUNT(*) AS ClosedNonDupes, (SELECT COUNT(*) FROM Posts AS p WHERE p.PostTypeId = 1) AS Questions FROM PostHistory AS q WHERE q.PostHistoryTypeId = 10 AND q.Comment <> 1","CreationDate":"2012-01-24 18:55:06","validated":false,"QueryBody_Original":"SELECT   \n  COUNT(*) AS ClosedNonDupes,\n  (SELECT COUNT(*) FROM Posts p WHERE p.PostTypeId = 1) AS Questions\nFROM \n  PostHistory q\nWHERE\nq.PostHistoryTypeId = 10\nAND q.Comment != 1"},{"QuerySetId":60176,"Title":"Average score for a tag","Description":"Returns the average score for a tag.  Not sure about the accuracy, but it satisfied my curiosity enough.","QueryBody":"SELECT CAST(SUM(Score) AS FLOAT) \/ CAST(COUNT(Score) AS FLOAT) AS AvgScore FROM posts","CreationDate":"2012-02-08 00:54:19","validated":false,"QueryBody_Original":"SELECT  \n    cast(sum(Score) as float)\/cast(count(Score) as float) as AvgScore\nfrom \n    posts"},{"QuerySetId":60334,"Title":"Python Answers by Higher Rated Users","Description":null,"QueryBody":"SELECT Posts.id AS \"Post Link\", Posts.Score AS \"Score\" FROM Users, Posts WHERE (Users.id = Posts.owneruserid) AND (Users.reputation > 20000) AND (Posts.PostTypeId = 2) AND (Posts.Tags LIKE '%<python>%') ORDER BY Posts.Score DESC","CreationDate":"2012-01-28 12:00:50","validated":false,"QueryBody_Original":"SELECT  Posts.id as [Post Link], Posts.Score as [Score]\n\nFROM Users, Posts\n\nWHERE\n     (Users.id=Posts.owneruserid) AND\n     (Users.reputation > 20000) AND\n     (Posts.PostTypeId = 2) AND\n     (Posts.Tags LIKE '%<python>%')\n\nORDER BY Posts.Score DESC"},{"QuerySetId":60410,"Title":"Close votes per PHP tag","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", COUNT(*) AS \"Close Votes\" FROM Posts INNER JOIN Votes ON Posts.Id = Votes.PostId WHERE Votes.VoteTypeId = 6 AND Posts.ClosedDate IS NULL AND Posts.Tags LIKE '%<php>%' GROUP BY Posts.Id ORDER BY \"Close Votes\" DESC","CreationDate":"2012-01-29 18:25:36","validated":false,"QueryBody_Original":"SELECT \n  Posts.Id as [Post Link],\n  count(*) as [Close Votes]\nfrom Posts\ninner join Votes on Posts.Id=Votes.PostId\nwhere Votes.VoteTypeId=6 and Posts.ClosedDate is NULL and Posts.Tags LIKE '%<php>%'\ngroup by Posts.Id\norder by [Close Votes] desc"},{"QuerySetId":60515,"Title":"Top 100 users in Norway","Description":null,"QueryBody":"SELECT DisplayName, location, Reputation FROM Users WHERE location LIKE '%Russia%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2012-12-15 23:00:02","validated":false,"QueryBody_Original":"SELECT  TOP 1000 DisplayName, location, Reputation\nFROM Users \nwhere location like '%Russia%'\nORDER BY Reputation DESC"},{"QuerySetId":60562,"Title":"Question count up to X","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE CreationDate < '2010-8-20'","CreationDate":"2012-02-01 01:39:15","validated":false,"QueryBody_Original":"SELECT  count(Id) from Users where CreationDate < '2010-8-20';"},{"QuerySetId":60592,"Title":"Who askes the most questions since a certain date?","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS PostCount FROM Posts WHERE PostTypeId = 1 AND CreationDate >= '##Date##' GROUP BY OwnerUserId ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2016-12-29 22:50:52","validated":false,"QueryBody_Original":"SELECT  Top 100 OwnerUserId as [User Link], Count(*) as PostCount from Posts\nwhere PostTypeId=1 and  CreationDate >= '##Date##'\nGroup By OwnerUserId\nOrder By Count(*) desc"},{"QuerySetId":60593,"Title":"Questions and Answers from high rep users per month","Description":null,"QueryBody":"SELECT \"Month\", SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", PostTypeId FROM Posts AS p) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2012-02-01 07:21:41","validated":false,"QueryBody_Original":"SELECT  [Month], \n       sum(case when PostTypeId = 1 then 1 else 0 end) Questions,\n       sum(case when PostTypeId = 2 then 1 else 0 end) Answers\nfrom\n(\n  SELECT CAST(\n      cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) + '-01'\n    as datetime) [Month], \n    PostTypeId\n     \n  from Posts p\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":60622,"Title":"Answered by the submitter ","Description":null,"QueryBody":"SELECT COUNT(questions.id) FROM posts AS answers INNER JOIN posts AS questions ON answers.parentId = questions.id AND answers.owneruserid = questions.owneruserid AND answers.posttypeid = 2 AND questions.posttypeid = 1","CreationDate":"2012-02-01 11:35:04","validated":false,"QueryBody_Original":"SELECT  count(questions.id) from \nposts  answers\ninner join \nposts questions\non answers.parentId = questions.id \nand answers.owneruserid = questions.owneruserid\nand answers.posttypeid =2 \nand questions.posttypeid = 1"},{"QuerySetId":60642,"Title":"Low-scoring questions with a high-scoring answer","Description":null,"QueryBody":"SELECT b.Id AS \"Post Link\", a.Score AS \"Question Score\", b.Score AS \"Answer Score\" FROM Posts AS a INNER JOIN Posts AS b ON a.Id = b.ParentId AND b.PostTypeId = 2 AND b.Score > 10 WHERE a.PostTypeId = 1 AND a.Score < -10 ORDER BY b.Score DESC","CreationDate":"2012-02-01 20:00:34","validated":false,"QueryBody_Original":"SELECT  \n    b.Id AS [Post Link], \n    a.Score AS [Question Score], \n    b.Score AS [Answer Score]\nFROM Posts a\nINNER JOIN\n    Posts b ON \n        a.Id = b.ParentId\n        AND b.PostTypeId = 2\n        AND b.Score > 10\nWHERE a.PostTypeId = 1 AND a.Score < -10\nORDER BY b.Score DESC"},{"QuerySetId":60716,"Title":"No of users who have made a post","Description":null,"QueryBody":"SELECT COUNT(user_posts) FROM (SELECT COUNT(*) AS user_posts FROM Posts WHERE NOT OwnerUserId IS NULL GROUP BY OwnerUserId) AS a","CreationDate":"2012-02-03 06:03:02","validated":false,"QueryBody_Original":"SELECT  COUNT(user_posts)\nFROM(\n  SELECT COUNT(*) AS user_posts FROM Posts\n  WHERE OwnerUserId IS NOT NULL\n  GROUP BY OwnerUserId\n) as a"},{"QuerySetId":60722,"Title":"No of users who have answered a question","Description":null,"QueryBody":"SELECT COUNT(user_posts) FROM (SELECT COUNT(*) AS user_posts FROM Posts WHERE NOT OwnerUserId IS NULL AND PostTypeId = 2 GROUP BY OwnerUserId) AS a","CreationDate":"2012-02-03 06:07:25","validated":false,"QueryBody_Original":"SELECT  COUNT(user_posts)\nFROM(\n  SELECT COUNT(*) AS user_posts FROM Posts\n  WHERE OwnerUserId IS NOT NULL\n  AND PostTypeId = 2\n  GROUP BY OwnerUserId\n) as a"},{"QuerySetId":60803,"Title":"\"Accept Rate\" Comment (w\/ comment text)","Description":"Comments with the phrase \"accept rate\".","QueryBody":"SELECT PostID AS \"Post Link\", Score, Text FROM Comments WHERE Text LIKE '%accept rate%' ORDER BY Score","CreationDate":"2012-02-05 03:39:10","validated":false,"QueryBody_Original":"SELECT  PostID [Post Link], Score, Text\nFROM Comments\nWHERE Text like '%accept rate%'\nORDER BY Score Asc"},{"QuerySetId":60870,"Title":"See top suggested, approved, rejected editors","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts","CreationDate":"2012-02-05 20:51:58","validated":false,"QueryBody_Original":"SELECT  count(*) from posts"},{"QuerySetId":60933,"Title":"TOP 50 users from INDIA","Description":"Lists the top 50 users (ranked by reputation) that are located in Calicut\/Kozhikode, Kerala, India according to their profile information.\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Indore%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2020-11-21 14:37:32","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Indore%'\n   --OR Location like N'%Kozhi%'\n   --OR Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":60982,"Title":"Most accepted answers in a day","Description":null,"QueryBody":"SELECT a.OwnerUserId AS \"User Link\", COUNT(*) AS \"Count\" FROM Votes AS v, Posts AS q, Posts AS a WHERE v.VoteTypeId = 1 AND v.PostId = a.Id AND q.AcceptedAnswerId = a.Id AND q.OwnerUserId <> a.OwnerUserId GROUP BY a.OwnerUserId ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2012-02-07 23:09:39","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  a.OwnerUserId AS [User Link],\n  Count(*) AS [Count]\nFROM Votes v, Posts q, Posts a\nWHERE v.VoteTypeId = 1\n  AND v.PostId = a.Id\n  AND q.AcceptedAnswerId = a.Id\n  AND q.OwnerUserId <> a.OwnerUserId\nGROUP BY a.OwnerUserId\nORDER BY Count(*) DESC"},{"QuerySetId":60992,"Title":"Top accepted answers per day","Description":null,"QueryBody":"SELECT a.OwnerUserId AS \"User Link\", COUNT(*) AS \"Count\", v.CreationDate AS \"Date\" FROM Votes AS v, Posts AS q, Posts AS a WHERE v.VoteTypeId = 1 AND v.PostId = a.Id AND q.AcceptedAnswerId = a.Id AND q.OwnerUserId <> a.OwnerUserId GROUP BY v.CreationDate, a.OwnerUserId ORDER BY COUNT(*) DESC, v.CreationDate LIMIT 100","CreationDate":"2012-02-07 02:53:26","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  a.OwnerUserId AS [User Link],\n  Count(*) AS [Count],\n  v.CreationDate AS [Date]\nFROM Votes v, Posts q, Posts a\nWHERE v.VoteTypeId = 1\n  AND v.PostId = a.Id\n  AND q.AcceptedAnswerId = a.Id\n  AND q.OwnerUserId <> a.OwnerUserId\nGROUP BY v.CreationDate, a.OwnerUserId\nORDER BY Count(*) DESC, v.CreationDate ASC"},{"QuerySetId":61081,"Title":"select  Id from Posts","Description":null,"QueryBody":"SELECT Id FROM Posts","CreationDate":"2012-02-07 22:23:26","validated":false,"QueryBody_Original":"SELECT   Id from Posts"},{"QuerySetId":61101,"Title":"Highest question to view ratio by user","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", SUM(p.ViewCount) AS \"Total Views\", COUNT(p.Id) AS \"Total Questions\", SUM(p.ViewCount) \/ COUNT(p.Id) AS \"View Count Ratio\", (SELECT Id FROM Posts WHERE ViewCount = MAX(p.ViewCount) LIMIT 1) AS \"Post Link\" \/* sum(CASE WHEN ViewCount > 10000 THEN p.ViewCount ELSE 0 END) AS [Total Famous Views], *\/ \/* count(CASE WHEN ViewCount > 10000 THEN p.Id ELSE NULL END) AS [Total Famous Questions], *\/ \/* sum(CASE WHEN ViewCount > 10000 THEN p.ViewCount ELSE 0 END) \/ *\/ \/*  count(CASE WHEN ViewCount > 10000 THEN p.Id ELSE NULL END) AS [Famous View Count Ratio] *\/ FROM Posts AS p WHERE p.PostTypeId = 1 \/* AND ViewCount > 10000 *\/ GROUP BY p.OwnerUserId ORDER BY SUM(p.ViewCount) DESC LIMIT 20","CreationDate":"2012-02-08 02:00:42","validated":false,"QueryBody_Original":"SELECT  TOP 20\n  p.OwnerUserId AS [User Link], \n  sum(p.ViewCount) AS [Total Views],\n  count(p.Id) AS [Total Questions],\n  sum(p.ViewCount)\/count(p.Id) AS [View Count Ratio],\n  (SELECT TOP 1 Id FROM Posts WHERE ViewCount = max(p.ViewCount)) AS [Post Link]\n  --sum(CASE WHEN ViewCount > 10000 THEN p.ViewCount ELSE 0 END) AS [Total Famous Views],\n  --count(CASE WHEN ViewCount > 10000 THEN p.Id ELSE NULL END) AS [Total Famous Questions],\n  --sum(CASE WHEN ViewCount > 10000 THEN p.ViewCount ELSE 0 END) \/\n  --  count(CASE WHEN ViewCount > 10000 THEN p.Id ELSE NULL END) AS [Famous View Count Ratio]\nFROM Posts p\nWHERE p.PostTypeId = 1 --AND ViewCount > 10000\nGROUP BY p.OwnerUserId\nORDER BY sum(p.ViewCount) DESC"},{"QuerySetId":61203,"Title":"Topics with activity date earlier than their answers' most recent ativity date","Description":"This query returns all topics whose activity date is affected by the bug described in the following MSO topic:\r\nhttp:\/\/meta.stackoverflow.com\/q\/121413","QueryBody":"SELECT P.Id AS TopicId, P.Id AS \"Post Link\", P.LastActivityDate AS \"Topic Active Date\", A.LAD AS \"Most Recent Answer Active Date\" FROM Posts AS P JOIN (SELECT ParentId, MAX(LastActivityDate) AS LAD FROM Posts GROUP BY ParentId) AS A ON A.ParentId = P.Id WHERE P.PostTypeId = 1 AND A.LAD > DATE(P.LastActivityDate, '1 second') ORDER BY A.LAD DESC","CreationDate":"2012-02-09 02:13:54","validated":false,"QueryBody_Original":"SELECT  P.Id TopicId, P.Id AS [Post Link], \nP.LastActivityDate [Topic Active Date], A.LAD [Most Recent Answer Active Date]\nFROM Posts P\nJOIN (\n  SELECT ParentId, MAX(LastActivityDate) AS LAD \n  FROM Posts \n  GROUP BY ParentId\n) A\nON A.ParentId = P.Id\nWHERE P.PostTypeId = 1\nAND A.LAD > DATEADD(second, 1, P.LastActivityDate)\nORDER BY A.LAD DESC"},{"QuerySetId":61211,"Title":"Questions with a specific tag and no other tags","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE PostTypeId = 1 AND NOT Tags LIKE '<star-trek>' AND (Tags LIKE '<star-trek-%>' OR Tags LIKE '<the-wrath-of-khan>' OR Tags LIKE '<the-search-for-spock>' OR Tags LIKE '<the-voyage-home>' OR Tags LIKE '<the-final-frontier>' OR Tags LIKE '<the-undiscovered-country>' OR Tags LIKE '<uss-enterprise>' OR Tags LIKE '<federation>' OR Tags LIKE '<vulcan>' OR Tags LIKE '<klingon>' OR Tags LIKE '<romulan>' OR Tags LIKE '<borg>' OR Tags LIKE '<changeling>' OR Tags LIKE '<klingon-language>') ORDER BY Tags, Title","CreationDate":"2016-03-12 20:24:02","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Tags from Posts\nwhere PostTypeId = 1 and Tags not like '<star-trek>' and\n(    Tags like '<star-trek-%>'\n  or Tags like '<the-wrath-of-khan>'\n  or Tags like '<the-search-for-spock>'\n  or Tags like '<the-voyage-home>'\n  or Tags like '<the-final-frontier>'\n  or Tags like '<the-undiscovered-country>'\n  or Tags like '<uss-enterprise>'\n  or Tags like '<federation>'\n  or Tags like '<vulcan>'\n  or Tags like '<klingon>'\n  or Tags like '<romulan>'\n  or Tags like '<borg>'\n  or Tags like '<changeling>'\n  or Tags like '<klingon-language>'\n) order by Tags, Title"},{"QuerySetId":61242,"Title":"Questions ripe for deletion: Unanswered, downvoted, and closed questions","Description":"Want to exercise your democratic 10k rights? Can't find questions to delete? Want to give that barrel a good ol' bottom-scraping?  \r\n\r\nBehold, the worst questions ever. Sorted by score and how long they've been closed.","QueryBody":"SELECT q.Id FROM Posts AS q WHERE q.PostTypeId = 1 AND q.LastEditDate < DATEADD(d, -60, GETDATE()) AND q.ClosedDate IS NULL AND q.AcceptedAnswerId IS NULL AND (q.AnswerCount IS NULL OR q.AnswerCount = 0 OR NOT EXISTS(SELECT Id FROM Posts AS a WHERE a.PostTypeId = 2 AND a.ParentId = q.Id AND a.Score > 0)) ORDER BY q.Id","CreationDate":"2012-02-24 15:26:30","validated":false,"QueryBody_Original":"SELECT  q.Id\nFROM   Posts q\nWHERE  q.PostTypeId = 1\n  AND q.LastEditDate < DATEADD(d, -60, GETDATE())\n  AND q.ClosedDate IS NULL\n  AND q.AcceptedAnswerId IS NULL\n  AND (q.AnswerCount IS NULL\n    OR q.AnswerCount = 0\n    OR NOT EXISTS (\n      SELECT Id\n      FROM   Posts a\n      WHERE  a.PostTypeId = 2\n        AND a.ParentId = q.Id\n        AND a.Score > 0\n    )\n  )\nORDER  BY q.Id ASC"},{"QuerySetId":61292,"Title":"Algerian StackOverflow Users, Ordered by reputation","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, WebsiteUrl, Location, AboutMe, Views, Age FROM Users WHERE Location LIKE '%Algeria%' OR Location LIKE '%Algiers%' ORDER BY Reputation DESC","CreationDate":"2013-10-14 10:47:17","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], \nReputation, WebsiteUrl, Location, AboutMe, Views,\nAge\nFROM Users \nWHERE Location LIKE '%Algeria%'\nOR Location LIKE '%Algiers%'\nORDER BY Reputation desc"},{"QuerySetId":61312,"Title":"Get all answers containing 'help me'","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", body, Score FROM Posts WHERE posttypeid = 2 AND (body LIKE '%please help me%')","CreationDate":"2012-02-11 15:52:22","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], body, Score\nFrom Posts\nWhere posttypeid = 2\n  and (body like '%please help me%')\n--  and CreationDate"},{"QuerySetId":61333,"Title":"display users name and text comments","Description":null,"QueryBody":"SELECT DisplayName, \"Text\" FROM Users INNER JOIN Comments ON Users.Id = Comments.UserID WHERE Users.DisplayName LIKE 'Tawfik'","CreationDate":"2012-02-11 23:10:57","validated":false,"QueryBody_Original":"SELECT  DisplayName, [Text] FROM Users \nINNER JOIN Comments ON Users.Id = Comments.UserID\nWHERE Users.DisplayName LIKE 'Tawfik'"},{"QuerySetId":61343,"Title":"Popular Badges of Algerian StackOverflow Users","Description":null,"QueryBody":"SELECT Badges.Name AS Badge, COUNT(Badges.Name) AS total FROM Badges INNER JOIN Users ON Badges.UserId = Users.Id WHERE Users.Location LIKE '%Algeria%' OR Users.Location LIKE '%Algiers%' GROUP BY Badges.Name ORDER BY total DESC","CreationDate":"2013-02-14 20:07:55","validated":false,"QueryBody_Original":"SELECT  \n  Badges.Name AS Badge, \n  COUNT(Badges.Name) AS total \nFROM Badges\n  INNER JOIN Users ON Badges.UserId = Users.Id\nWHERE \n  Users.Location LIKE '%Algeria%'\n    OR \n  Users.Location LIKE '%Algiers%'\nGROUP BY\n  Badges.Name\nORDER BY\n  total DESC"},{"QuerySetId":61421,"Title":"Get users from your country","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, AboutMe FROM Users WHERE Location LIKE '%##Country##%' ORDER BY Reputation DESC","CreationDate":"2012-02-13 21:21:25","validated":false,"QueryBody_Original":"SELECT \n  Id, DisplayName, Reputation, WebsiteUrl, AboutMe\nFROM \n  Users\nWHERE\n  Location LIKE '%##Country##%'\nORDER by \n  Reputation DESC"},{"QuerySetId":61510,"Title":"Users from different regions of Pakistan","Description":null,"QueryBody":"SELECT COUNT('*') AS total_users, Location FROM Users WHERE Location LIKE '%kistan%' GROUP BY Location ORDER BY total_users DESC","CreationDate":"2012-02-15 12:33:39","validated":false,"QueryBody_Original":"SELECT  count('*') as total_users, Location \nFROM Users\nWHERE\n  Location LIKE '%kistan%'\nGROUP BY Location\nORDER BY total_users DESC"},{"QuerySetId":61554,"Title":"Old Closed Posts with no answers that weren't closed as duplicate","Description":null,"QueryBody":"SELECT \"id\" AS \"Post Link\", id, creationDate, score, ViewCount FROM posts AS q WHERE posttypeid = 1 AND creationdate < (CURRENT_TIMESTAMP() - 30) AND COALESCE(answercount, 0) = 0 AND NOT closeddate IS NULL AND NOT id IN (SELECT postid FROM posthistory WHERE posthistorytypeid = 10 AND COMMENT IN (1)) ORDER BY SCORE DESC","CreationDate":"2012-02-17 00:02:00","validated":false,"QueryBody_Original":"SELECT  [id] [Post Link] ,id, creationDate, score, ViewCount\nFROM   posts q \nWHERE  posttypeid = 1 \n       AND creationdate < ( Getdate() - 30 ) \n       AND COALESCE(answercount,0) = 0 \n       AND closeddate IS NOT NULL \n       AND id NOT IN (SELECT postid \n                      FROM   posthistory \n                      WHERE  posthistorytypeid = 10 \n                      AND COMMENT in ( 1 ))\nORDER BY SCORE DESC"},{"QuerySetId":61558,"Title":"Old Closed Posts with no answers that weren't closed as duplicate, migrated or merged","Description":null,"QueryBody":"SELECT \"id\" AS \"Post Link\", id, closedDate, score, viewcount FROM posts AS q WHERE posttypeid = 1 AND creationdate < (CURRENT_TIMESTAMP() - 30) AND COALESCE(answercount, 0) = 0 AND NOT closeddate IS NULL AND NOT id IN (SELECT postid FROM posthistory WHERE (posthistorytypeid = 10 AND COMMENT IN (1)) OR posthistorytypeid IN (17, 18, 35, 37, 38)) ORDER BY closeddate","CreationDate":"2013-05-20 15:57:59","validated":false,"QueryBody_Original":"SELECT  [id] [Post Link] ,id, closedDate, score, viewcount\nFROM   posts q \nWHERE  posttypeid = 1 \n       AND creationdate < ( Getdate() - 30 ) \n       AND COALESCE(answercount,0) = 0 \n       AND closeddate IS NOT NULL \n       AND id NOT IN (SELECT postid \n                      FROM   posthistory \n                      WHERE  (posthistorytypeid = 10 \n                      AND COMMENT in ( 1 )) \n                      or posthistorytypeid in (17,18,35,37,38))\nORDER BY closeddate ASC"},{"QuerySetId":61681,"Title":"Accepted answers with a zero score","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Score, a.OwnerUserId AS \"User Link\" FROM Posts AS a, Posts AS q WHERE a.PostTypeId = 2 AND q.PostTypeId = 1 AND a.Score = 0 AND a.ParentId = q.Id AND q.AcceptedAnswerId = a.Id","CreationDate":"2012-06-22 20:09:00","validated":false,"QueryBody_Original":"SELECT  a.Id          AS [Post Link],\n       a.Score,\n       a.OwnerUserId AS [User Link]\nFROM   Posts a,\n       Posts q\nWHERE  a.PostTypeId = 2\n       AND q.PostTypeId = 1\n       AND a.Score = 0\n       AND a.ParentId = q.Id\n       AND q.AcceptedAnswerId = a.Id"},{"QuerySetId":61698,"Title":"Find identical titles (no closed questions)","Description":"We also show the creation date of the posts.\r\n","QueryBody":"SELECT a.Id AS \"Post Link\", a.CreationDate AS \"First Date\", b.Id AS \"Post Link\", b.CreationDate AS \"Second Date\" FROM Posts AS a JOIN Posts AS b ON a.Title = b.Title WHERE a.Id < b.Id AND (SELECT COUNT(*) FROM PostHistory WHERE PostHistoryTypeID = 18 AND (PostID = a.id OR PostID = b.id)) = 0","CreationDate":"2012-02-17 21:45:34","validated":false,"QueryBody_Original":"SELECT  a.Id AS [Post Link], a.CreationDate AS \"First Date\",\n       b.Id AS [Post Link], b.CreationDate AS \"Second Date\"\nFROM Posts AS a JOIN Posts AS b ON a.Title = b.Title\nWHERE a.Id < b.Id\n  and (SELECT count(*) FROM PostHistory\n       WHERE PostHistoryTypeID=18 AND (PostID=a.id OR PostID=b.id)) = 0;"},{"QuerySetId":61708,"Title":"Find identical titles by the same user (no merged questions)","Description":"We also show the creation date of the posts.\r\n","QueryBody":"SELECT a.Id AS \"Post Link\", a.CreationDate AS \"First Date\", b.Id AS \"Post Link\", b.CreationDate AS \"Second Date\" FROM Posts AS a JOIN Posts AS b ON a.Title = b.Title AND a.OwnerUserID = b.OwnerUserID WHERE a.Id < b.Id AND (SELECT COUNT(*) FROM PostHistory WHERE PostHistoryTypeID = 18 AND (PostID = a.id OR PostID = b.id)) = 0 ORDER BY \"First Date\", \"Second Date\"","CreationDate":"2012-02-17 22:01:52","validated":false,"QueryBody_Original":"SELECT  a.Id AS [Post Link], a.CreationDate AS \"First Date\",\n       b.Id AS [Post Link], b.CreationDate AS \"Second Date\"\nFROM Posts AS a JOIN Posts AS b ON a.Title = b.Title AND a.OwnerUserID = b.OwnerUserID\nWHERE a.Id < b.Id\n  and (SELECT count(*) FROM PostHistory\n       WHERE PostHistoryTypeID=18 AND (PostID=a.id OR PostID=b.id)) = 0\nORDER BY \"First Date\",\"Second Date\";"},{"QuerySetId":61711,"Title":"PostHistory TypeID 18 (Merged) - Empty","Description":null,"QueryBody":"SELECT * FROM PostHistory WHERE PostHistory.PostHistoryTypeId = 18 LIMIT 100","CreationDate":"2014-04-06 01:47:18","validated":false,"QueryBody_Original":"SELECT  TOP 100 * FROM PostHistory WHERE PostHistory.PostHistoryTypeId=18"},{"QuerySetId":61722,"Title":"Do you love Alton Brown?","Description":null,"QueryBody":"SELECT displayname, COUNT(*) FROM posts JOIN users ON posts.owneruserid = users.id WHERE body LIKE '%Kenji%' OR body LIKE '%seriouseats%' OR body LIKE '%Serious Eats%' GROUP BY displayname ORDER BY COUNT(*) DESC","CreationDate":"2012-02-17 22:56:19","validated":false,"QueryBody_Original":"SELECT  \ndisplayname,\ncount(*)\nFROM \n    posts join users on posts.owneruserid = users.id\nWHERE \n    body like'%Kenji%' or body like '%seriouseats%' or body like '%Serious Eats%'\n    group by displayname\n    order by count(*) desc"},{"QuerySetId":61724,"Title":"Is butter or bacon better?","Description":null,"QueryBody":"SELECT 'bacon', COUNT(*) FROM posts WHERE body LIKE '%bacon%' UNION ALL SELECT 'butter', COUNT(*) FROM posts WHERE body LIKE '%butter%'","CreationDate":"2012-02-17 22:36:56","validated":false,"QueryBody_Original":"SELECT \n'bacon',\ncount(*)\nfrom\nposts where body like '%bacon%'\nunion all\nSELECT\n'butter',\ncount(*)\nfrom \nposts where body like '%butter%';"},{"QuerySetId":61773,"Title":"Questions that are closed, excluding duplicates","Description":"Questions that are likely to need some delete votes. Duplicates should be left alone for the most part, so these are right out.","QueryBody":"SELECT p.Id AS \"Post Link\", CASE h.Comment WHEN '2' THEN 'off topic' WHEN '3' THEN 'not constructive' WHEN '4' THEN 'not a real question' WHEN '7' THEN 'too localized' WHEN '10' THEN 'general reference' WHEN '20' THEN 'noise' ELSE h.Comment END AS Reason FROM Posts AS p INNER JOIN PostHistory AS h ON h.PostId = p.Id \/* events pertaining to the question *\/ AND h.CreationDate = p.ClosedDate \/* that occurred when it was closed *\/ WHERE p.PostTypeId = 1 \/* questions *\/ AND NOT p.ClosedDate IS NULL \/* that were closed *\/ AND h.PostHistoryTypeId = 10 \/* and have a history entry for it *\/ AND h.Comment <> 1 \/* that says it's not a dupe *\/","CreationDate":"2012-02-18 18:11:05","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link],\n       CASE h.Comment\n         WHEN '2'  THEN 'off topic'\n         WHEN '3'  THEN 'not constructive'\n         WHEN '4'  THEN 'not a real question'\n         WHEN '7'  THEN 'too localized'\n         WHEN '10' THEN 'general reference'\n         WHEN '20' THEN 'noise'\n         ELSE h.Comment\n       END  AS Reason\nFROM   Posts p\n       INNER JOIN PostHistory h\n         ON h.PostId = p.Id                   -- events pertaining to the question\n            AND h.CreationDate = p.ClosedDate -- that occurred when it was closed\nWHERE  p.PostTypeId = 1             -- questions\n       AND p.ClosedDate IS NOT NULL -- that were closed\n       AND h.PostHistoryTypeId = 10 -- and have a history entry for it\n       AND h.Comment != 1           -- that says it's not a dupe"},{"QuerySetId":61846,"Title":"Stackoverflow users from Perm', Russia","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%Ekaterinburg%' OR Location LIKE '%Yekaterinburg%' ORDER BY Reputation","CreationDate":"2016-06-02 19:33:58","validated":false,"QueryBody_Original":"SELECT  *\nfrom Users\nwhere Location like '%Ekaterinburg%' or Location like '%Yekaterinburg%'\norder by Reputation"},{"QuerySetId":61939,"Title":"Posts with ID LT 50","Description":null,"QueryBody":"SELECT Title FROM Posts WHERE PostTypeId = 1 AND Posts.id > 50000 AND Posts.id < 100000","CreationDate":"2012-02-20 05:35:35","validated":false,"QueryBody_Original":"SELECT  Title FROM Posts WHERE PostTypeId = 1 AND Posts.id > 50000 AND Posts.id < 100000"},{"QuerySetId":62083,"Title":"Top 200 bounties by bounty amount","Description":null,"QueryBody":"SELECT p.ParentId AS \"Post Link\", v.BountyAmount FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id WHERE v.VoteTypeId = 9 ORDER BY v.BountyAmount DESC, v.CreationDate LIMIT 200","CreationDate":"2016-09-12 11:19:26","validated":false,"QueryBody_Original":"SELECT  \n  TOP 200 p.ParentId AS [Post Link], v.BountyAmount \nFROM \n  Votes v \n  JOIN Posts p ON v.PostId = p.Id \nWHERE \n  v.VoteTypeId = 9\nORDER BY \n  v.BountyAmount DESC, v.CreationDate ASC"},{"QuerySetId":62107,"Title":"Number of 'identify-this-game' questions given accepted answers more than a month after being asked","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS Questions INNER JOIN Votes ON Votes.PostID = Questions.AcceptedAnswerId WHERE VoteTypeId = 1 AND DATEDIFF(Votes.CreationDate, Questions.CreationDate) > 24 * 28 AND Questions.Tags LIKE '%identify-this-game%'","CreationDate":"2012-02-21 04:32:43","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts Questions\nINNER JOIN Votes ON Votes.PostID = Questions.AcceptedAnswerId\nWHERE VoteTypeId = 1\n    AND DateDiff(hour, Questions.CreationDate, Votes.CreationDate) > 24*28\n    AND Questions.Tags LIKE '%identify-this-game%'"},{"QuerySetId":62458,"Title":"Show questions with a body containing capitals only","Description":null,"QueryBody":"SELECT id AS \"Post Link\", creationdate, tags FROM posts WHERE posttypeid = 1 AND UPPER(body) = body ORDER BY creationdate","CreationDate":"2012-02-24 22:33:23","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], creationdate, tags\nfrom posts\nwhere posttypeid = 1\nand upper(body) = body\norder by creationdate asc"},{"QuerySetId":62606,"Title":"Number of badges awarded by badge name","Description":null,"QueryBody":"SELECT name, COUNT(*) AS \"number of badges\" FROM badges GROUP BY name","CreationDate":"2012-02-28 02:38:50","validated":false,"QueryBody_Original":"SELECT  name, count(*) as \"number of badges\"\nfrom badges \ngroup by name"},{"QuerySetId":62735,"Title":"How \"Favorited\" are questions of a certain minimum quality (averages)?","Description":null,"QueryBody":"SELECT AVG(p.Score) AS \"Avg Score\", AVG(p.ViewCount) AS \"Avg ViewCount\", AVG(p.FavoriteCount) AS \"Avg FavoriteCount\", ROUND(AVG(p.FavoriteCount * 100.0 \/ p.ViewCount), 2) AS \"Avg Favorites per view (%)\" FROM Posts AS p WHERE p.PostTypeId = 1 \/* Question *\/ AND p.Score > 10 AND p.ViewCount > 200","CreationDate":"2012-02-29 08:15:02","validated":false,"QueryBody_Original":"SELECT \n            AVG (p.Score)           AS [Avg Score],\n            AVG (p.ViewCount)       AS [Avg ViewCount],\n            AVG (p.FavoriteCount)   AS [Avg FavoriteCount],\n            ROUND (AVG ( p.FavoriteCount * 100.0 \/ p.ViewCount )\n                , 2\n            ) AS [Avg Favorites per view (%)]\nFROM        Posts           p\nWHERE       p.PostTypeId    = 1 -- Question\nAND         p.Score         > 10\nAND         p.ViewCount     > 200"},{"QuerySetId":62868,"Title":"Posts With a reopen record without a close","Description":null,"QueryBody":"SELECT pOpened.PostID AS \"Post Link\" FROM PostHistory AS pOpened LEFT JOIN PostHistory AS pClosed ON pOpened.PostID = pClosed.PostID AND pClosed.postHistoryTypeID = 10 \/* closed *\/ WHERE pOpened.postHistoryTypeID = 11 \/* reopened *\/ AND pClosed.PostID IS NULL","CreationDate":"2012-03-02 01:37:01","validated":false,"QueryBody_Original":"SELECT   \npOpened.PostID [Post Link]\n     \nFROM \n  PostHistory pOpened\n  LEFT JOIN PostHistory pClosed \n  ON pOpened.PostID = pClosed.PostID\n   and pClosed.postHistoryTypeID =10 --closed\n WHERE pOpened.postHistoryTypeID =11 --reopened\n and pClosed.PostID is  null"},{"QuerySetId":63015,"Title":"What have you tried (so far)?","Description":null,"QueryBody":"SELECT c.Text, c.Score, p.Id AS \"Post Link\" FROM Comments AS c JOIN Posts AS p ON p.Id = c.PostId WHERE LOWER(Text) LIKE '%what have you tried%' ORDER BY c.Score DESC","CreationDate":"2012-03-03 18:29:18","validated":false,"QueryBody_Original":"SELECT  c.Text, c.Score, p.Id as [Post Link]\n  FROM Comments c\n  JOIN Posts p ON p.Id = c.PostId\nWHERE LOWER(Text) LIKE '%what have you tried%'\n  ORDER BY c.Score DESC"},{"QuerySetId":63018,"Title":"Get top users from Armenia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE Location LIKE '%Turkey%' ORDER BY Reputation DESC","CreationDate":"2018-08-24 03:38:17","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    Location LIKE '%Turkey%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":63067,"Title":"Get top users for Greece","Description":"Get top users by country","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE Location LIKE '%Greece%' OR Location LIKE '%Hellas%' ORDER BY Reputation DESC","CreationDate":"2018-07-05 12:17:09","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    Location LIKE '%Greece%' or\n    Location LIKE '%Hellas%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":63578,"Title":"Users with \"stackoverflow is evil\" in their profile","Description":null,"QueryBody":"SELECT DisplayName, AboutMe FROM Users WHERE AboutMe LIKE '%evil%'","CreationDate":"2012-03-09 18:30:25","validated":false,"QueryBody_Original":"SELECT \n  DisplayName,\n  AboutMe\nFROM\n  Users\nWHERE\n  AboutMe LIKE '%evil%';"},{"QuerySetId":63648,"Title":"Sometimes, it's not about the post...","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", LENGTH(p.Body) AS \"Post Length\", u.DisplayName, u.Reputation FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE u.Id <> -1 ORDER BY (LENGTH(p.Body) \/ 4) * u.Reputation * LENGTH(u.DisplayName) LIMIT 5000","CreationDate":"2012-03-10 22:22:11","validated":false,"QueryBody_Original":"SELECT  TOP 5000 p.Id AS [Post Link], LEN(p.Body) AS [Post Length], u.DisplayName, u.Reputation FROM Posts p JOIN Users u ON u.Id = p.OwnerUserId WHERE u.Id != -1 ORDER BY (LEN(p.Body) \/ 4) * u.Reputation * LEN(u.DisplayName)"},{"QuerySetId":63807,"Title":"Find questions contain tag \"polls\"","Description":"SET     @TargTags   = LTRIM (RTRIM (@TargTags) );","QueryBody":"SELECT Q.Id, Q.Tags, Q.Score, Q.Title, CAST(TIME_TO_STR(Q.Creationdate, '%Y%m%d') AS TEXT(10)) AS \"Date Asked\", Q.AnswerCount AS \"Num Answers\" FROM Posts AS Q WHERE Q.PostTypeId = 1 \/* Question *\/ AND Q.ClosedDate IS NULL AND Q.Tags LIKE '%<Mass-Effect-3>%' AND LENGTH(Q.body) > 5 AND Q.AnswerCount > 5 ORDER BY Q.AnswerCount DESC LIMIT 10","CreationDate":"2012-03-15 08:21:08","validated":false,"QueryBody_Original":"SELECT   TOP 10\n    Q.Id            \n  , Q.Tags\n  , Q.Score\n  , Q.Title\n  ,  CONVERT (VARCHAR(10), Q.Creationdate, 112)  AS [Date Asked]\n  , Q.AnswerCount   AS [Num Answers]\n\nFROM        Posts AS Q\nWHERE       Q.PostTypeId = 1 -- Question\nAND         Q.ClosedDate IS NULL\nAND         Q.Tags like '%<Mass-Effect-3>%'\nAND         Len(Q.body)>5\nAND         Q.AnswerCount>5\nORDER BY    Q.AnswerCount DESC"},{"QuerySetId":64271,"Title":"ratio of questions to answers","Description":null,"QueryBody":"SELECT Users.Id, CAST(ABS(SUM(Posts.PostTypeId - 2)) AS FLOAT) AS Asked, CAST(SUM(Posts.PostTypeId - 1) AS FLOAT) AS Answered FROM Users LEFT JOIN Posts ON Posts.OwnerUserId = Users.Id WHERE Users.Id >= 0 AND Users.Id < 50000 GROUP BY Users.Id","CreationDate":"2012-03-16 11:35:44","validated":false,"QueryBody_Original":"SELECT  Users.Id,\n  CAST(ABS(SUM(Posts.PostTypeId - 2)) AS FLOAT) AS Asked,\n  CAST(SUM(Posts.PostTypeId -1) AS FLOAT) AS Answered\nFROM Users\nLEFT JOIN Posts on Posts.OwnerUserId = Users.Id\nWHERE Users.Id >= 0 AND Users.Id < 50000\nGROUP BY Users.Id"},{"QuerySetId":64323,"Title":"users that have neither a question or answer","Description":null,"QueryBody":"SELECT COUNT(*) AS no_questions_or_answers FROM users AS u LEFT JOIN posts AS p ON u.id = p.owneruserid AND p.posttypeid IN (1, 2) WHERE p.owneruserid IS NULL","CreationDate":"2012-03-16 20:52:29","validated":false,"QueryBody_Original":"SELECT \ncount(*) no_questions_or_answers\nFROM  \n    users u\n    LEFT JOIN posts p on\n      u.id  = p.owneruserid\n      and p.posttypeid in (1,2)\nWHERE\n     p.owneruserid is null"},{"QuerySetId":64380,"Title":"Duplicates that are missing the \"Possible Duplicate\" bit","Description":null,"QueryBody":"SELECT p.Score, p.Id AS \"Post Link\", p.ViewCount, p.OwnerUserId AS \"User Link\", p.CreationDate FROM Posts AS p INNER JOIN PostHistory AS h ON h.PostId = p.Id WHERE NOT p.ClosedDate IS NULL AND p.ClosedDate = h.CreationDate AND h.PostHistoryTypeId = 10 AND h.Comment = '1' AND NOT p.Body LIKE '%<strong>Possible Duplicate:<\/strong>%' AND NOT p.Body LIKE '%<strong>Possible Duplicates:<\/strong>%' ORDER BY p.CreationDate","CreationDate":"2012-03-19 21:24:32","validated":false,"QueryBody_Original":"SELECT  p.Score,\n       p.Id          AS [Post Link],\n       p.ViewCount,\n       p.OwnerUserId AS [User Link],\n       p.CreationDate\nFROM   Posts p\n       INNER JOIN PostHistory h\n         ON h.PostId = p.Id\nWHERE  p.ClosedDate IS NOT NULL\n       AND p.ClosedDate = h.CreationDate\n       AND h.PostHistoryTypeId = 10\n       AND h.Comment = '1'\n       AND p.Body NOT LIKE '%<strong>Possible Duplicate:<\/strong>%'\n       AND p.Body NOT LIKE '%<strong>Possible Duplicates:<\/strong>%'\nORDER  BY p.CreationDate ASC"},{"QuerySetId":64551,"Title":"users who have an R badge and a SQL badge","Description":null,"QueryBody":"SELECT DISTINCT r.Userid FROM badges AS r INNER JOIN badges AS sql ON r.userID = sql.userID WHERE r.Name = 'r' AND sql.name = 'sql'","CreationDate":"2012-03-21 01:21:29","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n     r.Userid\nFROM \n     badges r \n     INNER JOIN badges sql\n      ON r.userID = sql.userID\nWHERE \n     r.Name = 'r'\n      and sql.name = 'sql'"},{"QuerySetId":64571,"Title":"Question Id, Question Creation Time, Answer Id, Answer Creation Time","Description":"Sera utilis\u00e9 pour voir la distribution moyenne des r\u00e9ponses dans le temps","QueryBody":"SELECT * FROM Votes WHERE Votes.PostId = 19 AND Votes.VoteTypeId = 2","CreationDate":"2012-03-21 17:15:39","validated":false,"QueryBody_Original":"SELECT  *\nFROM Votes\nWHERE Votes.PostId = 19\nAND Votes.VoteTypeId = 2"},{"QuerySetId":64640,"Title":"Questions with more than 5 tags ( meta ).","Description":null,"QueryBody":"SELECT id, creationdate, tags FROM posts WHERE LENGTH(Tags) - LENGTH(REPLACE(Tags, '<', '')) > 5","CreationDate":"2012-03-22 02:38:10","validated":false,"QueryBody_Original":"SELECT  id, creationdate, tags\n  from posts\n where len(Tags) - len(replace(Tags, '<', '')) > 5"},{"QuerySetId":64648,"Title":"Questions with more than 5 tags","Description":null,"QueryBody":"SELECT id AS \"Post Link\", creationdate, tags FROM posts WHERE LENGTH(Tags) - LENGTH(REPLACE(Tags, '<', '')) > 5","CreationDate":"2012-03-22 03:59:10","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], creationdate, tags\n  from posts\n where len(Tags) - len(replace(Tags, '<', '')) > 5"},{"QuerySetId":64730,"Title":"random\u2666's absurd edit summaries (meta only)","Description":"Any edit summary comment from random\u2666 that's over 100 characters is sure to be an interesting read.","QueryBody":"SELECT a.CreationDate, a.Comment AS \"Ridiculous Comment\" FROM PostHistory AS a WHERE a.PostHistoryTypeId IN (4, 5, 6) AND LENGTH(a.Comment) > 100 ORDER BY a.CreationDate","CreationDate":"2019-04-21 22:36:12","validated":false,"QueryBody_Original":"SELECT \n  a.CreationDate,\n  a.Comment AS [Ridiculous Comment]\nFROM PostHistory a\nWHERE\n  a.PostHistoryTypeId IN (4,5,6) \n  AND LEN(a.Comment) > 100\nORDER BY a.CreationDate"},{"QuerySetId":64849,"Title":"Good question vs includes code","Description":null,"QueryBody":"SELECT MAX(creationdate) FROM posts","CreationDate":"2012-03-23 18:11:50","validated":false,"QueryBody_Original":"SELECT  max(creationdate) from posts"},{"QuerySetId":64853,"Title":"Good answer vs includes code","Description":null,"QueryBody":"SELECT CASE WHEN a.score > 0 OR a.id = q.acceptedanswerid THEN 'yes' ELSE 'no' END AS GoodAnswer, CASE WHEN q.body LIKE '%<code>%' THEN 'yes' ELSE 'no' END AS IncludesCode, COUNT(*) AS Count FROM posts AS q JOIN posts AS a ON q.id = a.parentid WHERE q.posttypeid = 1 AND a.posttypeid = 2 AND q.viewcount > 10 AND q.answercount > 0 AND q.creationdate > (SELECT MAX(creationdate) FROM posts) - 30 GROUP BY CASE WHEN a.score > 0 OR a.id = q.acceptedanswerid THEN 'yes' ELSE 'no' END, CASE WHEN q.body LIKE '%<code>%' THEN 'yes' ELSE 'no' END ORDER BY CASE WHEN a.score > 0 OR a.id = q.acceptedanswerid THEN 'yes' ELSE 'no' END","CreationDate":"2012-03-23 19:19:21","validated":false,"QueryBody_Original":"SELECT  case when a.score > 0 or a.id = q.acceptedanswerid then 'yes'\n            else 'no' end as GoodAnswer\n     , case when q.body like '%<code>%' then 'yes'\n            else 'no' end as IncludesCode\n     , count(*) as Count\n  from posts q\n  join posts a\n    on q.id = a.parentid\n where q.posttypeid = 1\n   and a.posttypeid = 2\n   and q.viewcount > 10\n   and q.answercount > 0\n   and q.creationdate > ( SELECT max(creationdate)\n                           from posts ) - 30\n group by case when a.score > 0 or a.id = q.acceptedanswerid then 'yes'\n               else 'no' end\n        , case when q.body like '%<code>%' then 'yes'\n               else 'no' end\n order by case when a.score > 0 or a.id = q.acceptedanswerid then 'yes'\n               else 'no' end"},{"QuerySetId":65057,"Title":"Old Closed Posts with no answers that weren't closed as duplicate, migrated or merged (score > 0)","Description":null,"QueryBody":"SELECT \"id\" AS \"Post Link\", id, creationDate, score, viewcount FROM posts AS q WHERE posttypeid = 1 AND creationdate < (CURRENT_TIMESTAMP() - 30) AND COALESCE(answercount, 0) = 0 AND Score > 0 AND NOT closeddate IS NULL AND NOT id IN (SELECT postid FROM posthistory WHERE (posthistorytypeid = 10 AND COMMENT IN (1)) OR posthistorytypeid IN (17, 18, 35, 37, 38)) ORDER BY SCORE DESC","CreationDate":"2016-03-02 17:24:45","validated":false,"QueryBody_Original":"SELECT  [id] [Post Link] ,id, creationDate, score, viewcount\nFROM   posts q \nWHERE  posttypeid = 1 \n       AND creationdate < ( Getdate() - 30 ) \n       AND COALESCE(answercount,0) = 0 \n       AND Score > 0\n       AND closeddate IS NOT NULL \n       AND id NOT IN (SELECT postid \n                      FROM   posthistory \n                      WHERE  (posthistorytypeid = 10 \n                      AND COMMENT in ( 1 )) \n                      or posthistorytypeid in (17,18,35,37,38))\nORDER BY SCORE DESC"},{"QuerySetId":65124,"Title":"Top users in number of answers in R","Description":null,"QueryBody":"SELECT COUNT(t2.score) AS number_of_answers, t2.owneruserid FROM posts AS t1 INNER JOIN posts AS t2 ON t1.id = t2.parentid WHERE t1.tags LIKE '%<homework>%' GROUP BY t2.owneruserid ORDER BY number_of_answers DESC","CreationDate":"2013-02-05 23:08:31","validated":false,"QueryBody_Original":"SELECT  COUNT(t2.score) as number_of_answers, t2.owneruserid\nFROM posts AS t1 INNER JOIN posts AS t2\nON t1.id = t2.parentid\nWHERE t1.tags LIKE '%<homework>%'\nGROUP BY t2.owneruserid\nORDER BY number_of_answers DESC"},{"QuerySetId":65127,"Title":"Open questions with the Possible Duplicate bit","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\", ViewCount, OwnerUserId AS \"User Link\", CreationDate FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL AND (Body LIKE '%<strong>Possible Duplicate:<\/strong>%' OR Body LIKE '%<strong>Possible Duplicates:<\/strong>%') ORDER BY CreationDate","CreationDate":"2012-03-27 03:31:58","validated":false,"QueryBody_Original":"SELECT  Score,\n       Id          AS [Post Link],\n       ViewCount,\n       OwnerUserId AS [User Link],\n       CreationDate\nFROM   Posts\nWHERE  PostTypeId = 1\n       AND ClosedDate IS NULL\n       AND (Body LIKE '%<strong>Possible Duplicate:<\/strong>%'\n            OR Body LIKE '%<strong>Possible Duplicates:<\/strong>%')\nORDER  BY CreationDate ASC"},{"QuerySetId":65148,"Title":"\"New\" Users, rate of asking Closed questions","Description":null,"QueryBody":"SELECT YEAR(Users.CreationDate), MONTH(Users.CreationDate), COUNT(Users.CreationDate) FROM Posts JOIN Users ON Users.Id = Posts.OwnerUserId GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate) ORDER BY YEAR(Users.CreationDate), MONTH(Users.CreationDate)","CreationDate":"2012-03-27 09:40:32","validated":false,"QueryBody_Original":"SELECT  Year(Users.CreationDate), Month(Users.CreationDate), COUNT(Users.CreationDate)\nfrom Posts \njoin Users on Users.Id=Posts.OwnerUserId\ngroup by Year(Users.CreationDate), Month(Users.CreationDate)\norder by Year(Users.CreationDate), Month(Users.CreationDate)"},{"QuerySetId":65313,"Title":"Winphone thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<windows-phone%' OR Tags LIKE '%<wp7%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:31:46","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<windows-phone%' or Tags like '%<wp7%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65331,"Title":"Azure thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<azure-databricks%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2020-10-08 19:41:25","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<azure-databricks%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65332,"Title":"Amazon web service thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<amazon-web-services>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:41:09","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<amazon-web-services>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65333,"Title":"Google app engine thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<google-app-engine>%' OR Tags LIKE '%<google-app-engine-patch>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:44:00","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<google-app-engine>%'\nor Tags like '%<google-app-engine-patch>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65335,"Title":"PHP thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<php%' OR Tags LIKE '%<cakephp%' OR Tags LIKE '%<amfphp>%' OR Tags LIKE '%<jqgrid-php>%' OR Tags LIKE '%<easyphp>%' OR Tags LIKE '%<fuelphp>%' OR Tags LIKE '%<ffmpeg-php>%' OR Tags LIKE '%<firephp>%' OR Tags LIKE '%<suphp>%' OR Tags LIKE '%<mod-php>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:46:37","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<php%'\nor Tags like '%<cakephp%'\nor Tags like '%<amfphp>%'\nor Tags like '%<jqgrid-php>%'\nor Tags like '%<easyphp>%'\nor Tags like '%<fuelphp>%'\nor Tags like '%<ffmpeg-php>%'\nor Tags like '%<firephp>%'\nor Tags like '%<suphp>%'\nor Tags like '%<mod-php>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65336,"Title":"JSP thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<jsp%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:47:51","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<jsp%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65337,"Title":"HTML5 thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<html5%' OR Tags LIKE '%<html-canvas>%' OR Tags LIKE '%<xhtml5>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:49:34","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<html5%'\nor Tags like '%<html-canvas>%'\nor Tags like '%<xhtml5>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65338,"Title":"Silverlight thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<silverlight%' OR Tags LIKE '%<pivotviewer>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:50:33","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<silverlight%'\nor Tags like '%<pivotviewer>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65339,"Title":"Flash thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<flash%' OR Tags LIKE '%<open-flash-chart>%' OR Tags LIKE '%<usb-flash-drive>%' OR Tags LIKE '%<adobe-flash-cs3>%' OR Tags LIKE '%<openflashchart2>%' OR Tags LIKE '%<embedded-flashplayer>%' OR Tags LIKE '%<axshockwaveflash>%' OR Tags LIKE '%<openflashchart>%' OR Tags LIKE '%<rails-flash>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:52:38","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<flash%'\nor Tags like '%<open-flash-chart>%'\nor Tags like '%<usb-flash-drive>%'\nor Tags like '%<adobe-flash-cs3>%'\nor Tags like '%<openflashchart2>%'\nor Tags like '%<embedded-flashplayer>%'\nor Tags like '%<axshockwaveflash>%'\nor Tags like '%<openflashchart>%'\nor Tags like '%<rails-flash>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65340,"Title":"iPhone thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (\"Tags\" LIKE '%<iphone%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:53:34","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE ([Tags] like '%<iphone%' ) \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65341,"Title":"Android thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (\"Tags\" LIKE '%<android%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:54:30","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P \nWHERE ([Tags] like '%<android%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65343,"Title":"Win8 thread volume, page views, unique OPs by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, SUM(ViewCount) AS PageViews, COUNT(DISTINCT OwnerUserId) AS UniqueOPs, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<windows-8>%' OR Tags LIKE '%<metro-ui>%' OR Tags LIKE '%<metro-style-app>%' OR Tags LIKE '%<winrt>%' OR Tags LIKE '%<c++-cx>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 11:56:31","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume, \nSUM(ViewCount) as PageViews,\nCOUNT(DISTINCT OwnerUserId) as UniqueOPs,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P \nWHERE (Tags like '%<windows-8>%'\nor Tags like '%<metro-ui>%'\nor Tags like '%<metro-style-app>%'\nor Tags like '%<winrt>%'\nor Tags like '%<c++-cx>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65346,"Title":"Azure thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<azure%' OR Tags LIKE '%<windows-azure%' OR Tags LIKE '%<sql-azure>%' OR Tags LIKE '%<tfs-azure>%' OR Tags LIKE '%<servicebus>%' OR Tags LIKE '%<acs>%' OR Tags LIKE '%<accesscontrolservice>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:14:37","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<azure%'\nor Tags like '%<windows-azure%'\nor Tags like '%<sql-azure>%'\nor Tags like '%<tfs-azure>%'\nor Tags like '%<servicebus>%'\nor Tags like '%<acs>%'\nor Tags like '%<accesscontrolservice>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65347,"Title":"Amazon web service thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<amazon-web-services>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:16:38","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<amazon-web-services>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65348,"Title":"Google app engine thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<google-app-engine>%' OR Tags LIKE '%<google-app-engine-patch>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:17:18","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<google-app-engine>%'\nor Tags like '%<google-app-engine-patch>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65349,"Title":"ASP.NET thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<activedirectorymembership>%' OR Tags LIKE '%<custom-server-controls>%' OR Tags LIKE '%<dynamicdata>%' OR Tags LIKE '%<dynamic-data>%' OR Tags LIKE '%<spring-mvc>%' OR Tags LIKE '%<mvcscaffolding>%' OR Tags LIKE '%<temporary-asp.net-files>%' OR Tags LIKE '%<asp.net%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:19:04","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<activedirectorymembership>%' \nor Tags like '%<custom-server-controls>%' \nor Tags like '%<dynamicdata>%' \nor Tags like '%<dynamic-data>%' \nor Tags like '%<spring-mvc>%' \nor Tags like '%<mvcscaffolding>%' \nor Tags like '%<temporary-asp.net-files>%'\nor Tags like '%<asp.net%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65351,"Title":"JSP thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<jsp%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:20:41","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<jsp%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65352,"Title":"Silverlight thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<silverlight%' OR Tags LIKE '%<pivotviewer>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:21:23","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<silverlight%'\nor Tags like '%<pivotviewer>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65353,"Title":"HTML5 thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<html5%' OR Tags LIKE '%<html-canvas>%' OR Tags LIKE '%<xhtml5>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:23:16","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<html5%'\nor Tags like '%<html-canvas>%'\nor Tags like '%<xhtml5>%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65356,"Title":"Android thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (\"Tags\" LIKE '%<android%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:25:31","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE ([Tags] like '%<android%'  ) \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65358,"Title":"Win8 thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<windows-8>%' OR Tags LIKE '%<metro-ui>%' OR Tags LIKE '%<metro-style-app>%' OR Tags LIKE '%<winrt>%' OR Tags LIKE '%<c++-cx>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:26:53","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<windows-8>%'\nor Tags like '%<metro-ui>%'\nor Tags like '%<metro-style-app>%'\nor Tags like '%<winrt>%'\nor Tags like '%<c++-cx>%' ) \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65359,"Title":"Winphone thread volume with 1day reponse by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<ios%' AND NOT Tags LIKE '%<iostream>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:27:25","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<ios%'\nand Tags not like '%<iostream>%' ) \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65360,"Title":"iOS thread volume with accepted answers by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<ios%' AND NOT Tags LIKE '%<iostream>%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-03-28 12:37:21","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<ios%'\nand Tags not like '%<iostream>%' ) \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nand AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":65404,"Title":"Score distribution of all questions","Description":null,"QueryBody":"SELECT score, COUNT(id) FROM posts WHERE posttypeid = 1 AND tags LIKE '%<r>%' GROUP BY score ORDER BY score","CreationDate":"2012-03-28 20:12:48","validated":false,"QueryBody_Original":"SELECT  score, COUNT(id)\nFROM posts\nWHERE posttypeid = 1 AND tags LIKE '%<r>%'\nGROUP BY score\nORDER BY score ASC"},{"QuerySetId":65460,"Title":"Dead users with less than 200 rep, grouped by month they joined","Description":null,"QueryBody":"SELECT YEAR(Users.CreationDate), MONTH(Users.CreationDate), COUNT(Users.CreationDate) FROM Posts JOIN Users ON Users.Id = Posts.OwnerUserId WHERE Users.Reputation < 200 GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate) ORDER BY YEAR(Users.CreationDate), MONTH(Users.CreationDate)","CreationDate":"2012-03-29 05:45:58","validated":false,"QueryBody_Original":"SELECT  Year(Users.CreationDate), Month(Users.CreationDate), COUNT(Users.CreationDate)\nfrom Posts \njoin Users on Users.Id=Posts.OwnerUserId\nwhere Users.Reputation <200\ngroup by Year(Users.CreationDate), Month(Users.CreationDate)\norder by Year(Users.CreationDate), Month(Users.CreationDate)"},{"QuerySetId":65470,"Title":"Top Users from your City","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%##Location##%' ORDER BY Reputation DESC","CreationDate":"2019-09-02 05:17:44","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location\nfrom Users\nwhere Location like '%##Location##%'\nORDER By Reputation DESC"},{"QuerySetId":65659,"Title":"Most voted question on April Fool's day (trying to find hoax questions)","Description":null,"QueryBody":"SELECT p.Title \/* ,  COUNT(v.Id) *\/ FROM Posts AS p \/* INNER JOIN Votes AS v\n   ON p.Id = v.PostId *\/ WHERE p.CreationDate >= '03\/30\/2012 00:00:00'","CreationDate":"2012-04-01 18:25:10","validated":false,"QueryBody_Original":"SELECT  p.Title \/*,  COUNT(v.Id) *\/\nFROM Posts AS p\n  \/* INNER JOIN Votes AS v\n   ON p.Id = v.PostId *\/\nWHERE p.CreationDate >= '03\/30\/2012 00:00:00'\n\/* GROUP BY p.Title\nORDER BY COUNT(v.Id) DESC *\/"},{"QuerySetId":65739,"Title":"Top Distinct Tag Badge Counts","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(DISTINCT LOWER(Name)) AS NumTagBadges, COUNT(*) AS CountTagBadges FROM Badges WHERE Name IN (SELECT TagName FROM Tags) GROUP BY UserId ORDER BY NumTagBadges DESC LIMIT 10","CreationDate":"2012-04-03 06:11:40","validated":false,"QueryBody_Original":"SELECT  Top 10 UserId As [User Link],\nCount(Distinct Lower(Name)) As NumTagBadges, Count(*) As CountTagBadges\nFrom Badges\nWhere Name In (SELECT TagName from Tags)\nGroup By UserId\nOrder By NumTagBadges Desc"},{"QuerySetId":65740,"Title":"Jon Skeet Non Tag Badge Counts","Description":null,"QueryBody":"SELECT Name, COUNT(*) AS NumTagBadges FROM Badges WHERE NOT Name IN (SELECT TagName FROM Tags) AND UserId = 22656 GROUP BY Name ORDER BY NumTagBadges DESC","CreationDate":"2012-04-03 06:17:51","validated":false,"QueryBody_Original":"SELECT  Name, Count(*) As NumTagBadges\nFrom Badges\nWhere Name Not In (SELECT TagName from Tags)\nAnd UserId=22656\nGroup By Name\nOrder By NumTagBadges Desc"},{"QuerySetId":65916,"Title":"PostId and  # of Participants - 2week of May 2011","Description":null,"QueryBody":"SELECT id, userid, COUNT(1) AS cnt FROM (SELECT q.id, q.owneruserid AS userid FROM posts AS q UNION ALL SELECT q.id, a.owneruserid AS userid FROM posts AS q LEFT JOIN posts AS a ON (q.id = a.parentid) UNION ALL SELECT q.id, qc.userid AS userid FROM posts AS q LEFT JOIN posts AS a ON (q.id = a.parentid) LEFT JOIN comments AS qc ON (q.id = qc.postid) UNION ALL SELECT q.id, ac.userid AS userid FROM posts AS q LEFT JOIN posts AS a ON (q.id = a.parentid) LEFT JOIN comments AS ac ON (a.id = ac.postid)) AS A WHERE NOT A.userid IS NULL AND A.id IN (SELECT id FROM posts WHERE PostTypeId = '1' AND CAST(TIME_TO_STR(creationDate, '%Y%m%d') AS TEXT(8)) = '20110508') GROUP BY A.id, A.userid ORDER BY A.id, A.userid","CreationDate":"2012-04-16 13:08:52","validated":false,"QueryBody_Original":"SELECT  id, userid, count(1) as cnt from (\n\nSELECT\n  q.id,\n  q.owneruserid as userid\nfrom\n  posts q\nunion all\n\nSELECT\n  q.id,\n  a.owneruserid as userid\nfrom\n  posts q left join posts a on (q.id = a.parentid)\nunion all\n\nSELECT\n  q.id,\n  qc.userid as userid\nfrom\n  posts q left join posts a on (q.id = a.parentid)\n          left join comments qc on (q.id = qc.postid)\n\nunion all\nSELECT\n  q.id,\n  ac.userid as userid\nfrom\n  posts q left join posts a on (q.id = a.parentid)\n          left join comments ac on (a.id = ac.postid)       \n) A\nwhere A.userid is not null\nand A.id in (SELECT id from posts where PostTypeId = '1' \nand CONVERT(CHAR(8), creationDate, 112) = '20110508')\ngroup by A.id, A.userid\norder by A.id, A.userid"},{"QuerySetId":65929,"Title":"Number of answers by me last year for .NET\/C#","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId AND a.postTypeId = 2 AND q.postTypeId = 1 \/* join PostTags on q.Id = PostTags.PostId\n   join Tags on Tags.Id = PostTags.TagId and ... *\/ WHERE a.CommunityOwnedDate IS NULL AND a.OwnerUserId = '##UserId##' AND a.CreationDate >= '##StartDate##' AND a.CreationDate <= '##EndDate##' AND (q.Tags LIKE '##Tag##')","CreationDate":"2016-02-04 21:18:42","validated":false,"QueryBody_Original":"SELECT \ncount(*)\nfrom\n    Posts q\n  inner join\n    Posts a\n  on q.Id = a.ParentId and a.postTypeId = 2 and q.postTypeId = 1\n   \/*join PostTags on q.Id = PostTags.PostId\n   join Tags on Tags.Id = PostTags.TagId and ... *\/\nwhere\n      a.CommunityOwnedDate is null\n      and a.OwnerUserId = '##UserId##'\n      and a.CreationDate >= '##StartDate##'\n      and a.CreationDate <= '##EndDate##'\n      and( q.Tags like '##Tag##' )"},{"QuerySetId":66050,"Title":"Whats up with the constructor tag","Description":null,"QueryBody":"SELECT id, tagname, count FROM tags WHERE tagname = 'google-apps-script'","CreationDate":"2016-03-09 04:51:26","validated":false,"QueryBody_Original":"SELECT   id, tagname, count\nFROM tags where tagname='google-apps-script'"},{"QuerySetId":66100,"Title":"Top users of a particular location","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%##Location##%' ORDER BY Reputation DESC","CreationDate":"2012-04-06 13:08:34","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%##Location##%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":66255,"Title":"Reputation per 1000 characters, for users > 2k.","Description":null,"QueryBody":"SELECT u.DisplayName AS \"User Link\", COUNT(p.Id) AS \"Post Count\", u.Reputation AS \"User Reputation\", u.Reputation * 1000 \/ SUM(LENGTH(p.Body)) AS \"User RPC1k\" FROM Users AS U JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE u.Reputation > 2000 GROUP BY u.DisplayName, u.Reputation ORDER BY \"User RPC1k\" DESC LIMIT 1000","CreationDate":"2012-04-09 13:15:27","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  u.DisplayName AS [User Link],\n  COUNT(p.Id) AS [Post Count],\n  u.Reputation AS [User Reputation],\n  u.Reputation * 1000 \/ SUM(LEN(p.Body)) AS [User RPC1k]\nFROM\n  Users U\nJOIN\n  Posts p ON p.OwnerUserId = u.Id\nWHERE\n  u.Reputation > 2000\nGROUP BY\n  u.DisplayName, u.Reputation\nORDER BY \n  [User RPC1k] DESC"},{"QuerySetId":66260,"Title":"How many characters have you typed? :)","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", SUM(LENGTH(p.Body)) AS \"Characters typed\", u.Reputation AS \"Reputation they got for it\" FROM Users AS U JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE u.DisplayName LIKE 'bibh%' GROUP BY u.Id, u.Reputation ORDER BY \"Characters Typed\" DESC","CreationDate":"2012-04-09 14:20:41","validated":false,"QueryBody_Original":"SELECT \n  u.Id AS [User Link],\n  SUM(LEN(p.Body)) AS [Characters typed],\n  u.Reputation AS [Reputation they got for it]\nFROM\n  Users U\nJOIN\n  Posts p ON p.OwnerUserId = u.Id\nWHERE\n  u.DisplayName LIKE 'bibh%'\nGROUP BY\n  u.Id, u.Reputation\nORDER BY \n  [Characters Typed] DESC"},{"QuerySetId":66262,"Title":"Which answers contain the most useless rant?","Description":null,"QueryBody":"SELECT u.ID AS \"User Link\", p.Id AS \"Post Link\", LENGTH(p.Body) AS \"Length\", p.Score AS \"Score\", (-(p.Score * 1000) * LENGTH(p.Body)) \/ 1000 AS \"Formula\" FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 2 ORDER BY \"Formula\" DESC LIMIT 1000","CreationDate":"2012-04-09 14:45:45","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  u.ID AS [User Link],\n  p.Id AS [Post Link],\n  LEN(p.Body) AS [Length],\n  p.Score AS [Score],\n  (- (p.Score * 1000) * LEN(p.Body)) \/ 1000 AS [Formula]\nFROM\n  Users u\nJOIN\n  Posts p ON p.OwnerUserId = u.Id\nWHERE\n  p.PostTypeId = 2\nORDER BY\n  [Formula] DESC"},{"QuerySetId":66271,"Title":"Largest number of positively scored answers in a single day by a single user","Description":"Shows which users have posted the largest number of positively scored answers during one day.  Also shows the day and the number of posts for each of these events.","QueryBody":"SELECT OwnerUserId AS \"User Link\", CAST(p.CreationDate AS DATE) AS \"Day\", COUNT(*) AS \"Number of positively-scored posts\" FROM Posts AS p WHERE p.PostTypeId = 2 \/* answers only *\/ AND p.Score > 0 \/* positively scored *\/ AND p.OwnerUserId <> '' \/* don't worry about posts with no owner *\/ AND NOT p.OwnerUserId IS NULL \/* don't worry about posts with no owner *\/ GROUP BY p.OwnerUserId, CAST(p.CreationDate AS DATE) ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2012-04-09 19:25:53","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  OwnerUserId AS [User Link],\n  CAST(p.CreationDate AS DATE) AS [Day],\n  COUNT(*) AS [Number of positively-scored posts]\nFROM Posts p\nWHERE\n  p.PostTypeId = 2 -- answers only\n  AND p.Score > 0 -- positively scored\n  AND p.OwnerUserId <> '' -- don't worry about posts with no owner\n  AND p.OwnerUserId IS NOT NULL -- don't worry about posts with no owner\nGROUP BY p.OwnerUserId, CAST(p.CreationDate AS DATE)\nORDER BY COUNT(*) DESC"},{"QuerySetId":66348,"Title":"Azure threads average Day To Answer by month","Description":null,"QueryBody":"SELECT COUNT(*) AS AnsweredVolume, SUM(DATEDIFF(P1.CreationDate, P.CreationDate)) AS TotalTime, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P INNER JOIN \"Posts\" AS P1 ON P.AcceptedAnswerId = P1.Id WHERE (P.Tags LIKE '%<azure%' OR P.Tags LIKE '%<windows-azure%' OR P.Tags LIKE '%<sql-azure>%' OR P.Tags LIKE '%<tfs-azure>%' OR P.Tags LIKE '%<servicebus>%' OR P.Tags LIKE '%<acs>%' OR P.Tags LIKE '%<accesscontrolservice>%') AND P.PostTypeId = 1 AND P.CommunityOwnedDate IS NULL AND P.ClosedDate IS NULL AND P.AcceptedAnswerId > 0 GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2012-04-10 10:58:36","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as AnsweredVolume,\nSUM(DATEDIFF(minute, P.CreationDate, P1.CreationDate)) as TotalTime,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\ninner join [Posts] as P1 on P.AcceptedAnswerId = P1.Id \nWHERE (P.Tags like '%<azure%'\nor P.Tags like '%<windows-azure%'\nor P.Tags like '%<sql-azure>%'\nor P.Tags like '%<tfs-azure>%'\nor P.Tags like '%<servicebus>%'\nor P.Tags like '%<acs>%'\nor P.Tags like '%<accesscontrolservice>%') \nand P.PostTypeId = 1 \nand P.CommunityOwnedDate is null and P.ClosedDate is null\nand P.AcceptedAnswerId > 0\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":66360,"Title":"Top iOS devs in Greece","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(AboutME) LIKE '%ios%' OR LOWER(AboutME) LIKE '%iphone%') AND (LOWER(Location) LIKE '%athens%' OR LOWER(Location) LIKE '%greece%' OR LOWER(Location) LIKE '%ellas%') ORDER BY Reputation DESC","CreationDate":"2012-04-10 17:30:27","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n(LOWER(AboutME) LIKE '%ios%' or LOWER(AboutME) LIKE '%iphone%') AND (\n LOWER(Location) LIKE '%athens%' or LOWER(Location) LIKE '%greece%' or LOWER(Location) LIKE '%ellas%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":66500,"Title":"Count of new Tridion posts per week","Description":null,"QueryBody":"SELECT CAST(YEAR(CreationDate) AS TEXT(4)) + RIGHT('00' + RTRIM(CAST(TIME_TO_STR(CreationDate, '%M') AS TEXT(2))), 2) AS \"month\", COUNT(*) AS \"answer\" FROM POSTS WHERE PostTypeId = 1 GROUP BY CAST(YEAR(CreationDate) AS TEXT(4)) + RIGHT('00' + RTRIM(CAST(TIME_TO_STR(CreationDate, '%M') AS TEXT(2))), 2) ORDER BY CAST(YEAR(CreationDate) AS TEXT(4)) + RIGHT('00' + RTRIM(CAST(TIME_TO_STR(CreationDate, '%M') AS TEXT(2))), 2)","CreationDate":"2014-03-30 02:11:28","validated":false,"QueryBody_Original":"SELECT  CONVERT(char(4),YEAR(CreationDate))+RIGHT('00'+RTRIM(CONVERT(char(2),DATEPART(mm,CreationDate))), 2) as 'month', count(*) as 'answer'\n  FROM POSTS\n WHERE PostTypeId = 1\n GROUP BY CONVERT(char(4),YEAR(CreationDate))+RIGHT('00'+RTRIM(CONVERT(char(2),DATEPART(mm,CreationDate))), 2)\n order by CONVERT(char(4),YEAR(CreationDate))+RIGHT('00'+RTRIM(CONVERT(char(2),DATEPART(mm,CreationDate))), 2)"},{"QuerySetId":66532,"Title":"Unlocked Questions From High Reputation Users Without Accepted Answers","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Score, u.Id AS \"User Link\", u.Reputation FROM Posts AS q INNER JOIN Users AS u ON q.OwnerUserId = u.Id WHERE q.PostTypeId = 1 \/* a Question *\/ AND q.AcceptedAnswerId IS NULL AND q.ClosedDate IS NULL AND (SELECT COUNT(*) FROM PostHistory AS h WHERE h.PostId = q.Id AND h.PostHistoryTypeId = 14) \/* Locked *\/ > (SELECT COUNT(*) \/* more times than *\/ FROM PostHistory AS h WHERE h.PostId = q.Id AND h.PostHistoryTypeId = 15) \/* Unlocked *\/ ORDER BY (u.Reputation \/ 5000) DESC, q.Id","CreationDate":"2012-04-12 11:33:15","validated":false,"QueryBody_Original":"SELECT \n  q.Id as [Post Link],\n  q.Score,\n  u.Id as [User Link],\n  u.Reputation\n\nfrom\n  Posts q\n  inner join Users u\n             on q.OwnerUserId = u.Id\n\nwhere\n  q.PostTypeId = 1 -- a Question\n  and q.AcceptedAnswerId is null\n  and q.ClosedDate is null\n  and (SELECT count(*)\n       from PostHistory h\n       where h.PostId = q.Id\n       and h.PostHistoryTypeId = 14) -- Locked\n      > (SELECT count(*)             -- more times than\n         from PostHistory h\n         where h.PostId = q.Id\n         and h.PostHistoryTypeId = 15) -- Unlocked\n\norder by \n  (u.Reputation \/ 5000) desc,\n  q.Id"},{"QuerySetId":66915,"Title":"Distribution of votes of answers","Description":null,"QueryBody":"SELECT a.score, COUNT(*) FROM Posts AS a WHERE a.postTypeId = 2 GROUP BY a.score","CreationDate":"2012-04-16 22:28:44","validated":false,"QueryBody_Original":"SELECT  \n\ta.score,\n\tcount(*)\nFROM \n\tPosts a\nwhere \n\ta.postTypeId = 2\ngroup by a.score"},{"QuerySetId":66917,"Title":"Number of votes per view count","Description":null,"QueryBody":"SELECT Score, COALESCE(ViewCount, 0) AS ViewCount, COUNT(*) AS numResps FROM Posts WHERE PostTypeId = 1 GROUP BY Score, COALESCE(ViewCount, 0)","CreationDate":"2016-05-18 23:31:15","validated":false,"QueryBody_Original":"SELECT  Score, ISNULL(ViewCount,0) ViewCount, Count(*) numResps\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY Score, ISNULL(ViewCount,0)"},{"QuerySetId":66925,"Title":"Post Count Comparison Between Esri and Qgis tags.","Description":null,"QueryBody":"SELECT 'QGIS Tags' AS Software, Count AS PostCount FROM tags WHERE tagname LIKE 'qgis%'","CreationDate":"2012-05-02 14:41:10","validated":false,"QueryBody_Original":"SELECT  'QGIS Tags' Software, Count as PostCount from tags \nwhere tagname like 'qgis%' \n\n--tagname like 'esri%' OR  tagname like 'arcgis%'"},{"QuerySetId":67117,"Title":"Site upvote to downvote ratio","Description":null,"QueryBody":"SELECT c.num_upvotes, c.num_downvotes, c.num_upvotes \/ c.num_downvotes AS ratio, p.post_count \/ c.num_downvotes AS downvotes_per_qa, c.weighted_up, c.weighted_down, c.weighted_up \/ c.weighted_down AS weight_ratio FROM (SELECT SUM(upvotes) AS num_upvotes, SUM(downvotes) AS num_downvotes \/* The higher the rep, the greater the \"weight\" of your votes *\/, SUM(upvotes * (reputation \/ 200)) AS weighted_up, SUM(downvotes * (reputation \/ 200)) AS weighted_down FROM Users) AS c LEFT JOIN (SELECT COUNT(1) AS post_count FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS p ON 1 = 1","CreationDate":"2012-04-18 06:57:41","validated":false,"QueryBody_Original":"SELECT  \n  c.num_upvotes\n  , c.num_downvotes\n  , c.num_upvotes \/ c.num_downvotes AS ratio\n  , p.post_count \/ c.num_downvotes AS downvotes_per_qa\n  , c.weighted_up\n  , c.weighted_down\n  , c.weighted_up \/ c.weighted_down AS weight_ratio\nFROM (\n  SELECT\n    SUM(upvotes) AS num_upvotes\n    , SUM(downvotes) AS num_downvotes\n    -- The higher the rep, the greater the \"weight\" of your votes\n    , SUM(upvotes * (reputation \/ 200)) AS weighted_up\n    , SUM(downvotes * (reputation \/ 200)) AS weighted_down\n  FROM Users\n  ) AS c\nLEFT JOIN (\n  SELECT\n    COUNT(1) AS post_count\n  FROM Posts\n  WHERE \n    PostTypeId = 1\n    OR PostTypeId = 2\n  ) p\n  ON 1=1"},{"QuerySetId":67132,"Title":"select * from users where Location like 'pune'","Description":null,"QueryBody":"SELECT * FROM users WHERE location LIKE '%Oklahoma%' ORDER BY Reputation DESC","CreationDate":"2012-05-10 11:47:02","validated":false,"QueryBody_Original":"SELECT  * from users where location like '%Oklahoma%' order by Reputation desc"},{"QuerySetId":67306,"Title":"Top Users in Brisbane by reputation","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%brisbane%' ORDER BY Reputation DESC","CreationDate":"2017-02-27 08:18:36","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link],Reputation,Location\nFROM Users\nWHERE lower(Location) LIKE '%brisbane%'\nORDER BY Reputation DESC"},{"QuerySetId":67366,"Title":"Average accept rate (for the whole site)","Description":"The average accept rate among all users of the target site.","QueryBody":"SELECT AVG(a.\"Accept Rate\") AS \"Average accept rate\" FROM (SELECT p.OwnerUserId, CAST(CAST(COUNT(p.AcceptedAnswerId) AS FLOAT) \/ CAST(COUNT(p.Id) AS FLOAT) * 100 AS FLOAT(5, 2)) AS \"Accept Rate\" FROM Posts AS p WHERE p.PostTypeId = 1 \/* Only questions *\/ AND p.ClosedDate IS NULL \/* that have not been closed *\/ AND p.CommunityOwnedDate IS NULL \/* and are not CW *\/ AND p.AnswerCount > 0 \/* and actually have some answers *\/ AND (NOT p.OwnerUserId IS NULL AND p.OwnerUserId <> '') \/* bleep bloop *\/ GROUP BY p.OwnerUserId HAVING COUNT(p.Id) >= 4 \/* Need at least 4 questions for accept rate *\/) AS a","CreationDate":"2012-04-20 20:30:17","validated":false,"QueryBody_Original":"SELECT  AVG(a.[Accept Rate]) AS [Average accept rate]\nFROM\n(\n  SELECT \n    p.OwnerUserId, \n    CAST(\n      CAST(COUNT(p.AcceptedAnswerId) AS FLOAT) \/ CAST(COUNT(p.Id) AS FLOAT) * 100 \n        AS DECIMAL(5,2)\n     ) AS [Accept Rate]\n  FROM Posts p\n  WHERE \n    p.PostTypeId = 1 -- Only questions\n    AND p.ClosedDate IS NULL -- that have not been closed\n    AND p.CommunityOwnedDate IS NULL -- and are not CW\n    AND p.AnswerCount > 0 -- and actually have some answers\n    AND (p.OwnerUserId IS NOT NULL AND p.OwnerUserId <> '') -- bleep bloop\n  GROUP BY p.OwnerUserId\n  HAVING COUNT(p.Id) >= 4 -- Need at least 4 questions for accept rate\n) AS a"},{"QuerySetId":67400,"Title":"Percentage of your total rep that came from accepted answers","Description":"What percentage of your total rep comes from accepted answers (+15's).","QueryBody":"SELECT COUNT(*) FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE reputation > 20000) AND id IN (SELECT parentid FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE reputation > 20000) AND posttypeid = 2)","CreationDate":"2015-08-20 11:11:12","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where owneruserid in \n(SELECT id from users where reputation >20000)\n\n\nand id in \n\n(\nSELECT parentid from posts where owneruserid in \n(SELECT id from users where reputation >20000)\nand posttypeid =2\n)"},{"QuerySetId":67477,"Title":"Questions that get much attention but have the least amount of answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", AnswerCount, ViewCount FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL ORDER BY AnswerCount, ViewCount DESC LIMIT 1000","CreationDate":"2012-04-21 17:45:37","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Id AS [Post Link], AnswerCount, ViewCount FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL ORDER BY AnswerCount, ViewCount DESC"},{"QuerySetId":67527,"Title":"select  all users from Sri Lanaka order by reputation ","Description":null,"QueryBody":"SELECT * FROM users ORDER BY Reputation DESC","CreationDate":"2012-04-22 12:51:53","validated":false,"QueryBody_Original":"SELECT  * from users order by Reputation desc"},{"QuerySetId":67559,"Title":"Most viewed duplicates missing the \"Possible Duplicate\" bit","Description":null,"QueryBody":"SELECT p.Score, p.Id AS \"Post Link\", p.ViewCount, p.OwnerUserId AS \"User Link\", p.CreationDate FROM Posts AS p INNER JOIN PostHistory AS h ON h.PostId = p.Id WHERE NOT p.ClosedDate IS NULL AND p.ClosedDate = h.CreationDate AND h.PostHistoryTypeId = 10 AND h.Comment = '1' AND NOT p.Body LIKE '%<strong>Possible Duplicate:<\/strong>%' AND NOT p.Body LIKE '%<strong>Possible Duplicates:<\/strong>%' ORDER BY p.ViewCount DESC","CreationDate":"2012-04-22 20:02:30","validated":false,"QueryBody_Original":"SELECT  p.Score,\n       p.Id          AS [Post Link],\n       p.ViewCount,\n       p.OwnerUserId AS [User Link],\n       p.CreationDate\nFROM   Posts p\n       INNER JOIN PostHistory h\n         ON h.PostId = p.Id\nWHERE  p.ClosedDate IS NOT NULL\n       AND p.ClosedDate = h.CreationDate\n       AND h.PostHistoryTypeId = 10\n       AND h.Comment = '1'\n       AND p.Body NOT LIKE '%<strong>Possible Duplicate:<\/strong>%'\n       AND p.Body NOT LIKE '%<strong>Possible Duplicates:<\/strong>%'\nORDER  BY p.ViewCount DESC"},{"QuerySetId":67973,"Title":"People who I've accepted the most answers from","Description":null,"QueryBody":"SELECT a.OwnerUserId AS \"User Link\", COUNT(*) AS \"Answers Accepted\" FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id WHERE q.OwnerUserId = 1238040 GROUP BY a.OwnerUserId ORDER BY \"Answers Accepted\" DESC","CreationDate":"2012-04-27 23:38:50","validated":false,"QueryBody_Original":"SELECT  a.OwnerUserId AS [User Link],\n       COUNT(*)      AS [Answers Accepted]\nFROM   Posts q\n       INNER JOIN Posts a\n         ON q.AcceptedAnswerId = a.Id\nWHERE  q.OwnerUserId = 1238040\nGROUP  BY a.OwnerUserId\nORDER  BY [Answers Accepted] DESC"},{"QuerySetId":67985,"Title":"10 Most Common Words Showing in Posts Closed as Not Constructive","Description":"Less than performant query that takes all the words (sort of) that show up in post titles that have been closed a not constructive (I think) and selects the 10 that occur the most frequently. Added a filter for common words, but what it probably needs to do is analyze words that were and were not included in closed posts, then return only the top 10 that had no instances of non-constructive (or below a threshold?)\r\n\r\nReplace the \"TOP 100 PERCENT\" with a much smaller number, 1000 took about 40s when I ran it, 100 was about 300ms","QueryBody":"SELECT P.Id, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(P.Title, ',', ' '), '?', ''), '  ', ' '), '\/', ''), ':', '') FROM Posts AS P INNER JOIN PostHistory AS PH ON PH.PostId = P.Id WHERE PH.Comment = '3' LIMIT 1000","CreationDate":"2012-04-28 00:30:51","validated":false,"QueryBody_Original":"SELECT  TOP 1000 P.Id, Replace(Replace(Replace(Replace(Replace(P.Title, ',', ' '), '?', ''), '  ',' '), '\/', ''), ':', '')\nFROM Posts P\n   INNER JOIN PostHistory PH ON PH.PostId = P.Id\nWHERE PH.Comment = '3';"},{"QuerySetId":68285,"Title":"Tracked users who made Edits versus \"created\" content.","Description":"Also shows \"created\" content type.\r\nSee http:\/\/meta.stackoverflow.com\/questions\/130648\/does-stack-exchange-follow-the-1-rule","QueryBody":"SELECT ph.UserId, SUM(CASE WHEN ph.PostHistoryTypeId > 3 AND ph.PostHistoryTypeId < 7 \/* Edit types *\/ THEN 1 ELSE 0 END) AS NumEdits FROM PostHistory AS ph GROUP BY ph.UserId LIMIT 100","CreationDate":"2012-04-29 06:38:33","validated":false,"QueryBody_Original":"SELECT  TOP 100\n      ph.UserId\n    , SUM (\n        CASE    WHEN ph.PostHistoryTypeId > 3 AND ph.PostHistoryTypeId < 7  -- Edit types\n                THEN 1 \n                ELSE 0 \n        END\n    )\n    AS NumEdits\nFROM        \n    PostHistory ph\nGROUP BY\n    ph.UserId"},{"QuerySetId":68291,"Title":"Does every post have a post history?","Description":null,"QueryBody":"SELECT ph.PostHistoryTypeId, COUNT(p.Id) AS numPosts, COUNT(ph.PostId) AS NumHistEntries FROM Posts AS p LEFT JOIN PostHistory AS ph ON p.Id = ph.PostId OR ph.PostId IS NULL GROUP BY ph.PostHistoryTypeId","CreationDate":"2012-04-29 12:44:12","validated":false,"QueryBody_Original":"SELECT \n  ph.PostHistoryTypeId,\n  count (p.Id) AS numPosts,\n  count (ph.PostId) AS NumHistEntries\nFROM\n  Posts p\nLEFT JOIN\n  PostHistory ph\nON p.Id = ph.PostId OR ph.PostId IS NULL\n--WHERE ph.PostId IS NULL\nGROUP BY\n  ph.PostHistoryTypeId\n  ;\n  \n  \nSELECT\n  ph.PostHistoryTypeId,\n  count (p.Id) AS numPosts,\n  count (ph.PostId) AS NumHistEntries\nFROM\n  Posts p\nINNER JOIN\n  PostHistory ph\nON p.Id = ph.PostId \n--WHERE ph.PostId IS NULL\nGROUP BY\n  ph.PostHistoryTypeId"},{"QuerySetId":68303,"Title":"Find answers that are questions. :)","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", LENGTH(ph.Text) AS \"Body Length\", ph.Text FROM PostHistory AS ph JOIN Posts AS p ON ph.PostId = p.Id WHERE p.PostTypeId = 2 AND ph.PostHistoryTypeId = 2 AND ph.Text LIKE '%?' ORDER BY \"Body Length\" LIMIT 1000","CreationDate":"2012-04-29 18:20:08","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  ph.PostId AS [Post Link],\n  LEN(ph.Text) AS [Body Length],\n  ph.Text\nFROM PostHistory ph\nJOIN Posts p ON ph.PostId = p.Id\nWHERE\n  p.PostTypeId = 2 AND\n  ph.PostHistoryTypeId = 2 AND\n  ph.Text LIKE '%?'\nORDER BY [Body Length]"},{"QuerySetId":68325,"Title":"Non-closed questions with more than 30 answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE PostTypeId = 1 AND AnswerCount > 30 AND ClosedDate IS NULL ORDER BY CreationDate DESC","CreationDate":"2012-04-30 10:39:00","validated":false,"QueryBody_Original":"SELECT \n  Id as [Post Link],\n  CreationDate\nfrom Posts\nwhere\n  PostTypeId=1\n  and AnswerCount >30\n  and ClosedDate is null\norder by CreationDate desc"},{"QuerySetId":68343,"Title":"Users with the most self-accepts","Description":null,"QueryBody":"SELECT q.OwnerUserId AS \"User Link\", COUNT(*) AS \"Self Accepts\" FROM Posts AS q INNER JOIN Posts AS a ON a.Id = q.AcceptedAnswerId WHERE q.OwnerUserId = a.OwnerUserId GROUP BY q.OwnerUserId ORDER BY \"Self Accepts\" DESC LIMIT 500","CreationDate":"2012-04-30 16:25:01","validated":false,"QueryBody_Original":"SELECT  TOP 500 q.OwnerUserId AS [User Link],\n               COUNT(*)      AS [Self Accepts]\nFROM   Posts q\n       INNER JOIN Posts a\n         ON a.Id = q.AcceptedAnswerId\nWHERE  q.OwnerUserId = a.OwnerUserId\nGROUP  BY q.OwnerUserId\nORDER  BY [Self Accepts] DESC"},{"QuerySetId":69420,"Title":"Gold Objective-C Badge Ranking in New Zealand","Description":"This query retrieves all the gold objective-c badge users and ranks them according to their gold badge date received.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY b.Date), b.UserId, b.Date AS DateReceived, u.DisplayName FROM Users AS u, Badges AS b WHERE b.name = 'swift' AND b.class = 3 AND u.Id = b.UserId GROUP BY b.Date, b.UserId, u.DisplayName","CreationDate":"2016-02-14 09:39:04","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY b.Date ASC), b.UserId, b.Date DateReceived, u.DisplayName\nFROM Users u, Badges b\nWHERE b.name='swift' and b.class=3\nand u.Id=b.UserId\nGROUP BY b.Date, b.UserId, u.DisplayName"},{"QuerySetId":69458,"Title":"cte  - finding for each child - its top parent.","Description":null,"QueryBody":"SELECT 'Hello'","CreationDate":"2013-11-19 19:36:57","validated":false,"QueryBody_Original":"SELECT  'Hello'"},{"QuerySetId":69486,"Title":"Questions by users with accounts that are 2 days or less","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE) AS Date, SUM(CASE WHEN u.CreationDate > p.CreationDate - 2 THEN 1 ELSE 0 END) \/ (COUNT(*) + 0.0) AS \"Ratio\" FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE PostTypeId = 1 GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE)","CreationDate":"2020-05-15 06:35:15","validated":false,"QueryBody_Original":"SELECT  \ncast(p.CreationDate as Date) Date,\nsum(case when u.CreationDate > p.CreationDate - 2 then 1 else 0 end)\n\/ (count(*) + 0.0) [Ratio]\nfrom Posts p\njoin Users u on u.Id = p.OwnerUserId\nwhere PostTypeId = 1\ngroup by cast(p.CreationDate as Date)\norder by cast(p.CreationDate as Date) asc"},{"QuerySetId":69658,"Title":"questions about JSL protocol APIs","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1","CreationDate":"2012-05-10 02:56:10","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts Where PostTypeId=1"},{"QuerySetId":69671,"Title":"Questions about resource with score > 1","Description":null,"QueryBody":"SELECT '##resource##' AS API, * FROM Posts WHERE PostTypeId = 1 AND Score > 0 AND Body LIKE '%##resource##%'","CreationDate":"2012-05-10 08:51:07","validated":false,"QueryBody_Original":"SELECT  '##resource##' as API, * \nFROM Posts \nWHERE PostTypeId = 1 AND \nScore > 0 AND\nBody LIKE '%##resource##%'"},{"QuerySetId":69760,"Title":"\"Accept Rate\" Comment (with comment text)","Description":"Comments with the phrase \"accept rate\".","QueryBody":"SELECT PostID AS \"Post Link\", CreationDate, Score, Text FROM Comments WHERE Score > 2 ORDER BY CreationDate DESC","CreationDate":"2018-09-27 23:31:10","validated":false,"QueryBody_Original":"SELECT  PostID [Post Link], CreationDate, Score, Text\nFROM Comments\nWHERE Score > 2\nORDER BY CreationDate Desc"},{"QuerySetId":69772,"Title":"PostTypeId of C++ Tag Wiki and Excerpt","Description":null,"QueryBody":"SELECT 'Tag Wiki', PostTypeId FROM Posts WHERE Id = 3606997 UNION ALL SELECT 'Excerpt', PostTypeId FROM Posts WHERE Id = 3624963","CreationDate":"2012-05-11 00:48:58","validated":false,"QueryBody_Original":"SELECT  'Tag Wiki', PostTypeId FROM Posts WHERE Id = 3606997\nUNION ALL SELECT 'Excerpt', PostTypeId FROM Posts WHERE Id = 3624963"},{"QuerySetId":69806,"Title":"Top Users from Pakistan ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' ORDER BY id","CreationDate":"2014-03-02 01:30:43","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\nORDER BY\n    id;"},{"QuerySetId":70371,"Title":"Active Users Between 18 and 60","Description":null,"QueryBody":"SELECT * FROM Users WHERE Age BETWEEN 18 AND 60 AND DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) < 60 AND NOT Location IS NULL","CreationDate":"2012-05-16 09:27:23","validated":false,"QueryBody_Original":"SELECT  *\nfrom Users\nwhere Age BETWEEN 18 and 60 AND\nDATEDIFF(day,LastAccessDate, GETDATE()) < 60 AND\nLocation is NOT NULL;"},{"QuerySetId":70416,"Title":"Popular with everyone but the OP","Description":"Answers that earn >67% of the total score for a question's answers, but lost out to another answer for acceptance.","QueryBody":"SELECT UnluckyAnswer.OwnerUserId AS \"User Link\", Question.Id AS \"Post Link\", UnluckyAnswer.Score AS \"Ignored Score\" FROM Posts AS UnluckyAnswer, Posts AS Question WHERE Question.Id = UnluckyAnswer.ParentId AND Question.PostTypeId = 1 AND NOT Question.AcceptedAnswerId IS NULL AND Question.AcceptedAnswerId <> UnluckyAnswer.Id AND Question.AnswerCount >= 2 AND UnluckyAnswer.Score > 5 AND UnluckyAnswer.Score > (SELECT 0.67 * SUM(AllAnswers.score) FROM Posts AS AllAnswers WHERE Question.Id = AllAnswers.ParentId) ORDER BY UnluckyAnswer.Score DESC","CreationDate":"2012-05-16 19:58:55","validated":false,"QueryBody_Original":"SELECT  UnluckyAnswer.OwnerUserId as [User Link], Question.Id as [Post Link], UnluckyAnswer.Score as [Ignored Score]\nfrom Posts as UnluckyAnswer, Posts as Question\nwhere \n\tQuestion.Id = UnluckyAnswer.ParentId\n\tand Question.PostTypeId = 1\n\tand Question.AcceptedAnswerId is not NULL\n\tand Question.AcceptedAnswerId != UnluckyAnswer.Id\n\tand Question.AnswerCount >= 2\n\tand UnluckyAnswer.Score > 5\n\tand UnluckyAnswer.Score > (\n\t    SELECT 0.67 * SUM(AllAnswers.score)\n\t\tfrom Posts as AllAnswers\n\t\twhere Question.Id = AllAnswers.ParentId\n\t\t)\norder by UnluckyAnswer.Score desc"},{"QuerySetId":70419,"Title":"Post migrations by destination, volume.","Description":"Where posts are being migrated, and how many posts have been migrated to each destination site.","QueryBody":"SELECT SUBSTRING(Comment, 11, STR_POSITION(Comment, '.') - 11) AS \"Destination Site\", COUNT(*) AS \"Number of Migrations\" FROM PostHistory WHERE PostHistoryTypeId = 35 GROUP BY SUBSTRING(Comment, 11, STR_POSITION(Comment, '.') - 11) ORDER BY COUNT(*) DESC","CreationDate":"2012-05-16 20:06:31","validated":false,"QueryBody_Original":"SELECT  \n  SUBSTRING(Comment,11,CHARINDEX('.', Comment)-11) AS [Destination Site],\n  COUNT(*) AS [Number of Migrations]\nFROM PostHistory\nWHERE \n  PostHistoryTypeId = 35\nGROUP BY \n  SUBSTRING(Comment,11,CHARINDEX('.', Comment)-11)\nORDER BY \n  COUNT(*) DESC"},{"QuerySetId":70438,"Title":"There's Just No Pleasing Some People","Description":"Top 100 most highly upvoted posts that still earnt a downvote from a contrarian.","QueryBody":"SELECT SUM(CASE WHEN Votes.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN Votes.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, Votes.PostId AS \"Post Link\" FROM Votes GROUP BY Votes.PostId HAVING SUM(CASE WHEN Votes.VoteTypeId = 3 THEN 1 ELSE 0 END) > 1","CreationDate":"2012-05-16 20:55:41","validated":false,"QueryBody_Original":"SELECT  \nSUM(CASE WHEN Votes.VoteTypeId = 2 THEN 1 ELSE 0 END) as UpVotes, \n  SUM(CASE WHEN Votes.VoteTypeId = 3 THEN 1 ELSE 0 END) as DownVotes,\n  Votes.PostId as [Post Link]\nFROM Votes\nGROUP BY Votes.PostId\nHAVING SUM(CASE WHEN Votes.VoteTypeId = 3 THEN 1 ELSE 0 END) > 1"},{"QuerySetId":70534,"Title":"Voting Comparisons arranged by Day of the Week","Description":"Show ratio of up votes to down votes and average votes per post for both questions and answers arranged according to the day of the week.\r\n","QueryBody":"SELECT TIME_TO_STR(p.CreationDate, 'WEEKDA%Y') AS Day, CASE WHEN PostTypeId = 1 THEN 'Questions' ELSE 'Answers' END AS \"Post Type\", COUNT(*) AS \"Post Count\", SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS \"Up Votes\", SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS \"Down Votes\" FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id GROUP BY PostTypeId, TIME_TO_STR(p.CreationDate, 'WEEKDA%Y'), TIME_TO_STR(p.CreationDate, 'WEEKDA%Y') ORDER BY TIME_TO_STR(p.CreationDate, 'WEEKDA%Y'), PostTypeId","CreationDate":"2012-06-12 19:16:29","validated":false,"QueryBody_Original":"SELECT \n    DATENAME(WEEKDAY, p.CreationDate) AS Day,\n    CASE WHEN PostTypeId = 1 THEN 'Questions' ELSE 'Answers' END As [Post Type],\n    Count(*) AS [Post Count],\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS [Up Votes],\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS [Down Votes]\n\nFROM\n    Votes v JOIN Posts p ON v.PostId=p.Id\nGROUP BY\n    PostTypeId, DATEPART(WEEKDAY, p.CreationDate), DATENAME(WEEKDAY, p.CreationDate)\nORDER BY\n    DATEPART(WEEKDAY, p.CreationDate), PostTypeId"},{"QuerySetId":70544,"Title":"Questions containing a word not present in the tags","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", title, tags FROM posts WHERE UPPER(Body) LIKE UPPER('%##Target##%') AND NOT UPPER(Tags) LIKE UPPER('%##Target##%')","CreationDate":"2012-05-18 04:45:15","validated":false,"QueryBody_Original":"SELECT  \n  Id as [Post Link], \n  title, \n  tags \nFROM \n  posts \nWHERE \n  Upper(Body) like Upper('%##Target##%')\n  AND NOT Upper(Tags) like Upper('%##Target##%')"},{"QuerySetId":70835,"Title":"Be Nicer to new users dups","Description":null,"QueryBody":"SELECT DISTINCT p.Id AS \"Post Link\" FROM posts AS p INNER JOIN postHistory AS ph ON p.id = ph.postid WHERE p.PostTypeId = 1 AND ph.PostHistoryTypeId = 10 AND p.body LIKE '%http:\/\/meta.stackoverflow.com\/questions\/9953%' ORDER BY p.id DESC","CreationDate":"2012-05-22 01:13:05","validated":false,"QueryBody_Original":"SELECT  DISTINCT p.Id [Post Link] \nFROM   posts p \n       INNER JOIN postHistory ph \n         ON p.id = ph.postid \nWHERE  p.PostTypeId = 1 \n       AND ph.PostHistoryTypeId = 10 \n       AND p.body LIKE '%http:\/\/meta.stackoverflow.com\/questions\/9953%' \nORDER BY \n    p.id desc"},{"QuerySetId":70897,"Title":"What are the most viewed profiles?","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Views, Reputation FROM Users WHERE Views > 6000 ORDER BY Views DESC","CreationDate":"2016-11-09 20:03:25","validated":false,"QueryBody_Original":"SELECT \n    Id AS [User Link], \n    Views,\n    Reputation\nFROM\n    Users\nWHERE\n    Views > 6000\nORDER BY Views DESC"},{"QuerySetId":70998,"Title":"List Of Users of Venezuela Order By Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%enezuela%' OR UPPER(Location) LIKE 'VE') AND NOT WebsiteUrl IS NULL ORDER BY Reputation DESC","CreationDate":"2014-08-23 03:00:52","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%enezuela%'\n    OR UPPER(Location) LIKE 'VE')\n    AND WebsiteUrl is not null\nORDER BY\n    Reputation DESC;"},{"QuerySetId":71046,"Title":"What new users (spurred by migration) went on to do...","Description":null,"QueryBody":"SELECT * FROM dbo.Posts WHERE NOT CommunityOwnedDate IS NULL LIMIT 10","CreationDate":"2012-05-24 18:32:41","validated":false,"QueryBody_Original":"SELECT  TOP 10 * FROM dbo.Posts WHERE CommunityOwnedDate IS NOT NULL"},{"QuerySetId":71165,"Title":"Highest view rate questions (non-Community Wiki). [5]","Description":"Highest hitrate non-CW questions, (presumably) what questions are viewed the most per time unit from Google searches.\r\n","QueryBody":"SELECT p.Id AS \"Post Link\", p.Id AS \"Post ID\", Score AS \"Votes\", ViewCount AS \"Views\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS \"Age (days)\", p.ViewCount \/ (DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate)) AS \"View rate\" FROM Posts AS p\/* On Stack Overflow there are 100 non-CW post with more than about 28000. *\/  WHERE p.ViewCount > 100 AND p.ViewCount \/ (DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate)) > 50 ORDER BY \"View Rate\" DESC LIMIT 100","CreationDate":"2017-07-21 10:05:26","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    p.Id as [Post Link],\n    p.Id as [Post ID],\n    Score as [Votes],\n    ViewCount as [Views],\n    DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP) as [Age (days)],\n    p.ViewCount \/ (DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP)) as [View rate]\nFROM Posts p\nWHERE p.ViewCount > 100 AND --On Stack Overflow there are 100 non-CW post with more than about 28000.\n      p.ViewCount \/ (DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP)) > 50\n      -- ViewCount \/ age >\nORDER BY [View Rate] DESC"},{"QuerySetId":71258,"Title":"  The Google             Adsense Revenue: Started!   ","Description":null,"QueryBody":"SELECT * FROM POsts","CreationDate":"2012-05-28 15:32:15","validated":false,"QueryBody_Original":"SELECT  * from POsts;"},{"QuerySetId":71283,"Title":"Users in or near Austin, Texas, by Reputation","Description":null,"QueryBody":"SELECT Id \/* Count(*) AS CommentCount -- *\/, DisplayName, Reputation, WebsiteUrl FROM Users WHERE Location LIKE '%Austin%' OR Location LIKE '%Texas%' ORDER BY Reputation DESC","CreationDate":"2012-05-28 22:09:12","validated":false,"QueryBody_Original":"SELECT  \n    -- Count(*) AS CommentCount --\n    Id,\n    DisplayName,\n    Reputation,\n    WebsiteUrl\nFROM \n    Users\nWHERE \n    Location like '%Austin%' or Location like '%Texas%'\nORDER BY\n    Reputation DESC\n-- ORDER BY --\n    -- DisplayName DESC --\n-- Enter Query Description"},{"QuerySetId":71353,"Title":"Absolute and relative links to posts","Description":null,"QueryBody":"SELECT 'Absolute links to posts:', COUNT(*) FROM Posts WHERE (Body LIKE '%<a href=\"http:\/\/stackoverflow.com\/questions\/%' OR Body LIKE '%<a href=\"http:\/\/stackoverflow.com\/[qa]\/%') AND LastEditDate BETWEEN DATEADD(mm, -12, GETDATE()) AND DATEADD(mm, -9, GETDATE()) UNION ALL SELECT 'Relative links to posts:', COUNT(*) FROM Posts WHERE (Body LIKE '%<a href=\"\/questions\/%' OR Body LIKE '%<a href=\"\/[qa]\/%') AND CreationDate BETWEEN DATEADD(mm, -12, GETDATE()) AND DATEADD(mm, -9, GETDATE())","CreationDate":"2012-07-05 20:13:18","validated":false,"QueryBody_Original":"SELECT  'Absolute links to posts:', COUNT(*) FROM Posts\nWHERE (Body LIKE '%<a href=\"http:\/\/stackoverflow.com\/questions\/%'\nOR    Body LIKE '%<a href=\"http:\/\/stackoverflow.com\/[qa]\/%')\nAND LastEditDate Between DateAdd(mm, -12, getdate()) And DateAdd(mm, -9, getdate())\n\nUNION ALL\n\nSELECT 'Relative links to posts:', COUNT(*) FROM Posts\nWHERE (Body LIKE '%<a href=\"\/questions\/%'\nOR    Body LIKE '%<a href=\"\/[qa]\/%')\nAND CreationDate BETWEEN DateAdd(mm, -12, getdate()) And DateAdd(mm, -9, getdate())"},{"QuerySetId":71354,"Title":"Unanswered and no status Bug Questions","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM Posts AS q WHERE answerCount = 0 AND PostTypeId = 1 AND tags LIKE '%bug%' AND NOT tags LIKE '%status%' AND DATEDIFF(CURRENT_TIMESTAMP(), creationDate) >= 1","CreationDate":"2012-05-29 22:22:18","validated":false,"QueryBody_Original":"SELECT  id [Post Link]\nFROM \nPosts q\nWHERE answerCount = 0 and PostTypeId = 1\nAND tags like '%bug%' and tags not like '%status%'\nAND DateDiff(y,creationDate,GETDATE()) >= 1"},{"QuerySetId":71401,"Title":"Stats on revisions counts per person","Description":null,"QueryBody":"SELECT AVG(AnswerRevisionCount) AS avg_AnswerRevisionCount, MAX(AnswerRevisionCount) AS max_AnswerRevisionCount, STDEV(AnswerRevisionCount) AS stdev_AnswerRevisionCount FROM (SELECT q.OwneruserID, CAST(COUNT(*) AS FLOAT(15, 5)) AS AnswerRevisionCount FROM posts AS q INNER JOIN Posts AS a ON q.id = a.ParentID LEFT JOIN PostHistory AS ph ON a.id = ph.PostId AND ph.PostHistoryTypeId = 5 \/* Edit Body *\/ WHERE NOT q.OwneruserID IS NULL GROUP BY q.OwneruserID) AS t","CreationDate":"2012-05-31 01:41:43","validated":false,"QueryBody_Original":"SELECT  \n  avg(AnswerRevisionCount) avg_AnswerRevisionCount,\n  Max(AnswerRevisionCount) max_AnswerRevisionCount,\n  stdev(AnswerRevisionCount) stdev_AnswerRevisionCount\nFROM \n  (SELECT \n      q.OwneruserID,\n      Cast(count(*) as decimal (15,5)) AnswerRevisionCount\n  FROM\n      posts q \n      INNER JOIN Posts a\n      ON q.id = a.ParentID\n      LEFT JOIN PostHistory ph\n      ON a.id = ph.PostId\n      and ph.PostHistoryTypeId = 5 -- Edit Body\n  WHERE q.OwneruserID is not null \n  GROUP BY\n     q.OwneruserID\n     ) t"},{"QuerySetId":71635,"Title":"Find users in a given location","Description":null,"QueryBody":"SELECT Id AS \"User Link\", location, reputation FROM users WHERE UPPER(location) LIKE UPPER('%##location##%') ORDER BY reputation DESC","CreationDate":"2012-06-03 11:24:14","validated":false,"QueryBody_Original":"SELECT   Id as [User Link], location, reputation from users where upper(location) like upper('%##location##%')\norder by reputation desc"},{"QuerySetId":71640,"Title":"Top 40 users from bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR UPPER(Location) LIKE '%bd' ORDER BY Reputation DESC LIMIT 40","CreationDate":"2020-09-22 19:33:32","validated":false,"QueryBody_Original":"SELECT  TOP 40\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR UPPER(Location) LIKE '%bd'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":71641,"Title":"Top 40 Users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IN' ORDER BY Reputation DESC LIMIT 40","CreationDate":"2012-06-03 17:38:00","validated":false,"QueryBody_Original":"SELECT  TOP 40\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":71736,"Title":"Top 10 user from Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IN' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2012-06-05 10:44:57","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":71821,"Title":"Average Score and Close count Percentage By Year, Month","Description":null,"QueryBody":"SELECT AVG(CAST(score AS FLOAT(10, 5))) AS Avg_Score, CAST(SUM(CASE WHEN NOT ClosedDate IS NULL THEN 1 ELSE 0 END) AS FLOAT(15, 5)) \/ CAST(COUNT(Id) AS FLOAT(15, 5)) AS CloseCountPercentage, MONTH(creationdate) AS month, YEAR(creationdate) AS year FROM posts AS p WHERE posttypeid = 1 GROUP BY MONTH(creationdate), YEAR(creationdate) ORDER BY YEAR(creationdate), MONTH(creationdate)","CreationDate":"2012-06-06 09:39:11","validated":false,"QueryBody_Original":"SELECT  Avg(CAST(score as decimal (10,5))) Avg_Score, \nCAST(SUM(CASE WHEN ClosedDate IS NOT NULL THEN 1 ELSE 0 END) as Decimal(15,5))\n\/CAST(Count(Id) as decimal(15,5)) CloseCountPercentage, \n       Month(creationdate) month, \n       Year(creationdate)  year \nFROM   posts p \nWHERE  posttypeid = 1 \nGROUP  BY Month(creationdate), \n          Year(creationdate) \nORDER  BY Year(creationdate), \n          Month(creationdate)"},{"QuerySetId":71824,"Title":"Top users of SO in India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IN' ORDER BY Reputation DESC","CreationDate":"2015-03-01 17:22:46","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":71842,"Title":"Shortest time when an accepted answer is posted","Description":"Number of days between the question is asked and the accepted answer is posted.","QueryBody":"SELECT * FROM posts AS q WHERE q.id = 23682919","CreationDate":"2014-05-16 21:41:05","validated":false,"QueryBody_Original":"SELECT  * from posts q\nwhere q.id = 23682919;"},{"QuerySetId":71911,"Title":"Find all deleted posts by a user","Description":null,"QueryBody":"SELECT p.tags, * FROM Posts AS p, PostHistory AS h WHERE h.PostId = p.Id AND PostHistoryTypeId = 12 ORDER BY h.CreationDate","CreationDate":"2019-12-12 19:44:45","validated":false,"QueryBody_Original":"SELECT  p.tags, * from Posts p,PostHistory h \nwhere h.PostId=p.Id and PostHistoryTypeId=12 \norder by h.CreationDate"},{"QuerySetId":72413,"Title":"Members by Age and Reputation, oldest first","Description":"StackOverflow members from oldest to youngest, by reputation over 1000.\r\n","QueryBody":"SELECT Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate, 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT) AS Url FROM Users WHERE NOT Age IS NULL AND Reputation > 1000 ORDER BY CreationDate DESC, Reputation DESC","CreationDate":"2014-12-02 10:56:40","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate,\n'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS VARCHAR) AS Url\nFROM Users\nWHERE Age IS NOT NULL AND Reputation > 1000\nORDER BY CreationDate DESC, Reputation DESC;"},{"QuerySetId":72459,"Title":"Members by Age oldest first","Description":"StackOverflow members from oldest to youngest, by reputation over 1000.\r\n","QueryBody":"SELECT Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate, 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT) AS Url FROM Users WHERE NOT Age IS NULL AND Reputation > 1 ORDER BY Age DESC, Reputation DESC LIMIT 1500","CreationDate":"2017-04-26 02:46:29","validated":false,"QueryBody_Original":"SELECT  TOP(1500) Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate,\n'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS VARCHAR) AS Url\nFROM Users\nWHERE Age IS NOT NULL AND Reputation > 1\nORDER BY Age DESC, Reputation DESC;"},{"QuerySetId":72501,"Title":"All suggested edits for a specific post","Description":null,"QueryBody":"SELECT * FROM Posts WHERE OwnerUserId = 927626","CreationDate":"2012-06-11 16:16:30","validated":false,"QueryBody_Original":"SELECT  *\nfrom Posts\nwhere OwnerUserId = 927626"},{"QuerySetId":72871,"Title":"Number of users for each location","Description":null,"QueryBody":"SELECT MAX(location) AS Location, COUNT(*) AS \"Number of Users\" FROM users GROUP BY location ORDER BY \"Number of Users\" DESC LIMIT 100","CreationDate":"2012-06-13 11:20:11","validated":false,"QueryBody_Original":"SELECT  top(100) max(location) as Location, count(*) as [Number of Users] from users\ngroup by location\norder by [Number of Users] desc"},{"QuerySetId":72886,"Title":"Lowest Voted Question With Highest Voted Answer","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\", Title FROM Posts WHERE (Score < -10) ORDER BY Score","CreationDate":"2012-11-30 20:15:47","validated":false,"QueryBody_Original":"SELECT  Score, Id as [Post Link], Title FROM Posts WHERE (Score < -10) ORDER BY Score ASC"},{"QuerySetId":72993,"Title":"maximum single-day reputation gain ever","Description":null,"QueryBody":"SELECT MAX(Rep) AS MaxRep, OwnerDisplayName, OwnerUserId, DateReputation FROM (SELECT SUM(Score) AS Rep, OwnerDisplayName, OwnerUserId, CAST(TIME_TO_STR(CreationDate, '%m\/%d\/%Y') AS TEXT(30)) AS DateReputation FROM Posts GROUP BY OwnerDisplayName, OwnerUserId, CAST(TIME_TO_STR(CreationDate, '%m\/%d\/%Y') AS TEXT(30))) AS a GROUP BY OwnerDisplayName, OwnerUserId, DateReputation ORDER BY MaxRep DESC LIMIT 50","CreationDate":"2018-01-16 00:31:54","validated":false,"QueryBody_Original":"SELECT  TOP 50 MAX(Rep) MaxRep, OwnerDisplayName, OwnerUserId, DateReputation\nFROM (\n    SELECT SUM(Score) Rep, OwnerDisplayName, OwnerUserId, convert(varchar, CreationDate, 101) DateReputation\n        FROM Posts\n        GROUP BY OwnerDisplayName, OwnerUserId, convert(varchar, CreationDate, 101)\n    ) a\nGROUP BY OwnerDisplayName, OwnerUserId, DateReputation\nORDER BY MaxRep DESC"},{"QuerySetId":72995,"Title":"short tag names that exist both with and without a final S","Description":null,"QueryBody":"SELECT t1.Count AS \"Count 1\", 'site:\/\/tags\/' + t1.TagName + '|' + t1.TagName AS \"Tag 1\", t2.Count AS \"Count 2\", 'site:\/\/tags\/' + t2.TagName + '|' + t2.TagName AS \"Tag 2\" FROM Tags AS t1, Tags AS t2 WHERE t2.TagName = t1.TagName + 's' AND LENGTH(t1.TagName) <= 3 ORDER BY CASE WHEN t2.Count > t1.Count THEN t2.Count ELSE t1.Count END DESC, CASE WHEN t2.Count > t1.Count THEN t1.Count ELSE t2.Count END DESC, t1.TagName","CreationDate":"2012-06-14 12:55:56","validated":false,"QueryBody_Original":"SELECT \n  t1.Count AS [Count 1],\n  'site:\/\/tags\/' + t1.TagName + '|' + t1.TagName AS [Tag 1],\n  t2.Count AS [Count 2],\n  'site:\/\/tags\/' + t2.TagName + '|' + t2.TagName AS [Tag 2]\nFROM Tags t1, Tags t2\nWHERE\n  t2.TagName = t1.TagName + 's' AND\n  Len(t1.TagName) <= 3\nORDER BY CASE WHEN t2.Count > t1.Count THEN t2.Count ELSE t1.Count END DESC,\n         CASE WHEN t2.Count > t1.Count THEN t1.Count ELSE t2.Count END DESC,\n         t1.TagName ASC"},{"QuerySetId":72996,"Title":"top 100 single-day rep gains ever","Description":null,"QueryBody":"SELECT MAX(Rep) AS MaxRep, OwnerDisplayName, OwnerUserId, dt FROM (SELECT SUM(Score) AS Rep, OwnerDisplayName, OwnerUserId, CAST(TIME_TO_STR(CreationDate, '%m\/%d\/%Y') AS TEXT(30)) AS dt FROM Posts GROUP BY OwnerDisplayName, OwnerUserId, CAST(TIME_TO_STR(CreationDate, '%m\/%d\/%Y') AS TEXT(30))) AS a GROUP BY OwnerDisplayName, OwnerUserId, dt ORDER BY MaxRep DESC LIMIT 100","CreationDate":"2012-06-14 13:02:47","validated":false,"QueryBody_Original":"SELECT  TOP 100 MAX(Rep) MaxRep, OwnerDisplayName, OwnerUserId, dt \nFROM (\n    SELECT SUM(Score) Rep, OwnerDisplayName, OwnerUserId, convert(varchar, CreationDate, 101) dt\n        FROM Posts\n        GROUP BY OwnerDisplayName, OwnerUserId, convert(varchar, CreationDate, 101)\n    ) a\nGROUP BY OwnerDisplayName, OwnerUserId, dt\nORDER BY MaxRep DESC"},{"QuerySetId":73118,"Title":"Find original questions (referenced posts of duplicates)","Description":null,"QueryBody":"SELECT * FROM PostHistory WHERE PostId = 244466","CreationDate":"2012-06-15 20:13:23","validated":false,"QueryBody_Original":"SELECT  * FROM PostHistory WHERE PostId = 244466"},{"QuerySetId":73148,"Title":"Top 100 posts by view count","Description":null,"QueryBody":"SELECT \"id\" AS \"Post Link\", ViewCount, creationdate, score FROM posts ORDER BY viewcount DESC LIMIT 100","CreationDate":"2012-06-16 03:30:02","validated":false,"QueryBody_Original":"SELECT  TOP 100 [id] [Post Link], ViewCount, creationdate, score From posts order by viewcount desc"},{"QuerySetId":73189,"Title":"tag names with strange punctuation","Description":null,"QueryBody":"SELECT 'site:\/\/tags\/' + TagName + '|' + TagName AS \"Tag\", Count, e.Body AS \"Excerpt\", w.Body AS \"Wiki\" FROM Tags LEFT JOIN Posts AS e ON e.Id = ExcerptPostId LEFT JOIN Posts AS w ON w.Id = WikiPostId WHERE (TagName LIKE '%[^#0-9a-z]' AND NOT TagName LIKE '%++') OR (TagName LIKE '[^.a-z]%' AND NOT TagName LIKE '[23]d' AND NOT TagName LIKE '[23]d-%') OR TagName LIKE '%[^+0-9a-z][^0-9a-z]%' OR TagName LIKE '%+[^+-0-9a-z]%' ORDER BY Count DESC","CreationDate":"2012-06-16 23:53:01","validated":false,"QueryBody_Original":"SELECT \n  'site:\/\/tags\/' + TagName + '|' + TagName AS [Tag],\n  Count,\n  e.Body AS [Excerpt],\n  w.Body AS [Wiki]\nFROM Tags\nLEFT JOIN Posts e ON e.Id = ExcerptPostId\nLEFT JOIN Posts w ON w.Id = WikiPostId\nWHERE (TagName LIKE '%[^#0-9a-z]' AND NOT TagName LIKE '%++')\n   OR (TagName LIKE '[^.a-z]%' AND NOT TagName LIKE '[23]d' AND NOT TagName LIKE '[23]d-%')\n   OR TagName LIKE '%[^+0-9a-z][^0-9a-z]%' OR TagName LIKE '%+[^+-0-9a-z]%'\nORDER BY Count DESC"},{"QuerySetId":73344,"Title":"Top 100 User from Pakistan ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2012-06-28 09:44:51","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK'\nORDER BY\n    Reputation DESC"},{"QuerySetId":73552,"Title":"Users  with top answers count","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, COUNT(p.Id) FROM Users AS u LEFT JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE p.PostTypeId = 2 GROUP BY u.Id, u.DisplayName ORDER BY COUNT(p.Id) DESC LIMIT 50","CreationDate":"2012-06-21 14:42:02","validated":false,"QueryBody_Original":"SELECT  TOP(50) u.Id, u.DisplayName, COUNT(p.Id)\nFROM Users u\nLEFT JOIN Posts p ON u.Id = p.OwnerUserId\nWHERE p.PostTypeId = 2\nGROUP BY u.Id, u.DisplayName\nORDER BY COUNT(p.Id) DESC;"},{"QuerySetId":73656,"Title":"Top 100 users by post","Description":null,"QueryBody":"SELECT OwnerUserID, COUNT(id) AS k FROM Posts AS p WHERE OwnerUserID > 0 GROUP BY OwnerUserID ORDER BY COUNT(id) DESC LIMIT 100","CreationDate":"2012-06-22 02:44:25","validated":false,"QueryBody_Original":"SELECT  TOP 100 OwnerUserID , count(id) k\nFROM Posts p\nWHERE OwnerUserID > 0\nGROUP BY OwnerUserID\nORDER BY count(id) desc"},{"QuerySetId":73753,"Title":"Posts tagged with [viewpager] but NOT [android]","Description":null,"QueryBody":"SELECT Posts.Id, Posts.Id AS \"Post Link\", Posts.Tags FROM Posts WHERE Posts.Tags LIKE 'fragment' AND NOT Posts.Tags LIKE 'android'","CreationDate":"2012-06-28 06:19:07","validated":false,"QueryBody_Original":"SELECT  Posts.Id, Posts.Id AS [Post Link], Posts.Tags\nFROM Posts\nWHERE Posts.Tags LIKE 'fragment'\n  AND Posts.Tags NOT LIKE 'android'"},{"QuerySetId":73801,"Title":"Top 20 user from Italy by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ital%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2012-08-23 00:10:37","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ital%'\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":73849,"Title":"Zero score posts vs non-zero score posts","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM Posts WHERE Score = 0) AS Zero_Votes, (SELECT COUNT(*) FROM Posts WHERE Score <> 0) AS NonZero_Votes","CreationDate":"2012-06-25 18:54:01","validated":false,"QueryBody_Original":"SELECT  \n(SELECT COUNT(*) FROM Posts Where Score = 0) Zero_Votes,\n(SELECT COUNT(*) FROM Posts Where Score <> 0) NonZero_Votes"},{"QuerySetId":73851,"Title":"Zero Score Questions Vs Non-Zero Score questions","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM Posts WHERE Score = 0 AND postTypeID = 1) AS Zero_Votes, (SELECT COUNT(*) FROM Posts WHERE Score <> 0 AND postTypeID = 1) AS NonZero_Votes","CreationDate":"2012-06-25 18:56:58","validated":false,"QueryBody_Original":"SELECT  \n(SELECT COUNT(*) FROM Posts Where Score = 0 and postTypeID = 1) Zero_Votes,\n(SELECT COUNT(*) FROM Posts Where Score <> 0 and postTypeID = 1) NonZero_Votes"},{"QuerySetId":73869,"Title":"Top 50000 Users by Reputation","Description":null,"QueryBody":"SELECT Users.Id, DisplayName, Reputation, COUNT(Posts.Id) AS Answers FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 GROUP BY Users.Id, DisplayName, Reputation ORDER BY Reputation DESC LIMIT 50000","CreationDate":"2012-07-04 04:57:15","validated":false,"QueryBody_Original":"SELECT  TOP 50000\n    Users.Id,\n    DisplayName,\n    Reputation,\n    Count(Posts.Id) AS Answers\nFROM Posts\n    INNER JOIN Users ON Users.Id = OwnerUserId\nWHERE PostTypeId = 2\nGROUP BY Users.Id, DisplayName, Reputation\nORDER BY Reputation DESC"},{"QuerySetId":73896,"Title":"active users by calendar year","Description":null,"QueryBody":"SELECT COUNT(UserId) AS usercount, period FROM (SELECT UserId, YEAR(CreationDate) AS period FROM Comments UNION SELECT UserId, YEAR(CreationDate) AS period FROM PostHistory UNION SELECT OwnerUserId, YEAR(CreationDate) AS period FROM Posts) AS t GROUP BY period ORDER BY period","CreationDate":"2016-12-28 08:57:22","validated":false,"QueryBody_Original":"SELECT  Count(UserId) usercount, \n       period\n       \nFROM   (SELECT UserId, \n               Year(CreationDate)         period\n        FROM   Comments \n        UNION \n        SELECT UserId, \n               Year(CreationDate)         period \n        FROM   PostHistory\n        UNION \n        SELECT OwnerUserId, \n               Year(CreationDate)         period\n        FROM   Posts) t \nGROUP  BY period\n          \nORDER BY\n        period"},{"QuerySetId":73897,"Title":"Questions where a given tag was added as a suggested edit and later removed","Description":"Find posts where a given tag was added through a suggested edit and has now been removed.","QueryBody":"SELECT q.Id AS \"Post Link\", h.Text AS \"Edited Tags\", q.OwnerUserId AS \"User Link\", q.CreationDate AS \"Post Date\", h.UserId AS \"User Link\", h.CreationDate AS \"Edit Date\" FROM PostHistory AS h, Posts AS q WHERE h.PostId = q.Id AND h.PostHistoryTypeId = 6 \/* tag edit *\/ AND h.Text LIKE '%<' + '##Tag##' + '>%' AND h.UserId <> q.OwnerUserId AND NOT EXISTS(SELECT Id FROM PostHistory AS g WHERE g.PostId = h.PostId AND (g.PostHistoryTypeId = 3 OR g.PostHistoryTypeId = 6) AND g.CreationDate < h.CreationDate AND g.Text LIKE '%<' + '##Tag##' + '>%') AND NOT q.Tags LIKE '%<' + '##Tag##' + '>%' LIMIT 100","CreationDate":"2012-06-26 23:56:16","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  q.Id AS [Post Link],\n  h.Text AS [Edited Tags],\n  q.OwnerUserId AS [User Link],\n  q.CreationDate AS [Post Date],\n  h.UserId AS [User Link],\n  h.CreationDate AS [Edit Date]\nFROM PostHistory h, Posts q\nWHERE h.PostId = q.Id\n  AND h.PostHistoryTypeId = 6 -- tag edit\n  AND h.Text LIKE '%<' + '##Tag##' + '>%'\n  AND h.UserId <> q.OwnerUserId\n  AND NOT EXISTS (SELECT Id FROM PostHistory g\n                  WHERE g.PostId = h.PostId\n                    AND (g.PostHistoryTypeId = 3 OR g.PostHistoryTypeId = 6)\n                    AND g.CreationDate < h.CreationDate\n                    AND g.Text LIKE '%<' + '##Tag##' + '>%')\n  AND q.Tags NOT LIKE '%<' + '##Tag##' + '>%'"},{"QuerySetId":74240,"Title":"Count of comments containing WHYT.com","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS P INNER JOIN Comments AS C ON P.Id = C.PostId WHERE P.CreationDate >= STR_TO_TIME('01\/01\/2012', '%d\/%m\/%Y') AND LOWER(C.Text) LIKE '%http:\/\/meta.stackoverflow.com\/questions\/128548\/what-stack-overflow-is-not%'","CreationDate":"2012-07-01 06:53:37","validated":false,"QueryBody_Original":"SELECT  Count(*) FROM Posts P\nINNER JOIN Comments C ON P.Id = C.PostId\nWHERE \nP.CreationDate >= convert(datetime, '01\/01\/2012', 103)  \nAND LOWER(C.Text) LIKE '%http:\/\/meta.stackoverflow.com\/questions\/128548\/what-stack-overflow-is-not%'"},{"QuerySetId":74290,"Title":"Question titles with the pattern \"<tag> :\"","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE title LIKE '%:%' AND CAST(tags AS TEXT(150)) LIKE '%<' + REPLACE(LOWER(SUBSTRING(title, 1, STR_POSITION(title, ':', 1) - 1)), ' ', '-') + '>%'","CreationDate":"2012-07-01 21:08:51","validated":false,"QueryBody_Original":"SELECT  count(*)\n  from posts\n where title like '%:%'\n   and  cast(tags as varchar(150))\n   like '%<' + replace(lower(substring(title,1,charindex(':', title,1)-1)),' ','-') + '>%'"},{"QuerySetId":74291,"Title":"Question titles with the pattern \"<tag> -\"","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE title LIKE '%-%' AND CAST(tags AS TEXT(150)) LIKE '%<' + REPLACE(RTRIM(LOWER(SUBSTRING(title, 1, STR_POSITION(title, '-', 1) - 1))), ' ', '-') + '>%'","CreationDate":"2012-07-01 21:08:59","validated":false,"QueryBody_Original":"SELECT  count(*)\n  from posts\n where title like '%-%'\n   and  cast(tags as varchar(150))\n   like '%<' + replace(rtrim(lower(substring(title,1,charindex('-', title,1)-1))),' ','-') + '>%'"},{"QuerySetId":74311,"Title":"Questions of a given user between two dates","Description":null,"QueryBody":"SELECT Posts.Id, Posts.Id AS \"Post Link\", Posts.CreationDate FROM Posts WHERE OwnerUserId = '##userid##' AND PostTypeId = 1 AND Posts.CreationDate >= '##Date1##' AND Posts.CreationDate <= '##Date2##' ORDER BY Posts.CreationDate","CreationDate":"2012-07-02 13:54:38","validated":false,"QueryBody_Original":"SELECT  Posts.Id, Posts.Id  AS [Post Link], Posts.CreationDate\nFROM Posts\nWHERE OwnerUserId='##userid##'\nAND PostTypeId=1\nAND Posts.CreationDate >= '##Date1##'\nAND Posts.CreationDate <= '##Date2##'\nORDER BY Posts.CreationDate"},{"QuerySetId":74420,"Title":"all posts you have edited with their date and activity information","Description":"Gets all posts you have edited and\r\n\r\n>Gets the difference in months, between when they were created and when they were last active.\r\n>Gets the difference in months, between when they were created and when they were **last edited**.\r\n\r\nThis could help you figure how close you are to Excavator and Archeologist ","QueryBody":"SELECT Id AS post_id, body FROM Posts WHERE DATEDIFF(CURRENT_TIMESTAMP(), LastActivityDate) > 6 LIMIT 100","CreationDate":"2012-07-03 05:38:30","validated":false,"QueryBody_Original":"SELECT  TOP 100\n Id as post_id\n ,body\nFROM \n Posts\nWHERE\n DATEDIFF(month,LastActivityDate,GETDATE()) > 6\n\n\n\/* As always I'm doing this as a learning exercise and some of my findings \nwere\n\nThe column alias cannot be referenced in the SELECT portion of the clause:\nhttp:\/\/stackoverflow.com\/questions\/6591183\/t-sql-column-alias-on-computed-column-invalid-column-name\n\n*\/"},{"QuerySetId":74662,"Title":"Finland users grouped by location","Description":null,"QueryBody":"SELECT Location, COUNT(*) AS amount FROM Users WHERE Location LIKE ('%Finland%') GROUP BY Location ORDER BY amount DESC","CreationDate":"2012-07-05 14:19:13","validated":false,"QueryBody_Original":"SELECT  Location, count(*) as amount \nfrom Users \nwhere Location like ('%Finland%') \ngroup by Location \norder by amount desc;"},{"QuerySetId":74664,"Title":"Top Finland Java Question writers","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, COUNT(*) AS JavaQuestions FROM Users AS u, Posts AS p WHERE u.Id IN (SELECT Id FROM Users WHERE Location LIKE ('%Finland')) AND p.OwnerUserId = u.Id AND p.Tags LIKE ('%<java>%') GROUP BY u.DisplayName, u.Reputation ORDER BY JavaQuestions DESC","CreationDate":"2012-07-05 14:43:07","validated":false,"QueryBody_Original":"SELECT  u.DisplayName, u.Reputation, count(*) as JavaQuestions from Users u, Posts p where u.Id in (\n    SELECT Id\n    from Users \n    where Location like ('%Finland')\n  )\n  and p.OwnerUserId = u.Id\n  and p.Tags like ('%<java>%')\n  group by u.DisplayName, u.Reputation\n  order by JavaQuestions desc"},{"QuerySetId":74680,"Title":"[WIP] Number of answers in a given week over time","Description":null,"QueryBody":"SELECT 'Six months ago', COUNT(*) FROM Posts WHERE PostTypeId = 2 \/* Answer *\/ AND CreationDate BETWEEN DATEADD('m', -6, GETDATE()) AND DATEADD('m', -6, DATEADD('w', -1, GETDATE())) UNION ALL SELECT 'Two years ago months ago', COUNT(*) FROM Posts WHERE PostTypeId = 2 \/* Answer *\/ AND CreationDate BETWEEN DATEADD('y', -2, GETDATE()) AND DATEADD('y', -2, DATEADD('w', -1, GETDATE()))","CreationDate":"2012-07-05 18:12:20","validated":false,"QueryBody_Original":"SELECT  'Six months ago', COUNT(*) FROM Posts\nWHERE PostTypeId = 2 -- Answer\nAND CreationDate Between DateAdd(\"m\", -6, getdate()) And DateAdd(\"m\", -6, DateAdd(\"w\", -1, getdate()))\n\nUNION ALL\n\nSELECT 'Two years ago months ago', COUNT(*) FROM Posts\nWHERE PostTypeId = 2 -- Answer\nAND CreationDate Between DateAdd(\"y\", -2, getdate()) And DateAdd(\"y\", -2, DateAdd(\"w\", -1, getdate()))"},{"QuerySetId":74873,"Title":"How much reputation are you getting from your past work?","Description":"Take the \"unexpected\" reputation coming from your answers from last month.\r\nSuppose now you constantly get those, and figure out how much rep per day you are getting for your past work without \"working for it\" on that given day","QueryBody":"SELECT Users.Id, usersAnswers.Answers, Users.Reputation, (Users.Reputation \/ UsersAnswers.Answers) AS Ratio FROM (SELECT U.id, COUNT(Posts.id) AS Answers FROM Posts, Users AS U WHERE Posts.OwnerUserId = U.id AND Posts.PostTypeId = 2 GROUP BY U.id) AS UsersAnswers, Users WHERE UsersAnswers.id = Users.Id ORDER BY Ratio DESC","CreationDate":"2013-02-08 07:28:12","validated":false,"QueryBody_Original":"SELECT  Users.Id, usersAnswers.Answers, Users.Reputation, (Users.Reputation \/ UsersAnswers.Answers) as Ratio FROM\n(\n     SELECT U.id, count(Posts.id) as Answers\n     From Posts, Users as U\n     Where \n          Posts.OwnerUserId = U.id and\n          Posts.PostTypeId = 2\n     Group by U.id\n) as UsersAnswers, Users\nWhere UsersAnswers.id = Users.Id\nOrder by Ratio desc"},{"QuerySetId":74880,"Title":"Questions + Answers (By Month)","Description":null,"QueryBody":"SELECT \"Month\", SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", PostTypeId FROM Posts AS p) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2012-07-08 04:01:08","validated":false,"QueryBody_Original":"SELECT  [Month], \n       SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) Questions,\n       SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) Answers\nFROM\n(\n    SELECT CAST(\n      CAST(DATEPART(YYYY, CreationDate) AS varchar) + '-' + CAST(DATEPART(MM, CreationDate) AS varchar) + '-01'\n    AS datetime) [Month], \n    PostTypeId\n     \n  FROM Posts p\n) AS X\nGROUP BY [Month]\nORDER BY [Month] ASC"},{"QuerySetId":74885,"Title":"Average Answers Per Question (By Month)","Description":null,"QueryBody":"SELECT \"Month\", CAST(SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) AS Answers, CAST(SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS FLOAT) AS Questions FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", PostTypeId FROM Posts AS p) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2017-11-19 17:48:37","validated":false,"QueryBody_Original":"SELECT  [Month],\n       CAST(SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) as Answers, CAST(SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS FLOAT) AS Questions\nFROM\n(\n    SELECT CAST(\n      CAST(DATEPART(YYYY, CreationDate) AS varchar) + '-' + CAST(DATEPART(MM, CreationDate) AS varchar) + '-01'\n    AS datetime) [Month], \n    PostTypeId\n     \n  FROM Posts p\n) AS X\nGROUP BY [Month]\nORDER BY [Month] ASC"},{"QuerySetId":74886,"Title":"Questions Per Tag (Top Five) (By Month)","Description":null,"QueryBody":"SELECT t.tagName FROM Tags AS t WHERE t.id IN (SELECT Id FROM Tags ORDER BY Count DESC LIMIT 5)","CreationDate":"2012-12-22 11:16:55","validated":false,"QueryBody_Original":"SELECT  \nt.tagName\nFrom Tags t\n\nwhere t.id IN (\n    SELECT TOP 5 Id FROM Tags \n    ORDER BY Count DESC\n  )\n\/*\n*, COUNT(*) AS Count FROM\n(\n  SELECT CAST(\n      CAST(DATEPART(YYYY, CreationDate) AS varchar) + '-' + CAST(DATEPART(MM, CreationDate) AS varchar) + '-01'\n    AS DATETIME) [Month], \n    t.TagName\n  FROM Posts p \n  JOIN PostTags pt ON pt.PostId = p.Id\n  JOIN Tags t ON t.Id = pt.TagId\n  WHERE TagId IN \n  (\n    SELECT TOP 5 Id FROM Tags \n    ORDER BY Count DESC\n  )\n) AS X\nWHERE [Month] >= CAST('2012-04-01' as datetime)\nAND [Month] < CAST('2012-07-01' as datetime)\nGROUP BY TagName, [Month]\nORDER BY [Month] ASC, TagName ASC\n*\/"},{"QuerySetId":74888,"Title":"Number Users Created (By Month)","Description":null,"QueryBody":"SELECT \"Month\", SUM(UserValue) AS Users FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", 1 AS UserValue FROM Users AS u) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2012-07-08 04:58:40","validated":false,"QueryBody_Original":"SELECT  [Month], \n       SUM(UserValue) Users\nFROM\n(\n    SELECT CAST(\n      CAST(DATEPART(YYYY, CreationDate) AS varchar) + '-' + CAST(DATEPART(MM, CreationDate) AS varchar) + '-01'\n    AS datetime) [Month], \n    1 AS UserValue\n     \n  FROM Users u\n) AS X\nGROUP BY [Month]\nORDER BY [Month] ASC"},{"QuerySetId":74892,"Title":"Find questions with close votes","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", COUNT(*) AS \"Occurrences\" FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId WHERE p.PostTypeId = 1 AND p.ClosedDate IS NULL AND v.VoteTypeId = 6 GROUP BY p.Id HAVING COUNT(*) >= 2 ORDER BY occurrences DESC","CreationDate":"2019-02-10 05:08:22","validated":false,"QueryBody_Original":"SELECT \n  p.Id as [Post Link], count(*) as [Occurrences]\nFROM\n    Posts p\n  INNER JOIN\n    Votes v\n  ON\n    p.Id = v.PostId\nWHERE\n  p.PostTypeId = 1\nAND\n  p.ClosedDate IS NULL\nAND\n  v.VoteTypeId = 6\nGROUP BY\n  p.Id\nHAVING\n  count(*) >= 2\nORDER BY occurrences DESC"},{"QuerySetId":75041,"Title":"Tag excerpts with possible incorrect grammar","Description":null,"QueryBody":"SELECT Tags.Id AS \"Tag Link\", Posts.Body FROM Tags INNER JOIN Posts ON Posts.Id = Tags.ExcerptPostId WHERE Posts.Body LIKE '%' + CHAR(10) + CHAR(10) + '%'","CreationDate":"2014-10-21 19:21:09","validated":false,"QueryBody_Original":"SELECT  Tags.Id [Tag Link], Posts.Body FROM Tags INNER JOIN Posts ON Posts.Id = Tags.ExcerptPostId WHERE Posts.Body LIKE '%'+char(10)+char(10)+'%';"},{"QuerySetId":75238,"Title":"Top 10 most revised Posts","Description":null,"QueryBody":"SELECT PostID AS \"Post Link\", COUNT(Id) AS RevisionCount FROM PostHistory AS ph WHERE PostHistoryTypeID IN (4, 5, 6, 7, 8, 9) GROUP BY PostID ORDER BY COUNT(Id) DESC LIMIT 10","CreationDate":"2012-07-12 18:47:00","validated":false,"QueryBody_Original":"SELECT  TOP 10\n  PostID [Post Link],\n  Count(Id) RevisionCount\nFROM \n  PostHistory ph\nWHERE \n  PostHistoryTypeID in \n  (4,5,6,7,8,9)\n\/*\n4  Edit Title               \n\n5  Edit Body                \n\n6  Edit Tags                \n\n7  Rollback Title           \n\n8  Rollback Body            \n\n9  Rollback Tags     \n*\/\nGROUP BY   \n  PostID \nORDER BY \n    Count(Id) desc"},{"QuerySetId":75274,"Title":"Query that selects unicorns with high legs but small cornsibutions.","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", u.Id AS \"User Link\", u.Reputation, LENGTH(p.Body) AS \"Length\" FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id ORDER BY u.Reputation \/ (LENGTH(p.Body) + 1) DESC LIMIT 1000","CreationDate":"2012-07-13 06:07:03","validated":false,"QueryBody_Original":"SELECT  TOP 1000 p.Id AS [Post Link], u.Id AS [User Link], u.Reputation, LEN(p.Body) AS [Length]\nFROM Posts p\nJOIN Users u ON p.OwnerUserId = u.Id\nORDER BY u.Reputation \/ (LEN(p.Body) + 1) DESC"},{"QuerySetId":75284,"Title":"Top 100 SO Users from Pakistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2012-07-13 11:56:14","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK'\nORDER BY\n    Reputation DESC"},{"QuerySetId":75435,"Title":"Latest LoL Contest - Asked vs Opened","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate > '2012-07-07 19:06:25' LIMIT 300","CreationDate":"2012-07-16 21:07:06","validated":false,"QueryBody_Original":"SELECT  TOP 300 * FROM Posts WHERE CreationDate > '2012-07-07 19:06:25'"},{"QuerySetId":75568,"Title":"Posts containing a very short body (Fixed)","Description":"Posts containing a body that is less than 25 chars long (ignore blanks)\r\n","QueryBody":"SELECT Id AS \"Post Link\", Body, Score FROM Posts WHERE NOT title IS NULL AND LENGTH(Body) BETWEEN 1 AND 25","CreationDate":"2012-07-17 23:29:22","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body, Score from Posts \nwhere title is not null and Len(Body) between 1 and 25"},{"QuerySetId":75854,"Title":"MADAGASCAR Serverfault - Top users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"Rank\", DisplayName AS \"Name\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE '%madagascar%' OR LOWER(Location) LIKE '%antananarivo%' OR LOWER(Location) LIKE '%antsiranana%' OR LOWER(Location) LIKE '%toamasina%' OR LOWER(Location) LIKE '%toliara%' OR LOWER(Location) LIKE '%mahajanga%' OR LOWER(Location) LIKE '%fianarantsoa%' OR LOWER(Location) LIKE '%antsirabe%' ORDER BY Reputation DESC","CreationDate":"2014-12-05 12:46:30","validated":false,"QueryBody_Original":"SELECT     \n  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [Rank],\n  DisplayName AS [Name],\n  Location,\n  Reputation\n\nFROM    \n  Users\n  \nWHERE    \n  LOWER(Location) LIKE '%madagascar%' OR   \n  LOWER(Location) like '%antananarivo%' OR\n  LOWER(Location) like '%antsiranana%' OR\n  LOWER(Location) like '%toamasina%' OR\n  LOWER(Location) like '%toliara%' OR\n  LOWER(Location) like '%mahajanga%' OR\n  LOWER(Location) like '%fianarantsoa%' OR\n  LOWER(Location) like '%antsirabe%'\n  \nORDER BY    Reputation DESC;"},{"QuerySetId":75855,"Title":"MADAGASCAR Stackoverflow - Top users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"Rank\", Id AS \"User Link\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE '%madagascar%' OR LOWER(Location) LIKE '%antananarivo%' OR LOWER(Location) LIKE '%antsiranana%' OR LOWER(Location) LIKE '%toamasina%' OR LOWER(Location) LIKE '%toliara%' OR LOWER(Location) LIKE '%mahajanga%' OR LOWER(Location) LIKE '%fianarantsoa%' OR LOWER(Location) LIKE '%antsirabe%' ORDER BY Reputation DESC","CreationDate":"2014-12-05 12:54:41","validated":false,"QueryBody_Original":"SELECT     \n  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [Rank],\n  Id AS [User Link],\n  Location,\n  Reputation\n\nFROM    \n  Users\n  \nWHERE    \n  LOWER(Location) like '%madagascar%' OR \n  LOWER(Location) like '%antananarivo%' OR\n  LOWER(Location) like '%antsiranana%' OR\n  LOWER(Location) like '%toamasina%' OR\n  LOWER(Location) like '%toliara%' OR\n  LOWER(Location) like '%mahajanga%' OR\n  LOWER(Location) like '%fianarantsoa%' OR\n  LOWER(Location) like '%antsirabe%' \n  \nORDER BY    Reputation DESC;"},{"QuerySetId":75956,"Title":"Number of question posted by users between two dates","Description":null,"QueryBody":"SELECT Posts.OwnerUserId, Posts.OwnerUserId AS \"User Link\", COUNT(DISTINCT Posts.Id) FROM Posts WHERE PostTypeId = 1 AND Posts.CreationDate >= '##Date1##' AND Posts.CreationDate <= '##Date2##' GROUP BY OwnerUserId ORDER BY COUNT(DISTINCT Posts.Id) DESC","CreationDate":"2012-07-25 18:23:07","validated":false,"QueryBody_Original":"SELECT  Posts.OwnerUserId, Posts.OwnerUserId  AS [User Link], count(distinct Posts.Id)\nFROM Posts\nWHERE PostTypeId=1\nAND Posts.CreationDate >= '##Date1##'\nAND Posts.CreationDate <= '##Date2##'\nGROUP BY OwnerUserId\nORDER BY count(distinct Posts.Id) DESC"},{"QuerySetId":75957,"Title":"Number of question posted by users in a given day","Description":null,"QueryBody":"SELECT Posts.OwnerUserId, Posts.OwnerUserId AS \"User Link\", COUNT(DISTINCT Posts.Id) FROM Posts WHERE PostTypeId = 1 AND CAST(TIME_TO_STR(Posts.CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(10)) = '##Date##' GROUP BY OwnerUserId ORDER BY COUNT(DISTINCT Posts.Id) DESC","CreationDate":"2012-07-25 18:37:06","validated":false,"QueryBody_Original":"SELECT  Posts.OwnerUserId, Posts.OwnerUserId  AS [User Link], count(distinct Posts.Id)\nFROM Posts\nWHERE PostTypeId=1\nAND CONVERT(VARCHAR(10),Posts.CreationDate,120) = '##Date##'\nGROUP BY OwnerUserId\nORDER BY count(distinct Posts.Id) DESC"},{"QuerySetId":76034,"Title":"Posts with possible code formatting issues","Description":"Finds posts containing a line feed followed by `}<\/p>`.\r\n\r\nThis is usually a telltale sign of improperly formatted code in posts.\r\n\r\nThanks to Arjan for helping with this query on Meta Stack Overflow:\r\n\r\nhttp:\/\/meta.stackoverflow.com\/questions\/110706\/is-there-a-way-to-prevent-data-explorer-from-ignoring-whitespace-in-query-parame\/110743#110743\r\n","QueryBody":"SELECT id AS \"Post Link\", creationdate FROM posts WHERE Body LIKE '%' + CHAR(10) + '    %' AND NOT Body LIKE '%<pre>%' ORDER BY creationdate DESC","CreationDate":"2012-07-26 17:57:31","validated":false,"QueryBody_Original":"SELECT \nid as [Post Link], creationdate\n\nfrom posts\nwhere Body like '%' + char(10) + '    %'\nAND Body not like '%<pre>%'\nORDER BY creationdate DESC"},{"QuerySetId":76147,"Title":"Questions with high answer counts","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, ViewCount, Score, AnswerCount FROM Posts WHERE AnswerCount > 50 ORDER BY AnswerCount DESC LIMIT 50","CreationDate":"2012-07-29 00:58:03","validated":false,"QueryBody_Original":"SELECT  \n  TOP 50\n  Id as [Post Link],\n  Title,\n  ViewCount,\n  Score,\n  AnswerCount\nFROM Posts\nWHERE \n   AnswerCount > 50\nORDER BY \n   AnswerCount DESC"},{"QuerySetId":76204,"Title":"Which question has the most comments?","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts WHERE PostTypeId = 1 ORDER BY CommentCount DESC LIMIT 1","CreationDate":"2012-07-30 21:05:23","validated":false,"QueryBody_Original":"SELECT  TOP 1 Id as [Post Link], * FROM Posts WHERE PostTypeId = 1 ORDER BY CommentCount DESC"},{"QuerySetId":76315,"Title":"Top users in Tampere, Finland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%helsinki%' ORDER BY Reputation DESC","CreationDate":"2012-08-02 09:31:25","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%helsinki%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":76335,"Title":"A Users total Rep ON META if there was no reputation cap","Description":"How much rep would you have if there was no reputation cap\r\n","QueryBody":"SELECT Users.Id AS \"User Link\", (SELECT SUM(CASE WHEN VoteTypeId = 1 THEN 15 \/* Accepted answer. *\/ WHEN VoteTypeId = 2 AND PostTypeId = 1 THEN 5 \/* Upvoted question *\/ WHEN VoteTypeId = 2 AND PostTypeId = 2 THEN 10 \/* Upvoted answer. *\/ WHEN VoteTypeId = 3 THEN -2 \/* Downvote. *\/ WHEN VoteTypeId = 9 THEN COALESCE(BountyAmount, 100) WHEN VoteTypeID = 15 THEN 2 \/* Accepting answers *\/ WHEN VoteTypeID = 16 THEN 2 \/* Suggested edits *\/ END) FROM Votes INNER JOIN Posts ON Posts.Id = Votes.PostId WHERE Posts.OwnerUserId = Users.Id) AS Reputation FROM Users WHERE Reputation > 0 ORDER BY Reputation DESC","CreationDate":"2014-01-02 04:03:36","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link], (SELECT \n    SUM(CASE\n      WHEN VoteTypeId = 1 THEN 15 -- Accepted answer.\n      WHEN VoteTypeId = 2 AND PostTypeId = 1 THEN 5 -- Upvoted question\n      WHEN VoteTypeId = 2 AND PostTypeId = 2 THEN 10 -- Upvoted answer.\n      WHEN VoteTypeId = 3 THEN -2 -- Downvote.\n      WHEN VoteTypeId = 9 THEN isnull(BountyAmount,100) \n      WHEN VoteTypeID = 15 THEN 2 -- Accepting answers\n      WHEN VoteTypeID = 16 THEN 2 -- Suggested edits\n    END)\nFROM\n    Votes\n  INNER JOIN \n    Posts ON Posts.Id = Votes.PostId\nWHERE\n    Posts.OwnerUserId = Users.Id) as Reputation\nFROM Users\nWHERE Reputation > 0\nORDER BY Reputation DESC"},{"QuerySetId":76507,"Title":"List Of highest reputed programmer in Dhaka","Description":null,"QueryBody":"SELECT Reputation, DisplayName, WebsiteUrl, AboutMe, Location FROM Users WHERE Location LIKE '%Dhaka%' OR Location = 'Bangladesh' ORDER BY Reputation DESC","CreationDate":"2012-08-04 19:14:31","validated":false,"QueryBody_Original":"SELECT  Reputation,DisplayName,WebsiteUrl,AboutMe,Location from Users where Location like '%Dhaka%' or Location='Bangladesh' order by Reputation DESC;"},{"QuerySetId":76521,"Title":"Percentage of users with 10,000 and 20,000 reputation or more","Description":null,"QueryBody":"SELECT (((SELECT CAST(COUNT(*) AS FLOAT) FROM Users WHERE Reputation > 10000) \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM Users)) * 100) AS PercentageOver10k, (((SELECT CAST(COUNT(*) AS FLOAT) FROM Users WHERE Reputation > 30000) \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM Users)) * 100) AS PercentageOver20k","CreationDate":"2016-07-28 04:47:13","validated":false,"QueryBody_Original":"SELECT \n(\n((SELECT CAST(COUNT(*) AS decimal) FROM Users WHERE Reputation > 10000) \/\n(SELECT CAST(COUNT(*) AS decimal) FROM Users)) * 100\n) As PercentageOver10k,\n(\n((SELECT CAST(COUNT(*) AS decimal) FROM Users WHERE Reputation > 30000) \/\n(SELECT CAST(COUNT(*) AS decimal) FROM Users)) * 100\n) As PercentageOver20k"},{"QuerySetId":76694,"Title":"Top questions asked less than N weeks ago","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\", Tags, DATEDIFF(CURRENT_TIMESTAMP(), CreationDate), CreationDate, CURRENT_TIMESTAMP() FROM Posts WHERE 1 = 1 AND Score > 500 AND PostTypeId = 1 AND ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) < 100 ORDER BY Score DESC","CreationDate":"2012-08-08 23:50:03","validated":false,"QueryBody_Original":"SELECT  Score, Id as [Post Link], Tags, DATEDIFF(DAY, CreationDate, GetDate()), CreationDate, GetDate()\nfrom Posts \nwhere 1=1\n  and Score > 500 \n  and PostTypeId = 1 \n  and ClosedDate is null\n  and DATEDIFF(DAY, CreationDate, GetDate()) < 100\norder by Score desc"},{"QuerySetId":76831,"Title":"Closed questions tagged \"books\" with more than one tag.","Description":null,"QueryBody":"SELECT * FROM Posts AS p WHERE p.PostTypeId = 1 AND p.Tags LIKE '%<advice>%' AND p.OwnerUserId = 43372","CreationDate":"2012-12-21 08:08:11","validated":false,"QueryBody_Original":"SELECT \n*\nfrom\n  Posts as p\nwhere\n  p.PostTypeId = 1 and\n  p.Tags like '%<advice>%' and\n  p.OwnerUserId = 43372"},{"QuerySetId":76842,"Title":"Is anyone using multiple backticks?","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE Body LIKE '%```%'","CreationDate":"2020-11-18 01:50:47","validated":false,"QueryBody_Original":"SELECT  Body FROM Posts WHERE Body LIKE '%```%';"},{"QuerySetId":76848,"Title":"Histogram Time of Day of Contribution","Description":null,"QueryBody":"SELECT hour, COUNT(*) AS count FROM (SELECT TIME_TO_STR(ph.creationdate, '%I') AS hour FROM Users AS u JOIN posthistory AS ph ON ph.userid = u.id WHERE u.id = 64203) AS x GROUP BY hour ORDER BY hour","CreationDate":"2012-08-09 20:34:33","validated":false,"QueryBody_Original":"SELECT  hour, count(*) count from (SELECT datepart(hh,ph.creationdate) hour from Users u join posthistory ph on ph.userid = u.id where u.id = 64203) x group by hour order by hour asc"},{"QuerySetId":77351,"Title":"Questions with answers that score higher than the accepted answer","Description":null,"QueryBody":"SELECT COUNT(DISTINCT question.Id) AS \"Low score accepted\" FROM posts AS question INNER JOIN posts AS accepted ON question.AcceptedAnswerId = accepted.Id INNER JOIN posts AS higher ON question.Id = higher.ParentId WHERE higher.Score > accepted.Score","CreationDate":"2012-08-15 07:00:17","validated":false,"QueryBody_Original":"SELECT  count(distinct question.Id) as [Low score accepted]\nfrom posts as question\n     inner join\n     posts as accepted on question.AcceptedAnswerId = accepted.Id\n     inner join\n     posts as higher on question.Id = higher.ParentId\nwhere higher.Score > accepted.Score;"},{"QuerySetId":77468,"Title":"Reputation per day average from highest to lowest","Description":null,"QueryBody":"SELECT Id, DisplayName, DATEDIFF(CURRENT_TIMESTAMP(), CreationDate), Reputation FROM Users WHERE Id = 186134","CreationDate":"2015-10-24 03:27:43","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, DateDiff(dd, CreationDate, GetDate()), Reputation\nfrom Users where Id = 186134"},{"QuerySetId":77471,"Title":"Who has earned a specific badge the most times?","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS \"Badge Count\" FROM Badges WHERE Name = '##BadgeName##' GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2012-08-18 00:31:25","validated":false,"QueryBody_Original":"SELECT  TOP 100 UserId AS [User Link], COUNT(*) AS [Badge Count]\nFROM Badges\nWHERE Name = '##BadgeName##'\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":77529,"Title":"Who is answering their own questions?","Description":null,"QueryBody":"SELECT Question.Id, Question.OwnerDisplayName FROM Posts AS Question INNER JOIN Posts AS Answer ON (Answer.ParentId = Question.Id) INNER JOIN Users ON (Users.Id = Question.OwnerUserId)\/* Limit posts whilst testing *\/ \/* Sockpuppetted accounts won't have great rep *\/ \/* Sockpuppetted questions probably won't be that great anyway *\/ \/* The asker has answered their own question *\/  WHERE Question.PostTypeId = 1 AND Answer.PostTypeId = 2 AND Question.OwnerUserId = Answer.OwnerUserId AND Question.Score < 10 AND Users.Reputation < 1000 AND Question.Id < 5000 ORDER BY Question.CreationDate DESC","CreationDate":"2012-08-18 20:19:51","validated":false,"QueryBody_Original":"SELECT \n  Question.Id, Question.OwnerDisplayName\nFROM\n  Posts Question\nINNER JOIN Posts Answer ON (Answer.ParentId = Question.Id)\nINNER JOIN Users ON (Users.Id = Question.OwnerUserId)\nWHERE\n  Question.PostTypeId = 1\n  AND Answer.PostTypeId = 2\n  \/* The asker has answered their own question *\/\n  AND Question.OwnerUserId = Answer.OwnerUserId\n  \/* Sockpuppetted questions probably won't be that great anyway *\/\n  AND Question.Score < 10\n  \/* Sockpuppetted accounts won't have great rep *\/\n  AND Users.Reputation < 1000\n  \/* Limit posts whilst testing *\/\n  AND Question.Id < 5000\n\/* Most recent items probably won't be detected yet *\/\nORDER BY Question.CreationDate DESC"},{"QuerySetId":77567,"Title":"Unanswered or non-canon answered HP questions","Description":null,"QueryBody":"SELECT Posts.Title, TagName FROM Tags, Posts WHERE TagName LIKE 'Harry-Potter' LIMIT 50","CreationDate":"2012-08-19 03:51:00","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    Posts.Title, TagName\nFROM Tags,Posts\n\nWHERE \n    TagName LIKE 'Harry-Potter'"},{"QuerySetId":77573,"Title":"Total Characters Posted by User","Description":null,"QueryBody":"SELECT Posts.Title, LENGTH(Posts.body) FROM Users INNER JOIN Posts ON Posts.OwnerUserId = 24","CreationDate":"2014-04-13 08:50:51","validated":false,"QueryBody_Original":"SELECT  Posts.Title, LEN(Posts.body)\nFROM Users\n  INNER JOIN Posts ON Posts.OwnerUserId = 24"},{"QuerySetId":77590,"Title":"Your question is not welcome here!","Description":null,"QueryBody":"SELECT c.Id, c.PostId, c.Score, c.Text, c.UserId, 'https:\/\/askubuntu.com\/questions\/' + CAST(PostId AS TEXT(6)) AS \"Link\" FROM Comments AS c WHERE UPPER(Text) LIKE UPPER('%belongs on%') ORDER BY CreationDate","CreationDate":"2017-09-03 12:16:27","validated":false,"QueryBody_Original":"SELECT  c.Id, c.PostId, c.Score, c.Text, c.UserId, \n       'https:\/\/askubuntu.com\/questions\/' + cast(PostId as varchar(6)) AS 'Link'\nFROM Comments c\nWHERE upper(Text) like upper('%belongs on%') \nORDER BY CreationDate ASC"},{"QuerySetId":77612,"Title":"Posts which contains the [b+-tree] tag.","Description":null,"QueryBody":"SELECT * FROM Tags WHERE tagName LIKE '%+[^+]%' AND NOT tagName LIKE '%++%'","CreationDate":"2012-08-19 23:58:43","validated":false,"QueryBody_Original":"SELECT  * from Tags where tagName like '%+[^+]%' and tagName not like '%++%'"},{"QuerySetId":77751,"Title":"Tags that have a plus sign","Description":null,"QueryBody":"SELECT Id, TagName FROM Tags WHERE TagName LIKE '%+%'","CreationDate":"2012-08-22 17:08:41","validated":false,"QueryBody_Original":"SELECT  Id, TagName from Tags where TagName like '%+%'"},{"QuerySetId":77831,"Title":"Top 50 Users from Barcelona by Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%barcelona%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2012-08-23 12:44:10","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%barcelona%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":78040,"Title":"Users with reputation bigger then ","Description":null,"QueryBody":"SELECT COUNT(*) AS users FROM Users WHERE Users.Reputation >= 3000","CreationDate":"2012-08-25 12:25:35","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as users \nFROM Users \nWHERE Users.Reputation >= 3000;"},{"QuerySetId":78188,"Title":"# of Users visited last day","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) < 365","CreationDate":"2019-01-21 13:44:21","validated":false,"QueryBody_Original":"SELECT  count(*) FROM Users where datediff(day, LastAccessDate, CURRENT_TIMESTAMP)\n< 365"},{"QuerySetId":78218,"Title":" Users Reputation in Latin America","Description":"Shows reputation from Latin American users. Also shows location and a couple of additional South American countries.","QueryBody":"SELECT Reputation, DisplayName, Location FROM Users WHERE (Location LIKE '%France%') AND Reputation > 101 ORDER BY Reputation DESC","CreationDate":"2019-01-17 21:37:25","validated":false,"QueryBody_Original":"SELECT  Reputation, DisplayName, Location FROM Users WHERE (Location \nLIKE '%France%') AND Reputation > 101\nORDER BY Reputation DESC"},{"QuerySetId":78249,"Title":"Downvotes per question by day","Description":null,"QueryBody":"SELECT Posts.Id, Score, OwnerUserId, Title FROM Posts WHERE CreationDate BETWEEN '2012-06-20' AND '2012-06-21' AND PostTypeId = 1 ORDER BY Posts.Id","CreationDate":"2012-08-27 18:45:15","validated":false,"QueryBody_Original":"SELECT  Posts.Id, Score, OwnerUserId, Title\nFrom Posts\nWhere CreationDate Between '2012-06-20' And '2012-06-21'\nAnd PostTypeId = 1\nOrder By Posts.Id;\n\n--How many got downvotes?\nSELECT Posts.Id, Score, VoteTypeId, Count(VoteTypeId), OwnerUserId, Title From Posts\nInner Join Votes On Posts.Id = Votes.PostId\nWhere Posts.CreationDate Between '2012-06-20' And '2012-06-21'\nAnd PostTypeId = 1\nGroup By Posts.Id, Title, OwnerUserId, OwnerDisplayName, Score, VoteTypeId\nHaving VoteTypeId = 3\nOrder By Posts.Id, VoteTypeId;"},{"QuerySetId":78267,"Title":"Downvoted questions by day without other markers","Description":null,"QueryBody":"SELECT Posts.Id, Score, OwnerUserId, Title FROM Posts WHERE CreationDate BETWEEN '2012-06-24' AND '2012-06-30' AND PostTypeId = 1 ORDER BY Posts.Id","CreationDate":"2012-08-27 19:04:49","validated":false,"QueryBody_Original":"SELECT  Posts.Id, Score, OwnerUserId, Title\nFrom Posts\nWhere CreationDate Between '2012-06-24' And '2012-06-30'\nAnd PostTypeId = 1\nOrder By Posts.Id;\n\n--How many got downvotes?\nSELECT Posts.Id, Score, VoteTypeId, Count(VoteTypeId), OwnerUserId, Title From Posts\nInner Join Votes On Posts.Id = Votes.PostId\nWhere Posts.CreationDate Between '2012-06-24' And '2012-06-30'\nAnd PostTypeId = 1\nGroup By Posts.Id, Title, OwnerUserId, OwnerDisplayName, Score, VoteTypeId\nHaving VoteTypeId = 3\nOrder By Posts.Id, VoteTypeId;"},{"QuerySetId":78337,"Title":"Answers on Post 38210 What non-programming books should programmers read?","Description":"how long before I get tag badges?\r\n","QueryBody":"SELECT * FROM Posts WHERE Posts.ParentId = 38210 ORDER BY Posts.Score DESC","CreationDate":"2013-02-02 04:47:28","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE \n    Posts.ParentId = 38210\nORDER BY Posts.Score DESC"},{"QuerySetId":78338,"Title":"Answers for Post 234075 What is your best programmer joke?","Description":"how long before I get tag badges?\r\n","QueryBody":"SELECT * FROM Posts WHERE Posts.ParentId = 234075 ORDER BY Posts.Score DESC","CreationDate":"2013-02-02 04:44:58","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE \n    Posts.ParentId = 234075\nORDER BY Posts.Score DESC"},{"QuerySetId":78384,"Title":"Research Assistants with less than 1.5 k","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", u.reputation FROM users AS u INNER JOIN badges AS b ON u.id = b.UserId WHERE b.name = 'Research Assistant' AND u.reputation < 1500","CreationDate":"2012-08-28 20:34:09","validated":false,"QueryBody_Original":"SELECT  \n  u.id [User Link],\n  u.reputation\nFROM \n  users u\n  INNER JOIN badges b\n  ON u.id = b.UserId\nWHERE\n  b.name = 'Research Assistant'\n  and u.reputation < 1500"},{"QuerySetId":78397,"Title":"\"What have you tried?\" Comments","Description":null,"QueryBody":"SELECT COUNT(*) FROM Comments WHERE Text LIKE '%whathaveyoutried%' OR Text LIKE '%what have you tried%'","CreationDate":"2012-08-29 01:40:16","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Comments\nWHERE \n  Text LIKE '%whathaveyoutried%'\n  OR Text LIKE '%what have you tried%'"},{"QuerySetId":78542,"Title":"Language-agnostic questions for casperOne to clean up","Description":null,"QueryBody":"SELECT p.* FROM Posts AS p WHERE p.PostTypeId = 1 AND EXISTS(SELECT ph.* FROM PostHistory AS ph WHERE ph.PostId = p.Id AND ph.UserId = 50776) AND p.Tags LIKE '%<language-agnostic>%'","CreationDate":"2012-08-30 20:35:54","validated":false,"QueryBody_Original":"SELECT \n  p.*\nfrom\n  Posts as p\nwhere\n  p.PostTypeId = 1 and\n  exists (\n    SELECT \n      ph.* \n    from \n      PostHistory as ph \n    where \n      ph.PostId = p.Id and\n      ph.UserId = 50776\n  ) and\n  p.Tags like '%<language-agnostic>%'"},{"QuerySetId":78554,"Title":"Search for potential Link-Only answers","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE (Body LIKE '%http:\/\/%' OR BODY LIKE 'http:\/\/%' OR BODY LIKE 'https:\/\/%' OR BODY LIKE '%https:\/\/%') AND PostTypeId = 2 ORDER BY LENGTH(Body)","CreationDate":"2012-08-30 22:29:33","validated":false,"QueryBody_Original":"SELECT  Id FROM Posts WHERE (Body LIKE '%http:\/\/%' OR BODY LIKE 'http:\/\/%' OR  BODY LIKE 'https:\/\/%' OR  BODY LIKE '%https:\/\/%') AND PostTypeId=2\nORDER BY LEN(Body) ASC;"},{"QuerySetId":78555,"Title":"Average post score on all sites","Description":"Show the average score for questions and for answers on all Stack Exchange sites.","QueryBody":"SELECT AVG(CAST(Score AS FLOAT)) AS \"Posts\", AVG(CASE PostTypeID WHEN 1 THEN CAST(Score AS FLOAT) END) AS \"Questions\", AVG(CASE PostTypeID WHEN 2 THEN CAST(Score AS FLOAT) END) AS \"Answers\" FROM Posts WHERE (PostTypeId = 1 OR PostTypeId = 2)","CreationDate":"2012-08-30 22:35:46","validated":false,"QueryBody_Original":"SELECT \n  Avg(Cast(Score AS Float)) AS [Posts],\n  Avg(CASE PostTypeID WHEN 1 THEN Cast(Score AS Float) END) AS [Questions],\n  Avg(CASE PostTypeID WHEN 2 THEN Cast(Score AS Float) END) AS [Answers]\nFROM Posts\nWHERE (PostTypeId = 1 OR PostTypeId = 2)\n--GROUP BY ROLLUP(PostTypeId)"},{"QuerySetId":78561,"Title":"Average number of votes on all sites","Description":"For each site, show the average number of votes per post (questions and answers alike)","QueryBody":"SELECT COUNT(*) * 1.0 \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS \"Votes\", COUNT(CASE VoteTypeID WHEN 2 THEN 1 END) * 1.0 \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS \"Upvotes\", COUNT(CASE VoteTypeID WHEN 3 THEN 1 END) * 1.0 \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS \"Downvotes\" FROM Votes WHERE (VoteTypeId = 2 OR VoteTypeId = 3)","CreationDate":"2012-08-30 23:04:34","validated":false,"QueryBody_Original":"SELECT \n    Count(*) * 1.0 \/ (SELECT Count(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS [Votes],\n    Count(CASE VoteTypeID WHEN 2 THEN 1 END) * 1.0 \/ (SELECT Count(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS [Upvotes],\n    Count(CASE VoteTypeID WHEN 3 THEN 1 END) * 1.0 \/ (SELECT Count(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS [Downvotes]\n  FROM Votes\n  WHERE (VoteTypeId = 2 OR VoteTypeId = 3)"},{"QuerySetId":78563,"Title":"Average number of votes per post","Description":null,"QueryBody":"SELECT COUNT(*) * 1.0 \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS \"Votes\", COUNT(CASE VoteTypeID WHEN 2 THEN 1 END) * 1.0 \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS \"Upvotes\", COUNT(CASE VoteTypeID WHEN 3 THEN 1 END) * 1.0 \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS \"Downvotes\" FROM Votes WHERE (VoteTypeId = 2 OR VoteTypeId = 3)","CreationDate":"2012-08-30 23:17:27","validated":false,"QueryBody_Original":"SELECT \n    Count(*) * 1.0 \/ (SELECT Count(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS [Votes],\n    Count(CASE VoteTypeID WHEN 2 THEN 1 END) * 1.0 \/ (SELECT Count(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS [Upvotes],\n    Count(CASE VoteTypeID WHEN 3 THEN 1 END) * 1.0 \/ (SELECT Count(*) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2) AS [Downvotes]\n  FROM Votes\n  WHERE (VoteTypeId = 2 OR VoteTypeId = 3)"},{"QuerySetId":78824,"Title":"Question Score June 2012, with Vote Creation Date","Description":null,"QueryBody":"SELECT SUM(CASE Votes.VoteTypeId WHEN 2 THEN 1 ELSE 0 END) - SUM(CASE Votes.VoteTypeId WHEN 3 THEN 1 ELSE 0 END) AS score, Users.DisplayName FROM Posts INNER JOIN Users ON Users.ID = Posts.OwnerUserId INNER JOIN Votes ON Votes.PostId = Posts.Id WHERE PostTypeId = 1 AND Posts.CreationDate BETWEEN '2012-06-01' AND '2012-06-30' AND Votes.CreationDate BETWEEN '2012-06-01' AND '2012-06-30' GROUP BY Users.DisplayName ORDER BY score DESC","CreationDate":"2012-09-04 16:16:24","validated":false,"QueryBody_Original":"SELECT  SUM(CASE Votes.VoteTypeId WHEN 2 THEN 1 ELSE 0 END)\n    - SUM(CASE Votes.VoteTypeId WHEN 3 THEN 1 ELSE 0 END) score,\n    Users.DisplayName\n   FROM Posts\n   INNER JOIN Users ON Users.ID = Posts.OwnerUserId\n   INNER JOIN Votes ON Votes.PostId = Posts.Id\n   WHERE PostTypeId = 1\n   AND Posts.CreationDate BETWEEN '2012-06-01' AND '2012-06-30'\n   AND Votes.CreationDate BETWEEN '2012-06-01' AND '2012-06-30'\n   GROUP BY Users.DisplayName\n   ORDER BY score DESC"},{"QuerySetId":78907,"Title":"Slow and unwieldy post history","Description":"Slow intermediate learning query","QueryBody":"SELECT PostHistoryTypeId, PostId, CreationDate, UserId, Comment, Text FROM posthistory AS p WHERE PostHistoryTypeId IN (10, 12) AND creationdate > '2011-12-31'","CreationDate":"2012-09-05 01:56:25","validated":false,"QueryBody_Original":"SELECT  PostHistoryTypeId,\nPostId,\nCreationDate,\nUserId,\nComment,\nText from posthistory p\nwhere PostHistoryTypeId in (10,12)\nand  creationdate >'2011-12-31'"},{"QuerySetId":78909,"Title":"Most closed and deleted where the action is by one user","Description":"Post history of deleted and closed","QueryBody":"SELECT Text, COUNT(id) FROM posthistory WHERE PostHistoryTypeId IN (10, 12) AND creationdate > '2011-12-31' AND NOT text LIKE '%},{%' GROUP BY text HAVING COUNT(id) > 99 ORDER BY COUNT(id) DESC","CreationDate":"2012-09-05 01:54:53","validated":false,"QueryBody_Original":"SELECT  \nText, count(id) from posthistory \nwhere PostHistoryTypeId in (10,12)\nand  creationdate >'2011-12-31'\nand text not like '%},{%'\ngroup by text\nhaving count(id)>99\norder by count(id) desc"},{"QuerySetId":78945,"Title":"Amount of answers on the site","Description":null,"QueryBody":"SELECT COUNT(Id) FROM users","CreationDate":"2012-09-05 15:17:27","validated":false,"QueryBody_Original":"SELECT \ncount(Id)\nFROM users"},{"QuerySetId":78985,"Title":"StackOverflow users in Denver, CO ordered by reputation","Description":null,"QueryBody":"SELECT DisplayName, Reputation, Location FROM Users WHERE UPPER(Location) LIKE '%DENVER%' ORDER BY Reputation DESC","CreationDate":"2012-09-06 19:09:15","validated":false,"QueryBody_Original":"SELECT  DisplayName, Reputation, Location\nfrom Users\nwhere upper(Location) like '%DENVER%'\norder by Reputation desc"},{"QuerySetId":78997,"Title":"Number of edits per post","Description":"Distribution of the number of edits per post","QueryBody":"SELECT p.Id AS \"Id\", MIN(p.PostTypeId) AS \"PostTypeId\", COUNT(CASE ph.PostHistoryTypeId WHEN 4 THEN 1 END) AS \"TitleEditCount\", COUNT(CASE ph.PostHistoryTypeId WHEN 5 THEN 1 END) AS \"BodyEditCount\", COUNT(CASE ph.PostHistoryTypeId WHEN 6 THEN 1 END) AS \"RetagCount\", COUNT(*) AS \"EditCount\" FROM PostHistory AS ph, Posts AS p WHERE ph.PostId = p.Id AND (p.PostTypeId = 1) AND (ph.PostHistoryTypeId = 4 OR ph.PostHistoryTypeId = 5 OR ph.PostHistoryTypeId = 6) GROUP BY p.Id LIMIT 1000","CreationDate":"2012-09-25 16:36:30","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  p.Id AS [Id],\n  Min(p.PostTypeId) AS [PostTypeId],\n  Count(CASE ph.PostHistoryTypeId WHEN 4 THEN 1 END) AS [TitleEditCount],\n  Count(CASE ph.PostHistoryTypeId WHEN 5 THEN 1 END) AS [BodyEditCount],\n  Count(CASE ph.PostHistoryTypeId WHEN 6 THEN 1 END) AS [RetagCount],\n  Count(*) AS [EditCount]\nFROM PostHistory ph, Posts p\nWHERE ph.PostId = p.Id\n  AND (p.PostTypeId = 1)\n  AND (ph.PostHistoryTypeId = 4 OR ph.PostHistoryTypeId = 5 OR ph.PostHistoryTypeId = 6)\nGROUP BY p.Id"},{"QuerySetId":79025,"Title":"Closed and edited questions by month","Description":null,"QueryBody":"SELECT TIME_TO_STR(e.CreationDate, '%M') AS \"month\", TIME_TO_STR(e.CreationDate, '%Y') AS \"year\", COUNT(DISTINCT e.PostId) AS closes FROM PostHistory AS c JOIN PostHistory AS e ON e.PostId = c.PostId WHERE c.CreationDate < e.CreationDate AND c.PostHistoryTypeId = 10 \/* Close *\/ AND (e.PostHistoryTypeId = 4 OR e.PostHistoryTypeId = 5) \/* Edit *\/ GROUP BY TIME_TO_STR(e.CreationDate, '%M'), TIME_TO_STR(e.CreationDate, '%Y') ORDER BY TIME_TO_STR(e.CreationDate, '%Y'), TIME_TO_STR(e.CreationDate, '%M')","CreationDate":"2012-09-07 00:54:25","validated":false,"QueryBody_Original":"SELECT \n  datepart(mm, e.CreationDate) as [month]\n  ,datepart(yyyy, e.CreationDate) as [year]\n  ,count(distinct e.PostId) as closes\nfrom\n   PostHistory c\n   join PostHistory e on e.PostId=c.PostId\nwhere\n  c.CreationDate < e.CreationDate\n  and c.PostHistoryTypeId = 10  -- Close\n  and (e.PostHistoryTypeId = 4 or e.PostHistoryTypeId = 5) -- Edit\ngroup by\n  datepart(mm, e.CreationDate)\n  ,datepart(yyyy, e.CreationDate)\n order by \n  datepart(yyyy, e.CreationDate)\n  ,datepart(mm, e.CreationDate)"},{"QuerySetId":79031,"Title":"How many \"How many\" questions?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Title LIKE '%How many%'","CreationDate":"2012-09-07 01:41:12","validated":false,"QueryBody_Original":"SELECT  Count(*) from Posts\nWhere Title like '%How many%'"},{"QuerySetId":79177,"Title":"How many are eligible to DV?","Description":null,"QueryBody":"SELECT COUNT(*) FROM users WHERE Reputation >= 125","CreationDate":"2012-09-08 01:40:34","validated":false,"QueryBody_Original":"SELECT  count(*) from users\nwhere Reputation >=125"},{"QuerySetId":79208,"Title":"Questions which are story ID with an accepted answer","Description":null,"QueryBody":"SELECT ID AS \"Post Link\" FROM Posts WHERE Tags = 'story-identification'","CreationDate":"2012-09-08 04:36:29","validated":false,"QueryBody_Original":"SELECT  ID as [Post Link] from Posts\nWhere Tags = 'story-identification'"},{"QuerySetId":79336,"Title":"Members by Rep in Ireland ","Description":null,"QueryBody":"SELECT DisplayName, Reputation, Location FROM Users WHERE UPPER(Location) LIKE '%IRELAND%' ORDER BY Reputation DESC","CreationDate":"2012-09-09 02:00:48","validated":false,"QueryBody_Original":"SELECT  DisplayName, Reputation, Location\nfrom Users\nwhere upper(Location) like '%IRELAND%'\norder by Reputation desc"},{"QuerySetId":79343,"Title":"Number of posts a user got downvoted in a time span","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(*) AS Downvotes FROM (SELECT DISTINCT Votes.PostId FROM Votes WHERE Votes.CreationDate BETWEEN '2012-01-01' AND '2012-01-31' AND Votes.VoteTypeId = 3) AS Votes INNER JOIN Posts ON Votes.PostId = Posts.Id INNER JOIN Users ON Posts.OwnerUserId = Users.Id GROUP BY Users.Id ORDER BY Downvotes DESC","CreationDate":"2012-09-09 05:30:00","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link], COUNT(*) Downvotes\n   FROM (\n      SELECT DISTINCT Votes.PostId FROM Votes \n         WHERE Votes.CreationDate BETWEEN '2012-01-01' AND '2012-01-31'\n           AND Votes.VoteTypeId = 3\n   ) Votes\n   INNER JOIN Posts ON Votes.PostId = Posts.Id\n   INNER JOIN Users ON Posts.OwnerUserId = Users.Id\n   GROUP BY Users.Id\n   ORDER BY Downvotes DESC"},{"QuerySetId":79360,"Title":"Count of Posts Downvoted per Month","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", CAST(TIME_TO_STR(Votes.CreationDate, '%Y.%m.%d') AS TEXT(7)) AS LeMonth, COUNT(*) AS Downvotes FROM (SELECT DISTINCT Votes.PostId, Votes.CreationDate FROM Votes WHERE Votes.VoteTypeId = 3) AS Votes INNER JOIN Posts ON Votes.PostId = Posts.Id INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Users.DisplayName = '##username##' GROUP BY Users.Id, CAST(TIME_TO_STR(Votes.CreationDate, '%Y.%m.%d') AS TEXT(7)) ORDER BY LeMonth, Downvotes DESC","CreationDate":"2012-09-09 05:53:25","validated":false,"QueryBody_Original":"SELECT \n      Users.Id as [User Link],\n      CONVERT(char(7), Votes.CreationDate, 102) as LeMonth,\n      COUNT(*) Downvotes\n   FROM (\n      SELECT DISTINCT Votes.PostId, Votes.CreationDate FROM Votes \n         WHERE Votes.VoteTypeId = 3\n   ) Votes\n   INNER JOIN Posts ON Votes.PostId = Posts.Id\n   INNER JOIN Users ON Posts.OwnerUserId = Users.Id\n   WHERE Users.DisplayName = '##username##'\n   GROUP BY Users.Id, CONVERT(char(7), Votes.CreationDate, 102)\n   ORDER BY LeMonth, Downvotes DESC"},{"QuerySetId":79370,"Title":"Count of Downvotes on Your Posts per Month","Description":null,"QueryBody":"SELECT posts.owneruserid AS \"User Link\", CAST(TIME_TO_STR(Votes.CreationDate, '%Y.%m.%d') AS TEXT(7)) AS LeMonth, COUNT(*) AS Downvotes FROM Votes INNER JOIN Posts ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId = 3 AND posts.ownerUserID = '##userid##' GROUP BY posts.owneruserid, CAST(TIME_TO_STR(Votes.CreationDate, '%Y.%m.%d') AS TEXT(7)) ORDER BY LeMonth DESC, Downvotes DESC","CreationDate":"2012-09-09 20:03:15","validated":false,"QueryBody_Original":"SELECT \n      posts.owneruserid as [User Link],\n      CONVERT(char(7), Votes.CreationDate, 102) as LeMonth,\n      COUNT(*) Downvotes\nFROM Votes\n   INNER JOIN Posts ON Votes.PostId = Posts.Id\n   WHERE Votes.VoteTypeId = 3\n     AND posts.ownerUserID = '##userid##'\n   GROUP BY posts.owneruserid, CONVERT(char(7), Votes.CreationDate, 102)\n   ORDER BY LeMonth desc, Downvotes DESC"},{"QuerySetId":79397,"Title":"Top 10 Users from Iran by Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%iran%' OR UPPER(Location) LIKE '%IR' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2012-09-09 16:11:38","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%iran%'\n    OR UPPER(Location) LIKE '%IR'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":79413,"Title":"Users who have never interacted with the site","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u LEFT OUTER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE LastAccessDate < CURRENT_TIMESTAMP() - 365 AND upvotes = 0 AND downvotes = 0 AND p.Id IS NULL AND Reputation = 1","CreationDate":"2012-09-09 21:53:15","validated":false,"QueryBody_Original":"SELECT  count(*)\n  from Users u\n  left outer join Posts p\n    on u.Id = p.OwnerUserId\n where LastAccessDate < GETDATE() - 365\n   and upvotes = 0\n   and downvotes = 0\n   and p.Id is null\n   and Reputation = 1"},{"QuerySetId":79414,"Title":"Users potentially with spam in the \"About Me\"","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u LEFT OUTER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE LastAccessDate < CURRENT_TIMESTAMP() - 365 AND upvotes = 0 AND downvotes = 0 AND p.Id IS NULL AND Reputation = 1 AND LENGTH(LTRIM(WebsiteUrl)) > 1 AND LENGTH(LTRIM(AboutMe)) = 0","CreationDate":"2012-09-09 21:58:01","validated":false,"QueryBody_Original":"SELECT  count(*)\n  from Users u\n  left outer join Posts p\n    on u.Id = p.OwnerUserId\n where LastAccessDate < GETDATE() - 365\n   and upvotes = 0\n   and downvotes = 0\n   and p.Id is null\n   and Reputation = 1\n   and len(ltrim(WebsiteUrl)) > 1\n   and len(ltrim(AboutMe)) = 0"},{"QuerySetId":79423,"Title":"Users who've never interacted with the site and have only ever logged on once.","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u LEFT OUTER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE LastAccessDate < CURRENT_TIMESTAMP() - 365 AND upvotes = 0 AND downvotes = 0 AND p.Id IS NULL AND Reputation = 1","CreationDate":"2017-06-20 03:23:04","validated":false,"QueryBody_Original":"SELECT  count(*)\n  from Users u\n  left outer join Posts p\n    on u.Id = p.OwnerUserId\n where LastAccessDate < GETDATE() - 365\n   and upvotes = 0\n   and downvotes = 0\n   and p.Id is null\n   and Reputation = 1"},{"QuerySetId":79850,"Title":"User wrote of some word more times","Description":null,"QueryBody":"SELECT OwnerUserId, (LENGTH(body) - LENGTH(REPLACE(body, 'object', ''))) \/ LENGTH('object') AS ocurrences FROM Posts","CreationDate":"2012-09-12 22:12:21","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, (len(body)-len(replace(body,'object','')))\/len('object') as ocurrences from Posts"},{"QuerySetId":80112,"Title":"Tags Differing by Only a Dash","Description":null,"QueryBody":"SELECT a.TagName AS First, b.TagName AS Second FROM Tags AS a, Tags AS b WHERE a.Id < b.Id AND REPLACE(a.TagName, '-', '') = REPLACE(b.TagName, '-', '')","CreationDate":"2012-09-15 21:34:05","validated":false,"QueryBody_Original":"SELECT  a.TagName AS First, b.TagName AS Second\nFROM Tags AS a, Tags AS b\nWHERE a.Id < b.Id\nAND REPLACE(a.TagName, '-', '') = REPLACE(b.TagName, '-', '');"},{"QuerySetId":80586,"Title":"Total combined reputations of StackOverflow","Description":null,"QueryBody":"SELECT SUM(Reputation) AS totalRep FROM Users WHERE Reputation > 1","CreationDate":"2013-12-20 14:18:35","validated":false,"QueryBody_Original":"SELECT  SUM(Reputation) as totalRep\nFROM Users\nWHERE Reputation>1"},{"QuerySetId":80830,"Title":"Attrition: Reputation>10K Last post < 2012","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, u.LastAccessDate, p.LastPost FROM Users AS u INNER JOIN (SELECT OwnerUserId, MAX(CreationDate) AS LastPost FROM Posts WHERE CreationDate < '2012-01-01' GROUP BY OwnerUserId) AS p ON u.ID = p.OwnerUserId WHERE Reputation > 10000 AND u.LastAccessDate < '2012-01-01' ORDER BY Reputation DESC LIMIT 40","CreationDate":"2012-09-25 20:00:24","validated":false,"QueryBody_Original":"SELECT  Top 40 \n   u.DisplayName, \n   u.Reputation,\n   u.LastAccessDate,\n   p.LastPost \nFROM Users u \nINNER JOIN (\n\n   SELECT \n      OwnerUserId, \n      Max(CreationDate) As LastPost\n   FROM Posts\n   WHERE CreationDate < '2012-01-01'\n   GROUP BY OwnerUserId) As p\n   \nON u.ID = p.OwnerUserId\nWHERE Reputation>10000\nAnd u.LastAccessDate < '2012-01-01'\nORDER BY Reputation Desc"},{"QuerySetId":80868,"Title":"Users who, on average, post the longest answers.","Description":null,"QueryBody":"SELECT OwnerUserId, AVG(LENGTH(Body)) AS \"Average Answer Body Length\" FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId","CreationDate":"2012-09-25 22:55:05","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, AVG(LEN(Body)) AS [Average Answer Body Length]\nFROM Posts\nWHERE PostTypeId = 2\nGROUP BY OwnerUserId;"},{"QuerySetId":81243,"Title":"Days since post creation that a vote was cast","Description":null,"QueryBody":"SELECT DATEDIFF(Votes.CreationDate, Posts.CreationDate) AS DayVote, COUNT(*) AS TotalN FROM Votes INNER JOIN Posts ON Votes.PostId = Posts.Id WHERE (VoteTypeId = 2 OR VoteTypeId = 3) GROUP BY DATEDIFF(Votes.CreationDate, Posts.CreationDate) ORDER BY DayVote","CreationDate":"2015-08-27 15:41:10","validated":false,"QueryBody_Original":"SELECT \n\tDATEDIFF(day,Posts.CreationDate,Votes.CreationDate) AS DayVote,\n    COUNT(*) AS TotalN\nFROM Votes\n    INNER JOIN Posts ON Votes.PostId = Posts.Id    \nWHERE\n    (VoteTypeId = 2 OR VoteTypeId = 3)\nGROUP BY DATEDIFF(day,Posts.CreationDate,Votes.CreationDate)\nORDER BY DayVote"},{"QuerySetId":81508,"Title":"Open, unlocked questions with \"you\" in the title","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.Score FROM Posts AS p JOIN PostHistory AS h ON h.PostId = p.Id WHERE title LIKE '%Yii%' AND NOT ClosedDate IS NULL GROUP BY p.Id, p.Score HAVING SUM(CASE WHEN h.PostHistoryTypeId = 14 THEN -1 WHEN h.PostHistoryTypeId = 15 THEN 1 ELSE 0 END) >= 0 ORDER BY Score DESC","CreationDate":"2013-09-22 16:57:53","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link], p.Score\nfrom Posts p\njoin PostHistory h ON h.PostId = p.Id\nwhere title like '%Yii%' and ClosedDate is not null\nGROUP  BY p.Id, p.Score\nhaving SUM(CASE WHEN h.PostHistoryTypeId = 14 THEN -1\nWHEN h.PostHistoryTypeId = 15 then 1 ELSE 0 END) >= 0\norder by Score desc"},{"QuerySetId":81670,"Title":"All tags without a wiki excerpt","Description":null,"QueryBody":"SELECT 'site:\/\/tags\/' + TagName + '|' + TagName AS \"TagName\", Count FROM Tags ORDER BY Count DESC","CreationDate":"2016-12-28 04:51:47","validated":false,"QueryBody_Original":"SELECT \n  'site:\/\/tags\/' + TagName + '|' + TagName AS [TagName],\n  Count\nFROM Tags\n\nORDER BY Count DESC"},{"QuerySetId":81789,"Title":"Top Indian users in StackOverFlow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%INDIA%' AND Reputation >= 5000 ORDER BY Reputation DESC","CreationDate":"2020-04-16 07:39:18","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%INDIA%'\n    AND Reputation >= 5000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":81850,"Title":"Newest questions with score < -6","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, CreationDate, ClosedDate FROM Posts WHERE PostTypeId = 1 AND Score < -1 AND Score > -6 ORDER BY CreationDate DESC, Score DESC LIMIT 100","CreationDate":"2018-02-27 02:51:10","validated":false,"QueryBody_Original":"SELECT  Top 100 Id [Post Link], Score, CreationDate, ClosedDate\nFROM Posts\nWHERE PostTypeId = 1\nAND Score < -1\nAND Score > -6\nORDER BY CreationDate DESC, Score DESC\n\n-- Enter Query Description"},{"QuerySetId":82284,"Title":"Highest rated users who have never voted","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.DisplayName, u.Reputation FROM Users AS u WHERE u.UpVotes = 0 ORDER BY u.Reputation DESC LIMIT 100","CreationDate":"2013-02-05 15:23:04","validated":false,"QueryBody_Original":"SELECT  TOP 100 u.Id AS [User Link], u.DisplayName, u.Reputation\nFROM Users u\nWHERE u.UpVotes = 0\nORDER BY u.Reputation DESC"},{"QuerySetId":82424,"Title":"tags of questions new users ask","Description":null,"QueryBody":"SELECT id, TagName, Count FROM Tags WHERE Count > 1000","CreationDate":"2012-10-14 02:19:18","validated":false,"QueryBody_Original":"SELECT  id, TagName, Count from Tags where Count>1000;\nSELECT t.id, t.TagName, COUNT(*) as \"Number questions\"\nfrom (\n  SELECT distinct pq.Id, pt.TagId\n  from Users u \n    join Posts p on p.OwnerUserId = u.Id\n    join Posts pq on pq.Id = p.ParentId -- posts which are questions\n    join PostTags pt on pt.PostId = pq.Id\n    \n  --- do some filtering on posts - within date range\n  where pq.ViewCount>0 and (pq.CreationDate between '2012-01-01' and '2012-10-01')\n  --- filter users to new users\n  and u.CreationDate between '2011-09-01' and '2012-10-01'\n) ut\n  \n  join Tags t on t.Id = ut.TagId\n  -- join Users u on u.Id = ut.OwnerUserId where u.Reputation BETWEEN 0 AND 50 -- beginners\n  group by t.Id, t.TagName\n  having count(*) > 100\n  order by 3 desc"},{"QuerySetId":82664,"Title":"Get User ID from Display Name","Description":"Look up your User ID (for use in other queries) based upon your Display Name","QueryBody":"SELECT Id FROM Users WHERE DisplayName = '##DisplayName##'","CreationDate":"2018-05-04 09:20:11","validated":false,"QueryBody_Original":"SELECT  Id\nFROM Users\nWHERE DisplayName='##DisplayName##'"},{"QuerySetId":82722,"Title":"show all users from india as per their reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IN' ORDER BY Reputation DESC","CreationDate":"2012-10-18 11:58:07","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":82893,"Title":"Hidden Gems in Late Answers","Description":null,"QueryBody":"SELECT a.* FROM Posts AS a INNER JOIN Posts AS q ON a.ParentId = q.Id INNER JOIN Users AS u ON a.OwnerUserId = u.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 AND DATEDIFF(a.creationDate, q.creationDate) > 6 AND DATEDIFF(a.creationDate, u.creationDate) < 7 AND u.creationDate > q.CreationDate AND a.score > 10","CreationDate":"2012-10-21 15:21:24","validated":false,"QueryBody_Original":"SELECT  a.*\nfrom Posts a\ninner join Posts q\non  a.ParentId = q.Id\ninner join Users u\non a.OwnerUserId = u.Id\nwhere\n    q.PostTypeId = 1\nand a.PostTypeId = 2\nand datediff(month, q.creationDate, a.creationDate) > 6\nand datediff(day, u.creationDate, a.creationDate) < 7\nand u.creationDate > q.CreationDate\nand a.score > 10"},{"QuerySetId":82904,"Title":"Average number of answers per question","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Score > 0","CreationDate":"2019-04-26 03:37:12","validated":false,"QueryBody_Original":"SELECT  count(*) FROM Posts WHERE Score > 0"},{"QuerySetId":82949,"Title":"Length of Question Correlation with Answers","Description":null,"QueryBody":"SELECT MAX(LENGTH(Body)) FROM Posts","CreationDate":"2012-10-22 19:42:22","validated":false,"QueryBody_Original":"SELECT  MAX(LEN(Body)) FROM Posts"},{"QuerySetId":82966,"Title":"Top 500 longest posts, character by character","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", LENGTH(Body) AS \"Length\" FROM Posts ORDER BY LENGTH(Body) DESC LIMIT 500","CreationDate":"2013-01-27 01:04:07","validated":false,"QueryBody_Original":"SELECT  TOP 500 Id as [Post Link], LEN(Body) as \"Length\"\nFROM Posts\nORDER BY LEN(Body) DESC;"},{"QuerySetId":83094,"Title":"Ten lowest scored accepted answers","Description":null,"QueryBody":"SELECT q.Title, a.Score FROM Posts AS q LEFT JOIN Posts AS a ON q.AcceptedAnswerId = a.Id WHERE a.PostTypeId = 2 AND q.PostTypeId = 1 ORDER BY a.Score","CreationDate":"2012-10-24 14:23:48","validated":false,"QueryBody_Original":"SELECT  q.Title, a.Score from Posts as q left join Posts as a on q.AcceptedAnswerId = a.Id where a.PostTypeId = 2 and q.PostTypeId = 1 order by a.Score asc"},{"QuerySetId":83174,"Title":"Vote Count on each post Post","Description":null,"QueryBody":"SELECT Posts.Id, COUNT(Votes.Id) FROM Posts, Votes WHERE Votes.PostId = Posts.Id AND Votes.VoteTypeId = 1 AND TIME_TO_STR(Posts.CreationDate, '%Y') > 2010 GROUP BY Posts.Id","CreationDate":"2012-10-25 07:56:41","validated":false,"QueryBody_Original":"SELECT  Posts.Id, count(Votes.Id)\nfrom Posts, Votes\nwhere\nVotes.PostId = Posts.Id \nand Votes.VoteTypeId = 1\nand datepart(year, Posts.CreationDate) > 2010\ngroup by Posts.Id"},{"QuerySetId":83293,"Title":"select * from Posts where Id = 13091458;","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 13091458","CreationDate":"2012-10-26 21:20:41","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id = 13091458;"},{"QuerySetId":83336,"Title":"tag count of github languages ","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags WHERE TagName IN ('Python')","CreationDate":"2015-12-17 02:51:58","validated":false,"QueryBody_Original":"SELECT  TagName, Count from Tags where TagName in ('Python')"},{"QuerySetId":83612,"Title":"select top 10000 Posts.id, Posts.body from posts where posts.ViewCount>10000","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", p.Id, p.Body AS \"Message\", u.LastAccessDate AS \"Last Access\", u.Location AS \"Location\", u.WebsiteUrl AS \"URL\", u.Reputation AS \"Reputation\" FROM Posts AS p JOIN Users AS u ON u.Id = p.Id WHERE p.ViewCount > 10000 AND u.Reputation > 5000 ORDER BY Id LIMIT 100","CreationDate":"2013-02-01 08:04:26","validated":false,"QueryBody_Original":"SELECT  TOP 100 \n       u.Id             AS [User Link],\n       p.Id, \n       p.Body           AS [Message] ,  \n       u.LastAccessDate AS [Last Access],\n       u.Location       AS [Location], \n       u.WebsiteUrl     AS [URL],\n       u.Reputation     AS [Reputation]\nFROM \n       Posts p \n  JOIN Users u ON u.Id = p.Id\nWHERE \n       p.ViewCount  > 10000\n   AND u.Reputation >  5000\nORDER BY \n       Id"},{"QuerySetId":83859,"Title":"Get top users in Lithuania","Description":"Get top users by country","QueryBody":"SELECT DISTINCT U.Reputation, U.Id AS \"User Link\" FROM Users AS U INNER JOIN Comments AS C ON C.UserId = U.Id INNER JOIN Posts AS P ON P.Id = C.PostId WHERE LOWER(U.Location) LIKE '%uruguay%' AND (P.Tags LIKE '%mvc%') ORDER BY U.Reputation DESC","CreationDate":"2012-10-31 19:16:55","validated":false,"QueryBody_Original":"SELECT  DISTINCT U.Reputation, U.Id AS [User Link]\nFROM Users U\n  INNER JOIN Comments C ON C.UserId = U.Id\n  INNER JOIN Posts P ON P.Id = C.PostId\nWHERE LOWER(U.Location) like '%uruguay%' \n  AND (P.Tags LIKE '%mvc%')\nORDER BY U.Reputation DESC;"},{"QuerySetId":83940,"Title":"How many users on StackOverflow","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2013-12-10 20:15:47","validated":false,"QueryBody_Original":"SELECT  Count(*) From Users"},{"QuerySetId":84070,"Title":"select * from Users where Reputation > 200000","Description":null,"QueryBody":"SELECT * FROM Users WHERE Reputation > 200000","CreationDate":"2012-11-02 03:37:55","validated":false,"QueryBody_Original":"SELECT  * from Users where Reputation > 200000"},{"QuerySetId":84224,"Title":"Questions per month in specific tags","Description":"How many questions per month does each tag in group has","QueryBody":"SELECT COUNT(Id) FROM Posts WHERE Tags LIKE '%<php>%' AND CreationDate > '2012-06-01' AND CreationDate < '2012-06-03'","CreationDate":"2012-11-04 12:41:57","validated":false,"QueryBody_Original":"SELECT  COUNT(Id) FROM Posts\n  where Tags like '%<php>%'\n    and CreationDate > '2012-06-01'\n    and CreationDate < '2012-06-03'"},{"QuerySetId":84284,"Title":"Query that contains rude word like f##k","Description":null,"QueryBody":"SELECT PostID AS \"Post Link\", Score, Text FROM Comments WHERE Text LIKE '%fuck%' AND NOT LOWER(Text) LIKE '%brainfuck%' ORDER BY Score DESC","CreationDate":"2012-11-05 16:35:33","validated":false,"QueryBody_Original":"SELECT  PostID AS [Post Link], Score, Text \nFROM Comments \nWHERE Text LIKE '%fuck%' \nAND  LOWER(Text) NOT LIKE '%brainfuck%'\nORDER BY Score DESC"},{"QuerySetId":84323,"Title":"Export: (user, age), owns questions","Description":null,"QueryBody":"SELECT id, age FROM users WHERE id IN (SELECT owneruserid FROM posts WHERE posttypeid = 1 AND NOT owneruserid IS NULL) ORDER BY id","CreationDate":"2012-11-07 01:43:10","validated":false,"QueryBody_Original":"SELECT  id, age\nFROM users\nWHERE id IN (\n    SELECT owneruserid\n    FROM posts\n    WHERE posttypeid = 1\n    AND owneruserid IS NOT NULL\n)\nORDER BY id"},{"QuerySetId":84408,"Title":"Recently answered questions about the play framework","Description":null,"QueryBody":"SELECT Title FROM Posts GROUP BY Title","CreationDate":"2012-11-07 21:56:03","validated":false,"QueryBody_Original":"SELECT  \n   Title\nFROM Posts\nGROUP BY Title"},{"QuerySetId":84752,"Title":"Possible Duplicates comments that are from Jorge Castro","Description":"Find Possible Duplicates on the site via Comments that are still open\r\n","QueryBody":"SELECT P.Id AS \"Post Link\", P.Score, Text FROM Comments AS C, Posts AS P WHERE Text LIKE '%dup%' AND UserID = 235 AND P.Id = C.PostID AND P.PostTypeID = 1 AND P.ClosedDate IS NULL","CreationDate":"2012-11-12 14:08:44","validated":false,"QueryBody_Original":"SELECT  P.Id as [Post Link], P.Score, Text\nFROM Comments AS C, Posts AS P\nWHERE Text LIKE '%dup%'\n      AND UserID = 235\nAND P.Id = C.PostID AND P.PostTypeID = 1\nAND P.ClosedDate IS NULL"},{"QuerySetId":85847,"Title":"Find I'm a dude in comments","Description":null,"QueryBody":"SELECT * FROM Comments WHERE text LIKE '%webapps.stackexchange.com%'","CreationDate":"2012-11-25 19:56:42","validated":false,"QueryBody_Original":"SELECT  *\nfrom Comments\nWHERE text like '%webapps.stackexchange.com%'"},{"QuerySetId":85938,"Title":"Top Users by Location and Technology","Description":"List of Users in a given location using a given technology.\r\nCounts reputation only for votes on answers, ignores questions, comments, or reputation for accepted answers.","QueryBody":"SELECT Users.Id AS \"User Link\", MAX(Users.Location) AS Location, COUNT(*) * 10 AS \"Technology Reputation\", MAX(Users.Reputation) AS \"Total Reputation\" FROM Votes JOIN Posts ON Votes.PostId = Posts.Id JOIN Users ON Posts.OwnerUserId = Users.Id AND Users.Id IN (SELECT Users.Id FROM Users WHERE location LIKE ('%Romania%')) JOIN Posts AS Questions ON Posts.ParentId = Questions.Id WHERE Questions.Tags LIKE '%unreal%' OR Questions.Tags LIKE '%<c++>%' GROUP BY Users.Id ORDER BY \"Technology Reputation\" DESC","CreationDate":"2020-08-12 18:54:42","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link], max(Users.Location) as Location, count(*)*10 as [Technology Reputation], max(Users.Reputation) as [Total Reputation]\n  from Votes\n  join Posts on Votes.PostId=Posts.Id\n  join Users on Posts.OwnerUserId=Users.Id and Users.Id in \n    (SELECT Users.Id from Users where location like ('%Romania%'))\n  join Posts Questions on Posts.ParentId=Questions.Id\n  where Questions.Tags like '%unreal%' or Questions.Tags like '%<c++>%'\n  group by Users.Id\n  order by [Technology Reputation] desc"},{"QuerySetId":85982,"Title":"Top 100 Users from India (based on Reputation)","Description":"Note - The list can't be perfect as many users don't specify their location.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IN' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2012-11-15 14:35:25","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":86068,"Title":"Find newb questions with poorly written subject lines","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", CONCAT(p.AnswerCount, ' \/ ', p.CommentCount) AS \"Ans\/Cmnt\", CAST(TIME_TO_STR(p.creationdate, '%Y.%m.%d') AS TEXT(10)) AS \"YYYY.MM.DD\", u.Reputation AS \"Rep\" FROM posts AS p, users AS u WHERE p.OwnerUserId = u.Id AND p.ClosedDate IS NULL AND (p.Title LIKE '%problem%' OR p.Title LIKE '%not working%') AND u.Reputation < 100 AND p.AnswerCount < 3 ORDER BY p.creationdate DESC LIMIT 150","CreationDate":"2015-06-01 19:51:51","validated":false,"QueryBody_Original":"SELECT  TOP 150\np.Id as [Post Link]\n, concat( p.AnswerCount, ' \/ ', p.CommentCount ) as \"Ans\/Cmnt\"\n, CONVERT(VARCHAR(10), p.creationdate, 102) AS [YYYY.MM.DD]\n, u.Reputation as \"Rep\"\nfrom posts p, users u\nwhere \np.OwnerUserId = u.Id\nand p.ClosedDate is null\nand ( p.Title like '%problem%' or p.Title like '%not working%' )\nand u.Reputation < 100\nand p.AnswerCount < 3\n\norder by p.creationdate desc;"},{"QuerySetId":86132,"Title":"posts closed in sep, oct, or nov, with reasons","Description":null,"QueryBody":"SELECT YEAR(Posts.ClosedDate) AS y, MONTH(Posts.ClosedDate) AS m, CAST(YEAR(Posts.ClosedDate) AS TEXT(10)) + '\/' + CAST(MONTH(Posts.ClosedDate) AS TEXT(19)) AS ym, COUNT(CONCAT('http:\/\/programmers.stackexchange.com\/q\/', Posts.Id)) AS Questions FROM PostHistory JOIN Posts ON Posts.Id = PostHistory.PostId\/* AND Posts.ClosedDate < '2012-12-01' *\/  WHERE Posts.ClosedDate >= '2012-01-01' AND PostHistoryTypeId = 10 AND PostHistory.Comment <> 1 GROUP BY YEAR(Posts.ClosedDate), MONTH(Posts.ClosedDate) ORDER BY 1 DESC, 2 DESC","CreationDate":"2013-01-27 04:12:26","validated":false,"QueryBody_Original":"SELECT  year(Posts.ClosedDate) as y, month(Posts.ClosedDate) as m,  cast (year(Posts.ClosedDate) as  varchar(10)) + '\/' + cast(month(Posts.ClosedDate) as varchar(19)) as ym,  count(CONCAT ('http:\/\/programmers.stackexchange.com\/q\/', Posts.Id)) as Questions\nFROM PostHistory\nJOIN Posts ON Posts.Id = PostHistory.PostId\nWHERE Posts.ClosedDate >= '2012-01-01' \n--AND Posts.ClosedDate < '2012-12-01'\nAND PostHistoryTypeId = 10\nAND PostHistory.Comment != 1\ngroup by year(Posts.ClosedDate), month(Posts.ClosedDate)\nORDER BY 1 desc, 2 desc"},{"QuerySetId":86176,"Title":"highly viewed or highly voted posts that were asked in 2008 and got closed","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE (score >= 250 OR viewcount >= 150000) AND NOT closeddate IS NULL AND creationdate BETWEEN '2008-01-01' AND '2008-12-31'","CreationDate":"2012-11-17 02:32:00","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom posts\nwhere (score >= 250 or viewcount >= 150000)\nand closeddate is not null\nand creationdate between '2008-01-01' and '2008-12-31'"},{"QuerySetId":86178,"Title":"users with my same first name who have twitter in their about me","Description":null,"QueryBody":"SELECT COUNT(*) FROM users WHERE displayname LIKE 'Abby %' AND websiteurl LIKE '%twitter%'","CreationDate":"2012-12-01 00:28:08","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom users\nwhere displayname like 'Abby %'\nand websiteurl like '%twitter%'"},{"QuerySetId":86179,"Title":"number of tags containing 'java'","Description":null,"QueryBody":"SELECT COUNT(*) FROM tags WHERE tagname LIKE '%java%'","CreationDate":"2012-11-17 02:38:05","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom tags\nwhere tagname like '%java%'"},{"QuerySetId":86240,"Title":"No Answer, No Comment, No Duplicate, Not Closed","Description":"Posts with No Answer, No Comment, No Duplicate","QueryBody":"SELECT Id AS \"Post Link\", CreationDate AS \"Posted On\", Tags FROM Posts AS p WHERE AnswerCount = 0 \/* no answers *\/ AND CommentCount = 0 \/* no comments *\/ AND NOT Body LIKE '%uplicate%' \/* not a duplicate *\/ AND ClosedDate IS NULL \/* not closed *\/ ORDER BY CreationDate DESC","CreationDate":"2012-11-18 21:26:42","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], CreationDate as [Posted On], Tags\nfrom Posts p\nwhere AnswerCount=0 -- no answers\n  and CommentCount=0 -- no comments\n  and Body not like '%uplicate%' -- not a duplicate\n  and ClosedDate is null -- not closed\norder by CreationDate DESC"},{"QuerySetId":86259,"Title":"Week 1 Homework 1A 2008","Description":null,"QueryBody":"SELECT * FROM POSTS WHERE PostTypeId = 1 AND NOT ClosedDate IS NULL AND Score >= 250 OR ViewCount >= 150000 AND CreationDate BETWEEN '2008-01-01' AND '2009-01-01' LIMIT 100","CreationDate":"2012-12-01 00:16:25","validated":false,"QueryBody_Original":"SELECT  TOP 100*\nFROM POSTS\nWHERE PostTypeId = 1\nAND ClosedDate IS NOT NULL\nAND Score >= 250\nOR ViewCount >= 150000\nAND CreationDate BETWEEN '2008-01-01' AND '2009-01-01'"},{"QuerySetId":86260,"Title":"Week 1 Homework 1A 2011","Description":null,"QueryBody":"SELECT * FROM POSTS WHERE NOT ClosedDate IS NULL AND Score >= 250 AND ViewCount >= 150000 AND CreationDate BETWEEN '2011-01-01' AND '2011-12-31' LIMIT 100","CreationDate":"2012-11-19 00:30:45","validated":false,"QueryBody_Original":"SELECT  TOP 100*\nFROM POSTS\nWHERE ClosedDate IS NOT NULL\nAND Score >= 250\nAND ViewCount >= 150000\nAND CreationDate BETWEEN '2011-01-01' AND '2011-12-31'"},{"QuerySetId":86441,"Title":"Questions with a specific comment count","Description":null,"QueryBody":"SELECT q.id AS \"Post Link\" FROM posts AS q WHERE q.commentcount = 6 AND q.posttypeid = 1 ORDER BY q.score DESC","CreationDate":"2012-11-21 03:27:59","validated":false,"QueryBody_Original":"SELECT  q.id [Post Link]\nFROM   posts q \nWHERE  q.commentcount = 6 AND q.posttypeid = 1\nORDER BY      \n      q.score DESC"},{"QuerySetId":86495,"Title":"Percentage of closed questions by each hour of the day","Description":null,"QueryBody":"SELECT TIME_TO_STR(q.CreationDate, '%I') AS \"Hour\", CAST((100.0 * COUNT(q.ClosedDate) \/ COUNT(*)) AS FLOAT(10, 0)) AS \"Closed percent\", COUNT(*) AS \"Question count\" \/* , *\/ \/*  COUNT(q.ClosedDate) as [Closed count] *\/ FROM posts AS q WHERE q.PostTypeId = 1 GROUP BY TIME_TO_STR(q.CreationDate, '%I') ORDER BY 'Hour'","CreationDate":"2012-11-21 04:12:15","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(hh, q.CreationDate) as 'Hour',\n  CAST((100.0 * COUNT(q.ClosedDate) \/ COUNT(*)) as NUMERIC(10, 0)) as 'Closed percent',\n  COUNT(*) as [Question count]--,\n--  COUNT(q.ClosedDate) as [Closed count]\nFROM posts as q\nWHERE q.PostTypeId = 1\nGROUP BY DATEPART(hh, q.CreationDate)\nORDER BY 'Hour'"},{"QuerySetId":86508,"Title":"StackOverflow - Syria Top Users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%vietnam%' OR UPPER(Location) LIKE '%vn%' ORDER BY Reputation DESC","CreationDate":"2015-12-11 13:36:37","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%vietnam%'\n    OR UPPER(Location) LIKE '%vn%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":86643,"Title":"Number of questions with \"please\" in the title.","Description":null,"QueryBody":"SELECT COUNT(*), COUNT(closeddate), AVG(score) FROM Posts WHERE PostTypeId = 1 AND TIME_TO_STR(creationdate, '%Y') = 2012 AND (PATINDEX('%please%', LOWER(title)) > 0 OR PATINDEX('%pls%', LOWER(title)) > 0 OR PATINDEX('%plz%', LOWER(title)) > 0)","CreationDate":"2012-11-23 01:06:04","validated":false,"QueryBody_Original":"SELECT  count(*), count(closeddate), avg(score)\n  from Posts\n where PostTypeId = 1\n   and datepart(year, creationdate) = 2012\n   and ( patindex('%please%', lower(title)) > 0\n     or patindex('%pls%', lower(title)) > 0\n     or patindex('%plz%', lower(title)) > 0\n        )"},{"QuerySetId":86770,"Title":"List all the Badges earned by date for a given User","Description":null,"QueryBody":"SELECT Date, UserId AS \"User Link\", Name FROM Badges WHERE UserId = 40961 ORDER BY Date DESC","CreationDate":"2012-12-12 20:39:54","validated":false,"QueryBody_Original":"SELECT  Date, UserId as [User Link], Name\nFrom Badges\nWhere UserId = 40961\nOrder by Date Desc"},{"QuerySetId":86771,"Title":"Get the Server Time using SQL","Description":null,"QueryBody":"SELECT CURRENT_TIMESTAMP() AS \"CurrentDate and Time\"","CreationDate":"2012-11-24 11:51:19","validated":false,"QueryBody_Original":"SELECT  getdate() as \"CurrentDate and Time\""},{"QuerySetId":86772,"Title":"Number of Badges ever earned, grouped by BadgeName","Description":null,"QueryBody":"SELECT Name, UserId AS \"User Link\", Date FROM Badges WHERE DATEDIFF(CURRENT_TIMESTAMP(), Date) = 6","CreationDate":"2012-11-24 12:04:03","validated":false,"QueryBody_Original":"SELECT  Name, UserId as [User Link], Date\nfrom Badges\nWHERE DATEDIFF(day, Date, GETDATE()) = 6"},{"QuerySetId":87000,"Title":"Links to Answers with the Most Votes","Description":"What are some of the answers that have received the most votes?\r\nUsing a couple of SQL tricks\/phrases.\r\n1. Make the answer as a URL\r\n2. Embed a SELECT stmt inside another","QueryBody":"SELECT Score AS \"score_\", Id, Title FROM posts WHERE (posts.Tags LIKE '%<emacs%' OR posts.Tags LIKE '%<elisp>%' OR posts.Tags LIKE '%<org-mode>%') ORDER BY (Score * 100 + ViewCount + FavoriteCount * 1000) DESC LIMIT 50","CreationDate":"2019-10-01 15:27:55","validated":false,"QueryBody_Original":"SELECT  \nTop 50\n\nScore as [score_],\nId,\nTitle\n\nFROM posts \n\nWHERE (posts.Tags like '%<emacs%' OR \n       posts.Tags like '%<elisp>%' OR\n       posts.Tags like '%<org-mode>%')\n\nORDER BY (Score * 100 + ViewCount +FavoriteCount * 1000) DESC"},{"QuerySetId":87296,"Title":"What percentage of questions on StackOverflow are answered by the original question poster?","Description":null,"QueryBody":"SELECT * FROM Posts AS q JOIN Posts AS a ON q.Id = a.ParentId WHERE q.PostTypeId = 1 LIMIT 100","CreationDate":"2012-11-29 10:44:42","validated":false,"QueryBody_Original":"SELECT  TOP 100 *\nFROM Posts q\nJOIN Posts a\nON q.Id = a.ParentId\nWHERE q.PostTypeId = 1"},{"QuerySetId":87306,"Title":"how many question do i left","Description":null,"QueryBody":"SELECT * FROM Posts WHERE OwnerUserId = 859154 AND creationdate >= DATEADD(month, -1, GETDATE()) AND posttypeid = 1","CreationDate":"2012-12-04 17:53:20","validated":false,"QueryBody_Original":"SELECT  \n   *\nFROM Posts \n    \n    WHERE  OwnerUserId = 859154 and creationdate>=dateadd(month,-1,getdate()) and posttypeid=1"},{"QuerySetId":87345,"Title":"Most popular tags without wikis","Description":null,"QueryBody":"SELECT TagName AS \"Tag Link\", Count, ExcerptPostId, WikiPostId FROM Tags ORDER BY ExcerptPostId, WikiPostId, Count DESC LIMIT 1000","CreationDate":"2012-11-30 03:15:52","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  TagName as [Tag Link], Count, ExcerptPostId, WikiPostId\nFROM Tags\nORDER BY ExcerptPostId ASC, WikiPostId ASC, Count DESC"},{"QuerySetId":87374,"Title":"SQL for Non-Programmers -- Homework Practice","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", AVG(Score) FROM Posts AS p GROUP BY OwnerUserId HAVING COUNT(*) > 100 AND AVG(Score) > (SELECT AVG(Score) FROM Posts WHERE OwnerUserId = 22656) AND (SELECT Reputation FROM Users AS u WHERE OwnerUserId = u.Id) > 100 ORDER BY AVG(Score) DESC LIMIT 10","CreationDate":"2014-10-11 21:32:55","validated":false,"QueryBody_Original":"SELECT  TOP 10 OwnerUserId [User Link], AVG(Score)\nFROM Posts p\nGROUP BY OwnerUserId\nHAVING COUNT(*) > 100 \nAND AVG(Score) > (SELECT AVG(Score) FROM Posts WHERE OwnerUserId = 22656)\nAND (SELECT Reputation FROM Users u WHERE OwnerUserId = u.Id) > 100\nORDER BY AVG(Score) DESC"},{"QuerySetId":87381,"Title":"Retrieve questions with particular xtics","Description":null,"QueryBody":"SELECT * FROM posthistory WHERE postid = 1001082","CreationDate":"2012-11-30 10:39:04","validated":false,"QueryBody_Original":"SELECT  * from posthistory where postid=1001082"},{"QuerySetId":87392,"Title":"Posts with the highest answer count","Description":null,"QueryBody":"SELECT ParentId, COUNT(ParentId) FROM Posts WHERE PostTypeId = 2 GROUP BY ParentId ORDER BY COUNT(ParentId) DESC LIMIT 500","CreationDate":"2012-11-30 13:58:04","validated":false,"QueryBody_Original":"SELECT \n  TOP 500\n  ParentId, Count(ParentId)\nFROM\n  Posts\nWHERE \n  PostTypeId = 2\nGROUP BY\n  ParentId\nORDER BY\n  Count(ParentId) DESC"},{"QuerySetId":87394,"Title":"Posts (any type) with highest total votes count (up and down)","Description":null,"QueryBody":"SELECT PostId, COUNT(PostId) FROM Votes WHERE VoteTypeId IN (2, 3) GROUP BY PostId ORDER BY COUNT(PostId) DESC LIMIT 500","CreationDate":"2012-11-30 14:01:22","validated":false,"QueryBody_Original":"SELECT \n  TOP 500\n  PostId, Count(PostId)\nFROM\n  Votes\nWHERE \n  VoteTypeId IN (2,3)\nGROUP BY\n  PostId\nORDER BY\n  Count(PostId) DESC"},{"QuerySetId":87763,"Title":"How close are you to a Taxonomist Badge","Description":"Recommended value for MinCountOfQuestionsPerBadge is 25, otherwise the query will run for too long. This means we will only look at tags which have >25 questions or more in them.","QueryBody":"SELECT * FROM users WHERE id < 3","CreationDate":"2012-12-03 20:56:14","validated":false,"QueryBody_Original":"SELECT  * from users where id < 3"},{"QuerySetId":87813,"Title":"Average rep for top 10 users with the most answers","Description":null,"QueryBody":"SELECT AVG(Reputation) FROM Users WHERE Id IN (SELECT OwnerUserId AS NumAnswers FROM Posts WHERE PostTypeId = 2 AND OwnerUserId > 0 GROUP BY OwnerUserId ORDER BY COUNT(*) DESC LIMIT 10)","CreationDate":"2012-12-04 05:01:14","validated":false,"QueryBody_Original":"SELECT  AVG(Reputation)\nFROM Users\nWHERE Id IN (SELECT TOP 10 OwnerUserId NumAnswers\n             FROM Posts \n             WHERE PostTypeId = 2 AND OwnerUserId > 0\n             GROUP BY OwnerUserId\n             ORDER BY COUNT(*) DESC)"},{"QuerySetId":87814,"Title":"Top 10 users by average answer score","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", AVG(Score), COUNT(*) AS NumAnswers FROM Posts WHERE PostTypeId = 2 AND OwnerUserId > 0 GROUP BY OwnerUserId ORDER BY AVG(Score) DESC LIMIT 10","CreationDate":"2012-12-07 03:54:57","validated":false,"QueryBody_Original":"SELECT  TOP 10 OwnerUserId as [User Link], AVG(Score), COUNT(*) NumAnswers\nFROM Posts \nWHERE PostTypeId = 2 AND OwnerUserId > 0\nGROUP BY OwnerUserId\nORDER BY AVG(Score) DESC"},{"QuerySetId":87825,"Title":"Highest voted vote different comment","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Score, Text FROM Comments WHERE Text LIKE '%faq#vote-differences%' ORDER BY Score DESC LIMIT 10","CreationDate":"2012-12-04 14:14:13","validated":false,"QueryBody_Original":"SELECT  TOP 10 PostId AS [Post Link], Score , Text FROM Comments\nWHERE Text LIKE '%faq#vote-differences%'\nORDER BY Score DESC"},{"QuerySetId":87861,"Title":"Testing, is this thing on? (100 users...) ","Description":null,"QueryBody":"SELECT * FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY Id) AS row FROM users) AS a WHERE a.row > 5 AND a.row <= 100","CreationDate":"2012-12-04 20:12:47","validated":false,"QueryBody_Original":"SELECT  * FROM ( \n  SELECT *, ROW_NUMBER() OVER (ORDER BY Id) as row FROM users \n ) a WHERE a.row > 5 and a.row <= 100"},{"QuerySetId":87917,"Title":"sed\/vim replace expression-like edit comments","Description":null,"QueryBody":"SELECT * FROM posthistory WHERE Comment LIKE '%s\/%\/%\/'","CreationDate":"2012-12-05 03:35:12","validated":false,"QueryBody_Original":"SELECT  * from posthistory where Comment like '%s\/%\/%\/'"},{"QuerySetId":88000,"Title":"Find all answers which are posted before a bounty is raised by the asker","Description":null,"QueryBody":"SELECT DISTINCT posts.id, posts.parentid AS parent, R.postid, posts.creationDate, R.creationDate FROM posts, (SELECT creationDate, postid FROM votes WHERE votetypeid = 8 AND bountyAmount > 0) AS R WHERE parentid IN (SELECT postid FROM votes WHERE votetypeid = 8 AND bountyAmount > 0) AND posttypeid = 2 AND R.creationDate > posts.creationDate AND posts.parentid = R.postid","CreationDate":"2012-12-06 10:25:08","validated":false,"QueryBody_Original":"SELECT  distinct posts.id, posts.parentid as parent, R.postid, posts.creationDate, R.creationDate\nfrom posts, (SELECT creationDate, postid from votes where votetypeid=8 and bountyAmount > 0) R\nwhere parentid in\n(\nSELECT postid from votes where votetypeid=8 and bountyAmount > 0\n)\nand posttypeid=2\nand R.creationDate > posts.creationDate\nand posts.parentid = R.postid"},{"QuerySetId":88035,"Title":"newest user who has hit 10000 reputation","Description":null,"QueryBody":"SELECT Id, DisplayName FROM Users WHERE Reputation >= 10000 ORDER BY CreationDate DESC LIMIT 1","CreationDate":"2012-12-06 21:38:11","validated":false,"QueryBody_Original":"SELECT  TOP 1 Id, DisplayName\nFROM Users\nWHERE Reputation >= 10000\nORDER BY CreationDate DESC"},{"QuerySetId":88036,"Title":"50 top-voted comments for the month of November","Description":null,"QueryBody":"SELECT * FROM Comments WHERE CreationDate BETWEEN '2012-11-01' AND '2012-11-30' ORDER BY Score DESC LIMIT 50","CreationDate":"2012-12-06 21:39:27","validated":false,"QueryBody_Original":"SELECT  Top 50 *\nFROM Comments\nWHERE CreationDate BETWEEN '2012-11-01' AND '2012-11-30'\nORDER BY Score DESC"},{"QuerySetId":88037,"Title":"New contest users & avg rep","Description":null,"QueryBody":"SELECT COUNT(DISTINCT Id) AS NewUsers, AVG(Reputation) AS AvgRep FROM Users WHERE CreationDate BETWEEN '2012-10-19' AND '2012-11-09'","CreationDate":"2012-12-06 21:44:19","validated":false,"QueryBody_Original":"SELECT  COUNT (distinct Id) NewUsers, AVG (Reputation) AvgRep\nFROM Users\nWHERE CreationDate BETWEEN '2012-10-19' AND '2012-11-09'"},{"QuerySetId":88038,"Title":"Most rep in new contest","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation FROM Users WHERE CreationDate BETWEEN '2012-10-19' AND '2012-11-09' ORDER BY Reputation DESC","CreationDate":"2012-12-06 21:45:49","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, Reputation\nFROM Users\nWHERE CreationDate BETWEEN '2012-10-19' AND '2012-11-09'\nORDER BY Reputation DESC"},{"QuerySetId":88040,"Title":"Avg rep for 10 users with most answers","Description":null,"QueryBody":"SELECT AVG(Reputation) FROM Users WHERE Id IN (SELECT OwnerUserId FROM Posts WHERE PostTypeId = 2 AND OwnerUserId > 0 GROUP BY OwnerUserId ORDER BY COUNT(*) DESC LIMIT 10)","CreationDate":"2012-12-06 21:54:49","validated":false,"QueryBody_Original":"SELECT  AVG (Reputation)\nFROM Users\nWHERE Id IN (SELECT Top 10 OwnerUserId\n            FROM Posts\n            WHERE PostTypeId = 2 AND OwnerUserId > 0\n            GROUP BY OwnerUserId \n            ORDER BY COUNT(*) DESC)"},{"QuerySetId":88046,"Title":"10 users with the top average answer score","Description":null,"QueryBody":"SELECT OwnerUserId, AVG(Score) AS AvgScore, COUNT(*) AS AnswersPosted FROM Posts WHERE PostTypeId = 2 AND OwnerUserId > 0 GROUP BY OwnerUserId ORDER BY AVG(Score) DESC LIMIT 10","CreationDate":"2012-12-06 23:24:50","validated":false,"QueryBody_Original":"SELECT  Top 10 OwnerUserId, AVG (Score) AvgScore, COUNT(*) AnswersPosted\nFROM Posts \nWHERE PostTypeId = 2 AND OwnerUserId > 0\nGROUP BY OwnerUserId \nORDER BY AVG(Score) DESC"},{"QuerySetId":88092,"Title":"newest user to hit 10000 rep","Description":null,"QueryBody":"SELECT * FROM users WHERE reputation >= 10000 ORDER BY creationdate DESC","CreationDate":"2012-12-07 01:24:28","validated":false,"QueryBody_Original":"SELECT  *\nfrom users\nwhere reputation >= 10000\norder by creationdate desc"},{"QuerySetId":88176,"Title":"Top 50 voted comments in november","Description":null,"QueryBody":"SELECT * FROM COmments ORDER BY 'Score' DESC LIMIT 50","CreationDate":"2012-12-08 00:21:17","validated":false,"QueryBody_Original":"SELECT  TOP 50 *\nFROM COmments\nORDER BY 'Score'DESC"},{"QuerySetId":88278,"Title":"Top 10 Most Prolific Editors for wordpres-sstack","Description":null,"QueryBody":"SELECT Id AS \"User Link\", (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS QuestionEdits, (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 2 AND LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS AnswerEdits, (SELECT COUNT(*) FROM Posts WHERE LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS TotalEdits FROM Users ORDER BY TotalEdits DESC LIMIT 10","CreationDate":"2012-12-09 03:18:21","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    Id AS [User Link],\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            PostTypeId = 1 AND\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS QuestionEdits,\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            PostTypeId = 2 AND\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS AnswerEdits,\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS TotalEdits\n    FROM Users\n    ORDER BY TotalEdits DESC"},{"QuerySetId":88601,"Title":"Top 10 most downvoted users","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes, SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes FROM Votes AS v INNER JOIN Posts AS p ON p.ID = v.PostId WHERE p.OwnerUserId > 0 GROUP BY p.OwnerUserId ORDER BY Downvotes DESC LIMIT 10","CreationDate":"2012-12-11 03:44:16","validated":false,"QueryBody_Original":"SELECT  TOP 10 p.OwnerUserId as [User Link], \n  SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) as Upvotes,\n  SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) as Downvotes\nFROM Votes v\nINNER JOIN Posts p on p.ID = v.PostId\nWHERE p.OwnerUserId > 0\nGROUP BY p.OwnerUserId\nORDER BY Downvotes desc"},{"QuerySetId":88751,"Title":"Upvotes and downvotes cast by a community","Description":null,"QueryBody":"SELECT SUM(upvotes) AS \"Upvotes\", SUM(downvotes) AS \"Downvotes\", SUM(downvotes) * 100 \/ (SUM(upvotes) + SUM(downvotes)) AS \"Downvote %\" FROM users","CreationDate":"2012-12-12 23:06:11","validated":false,"QueryBody_Original":"SELECT  sum(upvotes) as \"Upvotes\", sum(downvotes) as \"Downvotes\",\n       sum(downvotes)*100\/(sum(upvotes)+sum(downvotes)) as \"Downvote %\"\nfrom users"},{"QuerySetId":89120,"Title":"Top 50 Most Favorited Questions on SO","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM Posts WHERE PostTypeId = 2 AND CreationDate >= '2011-12-16' ORDER BY score DESC LIMIT 50","CreationDate":"2012-12-15 09:07:23","validated":false,"QueryBody_Original":"SELECT  \n  TOP 50 id AS [Post Link]  \nFROM \n  Posts\nWHERE\n  PostTypeId = 2 \n  AND CreationDate >= '2011-12-16'\nORDER BY \n  score DESC"},{"QuerySetId":89343,"Title":"Homework and non-homework tagged question counts","Description":null,"QueryBody":"SELECT Date, COALESCE(SUM(Homework), 0) AS \"Homework\", COALESCE(SUM(NotHomework), 0) AS \"NotHomework\" FROM (SELECT CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(30)) AS \"Date\", COUNT(*) AS Homework, NULL AS NotHomework FROM Posts AS p WHERE COALESCE(STR_POSITION(p.Tags, 'homework'), 0) <> 0 AND p.PostTypeId = 1 AND COALESCE(p.ClosedDate, 0) = 0 GROUP BY CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(30)) UNION ALL SELECT CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(30)) AS \"Date\", NULL AS Homework, COUNT(*) AS NotHomework FROM Posts AS p WHERE COALESCE(STR_POSITION(p.Tags, 'homework'), 0) = 0 AND p.PostTypeId = 1 AND COALESCE(p.ClosedDate, 0) = 0 GROUP BY CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(30))) AS temp GROUP BY Date ORDER BY Date","CreationDate":"2015-05-31 06:30:42","validated":false,"QueryBody_Original":"SELECT  \n  Date, \n  IsNull(sum(Homework), 0) as 'Homework',\n  IsNull(sum(NotHomework), 0) as 'NotHomework'\nfrom (\n  SELECT\n    convert(varchar, p.CreationDate, 102) as 'Date', \n    count(*) as Homework,\n    null as NotHomework\n  from \n    Posts as p\n  where \n    isnull(charindex('homework', p.Tags), 0) <> 0 and\n    p.PostTypeId = 1 and\n    isnull(p.ClosedDate, 0) = 0\n  group by\n    convert(varchar, p.CreationDate, 102)\n  union all\n  SELECT\n    convert(varchar, p.CreationDate, 102) as 'Date',\n    null as Homework,\n    count(*) as NotHomework\n  from\n    Posts as p\n  where\n    isnull(charindex('homework', p.Tags), 0) = 0 and\n    p.PostTypeId = 1 and\n    isnull(p.ClosedDate, 0) = 0\n  group by\n    convert(varchar, p.CreationDate, 102)\n) temp\ngroup by\n  Date\norder by \n  Date;"},{"QuerySetId":89435,"Title":"Posts with apt-get install that have no software button","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%apt-get install%' AND NOT Body LIKE '%add-apt-repository%' AND NOT Body LIKE '%apps.ubuntu.com%' AND PostTypeId = 2 AND ClosedDate IS NULL ORDER BY Score DESC","CreationDate":"2013-05-23 07:50:36","validated":false,"QueryBody_Original":"SELECT  Score, Id AS [Post Link]\nFROM Posts \nWHERE Body LIKE '%apt-get install%'\n  AND Body NOT LIKE '%add-apt-repository%'\n  AND Body NOT LIKE '%apps.ubuntu.com%'\n  AND PostTypeId = 2\n  AND ClosedDate IS NULL\nORDER BY Score DESC"},{"QuerySetId":89469,"Title":"Average and Maximum scores ","Description":null,"QueryBody":"SELECT a.score, a.OwnerDisplayName FROM posts AS a WHERE a.OwnerDisplayName LIKE '%zum%'","CreationDate":"2017-01-19 15:19:06","validated":false,"QueryBody_Original":"SELECT  a.score, a.OwnerDisplayName\nfrom posts a where a.OwnerDisplayName LIKE '%zum%'"},{"QuerySetId":89500,"Title":"How many posts are reopened per month?","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%M') AS \"month\", TIME_TO_STR(CreationDate, '%Y') AS \"year\", COUNT(Id) AS \"num\" FROM Posts WHERE Title LIKE '%which%' GROUP BY TIME_TO_STR(CreationDate, '%M'), TIME_TO_STR(CreationDate, '%Y') ORDER BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%M')","CreationDate":"2014-12-12 01:16:30","validated":false,"QueryBody_Original":"SELECT \n  datepart(mm, CreationDate) as [month]\n  ,datepart(yyyy, CreationDate) as [year]\n  ,count(Id) as \"num\"\nfrom\n   Posts \nwhere Title like '%which%'\ngroup by\n  datepart(mm, CreationDate)\n  ,datepart(yyyy, CreationDate)\n order by \n  datepart(yyyy, CreationDate)\n  ,datepart(mm, CreationDate)"},{"QuerySetId":89594,"Title":"select Location from Users group by location","Description":null,"QueryBody":"SELECT location, SUM(age) FROM users WHERE NOT location IS NULL AND NOT age IS NULL GROUP BY location","CreationDate":"2012-12-22 02:23:27","validated":false,"QueryBody_Original":"SELECT  location, sum(age) \nfrom users \nwhere location IS NOT NULL and age is not null\ngroup by location"},{"QuerySetId":89715,"Title":"Random questions on a site","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.* FROM Posts AS p WITH (nolock) WHERE p.PostTypeId IN (1) ORDER BY NEWID()","CreationDate":"2012-12-24 02:28:14","validated":false,"QueryBody_Original":"SELECT \n  p.Id as [Post Link],\n  p.* \nfrom\n  Posts as p with (nolock)\nwhere\n  --- Just questions for now\n  p.PostTypeId in (1) \n  \n  --- Add new filter criteria here\n  --- to suit your needs.\n  \norder by \n  --- Randomize each time.\n  newid()"},{"QuerySetId":89960,"Title":"Total of questions asked per year","Description":"This query fetches the amount of questions asked per month, organized by year and month.\r\n","QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') AS year, COUNT(id) AS total FROM Posts WHERE PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%Y') ORDER BY TIME_TO_STR(CreationDate, '%Y')","CreationDate":"2020-10-08 12:10:55","validated":false,"QueryBody_Original":"SELECT \n    datepart(year,CreationDate) as year,\n    COUNT(id) as total\nFROM\n    Posts\nWHERE\n    PostTypeId = 1\nGROUP BY\n    datepart(year,CreationDate)\nORDER BY\n    datepart(year,CreationDate)"},{"QuerySetId":89993,"Title":"How many unanswered EOL questions are there?","Description":"This is a rough estimate","QueryBody":"SELECT Id AS \"Post Link\", Score, CreationDate, ViewCount, Tags FROM Posts WHERE NOT Id IN (SELECT ParentId FROM Posts WHERE PostTypeId = 2 AND Score >= 1 AND ClosedDate IS NULL) AND (Tags LIKE '%10.%' OR Tags LIKE '%9.%' OR Tags LIKE '%8.%' OR Tags LIKE '%11.04%' OR Tags LIKE '%7.%' OR Tags LIKE '%6.%') AND ClosedDate IS NULL AND AcceptedAnswerId IS NULL ORDER BY ViewCount DESC","CreationDate":"2012-12-28 01:52:00","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Score, CreationDate, ViewCount, Tags \nFROM Posts \nWHERE Id NOT IN\n(\n     SELECT ParentId\n     FROM Posts\n     WHERE PostTypeId = 2\n     AND Score >= 1 AND ClosedDate IS NULL\n)\nAND (\n  Tags LIKE '%10.%' \n  OR Tags Like '%9.%' \n  OR Tags LIKE '%8.%' \n  OR Tags LIKE '%11.04%'\n  OR Tags LIKE '%7.%'\n  OR Tags LIKE '%6.%'\n)\nAND ClosedDate IS NULL\nAND AcceptedAnswerId IS NULL\nORDER BY ViewCount DESC"},{"QuerySetId":90145,"Title":"popular questions by time of day and day of week","Description":null,"QueryBody":"SELECT DATEPART(dw, A.CreationDate) AS \"DayOfWeek\", DATENAME(dw, A.CreationDate) AS \"Day\", RIGHT('0' + CAST(DATEPART(hh, A.CreationDate) AS TEXT(2)), 2) AS \"Hour\", AVG(CAST(A.Score AS FLOAT)) AS AverageScore FROM Posts AS Q INNER JOIN Posts AS A ON Q.Id = A.ParentId \/* questions *\/\/* asked in last 12 months        *\/ \/* high score *\/ \/* answers *\/  WHERE Q.PostTypeId = 1 AND A.PostTypeId = 2 AND A.Score > 10 AND Q.CreationDate > DATEADD(m, -12, GETUTCDATE()) GROUP BY DATEPART(dw, A.CreationDate), DATENAME(dw, A.CreationDate), DATEPART(hh, A.CreationDate) ORDER BY ARRAY(DayOfWeek), ARRAY(Hour)","CreationDate":"2012-12-28 19:22:22","validated":false,"QueryBody_Original":"SELECT   DATEPART(dw, A.CreationDate) [DayOfWeek],\n        DATENAME(dw, A.CreationDate) [Day],\n        RIGHT('0' + CAST(DATEPART(hh, A.CreationDate) AS VARCHAR(2)), 2) [Hour],\n        AVG(CAST(A.Score AS DECIMAL)) AverageScore\nFROM    Posts Q\n        INNER JOIN Posts A ON Q.Id = A.ParentId\nWHERE   -- questions\n        Q.PostTypeId = 1 \n        -- answers\n        AND A.PostTypeId = 2 \n        -- high score\n        AND A.Score > 10\n        -- asked in last 12 months        \n        AND Q.CreationDate > DATEADD(m, -12, GETUTCDATE())\nGROUP BY DATEPART(dw, A.CreationDate),\n        DATENAME(dw, A.CreationDate),\n        DATEPART(hh, A.CreationDate)\nORDER BY [DayOfWeek], \n        [Hour];"},{"QuerySetId":90193,"Title":"Top 10 Users from India by Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2014-06-25 13:33:24","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":90202,"Title":"From whom I got downvotes","Description":null,"QueryBody":"SELECT u.UpVotes + u.DownVotes FROM Users AS u WHERE u.Id = '566193'","CreationDate":"2013-01-02 23:54:33","validated":false,"QueryBody_Original":"SELECT  u.UpVotes + u.DownVotes\nfrom Users u\nwhere u.Id = '566193'"},{"QuerySetId":90286,"Title":"Top ten Indian users by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IN' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2012-12-29 21:48:59","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":90587,"Title":"Users with more > 5000 rep  in both SO and Math","Description":null,"QueryBody":"SELECT s.DisplayName, m.Reputation AS RepEnglish, s.Reputation AS RepSO, (s.Reputation + m.Reputation) AS RepAcum FROM \"StackExchange.English\".\"Users\" AS m, \"StackOverflow\".\"Users\" AS s WHERE s.Reputation > 5000 AND m.Reputation > 5000 AND s.EmailHash = m.EmailHash ORDER BY 2 DESC","CreationDate":"2013-01-07 05:57:11","validated":false,"QueryBody_Original":"SELECT  s.DisplayName, m.Reputation RepEnglish , s.Reputation RepSO, \n(s.Reputation + m.Reputation ) RepAcum\nFROM [StackExchange.English]..[Users] AS m,\n[StackOverflow]..[Users] AS s\nWHERE s.Reputation>5000\nAND m.Reputation>5000\nAND s.EmailHash = m.EmailHash\nORDER BY 2 DESC"},{"QuerySetId":90588,"Title":"Users with highest reputation both in SO and Math ( geometric mean = average digits)","Description":null,"QueryBody":"SELECT s.DisplayName, s.Reputation AS RepSO, m.Reputation AS RepMath, (LOG10(s.Reputation) + LOG10(m.Reputation)) \/ 2 AS RepAvDigits FROM \"StackExchange.Math\".\"Users\" AS m, \"StackOverflow\".\"Users\" AS s WHERE s.Reputation > 10000 AND m.Reputation > 10000 AND s.AccountId = m.AccountId ORDER BY 4 DESC","CreationDate":"2015-05-22 23:16:27","validated":false,"QueryBody_Original":"SELECT  s.DisplayName,s.Reputation RepSO, m.Reputation RepMath ,\n(LOG10(s.Reputation) + LOG10(m.Reputation))\/2 RepAvDigits\nFROM [StackExchange.Math]..[Users] AS m,\n[StackOverflow]..[Users] AS s\nWHERE s.Reputation>10000\nAND m.Reputation>10000\nAND s.AccountId = m.AccountId\nORDER BY 4 DESC"},{"QuerySetId":90800,"Title":"How many news users joined SO in 2012?","Description":null,"QueryBody":"SELECT COUNT(ID) FROM Users WHERE YEAR(CreationDate) = 2012","CreationDate":"2013-01-03 23:18:02","validated":false,"QueryBody_Original":"SELECT  count(ID) \nfrom Users\nwhere Year(CreationDate) = 2012"},{"QuerySetId":90808,"Title":"Users with the longest \"About Me\" blurb","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Views, Reputation, Upvotes + Downvotes AS \"Votes\", LENGTH(AboutMe) AS \"Len(About)\", AboutMe FROM Users ORDER BY LENGTH(AboutMe) DESC LIMIT 500","CreationDate":"2013-01-04 02:51:51","validated":false,"QueryBody_Original":"SELECT  TOP 500\n  Id AS [User Link],\n  Views,\n  Reputation,\n  Upvotes + Downvotes AS [Votes],\n  Len(AboutMe) AS [Len(About)],\n  AboutMe\nFROM Users\nORDER BY Len(AboutMe) DESC"},{"QuerySetId":91014,"Title":"These Are Your Father's Parentheses ","Description":null,"QueryBody":"SELECT age, COUNT(*) AS programmers, SUM(reputation) AS total_reputation, SUM(reputation) \/ COUNT(*) AS normed_reputation FROM users WHERE NOT age IS NULL AND age BETWEEN 18 AND 70 AND users.id IN (SELECT users.id FROM users, posts AS answers WHERE answers.posttypeid = 2 AND users.id = answers.owneruserid AND YEAR(answers.creationdate) = 2012) GROUP BY age ORDER BY age","CreationDate":"2013-01-09 04:35:53","validated":false,"QueryBody_Original":"SELECT  age, count(*) programmers, sum(reputation) total_reputation, sum(reputation)\/count(*) normed_reputation \nfrom users\nwhere age is not null and age between 18 and 70\nand users.id in (SELECT users.id from users, posts answers where answers.posttypeid=2\nand users.id=answers.owneruserid and year(answers.creationdate)=2012)\ngroup by age\norder by age"},{"QuerySetId":91016,"Title":"Users with over 5000 rep  in both SO and ELU","Description":null,"QueryBody":"SELECT COUNT(*) FROM \"StackOverflow\".\"Users\" AS s WHERE s.Reputation > 5000","CreationDate":"2016-04-06 07:09:28","validated":false,"QueryBody_Original":"SELECT  count(*) from \n[StackOverflow]..[Users] AS s\nWHERE s.Reputation>5000"},{"QuerySetId":91018,"Title":"Users with over 10,000 rep in both SO and ELU","Description":null,"QueryBody":"SELECT s.DisplayName, m.Reputation AS RepEnglish, s.Reputation AS RepSO, (s.Reputation + m.Reputation) AS RepAcum FROM \"StackExchange.English\".\"Users\" AS m, \"StackOverflow\".\"Users\" AS s WHERE s.Reputation > 10000 AND m.Reputation > 10000 AND s.AccountId = m.AccountId ORDER BY 4 DESC","CreationDate":"2014-08-19 02:34:59","validated":false,"QueryBody_Original":"SELECT  s.DisplayName, m.Reputation RepEnglish , s.Reputation RepSO, \n(s.Reputation + m.Reputation ) RepAcum\nFROM [StackExchange.English]..[Users] AS m,\n[StackOverflow]..[Users] AS s\nWHERE s.Reputation>10000\nAND m.Reputation>10000\nAND s.AccountId = m.AccountId\nORDER BY 4 DESC"},{"QuerySetId":91030,"Title":"Top 10 Users from Pakistan by Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2019-04-23 15:07:29","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation ASC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":91114,"Title":"Closed\/Re-opened and edited questions by month","Description":null,"QueryBody":"SELECT TIME_TO_STR(e.CreationDate, '%M') AS \"month\", TIME_TO_STR(e.CreationDate, '%Y') AS \"year\", SUM(CASE r.PostHistoryTypeId WHEN 10 THEN 1 ELSE 0 END) AS Closed, SUM(CASE r.PostHistoryTypeId WHEN 11 THEN 1 ELSE 0 END) AS reopen FROM PostHistory AS e JOIN PostHistory AS r ON r.PostId = e.PostId\/* Reopen *\/  WHERE e.CreationDate < r.CreationDate AND (e.PostHistoryTypeId = 4 OR e.PostHistoryTypeId = 5) \/* Edit *\/ AND r.PostHistoryTypeId IN (10, 11) GROUP BY TIME_TO_STR(e.CreationDate, '%M'), TIME_TO_STR(e.CreationDate, '%Y') ORDER BY TIME_TO_STR(e.CreationDate, '%Y'), TIME_TO_STR(e.CreationDate, '%M')","CreationDate":"2013-01-08 02:12:11","validated":false,"QueryBody_Original":"SELECT \n  datepart(mm, e.CreationDate) as [month]\n  ,datepart(yyyy, e.CreationDate) as [year]\n  ,SUM(CASE r.PostHistoryTypeId WHEN 10 THEN 1 ELSE 0 END ) as Closed\n  ,SUM(CASE r.PostHistoryTypeId WHEN 11 THEN 1 ELSE 0 END ) as reopen\nfrom\n   PostHistory e \n   join PostHistory r on r.PostId=e.PostId\nwhere\n  e.CreationDate < r.CreationDate\n  and (e.PostHistoryTypeId = 4 or e.PostHistoryTypeId = 5) -- Edit\n  and r.PostHistoryTypeId in (10,11)  -- Reopen\ngroup by\n  datepart(mm, e.CreationDate)\n  ,datepart(yyyy, e.CreationDate)\n order by \n  datepart(yyyy, e.CreationDate)\n  ,datepart(mm, e.CreationDate)"},{"QuerySetId":91321,"Title":"What was those answers that you have commented on?","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Body AS \"Answer\", c.Text AS Comment FROM Posts AS a INNER JOIN Comments AS c ON a.Id = c.PostId WHERE c.UserId = 330315 AND a.OwnerUserId = 722783","CreationDate":"2013-03-03 13:06:53","validated":false,"QueryBody_Original":"SELECT  \n  a.Id AS [Post Link],\n  a.Body AS [Answer],\n  c.Text Comment\nFROM Posts a\nINNER JOIN Comments c ON a.Id       = c.PostId\nWHERE c.UserId = 330315\n  AND a.OwnerUserId = 722783"},{"QuerySetId":91603,"Title":"How are people using the \"Leaving a half-answer as a comment\" comment?","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", * FROM comments WHERE text LIKE '%Leaving a half-answer as a comment%'","CreationDate":"2014-01-18 20:29:05","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], * from comments\nwhere text like '%Leaving a half-answer as a comment%'"},{"QuerySetId":91744,"Title":"Top 25 Users by reputation with # of questions, answers","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY u.Reputation DESC) AS \"#\", u.Id AS \"User Link\", u.Reputation, (SELECT COUNT(p.Id) FROM Posts AS p WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 1) AS Questions, (SELECT COUNT(p.Id) FROM Posts AS p WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 2) AS Answers FROM Users AS u ORDER BY Reputation DESC LIMIT 25","CreationDate":"2013-01-11 20:31:39","validated":false,"QueryBody_Original":"SELECT \nTOP (25) ROW_NUMBER() OVER(ORDER BY u.Reputation DESC) AS [#], \n    u.Id AS [User Link], \n    u.Reputation,\n    (SELECT count(p.Id) from Posts p where p.OwnerUserId=u.Id and p.PostTypeId=1) as Questions,\n    (SELECT count(p.Id) from Posts p where p.OwnerUserId=u.Id and p.PostTypeId=2) as Answers\nFROM\n    Users u\nORDER BY\n    Reputation DESC;"},{"QuerySetId":91801,"Title":"Effectiveness of What Have You Tried","Description":null,"QueryBody":"SELECT COUNT(c.PostID) AS QuestionCount, COUNT(a.ID) AS AnswerCount_ByCommenter, SUM(CASE WHEN NOT p.ClosedDate IS NULL THEN 1 ELSE 0 END), AVG(p.AnswerCount) FROM comments AS c INNER JOIN POSTS AS p ON c.PostID = p.Id LEFT JOIN Posts AS a ON p.Id = a.Id AND a.OwnerUserID = c.UserId WHERE c.text LIKE '%WhatHaveYouTried%' OR c.text LIKE '%what have you tried%'","CreationDate":"2013-01-12 01:11:46","validated":false,"QueryBody_Original":"SELECT  \n  COUNT(c.PostID) QuestionCount , \n  Count(a.ID) AnswerCount_ByCommenter, \n  SUM(CASE WHEN p.ClosedDate is not null THEN 1 ELSE 0 END), \n  AVG(p.AnswerCount)\nfrom \n  comments c\n  INNER JOIN POSTS p \n    ON c.PostID = p.Id\n  LEFT JOIN Posts a\n    ON p.Id = a.Id\n    and a.OwnerUserID = c.UserId\nwhere \n  c.text like '%WhatHaveYouTried%' \n  or c.text like '%what have you tried%'"},{"QuerySetId":91965,"Title":"Self-answered questions that would have been deleted","Description":null,"QueryBody":"SELECT COUNT(DISTINCT q.id) AS Questions FROM posts AS q JOIN posts AS a ON q.id = a.parentid WHERE q.posttypeid = 1 AND a.posttypeid = 2 AND q.closeddate IS NULL AND TIME_TO_STR(q.CreationDate, '%Y') = 2012 AND a.owneruserid = q.owneruserid AND q.score >= 0 AND DATEDIFF(a.creationDate, q.CreationDate) > 1","CreationDate":"2013-01-12 18:20:49","validated":false,"QueryBody_Original":"SELECT  count(distinct q.id) as Questions\n  from posts q\n  join posts a\n    on q.id = a.parentid\n where q.posttypeid = 1\n   and a.posttypeid = 2\n   and q.closeddate is null\n   and DATEPART(yyyy, q.CreationDate) = 2012\n   and a.owneruserid = q.owneruserid\n   and q.score >= 0\n   and datediff(DD, q.CreationDate, a.creationDate) > 1"},{"QuerySetId":91979,"Title":"Questions self-answered after someone else","Description":null,"QueryBody":"SELECT COUNT(DISTINCT q.id) FROM posts AS q JOIN posts AS a ON q.id = a.parentid WHERE q.posttypeid = 1 AND a.posttypeid = 2 AND q.closeddate IS NULL AND (LENGTH(a.body) >= 200 OR (LENGTH(a.body) < 200 AND a.score >= 2)) AND TIME_TO_STR(q.CreationDate, '%Y') = 2012 AND a.owneruserid = q.owneruserid AND DATEDIFF(a.creationDate, q.CreationDate) < 1 AND a.score >= 1 AND q.score >= 0 AND NOT EXISTS(SELECT 1 FROM posts WHERE parentid = a.parentid AND id <> a.id AND score > 0 AND CreationDate < a.CreationDate)","CreationDate":"2013-01-12 18:43:05","validated":false,"QueryBody_Original":"SELECT  count(distinct q.id)\n from posts q\n  join posts a\n    on q.id = a.parentid\n where q.posttypeid = 1\n   and a.posttypeid = 2\n   and q.closeddate is null\n   and ( len(a.body) >= 200\n         or ( len(a.body) < 200\n             and a.score >= 2 \n             )\n        )\n   and DATEPART(yyyy, q.CreationDate) = 2012\n   and a.owneruserid = q.owneruserid\n   and datediff(DD, q.CreationDate, a.creationDate) < 1\n   and a.score >= 1\n   and q.score >= 0\n   and not exists ( SELECT 1 \n                      from posts\n                     where parentid = a.parentid\n                       and id <> a.id\n                       and score > 0\n                       and CreationDate < a.CreationDate\n                           )"},{"QuerySetId":91981,"Title":"Questions self-answered after someone else with a decent answer length","Description":null,"QueryBody":"SELECT COUNT(DISTINCT q.id) FROM posts AS q JOIN posts AS a ON q.id = a.parentid WHERE q.posttypeid = 1 AND a.posttypeid = 2 AND q.closeddate IS NULL AND (LENGTH(a.body) >= 200 OR (LENGTH(a.body) < 200 AND a.score >= 2)) AND TIME_TO_STR(q.CreationDate, '%Y') = 2012 AND a.owneruserid = q.owneruserid AND DATEDIFF(a.creationDate, q.CreationDate) < 1 AND a.score >= 1 AND q.score = 0 AND NOT EXISTS(SELECT 1 FROM posts WHERE parentid = a.parentid AND id <> a.id AND score > 0 AND CreationDate < a.CreationDate)","CreationDate":"2013-01-12 19:02:16","validated":false,"QueryBody_Original":"SELECT  count(distinct q.id)\n from posts q\n  join posts a\n    on q.id = a.parentid\n where q.posttypeid = 1\n   and a.posttypeid = 2\n   and q.closeddate is null\n   and ( len(a.body) >= 200\n         or ( len(a.body) < 200\n             and a.score >= 2 \n             )\n        )\n   and DATEPART(yyyy, q.CreationDate) = 2012\n   and a.owneruserid = q.owneruserid\n   and datediff(DD, q.CreationDate, a.creationDate) < 1\n   and a.score >= 1\n   and q.score = 0\n   and not exists ( SELECT 1 \n                      from posts\n                     where parentid = a.parentid\n                       and id <> a.id\n                       and score > 0\n                       and CreationDate < a.CreationDate\n                           )"},{"QuerySetId":92000,"Title":"Questions self-answered after someone else with a decent answer length and a question score of 0","Description":null,"QueryBody":"SELECT COUNT(DISTINCT q.id) AS \"Questions\", COUNT(DISTINCT q.owneruserid) AS \"Users\" FROM posts AS q JOIN posts AS a ON q.id = a.parentid WHERE q.posttypeid = 1 AND a.posttypeid = 2 AND q.closeddate IS NULL AND (LENGTH(a.body) >= 200 OR (LENGTH(a.body) < 200 AND a.score >= 2)) AND TIME_TO_STR(q.CreationDate, '%Y') = 2012 AND a.owneruserid = q.owneruserid AND DATEDIFF(a.creationDate, q.CreationDate) < 1 AND a.score >= 1 AND q.score = 0 AND NOT EXISTS(SELECT 1 FROM posts WHERE parentid = a.parentid AND id <> a.id AND score > 0 AND CreationDate < a.CreationDate)","CreationDate":"2013-01-12 19:03:20","validated":false,"QueryBody_Original":"SELECT  count(distinct q.id) as [Questions]\n     , count(distinct q.owneruserid) as [Users]\n from posts q\n  join posts a\n    on q.id = a.parentid\n where q.posttypeid = 1\n   and a.posttypeid = 2\n   and q.closeddate is null\n   and ( len(a.body) >= 200\n         or ( len(a.body) < 200\n             and a.score >= 2 \n             )\n        )\n   and DATEPART(yyyy, q.CreationDate) = 2012\n   and a.owneruserid = q.owneruserid\n   and datediff(DD, q.CreationDate, a.creationDate) < 1\n   and a.score >= 1\n   and q.score = 0\n   and not exists ( SELECT 1 \n                      from posts\n                     where parentid = a.parentid\n                       and id <> a.id\n                       and score > 0\n                       and CreationDate < a.CreationDate\n                           )"},{"QuerySetId":92022,"Title":"Top 200 Users from Romania","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bihor%' ORDER BY Reputation DESC LIMIT 2000","CreationDate":"2017-08-23 11:47:34","validated":false,"QueryBody_Original":"SELECT \nTOP (2000) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bihor%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":92031,"Title":"Select user by location ordered by reputation desc","Description":null,"QueryBody":"SELECT Id AS uid, location, reputation FROM users WHERE location LIKE '%##location##%' ORDER BY reputation DESC","CreationDate":"2013-01-12 23:37:30","validated":false,"QueryBody_Original":"SELECT   Id as uid, location, reputation from users where location like '%##location##%'\norder by reputation desc"},{"QuerySetId":92052,"Title":"Top 200 users from Australia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User ID\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%australia%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2013-01-13 16:58:10","validated":false,"QueryBody_Original":"SELECT \nTOP (200) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User ID],\n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%australia%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":92175,"Title":"My Custom ASP.NET Web Pages query","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Title LIKE 'ASP.NET Web Pages%'","CreationDate":"2013-01-14 21:36:45","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE Title like 'ASP.NET Web Pages%';"},{"QuerySetId":92207,"Title":"Get all questions and its answers in one row","Description":null,"QueryBody":"SELECT * FROM posts","CreationDate":"2013-01-15 01:51:22","validated":false,"QueryBody_Original":"SELECT  * from posts"},{"QuerySetId":92749,"Title":"Linked to How to Ubuntu","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount AS Views FROM Posts WHERE Body LIKE '% howtoubuntu.org %' AND ClosedDate IS NULL ORDER BY Views DESC","CreationDate":"2013-01-19 06:31:23","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Score, ViewCount as Views\nFROM Posts\nWHERE Body LIKE '% howtoubuntu.org %'\nAND ClosedDate IS NULL\nORDER BY Views DESC"},{"QuerySetId":93325,"Title":"List of users who have earned specific tag order by date acquired.","Description":null,"QueryBody":"SELECT DENSE_RANK() OVER (ORDER BY a.DATE) AS RankNo, b.ID AS \"User Link\", b.Reputation, a.DATE FROM badges AS a LEFT JOIN Users AS b ON a.UserID = b.ID WHERE UPPER(a.NAME) = UPPER('LEGENDARY') ORDER BY a.Date","CreationDate":"2013-01-23 15:00:20","validated":false,"QueryBody_Original":"SELECT  DENSE_RANK() OVER (ORDER BY a.DATE ASC) RankNo,\n       b.ID [User Link], \n       b.Reputation , \n       a.DATE\nFROM   badges a\n       LEFT JOIN Users b\n          ON a.UserID = b.ID\nWHERE  UPPER(a.NAME) = UPPER('LEGENDARY')\nORDER  BY a.Date ASC"},{"QuerySetId":93334,"Title":"Ubuntu \/ Linux in question","Description":null,"QueryBody":"SELECT Title, Tags, CreationDate, ClosedDate FROM Posts WHERE (Title LIKE '%buntu%' OR Title LIKE '%inux%')","CreationDate":"2013-01-23 17:09:17","validated":false,"QueryBody_Original":"SELECT  Title, Tags, CreationDate, ClosedDate \nfrom Posts \nwhere (Title like '%buntu%' \nor Title like '%inux%')"},{"QuerySetId":93344,"Title":"Ubuntu \/ Linux in question title","Description":null,"QueryBody":"SELECT Id, Title, Tags, LastActivityDate, ClosedDate FROM Posts WHERE Title LIKE '%buntu%' OR Title LIKE '%inux%' ORDER BY LastActivityDate DESC","CreationDate":"2013-01-23 17:22:47","validated":false,"QueryBody_Original":"SELECT  Id, Title, Tags, LastActivityDate, ClosedDate\nfrom Posts\nwhere Title like '%buntu%' or Title like '%inux%'\norder by LastActivityDate desc"},{"QuerySetId":93354,"Title":"Listing all users from Qu\u00e9bec","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%quebec%' OR UPPER(Location) LIKE '%QC' ORDER BY Reputation DESC","CreationDate":"2013-01-23 19:16:51","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%quebec%'\n    OR UPPER(Location) LIKE '%QC'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":93357,"Title":"Find \"in ubuntu\" pattern on askubuntu","Description":"http:\/\/meta.askubuntu.com\/questions\/5866\/should-ubuntu-and-linux-be-kept-on-question-titles","QueryBody":"SELECT Id, Title, Tags FROM Posts WHERE (LOWER(Title) LIKE '% [io]n ubuntu%' OR LOWER(Title) LIKE '% with ubuntu%' OR LOWER(Title) LIKE '% [io]n my ubuntu%' OR LOWER(Title) LIKE '% with my ubuntu%' OR LOWER(Title) LIKE '% [io]n linux%' OR LOWER(Title) LIKE '% with linux%' OR LOWER(Title) LIKE '% [io]n my linux%' OR LOWER(Title) LIKE '% with my linux%' OR LOWER(Title) LIKE '% [io]n gnu\/linux%' OR LOWER(Title) LIKE '% with gnu\/linux%' OR LOWER(Title) LIKE '% [io]n my gnu\/linux%' OR LOWER(Title) LIKE '% with my gnu\/linux%') AND NOT (LOWER(Title) LIKE '%ubuntu 9._%' OR LOWER(Title) LIKE '%ubuntu 1[0123]._%') ORDER BY LastActivityDate","CreationDate":"2013-01-23 20:20:31","validated":false,"QueryBody_Original":"SELECT  Id, Title, Tags\nfrom Posts\nwhere (lower(Title) like '% [io]n ubuntu%'\n    or lower(Title) like '% with ubuntu%'\n    or lower(Title) like '% [io]n my ubuntu%'\n    or lower(Title) like '% with my ubuntu%'\n    or lower(Title) like '% [io]n linux%'\n    or lower(Title) like '% with linux%'\n    or lower(Title) like '% [io]n my linux%'\n    or lower(Title) like '% with my linux%'\n    or lower(Title) like '% [io]n gnu\/linux%'\n    or lower(Title) like '% with gnu\/linux%'\n    or lower(Title) like '% [io]n my gnu\/linux%'\n    or lower(Title) like '% with my gnu\/linux%')\n and not\n      (lower(Title) like '%ubuntu 9._%'\n    or lower(Title) like '%ubuntu 1[0123]._%')         \norder by LastActivityDate"},{"QuerySetId":93358,"Title":"How many unique users commented on each post?","Description":null,"QueryBody":"SELECT COUNT(DISTINCT Comments.UserId) FROM Posts JOIN Comments ON Posts.Id = Comments.PostId WHERE Posts.Id = 99934 GROUP BY Posts.Id","CreationDate":"2013-01-23 21:32:03","validated":false,"QueryBody_Original":"SELECT  count(distinct Comments.UserId) from Posts \n  join Comments on Posts.Id=Comments.PostId\n  where Posts.Id=99934\n  group by Posts.Id"},{"QuerySetId":93361,"Title":"How many unique users responded to each question?","Description":null,"QueryBody":"SELECT COUNT(DISTINCT Comments.UserId) FROM Posts JOIN Comments ON Posts.Id = Comments.PostId WHERE Posts.ParentId = 520210","CreationDate":"2013-01-23 21:43:25","validated":false,"QueryBody_Original":"SELECT  count(distinct Comments.UserId) from Posts\n  join Comments on Posts.Id=Comments.PostId\n  where Posts.ParentId=520210"},{"QuerySetId":93436,"Title":"Rejected migrations from SO in 2013","Description":null,"QueryBody":"SELECT MigratedPosts.Id AS \"Post Link\", MigrationHistory.CreationDate AS DateMigrated, CloseHistory.CreationDate AS DateClosed, MigrationHistory.Comment AS OriginalUrl FROM Posts AS MigratedPosts JOIN Posts AS ClosedPosts ON ClosedPosts.Id = MigratedPosts.Id JOIN PostHistory AS MigrationHistory ON MigrationHistory.PostId = MigratedPosts.Id JOIN PostHistory AS CloseHistory ON CloseHistory.PostId = ClosedPosts.Id WHERE MigrationHistory.PostHistoryTypeId = 36 AND CloseHistory.PostHistoryTypeId = 10 AND MigrationHistory.Comment LIKE 'from http:\/\/superuser.com%'","CreationDate":"2014-01-14 07:43:47","validated":false,"QueryBody_Original":"SELECT  MigratedPosts.Id AS [Post Link], \nMigrationHistory.CreationDate AS DateMigrated,\nCloseHistory.CreationDate AS DateClosed,\nMigrationHistory.Comment AS OriginalUrl\nFROM Posts AS MigratedPosts\nJOIN Posts AS ClosedPosts ON ClosedPosts.Id = MigratedPosts.Id\nJOIN PostHistory AS MigrationHistory ON MigrationHistory.PostId = MigratedPosts.Id\nJOIN PostHistory AS CloseHistory ON CloseHistory.PostId = ClosedPosts.Id\nWHERE MigrationHistory.PostHistoryTypeId = 36\nAND CloseHistory.PostHistoryTypeId = 10\nAND MigrationHistory.Comment LIKE 'from http:\/\/superuser.com%'\n--AND YEAR(MigrationHistory.CreationDate) = 2013"},{"QuerySetId":93574,"Title":"Questions by date - backwards","Description":null,"QueryBody":"SELECT id, Score, ViewCount, Title, Tags, LastActivityDate, CreationDate FROM Posts WHERE PostTypeId = 1 ORDER BY CreationDate LIMIT 50","CreationDate":"2013-03-09 06:19:06","validated":false,"QueryBody_Original":"SELECT  TOP 50\nid, Score, ViewCount, Title, Tags, LastActivityDate, CreationDate\nFROM Posts\nWHERE PostTypeId = 1\nORDER BY CreationDate ASC"},{"QuerySetId":93970,"Title":"Top Finland Java Answers writers","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, COUNT(*) AS ClojureAnswers FROM Users AS u, Posts AS p, Posts AS pp WHERE u.Id IN (SELECT Id FROM Users WHERE Location LIKE ('%Finland')) AND p.OwnerUserId = u.Id AND pp.Id = p.ParentId AND pp.Tags LIKE ('%<clojure>%') GROUP BY u.DisplayName, u.Reputation ORDER BY ClojureAnswers DESC","CreationDate":"2013-01-29 17:15:20","validated":false,"QueryBody_Original":"SELECT  u.DisplayName, u.Reputation, count(*) as ClojureAnswers from Users u, Posts p, Posts pp where u.Id in (\n    SELECT Id\n    from Users \n    where Location like ('%Finland')\n  )\n  and p.OwnerUserId = u.Id\n  and pp.Id = p.ParentId\n  and pp.Tags like ('%<clojure>%')\n  group by u.DisplayName, u.Reputation\n  order by ClojureAnswers desc"},{"QuerySetId":93985,"Title":"Users with most Revival badges","Description":"Most decorated users\r\n","QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS Badges FROM Badges WHERE Badges.Name = 'Necromancer' OR Badges.Name = 'Revival' GROUP BY UserId ORDER BY Badges DESC LIMIT 100","CreationDate":"2016-02-23 07:02:51","validated":false,"QueryBody_Original":"SELECT  TOP 100 UserId AS [User Link], count(*) AS Badges\nFROM Badges\nWHERE \nBadges.Name = 'Necromancer'\nOR \nBadges.Name = 'Revival'\nGROUP BY UserId\nORDER BY Badges DESC"},{"QuerySetId":94005,"Title":"Posts created since 2013-01-13 at noon, who had activity one minute later","Description":null,"QueryBody":"SELECT p.Title, CreationDate, LastActivityDate FROM Posts AS p WHERE CreationDate > '2013-01-13 12:00:00' AND LastActivityDate < '2013-01-13 12:01:00' ORDER BY CreationDate DESC","CreationDate":"2013-01-30 02:34:33","validated":false,"QueryBody_Original":"SELECT  p.Title, CreationDate, LastActivityDate\nFROM Posts p\nWHERE\nCreationDate > '2013-01-13 12:00:00'\nAND\nLastActivityDate < '2013-01-13 12:01:00'\nORDER BY CreationDate DESC"},{"QuerySetId":94219,"Title":"Questions with NULL ViewCount ","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount, CreationDate FROM Posts WHERE PostTypeId = 1 AND ViewCount IS NULL ORDER BY CreationDate","CreationDate":"2013-01-30 18:19:30","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], ViewCount, CreationDate FROM Posts \nWHERE PostTypeId = 1 AND ViewCount IS NULL\nORDER BY CreationDate"},{"QuerySetId":94269,"Title":"100 users with the lowest reputation who have earned a gold badge (IN clause)","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", * FROM Users AS u WHERE u.Id IN (SELECT UserId FROM Badges WHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero')) ORDER BY Reputation LIMIT 100","CreationDate":"2013-01-30 21:37:37","validated":false,"QueryBody_Original":"SELECT  TOP 100 u.Id [User Link], *\nFROM Users u\nWHERE u.Id IN (SELECT UserId FROM Badges\n                   WHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero'))\nORDER BY Reputation"},{"QuerySetId":94274,"Title":"Top 200 users from Portland","Description":"Lists the top 100 Stackoverflow users from Portland, according to their profile information.","QueryBody":"SELECT Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users WHERE AboutMe LIKE N'%at Google%' ORDER BY reputation DESC LIMIT 200","CreationDate":"2013-01-30 21:48:47","validated":false,"QueryBody_Original":"SELECT  TOP 200\n   Id as [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   AboutMe like N'%at Google%'\nORDER BY\n   reputation DESC"},{"QuerySetId":94490,"Title":"Questions for which the accepted answer was posted on the same day they were asked","Description":null,"QueryBody":"SELECT datasource.SameDayAcceptedAnswer, datasource.TotalQuestions, CAST(datasource.SameDayAcceptedAnswer AS FLOAT) \/ CAST(datasource.TotalQuestions AS FLOAT) AS Ratio FROM (SELECT COUNT(acceptedresponses.questionid) AS SameDayAcceptedAnswer, allquestions.totalcount AS TotalQuestions FROM (SELECT question.id AS questionid, CAST(answer.creationdate - question.creationdate AS FLOAT) AS timediff FROM posts AS question JOIN posts AS answer ON answer.id = question.acceptedanswerid WHERE question.posttypeid = '1') AS acceptedresponses LEFT OUTER JOIN (SELECT COUNT(id) AS totalcount FROM posts WHERE posttypeid = '1') AS allquestions ON 1 = 1 WHERE acceptedresponses.timediff <= 1 GROUP BY allquestions.totalcount) AS datasource","CreationDate":"2013-01-31 22:28:44","validated":false,"QueryBody_Original":"SELECT  datasource.SameDayAcceptedAnswer, datasource.TotalQuestions, CAST(datasource.SameDayAcceptedAnswer AS FLOAT) \/ CAST(datasource.TotalQuestions AS FLOAT) as Ratio FROM (SELECT COUNT(acceptedresponses.questionid) as SameDayAcceptedAnswer, allquestions.totalcount as TotalQuestions FROM (SELECT question.id as questionid, cast(answer.creationdate - question.creationdate as float) as timediff from posts question join posts answer on answer.id = question.acceptedanswerid where question.posttypeid = '1') acceptedresponses LEFT OUTER JOIN (SELECT COUNT(id) AS totalcount FROM posts WHERE posttypeid = '1') allquestions ON 1=1 WHERE acceptedresponses.timediff <= 1 GROUP BY allquestions.totalcount) datasource"},{"QuerySetId":94920,"Title":"Most common tags with missing wiki","Description":"Finds tags that are missing a tag wiki (regardless of tag excerpt).","QueryBody":"SELECT Count, ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, ExcerptPostId AS \"Post Link\", WikiPostId AS \"Post Link\" FROM Tags AS t LEFT JOIN Posts AS p ON p.Id = t.WikiPostId WHERE ExcerptPostId IS NULL \/* no wiki post *\/ OR LENGTH(Body) = 0 \/* wiki empty *\/ ORDER BY Count DESC","CreationDate":"2017-11-03 02:24:56","validated":false,"QueryBody_Original":"SELECT  Count,\n       ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName,\n       ExcerptPostId                              AS [Post Link],\n       WikiPostId                                 AS [Post Link]\nFROM   Tags t\n       LEFT JOIN Posts p\n         ON p.Id = t.WikiPostId\nWHERE  ExcerptPostId IS NULL -- no wiki post\n       OR LEN(Body) = 0   -- wiki empty\nORDER  BY Count DESC"},{"QuerySetId":95392,"Title":"Higest rated user with more downvotes than upvotes","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation FROM Users AS u WHERE u.UpVotes < u.DownVotes ORDER BY u.Reputation DESC LIMIT 100","CreationDate":"2013-02-05 15:25:28","validated":false,"QueryBody_Original":"SELECT  TOP 100 u.Id AS [User Link], u.Reputation\nFROM Users u\nWHERE u.UpVotes < u.DownVotes\nORDER BY u.Reputation DESC"},{"QuerySetId":95539,"Title":"Location of Users based on posts","Description":null,"QueryBody":"SELECT u.Location, COUNT(u.DisplayName) FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserID WHERE p.Tags LIKE ('%android%') AND NOT p.ParentId IS NULL GROUP BY u.Location ORDER BY 1","CreationDate":"2013-02-06 00:04:09","validated":false,"QueryBody_Original":"SELECT  u.Location, count(u.DisplayName)\nFROM Posts p\nJOIN Users u on u.Id = p.OwnerUserID\nWHERE p.Tags like ('%android%') and p.ParentId IS NOT NULL\nGROUP BY u.Location\nORDER BY 1"},{"QuerySetId":95666,"Title":"Instances of \"sudo gedit\" ","Description":"\"sudo gedit\" instead of \"gksudo gedit\" or similar (common misadvice, can make root own dotfiles in home dir)","QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount AS Views FROM Posts WHERE PostTypeId = 2 AND Body LIKE '%sudo gedit%' AND NOT Body LIKE '%gksudo gedit%' ORDER BY Views DESC","CreationDate":"2013-02-06 19:32:02","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Score, ViewCount as Views\nFROM Posts\nWHERE PostTypeId = 2\nAND Body LIKE '%sudo gedit%'\nAND Body NOT LIKE '%gksudo gedit%'\nORDER BY Views DESC"},{"QuerySetId":95673,"Title":"Get all Hadoop and MapReduce questions","Description":null,"QueryBody":"SELECT * FROM Posts WHERE tags LIKE '%mapreduce%' OR tags LIKE '%hadoop%'","CreationDate":"2013-02-06 18:53:44","validated":false,"QueryBody_Original":"SELECT  * \nFROM Posts \nWHERE\n  tags LIKE '%mapreduce%' OR \n  tags LIKE '%hadoop%';"},{"QuerySetId":96221,"Title":"Answers with scores over 20 in 2012","Description":null,"QueryBody":"SELECT * FROM Posts WHERE YEAR(CreationDate) = 2012 AND Score > 20","CreationDate":"2013-02-08 02:37:01","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE YEAR(CreationDate) = 2012 AND Score>20;"},{"QuerySetId":96480,"Title":"Posts closed since 01\/2012 by month","Description":null,"QueryBody":"SELECT CAST(YEAR(p.CreationDate) AS TEXT(10)) + '\/' + CAST(MONTH(p.CreationDate) AS TEXT(19)) AS dt, COUNT(p.Id) AS pcount FROM Posts AS p WHERE p.CreationDate > '2012-01-01' GROUP BY YEAR(p.CreationDate), MONTH(p.CreationDate)","CreationDate":"2020-01-23 15:46:10","validated":false,"QueryBody_Original":"SELECT  cast (year(p.CreationDate) as  varchar(10)) + '\/' + cast(month(p.CreationDate) as varchar(19)) as dt\n, count(p.Id) as pcount\nfrom Posts AS p\nWhere p.CreationDate > '2012-01-01' \ngroup by year(p.CreationDate), month(p.CreationDate)"},{"QuerySetId":96985,"Title":"Tags a user questions\/answers involved in","Description":null,"QueryBody":"SELECT Users.Id, Posts.Id, Posts.Tags FROM Posts INNER JOIN Users ON Users.Id = Posts.OwnerUserId","CreationDate":"2013-02-11 18:58:39","validated":false,"QueryBody_Original":"SELECT  Users.Id,Posts.Id , Posts.Tags\nfrom Posts\nInner Join Users on Users.Id = Posts.OwnerUserId"},{"QuerySetId":97212,"Title":"Random questions id's older than a given date","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE CreationDate <= '##date1##' AND PostTypeId = 1 ORDER BY NEWID()","CreationDate":"2013-02-12 02:13:54","validated":false,"QueryBody_Original":"SELECT  Id from \nPosts  \nwhere CreationDate <='##date1##' and PostTypeId=1\norder by  NEWID()"},{"QuerySetId":97659,"Title":"Wikitravel mentions (for offline postprocessing)","Description":null,"QueryBody":"SELECT p.Id, p.ParentId, p.PostTypeId, p.Body, t.TagName FROM Posts AS p LEFT JOIN Tags AS t ON p.Id = t.WikiPostId WHERE p.Body LIKE '%http:\/\/wikitravel.org\/%'","CreationDate":"2013-02-14 07:07:45","validated":false,"QueryBody_Original":"SELECT \n  p.Id, p.ParentId, p.PostTypeId, p.Body, t.TagName\nFROM Posts p\nLEFT JOIN Tags t\nON p.Id = t.WikiPostId\nWHERE p.Body LIKE '%http:\/\/wikitravel.org\/%'"},{"QuerySetId":97724,"Title":"Number of users who posted answers in last month","Description":null,"QueryBody":"SELECT COUNT(DISTINCT answer.OwnerUserId) FROM Posts AS answer JOIN Posts AS question ON answer.ParentId = question.Id WHERE DATEDIFF(CURRENT_TIMESTAMP(), answer.creationdate) < 30.5 AND STR_POSITION(question.Tags, '<python>') > 0 AND answer.PostTypeId = 2 \/* 2 == answer (1 == question) *\/","CreationDate":"2018-05-24 03:06:32","validated":false,"QueryBody_Original":"SELECT  count(distinct answer.OwnerUserId) from \n  Posts answer JOIN Posts question on answer.ParentId = question.Id\n  where datediff(day, answer.creationdate, GETDATE()) < 30.5\n  AND CHARINDEX('<python>', question.Tags) > 0\n  AND answer.PostTypeId = 2 -- 2 == answer (1 == question)\n;"},{"QuerySetId":97735,"Title":"How many people put stackoverflow.com as their personal website?","Description":"It's amazing how many people just dislike showing any personal link in the WebsiteUrl, and instead they put http:\/\/stackoverflow.com, their personal SO profile link, or any sub-link of stackoverflow!\r\n\r\nThis simple query shows people who do that.","QueryBody":"SELECT Id, DisplayName, WebsiteUrl FROM Users WHERE LOWER(location) LIKE '%syria%'","CreationDate":"2013-02-14 15:33:45","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, WebsiteUrl\nFROM Users\nWHERE lower(location) Like '%syria%';"},{"QuerySetId":97792,"Title":"Number of lines in PostHistory ","Description":null,"QueryBody":"SELECT COUNT(*) AS numPostHistory FROM PostHistory","CreationDate":"2013-02-14 22:27:29","validated":false,"QueryBody_Original":"SELECT \ncount(*) numPostHistory\nfrom PostHistory"},{"QuerySetId":98097,"Title":"100 users with the lowest reputation who have earned a gold badge (EXISTS)","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", * FROM Users AS u WHERE NOT EXISTS(SELECT * FROM Badges AS b WHERE b.UserID = u.Id AND b.Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero')) ORDER BY Reputation DESC LIMIT 100","CreationDate":"2013-03-16 15:56:32","validated":false,"QueryBody_Original":"SELECT  TOP 100 u.Id [User Link], *\nFROM Users u\nWHERE NOT EXISTS (SELECT * FROM Badges b\n              WHERE b.UserID = u.Id AND b.Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero'))\nORDER BY Reputation DESC"},{"QuerySetId":98482,"Title":"Most of the questions by rule should be closed and\/or deleted","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", Q.Score, Q.ViewCount, ShortLInkAnswers.Count AS NumShortLinkAnswers FROM Posts AS Q INNER JOIN PostHistory AS H ON H.PostId = Q.Id INNER JOIN (SELECT COUNT(*) AS Count, A.ParentID FROM Posts AS A WHERE A.posttypeid = 2 AND A.body LIKE '%http:\/\/%' AND LENGTH(A.body) BETWEEN 40 AND 80 GROUP BY A.ParentID) AS ShortLinkAnswers ON ShortLinkAnswers.ParentID = Q.Id WHERE Q.posttypeid = 1 AND Q.ClosedDate IS NULL AND ShortLinkAnswers.count >= 0 AND Q.Score <= 25 GROUP BY Q.Id, Q.Score, Q.ViewCount, ShortLInkAnswers.Count HAVING SUM(CASE WHEN H.PostHistoryTypeId = 14 THEN -1 WHEN H.PostHistoryTypeId = 15 THEN 1 ELSE 0 END) >= 0 ORDER BY Q.score DESC, Q.ViewCount DESC","CreationDate":"2013-02-22 17:12:45","validated":false,"QueryBody_Original":"SELECT  \nQ.Id as [Post Link],\nQ.Score,\nQ.ViewCount,\nShortLInkAnswers.Count as NumShortLinkAnswers\nfrom\n Posts as Q\n inner join PostHistory H ON H.PostId = Q.Id\n inner join \n (SELECT\n count(*) as Count,\n A.ParentID\n from\n Posts as A \n where\n A.posttypeid = 2\n and A.body like '%http:\/\/%' \n and len(A.body) between 40 and 80\n group by A.ParentID\n ) as ShortLinkAnswers on ShortLinkAnswers.ParentID = Q.Id\nwhere\n Q.posttypeid = 1\n and Q.ClosedDate is null\n and ShortLinkAnswers.count >= 0 \n AND Q.Score <= 25\ngroup by\n Q.Id,\n Q.Score,\n Q.ViewCount,\n ShortLInkAnswers.Count\nhaving \n SUM(CASE WHEN H.PostHistoryTypeId = 14 THEN -1 WHEN H.PostHistoryTypeId = 15 then 1 ELSE 0 END) >= 0\norder by \n Q.score desc, \n Q.ViewCount Desc"},{"QuerySetId":98496,"Title":"Sum of top 1% of view counts (for real) [in last month]","Description":null,"QueryBody":"SELECT COUNT(*), SUM(CAST(subq.ViewCount AS INT)) FROM (SELECT ViewCount, Id FROM Posts WHERE ViewCount > 0 AND PostTypeId = 1 AND ClosedDate IS NULL AND CommunityOwnedDate IS NULL AND STR_POSITION(Tags, '<python>') > 0 ORDER BY ViewCount DESC LIMIT 1000000) AS subq","CreationDate":"2019-04-22 05:53:35","validated":false,"QueryBody_Original":"SELECT  Count(*), sum(cast(subq.ViewCount as bigint)) FROM \n  (SELECT TOP 1000000 ViewCount, Id FROM Posts \n    where ViewCount > 0\n    AND PostTypeId = 1\n    AND ClosedDate is NULL\n    AND CommunityOwnedDate is null\n    AND CHARINDEX('<python>', Tags) > 0\n    \n    --AND datediff(day, creationdate, GETDATE()) < 600\n    --AND datediff(day, creationdate, GETDATE()) > 544\n    \n  ORDER BY ViewCount DESC) AS subq;"},{"QuerySetId":98626,"Title":"Number of comments by day of week","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, 'WEEKDA%Y'), COUNT(Id) FROM Comments GROUP BY TIME_TO_STR(CreationDate, 'WEEKDA%Y')","CreationDate":"2013-02-19 19:36:41","validated":false,"QueryBody_Original":"SELECT  DatePart(WEEKDAY, CreationDate), count(Id)\nFROM Comments\nGROUP BY DatePart(WEEKDAY, CreationDate)"},{"QuerySetId":99017,"Title":"Total number of users in Stack Overflow","Description":null,"QueryBody":"SELECT COUNT(*) FROM users","CreationDate":"2013-02-21 20:00:54","validated":false,"QueryBody_Original":"SELECT  count(*) from users"},{"QuerySetId":99294,"Title":"Does anyone answer I Downvoted it ","Description":null,"QueryBody":"SELECT a.text, a.creationDate, a.PostID AS \"Post Link\" FROM comments AS wdv INNER JOIN Comments AS a ON wdv.postid = a.postid AND wdv.creationDate < a.creationDate WHERE (wdv.text LIKE '%why%downvot%' OR wdv.text LIKE '%downvot%expla%') AND (a.text LIKE '%I%downvot%' OR a.text LIKE '%I%downvot%' OR a.text LIKE '%-1%' OR a.text LIKE '%wrong%')","CreationDate":"2013-02-23 03:27:22","validated":false,"QueryBody_Original":"SELECT  \n       \n       a.text,\n       a.creationDate,\n       a.PostID [Post Link]\nfrom \n    comments wdv\n    INNER JOIN Comments a\n    ON wdv.postid = a.postid\n       and wdv.creationDate < a.creationDate\n\nwhere \n      (wdv.text like '%why%downvot%'\n      or wdv.text like '%downvot%expla%')\n      \n      and\n      \n      (a.text like '%I%downvot%'\n      or\n      a.text like '%I%downvot%'\n      or\n      a.text like '%-1%'\n      or\n      a.text like '%wrong%')"},{"QuerySetId":99454,"Title":"Num votes in last month","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes WHERE DATEDIFF('2\/22\/2013', creationdate) < 30.5","CreationDate":"2013-02-23 06:56:13","validated":false,"QueryBody_Original":"SELECT  count(*) from Votes \n  where datediff(day, creationdate, '2\/22\/2013') < 30.5;"},{"QuerySetId":99832,"Title":"Tinkering with votes and posts","Description":null,"QueryBody":"SELECT v.id, p.id FROM votes AS v, posts AS p WHERE v.postid = p.id AND v.votetypeid = 1","CreationDate":"2013-02-26 02:00:15","validated":false,"QueryBody_Original":"SELECT  v.id, p.id from\nvotes v, posts p\nwhere v.postid = p.id\nand v.votetypeid = 1"},{"QuerySetId":100915,"Title":"Average scores of last month's questions and answers","Description":null,"QueryBody":"SELECT 1 AS No, 'Questions' AS \"Column\", COUNT(Id) AS Total, AVG(CAST(Score AS FLOAT)) AS \"Average score\", STDEV(Score) AS \"Score Std Deviation\" FROM Posts AS Q WHERE Q.ParentID IS NULL AND Q.CreationDate > DATEADD(m, -1, GETDATE()) UNION SELECT 2 AS No, 'Answers' AS \"Column\", COUNT(Id) AS Total, AVG(CAST(Score AS FLOAT)) AS Average, STDEV(Score) AS Deviation FROM Posts AS A WHERE NOT A.ParentID IS NULL AND A.CreationDate > DATEADD(m, -1, GETDATE())","CreationDate":"2013-03-03 13:52:06","validated":false,"QueryBody_Original":"SELECT  1 AS No, 'Questions' As [Column], Count(Id) AS Total, AVG(CAST(Score AS float)) AS [Average score], STDEV(Score) AS [Score Std Deviation]\nFROM Posts AS Q\nWHERE Q.ParentID Is Null AND Q.CreationDate >  DateAdd(m, -1, GETDATE())\nUNION SELECT 2 AS No, 'Answers' As [Column], Count(Id) AS Total, AVG(CAST(Score AS float)) AS Average, STDEV(Score) AS Deviation\nFROM Posts AS A\nWHERE A.ParentID Is Not Null AND A.CreationDate >  DateAdd(m, -1, GETDATE())"},{"QuerySetId":101573,"Title":"Find questions solved by fixing typos","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Body FROM Posts AS q INNER JOIN Posts AS a ON a.Id = q.AcceptedAnswerId WHERE LENGTH(a.Body) < 200 AND q.ClosedDate IS NULL AND (LOWER(a.Body) LIKE '%typo%' OR LOWER(a.Body) LIKE '%spelled wrong%' OR LOWER(a.Body) LIKE '%spelled incorrectly%')","CreationDate":"2020-04-20 10:03:04","validated":false,"QueryBody_Original":"SELECT  a.Id as [Post Link], a.Body\nfrom Posts q\ninner join Posts a on a.Id = q.AcceptedAnswerId\nwhere len(a.Body) < 200\nand q.ClosedDate IS NULL\nand (\n      lower(a.Body) like '%typo%'\n   or lower(a.Body) like '%spelled wrong%'\n   or lower(a.Body) like '%spelled incorrectly%'\n)"},{"QuerySetId":101589,"Title":"Top 1000 Most Revised Answers on StackOverflow","Description":null,"QueryBody":"SELECT PostId, COUNT(*) FROM dbo.PostHistory AS PH JOIN dbo.Posts AS P ON PH.PostId = P.Id WHERE P.PostTypeId IN (1, 2) GROUP BY PostId ORDER BY 2 DESC LIMIT 1000","CreationDate":"2017-07-04 09:59:42","validated":false,"QueryBody_Original":"SELECT  TOP 1000 PostId, COUNT(*)\nFROM dbo.PostHistory PH\nJOIN dbo.Posts P ON PH.PostId = P.Id\nWHERE P.PostTypeId IN (1,2)\nGROUP BY PostId\nORDER BY 2 DESC"},{"QuerySetId":101614,"Title":"Questions possibly solved by correcting typos","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Body, a.CreationDate FROM Posts AS q INNER JOIN Posts AS a ON a.Id = q.AcceptedAnswerId WHERE LENGTH(a.Body) > 200 AND LENGTH(a.Body) < 300 AND q.ClosedDate IS NULL AND (LOWER(a.Body) LIKE '%typo%' OR LOWER(a.Body) LIKE '%spelled wrong%' OR LOWER(a.Body) LIKE '%spelled incorrectly%' OR LOWER(a.Body) LIKE '%spelt%' OR LOWER(a.Body) LIKE '%fix your spelling%') ORDER BY a.CreationDate DESC","CreationDate":"2014-07-16 00:13:08","validated":false,"QueryBody_Original":"SELECT  a.Id as [Post Link], a.Body, a.CreationDate\nfrom Posts q\ninner join Posts a on a.Id = q.AcceptedAnswerId\nwhere len(a.Body) > 200\nand len(a.Body) < 300\nand q.ClosedDate IS NULL\nand (\n      lower(a.Body) like '%typo%'\n   or lower(a.Body) like '%spelled wrong%'\n   or lower(a.Body) like '%spelled incorrectly%'\n   or lower(a.Body) like '%spelt%'\n   or lower(a.Body) like '%fix your spelling%'\n)\norder by a.CreationDate desc"},{"QuerySetId":102146,"Title":"select * from Posts where id = 1","Description":null,"QueryBody":"SELECT * FROM Posts WHERE id = 1","CreationDate":"2013-03-08 22:11:44","validated":false,"QueryBody_Original":"SELECT  * from Posts where id = 1"},{"QuerySetId":102171,"Title":"Questions with more than n answers","Description":null,"QueryBody":"SELECT q.Id, q.Title, q.Body, q.AnswerCount, a.Id, a.Body, q.CreationDate, a.CreationDate, q.ClosedDate, a.ClosedDate, q.ViewCount, q.OwnerUserId, a.OwnerUserId, q.FavoriteCount FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 AND q.AnswerCount >= 10","CreationDate":"2013-03-08 23:22:21","validated":false,"QueryBody_Original":"SELECT  q.Id, q.Title, q.Body, q.AnswerCount, a.Id, a.Body, q.CreationDate, a.CreationDate, q.ClosedDate, a.ClosedDate, q.ViewCount, q.OwnerUserId, a.OwnerUserId, q.FavoriteCount\nfrom Posts q inner join Posts a on a.ParentId = q.Id\nwhere q.PostTypeId=1 and a.PostTypeId=2 and q.AnswerCount>=10;"},{"QuerySetId":102466,"Title":"Users who downvoted you the most","Description":null,"QueryBody":"SELECT Score FROM Posts WHERE Id = 298680","CreationDate":"2016-03-29 20:07:34","validated":false,"QueryBody_Original":"SELECT  Score from Posts WHERE Id = 298680"},{"QuerySetId":102666,"Title":"First 20 Moroccan users in StackOverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Id, Reputation FROM Users WHERE LOWER(Location) LIKE '%morocco%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2013-04-10 14:40:18","validated":false,"QueryBody_Original":"SELECT \nTOP (20) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], Id,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%morocco%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":102803,"Title":"Best of Minimal: Votes \/ Length (non-wiki)","Description":"Top 1000 (non-wiki) \"quality\" posts as defined by (votes * post length). Idea taken from: http:\/\/data.stackexchange.com\/stackoverflow\/query\/36092\/","QueryBody":"SELECT (CASE p.PostTypeId WHEN 1 THEN 'Q' WHEN 2 THEN 'A' END) AS \"T\", p.Id AS \"Post Link\", p.OwnerUserId AS \"User Link\", p.Score AS \"Score\", LENGTH(p.Body) AS \"Post Length\", (CAST((p.Score) AS FLOAT)) \/ (CAST(LENGTH(p.Body) AS FLOAT)) AS \"Weighted Score\" FROM Posts AS p WHERE (p.PostTypeId = 1 OR p.PostTypeId = 2) AND CommunityOwnedDate IS NULL ORDER BY \"Weighted Score\" DESC LIMIT 1000","CreationDate":"2013-03-13 04:41:19","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    (CASE p.PostTypeId\n        WHEN 1 THEN 'Q'\n        WHEN 2 THEN 'A'\n    END) as [T],\n    p.Id as [Post Link],\n    p.OwnerUserId as [User Link],\n    p.Score as [Score],\n    LEN(p.Body) as [Post Length],\n    (CAST ((p.Score) AS float)) \/ (CAST (LEN(p.Body) AS float)) as [Weighted Score]\nFROM\n    Posts p\n    WHERE (p.PostTypeId = 1 OR p.PostTypeId = 2) AND\n    CommunityOwnedDate is null\nORDER BY\n    [Weighted Score] DESC"},{"QuerySetId":102847,"Title":"How many times \"does not work was used\"","Description":null,"QueryBody":"SELECT COUNT(\"Posts\".\"Id\") FROM \"Posts\" INNER JOIN \"Users\" ON (\"Posts\".\"OwnerUserId\" = \"Users\".\"Id\") WHERE LOWER(\"Users\".\"Location\") LIKE '%india%' AND (LOWER(\"Body\") LIKE '%do not work%' OR LOWER(\"Body\") LIKE '%does not work%' OR LOWER(\"Body\") LIKE '%do not works%' OR LOWER(\"Body\") LIKE '%does not works%' OR LOWER(\"Body\") LIKE '%don''t work%' OR LOWER(\"Body\") LIKE '%doesn''t work%' OR LOWER(\"Body\") LIKE '%don''t works%' OR LOWER(\"Body\") LIKE '%doesn''t works%' OR LOWER(\"Title\") LIKE '%do not work%' OR LOWER(\"Title\") LIKE '%does not work%' OR LOWER(\"Title\") LIKE '%do not works%' OR LOWER(\"Title\") LIKE '%does not works%' OR LOWER(\"Title\") LIKE '%don''t work%' OR LOWER(\"Title\") LIKE '%doesn''t work%' OR LOWER(\"Title\") LIKE '%don''t works%' OR LOWER(\"Title\") LIKE '%doesn''t works%')","CreationDate":"2013-03-13 22:13:39","validated":false,"QueryBody_Original":"SELECT \ncount([Posts].[Id])\nFROM\n[Posts]\nINNER JOIN\n[Users]\nON\n([Posts].[OwnerUserId] = [Users].[Id])\nWHERE\nLOWER([Users].[Location]) LIKE '%india%' AND\n(LOWER([Body]) LIKE '%do not work%' OR \nLOWER([Body]) LIKE '%does not work%' OR\nLOWER([Body]) LIKE '%do not works%' OR\nLOWER([Body]) LIKE '%does not works%' OR\nLOWER([Body]) LIKE '%don''t work%' OR\nLOWER([Body]) LIKE '%doesn''t work%' OR\nLOWER([Body]) LIKE '%don''t works%' OR\nLOWER([Body]) LIKE '%doesn''t works%' OR\nLOWER([Title]) LIKE '%do not work%' OR \nLOWER([Title]) LIKE '%does not work%' OR\nLOWER([Title]) LIKE '%do not works%' OR\nLOWER([Title]) LIKE '%does not works%' OR\nLOWER([Title]) LIKE '%don''t work%' OR\nLOWER([Title]) LIKE '%doesn''t work%' OR\nLOWER([Title]) LIKE '%don''t works%' OR\nLOWER([Title]) LIKE '%doesn''t works%'\n)"},{"QuerySetId":103129,"Title":"Top users: Any country having atleast 100 reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%##CountryName##%' AND Reputation >= 100 ORDER BY Reputation DESC","CreationDate":"2020-09-14 14:32:48","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%##CountryName##%'\n    AND Reputation >= 100\nORDER BY\n    Reputation DESC;"},{"QuerySetId":103131,"Title":"Cuban users ordered by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%cuba%' ORDER BY Reputation DESC","CreationDate":"2013-03-14 08:52:57","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%cuba%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":103163,"Title":"No downvote and Reputation above 1000","Description":"This query doesn't care how many votes you've cast overall (though it does display your percentage) but rather it looks at the total number of downvotes.\r\n","QueryBody":"SELECT COUNT(Id) FROM Users AS c WHERE Reputation > 10000 AND Downvotes = 0","CreationDate":"2013-03-14 13:52:50","validated":false,"QueryBody_Original":"SELECT   \ncount(Id)\n  \n  from Users c\n  where Reputation >10000 and Downvotes = 0"},{"QuerySetId":103225,"Title":"Look for not closed, old questions without an answer, score or comment","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate AS Date, Score, AnswerCount AS Answers, ClosedDate AS Closed, ViewCount FROM Posts WHERE CreationDate > '2010-10-10' AND PostTypeId = 1 AND AnswerCount = 0 AND CommentCount = 0 AND ClosedDate IS NULL AND Score = 0 ORDER BY CreationDate","CreationDate":"2014-07-27 00:25:26","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate as Date, Score, \n        AnswerCount as Answers, ClosedDate as Closed, ViewCount\nFROM Posts \nWHERE \nCreationDate > '2010-10-10'\n  AND PostTypeId = 1\n  AND AnswerCount = 0\n  AND CommentCount = 0\n  AND ClosedDate is NULL\n  AND Score = 0\nORDER BY CreationDate ASC"},{"QuerySetId":103228,"Title":"WIP: Same as before but with answers ","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate AS Date, AnswerCount FROM Posts WHERE CreationDate < '2011-12-31' AND PostTypeId = 1 AND ClosedDate IS NULL AND AnswerCount = 0 AND CommunityOwnedDate IS NULL ORDER BY CreationDate","CreationDate":"2013-03-14 21:21:16","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate as Date, AnswerCount\nFROM Posts \nWHERE \n  CreationDate < '2011-12-31' \n  AND PostTypeId = 1\n  AND ClosedDate IS NULL\n  AND AnswerCount = 0\n  AND CommunityOwnedDate IS NULL\nORDER BY CreationDate ASC"},{"QuerySetId":103388,"Title":"Top 1000 user with [android] residing in INDIA;","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"android\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2013-03-15 15:33:59","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [android], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":103557,"Title":"DHTML Questions not tagged HTML, Javascript or CSS:","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, Tags AS NotTags FROM Posts WHERE (Tags LIKE '%<dhtml>%') AND NOT (Tags LIKE '%<html>%') AND NOT (Tags LIKE '%<javascript>%') AND NOT (Tags LIKE '%<css>%')","CreationDate":"2013-03-17 00:12:12","validated":false,"QueryBody_Original":"SELECT \n  Id as [Post Link],\n  Title,\n  Tags as NotTags\nFROM Posts\nWHERE\n  (Tags LIKE '%<dhtml>%') AND \n  NOT (Tags LIKE '%<html>%') AND \n  NOT (Tags LIKE '%<javascript>%') AND \n  NOT (Tags LIKE '%<css>%')"},{"QuerySetId":103595,"Title":"Unsung heroes with exactly 10 zero score accepted answers","Description":null,"QueryBody":"SELECT u.Id FROM Users AS u JOIN Badges AS b ON u.Id = b.UserId JOIN (Posts AS q INNER JOIN Posts AS a ON a.Id = q.AcceptedAnswerId) ON u.Id = a.OwnerUserId WHERE b.Name = 'Unsung Hero' AND q.OwnerUserId <> a.OwnerUserId AND a.PostTypeId = 2 AND b.Date > a.CreationDate GROUP BY (u.Id) HAVING SUM(CASE WHEN a.Score = 0 THEN 1 ELSE 0 END) = 10","CreationDate":"2013-03-17 05:50:55","validated":false,"QueryBody_Original":"SELECT  u.Id\nfrom\n  Users u\n  join Badges b on u.Id = b.UserId\n  join (Posts q inner join Posts a on a.Id = q.AcceptedAnswerId) on u.Id = a.OwnerUserId\nwhere b.Name = 'Unsung Hero'\n  and q.OwnerUserId != a.OwnerUserId\n  and a.PostTypeId = 2\n  and b.Date > a.CreationDate\n  group by (u.Id)\n  having sum(case when a.Score = 0 then 1 else 0 end) = 10"},{"QuerySetId":103661,"Title":"Orphaned Questions By Deleting (bounding, inbound, and outbound)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, Tags FROM Posts WHERE (Tags LIKE '<bounding>') OR (Tags LIKE '<inbound>') OR (Tags LIKE '<outbound>')","CreationDate":"2013-03-17 18:00:54","validated":false,"QueryBody_Original":"SELECT  \n  Id as [Post Link],\n  Title,\n  Tags\nFROM Posts\nWHERE \n  (Tags LIKE '<bounding>') OR\n  (Tags LIKE '<inbound>') OR\n  (Tags LIKE '<outbound>')"},{"QuerySetId":103813,"Title":"Questions with multiple answers by the same user","Description":null,"QueryBody":"SELECT ParentId AS \"Post Link\", OwnerUserId AS \"User Link\", COUNT(*) AS \"Number of Answers\" FROM Posts WHERE ParentId > 0 AND OwnerUserId > 0 AND score > 5 GROUP BY ParentId, OwnerUserId HAVING COUNT(*) >= 2 ORDER BY COUNT(*) DESC","CreationDate":"2017-10-13 11:39:50","validated":false,"QueryBody_Original":"SELECT  ParentId as \"Post Link\", OwnerUserId as \"User Link\", count(*) as \"Number of Answers\"\nfrom Posts\nwhere ParentId > 0\nand OwnerUserId > 0\nand score > 5\ngroup by ParentId, OwnerUserId\nhaving count(*) >= 2\norder by count(*) desc"},{"QuerySetId":103941,"Title":"Top users with no gold or silver badges","Description":null,"QueryBody":"SELECT us.id AS \"User Link\", us.DisplayName AS \"Name\", us.Reputation, ba.name, CASE ba.class WHEN 1 THEN 'GOLD' WHEN 2 THEN 'SILVER' WHEN 3 THEN 'BRONZE' END AS Class FROM Users AS us JOIN (SELECT UserId, name, MIN(class) AS Class FROM BADGES WHERE TagBased = 1 AND class < 3 GROUP BY UserId, name) AS ba ON ba.UserId = us.Id WHERE UPPER(us.Location) LIKE UPPER('%##Country?israel##%') ORDER BY us.Reputation DESC, ba.class, ba.name","CreationDate":"2015-11-12 18:14:53","validated":false,"QueryBody_Original":"SELECT \n  us.id [User Link],\n  us.DisplayName [Name],\n  us.Reputation,\n  ba.name,\n  CASE ba.class\n    WHEN 1 THEN 'GOLD'\n    WHEN 2 THEN 'SILVER'\n    WHEN 3 THEN 'BRONZE'\n  END Class\nFROM Users us\n\nJOIN \n(SELECT UserId, name, MIN(class) Class FROM BADGES\n WHERE TagBased = 1 AND class < 3 GROUP BY UserId , name\n) ba ON ba.UserId = us.Id\n\nWHERE UPPER(us.Location) like UPPER('%##Country?israel##%')\nORDER BY us.Reputation DESC, ba.class ASC, ba.name ASC"},{"QuerySetId":103970,"Title":"select * from Posts wheere AnswerCount>0","Description":null,"QueryBody":"SELECT * FROM Posts WHERE AnswerCount > 0","CreationDate":"2013-03-19 20:33:25","validated":false,"QueryBody_Original":"SELECT  * from Posts where AnswerCount>0;"},{"QuerySetId":104031,"Title":"Average Score of Bounty Questions","Description":null,"QueryBody":"SELECT AVG(q.Score * 1.0) FROM votes AS v INNER JOIN Posts AS q ON q.ID = v.PostID WHERE votetypeid = 8 AND q.CreationDate >= '2009-01-27' AND q.CreationDate < '2009-11-08'","CreationDate":"2013-03-20 04:03:25","validated":false,"QueryBody_Original":"SELECT  AVG(q.Score *1.0) \n\nFROM votes v\nINNER JOIN Posts q on q.ID = v.PostID\n\nWHERE votetypeid = 8 and q.CreationDate >= '2009-01-27' and q.CreationDate < '2009-11-08'"},{"QuerySetId":104112,"Title":"Number of Posts per User","Description":"This is a query that returns the number of posts per user in descending order","QueryBody":"SELECT COUNT(*) FROM posts WHERE CreationDate >= DATEFROMPARTS(2013, 3, 1)","CreationDate":"2013-09-02 01:39:10","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where CreationDate>=datefromparts(2013, 3, 1)"},{"QuerySetId":104232,"Title":"Unselfish - Those who answer and never ask.","Description":"Query of users who answer but never asked a question.\r\nSorted by number of answers for a user.","QueryBody":"SELECT COUNT(u.DisplayName) FROM Users AS u WHERE (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = u.id AND PostTypeId = 2) = 0 AND (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = u.id AND PostTypeId = 1) <> 0","CreationDate":"2017-05-23 03:27:50","validated":false,"QueryBody_Original":"SELECT  \ncount(u.DisplayName)\nFROM\n  Users u\nWHERE\n  (SELECT count(*) FROM Posts WHERE OwnerUserId = u.id AND PostTypeId = 2) = 0\n  AND (SELECT count(*) FROM Posts WHERE OwnerUserId = u.id AND PostTypeId = 1) != 0"},{"QuerySetId":104653,"Title":"SO criteria population - review adjustments","Description":null,"QueryBody":"SELECT * FROM users","CreationDate":"2013-11-26 20:06:21","validated":false,"QueryBody_Original":"SELECT  *\nfrom users"},{"QuerySetId":104655,"Title":"SO age rep post review","Description":null,"QueryBody":"SELECT age, COUNT(*) AS programmers, AVG(CAST(reputation AS FLOAT)) AS avg_reputation, SUM(CAST(reputation AS FLOAT)) AS total_reputation, STDEV(CAST(reputation AS FLOAT)) AS stdev_reputation, SUM(CAST(DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) AS FLOAT)) AS person_months FROM users WHERE NOT age IS NULL AND age BETWEEN 10 AND 70 AND reputation BETWEEN 2 AND 100000 AND users.id IN (SELECT users.id FROM users, posts AS answers WHERE answers.posttypeid = 1 AND users.id = answers.owneruserid AND YEAR(answers.creationdate) = 2012) GROUP BY age ORDER BY age","CreationDate":"2013-03-29 18:20:56","validated":false,"QueryBody_Original":"SELECT  age, count(*) programmers, \n avg(cast(reputation as FLOAT)) avg_reputation, \n sum(cast(reputation as FLOAT)) total_reputation, \n stdev(cast(reputation as FLOAT)) stdev_reputation,\n sum(cast(DATEDIFF(month,CreationDate,GetDate()) as FLOAT)) person_months\nfrom users\nwhere age is not null and age between 10 and 70\nand reputation between 2 and 100000\nand users.id in \n\t(SELECT users.id from users, posts answers where answers.posttypeid=1\n\t\tand users.id=answers.owneruserid and year(answers.creationdate)=2012\n\t\t)\ngroup by age\norder by age"},{"QuerySetId":104723,"Title":"New answers to nearly old questions","Description":null,"QueryBody":"SELECT pa.Id AS \"Post Link\", pa.Body FROM Posts AS pa, Posts AS pq WHERE pa.ParentId = pq.Id AND pq.CreationDate < '18 Mar 2013' AND pa.CreationDate > '1 Apr 2013' AND DATEDIFF(pa.CreationDate, pq.CreationDate) < 30 AND pa.ClosedDate IS NULL AND NOT EXISTS(SELECT 1 FROM PostHistory AS ph WHERE ph.PostId = pa.Id AND ph.PostHistoryTypeId = 12) ORDER BY 2","CreationDate":"2013-04-08 15:12:27","validated":false,"QueryBody_Original":"SELECT  pa.Id as [Post Link], pa.Body\nfrom\nPosts pa,\nPosts pq\nwhere pa.ParentId = pq.Id\nand pq.CreationDate < '18 Mar 2013'\nand pa.CreationDate > '1 Apr 2013'\nand datediff( day, pq.CreationDate, pa.CreationDate ) < 30\nand pa.ClosedDate is null\nand not exists ( \nSELECT 1 from PostHistory ph where ph.PostId = pa.Id and ph.PostHistoryTypeId = 12 )\norder by 2"},{"QuerySetId":105000,"Title":"Percentage of closed posts with close reason off-topic","Description":null,"QueryBody":"SELECT COUNT(*) AS \"r1\" FROM Posts AS q WHERE q.PostTypeId = 1","CreationDate":"2017-06-04 09:08:22","validated":false,"QueryBody_Original":"SELECT  count(*) as 'r1'\nFROM Posts q\nWHERE q.PostTypeId = 1"},{"QuerySetId":105180,"Title":"what have you tried comments","Description":null,"QueryBody":"SELECT Id FROM Comments WHERE Text = 'http:\/\/whathaveyoutried.com'","CreationDate":"2013-03-27 19:35:57","validated":false,"QueryBody_Original":"SELECT  Id\nFROM Comments\nWHERE Text = 'http:\/\/whathaveyoutried.com'"},{"QuerySetId":105433,"Title":"Who is the most active on StackExchange?","Description":null,"QueryBody":"SELECT * FROM Posts WHERE OwnerDisplayName LIKE 'a%'","CreationDate":"2013-03-29 11:48:21","validated":false,"QueryBody_Original":"SELECT  * from Posts where OwnerDisplayName like 'a%';"},{"QuerySetId":105522,"Title":"Posts with links to other answers and owner has less than 1k reputation","Description":null,"QueryBody":"SELECT p.Score AS \"Score\", p.Id AS \"Post Link\", o.Reputation AS \"Rep\", o.Id AS \"User Link\" FROM Posts AS p INNER JOIN Users AS o ON o.Id = p.OwnerUserId WHERE LENGTH(p.Body) < 500 AND LOWER(p.Body) LIKE '%check%' AND LOWER(p.Body) LIKE '%this%' AND LOWER(p.Body) LIKE '%answer%' AND LOWER(p.Body) LIKE '%http:\/\/stackoverflow.com\/%' AND p.PostTypeId = 2 AND o.Reputation <= 1000 GROUP BY p.Id, p.Body, p.Score, o.Id, o.Reputation ORDER BY p.Score DESC","CreationDate":"2013-03-29 22:35:47","validated":false,"QueryBody_Original":"SELECT  \n  p.Score as [Score],\n  p.Id as [Post Link],\n  o.Reputation as [Rep], \n  o.Id as [User Link]\nFROM Posts p\nINNER JOIN Users o ON\n  o.Id = p.OwnerUserId\n\nWHERE \n-- These are here to check for low quality\n  LEN(p.Body) < 500 AND\n  LOWER(p.Body) LIKE '%check%' AND\n  LOWER(p.Body) LIKE '%this%' AND\n  LOWER(p.Body) LIKE '%answer%' AND\n  \n-- We only want posts with links\n  LOWER(p.Body) LIKE '%http:\/\/stackoverflow.com\/%' AND\n  \n-- only grab answers\n  p.PostTypeId = 2 AND\n  \n  o.Reputation <= 1000\n\n\nGROUP BY\n  p.Id,\n  p.Body,\n  p.Score,\n  o.Id,\n  o.Reputation\n  \nORDER BY p.Score DESC"},{"QuerySetId":105559,"Title":"First Experience for new Users on EE (Arduino Askers)","Description":null,"QueryBody":"SELECT Score, COUNT(Id) FROM (SELECT Users.Id AS \"Id\", AVG(Posts.Score) AS \"Score\" FROM Users, Posts WHERE Users.Id = Posts.OwnerUserId AND Posts.PostTypeId = 1 GROUP BY Users.Id HAVING COUNT(Posts.Id) = 1) AS P GROUP BY Score","CreationDate":"2013-10-23 22:54:16","validated":false,"QueryBody_Original":"SELECT  Score, count(Id)\nFROM (\nSELECT Users.Id as 'Id', avg(Posts.Score) as 'Score'\n   FROM Users, Posts\n   WHERE Users.Id = Posts.OwnerUserId and Posts.PostTypeId = 1\n   GROUP BY Users.Id\n   HAVING count(Posts.Id) = 1\n   ) as P\nGROUP BY Score"},{"QuerySetId":105656,"Title":"Bottom 20 askers on the site","Description":"A list of the top 500 users with the highest average answer score excluding\r\ncommunity wiki \/ closed posts or users with less than 10 answers\r\n","QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Questions, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Question Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.Id) > 5 ORDER BY \"Average Question Score\" LIMIT 20","CreationDate":"2013-03-31 15:27:22","validated":false,"QueryBody_Original":"SELECT  \n    TOP 20\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Questions,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Question Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 1 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(Posts.Id) > 5\nORDER BY\n    [Average Question Score] ASC"},{"QuerySetId":105811,"Title":"How many questions have people with over 100,000 rep answered?","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE Reputation >= 100000","CreationDate":"2013-04-01 07:48:45","validated":false,"QueryBody_Original":"SELECT  DisplayName from Users where Reputation >= 100000"},{"QuerySetId":106178,"Title":"Best Users from Sri Lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%lanka%' OR UPPER(Location) LIKE '%SRI' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2014-09-11 09:25:38","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%lanka%'\n    OR UPPER(Location) LIKE '%SRI'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":106223,"Title":"So I want to know how many questions start with a spurious \"so\"","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body, Score FROM Posts WHERE SUBSTRING(Body, 0, 2) = 'So'","CreationDate":"2013-04-03 10:30:09","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body, Score from Posts where Substring(Body, 0, 2) = 'So'"},{"QuerySetId":106430,"Title":"Users who downvote more than upvote","Description":"With regards to http:\/\/meta.stackoverflow.com\/questions\/175038\/users-who-have-downvoted-more-than-they-have-upvoted\/","QueryBody":"SELECT DownvotesMoreThanUpvotes = COUNT(CASE WHEN DownvotesMoreThanUpvotes = 1 THEN 1 ELSE NULL END), UpvotesMoreThanDownvotes = COUNT(CASE WHEN DownvotesMoreThanUpvotes = 0 THEN 1 ELSE NULL END), TotalUpvotes = SUM(Upvotes), TotalDownvotes = SUM(Downvotes) FROM (SELECT Upvotes, Downvotes, DownvotesMoreThanUpvotes = CAST(CASE WHEN Upvotes <= Downvotes THEN 1 ELSE 0 END AS INT) FROM Users WHERE Id > 0 \/* exclude Community *\/ AND Downvotes > 0) AS Q","CreationDate":"2013-04-04 09:07:16","validated":false,"QueryBody_Original":"SELECT \n  DownvotesMoreThanUpvotes = COUNT( CASE WHEN DownvotesMoreThanUpvotes = 1 THEN 1 ELSE NULL END ),\n  UpvotesMoreThanDownvotes = COUNT( CASE WHEN DownvotesMoreThanUpvotes = 0 THEN 1 ELSE NULL END ),\n  TotalUpvotes = SUM( Upvotes ),\n  TotalDownvotes = SUM( Downvotes )\nFROM (\n  SELECT\n    Upvotes,\n    Downvotes,\n    DownvotesMoreThanUpvotes = CAST( CASE WHEN Upvotes <= Downvotes THEN 1 ELSE 0 END AS BIT )\n    \n  FROM Users \n  \n  WHERE \n    Id > 0 -- exclude Community\n    AND Downvotes > 0\n)Q"},{"QuerySetId":106529,"Title":"Unanswered Questions with 3 Close Votes","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.CreationDate AS \"Post Date\", Posts.Score AS \"Post Score\", COUNT(Votes.Id) AS \"Close Votes\" FROM Posts INNER JOIN Votes ON Posts.Id = Votes.PostId WHERE Votes.VoteTypeId = 6 AND Posts.ClosedDate IS NULL AND Posts.Tags LIKE '%<php>%' AND Posts.AnswerCount = 0 AND Posts.Score > 0 GROUP BY Posts.Id, Posts.CreationDate, Posts.Score HAVING COUNT(Votes.Id) > 3 ORDER BY \"Post Date\" DESC","CreationDate":"2013-04-04 21:06:01","validated":false,"QueryBody_Original":"SELECT \n  Posts.Id as [Post Link],\n  Posts.CreationDate as [Post Date],\n  Posts.Score as [Post Score],\n  count(Votes.Id) as [Close Votes]\nfrom Posts\ninner join Votes on Posts.Id=Votes.PostId\nwhere Votes.VoteTypeId=6\n  and Posts.ClosedDate is NULL\n  and Posts.Tags LIKE '%<php>%'\n  and Posts.AnswerCount = 0\n  and Posts.Score > 0\ngroup by Posts.Id, Posts.CreationDate, Posts.Score\nhaving count(Votes.Id) > 3\norder by [Post Date] desc"},{"QuerySetId":106712,"Title":"TEST MSSQL DATE DIFF 5 MINUTES","Description":null,"QueryBody":"SELECT DATEDIFF(CURRENT_TIMESTAMP(), '2015-11-23 17:15:22.5500000') AS MinuteDiff","CreationDate":"2015-11-27 20:46:52","validated":false,"QueryBody_Original":"SELECT  DATEDIFF(day, '2015-11-23 17:15:22.5500000',getdate()) AS MinuteDiff"},{"QuerySetId":107357,"Title":"Votes per day between creation and last access","Description":null,"QueryBody":"SELECT DisplayName, CreationDate, UpVotes + DownVotes AS totalVotes, DATEDIFF(LastAccessDate, CreationDate) AS \"Days active\", (UpVotes + DownVotes) \/ (CASE WHEN DATEDIFF(LastAccessDate, CreationDate) = 0 THEN 1 ELSE DATEDIFF(LastAccessDate, CreationDate) END) AS \"Votes per day\" FROM Users WHERE Reputation >= 15 ORDER BY 5 DESC","CreationDate":"2013-04-09 19:12:55","validated":false,"QueryBody_Original":"SELECT  DisplayName, CreationDate, UpVotes + DownVotes AS totalVotes, \nDATEDIFF(DAY, CreationDate, LastAccessDate) AS 'Days active', (UpVotes + DownVotes) \/ (CASE WHEN DATEDIFF(DAY, CreationDate, LastAccessDate) = 0 THEN 1 ELSE DATEDIFF(DAY, CreationDate, LastAccessDate) END) AS 'Votes per day'\nFROM Users\nWHERE Reputation >= 15\nORDER BY 5 DESC"},{"QuerySetId":107413,"Title":"Extract tags from answered posts","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post ID\", Posts.CreationDate AS \"CreationDate\", Posts.Tags AS \"Tags\" FROM Posts WHERE CreationDate > DATEADD(year, -1, GETDATE()) AND NOT ClosedDate IS NULL AND NOT Tags IS NULL ORDER BY CreationDate DESC","CreationDate":"2013-04-10 11:24:28","validated":false,"QueryBody_Original":"SELECT  \n    Posts.Id as [Post ID],\n    Posts.CreationDate as [CreationDate],\n    Posts.Tags as [Tags]\nFROM\n    Posts\nWHERE \n    CreationDate > DATEADD(year,-1,GETDATE()) and \n    ClosedDate is not null and\n    Tags is not null\nORDER BY\n    CreationDate DESC"},{"QuerySetId":107565,"Title":"top users: Philadelphia, Pennsylvania, USA","Description":"List of users in Saskatoon, Canada ordered by reputation.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%philadelphia%' ORDER BY Reputation DESC","CreationDate":"2013-04-10 23:11:46","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%philadelphia%'\n    -- OR UPPER(Location) LIKE '%SG'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":107580,"Title":"SELECT DisplayName  FROM Users WHERE DisplayName LIKE '%terror%'","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE DisplayName LIKE '%cyber%'","CreationDate":"2013-04-11 00:29:50","validated":false,"QueryBody_Original":"SELECT  DisplayName  FROM Users WHERE DisplayName LIKE '%cyber%'"},{"QuerySetId":107973,"Title":"Total votes of users by user-rep","Description":null,"QueryBody":"SELECT (UpVotes + DownVotes) AS \"Total Votes\" FROM Users WHERE Id = 1340599","CreationDate":"2013-05-09 19:19:06","validated":false,"QueryBody_Original":"SELECT  (UpVotes + DownVotes) as \"Total Votes\"\nfrom Users\nwhere Id = 1340599"},{"QuerySetId":108033,"Title":"How many ponies are there? ","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, CreationDate, Age FROM Users WHERE LOWER(DisplayName) LIKE '%fluttershy%' OR LOWER(DisplayName) LIKE '%twilight%' OR LOWER(DisplayName) LIKE '%sparkle%' OR LOWER(DisplayName) LIKE '%rainbow dash%' OR LOWER(DisplayName) LIKE '%applejack%' OR LOWER(DisplayName) LIKE '%rarity%' OR LOWER(DisplayName) LIKE '%pinkie%'","CreationDate":"2013-04-14 13:55:04","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], Reputation, CreationDate, Age \nFROM Users WHERE \n\nLOWER(DisplayName) LIKE '%fluttershy%' OR\nLOWER(DisplayName) LIKE '%twilight%' OR\nLOWER(DisplayName) LIKE '%sparkle%' OR\nLOWER(DisplayName) LIKE '%rainbow dash%' OR\nLOWER(DisplayName) LIKE '%applejack%' OR\nLOWER(DisplayName) LIKE '%rarity%' OR\nLOWER(DisplayName) LIKE '%pinkie%'"},{"QuerySetId":108591,"Title":"Top 100 users from Warsaw","Description":"Lists the top 100 users (ranked by reputation) that are located in Vancouver according to their profile information. Tries to filter out those in Vancouver, Washington.\r\n\r\nBased on http:\/\/data.stackexchange.com\/stackoverflow\/s\/1166\/top-100-users-from-vancouver","QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'Ital%' ORDER BY reputation DESC LIMIT 10000000000","CreationDate":"2013-04-17 03:46:59","validated":false,"QueryBody_Original":"SELECT  TOP 10000000000\n   Id as [User Link],\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'Ital%' \nORDER BY\n   reputation DESC"},{"QuerySetId":109017,"Title":"Weaksauce Rep Per Character ","Description":"This is dirty because it doesn't strip HTML tags","QueryBody":"SELECT PostID = p.id, u.DisplayName, AnswerRep = p.Score * 10, AnswerLength = (LENGTH(p.Body)), RepPerChar = CAST((p.Score * 10) AS FLOAT(23, 13)) \/ CAST((LENGTH(p.Body)) AS FLOAT(23, 13)) FROM Users AS u JOIN Posts AS p ON u.ID = p.OwnerUserId WHERE p.PostTypeId = 2 ORDER BY u.DisplayName DESC","CreationDate":"2014-11-01 04:01:33","validated":false,"QueryBody_Original":"SELECT  \n  PostID = p.id,\n  u.DisplayName, \n  AnswerRep = p.Score * 10, \n  AnswerLength = (LEN(p.Body)), \n  RepPerChar = CAST((p.Score * 10) AS DECIMAL(23,13))\n              \/ CAST((LEN(p.Body)) AS DECIMAL(23,13))\nFROM Users u \nJOIN Posts p \nON u.ID = p.OwnerUserId\nWHERE p.PostTypeId = 2\nORDER BY u.DisplayName DESC"},{"QuerySetId":109090,"Title":"Top 200 users from Israel","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%iran%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2013-04-18 14:33:39","validated":false,"QueryBody_Original":"SELECT \nTOP (200) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%iran%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":109122,"Title":"\"Wh\" questions' score and answeredness","Description":null,"QueryBody":"SELECT MONTH(CreationDate) AS month, YEAR(CreationDate) AS year, 1.0 * SUM(CASE WHEN LOWER(LEFT(Title, 2)) = 'wh' THEN 1 ELSE 0 END) \/ COUNT(*) AS wh, (SELECT 1.0 * SUM(Score) \/ COUNT(*) FROM Posts AS u WHERE MONTH(CreationDate) = MONTH(t.CreationDate) AND YEAR(CreationDate) = YEAR(t.CreationDate) AND LOWER(LEFT(Title, 2)) = 'wh' AND PostTypeId = 1 \/* question *\/) AS wh_score, 1.0 * SUM(Score) \/ COUNT(*) AS score, (SELECT 1.0 * SUM(AnswerCount) \/ COUNT(*) FROM Posts AS u WHERE MONTH(CreationDate) = MONTH(t.CreationDate) AND YEAR(CreationDate) = YEAR(t.CreationDate) AND LOWER(LEFT(Title, 2)) = 'wh' AND PostTypeId = 1 \/* question *\/) AS wh_answers, 1.0 * SUM(AnswerCount) \/ COUNT(*) AS answers FROM Posts AS t WHERE PostTypeId = 1 \/* question *\/ GROUP BY MONTH(CreationDate), YEAR(CreationDate)","CreationDate":"2013-04-18 19:10:24","validated":false,"QueryBody_Original":"SELECT \n  month(CreationDate) month,\n  year(CreationDate) year,\n  1.0*sum(case when lower(left(Title,2))='wh' then 1 else 0 end)\/count(*) wh,\n  (SELECT 1.0*sum(Score)\/count(*)\n   from Posts u\n   where\n     month(CreationDate)=month(t.CreationDate) and\n     year(CreationDate)=year(t.CreationDate) and\n     lower(left(Title,2))='wh' and\n     PostTypeId=1 -- question\n  ) wh_score,\n  1.0*sum(Score)\/count(*) score,\n  (SELECT 1.0*sum(AnswerCount)\/count(*)\n   from Posts u\n   where\n     month(CreationDate)=month(t.CreationDate) and\n     year(CreationDate)=year(t.CreationDate) and\n     lower(left(Title,2))='wh' and\n     PostTypeId=1 -- question\n  ) wh_answers,\n  1.0*sum(AnswerCount)\/count(*) answers\nfrom Posts t\nwhere PostTypeId=1 -- question\ngroup by month(CreationDate), year(CreationDate)\n;"},{"QuerySetId":109158,"Title":"Select * from Users where Location='Turkey'","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%Turkey%' ORDER BY reputation DESC","CreationDate":"2013-04-18 21:50:05","validated":false,"QueryBody_Original":"SELECT  * from Users where  Location like '%Turkey%'order by reputation desc"},{"QuerySetId":109362,"Title":"Low quality answers with high length","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Name\", Score AS \"Score\", LENGTH(Body) AS \"Length\", Score * LENGTH(Body) AS \"Weighted\" FROM Posts WHERE PostTypeId = 2 AND LENGTH(Body) >= 15000 AND Score <= 25 AND CommunityOwnedDate IS NULL ORDER BY \"Weighted\" DESC LIMIT 1000","CreationDate":"2013-04-20 03:56:39","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    Id as [Post Link],\n    OwnerUserId as [User Name],\n    Score as [Score],\n    LEN(Body) as [Length],\n    Score * LEN(Body) as [Weighted]\nFROM\n    Posts\nWHERE PostTypeId = 2 AND LEN(Body) >= 15000 AND Score <= 25 \n      AND CommunityOwnedDate is null\nORDER BY [Weighted] DESC"},{"QuerySetId":109882,"Title":"Test Query for RPG Contest","Description":"I'm running some test queries to ensure that the RPG contest proposal doesn't garner an empty set of winners.","QueryBody":"SELECT UserId, Name, COUNT(*) FROM Badges WHERE Date BETWEEN '##StartDate##' AND '##EndDate##' AND Name IN ('Nice Answer', 'Nice Question') GROUP BY UserId, Name ORDER BY Name, COUNT(*) DESC","CreationDate":"2013-04-24 01:09:37","validated":false,"QueryBody_Original":"SELECT  UserId, Name, Count(*)\nFROM Badges\nWHERE Date BETWEEN '##StartDate##' AND '##EndDate##'\nAND Name IN ('Nice Answer', 'Nice Question')\nGROUP BY UserId, Name\nORDER BY Name, Count(*) DESC"},{"QuerySetId":110306,"Title":"Average ratio of up-to-down votes","Description":null,"QueryBody":"SELECT (AVG(u.UpVotes)) AS \"Averate Up Vote Count\", (AVG(u.DownVotes)) AS \"Average Down Vote Count\", (AVG(u.UpVotes) \/ AVG(u.DownVotes)) AS \"Total Average Ratio\", (AVG(u.UpVotes \/ (CASE u.DownVotes WHEN 0 THEN 1 ELSE u.DownVotes END))) FROM Users AS u WHERE (u.UpVotes + u.DownVotes) > 100","CreationDate":"2016-05-31 10:56:47","validated":false,"QueryBody_Original":"SELECT \n  (AVG(u.UpVotes)) as \"Averate Up Vote Count\",\n  (AVG(u.DownVotes)) as \"Average Down Vote Count\",\n  (AVG(u.UpVotes) \/ AVG(u.DownVotes)) as \"Total Average Ratio\",\n  (AVG(u.UpVotes \/ \n    (CASE u.DownVotes\n        WHEN 0 THEN 1\n        ELSE u.DownVotes\n     END\n     )\n     ))\n     FROM Users u WHERE (u.UpVotes + u.DownVotes) > 100;"},{"QuerySetId":110422,"Title":"% of accepted, open, questions, by month","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%Y') AS \"Year\", TIME_TO_STR(creationdate, '%-M') AS \"Month\", SUM(CASE WHEN NOT acceptedanswerid IS NULL THEN 1 ELSE 0 END) AS \"Accepted\", SUM(CASE WHEN acceptedanswerid IS NULL THEN 1 ELSE 0 END) AS \"Not Accepted\", CAST(ROUND(CAST(COUNT(acceptedanswerid) AS FLOAT) \/ CAST(COUNT(*) AS FLOAT), 4) * 100 AS TEXT) + '%' AS \"Accept Rate\" FROM posts WHERE posttypeid = 1 AND closeddate IS NULL AND answercount > 0 AND TIME_TO_STR(creationdate, '%Y') >= 2012 GROUP BY TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%-M') ORDER BY TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%-M')","CreationDate":"2013-04-27 23:03:03","validated":false,"QueryBody_Original":"SELECT  datepart(yyyy, creationdate) as [Year]\n     , datepart(m, creationdate) as [Month]\n     , sum(case when acceptedanswerid is not null then 1 else 0\n           end ) as [Accepted]\n     , sum(case when acceptedanswerid is null then 1 else 0\n           end ) as [Not Accepted]\n     , cast(round(cast(count(acceptedanswerid) as float )\n                  \/ cast(count(*) as float)\n                 , 4)\n       * 100 as varchar) + '%' as [Accept Rate]\n  from posts\n where posttypeid = 1\n   and closeddate is null\n   and answercount > 0\n   and datepart(yyyy, creationdate) >= 2012\n group by datepart(yyyy, creationdate)\n        , datepart(m, creationdate)\n order by datepart(yyyy, creationdate)\n        , datepart(m, creationdate)"},{"QuerySetId":110586,"Title":"Top 10 users from CZE","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%czech%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2013-04-29 15:56:36","validated":false,"QueryBody_Original":"SELECT \nTOP (10) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%czech%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":110851,"Title":"select on the database by id","Description":null,"QueryBody":"SELECT EmailHash FROM Users WHERE Id = 4555","CreationDate":"2013-04-30 14:19:16","validated":false,"QueryBody_Original":"SELECT  EmailHash from Users where Id=4555;"},{"QuerySetId":111009,"Title":"Best time to ask question","Description":"Best time when you can get the most valuable answer","QueryBody":"SELECT CreationTime, COUNT(*) AS num FROM (SELECT CAST(CAST(CAST(Posts.CreationDate AS TIMESTAMP) AS TEXT(2)) AS INT) AS \"CreationTime\" FROM Posts, (SELECT AcceptedAnswerId, Id AS QuestionId \/* , Users.Reputation *\/ FROM Posts \/* INNER JOIN Users ON Posts.OwnerUserId = Users.Id *\/ WHERE AcceptedAnswerId >= 1) AS AcceptedAnswers WHERE Posts.Id = AcceptedAnswers.AcceptedAnswerId \/* answers posts *\/) AS TimesTable GROUP BY CreationTime ORDER BY CreationTime","CreationDate":"2013-05-03 18:28:16","validated":false,"QueryBody_Original":"SELECT  CreationTime, COUNT(*) AS num FROM (\n\nSELECT \n  CAST(CAST(CAST(Posts.CreationDate AS time) AS varchar(2)) AS int)[CreationTime]\n  \nFROM \n  Posts, \n  (\n    SELECT \n      AcceptedAnswerId, Id AS QuestionId\n      --, Users.Reputation\n    FROM \n      Posts \n      --INNER JOIN Users ON Posts.OwnerUserId = Users.Id\n    WHERE  \n      AcceptedAnswerId >= 1      \n      \n      --good answers\n      ----AND Score > 50      \n      --after removing accept rate\n      ----AND CreationDate > Convert(datetime, '1 FEB 2013' )      \n      --from expert users (it doesn't make much difference)\n      ----AND Users.Reputation >10000\n  ) \n  AS \n    AcceptedAnswers\nWHERE\n  Posts.Id = AcceptedAnswers.AcceptedAnswerId --answers posts\n\n) AS TimesTable\nGROUP BY\n  CreationTime\nORDER BY\n  CreationTime ASC"},{"QuerySetId":111020,"Title":"Age off by one error","Description":null,"QueryBody":"SELECT id AS \"User Link\", age FROM Users WHERE displayname LIKE 'Richard J. Ross III'","CreationDate":"2013-05-01 02:20:20","validated":false,"QueryBody_Original":"SELECT  \n   id as [User Link],\n   age\nfrom Users\nWhere \n    displayname like 'Richard J. Ross III'"},{"QuerySetId":111341,"Title":"All NewtonSoft questions with no obvious link to JSON.NET ","Description":null,"QueryBody":"SELECT Tags, Id AS \"Post Link\" FROM Posts WHERE LOWER(Tags) LIKE '%newtonsoft%' AND (NOT LOWER(Tags) LIKE '%json%' AND NOT LOWER(Title) LIKE '%json%')","CreationDate":"2013-05-02 21:49:18","validated":false,"QueryBody_Original":"SELECT  Tags, Id as [Post Link]\n  from Posts\n  where lower(Tags) like '%newtonsoft%' and \n  (lower(Tags) not like '%json%' and lower(Title) not like '%json%')\n--SELECT all tags and post ids where the question has newtonsoft and doesn't\n--have json or json.net in the tags"},{"QuerySetId":111509,"Title":"Top Users From Rajkot, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Rajkot%' OR UPPER(Location) LIKE 'RAJKOT' OR Location LIKE '%Rajkot' OR Location LIKE 'Rajkot%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2013-05-03 14:55:31","validated":false,"QueryBody_Original":"SELECT \nTOP (1000) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Rajkot%'\n    OR UPPER(Location) LIKE 'RAJKOT'\n    OR Location LIKE '%Rajkot'\n    OR Location LIKE 'Rajkot%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":112153,"Title":"Closed or downvoted questions without comments","Description":null,"QueryBody":"SELECT Posts.Id, Posts.Score FROM Posts WHERE (Score < 0 OR NOT ClosedDate IS NULL) AND (SELECT COUNT(*) FROM Comments WHERE Comments.PostId = Posts.Id) = 0","CreationDate":"2013-05-04 18:54:36","validated":false,"QueryBody_Original":"SELECT  Posts.Id, Posts.Score\nFROM Posts\nWHERE (Score < 0 OR ClosedDate IS NOT NULL) AND (\n  SELECT COUNT(*) FROM Comments WHERE Comments.PostId = Posts.Id\n) = 0;"},{"QuerySetId":112154,"Title":"Number of closed or downvoted questions without comments","Description":"This query aims to show the magnitude of the problem where users don't give feedback after voting to close or downvoting.  See http:\/\/meta.stackoverflow.com\/questions\/179003\/stack-exchange-is-too-harsh-to-new-usersplease-help-them-improve-low-quality-po\/179016#179016 for more on this issue.","QueryBody":"SELECT COUNT(*) FROM Posts WHERE (Score < 0 OR NOT ClosedDate IS NULL) AND PostTypeId = 1 AND NOT Posts.Id IN (SELECT Comments.PostId FROM Comments)","CreationDate":"2013-05-04 19:21:51","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts\nWHERE (Score < 0 OR ClosedDate IS NOT NULL)\n  AND PostTypeId = 1\n  AND Posts.Id NOT IN (\n  SELECT Comments.PostId FROM Comments\n  );"},{"QuerySetId":112155,"Title":"10000 most recent closed or downvoted questions without comments","Description":"This query aims to show the magnitude of the problem where users don't give feedback after voting to close or downvoting.  See http:\/\/meta.stackoverflow.com\/questions\/179003\/stack-exchange-is-too-harsh-to-new-usersplease-help-them-improve-low-quality-po\/179016#179016 for more on this issue.","QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Score FROM Posts WHERE Posts.ClosedDate IS NULL AND PostTypeId = 1 AND NOT Posts.Id IN (SELECT Comments.PostId FROM Comments) AND Posts.Id IN (SELECT Votes.PostId FROM Votes WHERE Votes.VoteTypeId = 3) ORDER BY Posts.Id DESC LIMIT 10000","CreationDate":"2013-11-14 15:15:44","validated":false,"QueryBody_Original":"SELECT  TOP 10000 Posts.Id as [Post Link], Posts.Score\nFROM Posts\nWHERE\n  Posts.ClosedDate is NULL\n  AND PostTypeId = 1\n  AND Posts.Id NOT IN (\n    SELECT Comments.PostId FROM Comments\n  )\n  AND Posts.Id IN (\n    SELECT Votes.PostId\n    FROM Votes\n    WHERE Votes.VoteTypeId = 3\n  )\nORDER BY Posts.Id DESC;"},{"QuerySetId":112175,"Title":"Total number of questions that are downvoted or closed","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE (Score < 0 OR NOT ClosedDate IS NULL) AND PostTypeId = 1","CreationDate":"2013-05-04 22:03:44","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts\nWHERE (Score < 0 OR ClosedDate IS NOT NULL)\n  AND PostTypeId = 1\n;"},{"QuerySetId":112902,"Title":"Top 20 Users from the Philippines","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%manila%' OR LOWER(Location) LIKE '%philippines%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2013-05-08 12:02:33","validated":false,"QueryBody_Original":"SELECT \nTOP (200) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%manila%' or LOWER(Location) LIKE '%philippines%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":113025,"Title":"Young Users with 200+ rep","Description":null,"QueryBody":"SELECT Reputation, Age, DisplayName, Views, Id FROM Users WHERE age < 18 AND reputation > 200 ORDER BY age","CreationDate":"2013-06-17 22:18:53","validated":false,"QueryBody_Original":"SELECT  Reputation, Age, DisplayName, Views, Id\nfrom Users\nwhere age < 18 and reputation > 200  \norder by age asc"},{"QuerySetId":113038,"Title":"Reasonable quality old posts with spelling errors","Description":null,"QueryBody":"SELECT P.Id AS \"Post Link\", P.CreationDate, P.Score, P.PostTypeID, p.LastEditDate, p.LastActivityDate FROM Posts AS P WHERE p.LastEditDate < DATEADD(month, -6, p.LastActivityDate) AND Score >= 5 AND (Title LIKE '%dinamic%' OR Title LIKE '%sintax%' OR Title LIKE '%programatically%') ORDER BY P.Score, P.CreationDate","CreationDate":"2013-05-09 04:50:37","validated":false,"QueryBody_Original":"SELECT  P.Id AS [Post Link], P.CreationDate, P.Score, P.PostTypeID, p.LastEditDate,p.LastActivityDate\nFROM Posts AS P\nWHERE  p.LastEditDate < DATEADD(month, -6, p.LastActivityDate) \nAND Score >= 5\nAND \n(\n  Title like '%dinamic%' OR\n  Title like '%sintax%' OR\n  Title like '%programatically%'\n)\nORDER BY P.Score ASC, P.CreationDate ASC"},{"QuerySetId":113819,"Title":"Posts by month, for a specific user","Description":null,"QueryBody":"SELECT users.displayname, COUNT(*) AS Posts, CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(7)) AS Month FROM Posts AS p JOIN users ON users.id = p.owneruserid WHERE p.OwnerUserId IN (8173, 62278, 8348, 15416, 45760, 23353, 21674, 14082, 25805, 34662, 12952) GROUP BY CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(7)), users.displayname","CreationDate":"2013-05-13 10:05:40","validated":false,"QueryBody_Original":"SELECT  users.displayname, count(*) as Posts, CONVERT(char(7), p.CreationDate, 102) as Month\nfrom Posts p \njoin users on users.id = p.owneruserid\nwhere p.OwnerUserId in (8173, 62278, 8348, 15416, 45760, 23353, 21674,\n                      14082, 25805, 34662, 12952)\ngroup by CONVERT(char(7), p.CreationDate, 102), users.displayname"},{"QuerySetId":113848,"Title":"Average answer score of top 10","Description":null,"QueryBody":"SELECT u.DisplayName, AVG(CAST(p.Score AS FLOAT(4))) AS AvgScore FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE PostTypeId = 2 AND OwnerUserId IN (SELECT Id FROM Users ORDER BY Reputation DESC LIMIT 10) GROUP BY u.DisplayName ORDER BY AvgScore DESC","CreationDate":"2013-05-13 04:10:20","validated":false,"QueryBody_Original":"SELECT  \nu.DisplayName, AVG(CAST(p.Score AS DECIMAL(4))) AS AvgScore\nFROM Posts p \nJOIN Users u ON u.Id = p.OwnerUserId \nWHERE PostTypeId = 2 \nAND OwnerUserId IN (SELECT TOP 10 Id FROM Users ORDER BY Reputation DESC)\nGROUP BY u.DisplayName\nORDER BY AvgScore DESC;"},{"QuerySetId":113863,"Title":"Post scores for top 10","Description":null,"QueryBody":"SELECT p.OwnerUserId, p.Score FROM Posts AS p WHERE p.OwnerUserId IN (SELECT Id FROM Users ORDER BY Reputation DESC LIMIT 10) AND p.PostTypeId = 2 \/* Answers only *\/ ORDER BY p.Score DESC","CreationDate":"2013-05-13 04:22:25","validated":false,"QueryBody_Original":"SELECT \np.OwnerUserId,\np.Score\nFROM Posts p\nWHERE p.OwnerUserId IN(SELECT TOP 10 Id FROM Users ORDER BY Reputation DESC)\nAND p.PostTypeId = 2 -- Answers only\nORDER BY p.Score DESC;"},{"QuerySetId":113900,"Title":"Number of answers by top 10 authors","Description":null,"QueryBody":"SELECT u.DisplayName, COUNT(p.Id) AS Answers FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.OwnerUserId IN (SELECT Id FROM Users ORDER BY Reputation DESC LIMIT 10) AND p.PostTypeId = 2 \/* Answers only *\/ GROUP BY u.DisplayName ORDER BY Answers DESC","CreationDate":"2013-05-13 05:04:37","validated":false,"QueryBody_Original":"SELECT \nu.DisplayName,\nCOUNT(p.Id) AS Answers\nFROM Posts p\nJOIN Users u ON u.Id = p.OwnerUserId\nWHERE p.OwnerUserId IN (SELECT TOP 10 Id FROM Users ORDER BY Reputation DESC)\nAND p.PostTypeId = 2 -- Answers only\nGROUP BY u.DisplayName\nORDER BY Answers DESC;"},{"QuerySetId":113951,"Title":"Post Migration from and to","Description":"Displays number of post migrated per site\r\n","QueryBody":"SELECT LEFT(REPLACE(f.Comment, 'to http:\/\/', ''), STR_POSITION(REPLACE(f.Comment, 'to http:\/\/', ''), '\/') - 1), LEFT(REPLACE(t.Comment, 'from http:\/\/', ''), STR_POSITION(REPLACE(t.Comment, 'from http:\/\/', ''), '\/') - 1), COUNT(DISTINCT f.PostId) FROM PostHistory AS f JOIN PostHistory AS t ON f.PostId = t.PostId WHERE f.PostHistoryTypeId = 35 AND t.PostHistoryTypeId = 36 GROUP BY LEFT(REPLACE(f.Comment, 'to http:\/\/', ''), STR_POSITION(REPLACE(f.Comment, 'to http:\/\/', ''), '\/') - 1), LEFT(REPLACE(t.Comment, 'from http:\/\/', ''), STR_POSITION(REPLACE(t.Comment, 'from http:\/\/', ''), '\/') - 1) ORDER BY 2 DESC","CreationDate":"2013-05-13 08:23:41","validated":false,"QueryBody_Original":"SELECT  \nLeft(replace(f.Comment,'to http:\/\/',''), CharIndex('\/', replace(f.Comment,'to http:\/\/',''))-1)\n,   \nLeft(replace(t.Comment,'from http:\/\/',''), CharIndex('\/', replace(t.Comment,'from http:\/\/',''))-1)\n,\nCount(distinct f.PostId) \nFrom PostHistory f join PostHistory t \nOn f.PostId = t.PostId\nWhere f.PostHistoryTypeId = 35 and t.PostHistoryTypeId = 36\n-- And Len(ltrim(rtrim(f.Text))) > 0\nGroup By Left(replace(f.Comment,'to http:\/\/',''), CharIndex('\/', replace(f.Comment,'to http:\/\/',''))-1)\n,\nLeft(replace(t.Comment,'from http:\/\/',''), CharIndex('\/', replace(t.Comment,'from http:\/\/',''))-1)\nOrder by 2 desc"},{"QuerySetId":113952,"Title":"# of Posts Migrated Away by Destination","Description":"Displays number of post migrated per site\r\n","QueryBody":"SELECT LEFT(REPLACE(Comment, 'to http:\/\/', ''), STR_POSITION(REPLACE(Comment, 'to http:\/\/', ''), '\/') - 1), COUNT(PostId) FROM PostHistory WHERE PostHistoryTypeId = 35 GROUP BY LEFT(REPLACE(Comment, 'to http:\/\/', ''), STR_POSITION(REPLACE(Comment, 'to http:\/\/', ''), '\/') - 1) ORDER BY 2 DESC","CreationDate":"2013-05-13 08:17:38","validated":false,"QueryBody_Original":"SELECT  \nLeft(replace(Comment,'to http:\/\/',''), CharIndex('\/', replace(Comment,'to http:\/\/',''))-1)\n,   \nCount(PostId) \nFrom PostHistory\nWhere PostHistoryTypeId = 35\n-- And Len(ltrim(rtrim(Text))) > 0\nGroup By Left(replace(Comment,'to http:\/\/',''), CharIndex('\/', replace(Comment,'to http:\/\/',''))-1)\nOrder by 2 desc"},{"QuerySetId":113956,"Title":"total # of post history","Description":null,"QueryBody":"SELECT COUNT(*) FROM PostHistory","CreationDate":"2013-05-13 08:28:08","validated":false,"QueryBody_Original":"SELECT  count(*) from PostHistory"},{"QuerySetId":113968,"Title":"Posts by month, for all math.se moderator election nominees","Description":null,"QueryBody":"SELECT users.displayname, COUNT(*) AS Posts, CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(7)) AS Month FROM Posts AS p JOIN users ON users.id = p.owneruserid WHERE p.OwnerUserId IN (8173, 62278, 8348, 15416, 45760, 23353, 21674, 14082, 25805, 34662, 12952) GROUP BY CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(7)), users.displayname","CreationDate":"2013-05-14 01:48:03","validated":false,"QueryBody_Original":"SELECT  users.displayname, count(*) as Posts, CONVERT(char(7), p.CreationDate, 102) as Month\nfrom Posts p \njoin users on users.id = p.owneruserid\nwhere p.OwnerUserId in (8173, 62278, 8348, 15416, 45760, 23353, 21674,\n                      14082, 25805, 34662, 12952)\ngroup by CONVERT(char(7), p.CreationDate, 102), users.displayname"},{"QuerySetId":114065,"Title":"Test query - get user count","Description":null,"QueryBody":"SELECT COUNT(*) FROM users WHERE location LIKE '%korea%'","CreationDate":"2013-05-13 23:50:48","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom users\n  where location like '%korea%'"},{"QuerySetId":114112,"Title":"tag wiki exerpts longer than 300 characters","Description":null,"QueryBody":"SELECT LENGTH(twe.Body), t.TagName, twe.Body FROM Posts AS twe JOIN Tags AS t ON twe.Id = t.ExcerptPostId WHERE twe.PostTypeId = 4 \/* TagWikiExcerpt *\/ AND LENGTH(twe.Body) > 300 ORDER BY 1 DESC","CreationDate":"2013-05-14 02:05:57","validated":false,"QueryBody_Original":"SELECT  len(twe.Body), t.TagName, twe.Body\nfrom Posts twe join Tags t on twe.Id = t.ExcerptPostId\nwhere twe.PostTypeId = 4 -- TagWikiExcerpt\nand len(twe.Body) > 300\norder by 1 desc"},{"QuerySetId":114230,"Title":"Users with most asked questions today","Description":null,"QueryBody":"SELECT COUNT(*) AS counter, OwnerUserId FROM Posts GROUP BY OwnerUserId ORDER BY counter DESC","CreationDate":"2013-05-14 19:12:19","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as counter, OwnerUserId\nFROM Posts\nGROUP BY OwnerUserId\nORDER BY counter DESC"},{"QuerySetId":114310,"Title":"Top 200 users from Norway","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%norway%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2013-05-15 04:07:43","validated":false,"QueryBody_Original":"SELECT \nTOP (200) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%norway%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":114421,"Title":"Questions where OP answered their question in the comments","Description":null,"QueryBody":"SELECT p.id, p.score, p.OwnerUserId FROM posts AS p INNER JOIN comments AS c ON p.id = c.postId WHERE c.UserId = p.OwnerUserId AND p.PostTypeId = 1 AND (c.text LIKE '%fixed%')","CreationDate":"2013-05-15 16:24:34","validated":false,"QueryBody_Original":"SELECT  p.id, p.score, p.OwnerUserId from posts p inner join comments c on p.id = c.postId where c.UserId = p.OwnerUserId and p.PostTypeId = 1 and (c.text like '%fixed%')\n\n-- or c.text like '%solved%' or c.text like '%answered%' or c.text like '%thanks%' or c.text like '%thx%'"},{"QuerySetId":114449,"Title":"Count of posts where more than 10 comments","Description":null,"QueryBody":"SELECT id FROM (SELECT p.id, COUNT(*) AS CommentCount FROM posts AS p INNER JOIN comments AS c ON c.postid = p.id GROUP BY p.id, p.title, p.creationdate, commentcount HAVING commentcount > 100) AS t","CreationDate":"2015-07-02 01:14:40","validated":false,"QueryBody_Original":"SELECT  id FROM \n(\nSELECT p.id, \n       Count(*) AS CommentCount \nFROM   posts p \n       INNER JOIN comments c \n               ON c.postid = p.id \nGROUP  BY p.id, \n          p.title, \n          p.creationdate, \n          commentcount \nHAVING commentcount > 100\n) as t"},{"QuerySetId":114522,"Title":"Thank-you comment by OP without upvote","Description":null,"QueryBody":"SELECT p.CreationDate, p.Id AS \"Post Link\", c.Text FROM Posts AS p INNER JOIN Comments AS c ON c.PostId = p.Id INNER JOIN Posts AS q ON c.UserId = q.OwnerUserId AND p.ParentId = q.Id WHERE c.Text LIKE '%Thank%' AND p.Score = 0 ORDER BY CreationDate DESC","CreationDate":"2013-05-16 23:22:15","validated":false,"QueryBody_Original":"SELECT  p.CreationDate, p.Id AS [Post Link], c.Text FROM Posts p\nINNER JOIN Comments c \nON c.PostId = p.Id \nINNER JOIN Posts q\nON c.UserId = q.OwnerUserId AND p.ParentId=q.Id\nWHERE c.Text LIKE '%Thank%' AND p.Score=0\nORDER BY CreationDate DESC"},{"QuerySetId":114659,"Title":"Thank-you comment by OP on the sole answer, without upvote or accept ","Description":null,"QueryBody":"SELECT p.CreationDate, p.Id AS \"Post Link\", c.Text FROM Posts AS p INNER JOIN Comments AS c ON c.PostId = p.Id INNER JOIN Posts AS q ON c.UserId = q.OwnerUserId AND p.ParentId = q.Id AND q.AnswerCount = 1 WHERE c.Text LIKE '%Thank%' AND p.Score = 0 AND q.AcceptedAnswerId IS NULL ORDER BY CreationDate DESC","CreationDate":"2020-06-02 01:58:34","validated":false,"QueryBody_Original":"SELECT  p.CreationDate, p.Id AS [Post Link], c.Text FROM Posts p\nINNER JOIN Comments c \nON c.PostId = p.Id \nINNER JOIN Posts q\nON c.UserId = q.OwnerUserId AND p.ParentId=q.Id AND q.AnswerCount=1\nWHERE c.Text LIKE '%Thank%' AND p.Score=0 AND q.AcceptedAnswerId IS NULL\nORDER BY CreationDate DESC"},{"QuerySetId":114742,"Title":"How many people named John or Mary?","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE DisplayName LIKE ('Mary %')","CreationDate":"2013-05-17 19:23:28","validated":false,"QueryBody_Original":"SELECT  COUNT(Id)\nFROM Users WHERE DisplayName LIKE ('Mary %')"},{"QuerySetId":114744,"Title":"How many users with the first name John?","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE DisplayName LIKE ('% Anthony %')","CreationDate":"2018-02-08 23:10:47","validated":false,"QueryBody_Original":"SELECT  COUNT(Id)\nFROM Users WHERE DisplayName LIKE ('% Anthony %')"},{"QuerySetId":114872,"Title":"Zanjan province of Iran Stackoverflow users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%arak%' ORDER BY Reputation DESC","CreationDate":"2016-04-26 12:17:22","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%arak%' \nORDER BY\n    Reputation DESC;"},{"QuerySetId":115237,"Title":"No users from Romania ","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE LOWER(Location) LIKE '%romania%'","CreationDate":"2013-05-22 12:36:45","validated":false,"QueryBody_Original":"SELECT \nCOUNT(*)\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%romania%'"},{"QuerySetId":115712,"Title":"Badge numbers for specific user.","Description":null,"QueryBody":"SELECT b.UserId AS \"User Link\", b.Name, COUNT(b.Id) FROM Badges AS b GROUP BY b.UserId, b.Name ORDER BY COUNT(b.Id) DESC","CreationDate":"2013-05-22 20:29:45","validated":false,"QueryBody_Original":"SELECT  b.UserId as [User Link], b.Name, COUNT(b.Id)\nfrom Badges b\ngroup by b.UserId, b.Name\norder by COUNT(b.Id) DESC"},{"QuerySetId":115925,"Title":"Top users by profile views","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Views DESC) AS \"#\", Id AS \"User Link\", Views FROM Users LIMIT 1000","CreationDate":"2013-05-23 17:23:52","validated":false,"QueryBody_Original":"SELECT  TOP (1000) ROW_NUMBER() OVER(ORDER BY Views DESC) AS [#], \n    Id AS [User Link], \n    Views\nFROM\n    Users"},{"QuerySetId":116185,"Title":"People who has both iOS and Android badges","Description":null,"QueryBody":"SELECT Users.id FROM Users, Badges WHERE Badges.UserId = Users.id AND (Badges.Name = 'android')","CreationDate":"2014-04-09 19:55:10","validated":false,"QueryBody_Original":"SELECT  \n  Users.id\nfrom \n  Users,Badges \nwhere\n  Badges.UserId = Users.id and\n  (Badges.Name = 'android');"},{"QuerySetId":116328,"Title":"Most frequently used post tags","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags ORDER BY Count DESC","CreationDate":"2013-05-26 23:42:53","validated":false,"QueryBody_Original":"SELECT  TagName, Count FROM Tags ORDER BY Count DESC"},{"QuerySetId":116335,"Title":"Top 200 Users in the Philippines","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%manila%' OR LOWER(Location) LIKE '%philippines%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2013-05-27 10:59:39","validated":false,"QueryBody_Original":"SELECT \nTOP (200) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%manila%' or LOWER(Location) LIKE '%philippines%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":116481,"Title":"Find Questions with No Answers by Users with 1 Reputation","Description":null,"QueryBody":"SELECT q.id, q.title, q.CreationDate, q.body, q.tags FROM Posts AS q, users AS u WHERE q.AnswerCount = 0 AND q.OwnerUserId = u.id AND u.Reputation = 1 AND NOT q.postTypeId = 2 ORDER BY CreationDate DESC","CreationDate":"2013-05-28 23:02:00","validated":false,"QueryBody_Original":"SELECT \n  q.id, q.title, q.CreationDate, q.body, q.tags\nfrom Posts q,  users u where\nq.AnswerCount = 0  and\nq.OwnerUserId = u.id and\nu.Reputation = 1 and not\nq.postTypeId = 2 order by\nCreationDate desc;"},{"QuerySetId":116602,"Title":"How many answers has user made","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS a\/* and a.postTypeId = 2 *\/  WHERE a.OwnerUserId = 197913 AND a.creationdate >= '20140101' AND a.creationdate < '20150101'","CreationDate":"2015-01-02 20:24:35","validated":false,"QueryBody_Original":"SELECT \nCOUNT(*)\nfrom\n  Posts a\nwhere\n  a.OwnerUserId = 197913\n  --and a.postTypeId = 2\n  and a.creationdate >= '20140101' \n  and a.creationdate < '20150101'"},{"QuerySetId":116959,"Title":"CSCW user posts by age","Description":null,"QueryBody":"SELECT answerer.age AS user_age, answerer.id AS user_id, answers.id AS ans_id, answers.score AS ans_score, answers.body AS ans_body FROM users AS answerer, posts AS questions, posts AS answers WHERE NOT answerer.age IS NULL AND answerer.age BETWEEN 10 AND 70 AND answerer.reputation BETWEEN 2 AND 100000 AND questions.posttypeid = 1 AND YEAR(questions.creationdate) = 2012 AND questions.id = answers.parentid AND answers.posttypeid = 2 AND answers.owneruserid = answerer.id AND answerer.id IN (SELECT owneruserid FROM posts WHERE posttypeid = 2 GROUP BY owneruserid HAVING COUNT(*) >= 20)","CreationDate":"2013-05-30 20:31:59","validated":false,"QueryBody_Original":"SELECT  answerer.age user_age, answerer.id user_id, answers.id ans_id,  \nanswers.score ans_score, answers.body ans_body\nfrom users answerer, posts questions, posts answers\nwhere\nanswerer.age is not null and answerer.age between 10 and 70\nand answerer.reputation between 2 and 100000\nand questions.posttypeid=1\nand year(questions.creationdate)=2012\nand questions.id=answers.parentid\nand answers.posttypeid=2\nand answers.owneruserid=answerer.id\nand answerer.id in (\nSELECT owneruserid from posts where posttypeid = 2 \ngroup by owneruserid \nhaving count(*) >= 20)"},{"QuerySetId":117043,"Title":"How many users are in this website","Description":null,"QueryBody":"SELECT COUNT(*) FROM USERS","CreationDate":"2013-05-30 15:15:24","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM USERS"},{"QuerySetId":117103,"Title":"In search of 10 post users by age...","Description":null,"QueryBody":"SELECT users.age AS user_age, COUNT(DISTINCT users.id) FROM users, posts WHERE NOT users.age IS NULL AND users.age BETWEEN 10 AND 70 AND users.reputation BETWEEN 2 AND 100000 AND posts.owneruserid = users.id AND users.id IN (SELECT owneruserid FROM posts GROUP BY owneruserid HAVING COUNT(*) >= 10) GROUP BY users.age ORDER BY users.age","CreationDate":"2013-05-30 20:05:36","validated":false,"QueryBody_Original":"SELECT  users.age user_age, count(distinct users.id)\nfrom users, posts\nwhere\nusers.age is not null and users.age between 10 and 70\nand users.reputation between 2 and 100000\nand posts.owneruserid=users.id\nand users.id in (\nSELECT owneruserid from posts \ngroup by owneruserid \nhaving count(*) >= 10)\ngroup by users.age\norder by users.age"},{"QuerySetId":117661,"Title":"How many questions & answers last edited by Mat(635608) in a time range","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE LastEditorUserId = 635608 AND OwnerUserId <> 635608 AND LastEditDate > '2013-05-03 12:00:00 AM'","CreationDate":"2013-06-03 15:30:22","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts\nWHERE\n    LastEditorUserId = 635608 AND\n    OwnerUserId != 635608 AND\n    LastEditDate > '2013-05-03 12:00:00 AM'"},{"QuerySetId":117781,"Title":"Top 20 users from Ukraine","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE '%ukraine%' OR LOWER(Location) LIKE '%kiev%' OR LOWER(Location) LIKE '%lviv%' OR LOWER(Location) LIKE '%dnepr%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2013-10-15 18:21:26","validated":false,"QueryBody_Original":"SELECT \nTOP (200) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Location,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ukraine%'\n    OR LOWER(Location) LIKE '%kiev%'\n    OR LOWER(Location) LIKE '%lviv%'\n    OR LOWER(Location) LIKE '%dnepr%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":119000,"Title":"High-voted comments on terrible questions","Description":null,"QueryBody":"SELECT q.Score AS \"Question Score\", q.Id AS \"Post Link\", c.Score AS \"Comment Score\", c.Text AS \"Comment Text\" FROM Comments AS c JOIN Posts AS q ON c.PostId = q.Id WHERE q.PostTypeId = 1 AND c.Score > 10 AND q.Score < -5 ORDER BY c.Score DESC, q.Score DESC","CreationDate":"2013-06-06 10:10:43","validated":false,"QueryBody_Original":"SELECT \n  q.Score [Question Score], q.Id [Post Link],\n  c.Score [Comment Score], c.Text [Comment Text]\n\nfrom Comments c\njoin Posts q on c.PostId = q.Id\nwhere q.PostTypeId = 1 and c.Score > 10 and q.Score < -5\norder by c.Score desc, q.Score desc"},{"QuerySetId":119094,"Title":"Community Wiki answer not accepted or upvoted, no other answers","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p INNER JOIN Posts AS a ON a.ParentId = p.Id WHERE a.Score = 0 AND p.AnswerCount = 1 AND p.AcceptedAnswerID IS NULL AND p.ClosedDate IS NULL AND NOT a.CommunityOwnedDate IS NULL ORDER BY a.CreationDate","CreationDate":"2013-06-07 10:03:55","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link] FROM Posts p\nINNER JOIN Posts a \nON a.ParentId = p.Id\nWHERE a.Score=0 AND p.AnswerCount=1 AND p.AcceptedAnswerID IS NULL AND p.ClosedDate IS NULL AND a.CommunityOwnedDate IS NOT NULL \nORDER BY a.CreationDate ASC"},{"QuerySetId":119095,"Title":"Possibly, an answer in comments","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", c.Text FROM Posts AS p INNER JOIN Comments AS c ON c.PostId = p.Id WHERE c.Text LIKE '%answer%' AND p.AnswerCount = 0 AND p.ClosedDate IS NULL ORDER BY p.CreationDate","CreationDate":"2013-06-07 10:29:41","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], c.Text FROM Posts p\nINNER JOIN Comments c \nON c.PostId = p.Id \nWHERE c.Text LIKE '%answer%' AND p.AnswerCount=0 AND p.ClosedDate IS NULL\nORDER BY p.CreationDate ASC"},{"QuerySetId":119691,"Title":"Find a user by location","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%##Location##%' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2015-01-12 16:15:26","validated":false,"QueryBody_Original":"SELECT \nTOP (500) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%##Location##%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":119994,"Title":"Zero score answers to unanswered questions, by tag","Description":null,"QueryBody":"SELECT p.Id AS \"Post ID\", p.Id AS \"Post Link\", a.Id AS \"Answer ID\" FROM Posts AS p INNER JOIN Posts AS a ON p.Id = a.ParentId WHERE (p.Tags LIKE '%<##TagName##>%' AND p.AcceptedAnswerID IS NULL AND p.ClosedDate IS NULL AND p.Score >= 0 AND a.Score = 0 AND a.Score >= ALL (SELECT aa.Score FROM Posts AS aa WHERE (aa.ParentId = p.Id))) ORDER BY a.Id","CreationDate":"2020-05-25 23:51:05","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post ID], p.Id AS [Post Link], a.Id AS [Answer ID]\nFROM Posts p INNER JOIN Posts a ON p.Id = a.ParentId\nWHERE (\n  p.Tags LIKE '%<##TagName##>%' AND\n  p.AcceptedAnswerID IS NULL AND\n  p.ClosedDate IS NULL AND\n  p.Score >= 0 AND\n  a.Score = 0 AND\n  a.Score >= ALL (\n    SELECT aa.Score FROM Posts aa WHERE (\n      aa.ParentId = p.Id\n    )\n  )\n)\nORDER BY a.Id ASC"},{"QuerySetId":120088,"Title":"Questions asked grouped by day","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), COUNT(*) FROM posts GROUP BY CAST(CreationDate AS DATE) ORDER BY 1","CreationDate":"2013-06-13 23:26:32","validated":false,"QueryBody_Original":"SELECT  Convert(date, CreationDate), count(*)\nfrom posts\ngroup by Convert(date, CreationDate)\norder by 1;"},{"QuerySetId":120091,"Title":"Number of questions by year","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%y') AS the_year, COUNT(*) FROM Posts GROUP BY TIME_TO_STR(CreationDate, '%y') ORDER BY TIME_TO_STR(CreationDate, '%y')","CreationDate":"2013-06-13 23:41:37","validated":false,"QueryBody_Original":"SELECT \n  DatePart(yy, CreationDate) as the_year,\n  Count(*)\nfrom\n  Posts\ngroup by \n  DatePart(yy, CreationDate)\norder by\nDatePart(yy, CreationDate)"},{"QuerySetId":120275,"Title":"Posts starting with the word \"How\"","Description":"Posts containing a body that is less than 5 chars long\r\n","QueryBody":"SELECT P1.Id AS \"Post Link\", P1.Title, P1.Body, P1.Score, P1.AcceptedAnswerID, (SELECT Id AS Id FROM Comments WHERE Id = P1.AcceptedAnswerID), (SELECT Score AS Score FROM Comments WHERE Id = P1.AcceptedAnswerID), P2.Body AS ANSWER FROM Posts AS P1 INNER JOIN Posts AS P2 ON P1.AcceptedAnswerID = P2.Id WHERE P1.Title LIKE 'How do%' AND P1.Score > 5","CreationDate":"2013-07-03 08:28:53","validated":false,"QueryBody_Original":"SELECT  P1.Id as [Post Link], P1.Title, P1.Body, P1.Score, P1.AcceptedAnswerID, \n(SELECT Id as Id from Comments where Id = P1.AcceptedAnswerID),\n(SELECT Score as Score from Comments where Id = P1.AcceptedAnswerID), \nP2.Body as ANSWER\nfrom Posts P1\nINNER JOIN Posts P2\non P1.AcceptedAnswerID = P2.Id\nWHERE P1.Title like 'How do%' AND P1.Score > 5 ;"},{"QuerySetId":120833,"Title":"View the reputations rank for Estonian users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%estonia%' OR UPPER(Location) LIKE '%ee' ORDER BY Reputation DESC","CreationDate":"2019-05-20 15:54:38","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM Users\nWHERE LOWER(Location) LIKE '%estonia%' OR UPPER(Location) LIKE '%ee'\nORDER BY Reputation DESC;"},{"QuerySetId":120860,"Title":"Top 20 italian users on StackOverflow","Description":null,"QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Ital%' ORDER BY reputation DESC LIMIT 20","CreationDate":"2013-11-26 20:38:04","validated":false,"QueryBody_Original":"SELECT  TOP 20\n   Id as [User Link],\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Ital%' \nORDER BY\n   reputation DESC"},{"QuerySetId":121034,"Title":"Get users that have in username \"\u30c4\"","Description":null,"QueryBody":"SELECT * FROM Users WHERE DisplayName LIKE 'irc'","CreationDate":"2013-06-21 18:45:18","validated":false,"QueryBody_Original":"SELECT  \n    *\nFROM\n    Users\nWHERE\n    DisplayName LIKE 'irc'"},{"QuerySetId":121320,"Title":"Unanswered questions that are potential duplicates","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", c.Text FROM Posts AS p INNER JOIN Comments AS c ON c.PostId = p.Id WHERE (c.Text LIKE '%duplicate%' AND p.AnswerCount = 0 AND p.ClosedDate IS NULL) ORDER BY p.CreationDate","CreationDate":"2013-06-21 15:26:37","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], c.Text FROM Posts p\nINNER JOIN Comments c \nON c.PostId = p.Id \nWHERE (\n  c.Text LIKE '%duplicate%' AND\n  p.AnswerCount=0 AND\n  p.ClosedDate IS NULL \n  )\nORDER BY p.CreationDate ASC"},{"QuerySetId":121357,"Title":"Get users that have \"\u30c4\" in their username","Description":null,"QueryBody":"SELECT Id, Reputation, DisplayName, Location, Age, CreationDate, WebsiteUrl FROM Users WHERE DisplayName LIKE N'%\u30c4%' OR DisplayName LIKE N'%\u30b7%' OR DisplayName LIKE N'%\u30b8%' OR DisplayName LIKE N'%\u30bd%' OR DisplayName LIKE N'%\u30be%' OR DisplayName LIKE N'%\u30b7%' OR DisplayName LIKE N'%\u30c3%' OR DisplayName LIKE N'%\u30c5%' ORDER BY Reputation DESC","CreationDate":"2013-06-21 19:11:34","validated":false,"QueryBody_Original":"SELECT  \n    Id, Reputation, DisplayName, Location, Age, CreationDate, WebsiteUrl\nFROM\n    Users\nWHERE\n    DisplayName LIKE N'%\u30c4%' or \n    DisplayName LIKE N'%\u30b7%' or \n    DisplayName LIKE N'%\u30b8%' or \n    DisplayName LIKE N'%\u30bd%' or \n    DisplayName LIKE N'%\u30be%' or \n    DisplayName LIKE N'%\u30b7%' or \n    DisplayName LIKE N'%\u30c3%' or \n    DisplayName LIKE N'%\u30c5%'\nORDER by Reputation DESC"},{"QuerySetId":121361,"Title":"Get users that have smileys in their username","Description":null,"QueryBody":"SELECT Id, Reputation, DisplayName, Location, Age, CreationDate, WebsiteUrl FROM Users WHERE DisplayName LIKE N'%sanchy%' ORDER BY Reputation DESC","CreationDate":"2013-06-21 19:19:40","validated":false,"QueryBody_Original":"SELECT  \n    Id, Reputation, DisplayName, Location, Age, CreationDate, WebsiteUrl\nFROM\n    Users\nWHERE\n    DisplayName LIKE N'%sanchy%'\nORDER by Reputation DESC"},{"QuerySetId":121592,"Title":"Questions with a deleted answer and no other answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Tags FROM Posts WHERE NOT AnswerCount IS NULL AND AnswerCount < 1 ORDER BY CreationDate DESC","CreationDate":"2013-06-23 05:16:51","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate, Tags FROM Posts \nWHERE AnswerCount IS NOT NULL AND AnswerCount<1 \nORDER BY CreationDate DESC"},{"QuerySetId":121593,"Title":"Questions with a deleted answer (and no other answers), by tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE NOT AnswerCount IS NULL AND AnswerCount < 1 AND Tags LIKE '%<##TagName##>%' ORDER BY CreationDate DESC","CreationDate":"2013-06-23 05:20:23","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate FROM Posts \nWHERE AnswerCount IS NOT NULL AND AnswerCount<1 AND Tags LIKE '%<##TagName##>%'  \nORDER BY CreationDate DESC"},{"QuerySetId":121708,"Title":"Getting all users from Cuba","Description":null,"QueryBody":"SELECT Reputation, DisplayName, Location FROM Users ORDER BY Reputation DESC","CreationDate":"2013-06-24 05:50:30","validated":false,"QueryBody_Original":"SELECT  Reputation, DisplayName, Location\nFROM Users\nORDER BY Reputation DESC"},{"QuerySetId":121960,"Title":" Top 200 users from Ahmedabad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ahmadabad%' OR UPPER(Location) LIKE '%AHMADABAD' OR LOWER(Location) LIKE '%ahmedabad%' OR UPPER(Location) LIKE '%AHMEDABAD' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2020-10-06 09:56:14","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ahmadabad%'\n    OR UPPER(Location) LIKE '%AHMADABAD'\n    OR LOWER(Location) LIKE '%ahmedabad%'\n    OR UPPER(Location) LIKE '%AHMEDABAD'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":122176,"Title":"Accept rate of answers vs total answers written","Description":null,"QueryBody":"SELECT 10 * (answer_count \/ 10) AS answer_count, 100 * SUM(accepted_answer_count) \/ SUM(answer_count) AS accepted_percent FROM (SELECT users.Id, COUNT(*) AS answer_count, SUM(CASE WHEN questions.AcceptedAnswerId = answers.Id THEN 1 ELSE 0 END) AS accepted_answer_count FROM Posts AS answers INNER JOIN Users AS users ON users.Id = answers.OwnerUserId INNER JOIN Posts AS questions ON answers.ParentId = questions.Id WHERE (questions.OwnerUserId <> users.Id OR questions.OwnerUserId IS NULL) \/* no self answers *\/ GROUP BY users.Id HAVING COUNT(*) < 500) AS X GROUP BY answer_count \/ 10 ORDER BY answer_count \/ 10","CreationDate":"2013-06-28 08:55:40","validated":false,"QueryBody_Original":"SELECT \n10*(answer_count\/10) answer_count,\n100*sum(accepted_answer_count)\/sum(answer_count) accepted_percent\nFROM\n(\nSELECT\n  users.Id,\n  count(*) answer_count,\n  sum(case when questions.AcceptedAnswerId = answers.Id then 1 else 0 end) accepted_answer_count\nFROM Posts answers\nINNER JOIN Users users ON users.Id = answers.OwnerUserId\nINNER JOIN Posts questions ON answers.ParentId = questions.Id\nWHERE \n  (questions.OwnerUserId <> users.Id OR questions.OwnerUserId IS NULL)   --no self answers\nGROUP BY users.Id\nHAVING count(*) < 500\n) X\nGROUP BY answer_count\/10\nOrder By answer_count\/10"},{"QuerySetId":122256,"Title":"likely obsolete comments on posts from users who've left","Description":null,"QueryBody":"SELECT Id FROM Posts AS p WHERE (OwnerUserId IS NULL OR (SELECT DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) FROM Users AS u WHERE p.OwnerUserId = u.Id) > 360) AND CommunityOwnedDate IS NULL AND CommentCount > 4 AND LastEditDate > (SELECT MAX(CreationDate) FROM Comments WHERE PostId = p.Id)","CreationDate":"2013-06-28 22:17:58","validated":false,"QueryBody_Original":"SELECT  Id\nfrom Posts as p\nwhere (OwnerUserId is null\n       or (SELECT datediff(d,LastAccessDate,getdate())\n           from Users as u\n           where p.OwnerUserId = u.Id\n          )>360\n      )\n  and CommunityOwnedDate is null\n  and CommentCount>4\n  and LastEditDate>(SELECT max(CreationDate) from Comments where PostId=p.Id)"},{"QuerySetId":122265,"Title":"SELECT * FROM Sites   ","Description":null,"QueryBody":"SELECT * FROM Users","CreationDate":"2013-06-29 00:15:28","validated":false,"QueryBody_Original":"SELECT  * FROM Users"},{"QuerySetId":122288,"Title":"Instantly appealing and favourite post","Description":"All who view this post favourite it","QueryBody":"SELECT Title, Score, ViewCount, FavoriteCount FROM Posts WHERE FavoriteCount >= 0.5 * ViewCount ORDER BY FavoriteCount DESC","CreationDate":"2013-06-29 10:40:44","validated":false,"QueryBody_Original":"SELECT  Title, Score, ViewCount, FavoriteCount from Posts\nwhere FavoriteCount>=0.5*ViewCount\norder by FavoriteCount desc"},{"QuerySetId":122299,"Title":"Unanswered questions by deleted users","Description":null,"QueryBody":"SELECT CreationDate, Id AS \"Post Link\" FROM Posts WHERE OwnerUserId IS NULL AND ClosedDate IS NULL AND PostTypeId = 1 AND COALESCE(AnswerCount, 0) = 0 ORDER BY CreationDate","CreationDate":"2013-06-29 19:37:07","validated":false,"QueryBody_Original":"SELECT  CreationDate, Id AS [Post Link] FROM Posts \nWHERE OwnerUserId IS NULL AND ClosedDate IS NULL AND PostTypeId = 1 AND ISNULL(AnswerCount,0) = 0 \nORDER BY CreationDate ASC"},{"QuerySetId":122423,"Title":"Users with highest median answer score","Description":null,"QueryBody":"SELECT Users.Id, DisplayName, COUNT(Posts.Id) AS Questions, (SELECT MAX(Score) FROM (SELECT percent AS Score FROM Posts AS PU WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL AND PU.OwnerUserId = Users.Id ORDER BY Score LIMIT 50) AS t) AS MedianQuestionScore FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.Id) > 50 ORDER BY MedianQuestionScore DESC LIMIT 100","CreationDate":"2020-05-14 19:21:20","validated":false,"QueryBody_Original":"SELECT  \n    TOP 100\n    Users.Id,\n    DisplayName,\n    Count(Posts.Id) AS Questions,\n    (SELECT MAX(Score) \n     FROM (SELECT TOP 50 percent Score\n           FROM Posts as PU\n           WHERE PostTypeId = 1 and CommunityOwnedDate IS NULL and PU.OwnerUserId = Users.Id\n           ORDER BY Score\n           ) as t\n     ) AS MedianQuestionScore\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 1 and CommunityOwnedDate IS NULL\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(Posts.Id) > 50\nORDER BY\n    MedianQuestionScore DESC"},{"QuerySetId":122549,"Title":"Users by number of (non-tag) gold badges","Description":null,"QueryBody":"SELECT DisplayName, COUNT(*) AS number FROM Badges INNER JOIN Users ON Badges.UserId = Users.Id WHERE Name LIKE ('Famous Question') GROUP BY DisplayName ORDER BY number DESC","CreationDate":"2013-08-07 19:17:01","validated":false,"QueryBody_Original":"SELECT  \n  DisplayName,\n  Count(*) as number\nfrom\n  Badges inner join Users on Badges.UserId = Users.Id\nwhere\n  Name like ('Famous Question')\ngroup by\n  DisplayName\norder by\n  number desc"},{"QuerySetId":122553,"Title":"Why are certain questions redirecting to tag wikis?","Description":null,"QueryBody":"SELECT q.id AS \"Post Link\", a.id AS \"Post Link\" FROM posts AS a LEFT JOIN posts AS q ON a.posttypeid = 2 AND q.posttypeid = 1 AND q.acceptedAnswerId = a.id WHERE a.score = 0","CreationDate":"2013-07-03 00:42:39","validated":false,"QueryBody_Original":"SELECT \n  q.id as [Post Link],\n  a.id as [Post Link]\nFROM \n    posts as a \n  LEFT JOIN \n    posts as q\n  ON a.posttypeid = 2 and q.posttypeid = 1 and q.acceptedAnswerId = a.id\nWHERE\n  a.score = 0"},{"QuerySetId":122581,"Title":"select * WHERE BountyAmount > 0","Description":null,"QueryBody":"SELECT * FROM Votes WHERE BountyAmount > 0 ORDER BY CreationDate DESC","CreationDate":"2013-08-21 15:31:41","validated":false,"QueryBody_Original":"SELECT  * FROM Votes WHERE BountyAmount > 0 order by CreationDate desc"},{"QuerySetId":122724,"Title":"Questions with only one answer.","Description":null,"QueryBody":"SELECT Id AS \"PostLink\", Id, Title, Score, Tags, Body, CreationDate FROM Posts WHERE CreationDate < '2013-01-01' AND ClosedDate IS NULL AND AnswerCount = 1 AND Score > 0 ORDER BY Score DESC","CreationDate":"2013-07-04 10:03:44","validated":false,"QueryBody_Original":"SELECT  Id AS [PostLink] , Id, Title, Score, Tags, Body, CreationDate FROM Posts\n  WHERE CreationDate < '2013-01-01'\n        AND ClosedDate IS null\n        AND AnswerCount = 1\n        AND Score > 0\n  ORDER BY Score DESC;"},{"QuerySetId":123481,"Title":"Engineering, HW, and non mainstream on Physics ","Description":"Compares the number of closed HW questions on Physics with the number of closed HW questions that mention math in the comments","QueryBody":"SELECT \"Month\", SUM(1) AS ClosedHWQuestions, SUM(ccoment) AS ClosedHWQuestionsFromMath FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", Id, 0 AS ccoment FROM Posts AS p WHERE posttypeid = 1 AND closeddate <> '' UNION SELECT CAST(CAST(TIME_TO_STR(p.CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(p.CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", p.Id AS Id, 1 AS ccoment FROM Posts AS p INNER JOIN comments AS c ON c.postid = p.id WHERE p.posttypeid = 1 AND p.closeddate <> '' AND c.text LIKE '%engineering%') AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2013-07-09 22:26:04","validated":false,"QueryBody_Original":"SELECT  [Month], \n       sum(1) ClosedHWQuestions,\n       sum(ccoment) ClosedHWQuestionsFromMath\nfrom\n(\n  SELECT CAST(\n      cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) + '-01'\n    as datetime) [Month], \n    Id,\n    0 as ccoment\n     \n  from Posts p where posttypeid=1  and closeddate !=''\n  \n  union\n   SELECT CAST(\n      cast(DATEPART(YYYY, p.CreationDate) as varchar) + '-' + cast(DATEPART(MM, p.CreationDate) as varchar) + '-01'\n    as datetime) [Month], \n    p.Id as Id,\n    1 as ccoment\n     \n  from Posts p inner join comments c on c.postid=p.id where p.posttypeid=1  and p.closeddate !='' and c.text like '%engineering%' \n  \n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":123500,"Title":"Questions having a deleted accepted answer","Description":null,"QueryBody":"SELECT DISTINCT Id FROM Posts WHERE AcceptedAnswerId > 0 AND NOT Id IN (SELECT DISTINCT p1.Id FROM Posts AS p1 INNER JOIN Posts AS p2 ON p2.Id = p1.AcceptedAnswerId)","CreationDate":"2013-07-09 16:55:27","validated":false,"QueryBody_Original":"SELECT  DISTINCT Id FROM Posts\nWHERE AcceptedAnswerId>0 AND Id NOT IN \n(SELECT DISTINCT p1.Id \nFROM Posts p1 INNER JOIN Posts p2 ON p2.Id=p1.AcceptedAnswerId)"},{"QuerySetId":123585,"Title":"Questions and Answers per Hour","Description":null,"QueryBody":"SELECT \"Month\", SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) \/ (1 + SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END)) AS AnswersPerQuestion FROM (SELECT CAST(CreationDate AS DATETIME) AS \"Month\", PostTypeId FROM Posts AS p WHERE CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) = '2013' AND CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) = 7) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2013-07-10 03:43:38","validated":false,"QueryBody_Original":"SELECT  [Month], \nsum(case when PostTypeId = 2 then 1 else 0 end)\/(1+sum(case when PostTypeId = 1 then 1 else 0 end)) AnswersPerQuestion\nfrom\n(\n  SELECT CAST(\n      CreationDate \n    as datetime) [Month], \n    PostTypeId\n     \n  from Posts p where cast(DATEPART(YYYY, CreationDate) as varchar)='2013' and cast(DATEPART(MM, CreationDate) as varchar)=7\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":123587,"Title":"Time it takes to get an answer per day","Description":null,"QueryBody":"SELECT \"Month\", SUM(ViewCount) \/ SUM(1) AS AvgViews FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, 'DD') AS TEXT) + ' ' + CAST(TIME_TO_STR(CreationDate, '%H') AS TEXT) + ':00:00' AS DATETIME) AS \"Month\", PostTypeId, ViewCount FROM Posts AS p WHERE posttypeid = 1 AND CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) = '2013' AND CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) = 7) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2013-07-10 03:55:28","validated":false,"QueryBody_Original":"SELECT  [Month], \nsum(ViewCount)\/sum(1) as AvgViews\nfrom\n(\n  SELECT CAST(\n  cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) +'-'+cast(DATEPART(DD,CreationDate) as varchar)+ ' '+ cast(DATEPART(HH, CreationDate) as varchar)+':00:00'\n    as datetime) [Month], \n    PostTypeId,ViewCount\n     \n  from Posts p where posttypeid=1 and cast(DATEPART(YYYY, CreationDate) as varchar)='2013' and cast(DATEPART(MM, CreationDate) as varchar)=7\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":123594,"Title":"Questions and answers per hour","Description":null,"QueryBody":"SELECT \"Month\", SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Answers FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, 'DD') AS TEXT) AS DATETIME) AS \"Month\", PostTypeId FROM Posts AS p) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2017-11-18 13:40:46","validated":false,"QueryBody_Original":"SELECT  [Month], \n       sum(case when PostTypeId = 1 then 1 else 0 end) Answers\nfrom\n(\n  SELECT CAST(\n  cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) +'-'+cast(DATEPART(DD,CreationDate) as varchar)\n    as datetime) [Month], \n    PostTypeId\n     \n  from Posts p\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":123595,"Title":"Average views per question per hour","Description":null,"QueryBody":"SELECT \"Month\", SUM(ViewCount) \/ SUM(1) AS AvgViews FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, 'DD') AS TEXT) + ' ' + CAST(TIME_TO_STR(CreationDate, '%H') AS TEXT) + ':00:00' AS DATETIME) AS \"Month\", PostTypeId, ViewCount FROM Posts AS p WHERE posttypeid = 1 AND CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) = '2013' AND CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) = 7) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2013-07-10 04:44:09","validated":false,"QueryBody_Original":"SELECT  [Month], \nsum(ViewCount)\/sum(1) as AvgViews\nfrom\n(\n  SELECT CAST(\n  cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) +'-'+cast(DATEPART(DD,CreationDate) as varchar)+ ' '+ cast(DATEPART(HH, CreationDate) as varchar)+':00:00'\n    as datetime) [Month], \n    PostTypeId,ViewCount\n     \n  from Posts p where posttypeid=1 and cast(DATEPART(YYYY, CreationDate) as varchar)='2013' and cast(DATEPART(MM, CreationDate) as varchar)=7\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":123779,"Title":"Does setting a bounty get good answers?","Description":null,"QueryBody":"SELECT Votes.VoteTypeId, Votes.PostId, Votes.UserId, Votes.CreationDate, Votes.BountyAmount FROM Votes INNER JOIN Posts AS q ON q.Id = Votes.PostId WHERE q.CreationDate >= '2011-05-11 00:00:00' AND (Votes.VoteTypeId = 8 OR Votes.VoteTypeId = 9) AND Votes.PostId = 7375","CreationDate":"2013-07-10 21:27:33","validated":false,"QueryBody_Original":"SELECT  Votes.VoteTypeId,\nVotes.PostId,Votes.UserId,Votes.CreationDate,Votes.BountyAmount\nfrom Votes inner join Posts as q on q.Id=Votes.PostId\nwhere q.CreationDate >= '2011-05-11 00:00:00'\nand (Votes.VoteTypeId=8 or Votes.VoteTypeId=9) and Votes.PostId=7375"},{"QuerySetId":124033,"Title":"Top voters with 101 reputation","Description":null,"QueryBody":"SELECT Id AS \"User Link\", UpVotes FROM USERS WHERE UpVotes > 0 AND Reputation = 101 ORDER BY UpVotes DESC LIMIT 500","CreationDate":"2013-07-11 21:07:17","validated":false,"QueryBody_Original":"SELECT  TOP 500 Id  AS [User Link],\n               UpVotes               \nFROM   USERS\nWHERE  UpVotes > 0\n       AND Reputation = 101\nORDER  BY UpVotes DESC"},{"QuerySetId":124070,"Title":"Kev's Questions without Accepted Answers","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM posts WHERE PostTypeID = 1 AND OwnerUserID = 16777 AND AcceptedAnswerID IS NULL AND AnswerCount > 0","CreationDate":"2013-07-12 01:27:20","validated":false,"QueryBody_Original":"SELECT  id as [Post Link] from posts \nwhere PostTypeID=1 and OwnerUserID=16777\nand AcceptedAnswerID is null\nand AnswerCount > 0"},{"QuerySetId":124076,"Title":"Number of answers per user","Description":null,"QueryBody":"SELECT owneruserid, COUNT(*) AS answer_count FROM posts WHERE posttypeid = 2 GROUP BY owneruserid ORDER BY answer_count DESC LIMIT 5000","CreationDate":"2019-08-19 00:52:56","validated":false,"QueryBody_Original":"SELECT  top(5000) owneruserid, count(*) AS answer_count\nfrom posts\nwhere posttypeid = 2\ngroup by owneruserid\norder by answer_count desc"},{"QuerySetId":124464,"Title":"Who from your location is better than you?","Description":null,"QueryBody":"SELECT U2.* FROM USERS AS U1 JOIN USERS AS U2 ON U1.LOCATION = U2.LOCATION WHERE 1 = 1 AND U1.DisplayName = 'jyparask' AND U1.REPUTATION <= U2.REPUTATION ORDER BY U2.REPUTATION DESC, U2.DISPLAYNAME","CreationDate":"2013-09-11 12:08:53","validated":false,"QueryBody_Original":"SELECT  U2.*\nFROM USERS U1\n  JOIN USERS U2 ON U1.LOCATION = U2.LOCATION\nWHERE\n  1 = 1\n  AND U1.DisplayName = 'jyparask'\n  AND U1.REPUTATION <= U2.REPUTATION\nORDER BY U2.REPUTATION DESC, U2.DISPLAYNAME"},{"QuerySetId":124614,"Title":"How many questions have been asked on July 18, 2013?","Description":null,"QueryBody":"SELECT COUNT(Id) AS \"Questions posted\" FROM Posts WHERE CreationDate > '2013-12-18 00:00' AND CreationDate < '2013-12-18 23:59:59' AND PostTypeId = 1","CreationDate":"2013-07-19 00:48:17","validated":false,"QueryBody_Original":"SELECT \n    count(Id) as [Questions posted]\nfrom Posts\nwhere\n      CreationDate > '2013-12-18 00:00'\nand\n      CreationDate < '2013-12-18 23:59:59'\nand \n      PostTypeId = 1"},{"QuerySetId":124643,"Title":"Search keyword in user comments","Description":null,"QueryBody":"SELECT CONCAT('http:\/\/stackoverflow.com\/questions\/', PostID), Score, Text, CreationDate FROM comments WHERE Text LIKE '%##Keyword1##%' AND Text LIKE '%##Keyword2##%' AND Text LIKE '%##Keyword3##%' COLLATE Latin1_General_100_CI_AI_SC ORDER BY CreationDate DESC","CreationDate":"2020-04-29 11:41:41","validated":false,"QueryBody_Original":"SELECT  CONCAT('http:\/\/stackoverflow.com\/questions\/', PostID), Score, Text, CreationDate FROM comments WHERE Text Like  '%##Keyword1##%' AND Text Like '%##Keyword2##%' AND Text Like '%##Keyword3##%'  COLLATE Latin1_General_100_CI_AI_SC ORDER BY CreationDate DESC"},{"QuerySetId":124771,"Title":"1000 Most recent wiki's made by the user","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", ph.CreationDate FROM PostHistory AS ph INNER JOIN posts AS p ON p.id = ph.PostID WHERE ph.PostHistoryTypeId = 16 \/* Wiki *\/ AND p.owneruserid = ph.userid ORDER BY ph.CreationDate DESC LIMIT 1000","CreationDate":"2013-07-20 00:54:46","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   p.id [Post Link], ph.CreationDate\nFROM PostHistory ph\n     inner join posts p\n     ON p.id =  ph.PostID \n  WHERE ph.PostHistoryTypeId = 16 -- Wiki\n   and p.owneruserid = ph.userid\n  ORDER BY ph.CreationDate DESC"},{"QuerySetId":124791,"Title":"Most voted questions tagged with iPhone ","Description":null,"QueryBody":"SELECT Id, * FROM Posts AS Question WHERE Tags LIKE '%<ruby-on-rails>%' ORDER BY Score DESC LIMIT 150","CreationDate":"2015-05-31 01:36:50","validated":false,"QueryBody_Original":"SELECT  TOP 150 Id,*\nFROM Posts Question\nWHERE Tags LIKE '%<ruby-on-rails>%' \nORDER BY Score DESC"},{"QuerySetId":124848,"Title":"Is there any non-CW answer to a CW-question?","Description":null,"QueryBody":"SELECT P.Id AS \"Post Link\" FROM Posts AS P INNER JOIN Posts AS Q ON P.ParentId = Q.Id WHERE P.PostTypeId = 2 AND P.CommunityOwnedDate IS NULL AND NOT Q.CommunityOwnedDate IS NULL","CreationDate":"2013-07-20 18:57:47","validated":false,"QueryBody_Original":"SELECT  P.Id [Post Link]\nFROM Posts P\nINNER JOIN Posts Q\n  on P.ParentId = Q.Id\nWHERE P.PostTypeId = 2\n  and P.CommunityOwnedDate is NULL\n  and Q.CommunityOwnedDate is not NULL"},{"QuerySetId":124910,"Title":"Bug report score by day of week","Description":null,"QueryBody":"SELECT MAX(100 * Score) \/ 100.0 AS AvgScore, TIME_TO_STR(CreationDate, '%A') AS DayOfWeek, COUNT(Id) AS NumPosts FROM Posts WHERE Tags LIKE '%##Tag##%' GROUP BY TIME_TO_STR(CreationDate, '%A') ORDER BY MAX(100 * Score) \/ 100.0 DESC","CreationDate":"2013-07-22 00:00:50","validated":false,"QueryBody_Original":"SELECT  max(100*Score)\/100.0 as AvgScore,datename(dw,CreationDate) as DayOfWeek,count(Id) as NumPosts\nFROM Posts\nwhere Tags like '%##Tag##%'\ngroup by datename(dw,CreationDate)\norder by max(100*Score)\/100.0 DESC;"},{"QuerySetId":124930,"Title":"Top 50 users based on aervage number of upvotes per day","Description":null,"QueryBody":"SELECT DisplayName, Upvotes \/ (CAST(LastAccessDate AS INT) - CAST(CreationDate AS INT) + 1) AS VotesperDay FROM Users ORDER BY VotesperDay DESC LIMIT 50","CreationDate":"2013-07-22 02:18:11","validated":false,"QueryBody_Original":"SELECT  TOP 50 DisplayName, \nUpvotes\/(CONVERT(int,LastAccessDate)-CONVERT(int,CreationDate)+1) As VotesperDay\nFROM Users\nORDER BY VotesperDay DESC"},{"QuerySetId":124995,"Title":"Top Users by Location (Case-Insensitive)","Description":"Top users by location (case-insensitive).","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"No\", Id AS \"User Link\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE '%##Location##%' OR UPPER(Location) LIKE '%##Location##%' ORDER BY Reputation DESC","CreationDate":"2013-07-23 02:07:51","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [No], \n    Id AS [User Link], \n    Location, \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%##Location##%'\n    OR UPPER(Location) LIKE '%##Location##%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":124997,"Title":"Top Users by Badges and Location","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", PostTypeId, ParentId, Score FROM Posts WHERE OwnerUserId IN (SELECT Id FROM Users WHERE LOWER(Location) LIKE '%##Location##%' OR UPPER(Location) LIKE '%##Location##%') AND ((LOWER(Tags) LIKE '%##Tags##%' OR UPPER(Tags) LIKE '%##Tags##%') OR (ParentId IN (SELECT Id FROM Posts WHERE LOWER(Tags) LIKE '%##Tags##%' OR UPPER(Tags) LIKE '%##Tags##%')))","CreationDate":"2013-07-23 04:36:06","validated":false,"QueryBody_Original":"SELECT \n      OwnerUserId AS [User Link], \n      PostTypeId, \n      ParentId, \n      Score\n    FROM\n      Posts\n    WHERE\n        OwnerUserId IN\n        (\n          SELECT\n            Id\n          FROM\n            Users\n          WHERE\n            LOWER(Location) LIKE '%##Location##%' OR\n            UPPER(Location) LIKE '%##Location##%'\n        ) AND\n        (\n          (\n            LOWER(Tags) LIKE '%##Tags##%' OR\n            UPPER(Tags) LIKE '%##Tags##%'\n          ) OR\n          (\n            ParentId IN\n            (\n              SELECT\n                Id\n              FROM\n                Posts\n              WHERE\n                LOWER(Tags) LIKE '%##Tags##%' OR\n                UPPER(Tags) LIKE '%##Tags##%'\n            )\n          )\n        )"},{"QuerySetId":125003,"Title":"Top Users by Tags and Location","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"No\", Id AS \"User Link\", Reputation, Location, WebsiteURL, EmailHash, UpVotes, DownVotes FROM Users WHERE Id IN (SELECT Id FROM Users WHERE LOWER(Location) LIKE '%##Location##%' OR UPPER(Location) LIKE '%##Location##%') AND Id IN (SELECT OwnerUserId FROM Posts WHERE LOWER(Tags) LIKE '%##Tags##%' OR UPPER(Tags) LIKE '%##Tags##%') ORDER BY Reputation DESC","CreationDate":"2020-10-05 20:13:52","validated":false,"QueryBody_Original":"SELECT \n  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [No], \n  Id AS [User Link], \n  Reputation,\n  Location, \n  WebsiteURL,\n  EmailHash,\n  UpVotes,\n  DownVotes\nFROM\n  Users\nWHERE\n  Id IN\n  (\n    SELECT\n      Id\n    FROM\n      Users\n    WHERE\n      LOWER(Location) LIKE '%##Location##%' OR\n      UPPER(Location) LIKE '%##Location##%'\n  ) AND\n  Id IN\n  (\n    SELECT\n      OwnerUserId\n    FROM\n      Posts\n    WHERE\n      LOWER(Tags) LIKE '%##Tags##%' OR\n      UPPER(Tags) LIKE '%##Tags##%'\n  )\nORDER BY\n  Reputation DESC"},{"QuerySetId":125034,"Title":"user by location not has China","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%##Location##%' AND NOT Location LIKE '%China%' ORDER BY Reputation DESC","CreationDate":"2013-07-23 07:38:17","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location\nfrom Users\nwhere Location like '%##Location##%' and Location not like '%China%'\norder by Reputation desc"},{"QuerySetId":125214,"Title":"Questions with close votes and less views","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT p.id FROM posts AS p INNER JOIN votes AS v ON v.postid = p.id WHERE v.votetypeid = 6 \/* close votes *\/ AND p.viewcount < 100 \/* less than 100 views *\/ AND p.closeddate IS NULL \/* not closed yet *\/ GROUP BY p.id HAVING COUNT(CASE WHEN v.creationdate > '2013-07-07' THEN 1 ELSE 0 END) = 0) AS x","CreationDate":"2013-07-24 18:23:27","validated":false,"QueryBody_Original":"SELECT  count(*) from\n(SELECT p.id\nfrom posts p\ninner join votes v on v.postid = p.id\nwhere v.votetypeid = 6 --close votes\nand p.viewcount < 100 -- less than 100 views\nand p.closeddate is null -- not closed yet\ngroup by p.id\nhaving count(case when v.creationdate > '2013-07-07' then 1 else 0 end) = 0\n) x"},{"QuerySetId":125229,"Title":"select Id, AcceptedAnswerId, Tags from Posts where ViewCount > 10000","Description":null,"QueryBody":"SELECT Id, AcceptedAnswerId, ViewCount, Tags FROM Posts WHERE ViewCount > 10000","CreationDate":"2015-03-07 02:46:34","validated":false,"QueryBody_Original":"SELECT  Id, AcceptedAnswerId, ViewCount, Tags from Posts where ViewCount > 10000"},{"QuerySetId":125785,"Title":"How many questions Ryan has answered with margin collapse or overflow: hidden","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE OwnerUserId = '363815' AND (Body LIKE '%margin collapse%' OR Body LIKE '%overflow: hidden%' OR Body LIKE '%float%')","CreationDate":"2013-07-26 00:13:07","validated":false,"QueryBody_Original":"SELECT  Id from Posts where OwnerUserId = '363815' and (Body like '%margin collapse%' or Body like '%overflow: hidden%' or Body like '%float%')"},{"QuerySetId":125876,"Title":"South Carolinian Ranking (The Whitaker Ruler)","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%South Carolina%') OR LOWER(Location) LIKE LOWER('%, SC') OR Id = 497356 ORDER BY Reputation DESC","CreationDate":"2014-10-08 18:04:33","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%South Carolina%')\n    OR LOWER(Location) LIKE LOWER('%, SC')\n    OR Id = 497356\nORDER BY\n    Reputation DESC;"},{"QuerySetId":125975,"Title":"Unanswered questions with comment linking to Crusade","Description":null,"QueryBody":"SELECT P.CreationDate, P.Id AS \"Post Link\", P.Tags FROM Comments AS C, Posts AS P WHERE (C.Text LIKE '%http:\/\/chat.stackexchange.com\/rooms\/9141%' AND C.PostId = P.Id AND COALESCE(P.AnswerCount, 0) = 0 AND P.ClosedDate IS NULL) ORDER BY P.CreationDate","CreationDate":"2013-07-26 21:22:13","validated":false,"QueryBody_Original":"SELECT  P.CreationDate, P.Id AS [Post Link], P.Tags \nFROM Comments C, Posts P\nWhere (\n  C.Text LIKE '%http:\/\/chat.stackexchange.com\/rooms\/9141%' AND\n  C.PostId = P.Id AND\n  ISNULL(P.AnswerCount,0) = 0  AND\n  P.ClosedDate IS NULL\n  )\nORDER BY P.CreationDate ASC"},{"QuerySetId":126008,"Title":"Unanswered questions with a keyword in comment","Description":null,"QueryBody":"SELECT P.CreationDate, P.Id AS \"Post Link\", P.Body FROM Comments AS C, Posts AS P WHERE (P.PostTypeId = 1 AND C.Text LIKE '%##Keyword##%' AND C.PostId = P.Id AND COALESCE(P.AnswerCount, 0) = 0 AND P.ClosedDate IS NULL AND P.Score < 3) ORDER BY P.CreationDate","CreationDate":"2015-10-29 10:59:05","validated":false,"QueryBody_Original":"SELECT  P.CreationDate, P.Id AS [Post Link], P.Body \nFROM Comments C, Posts P\nWhere (\n  P.PostTypeId = 1 AND\n  C.Text LIKE '%##Keyword##%' AND\n  C.PostId = P.Id AND\n  ISNULL(P.AnswerCount,0) = 0  AND\n  P.ClosedDate IS NULL AND\n  P.Score < 3\n  )\nORDER BY P.CreationDate ASC"},{"QuerySetId":126023,"Title":"Unanswered questions scored 1 with at most one comments","Description":null,"QueryBody":"SELECT P.CreationDate, P.Id AS \"Post Link\", P.Body FROM Posts AS P WHERE (P.PostTypeId = 1 AND P.CommentCount < 2 AND COALESCE(P.AnswerCount, 0) = 0 AND P.ClosedDate IS NULL AND P.Score = 1) ORDER BY P.CreationDate","CreationDate":"2013-07-27 05:17:24","validated":false,"QueryBody_Original":"SELECT  P.CreationDate, P.Id AS [Post Link], P.Body \nFROM  Posts P\nWhere (\n  P.PostTypeId = 1 AND\n  P.CommentCount < 2 AND\n  ISNULL(P.AnswerCount,0) = 0  AND\n  P.ClosedDate IS NULL AND\n  P.Score = 1\n  )\nORDER BY P.CreationDate ASC"},{"QuerySetId":126190,"Title":"Unanswered questions beginning with a keyword","Description":null,"QueryBody":"SELECT p.CreationDate, p.Id AS \"Post Link\", p.Body FROM Posts AS p WHERE (p.PostTypeId = 1 AND p.Score < 3 AND COALESCE(p.AnswerCount, 0) = 0 AND ClosedDate IS NULL AND p.Body LIKE '<p>##Keyword##%') ORDER BY p.Id DESC","CreationDate":"2017-04-06 02:01:01","validated":false,"QueryBody_Original":"SELECT  p.CreationDate, p.Id AS [Post Link], p.Body \nFROM Posts p  \nWHERE (\n  p.PostTypeId = 1 AND \n  p.Score <3 AND \n  ISNULL(p.AnswerCount,0) = 0 AND\n  ClosedDate IS NULL AND\n  p.Body Like '<p>##Keyword##%'\n  )\nORDER BY p.Id DESC"},{"QuerySetId":126255,"Title":"Find users who offered the most bounties per post","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", PostId AS \"Post Link\", COUNT(*) AS Bounties FROM Votes WHERE VoteTypeId = 8 \/* BountyStart *\/ AND CreationDate >= '2011-09-09 11:00:00' GROUP BY UserId, PostId ORDER BY Bounties DESC","CreationDate":"2013-07-28 12:37:16","validated":false,"QueryBody_Original":"SELECT  UserId as [User Link], PostId as [Post Link], Count(*) As Bounties From Votes\nWhere VoteTypeId=8 --BountyStart\nAnd CreationDate>='2011-09-09 11:00:00'\nGroup By UserId, PostId\nOrder By Bounties Desc"},{"QuerySetId":126342,"Title":"Top 10 user over 100,000 rep","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation FROM Users WHERE Reputation > 100000","CreationDate":"2013-07-29 09:56:37","validated":false,"QueryBody_Original":"SELECT  \n \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n      Reputation > 100000"},{"QuerySetId":126487,"Title":"Top users: Santiago de Chile","Description":"List of Santiago-based users by reputation score.\r\n\r\nForked from an original query by BoltClock.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%santiago%chile%' ORDER BY Reputation DESC","CreationDate":"2013-07-30 07:31:10","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%santiago%chile%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":126578,"Title":"Duplicate comment at the same time","Description":null,"QueryBody":"SELECT MAX(ID) AS \"Comment Link\", Text, UserID, CreationDate FROM Comments AS c GROUP BY Text, CreationDate, UserID HAVING COUNT(*) >= 2 LIMIT 5","CreationDate":"2013-07-30 11:34:52","validated":false,"QueryBody_Original":"SELECT  TOP 5 MAX(ID) AS [Comment Link], Text, UserID, CreationDate\nFROM Comments c\nGROUP BY Text, CreationDate, UserID\nHAVING COUNT(*)>=2"},{"QuerySetId":126944,"Title":"Find first undeleted question on a site","Description":null,"QueryBody":"SELECT MIN(Id) AS \"Post Link\" FROM Posts","CreationDate":"2017-10-04 17:01:54","validated":false,"QueryBody_Original":"SELECT  Min(Id) as [Post Link] From Posts"},{"QuerySetId":127126,"Title":"Questions from reasonably high-rep users","Description":null,"QueryBody":"SELECT p.Id, p.Title, u.Id, u.Reputation FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE u.Reputation > 300","CreationDate":"2013-08-03 02:20:58","validated":false,"QueryBody_Original":"SELECT  p.Id, p.Title, u.Id,u.Reputation \n  from Posts as p \n  inner join Users as u\n    on p.OwnerUserId = u.Id\n  where u.Reputation > 300"},{"QuerySetId":127131,"Title":"select id  from posthistory;","Description":null,"QueryBody":"SELECT id FROM posthistory","CreationDate":"2013-08-03 03:36:25","validated":false,"QueryBody_Original":"SELECT  id from posthistory;"},{"QuerySetId":127144,"Title":"Find how many reputation a particular user have?","Description":null,"QueryBody":"SELECT reputation FROM users WHERE id = 2118383","CreationDate":"2019-12-23 10:25:55","validated":false,"QueryBody_Original":"SELECT  reputation from users where id=2118383;"},{"QuerySetId":127350,"Title":"Last 3 months unanswered questions","Description":null,"QueryBody":"SELECT * FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE Posts.PostTypeId = 1 AND Posts.CreationDate BETWEEN DATEADD(MONTH, -3, CURRENT_TIMESTAMP()) AND CURRENT_TIMESTAMP() AND AcceptedAnswerId IS NULL AND AnswerCount = 0 AND SCORE > -1 AND CommentCount = 0 AND Users.Reputation > 100","CreationDate":"2013-08-05 20:35:39","validated":false,"QueryBody_Original":"SELECT  * from Posts\nINNER JOIN Users ON Users.Id = OwnerUserId\nWHERE Posts.PostTypeId = 1\nAND Posts.CreationDate BETWEEN DATEADD(MONTH, -3, CURRENT_TIMESTAMP) AND CURRENT_TIMESTAMP\nand AcceptedAnswerId is null\nAND AnswerCount = 0\nAND SCORE >-1\nAND CommentCount = 0\nAND Users.Reputation > 100"},{"QuerySetId":127362,"Title":"Email hashes from Data Explorer","Description":null,"QueryBody":"SELECT EmailHash FROM Users WHERE NOT EmailHash IS NULL","CreationDate":"2013-08-05 22:18:54","validated":false,"QueryBody_Original":"SELECT \n  EmailHash\nFROM\n  Users\nWHERE\n  EmailHash Is Not Null"},{"QuerySetId":127366,"Title":"Popular science questions per month in layman tags","Description":null,"QueryBody":"SELECT \"Month\", SUM(CASE WHEN tags LIKE '%popular-science%' THEN 1 ELSE 0 END) AS Popsci, SUM(CASE WHEN tags LIKE '%everyday-life%' THEN 1 ELSE 0 END) AS Everydaylife, SUM(CASE WHEN tags LIKE '%home-experiment%' THEN 1 ELSE 0 END) AS HomeExp FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", PostTypeId, Tags FROM Posts AS p) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2013-08-05 22:53:53","validated":false,"QueryBody_Original":"SELECT  [Month], \n       sum(case when  tags like '%popular-science%' then 1 else 0 end) Popsci,\n       sum(case when  tags like '%everyday-life%' then 1 else 0 end) Everydaylife,\n              sum(case when  tags like '%home-experiment%' then 1 else 0 end) HomeExp\nfrom\n(\n  SELECT CAST(\n      cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) + '-01'\n    as datetime) [Month], \n    PostTypeId,Tags\n     \n  from Posts p\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":127471,"Title":"Find posts that were deleted and undeleted many times","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COUNT(*) AS Deletions FROM PostHistory WHERE PostHistoryTypeId = 12 GROUP BY PostId HAVING COUNT(*) > 2 ORDER BY Deletions DESC","CreationDate":"2013-08-06 15:09:39","validated":false,"QueryBody_Original":"SELECT  PostId As [Post Link], Count(*) As Deletions\nFrom PostHistory\nWhere PostHistoryTypeId=12\nGroup By PostId\nHaving Count(*)>2\nOrder By Deletions Desc"},{"QuerySetId":127609,"Title":"Users by number of famous question badges","Description":null,"QueryBody":"SELECT DisplayName, COUNT(*) AS number FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id GROUP BY DisplayName ORDER BY number DESC","CreationDate":"2013-08-07 19:35:04","validated":false,"QueryBody_Original":"SELECT  \n  DisplayName,\n  Count(*) as number\nfrom\n  Posts inner join Users on Posts.OwnerUserId = Users.Id\ngroup by\n  DisplayName\norder by\n  number desc"},{"QuerySetId":127654,"Title":"upvotes and downvotes per post in first week by month","Description":null,"QueryBody":"SELECT DATEADD(m, DATEDIFF(m, 0, Posts.CreationDate), 0) AS month, CAST(SUM(CASE WHEN votes.votetypeid = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(DISTINCT Posts.Id) AS upvotes_per_post, CAST(SUM(CASE WHEN votes.votetypeid = 3 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(DISTINCT Posts.Id) AS downvotes_per_post FROM Votes LEFT OUTER JOIN Posts ON Posts.Id = Votes.PostId WHERE (Votes.VoteTypeId = 2 OR Votes.VoteTypeId = 3) AND DATEDIFF(dd, Posts.CreationDate, Votes.CreationDate) <= 7 AND DATEADD(m, DATEDIFF(m, 0, Posts.CreationDate), 0) < DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0) GROUP BY DATEADD(m, DATEDIFF(m, 0, Posts.CreationDate), 0) ORDER BY DATEADD(m, DATEDIFF(m, 0, Posts.CreationDate), 0)","CreationDate":"2019-02-26 01:10:39","validated":false,"QueryBody_Original":"SELECT  \n  dateadd(m, datediff(m,0, Posts.CreationDate), 0) as month,\n  cast(sum(case when votes.votetypeid = 2 then 1 else 0 end) as float) \/ Count(distinct Posts.Id) as upvotes_per_post,\n    cast(sum(case when votes.votetypeid = 3 then 1 else 0 end) as float) \/ Count(distinct Posts.Id) as downvotes_per_post\n\nfrom\n  Votes\n    left outer join\n  Posts\n    on\n  Posts.Id = Votes.PostId\nwhere\n  (Votes.VoteTypeId = 2\n    or\n    Votes.VoteTypeId = 3)\n  and datediff(dd,Posts.CreationDate,Votes.CreationDate) <= 7\n  and dateadd(m, datediff(m,0, Posts.CreationDate), 0)\n    < dateadd(m, datediff(m,0, getdate()), 0)\ngroup by dateadd(m, datediff(m,0, Posts.CreationDate), 0)\norder by dateadd(m, datediff(m,0, Posts.CreationDate), 0)"},{"QuerySetId":128135,"Title":"List of questions edited by their owner at least 10 times","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", h.UserId AS \"User Link\", COUNT(DISTINCT h.CreationDate) AS Edits FROM PostHistory AS h INNER JOIN Posts AS p ON h.PostId = p.Id WHERE h.UserId = p.OwnerUserId AND h.PostHistoryTypeId = 5 AND p.ParentId IS NULL GROUP BY p.Id, h.UserId HAVING COUNT(DISTINCT h.CreationDate) >= 10 ORDER BY Edits DESC","CreationDate":"2013-08-08 14:38:10","validated":false,"QueryBody_Original":"SELECT  p.Id As [Post Link], h.UserId As [User Link], \nCount(Distinct h.CreationDate) As Edits\nFrom PostHistory h Inner Join Posts p On h.PostId=p.Id\nWhere h.UserId=p.OwnerUserId And h.PostHistoryTypeId=5\nAnd p.ParentId Is Null\nGroup By p.Id, h.UserId\nHaving Count(Distinct h.CreationDate)>=10\nOrder By Edits Desc"},{"QuerySetId":128154,"Title":"Top users by reputation from Cyprus","Description":null,"QueryBody":"SELECT Reputation, DisplayName, Location, ID FROM Users WHERE Location LIKE '%Cyprus%' AND Reputation > 0 ORDER BY Reputation DESC","CreationDate":"2017-06-20 13:59:51","validated":false,"QueryBody_Original":"SELECT  Reputation, DisplayName, Location, ID FROM Users \nWHERE Location LIKE '%Cyprus%' AND Reputation > 0\nORDER BY Reputation DESC"},{"QuerySetId":128155,"Title":"Top users by reputation from Romania","Description":null,"QueryBody":"SELECT Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%Romania%' AND Reputation > 101 ORDER BY Reputation DESC","CreationDate":"2020-01-19 21:41:41","validated":false,"QueryBody_Original":"SELECT  Reputation, DisplayName, Location FROM Users \nWHERE Location LIKE '%Romania%' AND Reputation > 101\nORDER BY Reputation DESC"},{"QuerySetId":128163,"Title":"you are all a bunch of stupid idiots","Description":null,"QueryBody":"SELECT 'stupid idiot' AS \"stupid idiot\" FROM Posts","CreationDate":"2019-07-29 18:44:04","validated":false,"QueryBody_Original":"SELECT  \n  'stupid idiot' as 'stupid idiot'\nfrom Posts"},{"QuerySetId":128283,"Title":"What are my posts that use code tags?","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%<code>%' AND Tags LIKE '%overwatch%' ORDER BY CreationDate DESC","CreationDate":"2016-10-17 15:25:25","validated":false,"QueryBody_Original":"SELECT  Id As [Post Link]\n  FROM Posts\n  WHERE\n    Body LIKE '%<code>%' AND\n    Tags LIKE '%overwatch%'\n  ORDER BY CreationDate DESC;"},{"QuerySetId":128329,"Title":"Moderate to high rep users with more questions than answers","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation, QuestionCount, AnswerCount, CreationDate, CAST(QuestionCount AS FLOAT) \/ CAST(AnswerCount AS FLOAT) AS \"Ratio\" FROM Users INNER JOIN (SELECT OwnerUserId, COUNT(*) AS QuestionCount FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserID) AS Q ON Users.Id = Q.OwnerUserID INNER JOIN (SELECT OwnerUserId, COUNT(*) AS AnswerCount FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS A ON Users.Id = A.OwnerUserId WHERE QuestionCount > AnswerCount AND Users.Reputation > 1000 AND AnswerCount >= 100 AND CreationDate >= '2012-01-01' ORDER BY Reputation DESC","CreationDate":"2015-04-09 08:42:04","validated":false,"QueryBody_Original":"SELECT \n  Users.Id as [User Link],\n  Users.Reputation,\n  QuestionCount,\n  AnswerCount,\n  CreationDate,\n  CONVERT(float, QuestionCount)\/CONVERT(float, AnswerCount) as [Ratio]\nFROM Users\nINNER JOIN (\n  SELECT OwnerUserId, count(*) as QuestionCount\n  FROM Posts\n  WHERE PostTypeId = 1\n  GROUP BY OwnerUserID\n  ) as Q on Users.Id = Q.OwnerUserID\nINNER JOIN (\n  SELECT OwnerUserId, count(*) as AnswerCount\n  FROM Posts\n  WHERE PostTypeId = 2\n  GROUP BY OwnerUserId\n  ) as A on Users.Id = A.OwnerUserId\nWHERE \n  QuestionCount > AnswerCount AND\n  Users.Reputation > 1000 AND\n  AnswerCount >= 100 AND\n  CreationDate >= '2012-01-01'\nORDER BY Reputation DESC;"},{"QuerySetId":128619,"Title":"Time difference between answer being posted and accepted","Description":null,"QueryBody":"SELECT id FROM posts","CreationDate":"2013-08-12 14:10:25","validated":false,"QueryBody_Original":"SELECT  id from posts"},{"QuerySetId":128803,"Title":"Top 100 Moroccan users in StackOverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%morocco%' OR LOWER(Location) LIKE '%MAROC%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-07-30 03:23:56","validated":false,"QueryBody_Original":"SELECT \nTOP (100) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%morocco%'\n    Or\n    LOWER(Location) LIKE '%MAROC%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":128847,"Title":"How many Posts are there on the website?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE AcceptedAnswerId = 0","CreationDate":"2014-01-04 02:28:28","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts WHERE AcceptedAnswerId=0;\nSELECT COUNT(*) FROM Posts WHERE Score=0;\nSELECT COUNT(*) FROM Posts  WHERE CommentCount=0"},{"QuerySetId":129587,"Title":"CV Most Interesting Users - Only Counting \"immediate\" votes","Description":null,"QueryBody":"SELECT COUNT(*) AS score, p.id, p.owneruserid FROM votes AS v, posts AS p, posts AS p2 WHERE v.voteTypeId = 2 \/* only look at upvotes *\/ AND v.postid = p.id AND p.parentid = p2.id AND v.creationDate - p2.creationDate < 14 \/* only count votes within two weeks of post) *\/ GROUP BY p.id, p.owneruserid HAVING COUNT(*) > 10","CreationDate":"2013-08-14 02:29:57","validated":false,"QueryBody_Original":"SELECT  count(*) score, p.id, p.owneruserid\nFROM votes v, posts p, posts p2\nwhere v.voteTypeId = 2 -- only look at upvotes\nand v.postid = p.id\nand p.parentid = p2.id\nand v.creationDate - p2.creationDate < 14 --only count votes within two weeks of post)\ngroup by p.id, p.owneruserid\nhaving count(*) > 10"},{"QuerySetId":130903,"Title":"Number of Users sign up to StackOverflow over time.","Description":null,"QueryBody":"SELECT DATEADD(day, DATEDIFF(day, 0, CreationDate), 0) AS \"Day\", COUNT(*) AS \"Number of New Questions\" FROM Posts WHERE PostTypeId = 1 GROUP BY DATEADD(day, DATEDIFF(day, 0, CreationDate), 0) ORDER BY \"Day\"","CreationDate":"2013-08-21 15:22:49","validated":false,"QueryBody_Original":"SELECT   DATEADD(day, DATEDIFF(day, 0, CreationDate), 0) AS [Day],\n        count(*) AS [Number of New Questions] \nFROM Posts\nWHERE PostTypeId = 1 \nGROUP BY DATEADD(day, DATEDIFF(day, 0, CreationDate), 0) ORDER BY [Day]"},{"QuerySetId":130905,"Title":"Number of new Users per weekday.","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W') AS \"Day of week\", COUNT(*) AS \"Number of new users\" FROM Users GROUP BY TIME_TO_STR(CreationDate, '%W') ORDER BY \"Day of week\"","CreationDate":"2013-08-17 04:06:24","validated":false,"QueryBody_Original":"SELECT   datepart(dw, CreationDate) AS [Day of week],\n        count(*) AS [Number of new users] \nFROM Users \nGROUP BY datepart(dw, CreationDate) ORDER BY [Day of week]"},{"QuerySetId":131520,"Title":"How many users have cast more than 100 downvotes?","Description":null,"QueryBody":"SELECT COUNT(Id) FROM users WHERE DownVotes > 100","CreationDate":"2013-08-19 22:27:04","validated":false,"QueryBody_Original":"SELECT  Count(Id) from users where DownVotes > 100"},{"QuerySetId":131587,"Title":"select tags from posts where id = 18326836","Description":null,"QueryBody":"SELECT tags FROM posts WHERE id = 18326836","CreationDate":"2013-08-20 08:35:54","validated":false,"QueryBody_Original":"SELECT  tags from posts where id = 18326836;"},{"QuerySetId":132818,"Title":"Retrieve all questions that are marked as duplicated, with additional information.","Description":null,"QueryBody":"SELECT h.Id FROM PostHistory AS h WHERE h.PostId = 132818 AND h.PostHistoryTypeId = 10 AND h.Text LIKE '{\"OriginalQuestionIds\":%' ORDER BY h.Id DESC LIMIT 1","CreationDate":"2013-08-25 08:40:14","validated":false,"QueryBody_Original":"SELECT  TOP 1\n        h.Id\n      FROM PostHistory h\n      WHERE \n        \n          h.PostId = 132818         AND \n          h.PostHistoryTypeId = 10\n         AND \n          h.Text LIKE '{\"OriginalQuestionIds\":%'\n       \n      ORDER BY h.Id DESC"},{"QuerySetId":132908,"Title":"Users with more than 3k characters in About Me","Description":null,"QueryBody":"SELECT Id AS \"User Link\", LENGTH(AboutMe) AS \"Length of About Me\", AboutMe FROM Users WHERE LENGTH(AboutMe) > 3000 ORDER BY LENGTH(AboutMe) DESC","CreationDate":"2015-10-10 17:33:37","validated":false,"QueryBody_Original":"SELECT \n  Id AS [User Link],\n  LEN(AboutMe) AS 'Length of About Me',\n  AboutMe\nFROM Users\nWHERE LEN(AboutMe) > 3000\nORDER BY LEN(AboutMe) DESC"},{"QuerySetId":132910,"Title":"Which badges that Jon Skeet doesn't have, have I ?","Description":null,"QueryBody":"SELECT DISTINCT Name FROM Badges AS b WHERE UserId = 22656","CreationDate":"2015-11-21 03:16:59","validated":false,"QueryBody_Original":"SELECT  distinct Name From Badges b Where UserId = 22656"},{"QuerySetId":133122,"Title":"Top editors with type breakdown","Description":"Does not count edits to one's own posts.\r\nDoes not count rollbacks.\r\nDoes not count edits to community wiki posts after they were made CW.\r\n","QueryBody":"SELECT h.UserId AS \"User Link\", SUM(CASE WHEN h.PostHistoryTypeId = 6 THEN 1 ELSE 0 END) AS \"Retags\", SUM(CASE WHEN h.PostHistoryTypeId = 5 THEN 1 ELSE 0 END) AS \"Body edits\", SUM(CASE WHEN h.PostHistoryTypeId = 4 THEN 1 ELSE 0 END) AS \"Title edits\", COUNT(DISTINCT h.CreationDate) AS \"Total edits\", COUNT(DISTINCT h.PostId) AS \"Total edited posts\" FROM PostHistory AS h, Posts AS p WHERE p.Id = h.PostId AND (h.PostHistoryTypeId = 4 OR h.PostHistoryTypeId = 5 OR h.PostHistoryTypeId = 6) AND h.UserId <> p.OwnerUserId AND (p.CommunityOwnedDate IS NULL OR h.CreationDate < p.CommunityOwnedDate) GROUP BY h.UserId ORDER BY \"Total edited posts\" DESC","CreationDate":"2013-08-27 17:56:38","validated":false,"QueryBody_Original":"SELECT \n  h.UserId AS [User Link],\n  Sum(Iif(h.PostHistoryTypeId = 6, 1, 0)) AS [Retags],\n  Sum(Iif(h.PostHistoryTypeId = 5, 1, 0)) AS [Body edits],\n  Sum(Iif(h.PostHistoryTypeId = 4, 1, 0)) AS [Title edits],\n  Count(DISTINCT h.CreationDate) AS [Total edits],\n  Count(DISTINCT h.PostId) AS [Total edited posts]\nFROM PostHistory h, Posts p\nWHERE p.Id = h.PostId\n  AND (h.PostHistoryTypeId = 4 OR h.PostHistoryTypeId = 5 OR h.PostHistoryTypeId = 6)\n  AND h.UserId <> p.OwnerUserId\n  AND (p.CommunityOwnedDate IS NULL OR h.CreationDate < p.CommunityOwnedDate)\nGROUP BY h.UserId\nORDER BY [Total edited posts] DESC"},{"QuerySetId":133202,"Title":"Enterprise Library Answers By Year","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%YEAR'), COUNT(*) FROM Posts AS p WHERE p.Tags LIKE ('%<enterprise-library>%') AND p.AnswerCount > 0 AND p.ClosedDate IS NULL GROUP BY TIME_TO_STR(p.CreationDate, '%YEAR')","CreationDate":"2013-08-28 09:38:45","validated":false,"QueryBody_Original":"SELECT  \n  DATEPART(YEAR, p.CreationDate), \n  COUNT(*)\nFROM\n  Posts p \nWHERE\n      p.Tags like ('%<enterprise-library>%')\nAND   p.AnswerCount > 0\nAND   p.ClosedDate IS NULL\nGROUP BY\n  DATEPART(YEAR, p.CreationDate)"},{"QuerySetId":133211,"Title":"Amount of unique users for a tag (or tags)","Description":null,"QueryBody":"SELECT id FROM tags WHERE tagname IN ('office-js')","CreationDate":"2016-10-03 22:11:39","validated":false,"QueryBody_Original":"SELECT  id from tags where tagname in ('office-js')"},{"QuerySetId":133614,"Title":"Most common display names ","Description":null,"QueryBody":"SELECT DisplayName, COUNT(DisplayName) AS N FROM Users GROUP BY DisplayName ORDER BY N DESC LIMIT 100","CreationDate":"2013-08-29 17:58:51","validated":false,"QueryBody_Original":"SELECT  TOP 100 DisplayName, COUNT(DisplayName) AS N FROM Users\nGROUP BY DisplayName \nORDER BY N DESC"},{"QuerySetId":133696,"Title":"Lastest Query with Specified Tag (Single Tag)","Description":null,"QueryBody":"SELECT Title FROM Posts","CreationDate":"2013-08-30 10:15:14","validated":false,"QueryBody_Original":"SELECT  Title from Posts"},{"QuerySetId":133857,"Title":"Comments I made about accepting","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Comments WHERE UserID = 1438393 AND \"Text\" LIKE '%accept%'","CreationDate":"2013-08-31 09:50:13","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], * FROM Comments WHERE UserID = 1438393\nAND [Text] LIKE '%accept%'"},{"QuerySetId":134607,"Title":"Top 200 users from Belgium","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%belgium%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2013-09-03 17:14:55","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%belgium%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":134914,"Title":"Top 500 users from india","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' AND DisplayName LIKE '%geek%' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2013-09-04 17:16:11","validated":false,"QueryBody_Original":"SELECT \nTOP (500) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%' and DisplayName like '%geek%'\n  \nORDER BY\n    Reputation DESC;"},{"QuerySetId":135070,"Title":"Top 100 highest profile views per reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY (CAST(Views AS FLOAT) \/ CAST(Reputation AS FLOAT)) DESC) AS Rank, ID AS \"User Link\", CAST(Views AS FLOAT) \/ CAST(Reputation AS FLOAT), Views, Reputation FROM USERS WHERE Reputation >= 1000 LIMIT 1000","CreationDate":"2013-09-05 01:22:11","validated":false,"QueryBody_Original":"SELECT  TOP 1000 ROW_NUMBER() OVER(ORDER BY (cast(Views as float) \/ cast(Reputation as float)) DESC) AS Rank\n              , ID AS [User Link]\n              , cast(Views as float) \/ cast(Reputation as float), Views, Reputation\nFROM USERS\nWhere Reputation >= 1000"},{"QuerySetId":135413,"Title":"Number of users by age","Description":null,"QueryBody":"SELECT Age, COUNT(17) FROM Users GROUP BY Age ORDER BY Age","CreationDate":"2013-10-12 03:09:13","validated":false,"QueryBody_Original":"SELECT  Age, count(17)\nfrom Users\ngroup by Age\norder by Age asc"},{"QuerySetId":136861,"Title":"Who from your location are you better than?","Description":null,"QueryBody":"SELECT U2.* FROM USERS AS U1 JOIN USERS AS U2 ON U1.LOCATION = U2.LOCATION WHERE 1 = 1 AND U1.DisplayName = 'jyparask' AND U1.REPUTATION <= U2.REPUTATION ORDER BY U2.REPUTATION DESC, U2.DISPLAYNAME","CreationDate":"2013-09-13 10:43:43","validated":false,"QueryBody_Original":"SELECT  U2.*\nFROM USERS U1\n  JOIN USERS U2 ON U1.LOCATION = U2.LOCATION\nWHERE\n  1 = 1\n  AND U1.DisplayName = 'jyparask'\n  AND U1.REPUTATION <= U2.REPUTATION\nORDER BY U2.REPUTATION DESC, U2.DISPLAYNAME"},{"QuerySetId":137249,"Title":"Users having cast more downvotes than upvotes","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(p.OwnerUserId) AS \"total posts\", u.UpVotes, u.DownVotes FROM Users AS u LEFT JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE u.UpVotes - u.DownVotes < 0 GROUP BY u.Id, u.UpVotes, u.DownVotes ORDER BY COUNT(p.OwnerUserId), u.DownVotes DESC","CreationDate":"2013-09-13 17:40:44","validated":false,"QueryBody_Original":"SELECT  u.Id as [User Link], count(p.OwnerUserId)as \"total posts\", u.UpVotes, u.DownVotes\nFROM Users u\n    LEFT JOIN Posts p ON u.Id = p.OwnerUserId\nWHERE u.UpVotes - u.DownVotes < 0\ngroup by u.Id,  u.UpVotes, u.DownVotes\norder by count(p.OwnerUserId) asc, u.DownVotes desc"},{"QuerySetId":137359,"Title":"Find posts to close (with almost 5 close votes)","Description":null,"QueryBody":"SELECT V.PostId AS \"Post Link\", V.VoteTypeId, COUNT(V.VoteTypeId) AS \"Votes\" FROM Votes AS V WHERE V.VoteTypeId IN (6, 7) GROUP BY V.PostId, V.VoteTypeId HAVING COUNT(V.VoteTypeId) > 0 AND COUNT(V.VoteTypeId) < 5 LIMIT 200","CreationDate":"2013-11-07 16:29:02","validated":false,"QueryBody_Original":"SELECT \nTOP 200\n  V.PostId AS [Post Link],\n  V.VoteTypeId,\n  COUNT(V.VoteTypeId) AS \"Votes\"\nFROM Votes V\nWHERE V.VoteTypeId IN (6, 7)\nGROUP BY V.PostId, V.VoteTypeId\nHAVING COUNT(V.VoteTypeId) > 0 AND COUNT(V.VoteTypeId) < 5"},{"QuerySetId":137441,"Title":"Views per Day for the Questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount, ROUND(CAST(ViewCount AS FLOAT) \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate), 1) AS ViewsPerDay FROM Posts WHERE PostTypeId = 1 ORDER BY ViewsPerDay DESC LIMIT 100","CreationDate":"2013-12-09 10:31:52","validated":false,"QueryBody_Original":"SELECT  TOP (100) Id as [Post Link],\n  ViewCount,\n  round(cast(ViewCount as float)\/DATEDIFF(dd,CreationDate,getdate()),1) ViewsPerDay\n       \n  from Posts\n where PostTypeId = 1\n order by ViewsPerDay desc;"},{"QuerySetId":137721,"Title":"Top 20 iOS Devs in Berlin","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(AboutME) LIKE '%ios%' OR LOWER(AboutME) LIKE '%iphone%') AND (LOWER(Location) LIKE '%berlin%') ORDER BY Reputation DESC LIMIT 20","CreationDate":"2013-09-17 19:15:40","validated":false,"QueryBody_Original":"SELECT  TOP (20)\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n(LOWER(AboutME) LIKE '%ios%' or LOWER(AboutME) LIKE '%iphone%') AND (\n LOWER(Location) LIKE '%berlin%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":138081,"Title":"Delete me - trial query","Description":null,"QueryBody":"SELECT creationdate FROM comments WHERE userid = '##UserId##'","CreationDate":"2013-09-18 22:30:18","validated":false,"QueryBody_Original":"SELECT  creationdate from comments where userid='##UserId##'"},{"QuerySetId":138408,"Title":"Top 10 Users from Nigeria","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE 'nigeria%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2013-09-20 10:53:20","validated":false,"QueryBody_Original":"SELECT \nTOP (10) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE 'nigeria%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":138409,"Title":"Top 5 Users from Nigeria","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%nigeria%' OR UPPER(Location) LIKE 'Lagos, Nigeria' ORDER BY Reputation DESC LIMIT 15","CreationDate":"2013-09-20 10:55:34","validated":false,"QueryBody_Original":"SELECT \nTOP (15) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%nigeria%'\n    OR UPPER(Location) LIKE 'Lagos, Nigeria'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":138574,"Title":"Top posts per 21 days","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, Score FROM Posts WHERE Posts.CreationDate > CURRENT_TIMESTAMP() - 21 ORDER BY Score DESC LIMIT 20","CreationDate":"2013-09-22 01:05:12","validated":false,"QueryBody_Original":"SELECT  TOP 20 \n    Id as [Post Link],\n    Title, Score\nFROM Posts\nWHERE \n    Posts.CreationDate > GETDATE() - 21\nORDER BY Score DESC;"},{"QuerySetId":138768,"Title":"Top iOS Devs in Brazil","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(AboutME) LIKE '%ios%' OR LOWER(AboutME) LIKE '%iphone%' OR LOWER(AboutMe) LIKE '%mobile%') ORDER BY Reputation DESC","CreationDate":"2013-09-23 19:19:55","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n(LOWER(AboutME) LIKE '%ios%' or LOWER(AboutME) LIKE '%iphone%' or LOWER(AboutMe) LIKE '%mobile%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":138872,"Title":"Top 300 users from Romania","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%arad%romania%' ORDER BY Reputation DESC LIMIT 300","CreationDate":"2017-12-03 17:44:02","validated":false,"QueryBody_Original":"SELECT \nTOP (300) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%arad%romania%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":138888,"Title":"Closed question percentage by month","Description":null,"QueryBody":"SELECT (SELECT COUNT(ClosedDate) FROM Posts WHERE PostTypeId = 1) AS \"Closed\", COUNT(*) AS \"Total\", CONCAT(YEAR(q.CreationDate), '\/', MONTH(q.CreationDate)) AS \"Month\" FROM Posts AS q WHERE PostTypeId = 1 GROUP BY CONCAT(YEAR(q.CreationDate), '\/', MONTH(q.CreationDate))","CreationDate":"2013-09-24 19:17:42","validated":false,"QueryBody_Original":"SELECT  \n (SELECT COUNT(ClosedDate) FROM Posts WHERE PostTypeId = 1) AS 'Closed', \n COUNT(*) AS 'Total',\n  CONCAT( YEAR(q.CreationDate), '\/', MONTH(q.CreationDate) ) AS 'Month'\nFROM Posts q \nWHERE PostTypeId = 1\nGROUP BY CONCAT( YEAR(q.CreationDate), '\/', MONTH(q.CreationDate) )"},{"QuerySetId":139311,"Title":"SELECT         Score FROM      Comments ","Description":null,"QueryBody":"SELECT Score FROM Comments","CreationDate":"2013-09-26 21:22:03","validated":false,"QueryBody_Original":"SELECT  Score From Comments"},{"QuerySetId":139539,"Title":"How many questions get reopened?","Description":null,"QueryBody":"SELECT COUNT(*) FROM PostHistory WHERE PostHistoryTypeId = 11 AND CreationDate >= DATEADD(MONTH, -2, GETDATE())","CreationDate":"2014-06-12 16:58:27","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM PostHistory \nWHERE PostHistoryTypeId = 11\nAND CreationDate >= DATEADD(MONTH, -2, GETDATE())"},{"QuerySetId":139542,"Title":"People who have voted in current election","Description":null,"QueryBody":"SELECT u.Id, u.Reputation, u.DisplayName, b2.Badge, b2.BadgeDate FROM Users AS u LEFT JOIN (SELECT b.Name AS Badge, b.Date AS BadgeDate, b.UserID FROM Badges AS b WHERE b.Name = 'Constituent' AND YEAR(b.Date) = 2013) AS b2 ON b2.UserID = u.ID ORDER BY b2.BadgeDate DESC","CreationDate":"2013-09-27 23:02:07","validated":false,"QueryBody_Original":"SELECT \nu.Id,\nu.Reputation,\nu.DisplayName,\nb2.Badge,\nb2.BadgeDate\nFROM Users AS u\n  LEFT JOIN (\n             SELECT b.Name AS Badge, b.Date AS BadgeDate, b.UserID \n             FROM Badges AS b \n             WHERE b.Name = 'Constituent' AND YEAR(b.Date) = 2013 \n             ) AS b2 ON b2.UserID = u.ID\nORDER BY b2.BadgeDate DESC"},{"QuerySetId":139619,"Title":"Recent short posts containing multiple common typos","Description":"Posts containing a body that is less than 8 chars long\r\n","QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE PostTypeId = 1 AND Id > 1000000 AND Id < 5000000 AND Body LIKE '%, and%' AND Body LIKE '%doesnt%' AND LENGTH(Body) < 500 ORDER BY Id DESC","CreationDate":"2013-09-28 17:26:21","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body \nfrom Posts \nwhere \n  PostTypeId = 1 and\n  Id > 1000000 and\n  Id < 5000000 and\n  Body LIKE '%, and%' and\n  Body LIKE '%doesnt%' and\n  Len(Body) < 500 \n  \nORDER BY \n  Id DESC"},{"QuerySetId":140085,"Title":"Recent short questions containing multiple common typos","Description":"Posts containing a body that is less than 8 chars long\r\n","QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE PostTypeId = 1 AND Id > 11000000 AND Id < 15000000 AND Body LIKE '%, and%' AND Body LIKE '%doesnt%' AND Body LIKE '% http%' AND LENGTH(Body) < 1000 ORDER BY Id DESC","CreationDate":"2013-10-03 14:27:49","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body \nfrom Posts \nwhere \n  PostTypeId = 1 and\n  Id > 11000000 and\n  Id < 15000000 and\n  Body LIKE '%, and%' and\n  Body LIKE '%doesnt%' and\n  Body LIKE '% http%' and\n  Len(Body) < 1000 \n  \nORDER BY \n  Id DESC"},{"QuerySetId":140339,"Title":"Average comment score by length","Description":null,"QueryBody":"SELECT MIN(LENGTH(text)), AVG(CAST(score AS FLOAT)) FROM comments GROUP BY LENGTH(text) \/ 15 ORDER BY LENGTH(text) \/ 15","CreationDate":"2013-10-02 14:04:39","validated":false,"QueryBody_Original":"SELECT  min(len(text)), avg(try_cast(score as float))\nfrom comments\ngroup by len(text)\/15\norder by len(text)\/15"},{"QuerySetId":140344,"Title":"Users with Images in their AboutME","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, AboutMe FROM Users WHERE LOWER(AboutMe) LIKE '%great firewall%' OR LOWER(DisplayName) LIKE '%great firewall%' OR LOWER(AboutMe) LIKE '%tian an men%' OR LOWER(DisplayName) LIKE '%tian an men%' OR LOWER(AboutMe) LIKE '%tiananmen%' OR LOWER(DisplayName) LIKE '%tiananmen%' OR LOWER(AboutMe) LIKE '%falun%' OR LOWER(DisplayName) LIKE '%falun%' ORDER BY Reputation DESC LIMIT 256","CreationDate":"2015-05-11 14:30:54","validated":false,"QueryBody_Original":"SELECT  TOP 256\n  Id AS [User Link], Reputation, DisplayName, AboutMe\nFROM\n  Users\nWHERE\n  LOWER(AboutMe) LIKE '%great firewall%' OR\n  LOWER(DisplayName) LIKE '%great firewall%' OR\n  LOWER(AboutMe) LIKE '%tian an men%' OR\n  LOWER(DisplayName) LIKE '%tian an men%' OR\n  LOWER(AboutMe) LIKE '%tiananmen%' OR\n  LOWER(DisplayName) LIKE '%tiananmen%' OR\n  LOWER(AboutMe) LIKE '%falun%' OR\n  LOWER(DisplayName) LIKE '%falun%'\nORDER BY Reputation DESC"},{"QuerySetId":140353,"Title":"Average comment length and score","Description":null,"QueryBody":"SELECT AVG(LENGTH(text)), AVG(CAST(COALESCE(score, 0.0) AS FLOAT)) FROM comments WHERE NOT score IS NULL","CreationDate":"2013-11-06 04:15:56","validated":false,"QueryBody_Original":"SELECT  avg(len(text)), avg(cast (isnull(score, 0.0) as float))\nfrom comments\nwhere score is not null;"},{"QuerySetId":140359,"Title":"Total Posts (Group By Month)","Description":null,"QueryBody":"SELECT COUNT(*) AS Total FROM posts","CreationDate":"2014-03-10 05:02:26","validated":false,"QueryBody_Original":"SELECT \n  count(*) as Total\nfrom \n  posts"},{"QuerySetId":140360,"Title":"Questions without 'Accept' by the author (Group by Month)","Description":null,"QueryBody":"SELECT COUNT(*) AS Total, DAY(CreationDate) AS Day, MONTH(CreationDate) AS Month, YEAR(CreationDate) AS Year FROM PostLinks WHERE LinkTypeId = 3 GROUP BY DAY(CreationDate), MONTH(CreationDate), YEAR(CreationDate) ORDER BY Year, Month, day","CreationDate":"2016-09-15 03:38:23","validated":false,"QueryBody_Original":"SELECT \n  count(*) as Total,\n  day(CreationDate) as Day,\n  month(CreationDate) as Month,\n  year(CreationDate)  as Year\nfrom \n  PostLinks\nwhere\n  LinkTypeId = 3\n  \ngroup by\n  day(CreationDate),\n  month(CreationDate),\n  year(CreationDate)\norder by \n  Year, Month, day"},{"QuerySetId":140367,"Title":"Descriptive Statistics of Accepted Questions (Group by Month)","Description":null,"QueryBody":"SELECT YEAR(a.CreationDate) AS Year, MONTH(a.CreationDate) AS Month, COUNT(*) AS Total FROM posts AS a WHERE (a.tags LIKE '%<bash>%' OR a.tags LIKE '%<shell>%') GROUP BY MONTH(a.CreationDate), YEAR(a.CreationDate) ORDER BY Year, Month","CreationDate":"2013-10-02 17:29:19","validated":false,"QueryBody_Original":"SELECT  \n  year(a.CreationDate)  as Year,\n  month(a.CreationDate) as Month,\n  count(*) as Total\nfrom \n  posts a\nwhere \n  (a.tags like '%<bash>%' or a.tags like '%<shell>%')\ngroup by\n  month(a.CreationDate),\n  year(a.CreationDate)\norder by \n  Year,Month\n;\n\nSELECT\n  year(a.CreationDate)  as Year,\n  month(a.CreationDate) as Month,\n  count(*) as Total_Accepted,\n  avg (Datediff(minute,a.CreationDate,b.CreationDate)) as Average,\n  max (Datediff(minute,a.CreationDate,b.CreationDate)) as Maximum,\n  min (Datediff(minute,a.CreationDate,b.CreationDate)) as Minimum\nfrom \n  posts a, posts b\nwhere \n  (a.tags like '%<bash>%' or a.tags like '%<shell>%') and\n  (a.AcceptedAnswerId = b.id)\ngroup by\n  month(a.CreationDate),\n  year(a.CreationDate)\norder by \n  Year,Month"},{"QuerySetId":140459,"Title":"Recent short answers containing only links","Description":"Posts containing a body that is less than 8 chars long\r\n","QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE PostTypeId = 2 AND Id > 0 AND Id < 2000000 AND Body LIKE '%how can i%' AND NOT Body LIKE '%<blockquote>%' AND NOT Body LIKE '%<em>%' AND LENGTH(Body) < 1000 ORDER BY Id DESC","CreationDate":"2013-10-03 11:16:44","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body \nfrom Posts \nwhere \n  PostTypeId = 2 and\n  Id > 0 and\n  Id < 2000000 and\n  Body LIKE '%how can i%' and\n  Body not LIKE '%<blockquote>%' and\n  Body not LIKE '%<em>%' and\n  Len(Body) < 1000 \n  \nORDER BY \n  Id DESC"},{"QuerySetId":140461,"Title":"Who from my location am I better than?","Description":null,"QueryBody":"SELECT DENSE_RANK() OVER (ORDER BY U2.REPUTATION DESC) AS \"Rank\", U2.DisplayName AS \"Display Name\", U2.Reputation AS \"Reputation\", U2.Location AS \"Location\", U2.Age AS \"Age\" FROM USERS AS U1 JOIN USERS AS U2 ON U1.LOCATION = U2.LOCATION WHERE U1.DisplayName = 'Vijaykumar Hadalgi' AND U1.REPUTATION >= U2.REPUTATION ORDER BY U2.REPUTATION DESC, U2.Age","CreationDate":"2013-12-02 13:16:56","validated":false,"QueryBody_Original":"SELECT  \n  DENSE_RANK() OVER (ORDER BY U2.REPUTATION DESC) AS  'Rank',\n  U2.DisplayName AS 'Display Name',\n  U2.Reputation AS 'Reputation',\n  U2.Location AS 'Location',\n  U2.Age AS 'Age'\nFROM USERS U1\n  JOIN USERS U2 ON U1.LOCATION = U2.LOCATION\nWHERE U1.DisplayName = 'Vijaykumar Hadalgi'\n  AND U1.REPUTATION >= U2.REPUTATION\nORDER BY U2.REPUTATION DESC,U2.Age"},{"QuerySetId":140468,"Title":"Recent short answers that are asking questions","Description":"Posts containing a body that is less than 8 chars long\r\n","QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE PostTypeId = 2 AND Id > 10000000 AND Id < 15000000 AND Body LIKE '%how can i %' AND NOT Body LIKE '%<em>%' AND NOT Body LIKE '%<blockquote>%' ORDER BY Id DESC","CreationDate":"2013-10-06 06:32:59","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body \nfrom Posts \nwhere \n  PostTypeId = 2 and\n  Id > 10000000 and\n  Id < 15000000 and\n  Body LIKE '%how can i %' and\n  Body not LIKE '%<em>%' and\n  Body not LIKE '%<blockquote>%'\n  \nORDER BY \n  Id DESC"},{"QuerySetId":140480,"Title":"Recent short questions containing multiple common typos and links needing embedding","Description":"Posts containing a body that is less than 8 chars long\r\n","QueryBody":"SELECT TagName FROM Tags WHERE WikiPostId = 1 AND Id > 17000000 AND Id < 18000000 ORDER BY Id DESC","CreationDate":"2015-09-19 13:53:11","validated":false,"QueryBody_Original":"SELECT  TagName\nfrom Tags\nwhere \n  WikiPostId = 1 and\n  Id > 17000000 and\n  Id < 18000000 \nORDER BY \n  Id DESC"},{"QuerySetId":140931,"Title":"monthly q and a on GIS","Description":null,"QueryBody":"SELECT \"Location\" FROM Users AS u","CreationDate":"2013-10-05 01:56:01","validated":false,"QueryBody_Original":"SELECT  [Location]\n  from Users u"},{"QuerySetId":142005,"Title":"Top 100 Programmers, in your country!","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Number, Id AS \"User Link\", DisplayName, Reputation, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-07-23 09:06:51","validated":false,"QueryBody_Original":"SELECT  TOP(100) ROW_NUMBER() OVER (ORDER BY Reputation Desc) as Number, Id [User Link], DisplayName, Reputation, Location\nFrom Users\nWhere LOWER(Location) LIKE LOWER('%##CountryName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":142143,"Title":"select DisplayName from Users where Location = 'Tunisia';","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE Location = 'Tunisia'","CreationDate":"2013-10-11 00:05:49","validated":false,"QueryBody_Original":"SELECT  DisplayName from Users where Location = 'Tunisia';"},{"QuerySetId":142148,"Title":"Search for mysql_* functions are deprecated","Description":null,"QueryBody":"SELECT \"Id\" AS \"Comment Link\" FROM comments WHERE text LIKE 'mysql_*'","CreationDate":"2013-10-11 04:47:33","validated":false,"QueryBody_Original":"SELECT  [Id] [Comment Link] from comments where text like  'mysql_*'"},{"QuerySetId":142157,"Title":"How many posts have I edited","Description":null,"QueryBody":"SELECT COUNT(DISTINCT c.id) - COUNT(DISTINCT a.id) FROM PostHistory AS a, PostHistory AS b, PostHistory AS c WHERE a.UserId = 1417185 AND b.UserId = a.UserId AND c.UserId = a.UserId AND a.PostHistoryTypeId IN (1, 2, 3) AND b.PostHistoryTypeId IN (4, 5, 6) AND c.PostHistoryTypeId IN (1, 2, 3, 4, 5, 6)","CreationDate":"2013-10-29 02:27:40","validated":false,"QueryBody_Original":"SELECT  count(distinct c.id)-count(distinct a.id) \nfrom PostHistory a, PostHistory b, PostHistory c \nwhere a.UserId=1417185 and b.UserId=a.UserId and c.UserId=a.UserId \nand a.PostHistoryTypeId in (1,2,3) \nand b.PostHistoryTypeId in (4,5,6) \nand c.PostHistoryTypeId in (1,2,3,4,5,6)"},{"QuerySetId":142175,"Title":"Get number of answers per month","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users","CreationDate":"2013-12-06 21:26:24","validated":false,"QueryBody_Original":"SELECT  count(Id) from Users;"},{"QuerySetId":142347,"Title":"What percent of Stack Exchange users have a global reputation over 5000?","Description":null,"QueryBody":"SELECT COUNT(id) * 100 FROM users WHERE reputation > 5000 \/ (SELECT COUNT(id) FROM users)","CreationDate":"2013-10-13 07:43:13","validated":false,"QueryBody_Original":"SELECT  count(id) * 100 from users where reputation > 5000  \/ (SELECT count(id) from users)"},{"QuerySetId":142837,"Title":"List of all user Ids","Description":null,"QueryBody":"SELECT Id FROM Users","CreationDate":"2015-10-05 09:54:57","validated":false,"QueryBody_Original":"SELECT  Id FROM Users"},{"QuerySetId":142958,"Title":"Get random 20 posts from March","Description":null,"QueryBody":"SELECT * FROM posts WHERE PostTypeId = 2 AND CreationDate > '2013-02-28' AND CreationDate < '2013-04-01' AND Score > 0 ORDER BY NEWID() LIMIT 5","CreationDate":"2013-10-17 15:16:08","validated":false,"QueryBody_Original":"SELECT  TOP 5 * FROM posts where PostTypeId = 2 \nand CreationDate > '2013-02-28' and CreationDate < '2013-04-01' and Score > 0\nORDER BY NEWID()"},{"QuerySetId":143009,"Title":"Top 100 most economical posts (site-wide)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", LENGTH(body) AS Length, Score, (Score \/ CAST(NULLIF(LENGTH(body), 0) AS FLOAT(9, 2))) AS Economy FROM posts AS p ORDER BY Economy DESC LIMIT 100","CreationDate":"2013-10-17 18:38:00","validated":false,"QueryBody_Original":"SELECT  TOP 100\nId as [Post Link],\nlen(body) AS Length,\nScore,\n(Score \/ CAST(NULLIF(len(body),0) AS DECIMAL (9,2))) AS Economy\nFROM posts p\nORDER BY Economy DESC"},{"QuerySetId":143021,"Title":"Selection of questions with confusing comment \/ close reason","Description":"The following set of questions (on P.SE) where closed in recent history, have the same comment (close reason in data.SE), and yet are different close reasons on the site.","QueryBody":"SELECT q.id AS \"Post Link\", q.closeddate, ph.comment, \"text\" FROM posts AS q JOIN posthistory AS ph ON (q.id = ph.postid) WHERE ph.PostHistoryTypeId = 10 AND ph.comment = 102 AND q.id IN (213960, 213983, 140658, 214117, 10920)","CreationDate":"2014-05-28 18:54:52","validated":false,"QueryBody_Original":"SELECT \n  q.id as [Post Link],\n  q.closeddate,\n  ph.comment,\n  [text]\nfrom\n  posts q\n  join posthistory ph on (q.id = ph.postid)\nwhere\n  ph.PostHistoryTypeId = 10\n  and ph.comment = 102\n  and q.id in (213960, 213983, 140658, 214117, 10920)"},{"QuerySetId":143539,"Title":"\u0442\u0440\u0438 \u043d\u0430\u0458\u0431\u043e\u0459\u0430 \u043e\u0434\u0433\u043e\u0432\u043e\u0440\u0430 \u043e\u0434 \u043a\u043e\u0440\u0438\u0441\u043d\u0438\u043a\u0430 \u0441\u0430 \u043d\u0430\u0458\u0432\u0435\u045b\u043e\u043c \u0440\u0435\u043f\u0443\u0442\u0430\u0446\u0438\u0458\u043e\u043c","Description":null,"QueryBody":"SELECT id AS highrankedId FROM posts WHERE score BETWEEN 150 AND 200","CreationDate":"2013-10-20 13:58:34","validated":false,"QueryBody_Original":"SELECT  id as highrankedId from posts where score between 150 and 200;"},{"QuerySetId":143555,"Title":"Find meta requests\/bugs there were declined or completed more than once","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COUNT(PostId) AS RevisionCount FROM PostHistory WHERE \"Comment\" = 'edited tags' AND (\"Text\" LIKE '%<status-completed>%' OR \"Text\" LIKE '%<status-declined>%') GROUP BY PostId HAVING COUNT(PostId) > 1 ORDER BY COUNT(PostId) DESC LIMIT 100","CreationDate":"2013-10-20 17:29:25","validated":false,"QueryBody_Original":"SELECT  Top 100 PostId As [Post Link], Count(PostId) As RevisionCount\nFrom PostHistory\nWhere [Comment]='edited tags'\nAnd ([Text] Like '%<status-completed>%' Or [Text] Like '%<status-declined>%')\nGroup By PostId\nHaving Count(PostId)>1\nOrder By Count(PostId) Desc"},{"QuerySetId":143595,"Title":"Top Users of SO From Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM USERS WHERE LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%bd' OR LOWER(Location) LIKE '%dhaka%' ORDER BY Reputation DESC","CreationDate":"2017-03-25 11:26:42","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS [#],\nId AS [User Link],Reputation\nFROM USERS\nwhere LOWER(Location) LIKE '%bangladesh%'\n      OR LOWER(Location) LIKE '%bd'\n      or lower(Location) LIKE '%dhaka%'\nORDER BY Reputation DESC"},{"QuerySetId":143791,"Title":"Posts from user-id with a given tag","Description":null,"QueryBody":"SELECT * FROM Users WHERE id = 416354 OR DisplayName LIKE 'TaylorOtwell' \/* = 416354 *\/","CreationDate":"2020-11-29 10:10:05","validated":false,"QueryBody_Original":"SELECT  * from Users where id = 416354\nor DisplayName like 'TaylorOtwell' -- = 416354"},{"QuerySetId":143829,"Title":"List of closed quesions from 2013","Description":null,"QueryBody":"SELECT Id, OwnerUserId, CreationDate, ClosedDate FROM Posts WHERE PostTypeId = 1 AND NOT ClosedDate IS NULL AND CreationDate >= '2013-01-01' ORDER BY Id","CreationDate":"2013-12-10 03:10:14","validated":false,"QueryBody_Original":"SELECT \n    Id, OwnerUserId, CreationDate, ClosedDate\nfrom\n    Posts\nwhere\n      PostTypeId = 1\n  and ClosedDate is not null\n  and CreationDate >= '2013-01-01'\n  \/*and Id > 16793532*\/\norder by Id"},{"QuerySetId":143857,"Title":"List of open questions 2013","Description":null,"QueryBody":"SELECT Id, OwnerUserId, CreationDate, Score FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL AND CreationDate >= '2013-01-01' ORDER BY Id","CreationDate":"2013-10-22 15:40:13","validated":false,"QueryBody_Original":"SELECT \n    Id, OwnerUserId, CreationDate, Score\nfrom\n    Posts\nwhere\n      PostTypeId = 1\n  and ClosedDate is null\n  and CreationDate >= '2013-01-01'\n \/* and Id > 16793532*\/\norder by Id"},{"QuerySetId":144142,"Title":"Post with 20 or more comments","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", COUNT(c.Id) FROM Posts AS p JOIN Comments AS c ON (PostId = p.Id) GROUP BY p.Id HAVING COUNT(c.Id) >= 20 ORDER BY MIN(c.CreationDate) DESC","CreationDate":"2013-10-25 03:37:21","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], count(c.Id)\nfrom Posts p\n     join Comments c on (PostId = p.Id)\ngroup by p.Id\nhaving count(c.Id) >= 20\norder by min(c.CreationDate) desc;"},{"QuerySetId":144144,"Title":"Comments that are 600 characters long","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", u.Id AS \"User Link\" \/* , count(*) *\/ FROM Comments AS c JOIN Users AS u ON (u.Id = UserId) WHERE LENGTH(Text) = 600","CreationDate":"2013-10-25 02:38:49","validated":false,"QueryBody_Original":"SELECT  c.Id as [Comment Link], \nu.Id as [User Link]--, count(*)\nfrom Comments c\n     join Users u on (u.Id = UserId)\nwhere len(Text) = 600\n--group by u.Id\n--order by count(*) desc"},{"QuerySetId":144307,"Title":"Find username which contains `\uc6c3` or `\uc74f`","Description":null,"QueryBody":"SELECT Id, DisplayName FROM Users WHERE DisplayName LIKE '%\uc6c3%' OR DisplayName LIKE '%\uc74f%' OR DisplayName LIKE '%\uc637%'","CreationDate":"2013-10-24 18:15:16","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName\nFROM Users\nWHERE DisplayName LIKE '%\uc6c3%'\n   OR DisplayName LIKE '%\uc74f%'\n   OR DisplayName LIKE '%\uc637%'"},{"QuerySetId":144570,"Title":"How many undeleted comments are there?","Description":null,"QueryBody":"SELECT COUNT(*) FROM comments","CreationDate":"2013-10-26 08:03:44","validated":false,"QueryBody_Original":"SELECT  count(*) from comments;"},{"QuerySetId":144595,"Title":"find tags that only differ by a .","Description":null,"QueryBody":"SELECT t.tagname, t.\"Count\", t2.tagname, t2.\"count\" FROM tags AS t, tags AS t2 WHERE t.tagname = REPLACE(t2.tagname, '-', '.') AND t.id <> t2.id ORDER BY t.tagname","CreationDate":"2013-10-26 15:22:38","validated":false,"QueryBody_Original":"SELECT  t.tagname , t.[Count],  t2.tagname, t2.[count]\nfrom tags t\n, tags t2\nwhere t.tagname = replace(t2.tagname, '-', '.')\nand t.id <> t2.id\norder by t.tagname"},{"QuerySetId":145418,"Title":"Top ten lowest rated questions","Description":null,"QueryBody":"SELECT Posts.id AS \"Post Link\", Posts.score AS \"Score\" FROM \"Posts\" WHERE \"PostTypeId\" = 1 AND \"Score\" < 0 ORDER BY \"Score\" LIMIT 100","CreationDate":"2014-12-24 22:25:56","validated":false,"QueryBody_Original":"SELECT  top(100) Posts.id as [Post Link], Posts.score as [Score] from [Posts]\nwhere [PostTypeId] = 1 and [Score] < 0\norder by [Score]"},{"QuerySetId":145852,"Title":"Top 100 Stackexchange users in Austria","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%salzburg%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2014-10-20 14:24:44","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%salzburg%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":145925,"Title":"View 100 recent spam votes","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", v.CreationDate FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.ParentId WHERE v.VoteTypeId = 12 \/* spam *\/ ORDER BY v.CreationDate DESC LIMIT 100","CreationDate":"2013-11-03 20:29:37","validated":false,"QueryBody_Original":"SELECT  Top 100 p.Id As [Post Link], v.CreationDate\nFrom Votes v Inner Join Posts p On v.PostId=p.ParentId\nWhere v.VoteTypeId=12 --spam\nOrder By v.CreationDate Desc"},{"QuerySetId":146068,"Title":"Find users and their points","Description":null,"QueryBody":"SELECT u.id, u.displayname, u.reputation FROM users AS u","CreationDate":"2013-11-04 16:28:04","validated":false,"QueryBody_Original":"SELECT  u.id, u.displayname, u.reputation from users u;"},{"QuerySetId":146090,"Title":"Find all comments where your name is mentioned but doesn't contain an @","Description":null,"QueryBody":"SELECT postid, postid AS \"Post Link\", text FROM comments WHERE (UPPER(text) LIKE UPPER('%##UserName##%') AND STR_POSITION(text, '@') = 0)","CreationDate":"2013-11-04 18:46:17","validated":false,"QueryBody_Original":"SELECT  postid,\n       postid [Post Link],\n       text\nFROM   comments\nWHERE  ( Upper(text) LIKE Upper('%##UserName##%')\n         AND Charindex('@', text) = 0 )"},{"QuerySetId":146468,"Title":"How many votes cast per day","Description":null,"QueryBody":"SELECT CreationDate, VoteTypeId, COUNT(*) FROM Votes WHERE (VoteTypeId = 2 OR VoteTypeId = 3) GROUP BY CreationDate, VoteTypeId ORDER BY CreationDate, VoteTypeId","CreationDate":"2015-09-30 13:01:52","validated":false,"QueryBody_Original":"SELECT  CreationDate, VoteTypeId, COUNT(*) FROM Votes WHERE (VoteTypeId = 2 OR VoteTypeId = 3) GROUP BY CreationDate, VoteTypeId ORDER BY CreationDate, VoteTypeId"},{"QuerySetId":146634,"Title":"Top Irish users on Stackoverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE Id = 1362136 ORDER BY Reputation DESC","CreationDate":"2016-03-26 03:21:41","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    Id = 1362136\nORDER BY\n    Reputation DESC;"},{"QuerySetId":147280,"Title":"Users In India Who are Interested In Android","Description":null,"QueryBody":"SELECT Id, TagName, Count FROM Tags","CreationDate":"2016-07-29 23:44:52","validated":false,"QueryBody_Original":"SELECT  Id, TagName, Count FROM Tags"},{"QuerySetId":147579,"Title":"SQL Server related thread volume by month","Description":null,"QueryBody":"SELECT COUNT(*) AS Volume, TIME_TO_STR(P.CreationDate, '%Y') AS \"Year\", TIME_TO_STR(P.CreationDate, '%m') AS Month FROM \"Posts\" AS P WHERE (Tags LIKE '%<surface%') AND PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY \"Year\", Month","CreationDate":"2013-11-14 02:29:54","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Volume,\nDATEPART(year, P.CreationDate) as [Year], \nDATEPART(month, P.CreationDate) as Month\nFROM [Posts] as P\nWHERE (Tags like '%<surface%') \nand PostTypeId = 1 \nand CommunityOwnedDate is null and ClosedDate is null\nGROUP by DATEPART(YEAR, P.CreationDate), DATEPART(MONTH, P.CreationDate)\nORDER by [Year], Month"},{"QuerySetId":147581,"Title":"select * from users where id like 'sunny%';","Description":null,"QueryBody":"SELECT * FROM users WHERE id LIKE '1100%'","CreationDate":"2013-11-12 14:12:30","validated":false,"QueryBody_Original":"SELECT  * from users where id like '1100%'"},{"QuerySetId":147683,"Title":"Top 10 Meta users from Nigeria","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%Nigeria' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2013-11-13 00:53:50","validated":false,"QueryBody_Original":"SELECT  TOP 10 *\nFROM Users\nWHERE Location LIKE '%Nigeria'\nORDER BY Reputation DESC"},{"QuerySetId":147684,"Title":"Find unusual and rare types of posts ","Description":null,"QueryBody":"SELECT post.Id AS \"Post Link\", CASE WHEN post.PostTypeId = 3 THEN 'Orphaned tag wiki' WHEN post.PostTypeId = 6 THEN 'Moderator nomination' WHEN post.PostTypeId = 7 THEN 'Wiki placeholder' WHEN post.PostTypeId = 8 THEN 'Privelege Wiki' END AS \"Type\", post.OwnerUserId AS \"User Id\" FROM Posts AS post WHERE post.PostTypeId = 3 OR post.PostTypeId > 5","CreationDate":"2013-11-13 01:04:44","validated":false,"QueryBody_Original":"SELECT  post.Id as [Post Link], \n       case\n           when post.PostTypeId = 3 then 'Orphaned tag wiki'\n           when post.PostTypeId = 6 then 'Moderator nomination'\n           when post.PostTypeId = 7 then 'Wiki placeholder'\n           when post.PostTypeId = 8 then 'Privelege Wiki'\n       end\n       as [Type],\n       post.OwnerUserId as [User Id]\n    from Posts as post\n    where post.PostTypeId = 3 or post.PostTypeId > 5;"},{"QuerySetId":147711,"Title":"Search for a keyword in all answers to your questions","Description":null,"QueryBody":"SELECT P1.ID, P1.ParentId, P1.PostTypeID, P1.OwnerUserID, P1.Body, P2.ID, P2.ParentId, P2.PostTypeID, P2.OwnerUserID, P2.Body, Comments.Text, Comments.UserID FROM Posts AS P1 LEFT JOIN Posts AS P2 ON P1.ID = P2.ParentID LEFT JOIN Comments ON Comments.PostID = P1.ID WHERE P2.Body LIKE '%##Keyword##%' LIMIT 30","CreationDate":"2020-12-06 15:17:30","validated":false,"QueryBody_Original":"SELECT  Top 30 \n  P1.ID, \n  P1.ParentId, \n  P1.PostTypeID, \n  P1.OwnerUserID, \n  P1.Body, \n  P2.ID, \n  P2.ParentId, \n  P2.PostTypeID, \n  P2.OwnerUserID, \n  P2.Body,   \n  Comments.Text, \n  Comments.UserID \nFrom Posts P1\nLeft Join Posts P2\nOn P1.ID = P2.ParentID\nLeft Join Comments \nOn Comments.PostID = P1.ID \nWhere P2.Body like '%##Keyword##%'"},{"QuerySetId":147886,"Title":"posts growth over last several years","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(Users.CreationDate, '%Y') AS TEXT(4)) + '-' + CAST(TIME_TO_STR(Users.CreationDate, '%m') AS TEXT(2)) AS month_year, COUNT(*) FROM Users GROUP BY TIME_TO_STR(Users.CreationDate, '%Y'), TIME_TO_STR(Users.CreationDate, '%m') ORDER BY TIME_TO_STR(Users.CreationDate, '%Y'), TIME_TO_STR(Users.CreationDate, '%m')","CreationDate":"2014-02-14 22:14:01","validated":false,"QueryBody_Original":"SELECT \nCAST(DATEPART(year, Users.CreationDate) AS VARCHAR(4)) + '-' +\nCAST(DATEPART(month, Users.CreationDate) AS VARCHAR(2)) as month_year,\n    count(*) \nfrom\n  Users\n    GROUP BY DATEPART(year, Users.CreationDate), DATEPART(month, Users.CreationDate)\n    ORDER BY DATEPART(year, Users.CreationDate), DATEPART(month, Users.CreationDate)"},{"QuerySetId":147888,"Title":"Accept ratio for a site","Description":null,"QueryBody":"SELECT CAST(COUNT(AcceptedAnswerId) AS FLOAT) \/ COUNT(*) AS Accept_ratio FROM Posts WHERE PostTypeId = 1","CreationDate":"2013-11-14 06:02:11","validated":false,"QueryBody_Original":"SELECT  cast (count(AcceptedAnswerId) as float)\/count(*) Accept_ratio\nfrom Posts\nwhere PostTypeId = 1"},{"QuerySetId":147962,"Title":"Get unclosed questions with closed votes","Description":null,"QueryBody":"SELECT votes.*, posthistory.creationdate AS \"Reopen date\", posts.viewcount FROM votes JOIN posts ON votes.postid = posts.id LEFT JOIN posthistory ON posthistory.postid = posts.id AND posthistory.posthistorytypeid = 11 \/* reopen *\/ WHERE votetypeid = 6 \/* close vote *\/ AND posts.id = 344455","CreationDate":"2016-08-24 02:38:57","validated":false,"QueryBody_Original":"SELECT  votes.*, posthistory.creationdate as 'Reopen date', posts.viewcount\nfrom votes\njoin posts on votes.postid = posts.id\nleft join posthistory on posthistory.postid = posts.id\n  and posthistory.posthistorytypeid = 11 -- reopen\nwhere votetypeid = 6 -- close vote\n  and posts.id = 344455"},{"QuerySetId":148024,"Title":"'should be community wiki' comment count","Description":null,"QueryBody":"SELECT COUNT(*) FROM comments WHERE text = 'should be community wiki'","CreationDate":"2013-11-15 02:17:01","validated":false,"QueryBody_Original":"SELECT  count(*) from comments where text = 'should be community wiki'"},{"QuerySetId":148128,"Title":"Gson non risposti da me","Description":"..","QueryBody":"SELECT q.*, (SELECT lastaccessdate FROM users WHERE q.owneruserid = id) AS d FROM posts AS q WHERE q.acceptedanswerid IS NULL AND NOT EXISTS(SELECT 1 FROM posts AS a WHERE a.parentid = q.id AND a.owneruserid = 1360888) AND q.tags LIKE '%gson%' ORDER BY d DESC","CreationDate":"2013-11-16 03:24:47","validated":false,"QueryBody_Original":"SELECT  \n    q.*,  (SELECT lastaccessdate from users where q.owneruserid = id) as d\nFROM\n    posts q \n   \nWHERE  q.acceptedanswerid is null\nand not exists ( SELECT 1 from  posts a where a.parentid = q.id and a.owneruserid = 1360888) \nand q.tags like '%gson%'\norder by d desc"},{"QuerySetId":148256,"Title":"Top 100 Programmers from India.","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Number, Id AS \"User Link\", DisplayName, Reputation, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%India') OR LOWER(Location) LIKE LOWER('India %') ORDER BY Reputation DESC LIMIT 10000","CreationDate":"2018-10-11 18:57:43","validated":false,"QueryBody_Original":"SELECT  TOP(10000) ROW_NUMBER() OVER (ORDER BY Reputation Desc) as Number, Id [User Link], DisplayName,Reputation, Location\nFrom Users\nWhere LOWER(Location) LIKE LOWER('%India') or LOWER(Location) LIKE LOWER('India %')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":148292,"Title":"answers to a user's questions","Description":null,"QueryBody":"SELECT OwnerUserId, SUM(AnswerCount), SUM(CommentCount) FROM Posts WHERE ParentId IS NULL AND OwnerUserId IN (953140, 276052) GROUP BY OwnerUserId","CreationDate":"2013-11-18 05:02:29","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, sum(AnswerCount), sum(CommentCount)\nFrom Posts\nwhere ParentId IS NULL\nand OwnerUserId in (953140, 276052)\ngroup by OwnerUserId;"},{"QuerySetId":148296,"Title":"Select 20 questions about Ruby","Description":null,"QueryBody":"SELECT Body, Title, Tags FROM Posts WHERE Tags LIKE '%ruby%' LIMIT 20","CreationDate":"2013-11-18 11:15:06","validated":false,"QueryBody_Original":"SELECT  TOP 20 Body, Title, Tags\nFROM Posts\nWHERE Tags LIKE '%ruby%';"},{"QuerySetId":148324,"Title":"tehran province of Iran Stackoverflow users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%arak%' ORDER BY Reputation DESC","CreationDate":"2016-05-06 10:14:14","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%arak%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":148393,"Title":"High-scoring questions that have been closed as being off-topic.","Description":null,"QueryBody":"SELECT DISTINCT Q.id AS \"Post Link\", Q.Score AS \"Number of Votes\", PH.Comment AS \"Close Reason\" FROM Posts AS Q INNER JOIN PostHistory AS PH ON (Q.id = PH.postid) WHERE Q.PostTypeId = 1 AND Q.Score >= 100 AND PH.PostHistoryTypeId = 10 AND PH.Comment IN (2, 3, 102, 104, 105) ORDER BY Q.Score DESC","CreationDate":"2013-11-21 12:57:12","validated":false,"QueryBody_Original":"SELECT  DISTINCT \n  Q.id AS [Post Link],\n  Q.Score AS [Number of Votes],\n  PH.Comment AS [Close Reason]\nFROM\n  Posts AS Q\n  INNER JOIN PostHistory PH on (Q.id = PH.postid)\nWHERE \n  Q.PostTypeId = 1 AND\n  Q.Score >= 100 AND\n  PH.PostHistoryTypeId = 10 AND\n  PH.Comment IN (2, 3, 102, 104, 105)\nORDER BY\n  Q.Score DESC\n  \n  \n-- 1, 'Exact duplicate'\n-- 2, 'Off topic'\n-- 3, 'Subjective and argumentative'\n-- 4, 'Not a real question'\n-- 7, 'Too localized'\n-- 20, 'Noise or pointless'\n-- 101, 'Duplicate'\n-- 102, 'Off topic'\n-- 103, 'Unclear'\n-- 104, 'Too Broad'\n-- 105, 'Opinion Based'"},{"QuerySetId":148457,"Title":"Unclosed questions with only zero-score answers","Description":"For a variant of this query that lets you filter results by tags: \r\nhttp:\/\/data.stackexchange.com\/codereview\/query\/160341","QueryBody":"SELECT Questions.Id AS \"Post Link\", Questions.Score AS Score, COUNT(Answers.Id) AS \"# Answers\", Questions.AcceptedAnswerId AS \"Accepted Answer\" FROM Posts AS Questions JOIN Posts AS Answers ON Answers.ParentId = Questions.Id WHERE NOT EXISTS(SELECT Id FROM Posts AS Answers WHERE Answers.ParentId = Questions.Id AND Answers.Score <> 0) GROUP BY Questions.Id, Questions.AcceptedAnswerId, Questions.Score, Questions.ViewCount, Questions.CreationDate HAVING COUNT(Answers.Id) > 0 ORDER BY Questions.Score DESC, COUNT(Answers.Id) DESC, Questions.ViewCount DESC, Questions.CreationDate DESC LIMIT 10","CreationDate":"2013-11-19 02:22:45","validated":false,"QueryBody_Original":"SELECT  TOP 10\n        Questions.Id AS [Post Link],\n        Questions.Score AS Score,\n        COUNT(Answers.Id) AS [# Answers],\n        Questions.AcceptedAnswerId AS [Accepted Answer]\n    FROM Posts AS Questions\n        JOIN Posts AS Answers\n            ON Answers.ParentId = Questions.Id\n    WHERE\n        NOT EXISTS (\n            SELECT Id\n                FROM Posts AS Answers\n                WHERE\n                    Answers.ParentId = Questions.Id AND\n                    Answers.Score <> 0\n        )\n    GROUP BY Questions.Id, Questions.AcceptedAnswerId, Questions.Score, Questions.ViewCount, Questions.CreationDate\n    HAVING COUNT(Answers.Id) > 0\n    ORDER BY Questions.Score DESC, COUNT(Answers.Id) DESC, Questions.ViewCount DESC, Questions.CreationDate DESC;"},{"QuerySetId":149293,"Title":"Top SO Users from Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM USERS WHERE LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%bd' ORDER BY Reputation DESC","CreationDate":"2013-11-21 20:38:41","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS [#],Id AS [User Link],Reputation\nFROM USERS\nwhere LOWER(Location) LIKE '%bangladesh%'\n      OR LOWER(Location) LIKE '%bd'\nORDER BY Reputation DESC"},{"QuerySetId":149900,"Title":"select count(*) from votes where UserId == null;","Description":null,"QueryBody":"SELECT COUNT(*) FROM votes WHERE UserId IS NULL","CreationDate":"2013-11-24 16:24:23","validated":false,"QueryBody_Original":"SELECT  count(*) from votes where UserId is null;"},{"QuerySetId":149910,"Title":"stats about a user's answers","Description":null,"QueryBody":"SELECT OwnerUserId, OwnerDisplayName, Id, PostTypeId, AnswerCount, CommentCount, Score, ViewCount, FavoriteCount FROM Posts \/* where ParentId IS NULL *\/ WHERE OwnerUserId IN (12960) AND PostTypeId = 1","CreationDate":"2013-11-25 05:20:43","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, OwnerDisplayName, Id, PostTypeId, AnswerCount, CommentCount, \nScore, ViewCount, FavoriteCount\nFrom Posts\n--where ParentId IS NULL\nwhere OwnerUserId in (12960)\nand PostTypeId = 1;"},{"QuerySetId":149998,"Title":"select * from votes where id = 418;","Description":null,"QueryBody":"SELECT * FROM votes WHERE userid = 418","CreationDate":"2013-11-25 13:22:35","validated":false,"QueryBody_Original":"SELECT  * from votes where userid = 418;"},{"QuerySetId":150039,"Title":"Top 200 User from Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%iran%' OR UPPER(Location) LIKE 'IR') ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-08-05 00:32:11","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%iran%'\n    OR UPPER(Location) LIKE 'IR')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":150198,"Title":"Guess NAA flags on SU by comments","Description":null,"QueryBody":"SELECT 'http:\/\/superuser.com\/questions\/' + CAST(c.postID AS TEXT) FROM comments AS c INNER JOIN posts AS p ON (p.id = c.postID)\/* where c.text like '%possible duplicate of%' *\/  WHERE c.text LIKE '%This does not provide an answer to the question.%' AND c.score >= 0 AND p.score <= 0 AND NOT EXISTS(SELECT * FROM posthistory AS h WHERE posthistorytypeid IN (12, 13) AND h.postid = c.postid)","CreationDate":"2014-01-09 23:36:58","validated":false,"QueryBody_Original":"SELECT  'http:\/\/superuser.com\/questions\/' + cast(c.postID as varchar) from comments c\ninner join posts p on (p.id = c.postID)\nwhere c.text like '%This does not provide an answer to the question.%'\n--where c.text like '%possible duplicate of%'\nand c.score >=0\nand p.score <=0 and not exists (\n  SELECT * from posthistory h where posthistorytypeid in (12,13) and h.postid=c.postid\n)"},{"QuerySetId":150199,"Title":"Guess NAA flags on AU by comments","Description":null,"QueryBody":"SELECT 'http:\/\/stackoverflow.com\/questions\/' + CAST(c.postID AS TEXT) FROM comments AS c INNER JOIN posts AS p ON (p.id = c.postID)\/* where c.text like '%possible duplicate of%' *\/  WHERE c.text LIKE '%This does not provide an answer to the question.%' AND c.score >= 0 AND p.score <= 0 AND NOT EXISTS(SELECT * FROM posthistory AS h WHERE posthistorytypeid IN (12, 13) AND h.postid = c.postid)","CreationDate":"2014-02-19 05:25:54","validated":false,"QueryBody_Original":"SELECT  'http:\/\/stackoverflow.com\/questions\/' + cast(c.postID as varchar) from comments c\ninner join posts p on (p.id = c.postID)\nwhere c.text like '%This does not provide an answer to the question.%'\n--where c.text like '%possible duplicate of%'\nand c.score >=0\nand p.score <=0 and not exists (\n  SELECT * from posthistory h where posthistorytypeid in (12,13) and h.postid=c.postid\n)"},{"QuerySetId":150421,"Title":"Who are there from tomsk?","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank, Reputation, DisplayName, Location, Views, UpVotes, DownVotes FROM Users WHERE LOWER(Location) LIKE '%india' ORDER BY Reputation DESC","CreationDate":"2014-01-03 10:25:39","validated":false,"QueryBody_Original":"SELECT   ROW_NUMBER()  OVER (ORDER BY Reputation DESC) as Rank,Reputation,DisplayName,Location,Views,UpVotes,DownVotes FROM Users where LOWER(Location) LIKE '%india' ORDER BY Reputation DESC"},{"QuerySetId":150431,"Title":"Get email MD5 hashes for StackExchange users","Description":null,"QueryBody":"SELECT Id, DisplayName, EmailHash FROM Users WHERE EmailHash = '5e7308ff7122df9ebbee7b52956a2ea3' LIMIT 50","CreationDate":"2013-12-15 20:52:37","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  Id, DisplayName, EmailHash\nFROM\n  Users\nWHERE\n  EmailHash = '5e7308ff7122df9ebbee7b52956a2ea3'"},{"QuerySetId":150515,"Title":"Number of users created per year","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS Year, COUNT(*) AS \"Number Of Users\" FROM Users GROUP BY YEAR(CreationDate)","CreationDate":"2013-11-28 03:10:20","validated":false,"QueryBody_Original":"SELECT  YEAR(CreationDate) as Year, COUNT(*) as 'Number Of Users'\nFROM Users\nGROUP BY YEAR(CreationDate)"},{"QuerySetId":150634,"Title":"All comments on this post","Description":null,"QueryBody":"SELECT * FROM Comments WHERE PostId = 7445597 ORDER BY CreationDate","CreationDate":"2013-11-28 02:10:53","validated":false,"QueryBody_Original":"SELECT  * FROM Comments\nWHERE PostId = 7445597\nORDER BY CreationDate ASC"},{"QuerySetId":150666,"Title":"Counts of First word of title ","Description":null,"QueryBody":"SELECT SUBSTRING(title, 1, (STR_POSITION(title + ' ', ' ') - 1)) AS FirstWord, COUNT(*) AS Popularity, AVG(score) AS AverageScore, SUM(CASE WHEN ClosedDate IS NULL THEN 0.0 ELSE 1.0 END) AS NumberClosed, ROUND(100 * AVG(CASE WHEN ClosedDate IS NULL THEN 0.0 ELSE 1.0 END), 2) AS PercentageClosed FROM Posts WHERE PostTypeId = 1 GROUP BY SUBSTRING(title, 1, (STR_POSITION(title + ' ', ' ') - 1)) HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC","CreationDate":"2013-11-28 05:11:55","validated":false,"QueryBody_Original":"SELECT  \n    SUBSTRING(title, 1, (CHARINDEX(' ', title + ' ')-1)) AS FirstWord,\n    COUNT(*) AS Popularity,\n    AVG(score) AS AverageScore,\n    SUM(\n      CASE  \n         WHEN ClosedDate IS NULL THEN 0.0\n         ELSE 1.0\n         END) AS NumberClosed,\n    ROUND(100*AVG(\n      CASE  \n         WHEN ClosedDate IS NULL THEN 0.0\n         ELSE 1.0\n         END), 2) AS PercentageClosed\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY \n  SUBSTRING(title, 1, (CHARINDEX(' ',title + ' ')-1))\nHAVING \n  COUNT(*) > 1 \nORDER BY\n  COUNT(*) DESC"},{"QuerySetId":150922,"Title":"Find all users with a term in their profile","Description":null,"QueryBody":"SELECT * FROM Users WHERE AboutMe LIKE '%rentrak%'","CreationDate":"2013-11-29 15:18:41","validated":false,"QueryBody_Original":"SELECT  * from Users where AboutMe like '%rentrak%';"},{"QuerySetId":151209,"Title":"Date first comment was posted at","Description":null,"QueryBody":"SELECT MIN(CreationDate) FROM Comments","CreationDate":"2013-12-01 19:26:42","validated":false,"QueryBody_Original":"SELECT  Min(CreationDate) From Comments"},{"QuerySetId":151336,"Title":"My Rank in my Location","Description":null,"QueryBody":"SELECT * FROM USERS AS U1 WHERE U1.LOCATION = 'Omaha, NE, United States' ORDER BY U1.REPUTATION DESC, U1.Age","CreationDate":"2013-12-02 22:31:10","validated":false,"QueryBody_Original":"SELECT  *\nFROM USERS U1\nWHERE U1.LOCATION = 'Omaha, NE, United States'\nORDER BY U1.REPUTATION DESC,U1.Age"},{"QuerySetId":151347,"Title":"Count users from specific country.","Description":null,"QueryBody":"SELECT COUNT(Id) AS \"Amount of users\", SUM(Reputation) AS \"Total collected reputation\", SUM(Reputation) \/ COUNT(Id) AS \"Relative reuptation\" FROM Users WHERE LOWER(Location) LIKE LOWER('%##Country##%')","CreationDate":"2013-12-02 15:56:28","validated":false,"QueryBody_Original":"SELECT \n  COUNT(Id) AS [Amount of users], \n  SUM(Reputation) AS [Total collected reputation],\n  SUM(Reputation)\/COUNT(Id) AS [Relative reuptation]\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##Country##%')"},{"QuerySetId":151364,"Title":"Top 100 Users by Country","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Age, LastAccessDate, Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##Country##%') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2013-12-02 18:14:46","validated":false,"QueryBody_Original":"SELECT \nTOP (100) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], Location, Age,LastAccessDate,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##Country##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":151574,"Title":"Posts that had Bounties this Month","Description":null,"QueryBody":"SELECT P.Id AS \"Post Link\", V.BountyAmount, (SELECT P2.Tags FROM Posts AS P2 WHERE P2.Id = P.ParentId) AS \"Tags\" FROM Posts AS P, Votes AS V WHERE P.Id = V.PostId AND NOT V.BountyAmount IS NULL AND V.VoteTypeId = 9 AND DATEDIFF(CURRENT_TIMESTAMP(), V.CreationDate) < 1 AND (SELECT P2.Tags FROM Posts AS P2 WHERE P2.Id = P.ParentId) LIKE '<%##tag1##%>' ORDER BY V.BountyAmount DESC, P.CreationDate DESC","CreationDate":"2014-01-28 03:30:17","validated":false,"QueryBody_Original":"SELECT  P.Id as [Post Link], V.BountyAmount, (SELECT P2.Tags from Posts P2 WHERE P2.Id = P.ParentId) AS [Tags]\nFROM Posts P, Votes V\nWHERE \nP.Id = V.PostId\nAND\nV.BountyAmount IS NOT NULL\nAND\nV.VoteTypeId = 9\nAND\nDATEDIFF(month, V.CreationDate, GETDATE() ) < 1\nAND (SELECT P2.Tags from Posts P2 WHERE P2.Id = P.ParentId) like '<%##tag1##%>'\nORDER BY \nV.BountyAmount DESC, P.CreationDate DESC"},{"QuerySetId":151643,"Title":"Comments on questions with accepted answers","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\" FROM Comments AS c JOIN Posts AS p ON (p.Id = PostId)\/*      and ClosedDate is null *\/  WHERE NOT AcceptedAnswerId IS NULL AND c.Score IS NULL AND p.Score > 2 AND (CAST(GETUTCDATE() - c.CreationDate AS INT) > 7) ORDER BY NEWID() LIMIT 10","CreationDate":"2013-12-04 13:52:18","validated":false,"QueryBody_Original":"SELECT  Top 10 c.Id as [Comment Link]\nfrom Comments c join Posts p on (p.Id = PostId)\nwhere AcceptedAnswerId is not null\n--      and ClosedDate is null\n      and c.Score is null\n      and p.Score > 2\n      and (cast(GetUTCDate() - c.CreationDate as int) > 7)\norder by newid();"},{"QuerySetId":151761,"Title":"Number of Accepted Answers to Famous Questions","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", COUNT(*) AS Answers FROM posts AS q JOIN posts AS a ON a.Id = q.Id JOIN users AS u ON u.Id = a.OwnerUserId WHERE q.ViewCount > 2500 AND u.Id > 0 AND u.Id < 100000 GROUP BY u.id ORDER BY Answers DESC","CreationDate":"2014-01-04 16:41:00","validated":false,"QueryBody_Original":"SELECT  u.id as [User Link], count(*) as Answers\nfrom   posts q\njoin   posts a on a.Id = q.Id\njoin   users u on u.Id = a.OwnerUserId\nwhere  q.ViewCount > 2500\n  and  u.Id > 0 and u.Id < 100000\ngroup by u.id\norder by Answers desc"},{"QuerySetId":151786,"Title":"Search posts by UserId, comment text","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%##CommentText##%') AND UserId = '##UserId##' ORDER BY Score DESC","CreationDate":"2020-11-17 23:45:06","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('%##CommentText##%')\n   AND UserId = '##UserId##'\n ORDER BY Score DESC"},{"QuerySetId":151788,"Title":"Search posts by multiple comment text ('OR' operator) and UserId","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE (UPPER(Text) LIKE UPPER('%##CommentText##%') OR UPPER(Text) LIKE UPPER('%##CommentText2##%')) AND UserId = '##UserId##' ORDER BY Score DESC","CreationDate":"2013-12-07 15:15:55","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE (UPPER(Text) LIKE UPPER('%##CommentText##%')\n    OR UPPER(Text) LIKE UPPER('%##CommentText2##%'))\n   AND UserId = '##UserId##'\n ORDER BY Score DESC"},{"QuerySetId":151791,"Title":"Search posts by multiple comment text ('AND' operator) and UserId","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE (UPPER(Text) LIKE UPPER('%##CommentText##%') AND UserId = '##UserId##') ORDER BY Score DESC","CreationDate":"2020-10-17 11:41:27","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE (UPPER(Text) LIKE UPPER('%##CommentText##%')\n AND UserId = '##UserId##')\n ORDER BY Score DESC"},{"QuerySetId":151793,"Title":"Do comments on a post reduce score?","Description":null,"QueryBody":"SELECT COALESCE(CommentCount, 0), AVG(CAST(Score AS FLOAT) \/ CAST(ViewCount AS FLOAT)) FROM Posts WHERE Score > 1 AND COALESCE(CommentCount, 0) <= 30 AND ViewCount > 0 GROUP BY COALESCE(CommentCount, 0) ORDER BY COALESCE(CommentCount, 0)","CreationDate":"2013-12-08 11:21:09","validated":false,"QueryBody_Original":"SELECT  isnull(CommentCount, 0), avg(cast(Score as float)\/cast(ViewCount as float)) \nfrom Posts\nwhere Score > 1\n      and isnull(CommentCount, 0) <= 30\n      and ViewCount > 0\n--      and CreationDate between '2012-12-01' and '2012-12-31'\ngroup by isnull(CommentCount, 0)\norder by isnull(CommentCount, 0);"},{"QuerySetId":152137,"Title":"Top 100 users from Belgium","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%belgium%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2015-02-08 13:21:26","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%belgium%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":152147,"Title":"Do comments reduce answer score?","Description":null,"QueryBody":"SELECT COALESCE(CommentCount, 0), AVG(CAST(Score AS FLOAT)) FROM Posts\/*      and isnull(CommentCount, 0) <= 5 *\/  WHERE PostTypeId = 2 AND Score > 1 AND ViewCount > 0 GROUP BY COALESCE(CommentCount, 0) ORDER BY COALESCE(CommentCount, 0)","CreationDate":"2013-12-08 10:51:06","validated":false,"QueryBody_Original":"SELECT  isnull(CommentCount, 0), avg(cast(Score as float)) \nfrom Posts\nwhere PostTypeId = 2\n      and Score > 1\n--      and isnull(CommentCount, 0) <= 5\n      and ViewCount > 0\ngroup by isnull(CommentCount, 0)\norder by isnull(CommentCount, 0);"},{"QuerySetId":152547,"Title":"Top 100 Questions by Views per Day since creation","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount, ROUND(CAST(ViewCount AS FLOAT) \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate), 1) AS ViewsPerDay FROM Posts WHERE PostTypeId = 1 AND ViewCount > 100 ORDER BY ViewsPerDay DESC LIMIT 100","CreationDate":"2014-03-17 02:14:26","validated":false,"QueryBody_Original":"SELECT  TOP (100) \n  Id as [Post Link],\n  ViewCount,\n  round(cast(ViewCount as float)\/DATEDIFF(dd,CreationDate,getdate()),1) AS ViewsPerDay\nfrom \n  Posts\nwhere \n  PostTypeId = 1\n  AND ViewCount > 100\norder by \n  ViewsPerDay desc"},{"QuerySetId":152891,"Title":"All Answers with some attributes","Description":null,"QueryBody":"SELECT a.score, q.Id, q.OwnerUserId, a.score, q.CreationDate, q.Tags, a.score, a.score, a.Id, a.OwnerUserId, a.score, a.CreationDate FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE q.CreationDate >= '2013-01-01 00:00:00' AND a.CreationDate >= '2013-04-01 00:00:00' AND a.CreationDate < '2013-07-01 00:00:00'","CreationDate":"2013-12-11 09:41:46","validated":false,"QueryBody_Original":"SELECT  a.score ,q.Id, q.OwnerUserId, a.score ,q.CreationDate,  q.Tags , a.score , a.score , a.Id, a.OwnerUserId, a.score, a.CreationDate FROM Posts as a\n join Posts as q on a.ParentId = q.Id where q.CreationDate >= '2013-01-01 00:00:00' and a.CreationDate >= '2013-04-01 00:00:00' and a.CreationDate < '2013-07-01 00:00:00'"},{"QuerySetId":153013,"Title":"Comments redirecting people to Code Review","Description":null,"QueryBody":"SELECT PostId, SUM(Score), MAX(Text), MAX(CreationDate) FROM Comments WHERE Text LIKE '%codereview%' GROUP BY PostId","CreationDate":"2013-12-11 20:56:00","validated":false,"QueryBody_Original":"SELECT  PostId, sum(Score), max(Text), max(CreationDate) from Comments\nwhere \n Text LIKE '%codereview%'\ngroup by PostId"},{"QuerySetId":153018,"Title":"Users that most often redirecting other users to Code Review","Description":null,"QueryBody":"SELECT MIN(Users.DisplayName) AS username, MIN(Users.Reputation) AS reputation, Comments.UserId, COUNT(Score) AS numcomments, SUM(Score) AS totalscore FROM Comments JOIN Users ON (Comments.UserId = Users.Id) WHERE Text LIKE '%codereview%' GROUP BY Comments.UserId ORDER BY numcomments DESC","CreationDate":"2013-12-11 21:34:23","validated":false,"QueryBody_Original":"SELECT \n  min(Users.DisplayName) as username,\n  min(Users.Reputation) as reputation,\n  Comments.UserId,\n  count(Score) as numcomments,\n  sum(Score) as totalscore\nfrom Comments\njoin Users on (Comments.UserId = Users.Id)\nwhere \n Text LIKE '%codereview%'\ngroup by Comments.UserId\norder by numcomments desc"},{"QuerySetId":153376,"Title":"User List: Top N - Turkey - with false positive exclusion","Description":"List of Users in Turkey.","QueryBody":"SELECT RankNo, \"User Link\", Reputation, Location \/* DisplayName, *\/ FROM (SELECT Id AS \"User Link\", Reputation, Location, DENSE_RANK() OVER (ORDER BY Reputation DESC) AS RankNo FROM Users WHERE LOWER(location) LIKE LOWER('%##location##%')) AS derivedtable ORDER BY location","CreationDate":"2013-12-13 06:48:07","validated":false,"QueryBody_Original":"SELECT    RankNo, \n         [User Link], \n         Reputation, \n         --DisplayName, \n         Location\n\nFROM\n         (\n            SELECT Id [User Link], Reputation, Location,\n                   DENSE_RANK() OVER (ORDER BY Reputation DESC) RankNo\n            FROM   Users\n\nwhere lower(location) like lower('%##location##%')\n\n    --and not(\n    --        lower(Location) LIKE lower('%##exclusion1##%')\n    --     OR lower(Location) LIKE lower('%##exclusion2##%')                  \n    --        )\n    \n        ) derivedtable\n--order by reputation desc\norder by location asc"},{"QuerySetId":153399,"Title":"Questions and answers per month for a specific tag ID","Description":"How many questions per month does each tag in the top 10 tags get","QueryBody":"SELECT Month, PostTypeId, COUNT(*) AS count FROM (SELECT Id, PostTypeId, DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) AS \"Month\" FROM Posts) AS tmp GROUP BY PostTypeId, Month ORDER BY PostTypeId, Month","CreationDate":"2013-12-13 10:54:49","validated":false,"QueryBody_Original":"SELECT  Month, PostTypeId, Count(*) as count FROM\n(SELECT Id, PostTypeId, DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) as [Month]\nFROM Posts) as tmp\n-- Python = 4452\n-- 1 = question, 2 = answer\nGROUP BY PostTypeId,Month\nORDER BY PostTypeId,Month"},{"QuerySetId":153594,"Title":"select TagName, Count from Tags order by Count Desc","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags ORDER BY Count DESC","CreationDate":"2013-12-14 15:37:02","validated":false,"QueryBody_Original":"SELECT  TagName, Count from Tags order by Count Desc"},{"QuerySetId":153842,"Title":"Average Reputation for Users With Reputation > 1","Description":null,"QueryBody":"SELECT AVG(reputation) FROM users WHERE reputation > 1","CreationDate":"2013-12-16 01:25:10","validated":false,"QueryBody_Original":"SELECT  AVG(reputation) FROM users WHERE reputation > 1;\nSELECT COUNT(*) FROM users WHERE reputation = 1;\nSELECT COUNT(*) FROM users WHERE reputation > 1;\nSELECT COUNT(*) AS S0,\n       SUM(CAST(reputation AS FLOAT)) AS S1,\n       SUM(CAST(reputation AS FLOAT) * reputation) AS S2,\n       SUM(CAST(reputation AS FLOAT) * reputation * reputation) AS S3\n  FROM users WHERE reputation > 1;\nSELECT COUNT(*) AS S0,\n       SUM(CAST(reputation AS FLOAT)) AS S1,\n       SUM(CAST(reputation AS FLOAT) * reputation) AS S2,\n       SUM(CAST(reputation AS FLOAT) * reputation * reputation) AS S3\n  FROM users;\nSELECT reputation, COUNT(*)\n  FROM Users\n WHERE reputation IN (99, 100, 101, 102, 103)\n GROUP BY reputation;"},{"QuerySetId":153882,"Title":"Votes: DownVote to UpVote Ratio","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, UpVotes, DownVotes, ROUND(CAST(UpVotes AS FLOAT) \/ DownVotes, 1) AS Ratio FROM Users WHERE reputation > 100 AND UpVotes > 0 AND DownVotes > 0 ORDER BY Ratio DESC LIMIT 50","CreationDate":"2014-06-27 21:40:08","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  \n  Id as [User Link],\n  Reputation,\n  UpVotes,\n  DownVotes,\n  ROUND(CAST(UpVotes AS float) \/ DownVotes , 1) as Ratio\n  \n  FROM Users\n  \n  WHERE reputation > 100\n  \n    and UpVotes > 0\n    \n    and DownVotes > 0\n    \n  ORDER BY Ratio DESC"},{"QuerySetId":153930,"Title":"Find user by email hash","Description":"Email hash can be found from Gravatar link or through the other query\r\n","QueryBody":"SELECT * FROM Users WHERE Id < 100","CreationDate":"2014-10-10 22:06:25","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Id < 100;"},{"QuerySetId":154132,"Title":"User Details: From Partial Display Name","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, Location, CreationDate, LastAccessDate, UpVotes, DownVotes \/* SELECT * -- To see the possible info *\/ FROM Users WHERE DisplayName LIKE '%##DisplayName##%' ORDER BY DisplayName","CreationDate":"2013-12-21 21:12:39","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], Reputation, Location, CreationDate, LastAccessDate, UpVotes, DownVotes\n\n--SELECT * -- To see the possible info\nFROM Users\nWHERE DisplayName LIKE '%##DisplayName##%'\nORDER by DisplayName asc"},{"QuerySetId":154137,"Title":"User Info: From Partial Display Name","Description":null,"QueryBody":"SELECT ID AS \"User Link\", Reputation, UpVotes, DownVotes, Location FROM Users WHERE DisplayName LIKE '%##DisplayName##%' ORDER BY DisplayName","CreationDate":"2013-12-19 11:13:35","validated":false,"QueryBody_Original":"SELECT \n         ID [User Link], Reputation, UpVotes, DownVotes, Location\n  FROM Users\n  \n  WHERE DisplayName like '%##DisplayName##%'\n  \n  ORDER BY DisplayName"},{"QuerySetId":154166,"Title":"Undefined tags with over 400 posts","Description":"Finds tags that are missing a tag wiki (regardless of tag excerpt).","QueryBody":"SELECT ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, Count FROM Tags AS T WHERE T.WikiPostId IS NULL AND T.ExcerptPostId IS NULL AND COUNT > 300 AND COUNT <= 400 ORDER BY T.TagName","CreationDate":"2013-12-17 15:00:17","validated":false,"QueryBody_Original":"SELECT  ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, Count\nFROM   Tags T\nWHERE  \nT.WikiPostId IS NULL\nAND\nT.ExcerptPostId IS NULL\nAND\nCOUNT > 300 and COUNT <= 400\nOrder by T.TagName"},{"QuerySetId":154318,"Title":"Posts and Votes per Month","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS \"Year\", MONTH(CreationDate) AS \"Month\", PostTypeId AS \"Post Type\", COUNT(Id) AS \"Post Count\" FROM Posts WHERE PostTypeId < 3 AND ClosedDate IS NULL GROUP BY YEAR(CreationDate), MONTH(CreationDate), PostTypeId ORDER BY Year, Month, 'Post Type'","CreationDate":"2014-02-12 23:00:52","validated":false,"QueryBody_Original":"SELECT \n  Year(CreationDate) AS 'Year',\n  Month(CreationDate) AS 'Month',\n  PostTypeId AS 'Post Type',\n  Count(Id) AS 'Post Count'\nFROM Posts\nWHERE\n  PostTypeId < 3 AND\n  ClosedDate IS NULL\nGROUP BY\n  Year(CreationDate),\n  Month(CreationDate),\n  PostTypeId\nORDER BY\n  Year,\n  Month,\n  'Post Type'"},{"QuerySetId":154430,"Title":"User Count: Reputation 1 and Greater Than 1 by Location","Description":null,"QueryBody":"SELECT AVG(reputation) AS AvgRepGt1 FROM users WHERE reputation > 1 AND location LIKE '%##location##%'","CreationDate":"2013-12-18 07:42:17","validated":false,"QueryBody_Original":"SELECT  AVG(reputation) AS AvgRepGt1 FROM users\n  WHERE reputation > 1\n  and location like '%##location##%';\n  \nSELECT AVG(reputation) AS AvgRepAll FROM users\n  WHERE reputation > 0\n  and location like '%##location##%';\n\n\nSELECT COUNT(*) AS NumUsersEq1\n  FROM users WHERE reputation = 1\n   and location like '%##location##%';\n\nSELECT COUNT(*) AS NumUsersGt1\n  FROM users WHERE reputation > 1\n  and location like '%##location##%';\n\nSELECT Count(*) AS NumUsers\n  From users WHERE reputation > 0\n  and location like '%##location##%';\n\n\nSELECT reputation, COUNT(*) AS NumUsers\n  FROM Users\n  WHERE reputation IN (90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110)\n  and location like '%##location##%'\n  \n  GROUP BY reputation\n  ORDER BY reputation"},{"QuerySetId":154445,"Title":"Top 100 users with highest downvotes per day ratio","Description":"Lists top 100 users who have highest downvotes\/day ratio excluding community user and minimum of 100 votes cast.  ","QueryBody":"SELECT id AS \"User Link\", DATEDIFF(CURRENT_TIMESTAMP(), creationdate) AS \"Days\", DownVotes, ROUND(CAST(NULLIF(DownVotes, 0) AS FLOAT) \/ DATEDIFF(CURRENT_TIMESTAMP(), creationdate), 4) AS \"DownVotes\/Day Ratio\" FROM users WHERE id <> -1 AND DownVotes > 100 ORDER BY \"Downvotes\/Day Ratio\" DESC","CreationDate":"2018-12-06 05:48:41","validated":false,"QueryBody_Original":"SELECT \n     id [User Link]\n     , datediff(dd, creationdate, GETDATE() ) \"Days\"\n     , DownVotes  \n     , round(cast(nullif(DownVotes, 0)as float) \/ datediff(dd, creationdate, GETDATE()),4)  \"DownVotes\/Day Ratio\"\nfrom users\nwhere  id <> -1 and DownVotes > 100\norder by \"Downvotes\/Day Ratio\" desc"},{"QuerySetId":154645,"Title":"Test: List of Users in a given location","Description":null,"QueryBody":"SELECT Id AS \"User Link\", location, reputation FROM users WHERE LOWER(location) LIKE LOWER('%##location##%') ORDER BY location \/* to pick out incorrect results *\/","CreationDate":"2013-12-19 17:47:33","validated":false,"QueryBody_Original":"SELECT \n  Id as [User Link],\n  location, \n  reputation\n\nfrom users\n\n  where lower(location) like lower('%##location##%')\n\n--order by reputation desc\norder by location asc -- to pick out incorrect results"},{"QuerySetId":154651,"Title":"generate a link to ten most recent posts","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts ORDER BY CreationDate DESC LIMIT 10","CreationDate":"2013-12-19 18:15:04","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id AS [Post Link] FROM Posts ORDER BY CreationDate DESC"},{"QuerySetId":154801,"Title":"Questions with lot of answers","Description":null,"QueryBody":"SELECT * FROM Posts","CreationDate":"2013-12-20 22:20:05","validated":false,"QueryBody_Original":"SELECT  * FROM Posts"},{"QuerySetId":155037,"Title":"Finding the total upvotes for a specific user","Description":null,"QueryBody":"SELECT displayname, upvotes FROM users WHERE users.id = 22656","CreationDate":"2013-12-21 18:18:25","validated":false,"QueryBody_Original":"SELECT  displayname, upvotes from users where users.id=22656"},{"QuerySetId":155101,"Title":" List of users who have exactly 101 points and have voted","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", u.UpVotes, u.CreationDate, u.LastAccessDate FROM users AS u WHERE u.Reputation = 101 AND u.UpVotes > 10 ORDER BY u.CreationDate DESC","CreationDate":"2013-12-21 20:14:12","validated":false,"QueryBody_Original":"SELECT  u.id as [User Link], u.UpVotes, u.CreationDate, u.LastAccessDate\nfrom users u\nwhere u.Reputation = 101 and u.UpVotes > 10\norder by u.CreationDate desc"},{"QuerySetId":155102,"Title":" List of users who have exactly 101 points","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", u.UpVotes, u.Reputation, u.CreationDate FROM users AS u WHERE u.Reputation = 101 AND u.UpVotes > 0 ORDER BY u.UpVotes DESC","CreationDate":"2013-12-21 20:08:56","validated":false,"QueryBody_Original":"SELECT  u.id as [User Link], u.UpVotes, u.Reputation, u.CreationDate\nfrom users u\nwhere u.Reputation = 101 and u.UpVotes > 0\norder by u.UpVotes desc"},{"QuerySetId":155377,"Title":"Posts tagged with [objective-c-2.0] but not [objective-c]","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE Tags LIKE '%<objective-c-2.0>%' AND NOT Tags LIKE '%<objective-c>%'","CreationDate":"2013-12-22 19:53:25","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Tags\nFROM Posts\nWHERE Tags LIKE '%<objective-c-2.0>%' AND Tags NOT LIKE '%<objective-c>%'"},{"QuerySetId":155779,"Title":"selecting the total distinct active users in last n days.","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT DISTINCT Users.id FROM Users JOIN Comments ON (Comments.UserId = Users.Id) WHERE DATEDIFF('2016-8-24', Comments.CreationDate) <= 7 UNION SELECT DISTINCT Users.id FROM Users JOIN Posts ON (Posts.OwnerUserId = Users.Id) WHERE DATEDIFF('2016-8-24', Posts.CreationDate) <= 7 UNION SELECT DISTINCT Users.id FROM Users JOIN Votes ON (Votes.UserId = Users.Id) WHERE DATEDIFF('2016-8-24', Votes.CreationDate) <= 7) AS T","CreationDate":"2016-08-31 15:23:26","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM (\n\nSELECT \n  DISTINCT Users.id\nFROM \n  Users\nJOIN \n  Comments ON (Comments.UserId = Users.Id)\nWHERE \n  DATEDIFF(day, Comments.CreationDate, '2016-8-24') <= 7\n  \nUNION\n\nSELECT \n  DISTINCT Users.id\nFROM \n  Users\nJOIN \n  Posts ON (Posts.OwnerUserId = Users.Id)\nWHERE \n  DATEDIFF(day, Posts.CreationDate, '2016-8-24') <= 7\n  \nUNION\n\nSELECT \n  DISTINCT Users.id\nFROM \n  Users\nJOIN \n  Votes ON (Votes.UserId = Users.Id)\nWHERE \n  DATEDIFF(day, Votes.CreationDate, '2016-8-24') <= 7\n  \n) T"},{"QuerySetId":155853,"Title":"Answers close to the Necromancer badge","Description":"All your answers that were posted at least 60 days after the question was posted, with a score of 4 or lower. When any of these reach a score of 5, they should earn you a Necromancer silver badge.","QueryBody":"SELECT a.Id AS \"Post Link\", a.Score FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId WHERE a.PostTypeId = 2 AND a.score <= 4 AND DATEDIFF(a.creationdate, q.creationdate) >= 60 ORDER BY a.score DESC","CreationDate":"2015-12-14 21:09:52","validated":false,"QueryBody_Original":"SELECT  \n    a.Id AS [Post Link], \n    a.Score\nFROM\n    Posts q\n  INNER JOIN\n    Posts a ON q.Id = a.ParentId\nWHERE\n    a.PostTypeId = 2\n  AND\n    a.score <= 4\n  AND\n    DATEDIFF(d, q.creationdate, a.creationdate) >= 60\nORDER BY\n    a.score DESC"},{"QuerySetId":155855,"Title":"SELECT * FROM votes WHERE postId = 12505377;","Description":null,"QueryBody":"SELECT * FROM votes WHERE postId = 12505377","CreationDate":"2013-12-24 06:53:11","validated":false,"QueryBody_Original":"SELECT  * FROM votes WHERE postId = 12505377;"},{"QuerySetId":155869,"Title":"SELECT * FROM votes WHERE votetypeid = 7 AND userid <> NULL;","Description":null,"QueryBody":"SELECT * FROM votes WHERE votetypeid = 7 AND userid > 0","CreationDate":"2013-12-24 11:54:14","validated":false,"QueryBody_Original":"SELECT  * FROM votes WHERE votetypeid = 7 AND userid > 0;"},{"QuerySetId":155912,"Title":"SELECT * FROM votes WHERE postid = 12023046 AND votetypeid = 10;","Description":null,"QueryBody":"SELECT * FROM votes WHERE postid = 12023046 AND votetypeid = 10","CreationDate":"2013-12-24 17:14:27","validated":false,"QueryBody_Original":"SELECT  * FROM votes WHERE postid = 12023046 AND votetypeid = 10;"},{"QuerySetId":155952,"Title":"See top 100 favorites questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Score, OwnerUserId AS \"User Link\", FavoriteCount FROM Posts ORDER BY FavoriteCount DESC LIMIT 100","CreationDate":"2013-12-25 13:44:50","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id As [Post Link], CreationDate, Score, \n  OwnerUserId As [User Link], FavoriteCount\nFROM Posts ORDER BY FavoriteCount DESC"},{"QuerySetId":156010,"Title":"All answers by deleted users","Description":null,"QueryBody":"SELECT a.Id AS \"Post Id\", a.OwnerDisplayName FROM Posts AS a WHERE a.OwnerUserId IS NULL ORDER BY a.CreationDate","CreationDate":"2014-05-08 20:31:59","validated":false,"QueryBody_Original":"SELECT  a.Id as [Post Id], a.OwnerDisplayName FROM Posts a\nWHERE a.OwnerUserId IS NULL \nORDER BY a.CreationDate ASC"},{"QuerySetId":156113,"Title":"Users with 20 or more bounty answers provided","Description":null,"QueryBody":"SELECT owneruserid AS \"User Link\", COUNT(1) AS \"Bounty Answers Provided\" FROM posts AS p, votes WHERE p.id = postid AND votetypeid = 9 GROUP BY owneruserid HAVING COUNT(1) > 20 ORDER BY 2 DESC","CreationDate":"2013-12-27 04:48:20","validated":false,"QueryBody_Original":"SELECT  owneruserid [User Link],\n              count(1) [Bounty Answers Provided]\nfrom posts p,votes \n where p.id = postid\n   and votetypeid = 9\n group by owneruserid\n having  count(1) > 20\n order by  2 desc"},{"QuerySetId":156117,"Title":"Users more than 20 bounty answers provided","Description":null,"QueryBody":"SELECT owneruserid AS \"User Link\", COUNT(1) AS \"Bounty Answers Provided\" FROM posts AS p, votes WHERE p.id = postid AND votetypeid = 9 GROUP BY owneruserid HAVING COUNT(1) > 20 ORDER BY 2","CreationDate":"2013-12-27 04:52:17","validated":false,"QueryBody_Original":"SELECT  owneruserid [User Link],\ncount(1) [Bounty Answers Provided]\nfrom posts p,votes \nwhere p.id = postid\nand votetypeid = 9\ngroup by owneruserid\nhaving  count(1) > 20\norder by 2"},{"QuerySetId":156208,"Title":"Question and answer links for Question ID #3896723","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts WHERE ParentId = 3896723 OR Id = 3896723","CreationDate":"2013-12-27 20:34:02","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], * FROM Posts WHERE ParentId = 3896723 OR Id = 3896723"},{"QuerySetId":156210,"Title":"All posts with ID #3896392","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts WHERE Id = 3896392","CreationDate":"2013-12-27 20:34:38","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], * FROM Posts WHERE Id = 3896392"},{"QuerySetId":156217,"Title":"Search among possibly unregistered users","Description":null,"QueryBody":"SELECT Id AS \"User Link\", CreationDate, LastAccessDate, Reputation FROM Users WHERE LOWER(DisplayName) LIKE LOWER('%##UserName##%') AND UpVotes = 0 AND DownVotes = 0 ORDER BY CreationDate DESC","CreationDate":"2013-12-27 22:07:24","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], CreationDate, LastAccessDate, Reputation from Users \nwhere LOWER(DisplayName) LIKE LOWER('%##UserName##%')\nand UpVotes = 0\nand DownVotes = 0\norder by CreationDate DESC"},{"QuerySetId":157080,"Title":"Rep earned on answers to questions closed within a day","Description":"Calculates total reputation earned on answers to questions which were closed within 24 hours of creation for the year of 2013. Reptuation is grouped by user id.","QueryBody":"SELECT Answers.OwnerUserId, SUM(CASE WHEN Votes.VoteTypeId = 2 THEN 10 WHEN Votes.VoteTypeId = 3 THEN -2 ELSE 0 END) AS EarnedRep FROM Posts AS Questions, Posts AS Answers, Votes WHERE Questions.PostTypeId = 1 AND Questions.CreationDate BETWEEN '2013-01-01' AND '2013-12-31' AND DATEDIFF(Questions.ClosedDate, Questions.CreationDate) < 24 AND Answers.PostTypeId = 2 AND Answers.ParentId = Questions.Id AND Votes.PostId = Answers.Id GROUP BY Answers.OwnerUserId","CreationDate":"2013-12-31 20:49:52","validated":false,"QueryBody_Original":"SELECT       Answers.OwnerUserId\n        ,   SUM(\n                CASE\n                    WHEN Votes.VoteTypeId = 2 THEN 10\n                    WHEN Votes.VoteTypeId = 3 THEN -2\n                    ELSE 0\n                END\n            ) AS EarnedRep\nFROM        Posts AS Questions\n        ,   Posts AS Answers\n        ,   Votes\nWHERE       Questions.PostTypeId = 1\n        AND Questions.CreationDate BETWEEN '2013-01-01' AND '2013-12-31'\n        AND DATEDIFF( HOUR, Questions.CreationDate, Questions.ClosedDate ) < 24\n        AND Answers.PostTypeId = 2\n        AND Answers.ParentId = Questions.Id\n        AND Votes.PostId = Answers.Id\nGROUP BY    Answers.OwnerUserId"},{"QuerySetId":157177,"Title":"Top Sri Lankans in Stackoverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Sri%' ORDER BY Reputation DESC LIMIT 300","CreationDate":"2014-01-01 15:49:01","validated":false,"QueryBody_Original":"SELECT  TOP 300\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Sri%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":157534,"Title":"Median rep for users with at least 100","Description":null,"QueryBody":"SELECT COUNT(1) FROM users WHERE reputation >= 100","CreationDate":"2014-01-03 03:37:08","validated":false,"QueryBody_Original":"SELECT  count(1) FROM users WHERE reputation >= 100"},{"QuerySetId":157777,"Title":"Users with many zero-score answers with no comments ","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(Id) AS \"Number of Answers\" FROM Posts WHERE PostTypeId = 2 AND Score = 0 AND CommentCount IS NULL GROUP BY OwnerUserId ORDER BY \"Number of Answers\" DESC LIMIT 100","CreationDate":"2014-01-04 07:47:40","validated":false,"QueryBody_Original":"SELECT  TOP 100 OwnerUserId AS [User Link], Count(Id) as [Number of Answers] FROM Posts\nWHERE PostTypeId=2 AND Score=0 AND CommentCount IS NULL\nGROUP BY OwnerUserId\nORDER BY [Number of Answers] DESC"},{"QuerySetId":157807,"Title":"Most Number of Famous Questions","Description":null,"QueryBody":"SELECT 'https:\/\/stackoverflow.com\/questions\/' + CAST(questions.id AS TEXT), questions.score, questions.ViewCount FROM posts AS questions JOIN posts AS answers ON answers.parentid = questions.Id JOIN users AS u ON u.Id = answers.OwnerUserId WHERE u.id = 575376 AND questions.posttypeid = 1 AND (questions.ViewCount > 30000 OR questions.score > 30) ORDER BY questions.ViewCount DESC","CreationDate":"2015-02-09 15:11:00","validated":false,"QueryBody_Original":"SELECT  'https:\/\/stackoverflow.com\/questions\/' + cast(questions.id as varchar), \n       questions.score, questions.ViewCount\nfrom   posts questions\njoin   posts answers on answers.parentid = questions.Id\njoin   users u on u.Id = answers.OwnerUserId\nwhere u.id = 575376\nand questions.posttypeid = 1\nand (questions.ViewCount > 30000 or questions.score > 30)\norder by questions.ViewCount desc"},{"QuerySetId":158100,"Title":"TOP 500 programming languages ","Description":null,"QueryBody":"SELECT T.TagName, T.Count FROM Tags AS T ORDER BY T.Count DESC LIMIT 5000","CreationDate":"2014-01-06 06:17:13","validated":false,"QueryBody_Original":"SELECT  TOP 5000\n        T.TagName,\n        T.Count\nFROM Tags AS T\nORDER BY T.Count DESC"},{"QuerySetId":158113,"Title":"Zero-score, not accepted, uncommented answers","Description":null,"QueryBody":"SELECT SUM(CASE WHEN a.Score = 0 AND COALESCE(q.AcceptedAnswerId, 0) <> a.Id AND a.CommentCount = 0 THEN 1 ELSE 0 END) AS \"Unappreciated Answers\", COUNT(a.Id) AS \"Total Answers\", 100 * CAST(SUM(CASE WHEN a.Score = 0 AND a.CommentCount = 0 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(a.Id) AS \"Percentage Unappreciated\" FROM Posts AS a INNER JOIN Posts AS q ON (q.Id = a.ParentId)","CreationDate":"2016-04-11 19:41:49","validated":false,"QueryBody_Original":"SELECT  \n   sum(case when a.Score=0 and isnull(q.AcceptedAnswerId,0) != a.Id and a.CommentCount=0 then 1 else 0 end) as [Unappreciated Answers], \n   count(a.Id) as [Total Answers], \n   100*cast(sum(case when a.Score=0 and a.CommentCount=0 then 1 else 0 end) as float)\/count(a.Id)  as [Percentage Unappreciated]\nFROM Posts a\nINNER JOIN Posts q \nON (q.Id = a.ParentId)"},{"QuerySetId":158218,"Title":"For hippietrail (total posts, total migrated in and out)","Description":null,"QueryBody":"SELECT 'Migrated Here', COUNT(*) AS \"Total\" FROM Posts AS P JOIN PostHistory AS H ON P.Id = H.PostId WHERE PostTypeId = 1 \/* Questions *\/ AND h.PostHistoryTypeId = 36 UNION SELECT 'Migrated Away', COUNT(*) AS \"Total\" FROM Posts AS P JOIN PostHistory AS H ON P.Id = H.PostId WHERE PostTypeId = 1 \/* Questions *\/ AND h.PostHistoryTypeId = 35 UNION SELECT 'Total Posts', COUNT(*) AS \"Total\" FROM Posts AS P WHERE PostTypeId = 1 \/* Questions *\/ \/* Questions *\/ \/* Questions *\/ \/* Questions *\/","CreationDate":"2014-01-06 20:16:22","validated":false,"QueryBody_Original":"SELECT  \n  'Migrated Here', COUNT(*) AS [Total]\nFROM \n  Posts P \n  JOIN PostHistory H ON P.Id = H.PostId\nWHERE \n  PostTypeId = 1 --Questions\n  AND h.PostHistoryTypeId = 36\n\nUNION\n-- migrated away count\nSELECT \n  'Migrated Away', COUNT(*) AS [Total]\nFROM \n  Posts P \n  JOIN PostHistory H ON P.Id = H.PostId\nWHERE \n  PostTypeId = 1 --Questions\n  AND h.PostHistoryTypeId = 35\n\n\nUNION\n-- all questions count\nSELECT\n  'Total Posts', COUNT(*) AS [Total]\nFROM \n  Posts P \nWHERE \n  PostTypeId = 1 --Questions"},{"QuerySetId":158232,"Title":"Questions Where the Accepted Answer isn't the Highest Voted Answer","Description":null,"QueryBody":"SELECT Id, Score FROM Posts WHERE Posts.AcceptedAnswerId <> Posts.Id","CreationDate":"2014-01-06 22:23:58","validated":false,"QueryBody_Original":"SELECT \n  Id,\n  Score\nFROM Posts\nWHERE\n  Posts.AcceptedAnswerId != Posts.Id"},{"QuerySetId":158328,"Title":"Top users who haven't changed their username","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank, Id AS \"User Link\", Reputation FROM Users WHERE DisplayName = 'user' + CAST(Id AS TEXT(40)) LIMIT 100","CreationDate":"2014-01-07 11:21:39","validated":false,"QueryBody_Original":"SELECT \n  TOP 100\n  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Rank,\n  Id AS [User Link],\n  Reputation\nFROM Users\nWHERE DisplayName = 'user' + CAST(Id AS varchar(40))"},{"QuerySetId":158761,"Title":"How am I ranked among those who have not asked a question?","Description":null,"QueryBody":"SELECT (ROW_NUMBER() OVER (ORDER BY Reputation DESC)), u.Id AS \"User Link\", u.Reputation FROM Users AS u WHERE (SELECT COUNT(p.Id) FROM Posts AS p WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 1) = 0 AND (SELECT COUNT(p.Id) FROM Posts AS p WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 2) > 0 AND u.Reputation > 101","CreationDate":"2014-02-17 07:54:33","validated":false,"QueryBody_Original":"SELECT  (ROW_NUMBER() OVER(ORDER BY Reputation DESC)), u.Id as [User Link], u.Reputation from Users u where \n   (SELECT count(p.Id) from Posts p where p.OwnerUserId = u.Id\n    and p.PostTypeId = 1) = 0\n    and \n    (SELECT count(p.Id) from Posts p where p.OwnerUserId = u.Id\n    and p.PostTypeId = 2) > 0\n    and\n    u.Reputation > 101"},{"QuerySetId":158953,"Title":"Answers: Zero-score accepted - Tag parameter","Description":null,"QueryBody":"SELECT a.id AS \"Post Link\", q.tags \/* AS [Tag name] *\/ FROM Posts AS q, Posts AS a WHERE a.Score = 0 AND q.AcceptedAnswerId = a.Id AND q.tags LIKE LOWER('%##Tag##%') ORDER BY q.Id LIMIT 100","CreationDate":"2014-01-10 06:20:00","validated":false,"QueryBody_Original":"SELECT  Top 100\n  a.id AS [Post Link],\n  q.tags -- AS [Tag name]\n    \nFROM Posts q, Posts a\n    \nWHERE\n  a.Score = 0\n  \n  AND\n  q.AcceptedAnswerId = a.Id\n  \n  and\n  q.tags like lower('%##Tag##%')\n  \nORDER BY q.Id ASC"},{"QuerySetId":158961,"Title":"Stackoverflow top users from kerala By Unnikrishnan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kerala%' OR UPPER(Location) LIKE '%KERALA' OR UPPER(Location) LIKE '%Kochi' OR UPPER(Location) LIKE 'TRIVANDRUM' OR LOWER(Location) LIKE 'TRIVANDRUM' OR UPPER(Location) LIKE 'THIRUVANANTHAPURAM' OR LOWER(Location) LIKE 'thiruvananthapuram' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-11-15 14:04:09","validated":false,"QueryBody_Original":"SELECT \nTOP (100) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kerala%'\n    OR UPPER(Location) LIKE '%KERALA'\n    OR UPPER(Location) LIKE '%Kochi'\n    OR UPPER(Location) LIKE 'TRIVANDRUM'\n    OR LOWER(Location) LIKE 'TRIVANDRUM'\n    OR UPPER(Location) LIKE 'THIRUVANANTHAPURAM'\n    OR LOWER(Location) LIKE 'thiruvananthapuram'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":159187,"Title":"top 50 users in dhaka Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%dhaka%' OR LOWER(Location) LIKE '%bangladesh%' OR UPPER(Location) LIKE '%bd' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2014-01-11 02:57:55","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%dhaka%'\n    or LOWER(Location) LIKE '%bangladesh%'\n    OR UPPER(Location) LIKE '%bd'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":159335,"Title":"Average answer length per user > 3K rep.","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(*) AS \"Answer count\", MIN(LENGTH(p.Body)) AS \"Min\", AVG(LENGTH(p.Body)) AS \"Average\", MAX(LENGTH(p.Body)) AS \"Max\", VAR(LENGTH(p.Body)) AS \"Variance\", STDEV(LENGTH(p.Body)) AS \"StDev\" FROM Users AS u, Posts AS p WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 2 AND u.Reputation > 3000 GROUP BY u.Id ORDER BY \"Average\"","CreationDate":"2014-01-12 08:22:31","validated":false,"QueryBody_Original":"SELECT \n  u.Id AS [User Link],\n  Count(*) AS [Answer count],\n  Min(Len(p.Body)) AS [Min],\n  Avg(Len(p.Body)) AS [Average],\n  Max(Len(p.Body)) AS [Max],\n  Var(Len(p.Body)) AS [Variance],\n  Stdev(Len(p.Body)) AS [StDev]\nFROM Users u, Posts p\nWHERE p.OwnerUserId = u.Id\n  AND p.PostTypeId = 2\n  AND u.Reputation > 3000\n  \/*AND (SELECT Count(*)\n       FROM Posts q\n       WHERE q.OwnerUserId = u.Id AND p.PostTypeId = 2\n       GROUP BY q.OwnerUserId) >= 10*\/\nGROUP BY u.Id\nORDER BY [Average] ASC"},{"QuerySetId":159582,"Title":"Site ranking by tag score and distance behind those ranked just above","Description":null,"QueryBody":"SELECT u.displayname, SUM(p.score) AS total_score FROM posts AS p JOIN posts AS q ON q.id = p.parentid AND q.tags LIKE '%<##tag##>%' JOIN users AS u ON u.id = p.owneruserid GROUP BY u.displayname HAVING SUM(p.score) > 1000 ORDER BY SUM(p.score) DESC","CreationDate":"2014-01-13 17:51:31","validated":false,"QueryBody_Original":"SELECT \nu.displayname,\nsum(p.score) total_score\nfrom posts p\njoin posts q on q.id = p.parentid\nand q.tags like '%<##tag##>%'\njoin users u on u.id = p.owneruserid\n-- where p.owneruserid = ##userid##\ngroup by u.displayname\nhaving sum(p.score) > 1000\norder by sum(p.score) desc"},{"QuerySetId":159682,"Title":"users with most unanswered questions","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS nbPosts FROM Posts WHERE PostTypeId = 1 \/* questions *\/ AND AcceptedAnswerId IS NULL AND NOT OwnerUserId IS NULL GROUP BY OwnerUserId ORDER BY nbPosts DESC","CreationDate":"2014-01-13 23:38:15","validated":false,"QueryBody_Original":"SELECT  OwnerUserId as \"User Link\", count(*) as nbPosts\nFROM Posts\nWHERE PostTypeId = 1 \/*questions*\/\n  AND AcceptedAnswerId IS NULL\n  AND OwnerUserId IS NOT NULL\nGROUP BY OwnerUserId\nORDER BY nbPosts DESC"},{"QuerySetId":159700,"Title":"Unanswered Django question by esteemed users","Description":null,"QueryBody":"SELECT Score, ViewCount AS \"Views\", CommentCount AS \"Comments\", Id AS \"Post Link\", Tags FROM Posts WHERE ClosedDate IS NULL AND AnswerCount = 0 AND tags LIKE '%django%' AND OwnerUserId IN (SELECT ID FROM users WHERE Reputation > 200) ORDER BY LastEditDate DESC LIMIT 30","CreationDate":"2014-01-14 01:37:08","validated":false,"QueryBody_Original":"SELECT  TOP 30 Score, ViewCount as [Views], CommentCount as [Comments], Id as [Post Link], Tags \nFROM Posts \nWHERE ClosedDate IS NULL AND AnswerCount = 0 AND tags LIKE '%django%' \n  AND OwnerUserId IN (SELECT ID from users WHERE Reputation > 200) \nORDER By LastEditDate DESC"},{"QuerySetId":159729,"Title":"Closed questions referred to SU","Description":null,"QueryBody":"SELECT Posts.ID AS \"Post Link\", Comments.Text AS \"Comment\" FROM Posts JOIN Comments ON Comments.PostId = Posts.Id WHERE PostTypeID = 1 \/* Question *\/ AND NOT ClosedDate IS NULL \/* Closed *\/ AND (LOWER(Comments.Text) LIKE '%superuser%' \/* Comment mentions superuser *\/ OR LOWER(Comments.Text) LIKE '% su %') \/* or su *\/ ORDER BY Posts.CreationDate","CreationDate":"2014-01-14 08:12:13","validated":false,"QueryBody_Original":"SELECT  Posts.ID AS [Post Link], Comments.Text AS [Comment]\n  FROM Posts\n  JOIN Comments ON Comments.PostId = Posts.Id\n WHERE PostTypeID = 1 -- Question\n   AND NOT ClosedDate IS NULL -- Closed\n   AND (LOWER(Comments.Text) LIKE '%superuser%' -- Comment mentions superuser\n   OR LOWER(Comments.Text) LIKE '% su %') -- or su\n ORDER BY Posts.CreationDate"},{"QuerySetId":159921,"Title":"List of rare badges (exclude tag badges)","Description":null,"QueryBody":"SELECT Name, CASE Class WHEN 1 THEN 'Gold' WHEN 2 THEN 'Silver' ELSE 'Bronze' END AS Class, COUNT(ID) AS Total_Awarded FROM Badges GROUP BY Name, Class ORDER BY COUNT(ID)","CreationDate":"2020-12-04 03:15:45","validated":false,"QueryBody_Original":"SELECT  Name\n  ,CASE Class WHEN 1 THEN 'Gold' WHEN 2 THEN 'Silver' ELSE 'Bronze' END AS Class\n  ,COUNT(ID) AS Total_Awarded\n  FROM Badges\n GROUP BY Name,Class\n ORDER BY COUNT(ID);"},{"QuerySetId":159944,"Title":"Top posts with tag html (test)","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", ViewCount, AnswerCount, FavoriteCount, Tags, Score FROM Posts WHERE ClosedDate IS NULL AND Tags LIKE '%maven%' ORDER BY ViewCount DESC LIMIT 500","CreationDate":"2014-11-21 11:30:56","validated":false,"QueryBody_Original":"SELECT  TOP 500 Posts.Id\nAS [Post Link], \nViewCount,\nAnswerCount, \nFavoriteCount, \nTags,\nScore\nFROM Posts\n\nWHERE ClosedDate is null \nAND Tags like '%maven%'\nORDER BY ViewCount DESC"},{"QuerySetId":160103,"Title":"Questions with many comments but no accepted answer","Description":null,"QueryBody":"SELECT q.Id, q.Title, (SELECT COUNT(*) AS Comments FROM Comments AS qC WHERE q.Id = qC.PostId) AS CommentCount FROM Posts AS q WHERE q.AcceptedAnswerId IS NULL AND q.PostTypeId = 1 AND CommentCount > 10 GROUP BY q.Id, q.Title ORDER BY CommentCount DESC LIMIT 100","CreationDate":"2014-01-15 23:51:20","validated":false,"QueryBody_Original":"SELECT  TOP 100 q.Id, q.Title, \n  (SELECT COUNT(*) AS Comments FROM Comments qC WHERE q.Id = qC.PostId) AS CommentCount\nFROM Posts q\nWHERE q.AcceptedAnswerId IS NULL\n   AND q.PostTypeId = 1\n   AND CommentCount > 10\nGROUP BY q.Id, q.Title\nORDER BY CommentCount DESC"},{"QuerySetId":160162,"Title":"Count of users with close vote power","Description":null,"QueryBody":"SELECT COUNT(id) FROM Users WHERE Reputation >= 3000","CreationDate":"2014-01-16 03:30:57","validated":false,"QueryBody_Original":"SELECT  count(id) from Users\nWhere Reputation  >= 3000"},{"QuerySetId":160177,"Title":"I'm trying to find a specific answer","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Score = -3 AND Body LIKE '%handle%xml%' AND PostTypeId = 2 ORDER BY Id DESC","CreationDate":"2014-01-16 06:24:25","validated":false,"QueryBody_Original":"SELECT \n    Id AS [Post Link]\nFROM\n    Posts\nWHERE\n    Score = -3\n    AND Body LIKE '%handle%xml%'\n    AND PostTypeId = 2\nORDER BY\n    Id DESC"},{"QuerySetId":160187,"Title":"Last 30 days active users by rep score group","Description":null,"QueryBody":"SELECT CAST(usr.Reputation \/ 500 AS INT) * 500 AS RepScore, COUNT(*) AS Users FROM Users AS usr WHERE DATEDIFF(CURRENT_TIMESTAMP(), usr.LastAccessDate) <= 30 GROUP BY CAST(usr.Reputation \/ 500 AS INT) * 500 ORDER BY RepScore","CreationDate":"2014-01-16 08:04:50","validated":false,"QueryBody_Original":"SELECT \n    cast(usr.Reputation\/500 as int)*500 RepScore,\n    -- todo: ^^ improve this clustering.\n    count(*) Users\nfrom \n    Users usr\nwhere\n    datediff(day, usr.LastAccessDate, getdate()) <= 30\ngroup by\n  cast(usr.Reputation\/500 as int)*500\norder by\n  RepScore"},{"QuerySetId":160334,"Title":" Top 10 Comments of All Time","Description":"What are the highest-rated comments?","QueryBody":"SELECT * FROM Comments WHERE Score IN (SELECT Score FROM Comments ORDER BY Score DESC LIMIT 1000) ORDER BY Score DESC","CreationDate":"2014-01-17 01:10:50","validated":false,"QueryBody_Original":"SELECT \n    *\nFROM \n    Comments\nWHERE \n    Score in \n    (\n      SELECT TOP 1000\n          Score\n      FROM \n          Comments\n      ORDER BY\n          Score desc\n    )\nORDER BY\n    Score desc;"},{"QuerySetId":160899,"Title":"Percent of my answers accepted","Description":null,"QueryBody":"SELECT (CAST(COUNT(a.Id) AS FLOAT) \/ (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = 681865 AND PostTypeId = 2) * 100) AS AcceptedPercentage FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id WHERE a.OwnerUserId = 1179880 AND a.PostTypeId = 2","CreationDate":"2014-01-20 02:31:50","validated":false,"QueryBody_Original":"SELECT  \n    (CAST(COUNT(a.Id) AS float) \/ \n      (\n      SELECT COUNT(*) \n      FROM Posts \n      WHERE OwnerUserId = 681865 \n      AND PostTypeId = 2) \n        * 100\n      ) \n    AS AcceptedPercentage\nFROM Posts q\n    INNER JOIN Posts a ON q.AcceptedAnswerId = a.Id\nWHERE a.OwnerUserId = 1179880\n    AND a.PostTypeId = 2"},{"QuerySetId":160913,"Title":"new users between 90 and 30 days back that only answer","Description":null,"QueryBody":"SELECT COUNT(*) AS cnt, SUM(totscore) AS totalscore FROM (SELECT u.id AS id, COUNT(*) AS cnt, SUM(a.score) AS totscore FROM users AS u INNER JOIN posts AS a ON u.id = a.owneruserid AND a.posttypeid = 2 LEFT OUTER JOIN posts AS q ON q.owneruserid = u.id AND q.posttypeid = 1 WHERE u.creationdate BETWEEN DATEADD(d, -90, GETDATE()) AND DATEADD(d, -30, GETDATE()) AND q.id IS NULL GROUP BY u.id HAVING COUNT(a.id) > 0) AS d","CreationDate":"2014-01-19 02:16:09","validated":false,"QueryBody_Original":"SELECT  count(*) as cnt, sum(totscore) as totalscore\nfrom (\nSELECT u.id as id, count(*) as cnt, sum(a.score) as totscore\nfrom users u  \ninner join posts a on u.id = a.owneruserid\n              and a.posttypeid= 2\nleft outer join posts q on q.owneruserid = u.id\n                and q.posttypeid = 1\nwhere\n u.creationdate between dateadd(d, -90, getdate()) \n                and dateadd(d, -30,getdate())\nand q.id is null\ngroup by u.id\nhaving count(a.id) >0 ) d"},{"QuerySetId":160914,"Title":"wpse user over 300 reputation","Description":null,"QueryBody":"SELECT COUNT(*) FROM USERS WHERE Reputation >= 300 AND LastAccessDate >= '2014-1-1 0:00'","CreationDate":"2014-01-20 19:39:43","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM USERS WHERE Reputation >= 300 AND LastAccessDate >= '2014-1-1 0:00'"},{"QuerySetId":161138,"Title":"Find Length Of All Tables","Description":null,"QueryBody":"SELECT COUNT(*) AS n_Posts FROM Posts","CreationDate":"2014-01-20 07:32:56","validated":false,"QueryBody_Original":"SELECT  count(*) as n_Posts from Posts;\n\nSELECT count(*) from Users;\n\nSELECT count(*) from Comments;\n\nSELECT count(*) from Badges;\n\nSELECT count(*) from PostFeedback;\n\nSELECT count(*) from PostHistory;\n\nSELECT count(*) from PostHistoryTypes;\n\nSELECT count(*) from PostLinks;\n\nSELECT count(*) from PostLinkTypes;\n\nSELECT count(*) from PostTags;\n\nSELECT count(*) from PostTypes;\n\nSELECT count(*) from SuggestedEdits;\n\nSELECT count(*) from SuggestedEditVotes;\n\nSELECT count(*) from Tags;\n\nSELECT count(*) from TagSynonyms;\n\nSELECT count(*) from Votes;\n\nSELECT count(*) from VoteTypes;"},{"QuerySetId":161240,"Title":"Number of posts something has happened to.","Description":null,"QueryBody":"SELECT COUNT(DISTINCT p.Id) AS \"Posts\", COUNT(DISTINCT COALESCE(ph.PostId, c.PostId)) AS \"Something Happened\" FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id LEFT OUTER JOIN PostHistory AS ph ON p.Id = ph.PostId AND NOT ph.PostHistoryTypeId IN (1, 2, 3) LEFT OUTER JOIN Comments AS c ON p.Id = c.PostId WHERE TIME_TO_STR(p.CreationDate, '%Y') > 2013 AND p.PostTypeId = 1 AND u.Reputation <= 101","CreationDate":"2014-01-20 17:54:55","validated":false,"QueryBody_Original":"SELECT  count(distinct p.Id) as [Posts]\n     , count(distinct coalesce(ph.PostId, c.PostId)) as [Something Happened]\n  from Posts p\n  join Users u\n    on p.OwnerUserId = u.Id\n  left outer join PostHistory ph\n    on p.Id = ph.PostId\n   and ph.PostHistoryTypeId not in (1, 2, 3)\n  left outer join Comments c\n    on p.Id = c.PostId\n where datepart(year, p.CreationDate) > 2013\n   and p.PostTypeId = 1\n   and u.Reputation <= 101"},{"QuerySetId":161260,"Title":"wpse users with at least 300 reputation","Description":null,"QueryBody":"SELECT COUNT(*) FROM USERS WHERE Reputation <= 300","CreationDate":"2014-01-20 19:16:14","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM USERS WHERE Reputation <= 300"},{"QuerySetId":161353,"Title":"Asker rep vs. answerer rep","Description":null,"QueryBody":"SELECT p.Id, p.Score, u.DisplayName, u.Reputation FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 AND NOT p.AcceptedAnswerId IS NULL AND p.CreationDate > '2014-01-18'","CreationDate":"2014-01-21 01:13:30","validated":false,"QueryBody_Original":"SELECT  p.Id, p.Score, u.DisplayName, u.Reputation\nFROM Posts AS p\nINNER JOIN Users AS u ON p.OwnerUserId = u.Id\nWHERE p.PostTypeId = 1\nAND p.AcceptedAnswerId IS NOT NULL\nAND p.CreationDate > '2014-01-18'"},{"QuerySetId":161425,"Title":"select * from Posts where Tags LIKE '%selenium%';","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%selenium%' AND ClosedDate IS NULL","CreationDate":"2014-01-21 13:15:43","validated":false,"QueryBody_Original":"SELECT  * from Posts where Tags LIKE '%selenium%' and ClosedDate is NULL;"},{"QuerySetId":161453,"Title":" Most Favorited StackOverflow tags","Description":null,"QueryBody":"SELECT * FROM Tags ORDER BY ExcerptPostId DESC","CreationDate":"2014-01-22 09:11:01","validated":false,"QueryBody_Original":"SELECT  * from Tags order by ExcerptPostId DESC"},{"QuerySetId":162115,"Title":"Help users who are close to achieving the Pundit badge","Description":null,"QueryBody":"SELECT DISTINCT Comments.Id AS \"Comment Link\", Comments.CreationDate, Comments.UserId FROM Comments WHERE Comments.Score = 4 AND (SELECT COUNT(Badges.UserId) FROM Badges WHERE Badges.Name = 'Pundit' AND Badges.UserId = Comments.UserId) < 1 ORDER BY Comments.CreationDate DESC","CreationDate":"2014-01-23 02:47:41","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Comments.Id as [Comment Link],\n  Comments.CreationDate,\n  Comments.UserId\nFROM\n  Comments\nWHERE\n  Comments.Score = 4 AND (\n    SELECT\n      COUNT(Badges.UserId)\n    FROM\n      Badges\n    WHERE\n      Badges.Name = 'Pundit' AND Badges.UserId = Comments.UserId\n  ) < 1\nORDER BY\n  Comments.CreationDate DESC"},{"QuerySetId":162121,"Title":"Help users who are close to earning the Pundit badge","Description":null,"QueryBody":"SELECT DISTINCT Id AS \"Comment Link\", CreationDate, UserId FROM Comments WHERE Score = 4 AND (SELECT COUNT(UserId) FROM Badges WHERE Name = 'Pundit' AND UserId = Comments.UserId) < 1 ORDER BY UserId","CreationDate":"2014-02-14 03:59:13","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Id as [Comment Link],\n  CreationDate,\n  UserId\nFROM\n  Comments\nWHERE\n  Score = 4 AND (\n    SELECT\n      COUNT(UserId)\n    FROM\n      Badges\n    WHERE\n      Name = 'Pundit' AND UserId = Comments.UserId\n  ) < 1\nORDER BY\n  UserId ASC"},{"QuerySetId":162168,"Title":"SELECT * FROM Users WHERE LastAccessDate < '2014-01-01';","Description":null,"QueryBody":"SELECT * FROM Users WHERE LastAccessDate < '2014-01-01'","CreationDate":"2014-01-23 04:31:04","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE LastAccessDate < '2014-01-01';"},{"QuerySetId":162191,"Title":"Questions by Number of Answers","Description":null,"QueryBody":"SELECT COALESCE(AnswerCount, 0), COUNT(*) AS PostCount FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL GROUP BY COALESCE(AnswerCount, 0) ORDER BY COALESCE(AnswerCount, 0) DESC","CreationDate":"2014-01-23 11:36:49","validated":false,"QueryBody_Original":"SELECT  \n    isnull(AnswerCount,0),\n    Count(*) AS PostCount\nFROM \n    Posts\nWHERE \n    PostTypeId = 1 and\n    ClosedDate is null\nGROUP BY \n    isnull(AnswerCount,0)\nORDER BY \n    isnull(AnswerCount,0) DESC"},{"QuerySetId":162435,"Title":"Top Questions for Tag and Year","Description":null,"QueryBody":"SELECT * FROM Posts WHERE NOT Posts.Title IS NULL AND LOWER(Posts.Tags) LIKE N'%java%' ORDER BY Posts.Score DESC LIMIT 10","CreationDate":"2014-04-08 02:57:16","validated":false,"QueryBody_Original":"SELECT  TOP 10\n*\nFROM Posts\nWHERE \n  Posts.Title IS NOT NULL AND\n  lower(Posts.Tags) LIKE N'%java%'\nORDER BY Posts.Score DESC"},{"QuerySetId":162721,"Title":"Answers with the most bounty points.","Description":null,"QueryBody":"SELECT CURRENT_TIMESTAMP()","CreationDate":"2017-11-10 23:52:43","validated":false,"QueryBody_Original":"SELECT  getdate()"},{"QuerySetId":162796,"Title":"Answers by User for given period","Description":null,"QueryBody":"SELECT OwnerUserId, Users.DisplayName, Users.CreationDate, Users.LastAccessDate, COUNT(*) AS Answers FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE PostTypeID = 2 AND Posts.CreationDate BETWEEN '2013-01-23' AND '2013-01-30' GROUP BY OwnerUserId, OwnerDisplayName, Users.Id, Users.DisplayName, Users.CreationDate, Users.LastAccessDate ORDER BY Answers DESC","CreationDate":"2014-01-25 10:05:46","validated":false,"QueryBody_Original":"SELECT  \n  OwnerUserId,\n  Users.DisplayName, Users.CreationDate,Users.LastAccessDate,\n  count(*) as Answers \nfrom Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id \nwhere PostTypeID = 2 AND Posts.CreationDate BETWEEN  '2013-01-23' AND '2013-01-30'\ngroup by OwnerUserId,OwnerDisplayName,Users.Id,Users.DisplayName,Users.CreationDate,Users.LastAccessDate\norder by Answers DESC"},{"QuerySetId":162903,"Title":"Average Scores for Closed Questions","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') * 12 + TIME_TO_STR(CreationDate, '%m'), AVG(Score) FROM Posts GROUP BY TIME_TO_STR(CreationDate, '%Y') * 12 + TIME_TO_STR(CreationDate, '%m') HAVING TIME_TO_STR(CreationDate, '%Y') * 12 + TIME_TO_STR(CreationDate, '%m') > 24105 ORDER BY TIME_TO_STR(CreationDate, '%Y') * 12 + TIME_TO_STR(CreationDate, '%m')","CreationDate":"2014-01-25 16:20:05","validated":false,"QueryBody_Original":"SELECT  \n  datepart(year, CreationDate) * 12 + datepart(month, CreationDate),\n  AVG(Score)\nFROM \n  Posts\nGROUP BY \n  datepart(year, CreationDate) * 12 + datepart(month, CreationDate)\nHAVING\n  datepart(year, CreationDate) * 12 + datepart(month, CreationDate) > 24105\nORDER BY \n  datepart(year, CreationDate) * 12 + datepart(month, CreationDate)"},{"QuerySetId":163235,"Title":"Find posts using the KBD element inappropriately.","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Body FROM Posts WHERE Body LIKE '%<kbd>%<\/kbd>%' ORDER BY Posts.ID","CreationDate":"2014-03-10 01:04:11","validated":false,"QueryBody_Original":"SELECT \n    Posts.Id as [Post Link], Body\nFROM Posts\nWHERE\n  Body LIKE '%<kbd>%<\/kbd>%'\nORDER BY Posts.ID ASC\n  \n  -- StartID: Start ID"},{"QuerySetId":163466,"Title":"Users' Participation (answers) over time","Description":null,"QueryBody":"SELECT DATEDIFF(Posts.CreationDate, Users.CreationDate) AS wk, COUNT(DISTINCT Posts.id) AS posts, COUNT(DISTINCT Posts.OwnerUserId) AS usuarios FROM Posts, Users WHERE Posts.OwnerUserId = Users.Id AND PostTypeId = 2 AND Posts.CreationDate > Users.CreationDate GROUP BY DATEDIFF(Posts.CreationDate, Users.CreationDate) ORDER BY wk","CreationDate":"2014-01-28 02:50:35","validated":false,"QueryBody_Original":"SELECT  Datediff(week, Users.CreationDate, Posts.CreationDate) as wk, count(DISTINCT Posts.id) as posts, count(DISTINCT Posts.OwnerUserId) as usuarios\nfrom Posts, Users\nWhere Posts.OwnerUserId=Users.Id and PostTypeId=2 and Posts.CreationDate>Users.CreationDate\n\nGroup by Datediff(week,Users.CreationDate,Posts.CreationDate )\nOrder by wk"},{"QuerySetId":163566,"Title":"Users from the Dominican Republic","Description":null,"QueryBody":"SELECT * FROM USERS WHERE location = 'Dominican Republic' ORDER BY reputation DESC","CreationDate":"2014-01-28 16:23:40","validated":false,"QueryBody_Original":"SELECT  * FROM USERS WHERE location = 'Dominican Republic' ORDER BY reputation DESC;"},{"QuerySetId":163740,"Title":"Close votes cast per day","Description":null,"QueryBody":"SELECT * FROM posts WHERE NOT ClosedDate IS NULL ORDER BY ClosedDate DESC","CreationDate":"2014-05-17 20:37:32","validated":false,"QueryBody_Original":"SELECT  *\nfrom posts where ClosedDate is not null\norder by ClosedDate desc"},{"QuerySetId":163906,"Title":"Top 100 Highest reputation holder from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", DisplayName, Reputation FROM Users WHERE LOWER(Location) LIKE '%sri lanka%' OR UPPER(Location) LIKE '%LK' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2017-07-18 13:35:06","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    DisplayName, \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%sri lanka%'\n    OR UPPER(Location) LIKE '%LK'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":164033,"Title":"SELECT COUNT(8) FROM Users WHERE LastAccessDate > '2014-01-28';","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE LastAccessDate > '2014-01-28'","CreationDate":"2014-01-31 03:31:56","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Users WHERE LastAccessDate > '2014-01-28';"},{"QuerySetId":164147,"Title":"Incidence of answer size by hundreds of characters","Description":null,"QueryBody":"SELECT LENGTH(body) \/ 100, COUNT(*) FROM posts WHERE posttypeid = 2 GROUP BY LENGTH(body) \/ 100 ORDER BY LENGTH(body) \/ 100","CreationDate":"2014-01-31 21:12:14","validated":false,"QueryBody_Original":"SELECT  len(body)\/100, count(*) from posts where posttypeid = 2\ngroup by len(body)\/100\norder by len(body)\/100 asc"},{"QuerySetId":164148,"Title":"Histogram of order of magnitude of answer character count","Description":null,"QueryBody":"SELECT FLOOR(LOG(LENGTH(body), 10)), COUNT(*) FROM posts WHERE posttypeid = 2 GROUP BY FLOOR(LOG(LENGTH(body), 10)) ORDER BY FLOOR(LOG(LENGTH(body), 10))","CreationDate":"2014-01-31 21:28:19","validated":false,"QueryBody_Original":"SELECT  floor(log(len(body), 10)), count(*) from posts where posttypeid = 2\ngroup by floor(log(len(body), 10))\norder by floor(log(len(body), 10)) asc"},{"QuerySetId":164178,"Title":"Highest view rate questions in a particular tag (non-Community Wiki)","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Id AS \"Post ID\", Score AS \"Votes\", ViewCount AS \"Views\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS Age, p.ViewCount \/ (DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) + 1) AS \"View rate\" FROM Posts AS p\/* Field CommunityOwnedDate is absent for non-CW posts. *\/ \/* On Stack Overflow there are 100 non-CW post with more than about 28000. *\/  WHERE p.ViewCount > 280 AND p.CommunityOwnedDate IS NULL AND p.ViewCount \/ (DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) + 1) > 5 AND p.Tags LIKE '%<.net-core>%' \/* '%<java>%' also matches \"'javascript'\" (after \"p.Tags\" ): 'LIKE %java%'. Does not work for exact match: \"COLLATE SQL_Latin1_General_CP1_CS_AS\" *\/ ORDER BY \"View Rate\" DESC LIMIT 100","CreationDate":"2020-03-07 20:35:28","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    p.Id as [Post Link],\n    p.Id as [Post ID],\n    Score as [Votes],\n    ViewCount as [Views],\n    DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP) as Age,\n    p.ViewCount \/ (DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP) + 1) as [View rate]\nFROM Posts p\nWHERE p.ViewCount > 280 AND  -- On Stack Overflow there are 100 non-CW post with more than about 28000.\n      p.CommunityOwnedDate is null AND  -- Field CommunityOwnedDate is absent for non-CW posts.\n      p.ViewCount \/ (DATEDIFF(day, p.CreationDate, CURRENT_TIMESTAMP) + 1) > 5 AND\n      p.Tags LIKE '%<.net-core>%'  -- '%<java>%' also matches \"'javascript'\" (after \"p.Tags\" ): 'LIKE %java%'. Does not work for exact match: \"COLLATE SQL_Latin1_General_CP1_CS_AS\"\n      -- ViewCount \/ age >\nORDER BY [View Rate] DESC"},{"QuerySetId":164524,"Title":"Is my answer answered first?","Description":null,"QueryBody":"SELECT score, posttypeid FROM posts WHERE id = 20403490","CreationDate":"2014-02-02 14:29:49","validated":false,"QueryBody_Original":"SELECT  score, posttypeid from posts where id = 20403490"},{"QuerySetId":164538,"Title":"Searching questions with a tag in their title","Description":"A query that finds questions that have a specific tag in their title.\r\n\r\nPlease enter a lowercase tag.","QueryBody":"SELECT * FROM Posts WHERE LOWER(Title) LIKE '%##Tag##%'","CreationDate":"2014-02-02 19:58:56","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Lower(Title) LIKE '%##Tag##%'"},{"QuerySetId":164724,"Title":"Questions per day between two dates","Description":null,"QueryBody":"SELECT DAY(CreationDate), COUNT(Id) FROM Posts WHERE PostTypeId = 3 AND Posts.CreationDate >= '##Date1##' AND Posts.CreationDate <= '##Date2##' GROUP BY DAY(CreationDate) ORDER BY DAY(CreationDate)","CreationDate":"2014-02-10 10:28:08","validated":false,"QueryBody_Original":"SELECT \n  Day(CreationDate), COUNT(Id)\nFROM\n  Posts\nWHERE\n  PostTypeId = 3 \n  AND Posts.CreationDate >= '##Date1##'\n  AND Posts.CreationDate <= '##Date2##'  \n  GROUP BY Day(CreationDate)\n  ORDER BY Day(CreationDate)"},{"QuerySetId":164744,"Title":"closes votes per question batchsize","Description":"Inspired on this question http:\/\/meta.stackoverflow.com\/questions\/208311\/regarding-the-stack-overflow-close-review-queue","QueryBody":"SELECT cnt, COUNT(*) AS num_of_Q FROM (SELECT v.postid, COUNT(*) AS cnt FROM votes AS v INNER JOIN posts AS p ON p.id = v.postid WHERE votetypeid = 6 AND p.posttypeid = 1 AND p.closeddate IS NULL GROUP BY v.postid) AS rawcnt GROUP BY cnt ORDER BY cnt DESC","CreationDate":"2014-05-18 17:39:51","validated":false,"QueryBody_Original":"SELECT  cnt\n     , count(*) as num_of_Q\nfrom\n(\n    -- count number of close votes per question\n    SELECT v.postid \n    , count(*) as cnt\n    from votes v\n    inner join posts p on p.id = v.postid\n    where votetypeid = 6\n    and p.posttypeid =1\n    and p.closeddate is null\n     group by v.postid\n) as rawcnt\ngroup by cnt\norder by cnt desc"},{"QuerySetId":164842,"Title":"How Many Tags Are There","Description":null,"QueryBody":"SELECT COUNT(*) FROM Tags","CreationDate":"2014-02-04 04:57:38","validated":false,"QueryBody_Original":"SELECT  count(*) from Tags"},{"QuerySetId":165097,"Title":"Gold tag Badge per location","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, b.Name, MAX(b.Date) FROM Users AS u INNER JOIN Badges AS b ON u.Id = b.UserId WHERE b.Name = '##Tag##' AND LOWER(u.Location) LIKE '%##Location##%' GROUP BY u.Id, u.DisplayName, b.Name HAVING COUNT(*) = 3","CreationDate":"2014-02-05 00:16:40","validated":false,"QueryBody_Original":"SELECT  u.Id, u.DisplayName, b.Name, max(b.Date)\nFROM Users u\nINNER JOIN Badges b\nON u.Id = b.UserId\nWHERE b.Name = '##Tag##'\nand LOWER(u.Location) LIKE '%##Location##%'\ngroup by u.Id, u.DisplayName, b.Name\nHAVING count(*) = 3"},{"QuerySetId":165259,"Title":"Top 100 users in South Africa","Description":null,"QueryBody":"SELECT DisplayName AS \"Display Name\", Reputation, WebsiteUrl AS Website, Location, Age, Posts.Tags FROM Users LEFT OUTER JOIN Posts ON Users.Id = Posts.OwnerUserId WHERE Location LIKE N'%South Africa%' AND NOT Age IS NULL AND Reputation > 500 AND Posts.Tags LIKE '%c#%' ORDER BY age, reputation DESC LIMIT 100","CreationDate":"2014-02-05 16:32:38","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   DisplayName as [Display Name],\n   Reputation,\n   WebsiteUrl as Website,\n   Location,\n   Age,\n   Posts.Tags\nFROM\n   Users\n   LEFT OUTER JOIN Posts on Users.Id = Posts.OwnerUserId\nWHERE\n   Location like N'%South Africa%'\n   AND Age IS NOT NULL\n   AND Reputation > 500\n   AND Posts.Tags like '%c#%'\nORDER BY\n   age ASC,\n   reputation DESC"},{"QuerySetId":165294,"Title":"duplicates confirmed by OP in comments","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\" FROM posts AS p INNER JOIN comments AS cdup ON cdup.postid = p.id INNER JOIN comments AS cown ON cown.postid = p.id AND cown.userid = p.owneruserid WHERE p.posttypeid = 1 AND cdup.text LIKE '%possible duplicate%' AND cown.text LIKE '%thanks%' AND p.closeddate IS NULL","CreationDate":"2014-02-05 18:32:30","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link]\nfrom posts p\ninner join comments cdup on cdup.postid= p.id\ninner join comments cown on cown.postid = p.id and cown.userid = p.owneruserid\nwhere p.posttypeid =1\nand cdup.text like '%possible duplicate%'\nand cown.text like '%thanks%'\nand p.closeddate is null"},{"QuerySetId":165379,"Title":"25 Most Downvoted Users with per-post DV ratios","Description":"Users with the most downvotes cast on their questions and answers","QueryBody":"SELECT b.OwnerUserId AS \"User Link\", SUM(CASE WHEN a.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, MIN(b.CreationDate) AS OldestPost, COUNT(DISTINCT b.Id) AS NumberOfPosts, SUM(CASE WHEN a.VoteTypeId = 3 THEN 1 ELSE 0 END) * 1000 \/ COUNT(DISTINCT b.Id) AS DV2PostsRatio FROM Votes AS a INNER JOIN Posts AS b ON \/* Only up and down votes *\/ a.PostId = b.Id AND b.PostTypeId IN (1, 2) WHERE a.VoteTypeId IN (2, 3) GROUP BY b.OwnerUserId ORDER BY SUM(CASE WHEN a.VoteTypeId = 3 THEN 1 ELSE 0 END) DESC LIMIT 25","CreationDate":"2014-02-06 09:58:57","validated":false,"QueryBody_Original":"SELECT  TOP 25\n  b.OwnerUserId AS [User Link],\n  SUM(CASE WHEN a.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n  MIN(b.CreationDate) AS OldestPost,\n  COUNT(DISTINCT b.Id) AS NumberOfPosts,\n  SUM(CASE WHEN a.VoteTypeId = 3 THEN 1 ELSE 0 END)*1000 \/ COUNT(DISTINCT b.Id) as DV2PostsRatio\nFROM Votes a\n  INNER JOIN Posts b\n    ON \n      a.PostId = b.Id\n      AND b.PostTypeId IN (1,2) -- Only questions and answers\nWHERE \n  a.VoteTypeId IN (2,3) -- Only up and down votes\nGROUP BY b.OwnerUserId\nORDER BY SUM(CASE WHEN a.VoteTypeId = 3 THEN 1 ELSE 0 END) DESC"},{"QuerySetId":165589,"Title":"Get tags consisting of 1 character","Description":null,"QueryBody":"SELECT * FROM Tags WHERE LENGTH(TagName) = 1","CreationDate":"2014-02-06 21:28:30","validated":false,"QueryBody_Original":"SELECT  * from Tags where len(TagName) = 1"},{"QuerySetId":165610,"Title":"Loads and Loads of Edits","Description":"Some posts just keep getting edited...","QueryBody":"SELECT PostId AS \"Post Link\", COUNT(DISTINCT RevisionGUID) AS \"Revisions\" FROM PostHistory WHERE PostHistoryTypeId <= 9 GROUP BY PostId ORDER BY COUNT(DISTINCT RevisionGUID) DESC LIMIT 1000","CreationDate":"2014-02-07 06:30:33","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  PostId AS [Post Link],\n  COUNT(DISTINCT RevisionGUID) AS [Revisions]\nFROM PostHistory\nWHERE PostHistoryTypeId <= 9\nGROUP BY PostId\nORDER BY COUNT(DISTINCT RevisionGUID) DESC"},{"QuerySetId":165703,"Title":"number of answers and comments","Description":"This is a hack to answer this question: http:\/\/codegolf.stackexchange.com\/questions\/20277\/number-of-answers-and-comments","QueryBody":"SELECT 'A' + CAST(AnswerCount AS TEXT(3)) + 'C' + CAST(CommentCount AS TEXT(3)) FROM Posts WHERE id = 2913","CreationDate":"2014-02-07 21:50:40","validated":false,"QueryBody_Original":"SELECT  'A' + cast(AnswerCount as char(3)) + 'C' + cast(CommentCount as char(3)) from Posts where id = 2913"},{"QuerySetId":166031,"Title":"Top users in tag \/ location","Description":null,"QueryBody":"SELECT u.Reputation, u.DisplayName FROM Users AS u WHERE LOWER(u.Location) LIKE '%##Location##%' ORDER BY u.Reputation DESC","CreationDate":"2014-05-03 14:00:27","validated":false,"QueryBody_Original":"SELECT  u.Reputation, u.DisplayName\nFROM Users u\nWHERE \nLOWER(u.Location) LIKE '%##Location##%'\nORDER BY u.Reputation DESC\n\n\n--SELECT --TOP 20 \n--    TagName,\n--    COUNT(*) AS UpVotes \n--FROM Tags\n--    INNER JOIN PostTags ON PostTags.TagId = Tags.id\n--    INNER JOIN Posts ON Posts.ParentId = PostTags.PostId\n--    INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = 2\n--WHERE \n--    Posts.OwnerUserId = @UserId\n--GROUP BY TagName \n--ORDER BY UpVotes DESC"},{"QuerySetId":166282,"Title":"How many votes do my comments have?","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Post Link\", Score FROM Comments WHERE UserId = 12952 GROUP BY Score ORDER BY Score DESC","CreationDate":"2014-02-10 03:39:18","validated":false,"QueryBody_Original":"SELECT  \n    COUNT(*) AS [Post Link], \n    Score\nFROM Comments\nWHERE UserId = 12952\nGROUP BY Score\nORDER BY Score DESC"},{"QuerySetId":166410,"Title":"Number of questions closed by close vote count.","Description":"Sceptics questions closed, by number of close votes. Useful to identify moderator-closed questions.","QueryBody":"SELECT \"Close Votes\", COUNT(*) FROM (SELECT COUNT(*) AS \"Close Votes\" FROM Posts INNER JOIN Votes ON Posts.Id = Votes.PostId WHERE Votes.VoteTypeId = 6 AND NOT Posts.ClosedDate IS NULL GROUP BY Posts.Id) AS X GROUP BY \"Close Votes\"","CreationDate":"2014-02-10 18:26:54","validated":false,"QueryBody_Original":"SELECT  [Close Votes], count(*) from \n(\n  SELECT \n    count(*) as [Close Votes]\n  from Posts inner join Votes on Posts.Id = Votes.PostId\n  where \n    Votes.VoteTypeId=6 and Posts.ClosedDate is not NULL\n  group by Posts.Id\n) as X\ngroup by [Close Votes]"},{"QuerySetId":166411,"Title":"Number of questions closed by close vote count","Description":"Sceptics questions closed, by number of close votes. Useful to identify moderator-closed questions.","QueryBody":"SELECT \"Close Votes\", COUNT(*) FROM (SELECT COUNT(*) AS \"Close Votes\" FROM Posts INNER JOIN Votes ON Posts.Id = Votes.PostId WHERE Votes.VoteTypeId = 6 AND NOT Posts.ClosedDate IS NULL GROUP BY Posts.Id) AS X GROUP BY \"Close Votes\"","CreationDate":"2014-02-10 18:28:00","validated":false,"QueryBody_Original":"SELECT  [Close Votes], count(*) from \n(\n  SELECT \n    count(*) as [Close Votes]\n  from Posts inner join Votes on Posts.Id = Votes.PostId\n  where \n    Votes.VoteTypeId=6 and Posts.ClosedDate is not NULL\n  group by Posts.Id\n) as X\ngroup by [Close Votes]"},{"QuerySetId":166589,"Title":"Percentage of accepted answers over time by month","Description":null,"QueryBody":"SELECT 47 - DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS Age, CAST(SUM(CASE WHEN p.AcceptedAnswerId IS NULL THEN 0 ELSE 1 END) AS FLOAT(10, 2)) \/ COUNT(p.Id) AS PercentAccepted FROM Posts AS p WHERE p.PostTypeId = 1 GROUP BY DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) ORDER BY DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) DESC","CreationDate":"2014-02-17 08:01:02","validated":false,"QueryBody_Original":"SELECT  47 - Datediff(month, p.CreationDate, Current_Timestamp) as Age,\n       convert(DECIMAL(10,2), sum(case when p.AcceptedAnswerId is null then 0\n                                       else 1\n                                  end)\n               ) \/ count(p.Id) as PercentAccepted\nFrom Posts p\nWhere p.PostTypeId = 1\nGroup by Datediff(month, p.CreationDate, Current_Timestamp)\nOrder by Datediff(month, p.CreationDate, Current_Timestamp) desc"},{"QuerySetId":166740,"Title":"Questions to use for attempting to attain the Reversal Badge","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, AcceptedAnswerId FROM Posts WHERE PostTypeId = 1 AND Score <= -5","CreationDate":"2014-02-12 00:04:22","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  Score,\n  ViewCount,\n  AcceptedAnswerId\nFROM\n  Posts\nWHERE\n  PostTypeId = 1\n  And \n  Score <= -5"},{"QuerySetId":166783,"Title":"Last answers with figures hoster on imgur.com","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%<img src%' AND ParentID > 0 ORDER BY LastEditDate DESC","CreationDate":"2014-02-12 06:01:11","validated":false,"QueryBody_Original":"SELECT  Score,\n       Id AS [Post Link]\nFROM   Posts\nWHERE  Body LIKE '%<img src%'\n       AND ParentID > 0\nORDER  BY LastEditDate DESC"},{"QuerySetId":166933,"Title":"Biggest editors (questions and answers)","Description":null,"QueryBody":"SELECT UserId, COUNT(*) FROM PostHistory WHERE PostHistoryTypeId = 5 GROUP BY UserId ORDER BY COUNT(*) DESC","CreationDate":"2014-02-12 19:51:46","validated":false,"QueryBody_Original":"SELECT  UserId, COUNT(*)\nFROM PostHistory\nWHERE PostHistoryTypeId = 5 \nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":167359,"Title":" Minimum, Maximum and Average Length of Display Names with spaces removed","Description":null,"QueryBody":"SELECT MAX(LENGTH(REPLACE(displayName, ' ', ''))) AS maxDisplayNameLength, MIN(LENGTH(REPLACE(displayName, ' ', ''))) AS minDisplayNameLength, AVG(LENGTH(REPLACE(displayName, ' ', ''))) AS avgDisplayNameLength FROM Users","CreationDate":"2014-02-14 04:17:31","validated":false,"QueryBody_Original":"SELECT    max(len(replace(displayName,' ',''))) as maxDisplayNameLength,\n         min(len(replace(displayName,' ',''))) as minDisplayNameLength,\n         avg(len(replace(displayName,' ',''))) as avgDisplayNameLength\n  FROM   Users;"},{"QuerySetId":167360,"Title":"Number of occurrences of display names lengths","Description":null,"QueryBody":"SELECT U.range AS \"display name length\", COUNT(*) AS \"number of occurences\", ROUND((U.range \/ 600.0) * 100, 1) AS \"character limit percentage used\" FROM (SELECT LENGTH(REPLACE(displayname, ' ', '')) AS range FROM Users WHERE displayname <> '' AND NOT displayname IS NULL) AS U GROUP BY U.range ORDER BY U.range","CreationDate":"2014-02-14 20:24:14","validated":false,"QueryBody_Original":"SELECT     U.range as [display name length],\n          count(*) as [number of occurences],\n          Round((U.range\/600.0)*100,1) as [character limit percentage used]\nFROM\n(\nSELECT len(replace(displayname,' ','')) as range\n  FROM   Users\n  WHERE displayname != '' and displayname is not null\n) U\nGROUP BY U.range\nORDER BY U.range"},{"QuerySetId":167375,"Title":"Get top 13 year olds","Description":null,"QueryBody":"SELECT Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate, 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT) AS Url FROM Users WHERE Age = 13 ORDER BY Reputation DESC LIMIT 150","CreationDate":"2014-02-14 06:30:02","validated":false,"QueryBody_Original":"SELECT  TOP(150) Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate,\n'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS VARCHAR) AS Url\nFROM Users\nWHERE Age=13\nORDER BY Reputation DESC;"},{"QuerySetId":167413,"Title":"What is my rank for this badge?","Description":null,"QueryBody":"SELECT UserId, Name, Date, Class FROM Badges WHERE Date < (SELECT Date FROM Badges WHERE UserId = 5889131 AND Name = 'Explainer' AND Class = 3) AND Name = 'Explainer' AND Class = 3","CreationDate":"2019-09-11 02:21:44","validated":false,"QueryBody_Original":"SELECT  UserId, Name, Date, Class\nFROM Badges\nWHERE Date < (\n    SELECT Date\n    FROM Badges\n    WHERE UserId = 5889131\n      AND Name = 'Explainer'\n      AND Class = 3\n  )\n  AND Name = 'Explainer'\n  AND Class = 3"},{"QuerySetId":167666,"Title":"Post count since start of 2014 that used ascii highlight","Description":"defined as using ascii pointers above or below","QueryBody":"SELECT COUNT(*) AS post_count, SUM(CASE WHEN body LIKE '%^--%' OR body LIKE '%--^%' OR body LIKE '%v--%' OR body LIKE '%--v%' THEN 1 END) AS used_ascii_highlight FROM posts WHERE creationdate > '2014-01-01'","CreationDate":"2014-02-15 18:54:29","validated":false,"QueryBody_Original":"SELECT  \n  count(*) post_count,\n  sum(case when body like '%^--%'\n             or body like '%--^%'\n             or body like '%v--%'\n             or body like '%--v%'\n             then 1 end) used_ascii_highlight\nfrom posts\nwhere creationdate > '2014-01-01'"},{"QuerySetId":167714,"Title":"Find tags with no excerpt","Description":null,"QueryBody":"SELECT t.Id, t.TagName, t.Count FROM Posts AS p, Tags AS t WHERE p.PostTypeId = 4 AND LENGTH(p.Body) = 0 AND p.Id = t.ExcerptPostId ORDER BY t.Count DESC","CreationDate":"2014-02-15 14:09:02","validated":false,"QueryBody_Original":"SELECT  t.Id, t.TagName, t.Count\nfrom Posts p, Tags t\nWHERE p.PostTypeId = 4\nand len(p.Body) = 0\nand p.Id = t.ExcerptPostId\norder by t.Count DESC"},{"QuerySetId":167729,"Title":"Stackoverflow Top 100 users from Kerala","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%banglore%' OR UPPER(Location) LIKE '%BANGLORE' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2014-02-15 15:04:13","validated":false,"QueryBody_Original":"SELECT \nTOP (100) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%banglore%'\n    OR UPPER(Location) LIKE '%BANGLORE'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":168013,"Title":"post count for deleted users","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE NOT ownerdisplayname IS NULL AND posttypeid = 1","CreationDate":"2014-02-16 20:03:59","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom posts\nwhere ownerdisplayname is not null\nand posttypeid =1"},{"QuerySetId":168028,"Title":"all posts (Q and A) for user 2515498","Description":null,"QueryBody":"SELECT title, body FROM posts WHERE owneruserid = 2515498","CreationDate":"2014-02-16 20:51:58","validated":false,"QueryBody_Original":"SELECT  title,body\nfrom posts \nwhere owneruserid = 2515498"},{"QuerySetId":168185,"Title":"Percentage of accepted answers by month (adjusted)","Description":null,"QueryBody":"SELECT 43 - DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS Age, CAST(SUM(CASE WHEN p.AcceptedAnswerId IS NULL THEN 0 ELSE 1 END) AS FLOAT(10, 2)) \/ COUNT(p.Id) AS PercentAccepted FROM Posts AS p WHERE p.PostTypeId = 1 AND p.Score > 0 AND DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) < 45 GROUP BY DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) ORDER BY DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) DESC","CreationDate":"2014-02-17 08:01:55","validated":false,"QueryBody_Original":"SELECT  43 - Datediff(month, p.CreationDate, Current_Timestamp) as Age,\n       convert(DECIMAL(10,2), sum(case when p.AcceptedAnswerId is null then 0\n                                       else 1\n                                  end)\n               ) \/ count(p.Id) as PercentAccepted\nFrom Posts p\nWhere p.PostTypeId = 1\nand p.Score > 0\nand Datediff(month, p.CreationDate, Current_Timestamp) < 45\nGroup by Datediff(month, p.CreationDate, Current_Timestamp)\nOrder by Datediff(month, p.CreationDate, Current_Timestamp) desc"},{"QuerySetId":168279,"Title":"Trend of number of questions","Description":null,"QueryBody":"SELECT *, COUNT(*) AS questions FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\" FROM Posts AS p WHERE posttypeid = 1) AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2014-02-17 16:10:11","validated":false,"QueryBody_Original":"SELECT  *, count(*) as questions from\n(\n  SELECT CAST(\n      cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) + '-01'\n      as datetime) [Month]\n        \n    \n  from Posts p \n  where posttypeid = 1\n\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":168704,"Title":"Top 200 users from World","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users ORDER BY Reputation DESC LIMIT 200","CreationDate":"2014-02-18 15:11:30","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nORDER BY\n    Reputation DESC;"},{"QuerySetId":168813,"Title":"Users in Valencia sorted by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%valencia%' OR UPPER(Location) LIKE '%VLC' ORDER BY Reputation DESC","CreationDate":"2019-08-18 13:56:31","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%valencia%'\n    OR UPPER(Location) LIKE '%VLC'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":168959,"Title":"Up vs Down votes by Question or Answer","Description":null,"QueryBody":"SELECT CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END AS \"Post Type\", COUNT(*) AS Amount, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, CASE WHEN SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) = 0 THEN NULL ELSE (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) END AS UpVoteDownVoteRatio FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id WHERE PostTypeId IN (1, 2) AND VoteTypeId IN (2, 3) AND p.CreationDate > CURRENT_TIMESTAMP() - 365 GROUP BY PostTypeId","CreationDate":"2014-02-19 01:58:58","validated":false,"QueryBody_Original":"SELECT \n    CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END As [Post Type],\n    Count(*) AS Amount,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    CASE WHEN SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) = 0 THEN NULL\n     ELSE (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float))\n    END AS UpVoteDownVoteRatio\nFROM\n    Votes v JOIN Posts p ON v.PostId=p.Id\nWHERE\n    PostTypeId In (1,2)\n AND\n    VoteTypeId In (2,3)\n AND\n    p.CreationDate > getDate()-365\nGROUP BY\n    PostTypeId"},{"QuerySetId":168960,"Title":"current number of questions and answers","Description":null,"QueryBody":"SELECT SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers FROM Posts","CreationDate":"2014-02-18 23:43:43","validated":false,"QueryBody_Original":"SELECT  \n    sum(case when PostTypeId = 1 then 1 else 0 end) as Questions,\n    sum(case when PostTypeId = 2 then 1 else 0 end) as Answers\nfrom\n    Posts"},{"QuerySetId":169326,"Title":"\"What have you tried\" Comments","Description":null,"QueryBody":"SELECT C.PostId AS \"Post Link\", C.Id AS \"Comment Link\", C.CreationDate, C.UserId AS \"User Link\" FROM Comments AS C WHERE REPLACE(UPPER(C.text), ' ', '') = 'WHATHAVEYOUTRIED?' ORDER BY C.CreationDate DESC","CreationDate":"2014-03-02 05:37:57","validated":false,"QueryBody_Original":"SELECT   C.PostId as [Post Link],\n        C.Id as [Comment Link],\n        C.CreationDate,\n        C.UserId AS [User Link]\n        \nFROM    Comments AS C\n\nWHERE REPLACE(UPPER(C.text),' ','') = 'WHATHAVEYOUTRIED?'\n\nORDER BY C.CreationDate DESC;"},{"QuerySetId":169336,"Title":"Number of Instances of \"What have you tried\" Comments per user","Description":null,"QueryBody":"SELECT C.UserId AS \"User Link\", COUNT(C.UserId) AS \"Number of Instances\", MAX(C.CreationDate) AS \"Most recent submission\" FROM Comments AS C WHERE UPPER(REPLACE(text, ' ', '')) LIKE 'vote' GROUP BY C.UserId ORDER BY COUNT(C.UserId) DESC","CreationDate":"2020-05-12 00:04:22","validated":false,"QueryBody_Original":"SELECT  C.UserId AS [User Link],\n       count(C.UserId) as 'Number of Instances',\n       MAX(C.CreationDate) as 'Most recent submission'\n\nFROM Comments AS C\n\nWHERE UPPER(REPLACE(text,' ','')) LIKE 'vote'\n\nGROUP BY C.UserId\nORDER BY count(C.UserId) DESC;"},{"QuerySetId":169338,"Title":"Find duplicates of deleted posts.","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.AnswerCount FROM Posts AS p INNER JOIN PostLinks AS l ON p.Id = l.PostId WHERE l.LinkTypeId = 3 AND (SELECT Posts.Id FROM Posts WHERE Posts.Id = l.RelatedPostId) IS NULL GROUP BY p.Id, p.Score, p.AnswerCount ORDER BY p.Score","CreationDate":"2014-10-22 04:01:06","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], p.Score, p.AnswerCount from Posts p\ninner join PostLinks l on p.Id = l.PostId\nwhere\n  l.LinkTypeId = 3 AND\n  (SELECT\n     Posts.Id\n   from\n     Posts\n   where\n     Posts.Id = l.RelatedPostId\n     ) IS NULL     \ngroup by p.Id, p.Score, p.AnswerCount\norder by p.Score asc"},{"QuerySetId":169356,"Title":"Top Users in Weston, FL","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE UPPER(Location) LIKE '%LOS ANGELES%' AND UPPER(Location) LIKE '%CA' ORDER BY Reputation DESC","CreationDate":"2016-07-28 22:25:28","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    UPPER(Location) LIKE '%LOS ANGELES%' AND\n    UPPER(Location) LIKE '%CA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":169431,"Title":"\"What did you try?\" Comments","Description":null,"QueryBody":"SELECT C.PostId AS \"Post Link\", C.text, C.CreationDate, C.UserId, U.DisplayName FROM Comments AS C JOIN Users AS U ON C.UserId = U.Id WHERE REPLACE(UPPER(C.text), ' ', '') = 'WHATDIDYOUTRY?' ORDER BY C.CreationDate","CreationDate":"2014-02-20 04:40:06","validated":false,"QueryBody_Original":"SELECT   C.PostId as [Post Link],\n        C.text,\n        C.CreationDate,\n        C.UserId,\n        U.DisplayName\n        \nFROM    Comments AS C\nJOIN    Users AS U ON C.UserId = U.Id\n\nWHERE REPLACE(UPPER(C.text),' ','') = 'WHATDIDYOUTRY?'\n\nORDER BY C.CreationDate ASC;"},{"QuerySetId":169432,"Title":"\"What have you tried so far?\" Comments","Description":null,"QueryBody":"SELECT C.PostId AS \"Post Link\", C.Id AS \"Comment Link\", C.CreationDate, C.UserId AS \"User Link\" FROM Comments AS C WHERE REPLACE(UPPER(C.text), ' ', '') = 'WHATHAVEYOUTRIEDSOFAR?' ORDER BY C.CreationDate DESC","CreationDate":"2014-02-22 02:12:57","validated":false,"QueryBody_Original":"SELECT   C.PostId AS [Post Link],\n        C.Id AS [Comment Link],\n        C.CreationDate,\n        C.UserId AS [User Link]\n        \nFROM    Comments AS C\n\nWHERE REPLACE(UPPER(C.text),' ','') = 'WHATHAVEYOUTRIEDSOFAR?'\n\nORDER BY C.CreationDate DESC;"},{"QuerySetId":169956,"Title":"Tags without Tag Wikis (Unix & Linux)","Description":null,"QueryBody":"SELECT tagName, count, 'http:\/\/math.stackexchange.com\/questions\/tagged\/' + tagname AS link_to_questions, 'http:\/\/math.stackexchange.com\/edit-tag-wiki\/' + CAST(id AS TEXT) AS link_to_tagwiki FROM tags WHERE excerptPostId IS NULL OR wikiPostId IS NULL ORDER BY count DESC","CreationDate":"2018-05-04 16:47:12","validated":false,"QueryBody_Original":"SELECT  \n  tagName, \n  count, \n  'http:\/\/math.stackexchange.com\/questions\/tagged\/' + tagname as link_to_questions, \n  'http:\/\/math.stackexchange.com\/edit-tag-wiki\/' + cast(id as varchar) as link_to_tagwiki\nfrom tags \nwhere excerptPostId is null or  wikiPostId is null\norder by count desc"},{"QuerySetId":170549,"Title":"Because it's NOT AN ACRONYM","Description":null,"QueryBody":"SELECT * FROM posts WHERE CONCAT(title, body) COLLATE SQL_Latin1_General_CP1_CS_AS LIKE '%SCRUM%' AND closeddate IS NULL","CreationDate":"2014-02-24 17:40:48","validated":false,"QueryBody_Original":"SELECT  * \n  from posts \n where concat(title,body) collate SQL_Latin1_General_CP1_CS_AS like '%SCRUM%' \n   and closeddate is null"},{"QuerySetId":170674,"Title":"Electorate Badge Progress - Working","Description":null,"QueryBody":"SELECT * FROM Votes WHERE UserID = 1785339","CreationDate":"2014-02-27 19:36:53","validated":false,"QueryBody_Original":"SELECT  * FROM Votes WHERE UserID = 1785339"},{"QuerySetId":170684,"Title":"Users created by given date","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE CreationDate <= '##Date##'","CreationDate":"2014-02-25 08:11:21","validated":false,"QueryBody_Original":"SELECT  count(Id) from Users where CreationDate <= '##Date##'"},{"QuerySetId":170724,"Title":"swt tagged questions without answers and comments","Description":null,"QueryBody":"SELECT Id, Body FROM posts WHERE CommentCount = 0 AND AnswerCount = 0 AND Tags LIKE '%eclipse%'","CreationDate":"2014-02-25 14:51:50","validated":false,"QueryBody_Original":"SELECT  Id, Body\nfrom posts\nwhere CommentCount=0 and AnswerCount=0 and Tags LIKE '%eclipse%'"},{"QuerySetId":170739,"Title":"Top 100 users in Turkey","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK' OR UPPER(Location) LIKE 'LAHORE' OR LOWER(Location) LIKE 'lahorr' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2020-09-23 12:38:11","validated":false,"QueryBody_Original":"SELECT \nTOP (100) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK'\n    OR UPPER(Location) LIKE 'LAHORE'\n    OR LOWER(Location) LIKE 'lahorr'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":170821,"Title":"Select Questions (Id's) most upvoted, excluding previously closed\/deleted\/locked posts","Description":null,"QueryBody":"SELECT P1.ParentId, P1.Id, P2.Id FROM Posts AS P1, Posts AS P2 WHERE P1.PostTypeId = 2 AND P2.PostTypeId = 2 AND P1.ParentId = P2.ParentId ORDER BY P1.Score DESC, P2.Score DESC","CreationDate":"2014-02-25 19:15:48","validated":false,"QueryBody_Original":"SELECT  P1.ParentId, P1.Id, P2.Id\nFROM Posts P1, Posts P2\nWHERE P1.PostTypeId = 2 AND P2.PostTypeId = 2\n  AND P1.ParentId = P2.ParentId\nORDER BY P1.Score desc, P2.Score Desc"},{"QuerySetId":171157,"Title":"Search edit summary and group them","Description":"Looks for a word in the Edit summary, also can check by time.","QueryBody":"SELECT a.UserId AS \"User Link\", COUNT(*) AS \"Count\" FROM PostHistory AS a WHERE a.PostHistoryTypeId IN (4, 5, 6) AND UPPER(a.Comment) LIKE UPPER('%##CommentText##%') AND a.CreationDate > CAST('14 AUG 2008' AS DATE) GROUP BY a.UserId ORDER BY \"Count\" DESC","CreationDate":"2014-02-27 06:50:25","validated":false,"QueryBody_Original":"SELECT  a.UserId  AS [User Link],\n       COUNT(*) as [Count]\nFROM   PostHistory a\nWHERE  a.PostHistoryTypeId IN ( 4, 5, 6 )\n       AND Upper(a.Comment) LIKE Upper('%##CommentText##%')\n       and a.CreationDate > convert(date, '14 AUG 2008')\nGROUP BY a.UserId\nORDER BY [Count] desc"},{"QuerySetId":171701,"Title":"Unanswered SuperUser questions asked by people with more than 100 rep","Description":null,"QueryBody":"SELECT * FROM posts WHERE OwnerUserId IN (SELECT ID FROM users WHERE Reputation > 10000) AND PostTypeId = 1 ORDER BY Score DESC LIMIT 30","CreationDate":"2017-04-06 19:18:03","validated":false,"QueryBody_Original":"SELECT  TOP 30 * FROM posts where OwnerUserId IN (SELECT ID from users WHERE Reputation > 10000) AND PostTypeId = 1 ORDER By Score DESC"},{"QuerySetId":171771,"Title":"Questions answered before they were asked","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\" FROM Posts AS q JOIN Posts AS a ON a.ParentId = q.Id WHERE q.CreationDate > a.CreationDate ORDER BY a.CreationDate DESC","CreationDate":"2014-03-01 12:25:02","validated":false,"QueryBody_Original":"SELECT  a.Id as [Post Link]\nfrom Posts q\n     join Posts a on a.ParentId = q.Id\nwhere q.CreationDate > a.CreationDate\norder by a.CreationDate desc"},{"QuerySetId":172075,"Title":"(claimed) age distribution of the user base","Description":null,"QueryBody":"SELECT age, COUNT(*) FROM users GROUP BY age ORDER BY age","CreationDate":"2017-06-05 14:35:47","validated":false,"QueryBody_Original":"SELECT  age,count(*)\nFROM users\nGROUP BY age\nORDER BY age asc"},{"QuerySetId":172170,"Title":"Number of questions with at least two edited answers","Description":null,"QueryBody":"SELECT COUNT(*) FROM PostHistory AS P1, PostHistory AS P2 WHERE P1.PostHistoryTypeId = 5 AND P1.PostHistoryTypeId = 5 AND P1.PostId = P2.PostId GROUP BY P1.PostId","CreationDate":"2014-03-02 22:19:52","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM PostHistory P1, PostHistory P2\nWHERE P1.PostHistoryTypeId = 5 AND P1.PostHistoryTypeId = 5\n  AND P1.PostId = P2.PostId\nGROUP BY P1.PostId"},{"QuerySetId":172183,"Title":"More than one answer by the same user","Description":null,"QueryBody":"SELECT question.Id AS \"Post Link\", answer.owneruserid AS \"User Link\", COUNT(answer.id) AS answers FROM Posts AS question JOIN Posts AS answer ON (answer.parentid = question.id) WHERE answer.OwnerUserId <> 0 GROUP BY question.id, answer.owneruserid HAVING COUNT(answer.id) >= 2 ORDER BY answers DESC","CreationDate":"2014-03-03 12:50:33","validated":false,"QueryBody_Original":"SELECT  question.Id as [Post Link], \n   answer.owneruserid as [User Link], \n   count(answer.id) as answers\nfrom Posts question\njoin Posts answer on (answer.parentid = question.id)\nwhere answer.OwnerUserId != 0\ngroup by question.id, answer.owneruserid\nhaving count(answer.id) >= 2\norder by answers desc"},{"QuerySetId":172287,"Title":"Check Post Id and Date covariance","Description":null,"QueryBody":"SELECT low.Id AS \"Post Link\", low.Id AS LowId, low.CreationDate AS LowDate, hi.Id AS \"High Link\", hi.CreationDate AS HighDate FROM posts AS low, posts AS hi WHERE low.Id > hi.Id AND low.CreationDate < hi.CreationDate AND low.CreationDate > '1 jan 2012' AND hi.CreationDate > '1 jan 2012'","CreationDate":"2014-03-03 07:03:50","validated":false,"QueryBody_Original":"SELECT  low.Id as [Post Link],\n       low.Id as LowId,\n       low.CreationDate as LowDate,\n       hi.Id as [High Link],\n       hi.CreationDate as HighDate\nfrom posts low, posts hi\nwhere low.Id > hi.Id\n  and low.CreationDate < hi.CreationDate\n  and low.CreationDate > '1 jan 2012'\n  and hi.CreationDate > '1 jan 2012'"},{"QuerySetId":172480,"Title":"Top 1K users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2014-03-04 12:59:07","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":172494,"Title":"downvoted -> edited, non-negative score","Description":null,"QueryBody":"SELECT COUNT(DISTINCT down.PostId) FROM Votes AS down JOIN Posts ON down.PostId = Posts.ID JOIN PostHistory ON down.PostId = PostHistory.PostId AND PostHistory.CreationDate > down.CreationDate WHERE Posts.Score >= 0 AND down.VoteTypeId = 3 AND PostHistory.PostHistoryTypeId IN (4, 5, 6)","CreationDate":"2014-03-04 15:17:40","validated":false,"QueryBody_Original":"SELECT  count(distinct down.PostId) from Votes as down\njoin Posts on\n  down.PostId = Posts.ID\njoin PostHistory on\n  down.PostId = PostHistory.PostId and\n  PostHistory.CreationDate > down.CreationDate\nwhere\n  Posts.Score >= 0 and\n  down.VoteTypeId = 3 and\n  PostHistory.PostHistoryTypeId IN (4, 5, 6)"},{"QuerySetId":172524,"Title":"Downvote -> comment -> edit -> upvote","Description":null,"QueryBody":"SELECT COUNT(DISTINCT down.PostId) FROM Votes AS down JOIN Comments ON down.PostId = Comments.PostId AND Comments.CreationDate > down.CreationDate JOIN PostHistory ON down.PostId = PostHistory.PostId AND PostHistory.CreationDate > Comments.CreationDate JOIN Votes AS up ON up.PostId = down.PostId AND up.CreationDate > PostHistory.CreationDate WHERE up.VoteTypeId = 2 AND down.VoteTypeId = 3 AND PostHistory.PostHistoryTypeId IN (4, 5, 6)","CreationDate":"2014-03-04 18:24:54","validated":false,"QueryBody_Original":"SELECT  count(distinct down.PostId) from Votes as down\njoin Comments on\n  down.PostId = Comments.PostId and\n  Comments.CreationDate > down.CreationDate\n join PostHistory on\n  down.PostId = PostHistory.PostId and\n  PostHistory.CreationDate > Comments.CreationDate\n join Votes as up on\n  up.PostId = down.PostId and\n  up.CreationDate > PostHistory.CreationDate\nwhere\n  up.VoteTypeId = 2 and \n  down.VoteTypeId = 3 and\n  PostHistory.PostHistoryTypeId IN (4, 5, 6)"},{"QuerySetId":172898,"Title":"Posts with Scores above and beyond awarded Bounties","Description":null,"QueryBody":"SELECT P.Id AS \"Post Link\", V.BountyAmount, (SELECT P2.Tags FROM Posts AS P2 WHERE P2.Id = P.ParentId) AS \"Tags\", (SELECT P2.Score FROM Posts AS P2 WHERE P2.Id = P.ParentId) AS SCORES FROM Posts AS P, Votes AS V WHERE P.Id = V.PostId AND V.BountyAmount > 0 AND V.VoteTypeId = 9 AND (SELECT P2.Score FROM Posts AS P2 WHERE P2.Id = P.ParentId) > V.BountyAmount * 10 ORDER BY SCORES DESC, P.CreationDate DESC","CreationDate":"2015-11-25 21:47:01","validated":false,"QueryBody_Original":"SELECT  P.Id as [Post Link], V.BountyAmount, (SELECT P2.Tags from Posts P2 WHERE P2.Id = P.ParentId) AS [Tags], (SELECT P2.Score from Posts P2 WHERE P2.Id = P.ParentId) AS SCORES\nFROM Posts P, Votes V\nWHERE \nP.Id = V.PostId\nAND\nV.BountyAmount > 0\nAND\nV.VoteTypeId = 9\nAND (SELECT P2.Score from Posts P2 WHERE P2.Id = P.ParentId) > V.BountyAmount * 10\nORDER BY SCORES DESC, P.CreationDate DESC"},{"QuerySetId":173097,"Title":"Longest Post for Amal Murali","Description":null,"QueryBody":"SELECT id AS \"Post Link\", LENGTH(body) - (PATINDEX('%<\/code><\/pre>%', body) - PATINDEX('%<pre><code>%', body)) AS lenwithoutcode FROM posts ORDER BY 2 DESC LIMIT 20","CreationDate":"2014-03-06 19:48:59","validated":false,"QueryBody_Original":"SELECT  TOP 20 \n id as [Post Link]\n , len(body) - (patindex('%<\/code><\/pre>%', body) - patindex('%<pre><code>%', body)) as lenwithoutcode\nfrom posts \n--where owneruserid = 52800\norder by 2 desc"},{"QuerySetId":173249,"Title":"OP's that get asked what have you tried the most","Description":null,"QueryBody":"SELECT p.owneruserid, COUNT(*) FROM comments AS c INNER JOIN posts AS p ON p.id = c.postid WHERE c.text LIKE 'What have you tried%' AND p.posttypeid = 1 GROUP BY p.owneruserid ORDER BY 2 DESC","CreationDate":"2014-03-07 14:14:58","validated":false,"QueryBody_Original":"SELECT  p.owneruserid, count(*)\nfrom comments c \ninner join posts p on p.id = c.postid\nwhere c.text like 'What have you tried%'\nand p.posttypeid =1\ngroup by p.owneruserid\norder by 2 desc"},{"QuerySetId":173319,"Title":"Average views for a scored question","Description":null,"QueryBody":"SELECT AVG(CAST(p1.ViewCount AS FLOAT)) AS avgViews FROM Posts AS p1 WHERE p1.PostTypeId = 1 AND p1.Score > 0","CreationDate":"2014-03-07 21:33:47","validated":false,"QueryBody_Original":"SELECT  avg(CAST(p1.ViewCount as FLOAT)) as avgViews\nfrom Posts p1\nwhere\n      p1.PostTypeId = 1 \n      AND p1.Score > 0"},{"QuerySetId":173618,"Title":"% questions asked by new account users","Description":null,"QueryBody":"SELECT CAST((SELECT COUNT(1) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE CAST(TIME_TO_STR(p.CreationDate, '%Y%m%d') AS TEXT(30)) = CAST(TIME_TO_STR(u.CreationDate, '%Y%m%d') AS TEXT(30))) AS FLOAT) \/ CAST((SELECT COUNT(1) FROM posts) AS FLOAT) * 100.0","CreationDate":"2014-03-09 04:04:13","validated":false,"QueryBody_Original":"SELECT  CAST((SELECT count(1) from posts p join users u on p.OwnerUserId = u.Id\nwhere \nconvert(varchar, p.CreationDate, 112) = convert(varchar, u.CreationDate, 112))\nAS FLOAT)\n\/ CAST( (SELECT COUNT(1) FROM posts) AS FLOAT) * 100.0"},{"QuerySetId":173655,"Title":"Favorite questions asked since 1 Jan 2013","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, FavoriteCount FROM Posts WHERE PostTypeId = 1 AND TIME_TO_STR(CreationDate, '%Y') >= 2013 AND FavoriteCount >= 25 ORDER BY CreationDate DESC","CreationDate":"2015-04-17 17:46:17","validated":false,"QueryBody_Original":"SELECT \n    Id as [Post Link],\n    CreationDate, \n    FavoriteCount\nFROM Posts\nWHERE PostTypeId=1 and DatePart(year,CreationDate) >= 2013 and FavoriteCount >= 25\nORDER BY CreationDate DESC"},{"QuerySetId":173854,"Title":"Users Question and Answer Count Distinct Count","Description":null,"QueryBody":"SELECT u.Id, COUNT(DISTINCT q.id) AS QuestionCount, COUNT(DISTINCT a.id) AS AnswerCount FROM users AS u LEFT JOIN Posts AS Q ON u.id = q.owneruserid AND q.postTypeid = 1 LEFT JOIN Posts AS a ON u.id = a.owneruserid AND a.postTypeid = 2 GROUP BY u.Id, u.DisplayName LIMIT 1000","CreationDate":"2014-03-11 02:29:15","validated":false,"QueryBody_Original":"SELECT  Top 1000\n  u.Id, \n\n  count(distinct q.id) QuestionCount,\n  count(distinct a.id) AnswerCount\nfrom\n  users u \n  LEFT JOIN Posts Q \n  on u.id = q.owneruserid \n  and q.postTypeid = 1\n    LEFT JOIN Posts a \n  on u.id = a.owneruserid \n  and a.postTypeid = 2\n\n  Group by \n  u.Id, \n  u.DisplayName"},{"QuerySetId":173855,"Title":"Users Question and Answer Count Inline SELECT","Description":null,"QueryBody":"SELECT u.id, (SELECT COUNT(*) FROM posts AS q WHERE posttypeid = 1 AND u.id = q.owneruserid) AS QuestionCount, (SELECT COUNT(*) FROM posts AS a WHERE posttypeid = 2 AND u.id = a.owneruserid) AS AnswerCount FROM users AS u LIMIT 1000","CreationDate":"2014-03-11 02:27:17","validated":false,"QueryBody_Original":"SELECT  TOp 1000\n  u.id,\n  (SELECT count(*) from posts q where posttypeid = 1 and u.id = q.owneruserid) QuestionCount,\n  (SELECT count(*) from posts a where posttypeid = 2 and u.id = a.owneruserid) AnswerCount\nFrom\n  users u"},{"QuerySetId":174176,"Title":"Conpute inbound Weighted Sum for answers (WiP)","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE OwnerUserId = 1930504 AND PostTypeId = 2","CreationDate":"2014-03-13 03:39:39","validated":false,"QueryBody_Original":"SELECT  Id from Posts where OwnerUserId = 1930504 AND PostTypeId = 2;"},{"QuerySetId":174231,"Title":"Posts that contain ideone links","Description":null,"QueryBody":"SELECT p.CreationDate, p.Body FROM Posts AS p WHERE p.Body LIKE '%ideone%'","CreationDate":"2014-03-13 12:42:00","validated":false,"QueryBody_Original":"SELECT \n  p.CreationDate, p.Body\nFROM\n  Posts p\nWHERE\n  p.Body LIKE '%ideone%'"},{"QuerySetId":174408,"Title":"Average length of each post by score","Description":null,"QueryBody":"SELECT Score AS PostScore, AVG(LENGTH(Body)) AS AvgLen \/* , Count(Score) AS Total *\/ FROM Posts WHERE PostTypeId = 1 AND CreationDate > '20120101' AND Score < 20 AND Score > -20 GROUP BY Score ORDER BY Score","CreationDate":"2014-03-14 08:24:40","validated":false,"QueryBody_Original":"SELECT  Score AS PostScore, AVG(LEN(Body)) AS AvgLen--, Count(Score) AS Total\nFROM Posts \nWHERE PostTypeId = 1 \n  AND CreationDate > '20120101' \n  AND Score < 20 \n  AND Score > -20\nGROUP BY Score ORDER BY Score ASC"},{"QuerySetId":174409,"Title":"Average question length grouped  by score","Description":null,"QueryBody":"SELECT Score AS PostScore, AVG(LENGTH(Body)) AS AvgLen \/* , Count(Score) AS Total *\/ FROM Posts WHERE PostTypeId = 1 AND CreationDate > '20120101' AND Score < 20 AND Score > -20 GROUP BY Score ORDER BY Score","CreationDate":"2014-09-24 09:05:09","validated":false,"QueryBody_Original":"SELECT  Score AS PostScore, AVG(LEN(Body)) AS AvgLen--, Count(Score) AS Total\nFROM Posts \nWHERE PostTypeId = 1\n  AND CreationDate > '20120101' \n  AND Score < 20 \n  AND Score > -20\nGROUP BY Score ORDER BY Score ASC"},{"QuerySetId":174410,"Title":"Post views grouped  by score","Description":null,"QueryBody":"SELECT Score AS PostScore, AVG(ViewCount) AS Views \/* , Count(Score) AS Total *\/ FROM Posts WHERE PostTypeId = 1 AND CreationDate > '20120101' AND Score < 26 AND Score > -10 GROUP BY Score ORDER BY Score","CreationDate":"2014-03-14 08:45:32","validated":false,"QueryBody_Original":"SELECT  Score AS PostScore, AVG(ViewCount) AS Views--, Count(Score) AS Total\nFROM Posts \nWHERE PostTypeId = 1 \n  AND CreationDate > '20120101' \n  AND Score < 26\n  AND Score > -10\nGROUP BY Score ORDER BY Score ASC"},{"QuerySetId":174690,"Title":"All answers that have a negative score","Description":null,"QueryBody":"SELECT * FROM posts WHERE score < -20 AND posttypeid = 2 LIMIT 50","CreationDate":"2014-03-16 09:42:31","validated":false,"QueryBody_Original":"SELECT  TOP 50 * \nfrom posts\nwhere score < -20\nand posttypeid=2"},{"QuerySetId":174846,"Title":"TOP 10 Most Viewed Questions","Description":null,"QueryBody":"SELECT Title, ViewCount, Id FROM Posts ORDER BY ViewCount DESC LIMIT 10","CreationDate":"2014-03-17 15:37:20","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    Title,\n    ViewCount,\n    Id\n    \nFROM\n    Posts\n    \nORDER BY ViewCount DESC"},{"QuerySetId":174849,"Title":"All votes for answer 21834245","Description":null,"QueryBody":"SELECT * FROM Votes WHERE PostId = 21834245","CreationDate":"2014-03-17 16:23:16","validated":false,"QueryBody_Original":"SELECT  * From Votes\nWhere PostId=21834245"},{"QuerySetId":175016,"Title":"Score to View Ratio in Percentage","Description":null,"QueryBody":"SELECT AVG(Score * 100 \/ ViewCount) FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2","CreationDate":"2014-03-17 19:36:50","validated":false,"QueryBody_Original":"SELECT  avg(Score*100\/ViewCount)\nFROM Posts\nWHERE PostTypeId = 1 or PostTypeId = 2"},{"QuerySetId":175348,"Title":"SELECT TOP 10 CreationDate FROM Users","Description":"SELECT TOP 10 CreationDate FROM Users","QueryBody":"SELECT CreationDate FROM Users LIMIT 10","CreationDate":"2014-03-17 22:21:06","validated":false,"QueryBody_Original":"SELECT  TOP 10 CreationDate FROM Users;\nSELECT DATEDIFF(day, '2005-12-31 23:59:59.9999999', '2006-01-01 00:00:00.0000000');"},{"QuerySetId":175431,"Title":"CLEANUP: Find markdown in tag wiki excerpts","Description":null,"QueryBody":"SELECT Tags.TagName, Posts.Body FROM Posts INNER JOIN Tags ON Posts.Id = Tags.ExcerptPostId WHERE Posts.PostTypeId IN (4) AND (Posts.Body LIKE '%*%' OR Posts.Body LIKE '%\\_%' OR Posts.Body LIKE '%>%' OR Posts.Body LIKE '%[%' OR Posts.Body LIKE '%{%' \/* for furigana *\/ OR Posts.Body LIKE N'%\uff5b%' \/* for furigana *\/ OR Posts.Body LIKE N'%\u3010%' \/* for furigana *\/)","CreationDate":"2014-06-04 14:17:45","validated":false,"QueryBody_Original":"SELECT \n  Tags.TagName,\n  Posts.Body\nFROM\n  Posts INNER JOIN Tags\n    ON Posts.Id = Tags.ExcerptPostId\nWHERE\n  Posts.PostTypeId IN (4) -- tag wiki excerpt\n  AND (\n    Posts.Body LIKE '%*%'\n    OR Posts.Body LIKE '%\\_%'\n    OR Posts.Body LIKE '%>%'\n    OR Posts.Body LIKE '%[%'\n    OR Posts.Body LIKE '%{%' -- for furigana\n    OR Posts.Body LIKE N'%\uff5b%' -- for furigana\n    OR Posts.Body LIKE N'%\u3010%' -- for furigana\n  )"},{"QuerySetId":175432,"Title":"CLEANUP: Find new tag wikis","Description":null,"QueryBody":"SELECT Tags.TagName, Posts.Body, Posts.CreationDate FROM Posts INNER JOIN Tags ON Posts.Id = Tags.WikiPostId WHERE Posts.PostTypeId IN (5) AND DATEADD(MONTH, 1, Posts.CreationDate) >= GETDATE() AND Posts.Body <> '' ORDER BY Posts.CreationDate DESC","CreationDate":"2014-03-18 07:07:08","validated":false,"QueryBody_Original":"SELECT \n  Tags.TagName,\n  Posts.Body,\n  Posts.CreationDate\nFROM\n  Posts\n  INNER JOIN Tags\n    ON Posts.Id = Tags.WikiPostId\nWHERE\n  Posts.PostTypeId IN (5) -- tag wiki\n  AND DATEADD(MONTH, 1, Posts.CreationDate) >=  GETDATE()\n  AND Posts.Body != ''\nORDER BY\n  Posts.CreationDate DESC"},{"QuerySetId":176399,"Title":"select PostTypeId, count(PostTypeId)  from user Posts by PostTypeId","Description":null,"QueryBody":"SELECT PostTypeId, COUNT(PostTypeId) FROM Posts GROUP BY PostTypeId","CreationDate":"2014-03-19 03:13:40","validated":false,"QueryBody_Original":"SELECT  PostTypeId, count(PostTypeId)  from Posts group by PostTypeId"},{"QuerySetId":176557,"Title":"java tagged questions without answers and comments","Description":null,"QueryBody":"SELECT id, title, AcceptedAnswerId FROM posts WHERE commentcount = 0 AND answercount > 0 AND tags LIKE '%error%' AND closeddate IS NULL ORDER BY favoriteCount DESC","CreationDate":"2014-12-16 03:50:30","validated":false,"QueryBody_Original":"SELECT  id, title, AcceptedAnswerId from posts where commentcount=0 and answercount>0 and tags like '%error%' and closeddate is null order by favoriteCount desc"},{"QuerySetId":176564,"Title":"Search comments by two pieces of text","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%##CommentText1##%') AND UPPER(Text) LIKE UPPER('%##CommentText2##%') ORDER BY Score DESC","CreationDate":"2014-03-19 20:40:49","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('%##CommentText1##%')\n   AND UPPER(Text) LIKE UPPER('%##CommentText2##%')\n ORDER BY Score DESC"},{"QuerySetId":176808,"Title":"Users with most Necromancer badges","Description":"Most decorated users\r\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rank, UserId AS \"User Link\", COUNT(*) AS badges FROM Badges WHERE Name = 'Necromancer' GROUP BY UserId ORDER BY Badges DESC LIMIT 120","CreationDate":"2020-11-14 02:36:19","validated":false,"QueryBody_Original":"SELECT  TOP 120 row_number() over(order by count(*) desc) as rank, \n  UserId AS [User Link], count(*) AS badges\nFROM Badges\nWHERE Name='Necromancer'\nGROUP BY UserId\nORDER BY Badges DESC"},{"QuerySetId":176883,"Title":"How many comments start with \"thanks\"","Description":null,"QueryBody":"SELECT id AS \"Comment Link\", text FROM comments WHERE LOWER(text) LIKE 'thank%'","CreationDate":"2014-05-03 21:00:06","validated":false,"QueryBody_Original":"SELECT  id [Comment Link], text\nfrom comments\nwhere lower(text) like 'thank%'"},{"QuerySetId":176919,"Title":"Short questions not yet closed","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE PostTypeID = 1 AND LENGTH(Body) > 100 AND LENGTH(Body) < 150 AND ClosedDate IS NULL ORDER BY CreationDate DESC","CreationDate":"2014-11-22 19:35:28","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link],CreationDate\nFROM Posts\nWHERE PostTypeID = 1 and len(Body)>100 and len(Body)<150 and ClosedDate is NULL\nORDER BY CreationDate DESC"},{"QuerySetId":177104,"Title":"Days a specific user spend on SO leaving comments","Description":null,"QueryBody":"SELECT (SUM(LENGTH(text)) \/ 100 \/ 60 \/ 24) FROM comments WHERE userid = 285587","CreationDate":"2014-03-21 22:30:52","validated":false,"QueryBody_Original":"SELECT  (sum(len(text)) \/ 100 \/60 \/24) \nfrom comments\nwhere userid = 285587"},{"QuerySetId":177105,"Title":"top user commenting in days","Description":null,"QueryBody":"SELECT u.Displayname, SUM(LENGTH(text)) \/ 100 \/ 60 \/ 24 AS days FROM comments AS c INNER JOIN users AS u ON c.userid = u.id GROUP BY u.id, u.displayname ORDER BY 2 DESC","CreationDate":"2014-03-22 00:15:45","validated":false,"QueryBody_Original":"SELECT  u.Displayname,  sum(len(text)) \/100 \/ 60 \/ 24 as days\nfrom comments c\ninner join users u on c.userid = u.id \ngroup by u.id, u.displayname\norder by 2 desc"},{"QuerySetId":177202,"Title":"How many answers start with \"i got the same\"","Description":null,"QueryBody":"SELECT id AS \"Post Link\", * FROM posts WHERE posttypeid = 2 AND (LOWER(body) LIKE '<p>i am getting the same%' OR LOWER(body) LIKE '<p>i got the same%')","CreationDate":"2014-03-22 16:55:29","validated":false,"QueryBody_Original":"SELECT  id [Post Link], *\nfrom posts\nwhere posttypeid = 2\nand (\n   lower(body) like '<p>i am getting the same%'\n   or\n   lower(body) like '<p>i got the same%'\n   )"},{"QuerySetId":177423,"Title":"Questions with highest score compared to number of answers","Description":null,"QueryBody":"SELECT Id, Title, AnswerCount, Score \/ (AnswerCount + 1.0) AS Ratio FROM Posts ORDER BY Ratio DESC LIMIT 100","CreationDate":"2014-03-27 19:07:50","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id, Title, AnswerCount, Score \/ (AnswerCount + 1.0) as Ratio FROM Posts ORDER BY Ratio DESC;"},{"QuerySetId":178730,"Title":"questions only tagged with merge","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM posts WHERE posttypeid = 1 AND tags LIKE '<cognito-forms>'","CreationDate":"2018-01-27 07:11:07","validated":false,"QueryBody_Original":"SELECT  id as [Post Link]\nfrom posts\nwhere posttypeid=1\nand tags like '<cognito-forms>'"},{"QuerySetId":178791,"Title":"close reason for closed postes over votes","Description":null,"QueryBody":"SELECT DISTINCT ph.postid \/*  ph.postid as [Post Link] *\/, ph.comment AS reason, \"text\" AS voters FROM PostHistory AS ph WHERE ph.posthistorytypeid = 10","CreationDate":"2014-03-27 01:16:48","validated":false,"QueryBody_Original":"SELECT  distinct ph.postid\n     --  ph.postid as [Post Link]\n     , ph.comment as reason\n     , [text] as voters\nfrom PostHistory ph \nwhere ph.posthistorytypeid = 10"},{"QuerySetId":178800,"Title":"Closed questions with reasons, sorted by date","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", ph.CreationDate AS \"Closure Date\", ph.comment AS \"Close Reason\", ph.text AS Voters FROM PostHistory AS ph INNER JOIN posts AS p ON p.Id = ph.PostId WHERE ph.posthistorytypeid = 10 ORDER BY ph.CreationDate DESC","CreationDate":"2014-03-27 02:51:26","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], ph.CreationDate as [Closure Date], ph.comment as [Close Reason], ph.text as Voters\nfrom PostHistory ph \ninner join posts p on p.Id=ph.PostId \nwhere ph.posthistorytypeid = 10\norder by ph.CreationDate desc"},{"QuerySetId":179304,"Title":"Search comments by keyword and user id","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Text, CreationDate FROM Comments WHERE Text LIKE '%##Keyword##%' ORDER BY CreationDate DESC","CreationDate":"2014-04-16 07:34:25","validated":false,"QueryBody_Original":"SELECT  Id as [Comment Link], Text, CreationDate \nFROM Comments\nWHERE\n  Text LIKE '%##Keyword##%'\norder by CreationDate desc"},{"QuerySetId":179322,"Title":" Get all your posts and comments with links","Description":null,"QueryBody":"SELECT CreationDate, Id AS \"Comment Link\", text FROM comments WHERE UserDisplayName = 'Nico' OR UserId = 4559","CreationDate":"2014-03-29 16:34:25","validated":false,"QueryBody_Original":"SELECT  all CreationDate, Id AS [Comment Link], text \n  from comments \n  where UserDisplayName='Nico' or UserId=4559"},{"QuerySetId":179387,"Title":"Top 200 Users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2014-03-29 22:16:15","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":179399,"Title":"Revisions of a post done by you","Description":null,"QueryBody":"SELECT ph.Id AS \"Revision Link\", * FROM Posts AS p JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE ph.PostHistoryTypeId IN (2, 5, 8, 24) ORDER BY p.ID LIMIT 100","CreationDate":"2014-08-30 05:31:46","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ph.Id AS [Revision Link], *\n\nFROM Posts p\nJOIN PostHistory ph ON ph.PostId = p.Id\n\nWHERE\n  ph.PostHistoryTypeId IN (2,5,8,24)\n\nORDER BY\n  p.ID"},{"QuerySetId":180020,"Title":"YouTube API Monthly Question and Answer Stats","Description":null,"QueryBody":"SELECT COUNT(id) AS \"Answered Questions This Month\" FROM Posts WHERE Tags LIKE '%youtube-api%' AND AnswerCount > 0 AND CreationDate >= '2013-03-01' AND CreationDate <= '2013-03-31'","CreationDate":"2014-04-01 15:25:54","validated":false,"QueryBody_Original":"SELECT  count(id) AS \"Answered Questions This Month\"\nFROM Posts\nWHERE Tags like '%youtube-api%' and AnswerCount > 0 and CreationDate >= '2013-03-01' and CreationDate <= '2013-03-31';\n\nSELECT count(id) AS \"Total Questions This Month\"\nFROM Posts\nWHERE Tags like '%youtube-api%' and CreationDate >= '2013-03-01' and CreationDate <= '2013-03-31';\n\nSELECT count(id) AS \"Answered Questions\"\nFROM Posts\nWHERE Tags like '%youtube-api%' and AnswerCount > 0;\n\nSELECT count(id) AS \"Total Questions\"\nFROM Posts\nWHERE Tags like '%youtube-api%';"},{"QuerySetId":180085,"Title":"Deepak Vaid's Physics.SE posts  ","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p WHERE OwnerDisplayName = 'user346'","CreationDate":"2014-04-01 20:05:17","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link] FROM Posts p WHERE OwnerDisplayName = 'user346'"},{"QuerySetId":180140,"Title":"What are the most popular tags.","Description":null,"QueryBody":"SELECT TagName, \"Count\" FROM Tags ORDER BY \"Count\" DESC","CreationDate":"2014-04-02 00:01:05","validated":false,"QueryBody_Original":"SELECT \n    TagName,\n    \"Count\"\nFROM Tags\nORDER BY \"Count\" \nDESC"},{"QuerySetId":180151,"Title":"count votes with score >5","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE score > 5","CreationDate":"2014-04-02 00:30:30","validated":false,"QueryBody_Original":"SELECT  \n  count(*)\n  \nFROM Posts\n\nWHERE score > 5"},{"QuerySetId":180155,"Title":"Percentage of all questions with specific tag - per month","Description":"Enter the name of a tag to see how big a part of questions have been tagged with that tag every month.","QueryBody":"SELECT DATEADD(month, DATEDIFF(month, '', Posts.CreationDate), '') AS \"Month\", COUNT(CASE WHEN Posts.Tags LIKE '%<##TagName##>%' THEN 1 ELSE NULL END) * 100.0 \/ COUNT(*) AS \"Percentage of all questions tagged &lt;##TagName##&gt;\" FROM Posts WHERE Posts.PostTypeId = 1 GROUP BY DATEDIFF(month, '', Posts.CreationDate) ORDER BY DATEDIFF(month, '', Posts.CreationDate)","CreationDate":"2014-04-02 01:36:57","validated":false,"QueryBody_Original":"SELECT \n  dateadd(month, DATEDIFF(month, '', Posts.CreationDate), '') [Month]\n  ,count(case when Posts.Tags LIKE '%<##TagName##>%' then 1 else null end)\n  *100.0\/count(*)\n  [Percentage of all questions tagged &lt;##TagName##&gt;]\nFROM Posts\nWHERE Posts.PostTypeId = 1\nGROUP BY DATEDIFF(month, '', Posts.CreationDate)\nORDER BY DATEDIFF(month, '', Posts.CreationDate);"},{"QuerySetId":180196,"Title":"Fetch all questions posted on the First of April, sorted by decreasing order of score","Description":null,"QueryBody":"SELECT id AS \"Post Link\", score, TIME_TO_STR(creationdate, '%y') AS \"Year of Post\", body AS \"Contents of Question\" FROM posts WHERE posttypeid = 1 AND (TIME_TO_STR(creationdate, '%M') = '04' AND TIME_TO_STR(creationdate, '%d') = '01') ORDER BY score DESC","CreationDate":"2014-04-02 09:47:20","validated":false,"QueryBody_Original":"SELECT  id                         AS [Post Link],\n       score,\n       Datepart(yy, creationdate) AS \"Year of Post\",\n       body                       \"Contents of Question\"\nFROM   posts\nWHERE  posttypeid = 1\n       AND ( Datepart(mm, creationdate) = '04'\n             AND Datepart(dd, creationdate) = '01' )\nORDER  BY score DESC"},{"QuerySetId":180287,"Title":"Top Users 25 And Under","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank, DisplayName, Age, CreationDate, Reputation, CONCAT('http:\/\/stackoverflow.com\/users\/', Id) AS Profile FROM Users WHERE Age <= 25 AND Reputation > 8000 ORDER BY Reputation DESC","CreationDate":"2014-04-09 00:17:06","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank,DisplayName,Age,CreationDate,Reputation,CONCAT('http:\/\/stackoverflow.com\/users\/',Id) AS Profile\nFROM Users\nWHERE Age <= 25\nAND Reputation > 8000\nORDER BY Reputation DESC"},{"QuerySetId":180323,"Title":"top 10  users: Tunisia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%tunis%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2014-04-03 06:29:13","validated":false,"QueryBody_Original":"SELECT \n     TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%tunis%'\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":180619,"Title":"CLEANUP: Find images not hosted on imgur","Description":"This query will find most posts that contain at least one image that isn't hosted either on i.imgur.com or i.stack.imgur.com. Note that some images have legitimate reasons for being hosted off-site - maybe they're SVGs (not supported by imgur), or are larger than the imgur upload size limits (4 MB non-gif; 2 MB gif). \r\n\r\nAlso, the [Snippet] column may list an imgur URL; this is because it just lists the URL of the first image it finds. There may still be non-imgur images elsewhere in the post.","QueryBody":"SELECT b.Score, b.Id AS \"Post Link\", b.CreationDate, SUBSTRING(b.Body \/* LEN('<img src=\"') *\/, STR_POSITION(b.Body, '<img') + 10, CASE WHEN STR_POSITION(b.Body, '\" alt', STR_POSITION(b.Body, '<img')) - STR_POSITION(b.Body, '<img') - 10 >= 0 THEN STR_POSITION(b.Body, '\" alt', STR_POSITION(b.Body, '<img')) - STR_POSITION(b.Body, '<img') - 10 ELSE 0 END) AS \"Snippet\", (LENGTH(b.Body) - LENGTH(REPLACE(b.Body, '<img', ''))) \/ 4 AS \"NumImages\", CASE WHEN NOT b.CommunityOwnedDate IS NULL THEN 'Yes' ELSE '' END AS \"IsCW?\" FROM Posts AS b WHERE (b.Body LIKE '%<img src=\"http:\/\/[^i]%' OR b.Body LIKE '%<img src=\"http:\/\/i[^.]%' OR b.Body LIKE '%<img src=\"http:\/\/i.[^is]%') ORDER BY b.CreationDate DESC","CreationDate":"2017-07-22 23:18:06","validated":false,"QueryBody_Original":"SELECT \n  b.Score,\n  b.Id AS [Post Link],\n  b.CreationDate,\n  SUBSTRING(b.Body, \n            CHARINDEX('<img', b.Body) + 10, -- LEN('<img src=\"')\n            CASE WHEN CHARINDEX('\" alt', b.Body, CHARINDEX('<img', b.Body)) - CHARINDEX('<img', b.Body) - 10 >= 0\n                 THEN CHARINDEX('\" alt', b.Body, CHARINDEX('<img', b.Body)) - CHARINDEX('<img', b.Body) - 10\n                 ELSE 0\n                 END\n            ) AS [Snippet],\n  (LEN(b.Body) - LEN(REPLACE(b.Body, '<img', '')))\/4 AS [NumImages],\n  CASE WHEN b.CommunityOwnedDate IS NOT NULL THEN 'Yes' ELSE '' END AS [IsCW?]\nFROM\n  Posts b\nWHERE\n  (b.Body LIKE '%<img src=\"http:\/\/[^i]%'\n  OR b.Body LIKE '%<img src=\"http:\/\/i[^.]%'\n  OR b.Body LIKE '%<img src=\"http:\/\/i.[^is]%')\nORDER BY\n  b.CreationDate DESC"},{"QuerySetId":180798,"Title":"Latest activity across all sites.","Description":null,"QueryBody":"SELECT displayname, profileimageurl FROM Users WHERE Displayname LIKE '%M%' AND profileimageurl <> ''","CreationDate":"2014-04-05 01:39:39","validated":false,"QueryBody_Original":"SELECT  displayname, profileimageurl\nFROM Users\nWHERE Displayname like '%M%'\nAND profileimageurl <> ''"},{"QuerySetId":180823,"Title":"CLEANUP: find SEO-unfriendly romanizations in titles","Description":null,"QueryBody":"SELECT b.Id AS \"Post Link\", b.CreationDate FROM Posts AS b WHERE b.Title LIKE N'%[\u0100\u0101\u0112\u0113\u012a\u012b\u014c\u014d\u016a\u016b\u00c2\u00e2\u00ca\u00ea\u00ce\u00ee\u00d4\u00f4\u00db\u00fb]%' ORDER BY b.CreationDate DESC","CreationDate":"2014-04-05 03:53:28","validated":false,"QueryBody_Original":"SELECT \n  b.Id AS [Post Link],\n  b.CreationDate\nFROM\n  Posts b\nWHERE\n  b.Title LIKE N'%[\u0100\u0101\u0112\u0113\u012a\u012b\u014c\u014d\u016a\u016b\u00c2\u00e2\u00ca\u00ea\u00ce\u00ee\u00d4\u00f4\u00db\u00fb]%'\nORDER BY\n  b.CreationDate DESC"},{"QuerySetId":181211,"Title":"How many users on Stack","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2014-10-13 00:30:52","validated":false,"QueryBody_Original":"SELECT  Count(*) From Users"},{"QuerySetId":181332,"Title":"Recent questions with no answers, no comments, nonnegative score","Description":null,"QueryBody":"SELECT CreationDate, Id AS \"Post Link\", Score FROM Posts WHERE PostTypeId = 1 AND Score > 0 AND COALESCE(AnswerCount, 0) = 0 AND COALESCE(CommentCount, 0) = 0 AND ClosedDate IS NULL ORDER BY CreationDate DESC, Score DESC LIMIT 1000","CreationDate":"2015-03-01 19:03:34","validated":false,"QueryBody_Original":"SELECT  TOP 1000 CreationDate, \nId AS [Post Link],\nScore\nFROM Posts\nWHERE PostTypeId=1 AND Score>0 AND ISNULL(AnswerCount,0)=0 AND ISNULL(CommentCount,0)=0 AND ClosedDate IS NULL\nORDER BY CreationDate DESC\n,Score DESC"},{"QuerySetId":181512,"Title":"Worst questions that weren't deleted (yet)","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\", Body FROM Posts WHERE PostTypeId = 1 AND Score < 0 ORDER BY Score LIMIT 1000","CreationDate":"2014-04-07 23:48:49","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Score, Id AS [Post Link], Body\nFROM Posts\nWHERE PostTypeId = 1 AND Score < 0\nORDER BY Score ASC"},{"QuerySetId":181566,"Title":"Number of posts with links to Wikipedia","Description":null,"QueryBody":"SELECT COUNT(p.id) FROM posts AS p WHERE p.body LIKE '%http:\/\/en.wikipedia%'","CreationDate":"2014-04-08 07:28:01","validated":false,"QueryBody_Original":"SELECT  count(p.id) from posts p\nwhere p.body like '%http:\/\/en.wikipedia%'"},{"QuerySetId":181567,"Title":"Number of comments with links to Wikipedia","Description":null,"QueryBody":"SELECT COUNT(p.id) FROM comments AS p WHERE p.text LIKE '%http:\/\/en.wikipedia%'","CreationDate":"2014-04-08 07:30:40","validated":false,"QueryBody_Original":"SELECT  count(p.id) from comments p\nwhere p.text like '%http:\/\/en.wikipedia%'"},{"QuerySetId":182077,"Title":"Comments with score > 0","Description":null,"QueryBody":"SELECT * FROM Comments WHERE Score > 0 LIMIT 100","CreationDate":"2014-04-10 06:10:06","validated":false,"QueryBody_Original":"SELECT  TOP 100 * FROM Comments\nWHERE Score > 0"},{"QuerySetId":182343,"Title":"Close as offtopic reason dist","Description":null,"QueryBody":"SELECT MAX(CreationDate) FROM Votes AS v WHERE VoteTypeId = 6 AND NOT UserId IS NULL","CreationDate":"2014-04-11 07:59:47","validated":false,"QueryBody_Original":"SELECT  max(CreationDate)\nfrom Votes v\nwhere VoteTypeId = 6 and UserId is not null"},{"QuerySetId":182393,"Title":"Users Close to Close Privileges","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, CAST(GETUTCDATE() - LastAccessDate AS INT) AS \"Last Access (days ago)\" FROM Users WHERE Reputation > 20000 ORDER BY Reputation DESC LIMIT 50","CreationDate":"2014-04-11 16:50:32","validated":false,"QueryBody_Original":"SELECT  TOP 50 Id as [User Link], Reputation, CONVERT(int, GETUTCDATE()-LastAccessDate) as \"Last Access (days ago)\"\nFROM Users\nWHERE Reputation > 20000\nORDER BY Reputation DESC"},{"QuerySetId":183053,"Title":"Average time til question closure","Description":null,"QueryBody":"SELECT Posts.CreationDate, Posts.ClosedDate, DATEDIFF(Posts.ClosedDate, Posts.CreationDate) AS \"Difference\" FROM Posts WHERE NOT Posts.ClosedDate IS NULL AND DATEDIFF(Posts.ClosedDate, Posts.CreationDate) <= 30 ORDER BY Difference DESC LIMIT 1000","CreationDate":"2014-04-13 20:32:11","validated":false,"QueryBody_Original":"SELECT  TOP(1000) Posts.CreationDate, Posts.ClosedDate, DateDiff(day, Posts.CreationDate, Posts.ClosedDate) AS [Difference]\nFROM Posts\nWHERE Posts.ClosedDate IS NOT NULL AND DateDiff(day, Posts.CreationDate, Posts.ClosedDate) <= 30\nORDER BY Difference DESC"},{"QuerySetId":183269,"Title":"Top 30 Users in T\u00fcrkiye","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%turkey%' OR UPPER(Location) LIKE '%TR' OR UPPER(Location) LIKE 'ISTANBUL' OR LOWER(Location) LIKE 'istanbul' OR UPPER(Location) LIKE 'IZMIR' OR LOWER(Location) LIKE 'izmir' OR UPPER(Location) LIKE 'ANKARA' OR LOWER(Location) LIKE 'ankara' OR UPPER(Location) LIKE 'ESKISEHIR' OR LOWER(Location) LIKE 'eskisehir' ORDER BY Reputation DESC LIMIT 30","CreationDate":"2014-04-14 18:04:18","validated":false,"QueryBody_Original":"SELECT \nTOP (30) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%turkey%'\n    OR UPPER(Location) LIKE '%TR'\n    OR UPPER(Location) LIKE 'ISTANBUL'\n    OR LOWER(Location) LIKE 'istanbul'\n    OR UPPER(Location) LIKE 'IZMIR'\n    OR LOWER(Location) LIKE 'izmir'\n    OR UPPER(Location) LIKE 'ANKARA'\n    OR LOWER(Location) LIKE 'ankara'\n    OR UPPER(Location) LIKE 'ESKISEHIR'\n    OR LOWER(Location) LIKE 'eskisehir'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":183403,"Title":"Instant success: Users with highest-scored first answer","Description":"Rank users by the score of their first answer ever posted on the site.","QueryBody":"SELECT RANK() OVER (ORDER BY Answers.Score DESC) AS \"Rank\", Answers.Score, Users.Id AS \"User Link\", Users.Reputation, Answers.Id AS \"Post Link\", Answers.CreationDate AS \"Date\", Question.Tags FROM Posts AS Answers INNER JOIN Posts AS Question ON Question.Id = Answers.ParentId INNER JOIN Users ON Users.Id = Answers.OwnerUserId ORDER BY Answers.Score DESC, Answers.OwnerUserId LIMIT 200","CreationDate":"2017-07-12 16:51:43","validated":false,"QueryBody_Original":"SELECT  TOP 200 RANK() OVER (ORDER BY Answers.Score DESC) AS [Rank]\n     , Answers.Score\n     , Users.Id AS [User Link]\n     , Users.Reputation\n     , Answers.Id AS [Post Link]\n     , Answers.CreationDate AS [Date]\n     , Question.Tags\n    FROM Posts AS Answers\n        INNER JOIN Posts AS Question\n            ON Question.Id = Answers.ParentId\n        INNER JOIN Users\n            ON Users.Id = Answers.OwnerUserId\n    ORDER BY Answers.Score DESC, Answers.OwnerUserId;"},{"QuerySetId":183471,"Title":"Show All Tags on Site","Description":null,"QueryBody":"SELECT TagName, SUM(Count), SUM(CASE WHEN NOT ExcerptPostId IS NULL THEN 1 ELSE 0 END) AS \"Has Excerpt\", SUM(CASE WHEN NOT WikiPostId IS NULL THEN 1 ELSE 0 END) AS \"Has Wiki\" FROM Tags GROUP BY TagName ORDER BY SUM(Count) DESC","CreationDate":"2014-04-15 10:11:54","validated":false,"QueryBody_Original":"SELECT  \n  TagName, \n  SUM(Count), \n  SUM(CASE WHEN ExcerptPostId is not null THEN 1 ELSE 0 END) AS \"Has Excerpt\",\n  SUM(CASE WHEN WikiPostId is not null THEN 1 ELSE 0 END) AS \"Has Wiki\"\nFROM Tags\nGROUP BY TagName\nORDER BY SUM(Count) DESC"},{"QuerySetId":183577,"Title":"same question favoritred multiple times by same user","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", UserId AS \"User Link\", COUNT(*) AS \"Duplication Level\" FROM Votes WHERE VoteTypeId = 5 \/* favorite *\/ GROUP BY PostId, UserId HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC","CreationDate":"2014-04-15 17:37:27","validated":false,"QueryBody_Original":"SELECT \n  PostId AS [Post Link],\n  UserId AS [User Link],\n  COUNT(*) AS [Duplication Level]\nFROM Votes\nWHERE VoteTypeId = 5 -- favorite\nGROUP BY PostId, UserId\nHAVING COUNT(*) > 1\nORDER BY COUNT(*) DESC;"},{"QuerySetId":183774,"Title":"Rollback Done By A User","Description":"This shows rollbacks that a particular user has performed. Enter the user ID. Results will be all rollback edits that that user has done.","QueryBody":"SELECT h.UserId AS \"User Link\", h.PostId AS \"Post Link\", h.CreationDate AS Date, h.PostHistoryTypeId AS Type, h.Comment, h.Text FROM PostHistory AS h WHERE UserId = 285587 AND PostHistoryTypeID IN (7, 8, 9) ORDER BY h.CreationDate DESC","CreationDate":"2014-04-26 18:49:19","validated":false,"QueryBody_Original":"SELECT  \n  h.UserId AS [User Link],\n  h.PostId AS [Post Link],\n  h.CreationDate AS Date,\n  h.PostHistoryTypeId AS Type,\n  h.Comment,\n  h.Text\nFROM \n  PostHistory h\nWHERE \n  UserId = 285587 AND\n  PostHistoryTypeID IN (7, 8, 9)\nORDER BY\n  h.CreationDate DESC"},{"QuerySetId":183964,"Title":"Top Viewed Game Dev Questions","Description":null,"QueryBody":"SELECT Title, Tags, ViewCount FROM Posts WHERE ViewCount > 1000 ORDER BY ViewCount DESC","CreationDate":"2014-04-17 13:14:15","validated":false,"QueryBody_Original":"SELECT  Title, Tags, ViewCount from Posts where ViewCount > 1000 order by ViewCount DESC;"},{"QuerySetId":184009,"Title":"Activity of SO Users with Time","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Number of Users\", DATEDIFF(\"LastAccessDate\", \"CreationDate\") AS \"Active Period (Months)\" FROM USERS GROUP BY DATEDIFF(\"LastAccessDate\", \"CreationDate\") ORDER BY DATEDIFF(\"LastAccessDate\", \"CreationDate\")","CreationDate":"2014-04-17 12:36:25","validated":false,"QueryBody_Original":"SELECT    COUNT(*) AS 'Number of Users'\n,DATEDIFF (MONTH, [CreationDate], [LastAccessDate]) As 'Active Period (Months)'\nFROM    USERS\nGROUP BY DATEDIFF (MONTH, [CreationDate], [LastAccessDate]) \nORDER BY DATEDIFF (MONTH, [CreationDate], [LastAccessDate])"},{"QuerySetId":184640,"Title":"Top Users in Cluj-Napoca City ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", * FROM Users WHERE LOWER(Location) LIKE '%cluj%' OR UPPER(Location) LIKE '%CJ' ORDER BY Reputation DESC","CreationDate":"2019-01-18 19:04:05","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    *\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%cluj%'\n    OR UPPER(Location) LIKE '%CJ'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":184677,"Title":"cobol users with a badge ","Description":null,"QueryBody":"SELECT DISTINCT userid AS \"User Link\" FROM badges WHERE name LIKE '%cobol%'","CreationDate":"2014-04-20 20:30:42","validated":false,"QueryBody_Original":"SELECT  distinct userid as [User Link]\nfrom badges\nwhere name like '%cobol%'"},{"QuerySetId":184834,"Title":"Unanswered Questions with Tags Similar to Answered Questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", P.Tags FROM Posts AS P WHERE P.Tags IN (SELECT Tags FROM Posts AS P2 WHERE Id IN (SELECT Id FROM Posts WHERE P2.PostTypeId = 1 AND P2.AnswerCount > 0 AND NOT P2.AcceptedAnswerId IS NULL AND P2.Tags = P.Tags AND NOT P2.CommunityOwnedDate IS NULL)) AND P.PostTypeId = 1 AND NOT P.CommunityOwnedDate IS NULL AND P.AnswerCount = 0","CreationDate":"2014-04-21 21:41:39","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], P.Tags\nFROM Posts P\nWHERE P.Tags in (SELECT Tags FROM Posts P2\n                   WHERE Id in \n                   (\n                   SELECT Id FROM Posts WHERE P2.PostTypeId = 1 AND P2.AnswerCount > 0 AND P2.AcceptedAnswerId IS NOT NULL AND P2.Tags = P.Tags AND P2.CommunityOwnedDate IS NOT NULL\n                   )\n                  )\n\nAND P.PostTypeId = 1\nAND P.CommunityOwnedDate IS NOT NULL\nAND P.AnswerCount = 0"},{"QuerySetId":184956,"Title":"Top users from Hyderabad, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%hyderabad%' ORDER BY Reputation DESC","CreationDate":"2014-11-18 14:38:16","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n     LOWER(Location) LIKE '%hyderabad%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":185073,"Title":"Django related tags on StackOverflow","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName LIKE 'django%' AND WikiPostId IS NULL ORDER BY count DESC","CreationDate":"2015-01-05 01:10:19","validated":false,"QueryBody_Original":"SELECT  * FROM Tags WHERE TagName LIKE 'django%' AND WikiPostId IS NULL ORDER BY count DESC;"},{"QuerySetId":185296,"Title":" Votes: DownVote to UpVote Ratio","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, UpVotes, DownVotes, ROUND(CAST(UpVotes AS FLOAT) \/ DownVotes, 1) AS Ratio FROM Users WHERE reputation > 250 AND DownVotes > 0 ORDER BY Ratio DESC LIMIT 50","CreationDate":"2014-04-23 09:21:14","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  \n  Id as [User Link],\n  Reputation,\n  UpVotes,\n  DownVotes,\n  ROUND(CAST(UpVotes AS float) \/ DownVotes , 1) as Ratio\n  \n  FROM Users\n  \n  WHERE reputation > 250\n  \n    and DownVotes > 0\n    \n  ORDER BY Ratio DESC"},{"QuerySetId":185365,"Title":"Answered\/Unanswered Question Ratio over Time of Day","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%h') AS \"Hour\", SUM(CASE WHEN p.AnswerCount > 0 THEN 1 ELSE 0 END) \/ COUNT(p.Id) \/ 1.0 AS \"Answered:Unanswered\" FROM Posts AS p WHERE p.PostTypeId = 1 GROUP BY TIME_TO_STR(creationdate, '%h') ORDER BY \"Hour\"","CreationDate":"2018-03-12 02:34:14","validated":false,"QueryBody_Original":"SELECT \n  datepart(hour, creationdate) AS [Hour],\n  sum(case when p.AnswerCount > 0 then 1 else 0 end) \/ count(p.Id) \/ 1.0 as [Answered:Unanswered]\nFROM\n  Posts as p\nWHERE\n  p.PostTypeId = 1\n  GROUP BY datepart(hour, creationdate)\nORDER BY [Hour]"},{"QuerySetId":185609,"Title":"Number of created accounts per day","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE) AS date, COUNT(*) AS q_cnt, SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS answered_cnt, SUM(viewcount) AS vw_cnt FROM Posts WHERE PostTypeId = 1 GROUP BY CAST(CreationDate AS DATE) ORDER BY date","CreationDate":"2019-06-09 09:35:40","validated":false,"QueryBody_Original":"SELECT  CAST(CreationDate AS DATE) as date, COUNT(*) as q_cnt, sum(case when AnswerCount > 0 then 1 else 0 end) answered_cnt, sum(viewcount) vw_cnt  \nFROM Posts\nWHERE PostTypeId=1\nGROUP BY CAST(CreationDate AS DATE)\nORDER BY date"},{"QuerySetId":185610,"Title":"Average User Registrations Per Day","Description":null,"QueryBody":"SELECT users.\"count\" FROM (SELECT COUNT(*) AS \"count\", CreationDate FROM Users GROUP BY CreationDate) AS users","CreationDate":"2016-04-16 07:35:14","validated":false,"QueryBody_Original":"SELECT  users.[count] FROM (\nSELECT COUNT(*) as [count], CreationDate  FROM Users\nGROUP BY CreationDate\n) users"},{"QuerySetId":185661,"Title":"What are the most popular programming languages over time","Description":null,"QueryBody":"SELECT Tags FROM Posts WHERE NOT Tags IS NULL","CreationDate":"2014-04-25 03:58:51","validated":false,"QueryBody_Original":"SELECT  Tags\nFROM Posts\nWHERE Tags IS NOT NULL"},{"QuerySetId":186827,"Title":"Closed ReOpened After LastEdit By Owner After Closed","Description":null,"QueryBody":"SELECT p.LastEditDate, p.ClosedDate, CASE WHEN p.LastEditDate >= p.ClosedDate THEN 'Counted' ELSE 'Ignored' END AS Diff, p.Id AS \"Post Link\" FROM Posts AS p, PostHistory AS ph WHERE p.LastEditorUserId = p.OwnerUserId AND p.Id = ph.postId AND ph.PostHistoryTypeId = 11 ORDER BY 3","CreationDate":"2015-11-16 13:37:28","validated":false,"QueryBody_Original":"SELECT  p.LastEditDate, p.ClosedDate,\n  CASE WHEN p.LastEditDate >= p.ClosedDate THEN 'Counted' ELSE 'Ignored' END AS Diff,\n  p.Id AS [Post Link]\nFROM Posts p, PostHistory ph\nWHERE \n  p.LastEditorUserId = p.OwnerUserId\n  AND p.Id = ph.postId\n  AND ph.PostHistoryTypeId = 11\nORDER BY 3"},{"QuerySetId":186892,"Title":"Questions Never Edited By Owner After Closing","Description":null,"QueryBody":"SELECT COUNT(DISTINCT (p.Id)) FROM Posts AS p INNER JOIN PostHistory AS ph ON p.Id = ph.PostId WHERE NOT p.ClosedDate IS NULL AND NOT p.OwnerUserId IN (SELECT UserId FROM PostHistory AS ph WHERE ph.PostId = p.Id AND ph.PostHistoryTypeId IN (4, 5, 6))","CreationDate":"2014-04-29 02:53:04","validated":false,"QueryBody_Original":"SELECT  COUNT(DISTINCT(p.Id))\nFROM Posts p INNER JOIN PostHistory ph ON p.Id = ph.PostId\nWHERE \np.ClosedDate IS NOT NULL AND\np.OwnerUserId NOT IN ( SELECT UserId \n                       FROM PostHistory ph \n                       WHERE ph.PostId = p.Id \n                       AND ph.PostHistoryTypeId IN ( 4,5,6 ) )"},{"QuerySetId":186974,"Title":"Critics - Reputation vs DownVotes","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, u.DownVotes, CAST(CAST((u.Reputation + u.DownVotes) AS FLOAT) \/ (u.DownVotes * 2) AS FLOAT(10, 2)) AS DownVoteRatio, u.UpVotes, u.Reputation + u.DownVotes AS EffectiveReputation FROM Users AS u WHERE u.Reputation > 1000 AND u.DownVotes > 0 ORDER BY DownVoteRatio","CreationDate":"2018-05-02 14:44:24","validated":false,"QueryBody_Original":"SELECT  u.Id, u.DisplayName, u.Reputation, u.DownVotes,\nCONVERT(DECIMAL(10,2), CAST((u.Reputation + u.DownVotes) AS DECIMAL) \/ (u.DownVotes * 2)) as DownVoteRatio,\nu.UpVotes,\nu.Reputation + u.DownVotes as EffectiveReputation\nFROM Users u\nWHERE u.Reputation > 1000\nAND u.DownVotes > 0\nORDER BY DownVoteRatio ASC"},{"QuerySetId":186977,"Title":"Never Met A Question or Answer They Didn't Like","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, u.DownVotes, (u.DownVotes * 2) AS SpentReputation, u.LastAccessDate, u.UpVotes FROM Users AS u WHERE u.Reputation > 30000 ORDER BY u.DownVotes","CreationDate":"2014-04-29 08:19:12","validated":false,"QueryBody_Original":"SELECT  u.Id, u.DisplayName, u.Reputation, u.DownVotes, \n(u.DownVotes * 2) as SpentReputation, \nu.LastAccessDate,\nu.UpVotes\nFROM Users u\nWHERE u.Reputation > 30000\nORDER BY u.DownVotes ASC"},{"QuerySetId":186985,"Title":"Never Met A Question Or Answer They Didn't Like!","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, u.DownVotes, u.UpVotes, u.LastAccessDate FROM Users AS u WHERE u.Reputation >= 3000 AND u.DownVotes = 0 ORDER BY u.Reputation DESC","CreationDate":"2019-07-01 06:03:52","validated":false,"QueryBody_Original":"SELECT  u.Id, \nu.DisplayName, \nu.Reputation, \nu.DownVotes, \nu.UpVotes,\nu.LastAccessDate\nFROM Users u\nWHERE u.Reputation >= 3000\nAND u.DownVotes = 0\nORDER BY u.Reputation DESC"},{"QuerySetId":187230,"Title":"Top locations by user count","Description":null,"QueryBody":"SELECT location, COUNT(id) AS nmbr FROM users WHERE location <> '' GROUP BY location ORDER BY COUNT(id) DESC, location","CreationDate":"2014-04-29 23:52:55","validated":false,"QueryBody_Original":"SELECT  location, count(id) as nmbr from users\nwhere location <> ''\ngroup by location\norder by count(id) desc, location"},{"QuerySetId":187288,"Title":"Get answers with the most closed votes","Description":null,"QueryBody":"SELECT Posts.Id, ParentId, COUNT(*) AS Votings, OwnerDisplayName, Body, Score FROM Posts, Votes WHERE PostTypeId = 2 AND Votes.PostId = Posts.Id AND VoteTypeId = 10 GROUP BY Votes.PostId, Posts.Id, ParentId, OwnerDisplayName, Body, Score ORDER BY COUNT(*) DESC LIMIT 10","CreationDate":"2014-04-29 18:24:44","validated":false,"QueryBody_Original":"SELECT  TOP 10 Posts.Id, ParentId, Count(*) AS Votings, OwnerDisplayName, Body, Score FROM Posts, Votes\nWHERE PostTypeId=2 and Votes.PostId = Posts.Id\nand VoteTypeId = 10\nGROUP BY Votes.PostId, Posts.Id, ParentId, OwnerDisplayName, Body, Score\nORDER BY Count(*) DESC"},{"QuerySetId":187290,"Title":"Get ViewCount On Posts User Contributed To","Description":null,"QueryBody":"SELECT DISTINCT (p2.id) AS \"Post Link\", p2.ViewCount FROM Posts AS p1 JOIN Posts AS p2 ON p1.ParentId = p2.Id ORDER BY p2.ViewCount","CreationDate":"2017-03-03 16:32:10","validated":false,"QueryBody_Original":"SELECT  DISTINCT(p2.id) as [Post Link], p2.ViewCount \nFROM Posts as p1\nJOIN Posts p2 ON p1.ParentId = p2.Id\norder by p2.ViewCount"},{"QuerySetId":187526,"Title":"Average last access, by reputation bucket (logarithmic)","Description":"Are veteran users going away?","QueryBody":"SELECT FLOOR(LOG10(Reputation) * 10) \/ 10 AS Rep, AVG(DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate)) AS \"Logarithm of reputation vs. avg days away\" FROM Users GROUP BY FLOOR(LOG10(Reputation) * 10) \/ 10 ORDER BY Rep","CreationDate":"2014-04-30 05:20:34","validated":false,"QueryBody_Original":"SELECT  \nfloor(log10(Reputation) * 10) \/ 10 as Rep, \navg(datediff(day, LastAccessDate, getdate())) as \"Logarithm of reputation vs. avg days away\"\nfrom Users\ngroup by floor(log10(Reputation) * 10) \/ 10 \norder by Rep asc"},{"QuerySetId":187771,"Title":"Top users by location Korea","Description":"List of users in 'Location' Korea, by reputation score. Forked from an original query by `Top users by location`.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.DisplayName, Users.WebsiteUrl, Users.Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%korea%') OR LOWER(Location) LIKE LOWER('%seoul%') ORDER BY Reputation DESC","CreationDate":"2018-11-25 15:40:00","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Users.Id AS [User Link],\n    Users.DisplayName,\n    Users.WebsiteUrl,\n    Users.Reputation\n\nFROM\n    Users\nWHERE\n\n    LOWER(Location) LIKE LOWER('%korea%') OR\n    LOWER(Location) LIKE LOWER('%seoul%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":188066,"Title":"Get All Posts : CSV","Description":null,"QueryBody":"SELECT Id, PostTypeId, AcceptedAnswerId, ParentId, CreationDate, OwnerUserId, Tags FROM Posts","CreationDate":"2014-05-01 04:14:32","validated":false,"QueryBody_Original":"SELECT  Id, PostTypeId, AcceptedAnswerId,ParentId,CreationDate,OwnerUserId,Tags From Posts"},{"QuerySetId":188067,"Title":"Get All Comments :  CSV","Description":null,"QueryBody":"SELECT Id, PostId, CreationDate, UserId FROM Comments","CreationDate":"2014-05-01 04:17:26","validated":false,"QueryBody_Original":"SELECT  Id, PostId, CreationDate, UserId FROM Comments"},{"QuerySetId":189837,"Title":"Age to Accepted Post  ","Description":null,"QueryBody":"SELECT Age FROM Posts, Users WHERE OwnerUserId = Posts.Id GROUP BY Age","CreationDate":"2014-05-04 02:09:59","validated":false,"QueryBody_Original":"SELECT  Age\nfrom Posts, Users\nwhere OwnerUserId = Posts.Id\ngroup by Age"},{"QuerySetId":190041,"Title":"Positive score posts per month since August 2011","Description":null,"QueryBody":"SELECT CAST(DATEADD(month, DATEDIFF(month, GETDATE(), p.CreationDate), GETDATE()) AS DATE) AS Month, COUNT(*) AS post_count FROM Posts AS p WHERE p.CreationDate >= '9-1-2011' AND p.Score >= 0 GROUP BY DATEDIFF(month, GETDATE(), p.CreationDate) ORDER BY Month","CreationDate":"2014-05-03 23:29:15","validated":false,"QueryBody_Original":"SELECT  cast (dateadd(month, DATEDIFF(month, getdate(), p.CreationDate), getdate()) as DATE) Month, \n       count(*) post_count\nfrom Posts p \nwhere\n    p.CreationDate >= '9-1-2011' and\n    p.Score >= 0\ngroup by DATEDIFF(month, getdate(), p.CreationDate)\norder by Month"},{"QuerySetId":190071,"Title":"Number of users answering or questioning.","Description":null,"QueryBody":"SELECT TIME_TO_STR(Posts.CreationDate, '%Y') AS Year, TIME_TO_STR(Posts.CreationDate, '%-M') AS Month, AVG(CAST(Users.Reputation AS INT)) AS AnsweringReputation FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 GROUP BY TIME_TO_STR(Posts.CreationDate, '%Y'), TIME_TO_STR(Posts.CreationDate, '%-M') ORDER BY TIME_TO_STR(Posts.CreationDate, '%Y'), TIME_TO_STR(Posts.CreationDate, '%-M')","CreationDate":"2014-05-04 05:34:27","validated":false,"QueryBody_Original":"SELECT \n        DATEPART(yyyy, Posts.CreationDate) as Year,\n        DATEPART(m, Posts.CreationDate) as Month,\n        AVG(CAST(Users.Reputation as BIGINT)) as AnsweringReputation\n    FROM Posts INNER JOIN Users on Posts.OwnerUserId = Users.Id\n    WHERE Posts.PostTypeId = 2\n    GROUP BY DATEPART(yyyy, Posts.CreationDate)\n           , DATEPART(m, Posts.CreationDate)\n    ORDER BY DATEPART(yyyy, Posts.CreationDate)\n           , DATEPART(m, Posts.CreationDate)"},{"QuerySetId":190298,"Title":"Top Display Names on Stack Overflow","Description":null,"QueryBody":"SELECT Id FROM Users WHERE LOWER(DisplayName) LIKE 'lucent'","CreationDate":"2019-12-01 02:50:01","validated":false,"QueryBody_Original":"SELECT  Id FROM Users\nWHERE LOWER(DisplayName) like 'lucent'"},{"QuerySetId":190319,"Title":"top 100 display names on stackoverflow","Description":null,"QueryBody":"SELECT DisplayName, COUNT(DisplayName) FROM Users GROUP BY DisplayName ORDER BY COUNT(DisplayName) DESC LIMIT 100","CreationDate":"2014-05-05 12:35:36","validated":false,"QueryBody_Original":"SELECT  TOP 100 DisplayName, COUNT(DisplayName) FROM Users\n  GROUP BY DisplayName\n  ORDER BY COUNT(DisplayName) DESC"},{"QuerySetId":190327,"Title":"Top 100 Display Names on Stack Overflow starting with 'Michael'","Description":null,"QueryBody":"SELECT DisplayName, COUNT(DisplayName) FROM Users WHERE DisplayName LIKE 'Michael P%' GROUP BY DisplayName ORDER BY COUNT(DisplayName) DESC LIMIT 100","CreationDate":"2014-05-05 13:27:01","validated":false,"QueryBody_Original":"SELECT  TOP 100 DisplayName, COUNT(DisplayName) \n  FROM Users\n  WHERE DisplayName LIKE 'Michael P%'\n  GROUP BY DisplayName\n  ORDER BY COUNT(DisplayName) DESC"},{"QuerySetId":190446,"Title":"questions with only the statement tag","Description":null,"QueryBody":"SELECT Title, Tags FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '<statement>'","CreationDate":"2014-05-05 22:44:57","validated":false,"QueryBody_Original":"SELECT  Title, Tags\nfrom Posts\nwhere PostTypeId = 1 and Tags like '<statement>'"},{"QuerySetId":190596,"Title":"Average questions per 1000 that are unanswered","Description":null,"QueryBody":"SELECT 1000 * (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND AnswerCount = 0) \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1)","CreationDate":"2017-10-27 13:13:58","validated":false,"QueryBody_Original":"SELECT  1000\n  * (SELECT count(*) from Posts where PostTypeId = 1 and AnswerCount = 0)\n  \/ (SELECT count(*) from Posts where PostTypeId = 1);"},{"QuerySetId":191714,"Title":"10k users who have never flagged, downvoted or reviewed a post","Description":null,"QueryBody":"SELECT l.Id AS \"User Link\", l.reputation AS Reputation FROM Users AS l WHERE NOT l.id IN (SELECT userid AS id FROM badges AS r WHERE r.name LIKE 'Citizen Patrol' OR r.name LIKE 'Custodian') AND l.reputation >= 10000 AND l.downvotes = 0 ORDER BY l.reputation DESC","CreationDate":"2014-05-07 10:53:22","validated":false,"QueryBody_Original":"SELECT  l.Id as [User Link], l.reputation as Reputation\nfrom Users l\nwhere l.id not in ( SELECT userid as id from badges r where r.name like 'Citizen Patrol' or\nr.name like 'Custodian')  and\nl.reputation >= 10000\nand l.downvotes=0\norder by l.reputation DESC"},{"QuerySetId":191753,"Title":"average time for obtaining accepted answers","Description":null,"QueryBody":"SELECT DATEDIFF(odp.CreationDate, pyt.CreationDate) AS roznica FROM Posts AS pyt, Posts AS odp WHERE pyt.AcceptedAnswerId = odp.Id AND pyt.Id = odp.ParentId AND DATEDIFF(odp.CreationDate, pyt.CreationDate) > 0 ORDER BY roznica","CreationDate":"2014-05-07 01:53:05","validated":false,"QueryBody_Original":"SELECT  \ndatediff(second,pyt.CreationDate,odp.CreationDate) as roznica\nfrom Posts pyt, Posts odp \nwhere\npyt.AcceptedAnswerId=odp.Id\nand\npyt.Id=odp.ParentId\nand datediff(second,pyt.CreationDate,odp.CreationDate)>0\norder by roznica ASC"},{"QuerySetId":192147,"Title":"Getting Posts with asp.net tags","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%asp.net%'","CreationDate":"2014-05-08 11:39:04","validated":false,"QueryBody_Original":"SELECT  * from Posts where Tags like '%asp.net%'"},{"QuerySetId":192323,"Title":"Posts by deleted users, chronologically","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.OwnerDisplayName, a.CreationDate FROM Posts AS a WHERE a.OwnerUserId IS NULL AND NOT a.OwnerDisplayName LIKE '%user%' ORDER BY a.CreationDate","CreationDate":"2014-05-08 20:35:06","validated":false,"QueryBody_Original":"SELECT  a.Id as [Post Link], a.OwnerDisplayName, a.CreationDate FROM Posts a\nWHERE a.OwnerUserId IS NULL AND a.OwnerDisplayName NOT LIKE '%user%'\nORDER BY a.CreationDate ASC"},{"QuerySetId":192353,"Title":"All posts for tags : SVM, Python, Machine Learning","Description":null,"QueryBody":"SELECT * FROM tags WHERE tagName LIKE '%rucksack%'","CreationDate":"2017-12-18 22:09:40","validated":false,"QueryBody_Original":"SELECT  * FROM tags\nwhere tagName like'%rucksack%'"},{"QuerySetId":192765,"Title":"List of tags starting with \"arcgis\"","Description":null,"QueryBody":"SELECT TagName FROM Tags WHERE TagName LIKE 'arcgis%'","CreationDate":"2014-05-10 00:38:10","validated":false,"QueryBody_Original":"SELECT  TagName from Tags\nwhere TagName like 'arcgis%';"},{"QuerySetId":193022,"Title":"count users with 0 downvotes","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u WHERE u.Reputation >= 3000 AND u.DownVotes = 0","CreationDate":"2014-05-10 17:45:22","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Users u\nWHERE u.Reputation >= 3000\n  AND u.DownVotes = 0"},{"QuerySetId":193243,"Title":"Hunting to close : questions seeking for recomendations and flag them efficiently","Description":"Questions asking for recommendations or any off-site resources are off-topic on StackOverflow as they tend to attract opinion-based answers, or spam.\r\nUse this query to edit to make them suitable for the site. I realize most of them can't be salvageable through editing.\r\n\r\nSo let's increase your helpful flag counter!","QueryBody":"SELECT Id AS \"Post Link\", COUNT(id) FROM posts WHERE ClosedDate IS NULL AND (LOWER(title) LIKE '%best tool%') OR (LOWER(title) LIKE 'is there a tool%') OR (LOWER(title) LIKE '%is there an utility%') OR (LOWER(title) LIKE '%is there a utility%') OR (LOWER(title) LIKE '%best library%') OR (LOWER(title) LIKE '%any library%') OR (LOWER(title) LIKE '%any tool%') OR (LOWER(title) LIKE '%any utility%') GROUP BY id ORDER BY COUNT(id) DESC","CreationDate":"2014-05-11 14:04:39","validated":false,"QueryBody_Original":"SELECT \n   Id as [Post Link],\n   count(id)\nfrom posts\nwhere ClosedDate IS NULL\n  AND (LOWER(title) like '%best tool%') OR (LOWER(title) like 'is there a tool%') or (LOWER(title) like '%is there an utility%') or (LOWER(title) like '%is there a utility%') or (LOWER(title) like '%best library%') or (LOWER(title) like '%any library%') or (LOWER(title) like '%any tool%') or (LOWER(title) like '%any utility%')\ngroup by id\norder by count(id) desc;"},{"QuerySetId":193372,"Title":"Average answer time (in days) for quality questions in 2013","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS p, Posts AS p2 WHERE p.posttypeid = 1 AND p.score > 5 AND p.creationdate > '2012-01-01' AND p.creationdate < '2013-01-01' AND NOT p.acceptedanswerid IS NULL AND p.acceptedanswerid = p2.id AND DATEDIFF(p2.creationdate, p.creationdate) < 1","CreationDate":"2014-05-12 11:24:04","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Posts p, Posts p2 \nwhere p.posttypeid=1 \n  and p.score>5\n  and p.creationdate>'2012-01-01'\n  and p.creationdate<'2013-01-01'\n  and p.acceptedanswerid is not null\n  and p.acceptedanswerid=p2.id\n  and datediff(month, p.creationdate, p2.creationdate) < 1"},{"QuerySetId":193730,"Title":"Developers who are interested in JavaScript","Description":null,"QueryBody":"SELECT DisplayName, Reputation FROM Users ORDER BY Reputation DESC","CreationDate":"2014-05-12 18:43:10","validated":false,"QueryBody_Original":"SELECT  DisplayName, Reputation from Users order by Reputation DESC"},{"QuerySetId":193759,"Title":"How many unique answerers per month","Description":null,"QueryBody":"SELECT MIN(CreationDate), COUNT(*) AS Count, COUNT(DISTINCT OwnerUserId) AS UniqueUsers FROM Posts WHERE PostTypeId = 2 AND Score = 0 GROUP BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m') ORDER BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m')","CreationDate":"2014-05-14 03:38:34","validated":false,"QueryBody_Original":"SELECT \n  min(CreationDate),\n  count(*) Count,\n  COUNT(distinct OwnerUserId) UniqueUsers\nfrom Posts where PostTypeId = 2\nAND Score = 0\ngroup by datepart(year, CreationDate), datepart(month, CreationDate)\norder by datepart(year, CreationDate), datepart(month, CreationDate)"},{"QuerySetId":193873,"Title":"Low quality posts vs high quality posts with system generated user names.","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS p INNER JOIN Users AS u ON p.OwnerDisplayName = u.DisplayName WHERE DisplayName LIKE '%User%'","CreationDate":"2014-05-13 05:22:26","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM \nPosts p INNER JOIN\nUsers u ON p.OwnerDisplayName = u.DisplayName\nWHERE DisplayName LIKE '%User%'"},{"QuerySetId":193881,"Title":"Top Haskell Questions for Last Week","Description":"This returns the top questions tagged Haskell for the previous week","QueryBody":"SELECT * FROM Posts AS P WHERE P.Tags LIKE '%haskell%'","CreationDate":"2014-05-26 06:43:34","validated":false,"QueryBody_Original":"SELECT  *\nFROM Posts P\nWHERE P.Tags like '%haskell%'"},{"QuerySetId":194059,"Title":"Questions with outstanding close votes by tag","Description":null,"QueryBody":"SELECT * FROM (SELECT Posts.Id AS \"Post Link\", AVG(Posts.Score) AS \"Score\", COUNT(*) AS \"Close Votes\", MAX(Votes.CreationDate) AS \"Last Vote\", MIN(Votes.CreationDate) AS \"First Vote\" FROM Posts JOIN Votes ON Posts.Id = Votes.PostId WHERE Votes.VoteTypeId = 6 AND Posts.ClosedDate IS NULL AND Posts.Tags LIKE '%<##Tag##>%' GROUP BY Posts.Id) AS t WHERE \"Close Votes\" > 3 ORDER BY \"Last Vote\" DESC","CreationDate":"2014-05-14 07:44:21","validated":false,"QueryBody_Original":"SELECT  * FROM (\n  SELECT\n    Posts.Id AS [Post Link],\n    avg(Posts.Score) AS [Score],\n    count(*) AS [Close Votes],\n    max(Votes.CreationDate) AS [Last Vote],\n    min(Votes.CreationDate) AS [First Vote]  \n  FROM Posts\n  JOIN Votes ON Posts.Id = Votes.PostId\n  WHERE\n    Votes.VoteTypeId = 6\n    AND Posts.ClosedDate IS NULL\n    AND Posts.Tags LIKE '%<##Tag##>%'  \n  GROUP BY Posts.Id\n) AS t \nWHERE [Close Votes] > 3\norder by [Last Vote] desc"},{"QuerySetId":194194,"Title":"Search for ga-beacon.appspot.com 1-pixel tracking images","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%https:\/\/ga-beacon.appspot.com\/UA-%' AND OwnerUserId = 3555155","CreationDate":"2014-05-14 17:21:50","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts\nWHERE Body LIKE '%https:\/\/ga-beacon.appspot.com\/UA-%'\nAND OwnerUserId = 3555155"},{"QuerySetId":194537,"Title":"Open Questions with My Tags","Description":null,"QueryBody":"SELECT 'http:\/\/stackoverflow.com\/questions\/' + CAST(p.Id AS TEXT(30)) AS url, p.Title, p.Tags, p.* FROM Posts AS p WHERE Tags LIKE '%c#%' AND Tags LIKE '%linq%' AND AnswerCount = 0 AND CreationDate > '1\/1\/2014' AND ClosedDate IS NULL ORDER BY CreationDate DESC","CreationDate":"2014-05-16 03:19:31","validated":false,"QueryBody_Original":"SELECT  \n'http:\/\/stackoverflow.com\/questions\/'+convert(varchar,p.Id) as url, \np.Title,\np.Tags,\np.* from Posts p\nwhere Tags like '%c#%' and Tags like '%linq%'\nand AnswerCount = 0\nand CreationDate > '1\/1\/2014'\nand ClosedDate is null\norder by CreationDate desc"},{"QuerySetId":194942,"Title":"Progression of comments referring to CodeReview","Description":"See how many posts per day with comments referring to CodeReview.","QueryBody":"SELECT CAST(CreationDate AS DATE) AS CreationDate, COUNT(pp.CAmount) AS Amount FROM (SELECT PostId, COUNT(*) AS CAmount FROM Comments WHERE UPPER(Text) LIKE '%CODEREVIEW%' GROUP BY PostId) AS pp RIGHT OUTER JOIN Posts ON pp.PostId = Posts.Id GROUP BY CAST(CreationDate AS DATE) ORDER BY CreationDate","CreationDate":"2014-05-18 04:34:21","validated":false,"QueryBody_Original":"SELECT  \n      CAST(CreationDate AS DATE) AS CreationDate, COUNT(pp.CAmount) AS Amount\nFROM \n      (SELECT PostId, COUNT(*) AS CAmount\n      FROM Comments \n      WHERE \n          UPPER(Text) LIKE '%CODEREVIEW%'\n      GROUP BY \n      PostId) As pp \nRIGHT OUTER JOIN \n      Posts ON pp.PostId = Posts.Id\nGROUP BY \n      CAST(CreationDate AS DATE)\nORDER BY \n      CreationDate"},{"QuerySetId":195686,"Title":"Threads with the largest number of comments","Description":null,"QueryBody":"SELECT COALESCE(p.ParentId, p.Id) AS \"Post Link\", SUM(p.CommentCount) AS \"#Comments\", MAX(CASE p.PostTypeId WHEN 1 THEN p.CommentCount ELSE 0 END) AS \"#Q com\", MAX(p.AnswerCount) AS \"#Ans\", MAX(p.ViewCount) AS \"Views\", MAX(CASE p.PostTypeId WHEN 1 THEN p.Score ELSE -32767 END) AS \"Q score\", SUM(p.Score) AS \"Total score\", MIN(p.CreationDate) AS \"Q date\" FROM Posts AS p GROUP BY COALESCE(p.ParentId, p.Id) ORDER BY \"#Comments\" DESC LIMIT 100","CreationDate":"2014-05-20 04:17:14","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  IsNull(p.ParentId, p.Id) AS [Post Link],\n  Sum(p.CommentCount) AS [#Comments],\n  Max(CASE p.PostTypeId WHEN 1 THEN p.CommentCount ELSE 0 END) AS [#Q com],\n  Max(p.AnswerCount) AS [#Ans],\n  Max(p.ViewCount) AS [Views],\n  Max(CASE p.PostTypeId WHEN 1 THEN p.Score ELSE -32767 END) AS [Q score],\n  Sum(p.Score) AS [Total score],\n  Min(p.CreationDate) AS [Q date]\nFROM Posts p\nGROUP BY IsNull(p.ParentId, p.Id)\nORDER BY [#Comments] DESC"},{"QuerySetId":195817,"Title":"Largest fraction of CW posts","Description":null,"QueryBody":"SELECT SUM(1) AS tp, SUM(CASE WHEN p.CommunityOwnedDate IS NULL THEN 0 ELSE 1 END) AS cwp, owneruserid FROM posts AS p GROUP BY owneruserid","CreationDate":"2014-05-20 07:56:39","validated":false,"QueryBody_Original":"SELECT  sum(1) as tp, sum(iif(p.CommunityOwnedDate is null, 0, 1)) as cwp, owneruserid \nfrom posts p \ngroup by owneruserid"},{"QuerySetId":195822,"Title":"Users with greatest fraction of CW answers","Description":null,"QueryBody":"SELECT COUNT(*), SUM(CASE WHEN communityowneddate IS NULL THEN 0 ELSE 1 END), owneruserid FROM posts GROUP BY owneruserid","CreationDate":"2014-05-20 08:03:18","validated":false,"QueryBody_Original":"SELECT  count(*),\nsum(iif(communityowneddate is null, 0, 1)),\nowneruserid\nfrom posts\ngroup by owneruserid"},{"QuerySetId":195884,"Title":"WordPress Users from Pune (on stackoverflow)","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE UPPER(Location) LIKE '%PUNE%' AND UPPER(AboutMe) LIKE '%WORDPRESS%' ORDER BY Reputation DESC","CreationDate":"2014-05-20 11:57:38","validated":false,"QueryBody_Original":"SELECT  Id [User Link], *\nfrom Users\nwhere UPPER(Location) like '%PUNE%'  AND UPPER(AboutMe) like '%WORDPRESS%'\norder by Reputation desc"},{"QuerySetId":195885,"Title":"WordPress Users from India (on stackoverflow)","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE UPPER(Location) LIKE '%INDIA%' AND UPPER(AboutMe) LIKE '%WORDPRESS%' ORDER BY Reputation DESC","CreationDate":"2014-05-20 11:58:46","validated":false,"QueryBody_Original":"SELECT  Id [User Link], *\nfrom Users\nwhere UPPER(Location) like '%INDIA%'  AND UPPER(AboutMe) like '%WORDPRESS%'\norder by Reputation desc"},{"QuerySetId":195887,"Title":"PHP Users from Pune (on stackoverflow)","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE UPPER(Location) LIKE '%INDIA%' AND UPPER(AboutMe) LIKE '%PHP%' ORDER BY Reputation DESC","CreationDate":"2016-01-25 15:26:54","validated":false,"QueryBody_Original":"SELECT  Id [User Link], *\nfrom Users\nwhere UPPER(Location) like '%INDIA%'  AND UPPER(AboutMe) like '%PHP%'\norder by Reputation desc"},{"QuerySetId":196172,"Title":"Posts with `try this link` in it","Description":null,"QueryBody":"SELECT id AS \"Post Link\", CreationDate FROM posts WHERE body LIKE '%try this link%' AND creationdate > '2014-01-01 00:00:00' ORDER BY creationDate DESC","CreationDate":"2014-05-21 17:56:00","validated":false,"QueryBody_Original":"SELECT  id AS [Post Link], CreationDate\nfrom posts\nwhere body like '%try this link%'\nAND creationdate > '2014-01-01 00:00:00'\norder by creationDate desc"},{"QuerySetId":196173,"Title":"Questions that have answers with a higher score","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts AS Question WHERE PostTypeId = 1 AND (SELECT Score FROM Posts WHERE PostTypeId = 2 AND ParentId = Question.Id ORDER BY Score DESC LIMIT 1) > Question.Score \/ 2","CreationDate":"2014-05-21 18:36:18","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts AS Question Where PostTypeId = 1 AND \n(SELECT TOP 1 Score FROM Posts WHERE PostTypeId = 2 AND ParentId = Question.Id\nORDER BY Score DESC) > Question.Score\/2"},{"QuerySetId":196175,"Title":"Questions that have double the score of the highest-voted answer","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts AS Question WHERE PostTypeId = 1 AND (SELECT Score FROM Posts WHERE PostTypeId = 2 AND ParentId = Question.Id ORDER BY Score DESC LIMIT 1) * 2 <= Question.Score","CreationDate":"2014-05-21 18:15:25","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts AS Question Where PostTypeId = 1 AND \n(SELECT TOP 1 Score FROM Posts WHERE PostTypeId = 2 AND ParentId = Question.Id\nORDER BY Score DESC) * 2 <= Question.Score"},{"QuerySetId":196176,"Title":"Average score question:score highest-voted answer ratio","Description":null,"QueryBody":"SELECT Score \/ (SELECT Score FROM Posts WHERE PostTypeId = 2 AND ParentId = Question.Id AND Score > 0 ORDER BY Score DESC LIMIT 1) FROM Posts AS Question WHERE PostTypeId = 1 AND Score > 0","CreationDate":"2014-05-21 18:29:18","validated":false,"QueryBody_Original":"SELECT  Score \/ (SELECT TOP 1 Score FROM Posts WHERE PostTypeId = 2 \nAND ParentId = Question.Id AND Score > 0 ORDER BY Score DESC)\nFROM Posts AS Question WHERE PostTypeId = 1 AND Score > 0"},{"QuerySetId":196346,"Title":"Stackoverflow users from Pune with PHP and WordPress","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE UPPER(Location) LIKE '%PUNE%' AND (UPPER(AboutMe) LIKE '%PHP%' OR UPPER(AboutMe) LIKE '%WORDPRESS%') AND WebsiteUrl LIKE '%http:%' ORDER BY Reputation DESC","CreationDate":"2014-05-22 17:34:40","validated":false,"QueryBody_Original":"SELECT  Id [User Link], *\nfrom Users\nwhere UPPER(Location) like '%PUNE%' and (UPPER(AboutMe) like '%PHP%' OR UPPER(AboutMe) like '%WORDPRESS%') and WebsiteUrl like '%http:%' \norder by Reputation desc"},{"QuerySetId":196398,"Title":"High voted answers on closed\/low voted questions","Description":null,"QueryBody":"SELECT questions.Id AS \"Post Link\", answers.Id AS \"Post Link\" FROM Posts AS answers INNER JOIN Posts AS questions ON questions.Id = answers.ParentId AND questions.Score <= -3 AND NOT questions.ClosedDate IS NULL WHERE answers.Score >= 3","CreationDate":"2014-05-22 17:39:40","validated":false,"QueryBody_Original":"SELECT \n  questions.Id [Post Link],\n  answers.Id [Post Link]\nfrom Posts answers\ninner join Posts questions on\n  questions.Id = answers.ParentId and\n  questions.Score <= -3 and\n  questions.ClosedDate is not null\nwhere answers.Score >= 3"},{"QuerySetId":196452,"Title":"Top users rep per x weeks","Description":null,"QueryBody":"SELECT SUM(pst.score), QA, usr.displayname, SUM(upv) AS uv, SUM(downv) AS dv FROM (SELECT p.id AS postid, CASE WHEN p.posttypeid = 1 THEN 'Q' ELSE 'A' END AS QA, MIN(p.owneruserid) AS uid, COUNT(*) AS upv, 0 AS downv FROM posts AS p INNER JOIN votes AS v ON v.postid = p.id WHERE v.votetypeid = 2 GROUP BY p.posttypeid, p.id UNION SELECT p.id, CASE WHEN p.posttypeid = 1 THEN 'Q' ELSE 'A' END AS QA, MIN(p.owneruserid), 0 AS upv2, COUNT(*) AS dv2 FROM posts AS p INNER JOIN votes AS v ON v.postid = p.id WHERE v.votetypeid = 3 GROUP BY p.posttypeid, p.id) AS fact INNER JOIN users AS usr ON fact.uid = usr.id INNER JOIN posts AS pst ON fact.postid = pst.id GROUP BY qa, usr.displayname ORDER BY usr.displayname, QA","CreationDate":"2014-05-22 22:22:02","validated":false,"QueryBody_Original":"SELECT  sum(pst.score)\n      , QA\n      , usr.displayname\n      , sum(upv) as uv\n      , sum(downv) as dv\nfrom (\nSELECT  p.id as postid\n       , case when p.posttypeid = 1 then 'Q' else 'A' end as QA\n       , min(p.owneruserid) as uid\n       , count(*) as upv\n       , 0 as downv\nfrom posts p \ninner join votes v on v.postid = p.id\nwhere v.votetypeid = 2\ngroup by p.posttypeid,  p.id\nunion\nSELECT p.id\n       , case when p.posttypeid = 1 then 'Q' else 'A' end as QA\n       , min(p.owneruserid)\n       , 0 as upv2\n       , count(*)  as dv2\nfrom posts p \ninner join votes v on v.postid = p.id\nwhere v.votetypeid = 3\ngroup by p.posttypeid, p.id\n) as fact\ninner join users usr on fact.uid = usr.id\ninner join posts pst on fact.postid = pst.id\ngroup by qa, usr.displayname\norder by usr.displayname, QA"},{"QuerySetId":196599,"Title":"I have the same problem","Description":null,"QueryBody":"SELECT id AS \"Post Link\", CreationDate FROM posts WHERE body LIKE '%I have the same problem%' AND CreationDate > '2014-01-01 00:00:00'","CreationDate":"2014-05-23 15:43:17","validated":false,"QueryBody_Original":"SELECT  id AS [Post Link], CreationDate from posts\nwhere body LIKE '%I have the same problem%'\nAND CreationDate > '2014-01-01 00:00:00'"},{"QuerySetId":196615,"Title":"Questions per day on StackExchange","Description":null,"QueryBody":"SELECT STR_TO_DATE(CreationDate, '%m\/%d\/%Y') AS \"day\", COUNT(*) AS \"count\" FROM Posts \/* query questions only -- *\/\/* cut off private beta -- *\/  WHERE PostTypeId = 1 AND STR_TO_DATE(CreationDate, '%m\/%d\/%Y') > '2016-02-01 00:00:00' GROUP BY STR_TO_DATE(CreationDate, '%m\/%d\/%Y') ORDER BY STR_TO_DATE(CreationDate, '%m\/%d\/%Y')","CreationDate":"2016-04-27 12:47:21","validated":false,"QueryBody_Original":"SELECT  CONVERT(DATE, CreationDate, 101) AS [day], COUNT(*) as [count]\nFROM Posts\n\n -- query questions only --\nWHERE PostTypeId = 1\n\n -- cut off private beta --\nAND CONVERT(DATE, CreationDate, 101) > '2016-02-01 00:00:00'\n\nGROUP BY CONVERT(DATE, CreationDate, 101)\nORDER BY CONVERT(DATE, CreationDate, 101)"},{"QuerySetId":196620,"Title":"Users located in Kansas or Missouri or Arkansas","Description":null,"QueryBody":"SELECT displayName, Reputation, WebsiteUrl, Location, AboutMe FROM Users WHERE UPPER(Location) LIKE '%KANSAS%' OR UPPER(Location) LIKE '% KS' OR UPPER(Location) LIKE '% KS %' OR UPPER(Location) = 'KS' UNION SELECT displayName, Reputation, WebsiteUrl, Location, AboutMe FROM Users WHERE UPPER(Location) LIKE '%MISSOURI%' OR UPPER(Location) LIKE '% MO' OR UPPER(Location) LIKE '% MO %' OR UPPER(Location) = 'MO' UNION SELECT displayName, Reputation, WebsiteUrl, Location, AboutMe FROM Users WHERE UPPER(Location) LIKE '%ARKANSAS%' OR UPPER(Location) LIKE '% AR' OR UPPER(Location) LIKE '% AR %' OR UPPER(Location) = 'AR' ORDER BY Reputation DESC","CreationDate":"2014-11-26 23:06:56","validated":false,"QueryBody_Original":"SELECT  displayName, Reputation, WebsiteUrl, Location, AboutMe from Users \nwhere upper(Location) like '%KANSAS%'\nOR upper(Location) like '% KS'\nOR upper(Location) like '% KS %' \nOR upper(Location) = 'KS' \nunion\nSELECT displayName, Reputation, WebsiteUrl, Location, AboutMe from Users \nwhere upper(Location) like '%MISSOURI%' \nOR upper(Location) like '% MO'\nOR upper(Location) like '% MO %' \nOR upper(Location) = 'MO' \nunion\nSELECT displayName, Reputation, WebsiteUrl, Location, AboutMe from Users \nwhere upper(Location) like '%ARKANSAS%' \nOR upper(Location) like '% AR'\nOR upper(Location) like '% AR %' \nOR upper(Location) = 'AR' \norder by Reputation desc"},{"QuerySetId":196670,"Title":"La query pi\u00f9 figa :-)","Description":null,"QueryBody":"SELECT p.id, SUM(CASE WHEN v.voteTypeid = 2 THEN 1 ELSE -1 END) AS total, SUM(CASE WHEN v.voteTypeid = 2 THEN 1 ELSE 0 END) AS up, SUM(CASE WHEN v.voteTypeid = 3 THEN 1 ELSE 0 END) AS down FROM Votes AS v JOIN Posts AS p ON v.postid = p.id WHERE p.PostTypeId = 2 AND (v.VoteTypeId = 2 OR v.voteTypeId = 3) GROUP BY p.id ORDER BY total DESC","CreationDate":"2014-05-23 20:56:25","validated":false,"QueryBody_Original":"SELECT  p.id, sum(IIF(v.voteTypeid=2,1,-1)) as total,\nsum(IIF(v.voteTypeid=2,1,0)) as up,\nsum(IIF(v.voteTypeid=3,1,0)) as down\nfrom Votes v join Posts p on v.postid=p.id\nwhere p.PostTypeId=2 and (v.VoteTypeId=2 or v.voteTypeId=3)\ngroup by p.id\norder by total desc"},{"QuerySetId":196749,"Title":"CLEANUP: find furigana that uses curly braces","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p WHERE p.Body LIKE N'%[{\uff5b][\u3042-\u3093\u30a2-\u30f3]%'","CreationDate":"2015-04-23 01:05:14","validated":false,"QueryBody_Original":"SELECT \n  p.Id AS [Post Link]\nFROM\n  Posts p\nWHERE\n  p.Body LIKE N'%[{\uff5b][\u3042-\u3093\u30a2-\u30f3]%'"},{"QuerySetId":196915,"Title":"Posts closed by Laszlo Papp","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", \"text\" FROM posthistory WHERE posthistorytypeid = 10 AND \"text\" LIKE '%\"Id\":578411,%'","CreationDate":"2014-05-26 00:47:29","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link] , [text] \nfrom posthistory\nwhere posthistorytypeid = 10\nand [text] like '%\"Id\":578411,%'"},{"QuerySetId":197058,"Title":"questions tagged qt over the years","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"year\", SUM(CASE WHEN PostHistoryTypeId = 3 THEN 1 ELSE 0 END) AS InitialTags, SUM(CASE WHEN PostHistoryTypeId = 6 THEN 1 ELSE 0 END) AS EditedTags, SUM(1) AS TotalQuestionsWithTag FROM posthistory\/* and creationdate between '2013-01-01'  and '2013-12-31' *\/  WHERE PostHistoryTypeId IN (3 \/* initial tags *\/, 6 \/* edit tags *\/) AND \"text\" LIKE '%<##tag##>%' GROUP BY YEAR(creationdate)","CreationDate":"2014-05-27 01:09:20","validated":false,"QueryBody_Original":"SELECT  year(creationdate) as [year]\n, sum(case when PostHistoryTypeId = 3 then 1 else 0 end) as InitialTags\n, sum(case when PostHistoryTypeId = 6 then 1 else 0 end) as EditedTags\n, sum(1) as TotalQuestionsWithTag\nfrom posthistory\nwhere PostHistoryTypeId in ( 3 -- initial tags\n, 6  -- edit tags\n-- , 9 -- rolbacktags\n)\n-- and creationdate between '2013-01-01'  and '2013-12-31'\nand [text] like '%<##tag##>%'\ngroup by year(creationdate)"},{"QuerySetId":197171,"Title":"select * from  *","Description":null,"QueryBody":"SELECT * FROM posts","CreationDate":"2014-05-27 13:52:20","validated":false,"QueryBody_Original":"SELECT  * from posts"},{"QuerySetId":197438,"Title":"select all question which tags \"java\"","Description":null,"QueryBody":"SELECT * FROM posts WHERE tags LIKE '%<java>%' AND PostTypeId = 1 AND AcceptedAnswerId <> 0","CreationDate":"2014-05-28 11:52:20","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE tags LIKE '%<java>%' AND PostTypeId=1 AND AcceptedAnswerId<>0"},{"QuerySetId":197453,"Title":"Top 25 Comments by Score","Description":null,"QueryBody":"SELECT \"C\".\"Score\", \"C\".\"PostId\" AS \"Post Link\", \"C\".\"UserId\" AS \"User Link\", \"C\".\"Id\" AS \"Comment Link\", \"C\".\"CreationDate\" FROM \"Comments\" AS \"C\" INNER JOIN \"Users\" AS \"U\" ON (\"C\".\"UserId\" = \"U\".\"Id\") ORDER BY \"C\".\"Score\" DESC LIMIT 25","CreationDate":"2015-01-05 21:45:50","validated":false,"QueryBody_Original":"SELECT  TOP 25\n   [C].[Score]\n  ,[C].[PostId] AS [Post Link]\n  ,[C].[UserId] AS [User Link]\n  ,[C].[Id] AS [Comment Link]\n  ,[C].[CreationDate]\nFROM [Comments] AS [C]\nINNER JOIN [Users] AS [U]\n  ON ([C].[UserId] = [U].[Id])\nORDER BY [C].[Score] DESC;"},{"QuerySetId":197515,"Title":"Top SO in South Carolina","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%charleston, sc%' OR LOWER(Location) LIKE '%south carolina%' ORDER BY Reputation DESC","CreationDate":"2014-05-28 20:44:19","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link],Reputation,Location\nFROM Users\nWHERE lower(Location) LIKE '%charleston, sc%'\n   OR lower(Location) LIKE '%south carolina%'\nORDER BY Reputation DESC"},{"QuerySetId":197872,"Title":"Eric Lippert's comments about precedence","Description":null,"QueryBody":"SELECT * FROM comments INNER JOIN posts ON comments.postid = posts.id WHERE userid = 88656 AND body LIKE '%precedence%' ORDER BY comments.creationdate DESC","CreationDate":"2014-05-30 09:22:03","validated":false,"QueryBody_Original":"SELECT  * from comments\ninner join posts on comments.postid = posts.id\nwhere userid = 88656 and body like '%precedence%'\norder by comments.creationdate desc"},{"QuerySetId":198155,"Title":"Users who commented on all theirs posts","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE NOT EXISTS(SELECT * FROM posts WHERE posts.owneruserid = users.id AND NOT EXISTS(SELECT * FROM comments WHERE comments.postid = posts.id AND comments.userid = users.id))","CreationDate":"2014-06-01 00:58:54","validated":false,"QueryBody_Original":"SELECT  DisplayName from  Users \nwhere not exists (SELECT * from posts\nwhere posts.owneruserid=users.id\nand not exists (SELECT * from comments \nwhere comments.postid=posts.id and comments.userid=users.id)\n)"},{"QuerySetId":198158,"Title":"Most viseted post for each user","Description":null,"QueryBody":"SELECT users.DisplayName, posts.Title, posts.ViewCount FROM users INNER JOIN posts ON posts.owneruserid = users.id WHERE posts.ViewCount = (SELECT MAX(p.ViewCount) FROM posts AS p WHERE p.owneruserid = users.id GROUP BY p.owneruserid) ORDER BY ViewCount","CreationDate":"2014-06-01 09:58:44","validated":false,"QueryBody_Original":"SELECT  users.DisplayName , posts.Title ,posts.ViewCount from users inner join posts on posts.owneruserid=users.id\n where posts.ViewCount=(\n SELECT max(p.ViewCount) from  posts as p where\n p.owneruserid=users.id\n group by p.owneruserid)\n order by ViewCount"},{"QuerySetId":198542,"Title":"All posts by deleted users","Description":null,"QueryBody":"SELECT p.Id AS \"Post Id\", p.OwnerDisplayName, p.Score, CONCAT(p.Title, q.Title) AS Title, CONCAT(p.Tags, q.Tags) AS Tags FROM Posts AS p LEFT OUTER JOIN Posts AS q ON p.ParentId = q.Id WHERE p.OwnerUserId IS NULL AND p.Score > 0 ORDER BY p.CreationDate","CreationDate":"2014-06-02 21:26:16","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Id], p.OwnerDisplayName, p.Score, CONCAT(p.Title, q.Title) as Title, CONCAT(p.Tags, q.Tags) as Tags FROM Posts p\nLEFT OUTER JOIN Posts q\nON p.ParentId=q.Id \nWHERE p.OwnerUserId IS NULL AND p.Score>0\nORDER BY p.CreationDate ASC"},{"QuerySetId":198576,"Title":"Number of Tags per day for one tag","Description":null,"QueryBody":"SELECT * FROM Tags LIMIT 20","CreationDate":"2014-06-03 01:21:05","validated":false,"QueryBody_Original":"SELECT  TOP 20 \n    *\n FROM Tags"},{"QuerySetId":198713,"Title":"Syrian Users of Stack Overflow","Description":"This query tries to show Syrian users of StackOverflow. It makes best guess by looking into the Location field and comparing it with a number of possible values related to Syria.","QueryBody":"SELECT Id, DisplayName, Reputation, CreationDate, Location FROM Users WHERE LOWER(Location) LIKE '%syria%' OR LOWER(Location) LIKE '%damascus%' OR LOWER(Location) LIKE '%aleppo%' ORDER BY Reputation DESC","CreationDate":"2014-06-03 23:27:13","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, Reputation, CreationDate, Location\nFrom Users\nWhere lower(Location) Like '%syria%'\nOr lower(Location) Like '%damascus%'\nOr lower(Location) Like '%aleppo%'\nOrder By Reputation Desc;"},{"QuerySetId":198937,"Title":"SELECT TOP 150 u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes FROM Users u WHERE","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes FROM Users AS u WHERE u.Location LIKE '%Portugal%' GROUP BY u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes ORDER BY Reputation DESC LIMIT 150","CreationDate":"2014-06-04 13:50:26","validated":false,"QueryBody_Original":"SELECT  TOP 150 u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes\nFROM Users u\nWHERE u.Location like '%Portugal%'\nGROUP BY u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes\nORDER BY Reputation DESC;"},{"QuerySetId":199236,"Title":"StackOverflow tags weekdays vs weekends","Description":null,"QueryBody":"SELECT * FROM tags WHERE count > 1000 ORDER BY count DESC","CreationDate":"2018-03-15 08:27:56","validated":false,"QueryBody_Original":"SELECT  * from tags\n\nwhere count > 1000\n\norder by count desc"},{"QuerySetId":199372,"Title":"Amount of reputation from edits by Community","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%fremont%' OR UPPER(Location) LIKE '%FREMONT%' OR Location LIKE '%fremont%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2017-08-30 06:24:33","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%fremont%'\n    OR UPPER(Location) LIKE '%FREMONT%'\n    or Location like '%fremont%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":199852,"Title":"Negatively scored answers that have been recently undeleted","Description":null,"QueryBody":"SELECT e.PostId AS \"Post Link\", p.Score, e.CreationDate AS \"Undeletion Date\", p.Body FROM PostHistory AS e INNER JOIN Posts AS p ON e.PostId = p.Id WHERE p.PostTypeId = 2 AND p.Score < 0 AND e.PostHistoryTypeId = 13 ORDER BY e.CreationDate DESC","CreationDate":"2014-06-09 02:52:23","validated":false,"QueryBody_Original":"SELECT  e.PostId as [Post Link], p.Score, e.CreationDate as [Undeletion Date], p.Body from PostHistory e\nINNER JOIN Posts p  \non e.PostId = p.Id\nWHERE p.PostTypeId = 2 AND p.Score<0 AND e.PostHistoryTypeId = 13 \nORDER BY e.CreationDate DESC"},{"QuerySetId":199871,"Title":"Undeleted answers that were deleted from review","Description":null,"QueryBody":"SELECT e.PostId AS \"Post Link\", p.Score, p.CreationDate AS \"Creation Date\", e.CreationDate AS \"Undeletion Date\" FROM PostHistory AS e INNER JOIN Posts AS p ON p.Id = e.PostId WHERE e.PostHistoryTypeId = 13 AND p.PostTypeId = 2 AND NOT p.Id IN (SELECT f.PostId FROM PostHistory AS f WHERE f.PostHistoryTypeId = 12) AND p.Score > 0 ORDER BY e.CreationDate DESC","CreationDate":"2015-03-05 22:55:48","validated":false,"QueryBody_Original":"SELECT  e.PostId as [Post Link], p.Score, p.CreationDate as [Creation Date], e.CreationDate as [Undeletion Date] \nfrom PostHistory e \ninner join Posts p on p.Id=e.PostId\nwhere e.PostHistoryTypeId = 13 and p.PostTypeId=2 and p.Id not in (\nSELECT f.PostId from PostHistory f  \nwhere f.PostHistoryTypeId = 12 )\nand p.Score > 0\norder by e.CreationDate desc"},{"QuerySetId":200149,"Title":"Comment Count Since May 1st, 2014 by User","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS \"Comments\" FROM Comments WHERE CreationDate >= 2014 - 05 - 01 GROUP BY UserId ORDER BY COUNT(*) DESC","CreationDate":"2014-06-10 07:58:10","validated":false,"QueryBody_Original":"SELECT  UserId AS [User Link], COUNT(*) AS [Comments]\nFROM Comments\nWHERE CreationDate >= 2014-05-01\nGROUP BY UserId\nORDER By COUNT(*) Desc"},{"QuerySetId":200389,"Title":"Question titles by last non-punctuation character","Description":"Experimenting around\r\nhttp:\/\/meta.japanese.stackexchange.com\/questions\/566\/question-is-inacessible-due-to-invalid-utf-8-character-in-a-title\r\nhttp:\/\/meta.japanese.stackexchange.com\/questions\/899\/redirect-problem-for-a-specific-question\r\nhttp:\/\/meta.stackexchange.com\/questions\/233850\/redirect-loop-after-editing-a-question-title-ending-with-no-break-space-questio\r\n","QueryBody":"SELECT MIN(Id) AS \"Post Link\", LEFT(RIGHT(Title, PATINDEX('[^?.]', REVERSE(Title)) + 1), 1) AS \"Character\" FROM Posts WHERE PostTypeId = 1 GROUP BY LEFT(RIGHT(Title, PATINDEX('[^?.]', REVERSE(Title)) + 1), 1) ORDER BY \"Character\"","CreationDate":"2014-06-11 02:14:15","validated":false,"QueryBody_Original":"SELECT \n  Min(Id) AS [Post Link],\n  Left(Right(Title, PatIndex('[^?.]', Reverse(Title)) + 1), 1) AS [Character]\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY Left(Right(Title, PatIndex('[^?.]', Reverse(Title)) + 1), 1)\nORDER BY [Character] ASC"},{"QuerySetId":200398,"Title":"posts related with Java in 2011","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate < '2011-01-02' AND CreationDate > '2011-01-01'","CreationDate":"2014-06-11 03:55:48","validated":false,"QueryBody_Original":"SELECT  * from Posts where CreationDate < '2011-01-02' and  CreationDate > '2011-01-01'"},{"QuerySetId":200459,"Title":"select * from users where Location is 'Greece'","Description":null,"QueryBody":"SELECT * FROM users WHERE Location = 'Greece'","CreationDate":"2014-06-11 12:08:09","validated":false,"QueryBody_Original":"SELECT  * from users where Location = 'Greece'"},{"QuerySetId":200621,"Title":"Number of downvotes by answer score","Description":null,"QueryBody":"SELECT p.Score AS \"Score\", COUNT(v.Id) AS \"Downvotes\" FROM Votes AS v INNER JOIN Posts AS p ON p.Id = v.PostId WHERE p.PostTypeId = 2 AND v.VoteTypeId = 3 GROUP BY p.Score ORDER BY p.Score","CreationDate":"2014-06-11 23:51:55","validated":false,"QueryBody_Original":"SELECT  p.Score as [Score], Count(v.Id) as [Downvotes] from Votes v \ninner join Posts p \non p.Id=v.PostId \nwhere p.PostTypeId = 2 AND v.VoteTypeId = 3 \ngroup by p.Score \norder by p.Score"},{"QuerySetId":200623,"Title":"Number of downvotes by question score","Description":null,"QueryBody":"SELECT p.Score AS \"Score\", COUNT(v.Id) AS \"Downvotes\", p.Id FROM Votes AS v INNER JOIN Posts AS p ON p.Id = v.PostId WHERE p.PostTypeId = 1 AND v.VoteTypeId = 3 GROUP BY p.Score, p.Id ORDER BY p.Score","CreationDate":"2014-07-10 08:05:36","validated":false,"QueryBody_Original":"SELECT  p.Score as [Score], Count(v.Id) as [Downvotes], p.Id from Votes v \ninner join Posts p \non p.Id=v.PostId\nwhere p.PostTypeId = 1 AND v.VoteTypeId = 3 \ngroup by p.Score, p.Id\norder by p.Score"},{"QuerySetId":200645,"Title":"\u201cThis question appears to be off-topic\u201d comments","Description":null,"QueryBody":"SELECT 'site:\/\/posts\/comments\/' + CAST(C.Id AS TEXT) + '|' + RIGHT(C.Text, LENGTH(C.Text) - 46), 'site:\/\/posts\/comments\/' + CAST(C.Id AS TEXT) + '|' + CAST(C.Score AS TEXT) AS \"Score\", C.UserId AS \"User Link\", C.CreationDate AS \"Date\" FROM Comments AS C WHERE C.Text LIKE 'This question appears to be off-topic because %' ORDER BY C.Id DESC LIMIT 1000","CreationDate":"2014-06-12 00:57:31","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  'site:\/\/posts\/comments\/' + Cast(C.Id AS VarChar) + '|' + Right(C.Text, Len(C.Text)-46),\n  'site:\/\/posts\/comments\/' + Cast(C.Id AS VarChar) + '|' + Cast(C.Score AS VarChar) As [Score],\n  C.UserId AS [User Link],\n  C.CreationDate AS [Date]\nFROM Comments C\nWHERE C.Text LIKE 'This question appears to be off-topic because %'\nORDER BY C.Id DESC"},{"QuerySetId":200800,"Title":"Number and ratio of closed questions per day for the last three month","Description":null,"QueryBody":"SELECT TIME_TO_STR(ClosedDate, '%j') AS \"Day\", COUNT(*) AS \"Number of Closed Questions\" FROM Posts WHERE PostTypeId = 1 \/* question *\/ AND NOT ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), ClosedDate) < 90 GROUP BY TIME_TO_STR(ClosedDate, '%j') ORDER BY TIME_TO_STR(ClosedDate, '%j')","CreationDate":"2020-01-28 15:24:34","validated":false,"QueryBody_Original":"SELECT \n  datepart(dayofyear, ClosedDate) as [Day], \n  count(*) as [Number of Closed Questions]\nfrom Posts\nwhere PostTypeId = 1 -- question\n  and ClosedDate is not null\n  and datediff(day, ClosedDate, getdate()) < 90\ngroup by datepart(dayofyear, ClosedDate)\norder by datepart(dayofyear, ClosedDate)"},{"QuerySetId":201097,"Title":"Posts migrated to this site","Description":"Displays number of post migrated per site\r\n","QueryBody":"SELECT Posts.ID AS \"Post Link\" FROM Posts JOIN PostHistory ON Posts.ID = PostHistory.PostID WHERE Posts.PostTypeID = 1 AND PostHistoryTypeId = 36","CreationDate":"2014-06-13 18:36:40","validated":false,"QueryBody_Original":"SELECT  Posts.ID AS [Post Link]\nFrom Posts \nJOIN PostHistory on Posts.ID = PostHistory.PostID\nWHERE Posts.PostTypeID = 1\nAND PostHistoryTypeId = 36"},{"QuerySetId":201122,"Title":"Posts tagged with only one selected tag","Description":"Finds posts tagged only with the one tag input below.","QueryBody":"SELECT Id AS \"Post Link\", Score, AnswerCount FROM Posts WHERE PostTypeId = 1 AND Tags = '<##Tag##>' ORDER BY CreationDate DESC","CreationDate":"2014-07-22 02:04:59","validated":false,"QueryBody_Original":"SELECT \n    Id AS [Post Link], Score, AnswerCount\nFROM\n    Posts\nWHERE\n    PostTypeId = 1\n    AND Tags = '<##Tag##>'\nORDER By CreationDate DESC"},{"QuerySetId":201239,"Title":"CLEANUP: find comments that might be obsolete","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.CreationDate, c.PostId AS \"Post Link\", c.UserId AS \"User Link\" FROM Comments AS c WHERE c.Text LIKE '%fixed%' OR c.Text LIKE '%edited%' OR c.Text LIKE '%done[.,]%' ORDER BY c.CreationDate","CreationDate":"2014-06-26 07:51:58","validated":false,"QueryBody_Original":"SELECT \n  c.Id AS [Comment Link],\n  c.CreationDate, \n  c.PostId AS [Post Link],\n  c.UserId AS [User Link]\nFROM Comments AS c\nWHERE \n  c.Text LIKE '%fixed%'\n  OR c.Text LIKE '%edited%'\n  OR c.Text LIKE '%done[.,]%'\nORDER BY c.CreationDate ASC"},{"QuerySetId":201240,"Title":"CLEANUP: find posts that could probably use some copy-editing","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, p.OwnerUserId AS \"User Link\" FROM Posts AS p\/* stray backticks *\/  WHERE p.Body LIKE '% i %' COLLATE Latin1_General_BIN OR p.Title LIKE '[a-z]%' COLLATE Latin1_General_BIN OR p.Body LIKE '%`%' ORDER BY p.CreationDate DESC","CreationDate":"2014-06-25 09:05:53","validated":false,"QueryBody_Original":"SELECT \n  p.Id AS [Post Link],\n  p.CreationDate,\n  p.OwnerUserId AS [User Link]\nFROM\n  Posts AS p\nWHERE\n  -- capitalization issues\n  p.Body LIKE '% i %' COLLATE Latin1_General_BIN \n  OR p.Title LIKE '[a-z]%' COLLATE Latin1_General_BIN\n  -- stray backticks\n  OR p.Body LIKE '%`%'\nORDER BY \n  p.CreationDate DESC"},{"QuerySetId":201393,"Title":"Which version of SqlSever is SEDE using","Description":null,"QueryBody":"SELECT @@version","CreationDate":"2014-06-15 15:45:55","validated":false,"QueryBody_Original":"SELECT  @@version"},{"QuerySetId":201401,"Title":"Evolution of the up-\/downvote ratio.","Description":"Look at the Graph, to see the evolution of the upvote\/downvote ratio.","QueryBody":"SELECT CreationDate, SUM(CASE WHEN VoteTypeId = 1 THEN 1 ELSE 0 END) AS Upvotes FROM Votes GROUP BY CreationDate ORDER BY CreationDate","CreationDate":"2014-08-13 19:11:47","validated":false,"QueryBody_Original":"SELECT \nCreationDate,\nSUM(CASE WHEN VoteTypeId = 1 THEN 1 ELSE 0 END) AS Upvotes\nFROM Votes\nGROUP BY CreationDate\nORDER BY CreationDate"},{"QuerySetId":201488,"Title":"Questions with pending recommendation request close votes on SO","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE PostHistoryTypeId = 10 AND Comment = 102","CreationDate":"2020-06-20 20:06:17","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link] from PostHistory\nwhere PostHistoryTypeId=10\nand Comment=102"},{"QuerySetId":201499,"Title":"Percentage of Users with 10K or 20K rep out of \"real users\" (>100 rep)","Description":null,"QueryBody":"SELECT (((SELECT CAST(COUNT(*) AS FLOAT) FROM Users WHERE Reputation > 10000) \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM Users WHERE LastAccessDate > GETUTCDATE() - 30 AND Reputation > 200 AND (UpVotes + DownVotes) > 0)) * 100) AS PercentageOver10k, (((SELECT CAST(COUNT(*) AS FLOAT) FROM Users WHERE Reputation > 20000) \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM Users WHERE LastAccessDate > GETUTCDATE() - 30 AND Reputation > 200 AND (UpVotes + DownVotes) > 0)) * 100) AS PercentageOver20k","CreationDate":"2014-06-18 09:14:17","validated":false,"QueryBody_Original":"SELECT \n(\n((SELECT CAST(COUNT(*) AS decimal) FROM Users WHERE Reputation > 10000) \/\n(SELECT CAST(COUNT(*) AS decimal) FROM Users WHERE \nLastAccessDate > GETUTCDATE()-30 and Reputation > 200 and (UpVotes+DownVotes)>0\n)) * 100\n) As PercentageOver10k,\n(\n((SELECT CAST(COUNT(*) AS decimal) FROM Users WHERE Reputation > 20000) \/\n(SELECT CAST(COUNT(*) AS decimal) FROM Users WHERE \nLastAccessDate > GETUTCDATE()-30 and Reputation > 200 and (UpVotes+DownVotes)>0\n)) * 100\n) As PercentageOver20k"},{"QuerySetId":201749,"Title":"Top viewed posts with suck in the title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount FROM Posts WHERE Title LIKE '%##Word##%' ORDER BY ViewCount DESC LIMIT 50","CreationDate":"2014-06-17 15:17:18","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  Id as [Post Link],\n  Score,\n  ViewCount\n\nFROM Posts \n\nWHERE Title LIKE '%##Word##%'\n\nORDER BY ViewCount DESC"},{"QuerySetId":202326,"Title":"Average and total time between post creation and migration","Description":"http:\/\/meta.stackexchange.com\/questions\/196035\/how-to-get-time-of-question-posting-and-question-migration-of-a-stack-exchange-w\r\n\r\nreference: http:\/\/meta.stackexchange.com\/a\/233725\/158100","QueryBody":"SELECT YEAR(\"migration date\") AS \"year\", AVG(days) AS \"Avg. Days\", AVG(hours) AS \"Avg. Hours\", COUNT(*) AS \"Total\" FROM (SELECT ph.creationdate AS \"migration date\", p.creationdate AS \"Post date\", DATEDIFF(ph.creationdate, p.creationdate) AS \"days\", DATEDIFF(ph.creationdate, p.creationdate) AS \"hours\", posthistorytypeid FROM posthistory AS ph INNER JOIN posts AS p ON p.id = ph.postid WHERE posthistorytypeid IN (35, 36)) AS dim GROUP BY YEAR(\"migration date\") ORDER BY YEAR(\"migration date\")","CreationDate":"2014-06-18 19:15:24","validated":false,"QueryBody_Original":"SELECT  year([migration date]) as [year]\n, avg(days) as [Avg. Days]\n, avg(hours) as [Avg. Hours]\n, count(*) as [Total]\nfrom(\nSELECT ph.creationdate as [migration date]\n     , p.creationdate as [Post date]\n     , datediff(d, p.creationdate, ph.creationdate) as [days]\n     , datediff(hh, p.creationdate, ph.creationdate) as [hours]\n     ,posthistorytypeid\nfrom posthistory ph \ninner join posts p on p.id = ph.postid\nwhere posthistorytypeid  in (35, 36)\n) as dim\ngroup by year([migration date])\norder by year([migration date])"},{"QuerySetId":202330,"Title":"Users who asked exactly 1 question ","Description":null,"QueryBody":"SELECT COUNT(OwnerUserId) FROM (SELECT OwnerUserId, PostTypeId, COUNT(OwnerUserId) AS questions FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId, PostTypeId HAVING COUNT(OwnerUserId) = 1) AS A","CreationDate":"2014-06-18 19:10:44","validated":false,"QueryBody_Original":"SELECT  COUNT(OwnerUserId) FROM\n(SELECT OwnerUserId, PostTypeId, COUNT(OwnerUserId) as questions\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY OwnerUserId, PostTypeId\nHAVING COUNT(OwnerUserId) = 1) as A"},{"QuerySetId":202516,"Title":"SQL Server Questions by Topic","Description":null,"QueryBody":"SELECT TSQL.* FROM (SELECT ID AS \"Post Link\", Title FROM Posts WHERE TAGS LIKE '%sql-server%' ORDER BY LastactivityDate DESC LIMIT 10000) AS TSQL\/* OR TSQL.Title LIKE '%master%' *\/ \/* OR TSQL.Title LIKE '%corruption%' *\/ \/* OR TSQL.Title LIKE '%SSIS%' *\/  WHERE TSQL.Title LIKE '%cluster%' OR TSQL.Title LIKE '%Replication%' OR TSQL.Title LIKE '%tempdb%'","CreationDate":"2014-06-19 01:40:09","validated":false,"QueryBody_Original":"SELECT  TSQL.* FROM(\nSELECT TOP(10000) ID AS [Post Link],Title FROM Posts\nWHERE  \nTAGS LIKE '%sql-server%' \nORDER BY LastactivityDate DESC)TSQL\nWHERE\nTSQL.Title LIKE '%cluster%' \nOR TSQL.Title LIKE '%Replication%' \n--OR TSQL.Title LIKE '%master%'\n--OR TSQL.Title LIKE '%corruption%'\n--OR TSQL.Title LIKE '%SSIS%'\nOR TSQL.Title LIKE '%tempdb%'"},{"QuerySetId":202573,"Title":"Short questions to consider for deletion","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Body, CreationDate FROM Posts WHERE PostTypeID = 1 AND LENGTH(Body) < 150 AND ClosedDate IS NULL AND Score < 0","CreationDate":"2016-05-14 16:57:43","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link],Score,Body,CreationDate\nFROM Posts\nWHERE PostTypeID = 1 \nand len(Body)<150 \nand ClosedDate is NULL\n\nand Score<0"},{"QuerySetId":202577,"Title":"The rep for the owner, commenter and replier","Description":"http:\/\/meta.stackexchange.com\/questions\/228620\/querying-for-reputation-of-the-commenter-and-its-addressee-using-sede\/234278#234278","QueryBody":"SELECT c.id, postid, \"text\", STR_POSITION(\"text\", '@') AS at1, STR_POSITION(\"text\", ' ', STR_POSITION(\"text\", '@')) AS at1Token, SUBSTRING(\"text\", STR_POSITION(\"text\", '@') + 1, STR_POSITION(\"text\", ' ', STR_POSITION(\"text\", '@')) - (STR_POSITION(\"text\", '@') + 1)) AS atreply, u.id, u.displayname, owner.id, owner.displayname FROM comments AS c INNER JOIN users AS u ON u.id = c.userid INNER JOIN posts AS p ON p.id = c.postid INNER JOIN users AS owner ON owner.id = p.owneruserid WHERE p.id = 1418833 AND STR_POSITION(\"text\", '@') > 0","CreationDate":"2014-06-19 16:22:10","validated":false,"QueryBody_Original":"SELECT  c.id\n, postid\n, [text]\n, charindex('@', [text]) as at1\n, charindex(' ', [text], charindex('@', [text])) as at1Token\n, substring([text], \n    charindex('@', [text])+1, \n    charindex(' ', [text], charindex('@', [text])) - (charindex('@', [text])+1)) as atreply\n, u.id\n, u.displayname\n, owner.id\n, owner.displayname\nfrom comments c \ninner join users u on u.id = c.userid\ninner join posts p on p.id = c.postid\ninner join users owner on owner.id = p.owneruserid\nwhere p.id = 1418833\nand charindex('@', [text]) > 0"},{"QuerySetId":202651,"Title":"Accepted Answer Rate for Users > 3000 rep","Description":null,"QueryBody":"SELECT (CAST(COUNT(a.Id) AS FLOAT) \/ (SELECT COUNT(p.Id) FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE u.Reputation > 3000 AND PostTypeId = 2) * 100) AS AcceptedPercentage FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id INNER JOIN Users AS u ON a.OwnerUserId = u.Id WHERE u.Reputation > 100 AND a.PostTypeId = 2","CreationDate":"2014-06-20 01:23:38","validated":false,"QueryBody_Original":"SELECT  \n    (CAST(Count(a.Id) AS float) \/ (SELECT Count(p.Id) FROM Posts p INNER JOIN Users u ON p.OwnerUserId = u.Id WHERE u.Reputation > 3000 AND PostTypeId = 2) * 100) AS AcceptedPercentage\nFROM\n    Posts q\n  INNER JOIN\n    Posts a ON q.AcceptedAnswerId = a.Id\n  INNER JOIN\n    Users u ON a.OwnerUserId = u.Id\nWHERE\n    u.Reputation > 100\n  AND\n    a.PostTypeId = 2"},{"QuerySetId":202700,"Title":"Most effective Fastest Guns in the West (enlightened percentage times quantity)","Description":"Top 500 most effective Fastest Guns in the West\r\nEnlightened badges weighted against total Accepted answers with score >= 10\r\n\r\nEnlightened requires an Accepted Answer with score >= 10, posted first. The higher their number * higher percentage of all accepted answers makes for a very effective Fastest Gun in the West.","QueryBody":"SELECT a.OwnerUserId AS \"User Link\", COUNT(DISTINCT a.Id) AS \"Accepted\", COUNT(DISTINCT b.Id) AS \"Enlightened\", (CAST(COUNT(DISTINCT b.Id) AS FLOAT) \/ COUNT(DISTINCT a.Id)) * 100.0 AS \"Percentage Enlightened\", COUNT(DISTINCT b.Id) * (CAST(COUNT(DISTINCT b.Id) AS FLOAT) \/ COUNT(DISTINCT a.Id)) * 100.0 AS \"Weighting\" FROM Votes AS v, Posts AS q, Posts AS a INNER JOIN Badges AS b ON b.UserId = a.OwnerUserId WHERE v.VoteTypeId = 1 AND v.PostId = a.Id AND q.AcceptedAnswerId = a.Id AND q.OwnerUserId <> a.OwnerUserId AND a.Score >= 10 AND b.Name = 'Enlightened' GROUP BY a.OwnerUserId ORDER BY Weighting DESC LIMIT 100","CreationDate":"2014-06-19 22:57:56","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    a.OwnerUserId AS [User Link],\n  Count(DISTINCT a.Id) AS [Accepted],\n  Count(DISTINCT b.Id) AS [Enlightened],\n  (CAST(Count(DISTINCT b.Id) AS FLOAT) \/ Count(DISTINCT a.Id)) * 100.0 AS [Percentage Enlightened],\n  Count(DISTINCT b.Id) * (CAST(Count(DISTINCT b.Id) AS FLOAT) \/ Count(DISTINCT a.Id)) * 100.0 AS [Weighting]\nFROM Votes v, Posts q, Posts a\nINNER JOIN Badges b on b.UserId = a.OwnerUserId\nWHERE v.VoteTypeId = 1\n  AND v.PostId = a.Id\n  AND q.AcceptedAnswerId = a.Id\n  AND q.OwnerUserId != a.OwnerUserId\n  AND a.Score >= 10\n  AND b.Name = 'Enlightened'\nGROUP BY a.OwnerUserId\nORDER BY Weighting DESC"},{"QuerySetId":202833,"Title":"obsolete accept my answer comments on accepted questions","Description":null,"QueryBody":"SELECT c.id AS \"Comment Link\" FROM comments AS c INNER JOIN posts AS p ON p.id = c.postid WHERE \"text\" LIKE '%accept my answer%' AND NOT p.acceptedanswerid IS NULL","CreationDate":"2014-06-20 14:44:25","validated":false,"QueryBody_Original":"SELECT  c.id as [Comment Link]\nfrom comments c\ninner join posts p on p.id = c.postid\nwhere [text] like '%accept my answer%'\nand p.acceptedanswerid is not null"},{"QuerySetId":202980,"Title":"Seek and Destroy: Spam spam URLs spam baked beans and spam","Description":"A query to help look for spam--finds short posts containing URLs, and shows the ratio of such posts to total posts, per-user. Lots of these are at least borderline spam, and most of the rest are probably poor quality posts anyway. Whee!","QueryBody":"SELECT u.id AS \"User Link\", u.reputation AS \"User Rep\", p.n AS \"Total Posts\", bad.n AS \"Dubious Posts\", CAST(bad.n AS FLOAT) \/ CAST(p.n AS FLOAT) AS \"Ratio\" FROM users AS u INNER JOIN (SELECT p.owneruserid AS uid, COUNT(p.id) AS n FROM posts AS p GROUP BY p.owneruserid) AS p ON p.uid = u.id \/* count all posts by user *\/ INNER JOIN (SELECT p.owneruserid AS uid, COUNT(p.id) AS n FROM posts AS p WHERE LENGTH(p.body) < 500 \/* short posts *\/ AND p.body LIKE '%http:\/\/%' \/* that contain a URL *\/ GROUP BY p.owneruserid) AS bad ON bad.uid = u.id WHERE u.Reputation < 10 AND p.n > 2 \/* users with at least a few posts *\/ AND CAST(bad.n AS FLOAT) \/ CAST(p.n AS FLOAT) > 0.5 \/* most of which are dubious *\/ ORDER BY \"Ratio\" DESC","CreationDate":"2014-06-21 00:25:22","validated":false,"QueryBody_Original":"SELECT  u.id as [User Link], u.reputation as [User Rep],\n  p.n as [Total Posts], bad.n as [Dubious Posts],\n  cast(bad.n as float) \/ cast (p.n as float) as [Ratio]\nfrom users u \n  inner join (\n    SELECT p.owneruserid as uid, count(p.id) as n \n    from posts p\n    group by p.owneruserid\n  ) p on p.uid = u.id -- count all posts by user\n  inner join (\n    SELECT p.owneruserid as uid, count(p.id) as n \n    from posts p\n    where len(p.body) < 500           -- short posts\n      and p.body like '%http:\/\/%'     -- that contain a URL\n    group by p.owneruserid\n  ) bad on bad.uid = u.id\nwhere u.Reputation < 10 \n and p.n > 2                        -- users with at least a few posts\n and cast(bad.n as float) \/ \n       cast (p.n as float) > 0.5     -- most of which are dubious\norder by [Ratio] desc"},{"QuerySetId":203005,"Title":"Get CSV of posts by ID","Description":null,"QueryBody":"SELECT Id AS Id, CreationDate, (Title + Body) AS Content FROM Posts WHERE LENGTH(Body) > 10 AND LENGTH(Title) > 5 ORDER BY NEWID()","CreationDate":"2014-07-18 03:04:12","validated":false,"QueryBody_Original":"SELECT  Id as Id, CreationDate, (Title+Body) as Content\nFROM Posts where Len(Body) > 10 and Len(Title)>5\nORDER BY NEWID()"},{"QuerySetId":203052,"Title":"Find questions that have a tag in front of the title ordered by creation date","Description":"Finds questions that have one of their tags in front of the title, seperated by hyphen or colon.  This query is case sensitive.\r\n","QueryBody":"SELECT p.id AS \"Post Link\", p.tags AS Tags, p.CreationDate AS CDate FROM Posts AS p WHERE p.Title LIKE '[%' ORDER BY p.CreationDate DESC","CreationDate":"2014-06-26 19:44:53","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link], p.tags as Tags, p.CreationDate as CDate\nFrom Posts p\nWhere p.Title Like '[%' \n  -- And p.Tags Like '%<' + LOWER('##Tag##') + '>%'\nOrder By p.CreationDate DESC;"},{"QuerySetId":203142,"Title":"Usage of per-site off-topic close reasons","Description":null,"QueryBody":"SELECT H.PostId AS \"Post Link\", H.UserId AS \"User Link\", H.Text AS \"Text\" \/* F.CloseAsOffTopicReasonTypeId AS [Id], *\/ \/* Count(*) AS [Count], *\/ \/* Min(R.MarkDownMini) AS [Reason] *\/ FROM PostHistory AS H \/* LEFT JOIN CloseAsOffTopicReasonTypes R *\/ \/* ON F.CloseAsOffTopicReasonTypeId = R.Id *\/ WHERE H.PostHistoryTypeId = 10 \/* vote to close *\/ AND H.Comment = 102 \/* off-topic (with subreasons) *\/ ORDER BY CreationDate","CreationDate":"2014-06-21 13:35:21","validated":false,"QueryBody_Original":"SELECT \n  H.PostId AS [Post Link],\n  H.UserId AS [User Link],\n  H.Text AS [Text]\n  --F.CloseAsOffTopicReasonTypeId AS [Id],\n  --Count(*) AS [Count],\n  --Min(R.MarkDownMini) AS [Reason]\nFROM PostHistory H\n--LEFT JOIN CloseAsOffTopicReasonTypes R\n--ON F.CloseAsOffTopicReasonTypeId = R.Id\nWHERE H.PostHistoryTypeId = 10 -- vote to close\n  AND H.Comment = 102 -- off-topic (with subreasons)\n-- GROUP BY F.CloseAsOffTopicReasonTypeId\nORDER BY CreationDate ASC"},{"QuerySetId":203151,"Title":"Tenacious badge: Zero score accepted answers: more than 5 and 20% of total.","Description":null,"QueryBody":"SELECT a.id, a.score, q.score, q.creationdate FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE a.score <= -3 AND q.CreationDate >= '2014-07-18' AND a.OwnerUserId = 1387518 ORDER BY creationdate DESC","CreationDate":"2014-07-31 01:00:35","validated":false,"QueryBody_Original":"SELECT  a.id, a.score, q.score, q.creationdate\nfrom\n  Posts q\n  inner join Posts a on a.ParentId = q.Id\nwhere a.score <= -3\n  and q.CreationDate >= '2014-07-18'\n  and a.OwnerUserId = 1387518\norder by creationdate desc"},{"QuerySetId":203242,"Title":"Find Obsolete comments on Islam.SE (Newest first)","Description":null,"QueryBody":"SELECT Id, Text, Id AS \"Comment Link\" FROM Comments WHERE LENGTH(Text) < 20 AND Text LIKE '%##phrase##%' ORDER BY Id DESC LIMIT 10000","CreationDate":"2014-07-07 22:00:53","validated":false,"QueryBody_Original":"SELECT  TOP 10000 Id, Text, Id as [Comment Link]\nFrom Comments\nWhere LEN(Text) < 20 AND Text like '%##phrase##%'\nORDER BY Id DESC"},{"QuerySetId":203467,"Title":"Users by age and country","Description":null,"QueryBody":"SELECT Age, COUNT(Age) FROM Users WHERE LOWER(Location) LIKE LOWER('%##Country##%') GROUP BY Age ORDER BY Age","CreationDate":"2014-06-23 03:11:53","validated":false,"QueryBody_Original":"SELECT  \n  Age, COUNT(Age) \nFROM \n  Users \nWHERE\n  LOWER(Location) LIKE lower('%##Country##%')\nGROUP BY \n  Age \nORDER BY \n  Age"},{"QuerySetId":203484,"Title":"list all question which tag is java","Description":null,"QueryBody":"SELECT MAX(LENGTH(body)) FROM posts","CreationDate":"2014-06-23 06:21:03","validated":false,"QueryBody_Original":"SELECT  max(len(body)) from posts;"},{"QuerySetId":203532,"Title":"User avg reputation by year and month","Description":null,"QueryBody":"SELECT AVG(reputation * 1.0), TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m') FROM users GROUP BY TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m') ORDER BY TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m')","CreationDate":"2014-06-23 08:02:28","validated":false,"QueryBody_Original":"SELECT  avg(reputation*1.0),datepart(YYYY,creationdate),datepart(MM,creationdate)\nfrom users\ngroup by datepart(YYYY,creationdate),datepart(MM,creationdate)\norder by datepart(YYYY,creationdate),datepart(MM,creationdate)"},{"QuerySetId":203684,"Title":"The long tail of answers","Description":"This is in response to this question on Statistics meta - http:\/\/meta.stats.stackexchange.com\/q\/2083\/1036\r\n\r\nI suspect our site still does not have a large number of users, comparing the tail to other sites","QueryBody":"SELECT OwnerUserId, COUNT(*) AS TotalAnswers FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId ORDER BY TotalAnswers DESC","CreationDate":"2014-06-23 15:47:24","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, COUNT(*) AS TotalAnswers\nFROM Posts\nWHERE PostTypeId = 2\nGROUP BY OwnerUserId\nORDER BY TotalAnswers DESC"},{"QuerySetId":203737,"Title":"Accepted answers by Join Date ","Description":null,"QueryBody":"SELECT YEAR(Users.CreationDate) AS cYear, MONTH(Users.CreationDate) AS cMonth, COUNT(Users.Id) FROM Posts AS A JOIN Posts AS B ON A.AcceptedAnswerId = B.Id JOIN Users ON Users.Id = B.OwnerUserId GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate) ORDER BY 1, 2","CreationDate":"2014-06-24 17:50:55","validated":false,"QueryBody_Original":"SELECT  YEAR(Users.CreationDate) as cYear, Month(Users.CreationDate) cMonth, COUNT(Users.Id)\nFROM Posts as A \n     JOIN \n     Posts as B\n     on A.AcceptedAnswerId = B.Id \n     JOIN \n     Users \n     on Users.Id = B.OwnerUserId \nGROUP BY YEAR(Users.CreationDate), Month(Users.CreationDate)\nORDER BY 1,2"},{"QuerySetId":203872,"Title":"Total Questions in past year","Description":null,"QueryBody":"SELECT COUNT(Id) AS \"#\" FROM Posts WHERE PostTypeId = 1 AND CreationDate > DATEADD(Month, -12, DATEADD(dd, DATEDIFF(dd, 0, GETDATE()), 0))","CreationDate":"2014-06-24 16:30:43","validated":false,"QueryBody_Original":"SELECT  \n  count(Id) as [#]\nfrom \n  Posts \nwhere\n  PostTypeId = 1\n  and CreationDate > DATEADD(Month, -12, DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0))"},{"QuerySetId":203898,"Title":"Users who actively participate (at least 1 question and answer) By Join Date","Description":null,"QueryBody":"SELECT YEAR(Users.CreationDate) AS cYear, MONTH(Users.CreationDate) AS cMonth, COUNT(*) AS askedAndAnswered FROM (SELECT DISTINCT OwnerUserId FROM Posts WHERE PostTypeId = 1) AS P1 JOIN (SELECT DISTINCT OwnerUserId FROM Posts WHERE PostTypeId = 2) AS P2 ON P1.OwnerUserId = P2.OwnerUserId JOIN Users ON P1.OwnerUserId = Users.Id GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate) ORDER BY 1, 2","CreationDate":"2014-06-24 18:31:19","validated":false,"QueryBody_Original":"SELECT  YEAR(Users.CreationDate) as cYear, \n       MONTH(Users.CreationDate) as cMonth,\n       COUNT(*) as askedAndAnswered\nFROM \n  (SELECT DISTINCT OwnerUserId\n  FROM Posts \n  WHERE PostTypeId = 1) as P1\n  JOIN \n  (SELECT DISTINCT OwnerUserId\n  FROM Posts \n  WHERE PostTypeId = 2) as P2\n  ON P1.OwnerUserId = P2.OwnerUserId\n  JOIN \n  Users\n  ON P1.OwnerUserId = Users.Id\n  GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate)\nORDER BY 1,2"},{"QuerySetId":203899,"Title":"Closed Questions by Join Date","Description":null,"QueryBody":"SELECT Opened.cYear, Opened.cMonth, openedQuestions, closedQuestions, (1.0 * closedQuestions \/ openedQuestions) FROM (SELECT YEAR(Users.CreationDate) AS cYear, MONTH(Users.CreationDate) AS cMonth, COUNT(*) AS closedQuestions FROM Posts JOIN Users ON Users.Id = Posts.OwnerUserId WHERE Posts.PostTypeId = 1 AND NOT ClosedDate IS NULL GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate)) AS Closed JOIN (SELECT YEAR(Users.CreationDate) AS cYear, MONTH(Users.CreationDate) AS cMonth, COUNT(*) AS openedQuestions FROM Posts JOIN Users ON Users.Id = Posts.OwnerUserId WHERE Posts.PostTypeId = 1 GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate)) AS Opened ON Closed.cYear = Opened.cYear AND Closed.cMonth = Opened.cMonth ORDER BY 1, 2","CreationDate":"2014-06-24 19:25:59","validated":false,"QueryBody_Original":"SELECT  Opened.cYear, Opened.cMonth, openedQuestions, closedQuestions, (1.0 * closedQuestions \/ openedQuestions )\nFROM\n  (SELECT YEAR(Users.CreationDate) as cYear, Month(Users.CreationDate) as cMonth, COUNT(*) as closedQuestions\n  FROM Posts JOIN Users \n  ON Users.Id = Posts.OwnerUserId\n  WHERE Posts.PostTypeId = 1 AND ClosedDate is not NULL\n  GROUP BY YEAR(Users.CreationDate), Month(Users.CreationDate)\n  ) AS Closed\nJOIN\n  (SELECT YEAR(Users.CreationDate) as cYear, Month(Users.CreationDate) as cMonth, COUNT(*) as openedQuestions\n  FROM Posts JOIN Users \n  ON Users.Id = Posts.OwnerUserId\n  WHERE Posts.PostTypeId = 1 \n  GROUP BY YEAR(Users.CreationDate), Month(Users.CreationDate)\n  ) AS Opened\nON Closed.cYear = Opened.cYear AND Closed.cMonth = Opened.cMonth\nORDER BY 1,2"},{"QuerySetId":203900,"Title":"Average answers per question by opening date","Description":null,"QueryBody":"SELECT YEAR(Posts.CreationDate) AS cYear, MONTH(Posts.CreationDate) AS cMonth, AVG(1.0 * AnswerCount) AS avgAnswers FROM Posts WHERE PostTypeId = 1 GROUP BY YEAR(Posts.CreationDate), MONTH(Posts.CreationDate) ORDER BY 1, 2","CreationDate":"2014-06-24 20:01:38","validated":false,"QueryBody_Original":"SELECT  YEAR(Posts.CreationDate) as cYear,\n       Month(Posts.CreationDate) as cMonth,\n       AVG(1.0 * AnswerCount) as avgAnswers\nFROM Posts\nWHERE PostTypeId = 1 \nGROUP BY YEAR(Posts.CreationDate), Month(Posts.CreationDate)\nORDER BY 1,2"},{"QuerySetId":203903,"Title":"Average answers per questions in 2013 by user join date","Description":null,"QueryBody":"SELECT YEAR(Users.CreationDate) AS cYear, MONTH(Users.CreationDate) AS cMonth, AVG(1.0 * Posts.AnswerCount) AS avgAnswers FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE PostTypeId = 1 AND YEAR(Posts.CreationDate) = 2013 AND YEAR(Users.CreationDate) < 2013 GROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate) ORDER BY 1, 2","CreationDate":"2014-06-24 20:05:32","validated":false,"QueryBody_Original":"SELECT  YEAR(Users.CreationDate) as cYear,\n       Month(Users.CreationDate) as cMonth,\n       AVG(1.0 * Posts.AnswerCount) as avgAnswers\nFROM Posts JOIN Users \nON Posts.OwnerUserId = Users.Id\nWHERE PostTypeId = 1 AND YEAR(Posts.CreationDate) = 2013 AND YEAR(Users.CreationDate) < 2013\nGROUP BY YEAR(Users.CreationDate), MONTH(Users.CreationDate)\nORDER BY 1,2"},{"QuerySetId":203905,"Title":"Closed Questions by opening date","Description":null,"QueryBody":"SELECT Closed.cYear, Closed.cMonth, closedQuestions, totalQuestions, (1.0 * closedQuestions \/ totalQuestions) FROM (SELECT YEAR(CreationDate) AS cYear, MONTH(CreationDate) AS cMonth, COUNT(*) AS closedQuestions FROM Posts WHERE PostTypeId = 1 AND NOT ClosedDate IS NULL GROUP BY YEAR(CreationDate), MONTH(CreationDate)) AS Closed JOIN (SELECT YEAR(CreationDate) AS cYear, MONTH(CreationDate) AS cMonth, COUNT(*) AS totalQuestions FROM Posts WHERE PostTypeId = 1 GROUP BY YEAR(CreationDate), MONTH(CreationDate)) AS Opened ON Closed.cYear = Opened.cYear AND Closed.cMonth = Opened.cMonth ORDER BY 1, 2","CreationDate":"2014-06-24 20:14:00","validated":false,"QueryBody_Original":"SELECT  Closed.cYear, Closed.cMonth, closedQuestions, totalQuestions, (1.0 * closedQuestions \/ totalQuestions) \nFROM\n  (SELECT YEAR(CreationDate) as cYear,\n         MONTH(CreationDate)  as cMonth,\n         COUNT(*) as closedQuestions\n  FROM Posts\n  WHERE PostTypeId = 1 and ClosedDate is not NULL\n  GROUP BY YEAR(CreationDate), MONTH(CreationDate)) as Closed\nJOIN\n  (SELECT YEAR(CreationDate) as cYear,\n         MONTH(CreationDate)  as cMonth,\n         COUNT(*) as totalQuestions\n  FROM Posts\n  WHERE PostTypeId = 1 \n  GROUP BY YEAR(CreationDate), MONTH(CreationDate)) as Opened\nON Closed.cYear = Opened.cYear and Closed.cMonth = Opened.cMonth\nORDER BY 1,2"},{"QuerySetId":203934,"Title":"Quantity of Questions Tagged With Specific Christian 'Branches of Faith'","Description":"'Denominations' only apply within Protestantism, although they are primarily what is represented within this query. However, since Eastern Orthodoxy and Roman Catholicism are included, I went with 'branches of faith'.","QueryBody":"SELECT COUNT(p.id) AS \"#\" FROM Posts AS p WHERE p.PostTypeId = 1 AND P.ClosedDate IS NULL AND p.creationDate > DATEADD(Month, -12, DATEADD(dd, DATEDIFF(dd, 0, GETDATE()), 0))","CreationDate":"2014-06-25 01:55:38","validated":false,"QueryBody_Original":"SELECT  \n  count(p.id) as [#]\nfrom \n  Posts p \nwhere\n  p.PostTypeId = 1\n  and P.ClosedDate IS NULL\n  and p.creationDate > DATEADD(Month, -12, DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0))"},{"QuerySetId":203958,"Title":"Finding Tags without Detail in them","Description":null,"QueryBody":"SELECT TagName FROM Tags AS T LEFT JOIN Posts AS P ON P.Id = T.WikiPostId WHERE P.Body IS NULL ORDER BY T.Count DESC","CreationDate":"2014-06-25 12:28:04","validated":false,"QueryBody_Original":"SELECT  TagName FROM Tags T\nLEFT JOIN Posts P ON P.Id = T.WikiPostId\nWHERE  P.Body IS NULL ORDER BY T.Count DESC"},{"QuerySetId":204110,"Title":"Users with most questions who have not accepted any answers","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(p.Id) AS Questions FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 AND NOT EXISTS(SELECT q.Id FROM Posts AS q WHERE q.OwnerUserId = u.Id AND NOT q.AcceptedAnswerId IS NULL) GROUP BY u.Id ORDER BY COUNT(p.Id) DESC","CreationDate":"2014-06-25 20:42:45","validated":false,"QueryBody_Original":"SELECT  u.Id as [User Link], COUNT(p.Id) as Questions FROM Users u\nINNER JOIN Posts p \nON p.OwnerUserId=u.Id \nWHERE p.PostTypeId=1 AND NOT EXISTS (\n  SELECT q.Id FROM Posts q \n  WHERE q.OwnerUserId=u.Id AND q.AcceptedAnswerId IS NOT NULL\n)\nGROUP BY u.Id \nORDER BY COUNT(p.Id) DESC"},{"QuerySetId":204562,"Title":"find user by partial name match","Description":null,"QueryBody":"SELECT DisplayName AS \"User link\", Reputation FROM Users WHERE DisplayName LIKE 'not%' ORDER BY Reputation DESC","CreationDate":"2014-06-27 12:18:57","validated":false,"QueryBody_Original":"SELECT  DisplayName as [User link], Reputation from Users  \n  where DisplayName LIKE 'not%' order by Reputation DESC"},{"QuerySetId":204571,"Title":"get users by only location zinga","Description":null,"QueryBody":"SELECT * FROM Users WHERE LOWER(Location) LIKE LOWER('%##Location##%') ORDER BY Reputation DESC","CreationDate":"2014-06-27 13:55:21","validated":false,"QueryBody_Original":"SELECT \n* \nFROM Users\nWHERE LOWER(Location) Like LOWER('%##Location##%')\nORDER BY Reputation DESC;"},{"QuerySetId":204648,"Title":"Most prolific upvoters: Weighted upvote ratio","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, UpVotes, DownVotes, ROUND(CAST(UpVotes AS FLOAT) \/ (UpVotes + Downvotes), 1) * UpVotes AS Weighted FROM Users WHERE UpVotes > 0 AND Id > -1 ORDER BY Weighted DESC LIMIT 50","CreationDate":"2014-06-27 21:54:39","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  \n  Id as [User Link],\n  Reputation,\n  UpVotes,\n  DownVotes,\n  ROUND(CAST(UpVotes AS float) \/ (UpVotes + Downvotes) , 1) * UpVotes as Weighted\n  \n  FROM Users\n  WHERE UpVotes > 0 AND Id > -1\n  ORDER BY Weighted DESC"},{"QuerySetId":204830,"Title":"Posts with links to other posts","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", l.RelatedPostId AS \"Post Link\", Score FROM Posts AS p JOIN PostLinks AS l ON p.Id = l.PostId WHERE p.PostTypeId = 1 AND l.LinkTypeId = 1 AND p.Id = 4952 GROUP BY p.Id, l.RelatedPostId, Score","CreationDate":"2014-07-17 20:55:32","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], l.RelatedPostId as [Post Link], Score\nfrom Posts p\njoin PostLinks l on p.Id=l.PostId\nwhere p.PostTypeId=1 and l.LinkTypeId=1 and p.Id=4952\ngroup by p.Id, l.RelatedPostId, Score"},{"QuerySetId":204831,"Title":"Distribution of id's in the user table","Description":null,"QueryBody":"SELECT id \/ 10000, COUNT(*) FROM users GROUP BY id \/ 10000 ORDER BY id \/ 10000","CreationDate":"2014-06-28 21:20:52","validated":false,"QueryBody_Original":"SELECT  id \/ 10000\n, count(*)\nfrom users\ngroup by id \/10000\norder by id \/10000"},{"QuerySetId":205055,"Title":"Short posts saying \"look here\"","Description":"Looking at posts shorter than 200 with the text `look here` somewhere in it\r\n","QueryBody":"SELECT Id AS \"Post Link\" FROM posts WHERE posttypeid = 2 AND LENGTH(body) <= 200 AND (body LIKE '%look here%') ORDER BY CreationDate DESC","CreationDate":"2014-06-29 16:17:39","validated":false,"QueryBody_Original":"SELECT \n   Id as [Post Link]\nfrom posts\nwhere posttypeid = 2 and len(body) <= 200\n  and (body like '%look here%')\norder by CreationDate desc;"},{"QuerySetId":205148,"Title":"Finding Posts tagged by given tag","Description":null,"QueryBody":"SELECT Posts.Id, Posts.Id AS \"Post Link\", Users.Age, Users.Location, Posts.CreationDate FROM Posts, Users, Tags WHERE Posts.Tags = '24hour' ORDER BY Tags.Id","CreationDate":"2014-08-15 19:27:57","validated":false,"QueryBody_Original":"SELECT  Posts.Id, Posts.Id  AS [Post Link],Users.Age, Users.Location, Posts.CreationDate\nFROM Posts, Users, Tags\nwhere Posts.Tags= '24hour'\nORDER BY Tags.Id"},{"QuerySetId":205446,"Title":"Who put stackoverflow.com as their personal website?","Description":"It's amazing how many people just dislike showing any personal link in the WebsiteUrl, and instead they put http:\/\/stackoverflow.com, their personal SO profile link, or any sub-link of stackoverflow!\r\n\r\nThis simple query shows people who do that.","QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND NOT ClosedDate IS NULL AND LOWER(Body) LIKE '%stackoverflow.com%'","CreationDate":"2015-12-08 06:20:20","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFROM Posts\nWHERE PostTypeId = 1 and ClosedDate is not null and lower(Body) Like '%stackoverflow.com%'"},{"QuerySetId":205840,"Title":"Number of answers that are either upvoted, accepted or have no other upvoted answers.","Description":null,"QueryBody":"SELECT COUNT(A.Id) AS numberofanswers, A.OwnerUserId AS \"User Link\" FROM Posts AS A WHERE PostTypeId = 2 AND (Score > 0 OR (SELECT COUNT(B.Id) FROM Posts AS B WHERE B.AcceptedAnswerId = A.Id) > 0 OR (SELECT COUNT(C.Id) FROM Posts AS C WHERE C.ParentId = A.ParentId AND C.Score > 0) = 0) GROUP BY A.OwnerUserId ORDER BY numberofanswers DESC","CreationDate":"2014-07-02 22:18:40","validated":false,"QueryBody_Original":"SELECT  \n\tcount(A.Id) as numberofanswers, \n\tA.OwnerUserId as [User Link] \nfrom \n\tPosts as A\nwhere \n\tPostTypeId = 2 \n\tand \n\t(\t\n\t\tScore > 0 \n\t\tor \n\t\t(\n\t\t\tSELECT count(B.Id) \n\t\t\tfrom Posts as B \n\t\t\twhere B.AcceptedAnswerId = A.Id\n\t\t) > 0\n\t\tor\n\t\t(\n\t\t\tSELECT count(C.Id)\n\t\t\tfrom Posts as C\n\t\t\twhere C.ParentId = A.ParentId and C.Score > 0\n\t\t) = 0\n\t\t\n\t) group by A.OwnerUserId order by numberofanswers desc"},{"QuerySetId":205955,"Title":"Answer to Score Ratio Since Date","Description":null,"QueryBody":"SELECT SUM(A.Score) AS TotalScore, COUNT(A.Id) AS AnswerCount, SUM(A.Score) \/ (COUNT(A.Id) \/ 1.0) AS ScorePerAnswer, A.OwnerUserId AS \"User Link\" FROM posts AS A WHERE A.creationdate > '##date##' AND A.PostTypeId = 2 GROUP BY A.OwnerUserId HAVING SUM(A.Score) > 500 ORDER BY ScorePerAnswer DESC","CreationDate":"2014-07-03 06:32:39","validated":false,"QueryBody_Original":"SELECT  sum(A.Score) as TotalScore, count(A.Id) as AnswerCount, sum(A.Score)\/(count(A.Id)\/1.0) As ScorePerAnswer, A.OwnerUserId as [User Link] \nfrom posts as A \nwhere A.creationdate > '##date##' \n  and A.PostTypeId=2\ngroup by A.OwnerUserId \nhaving sum(A.Score)>500 \norder by ScorePerAnswer desc"},{"QuerySetId":206328,"Title":"Closed questions with highest view count","Description":"Questions that have been closed (not protected), along with their close reasons, ordered by their view count.","QueryBody":"SELECT q.ViewCount AS Views, q.Score AS score, q.Id AS \"Post Link\" FROM Posts AS q INNER JOIN PostHistory AS h ON q.Id = h.PostId WHERE h.PostHistoryTypeId = 10 AND h.Comment = 103 AND NOT q.ClosedDate IS NULL ORDER BY score DESC LIMIT 20","CreationDate":"2015-03-29 17:12:34","validated":false,"QueryBody_Original":"SELECT  TOP 20\n  q.ViewCount AS Views,\n  q.Score as score,\n  q.Id AS [Post Link]\nFROM Posts q\nINNER JOIN PostHistory h ON q.Id = h.PostId\nWHERE h.PostHistoryTypeId = 10\n  AND h.Comment=103\n  AND q.ClosedDate IS NOT NULL\nORDER BY score DESC"},{"QuerySetId":207278,"Title":"Top 20 most generous users (bounties awarded vs total reputation)","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) AS TotalBountiesAwarded, Users.Reputation \/ ((SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) * 1.0) AS Ratio FROM Users\/* exclude Community and sin binned users *\/ \/* minimum amount here to qualify for this? *\/  WHERE (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) > 0 \/* ensure a bounty has been awarded *\/ AND Users.Reputation > 50 ORDER BY Users.Reputation \/ ((SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) * 1.0) LIMIT 20","CreationDate":"2016-10-19 14:41:47","validated":false,"QueryBody_Original":"SELECT \n  TOP(20)\n  Users.Id [User Link],\n  Users.DisplayName,\n  Users.Reputation,\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) as TotalBountiesAwarded,\n  Users.Reputation \/ ((SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) * 1.0) as Ratio\nFROM Users\nWHERE\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) > 0 -- ensure a bounty has been awarded\n  -- exclude Community and sin binned users\n  -- minimum amount here to qualify for this?\n  AND Users.Reputation > 50 \nORDER BY \n  Users.Reputation \/ ((SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) * 1.0) ASC"},{"QuerySetId":207533,"Title":"Trying to find questions\/answers with status-completed tag in body","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Body LIKE '%tag:status-completed%'","CreationDate":"2014-07-10 18:38:24","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Body LIKE '%tag:status-completed%'"},{"QuerySetId":207614,"Title":"CLEANUP: find comments that use code formatting","Description":null,"QueryBody":"SELECT c.CreationDate, c.Id AS \"Comment Link\" FROM Comments AS c WHERE c.Text LIKE '%`%' ORDER BY c.CreationDate DESC","CreationDate":"2014-07-11 00:29:13","validated":false,"QueryBody_Original":"SELECT \n  c.CreationDate,\n  c.Id AS [Comment Link]\nFROM\n  Comments AS c\nWHERE\n  c.Text LIKE '%`%'\nORDER BY\n  c.CreationDate DESC"},{"QuerySetId":207671,"Title":"Who leaves the most comments?","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) FROM Comments WHERE CreationDate > '2014-01-01' GROUP BY UserId ORDER BY COUNT(*) DESC","CreationDate":"2014-07-11 08:17:41","validated":false,"QueryBody_Original":"SELECT  UserId as [User Link], count(*)\nfrom Comments\nwhere CreationDate > '2014-01-01'\ngroup by UserId\norder by count(*) desc"},{"QuerySetId":208321,"Title":"Find any name change in the history.","Description":null,"QueryBody":"SELECT Id, LEFT(SUBSTRING(Text, STR_POSITION(Text, '@') + 1, LENGTH(Text)), PATINDEX('%[^a-z]%', SUBSTRING(Text, STR_POSITION(Text, '@') + 1, LENGTH(Text))) - 1) AS oldName, Text FROM Comments AS msq WHERE Id = 246568","CreationDate":"2014-07-13 13:59:58","validated":false,"QueryBody_Original":"SELECT \n  Id,\n  LEFT(\n    SUBSTRING(Text, CHARINDEX('@', Text)+1, LEN(Text)),\n    PATINDEX(\n      '%[^a-z]%',\n      SUBSTRING(Text, CHARINDEX('@', Text)+1, LEN(Text))\n    )-1\n  ) as oldName,\n  Text\nFROM Comments as msq\nWHERE Id = 246568"},{"QuerySetId":208335,"Title":"Number of Users each Country","Description":null,"QueryBody":"SELECT COUNT(DISTINCT Users.Id) FROM Users WHERE LOWER(Location) LIKE '%korea%' OR LOWER(Location) LIKE '%seoul%'","CreationDate":"2014-07-13 16:33:39","validated":false,"QueryBody_Original":"SELECT \n    COUNT(DISTINCT Users.Id)\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%korea%' OR\n    LOWER(Location) LIKE '%seoul%'"},{"QuerySetId":208372,"Title":"User Answers With 0 Score","Description":null,"QueryBody":"SELECT id AS \"Post Link\", Score, Body, CreationDate FROM Posts WHERE PostTypeId = 2 AND OwnerUserId = '##UserId##' AND Score = 0 ORDER BY CreationDate DESC","CreationDate":"2014-07-14 03:56:54","validated":false,"QueryBody_Original":"SELECT  id as [Post Link],Score,Body,CreationDate FROM Posts WHERE PostTypeId = 2 AND OwnerUserId = '##UserId##' AND Score = 0 Order BY CreationDate DESC"},{"QuerySetId":208429,"Title":"Science on Drupal User Questions","Description":null,"QueryBody":"SELECT p.* FROM Users AS u, Posts AS p WHERE u.AboutMe LIKE '%@ScienceOnDrupal%' AND p.OwnerUserId = u.Id AND p.PostTypeId = 1 ORDER BY p.CreationDate","CreationDate":"2014-07-14 17:18:44","validated":false,"QueryBody_Original":"SELECT  p.*\nFROM Users u, Posts p\nWHERE u.AboutMe Like '%@ScienceOnDrupal%'\nAND p.OwnerUserId = u.Id\nAND p.PostTypeId = 1\nORDER BY p.CreationDate"},{"QuerySetId":208502,"Title":"Users with <= 101 rep && multiple SE identities","Description":null,"QueryBody":"SELECT COUNT(U.id) FROM Users AS U WHERE U.reputation <= 101","CreationDate":"2014-07-15 03:37:52","validated":false,"QueryBody_Original":"SELECT  COUNT(U.id)\nFROM Users U\nWHERE U.reputation <= 101;"},{"QuerySetId":208751,"Title":"Total bounty amount offered by user","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", SUM(BountyAmount) AS TotalBounties FROM Votes WHERE VoteTypeId = 8 GROUP BY UserId ORDER BY TotalBounties DESC","CreationDate":"2019-07-16 12:20:48","validated":false,"QueryBody_Original":"SELECT  UserId as [User Link], sum(BountyAmount) as TotalBounties\nfrom Votes\nwhere VoteTypeId = 8\ngroup by UserId\norder by TotalBounties DESC"},{"QuerySetId":208885,"Title":"Average Reputation for above 100","Description":null,"QueryBody":"SELECT AVG(reputation) FROM users WHERE reputation > 100","CreationDate":"2014-07-17 04:23:10","validated":false,"QueryBody_Original":"SELECT  Avg(reputation) FROM users WHERE reputation > 100"},{"QuerySetId":209181,"Title":"Questions within a date range","Description":null,"QueryBody":"SELECT Id FROM Posts AS p WHERE p.PostTypeId = 1 AND p.CreationDate < '2013-01-11' AND p.CreationDate >= '2013-01-01'","CreationDate":"2014-07-18 16:53:00","validated":false,"QueryBody_Original":"SELECT  Id\nfrom Posts p\nwhere p.PostTypeId=1\nand p.CreationDate < '2013-01-11'\nand p.CreationDate >= '2013-01-01'"},{"QuerySetId":209184,"Title":"Top 20 most generous users (bounties awarded in total)","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) AS TotalBountiesAwarded FROM Users\/* exclude Community and sin binned users *\/ \/* minimum amount here to qualify for this? *\/  WHERE (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) > 0 \/* ensure a bounty has been awarded *\/ AND Users.Reputation > 50 ORDER BY (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) DESC LIMIT 20","CreationDate":"2020-05-17 20:22:43","validated":false,"QueryBody_Original":"SELECT \n  TOP(20)\n  Users.Id [User Link],\n  Users.DisplayName,\n  Users.Reputation,\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) as TotalBountiesAwarded\nFROM Users\nWHERE\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) > 0 -- ensure a bounty has been awarded\n  -- exclude Community and sin binned users\n  -- minimum amount here to qualify for this?\n  AND Users.Reputation > 50 \nORDER BY \n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) DESC"},{"QuerySetId":209443,"Title":"longest time to accept answer, for a user","Description":"What's the longest interval between an answer being posted and accepted for a user?\r\n\r\nhttp:\/\/meta.stackexchange.com\/questions\/36318\/whats-the-longest-interval-between-an-answer-being-posted-and-accepted","QueryBody":"SELECT * FROM votes WHERE creationdate IS NULL","CreationDate":"2014-07-19 08:25:14","validated":false,"QueryBody_Original":"SELECT  * from votes where creationdate is null"},{"QuerySetId":209457,"Title":"Find a pattern outside code blocks","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE Body LIKE '%[^->]---[^-<]%' ORDER BY Id LIMIT 100","CreationDate":"2014-07-19 11:07:13","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Id AS [Post Link],\n  Body\nFROM Posts\nWHERE Body LIKE '%[^->]---[^-<]%'\nORDER BY Id ASC"},{"QuerySetId":209488,"Title":"Questions with one tag and all-lowercase title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, AnswerCount AS \"Answers\", Tags AS \"Tag\" FROM Posts WHERE NOT Tags LIKE '%><%' AND Title = LOWER(Title) AND ClosedDate IS NULL ORDER BY Score","CreationDate":"2014-07-20 01:27:17","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Score, AnswerCount as [Answers], Tags as [Tag] from Posts \nwhere Tags not like '%><%' and \n      Title=lower(Title) and\n      ClosedDate is null\norder by Score asc"},{"QuerySetId":209517,"Title":"Find users by exact location","Description":null,"QueryBody":"SELECT * FROM Users WHERE UPPER(Location) = UPPER('##location##') AND (Reputation BETWEEN 100 AND 10000) AND AboutMe LIKE '%20 year%'","CreationDate":"2020-12-04 18:14:16","validated":false,"QueryBody_Original":"SELECT  * From Users\nWhere Upper(Location)=Upper('##location##') \n  AND (Reputation BETWEEN 100 AND 10000) \n  AND AboutMe LIKE '%20 year%'"},{"QuerySetId":209647,"Title":"Posts tagged with only one selected tag, plus the score and number of answers","Description":"Finds posts tagged only with the one tag input below.","QueryBody":"SELECT Id AS \"Post Link\", Score, AnswerCount FROM Posts WHERE PostTypeId = 1 AND Tags = '<##Tag##>' AND ClosedDate IS NULL ORDER BY CreationDate DESC","CreationDate":"2014-08-09 22:28:14","validated":false,"QueryBody_Original":"SELECT \n    Id AS [Post Link], Score, AnswerCount\nFROM\n    Posts\nWHERE\n    PostTypeId = 1\n    AND Tags = '<##Tag##>'\n    AND ClosedDate IS NULL\nORDER By CreationDate DESC"},{"QuerySetId":209730,"Title":"Search comments by three pieces of text","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%##CommentText1##%') AND UPPER(Text) LIKE UPPER('%##CommentText2##%') AND UPPER(Text) LIKE UPPER('%##CommentText3##%') ORDER BY Score DESC","CreationDate":"2014-07-24 18:15:53","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('%##CommentText1##%')\n   AND UPPER(Text) LIKE UPPER('%##CommentText2##%')\n   AND UPPER(Text) LIKE UPPER('%##CommentText3##%')\n ORDER BY Score DESC"},{"QuerySetId":210008,"Title":"unanswered bounties that about to end","Description":null,"QueryBody":"SELECT Title FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id","CreationDate":"2014-07-24 05:58:41","validated":false,"QueryBody_Original":"SELECT  \n  Title \nfrom Posts \n  Inner join Votes on Votes.PostId = Posts.Id"},{"QuerySetId":210041,"Title":"Question score as a function of length","Description":"Plots average question score, +\/- 1 standard deviation, as a function of binned question length.","QueryBody":"SELECT AVG(LENGTH(Body)) AS AverageLength, AVG(Score) AS QuestionScore, AVG(Score) + STDEV(Score) AS PlusOneSigma, AVG(Score) - STDEV(Score) AS MinusOneSigma FROM Posts WHERE PostTypeId = 1 AND LENGTH(Body) <= 8000 GROUP BY ROUND(LENGTH(Body), -2) ORDER BY ROUND(LENGTH(Body), -2)","CreationDate":"2014-07-24 10:02:31","validated":false,"QueryBody_Original":"SELECT  AVG(LEN(Body)) AS AverageLength,\n       AVG(Score) AS QuestionScore,\n       AVG(Score) + STDEV(Score) AS PlusOneSigma,\n       AVG(Score) - STDEV(Score) AS MinusOneSigma\nFROM Posts\nWHERE PostTypeId = 1 AND\n      LEN(Body) <= 8000\nGROUP BY ROUND(LEN(Body), -2) ORDER BY ROUND(LEN(Body), -2)"},{"QuerySetId":210042,"Title":"Answer score as a function of length","Description":"Plots average answer score, +\/- 1 standard deviation, as a function of binned answer length.","QueryBody":"SELECT Score, LENGTH(Body) FROM Posts WHERE PostTypeId = 2 AND LENGTH(Body) <= 20000","CreationDate":"2014-07-24 15:07:16","validated":false,"QueryBody_Original":"SELECT  \n  Score,LEN(Body)\nFROM Posts\nWHERE PostTypeId = 2 AND\n      LEN(Body) <= 20000"},{"QuerySetId":210043,"Title":"Question score as a function of length, normalized by views","Description":"Plots average value of (question score \/ number of views), +\/- 1 standard deviation, as a function of binned question length.","QueryBody":"SELECT AVG(LENGTH(Body)) AS AverageLength, AVG(CAST(Score AS FLOAT) \/ ViewCount) AS QuestionScorePerViews, AVG(CAST(Score AS FLOAT) \/ ViewCount) + STDEV(CAST(Score AS FLOAT) \/ ViewCount) AS PlusOneSigma, AVG(CAST(Score AS FLOAT) \/ ViewCount) - STDEV(CAST(Score AS FLOAT) \/ ViewCount) AS MinusOneSigma FROM Posts WHERE PostTypeId = 1 AND LENGTH(Body) <= 8000 GROUP BY ROUND(LENGTH(Body), -2) ORDER BY ROUND(LENGTH(Body), -2)","CreationDate":"2014-07-24 10:02:40","validated":false,"QueryBody_Original":"SELECT  AVG(LEN(Body)) AS AverageLength,\n       AVG(CAST(Score AS FLOAT)\/ViewCount) AS QuestionScorePerViews,\n       AVG(CAST(Score AS FLOAT)\/ViewCount) + STDEV(CAST(Score AS FLOAT)\/ViewCount) AS PlusOneSigma,\n       AVG(CAST(Score AS FLOAT)\/ViewCount) - STDEV(CAST(Score AS FLOAT)\/ViewCount) AS MinusOneSigma\nFROM Posts\nWHERE PostTypeId = 1 AND\n      LEN(Body) <= 8000\nGROUP BY ROUND(LEN(Body), -2) ORDER BY ROUND(LEN(Body), -2)"},{"QuerySetId":210046,"Title":"Answer score as a function of length, normalized by views","Description":"Plots average value of (answer score \/ number of views), +\/- 1 standard deviation, as a function of binned answer length.","QueryBody":"SELECT AVG(LENGTH(A.Body)) AS AverageLength, AVG(CAST(A.Score AS FLOAT) \/ Q.ViewCount) AS AnswerScorePerViews, AVG(CAST(A.Score AS FLOAT) \/ Q.ViewCount) + STDEV(CAST(A.Score AS FLOAT) \/ Q.ViewCount) AS PlusOneSigma, AVG(CAST(A.Score AS FLOAT) \/ Q.ViewCount) - STDEV(CAST(A.Score AS FLOAT) \/ Q.ViewCount) AS MinusOneSigma FROM Posts AS A INNER JOIN Posts AS Q ON A.ParentID = Q.Id WHERE A.PostTypeId = 2 AND LENGTH(A.Body) <= 20000 GROUP BY ROUND(LENGTH(A.Body), -3) ORDER BY ROUND(LENGTH(A.Body), -3)","CreationDate":"2014-07-24 10:02:50","validated":false,"QueryBody_Original":"SELECT  AVG(LEN(A.Body)) AS AverageLength,\n       AVG(CAST(A.Score AS FLOAT)\/Q.ViewCount) AS AnswerScorePerViews,\n       AVG(CAST(A.Score AS FLOAT)\/Q.ViewCount) + STDEV(CAST(A.Score AS FLOAT)\/Q.ViewCount) AS PlusOneSigma,\n       AVG(CAST(A.Score AS FLOAT)\/Q.ViewCount) - STDEV(CAST(A.Score AS FLOAT)\/Q.ViewCount) AS MinusOneSigma\nFROM Posts A INNER JOIN Posts Q ON A.ParentID = Q.Id\nWHERE A.PostTypeId = 2 AND\n      LEN(A.Body) <= 20000\nGROUP BY ROUND(LEN(A.Body), -3) ORDER BY ROUND(LEN(A.Body), -3)"},{"QuerySetId":210230,"Title":"All questions with a given tag","Description":null,"QueryBody":"SELECT q.Id AS \"id\", q.Score AS \"sc\", q.AnswerCount AS \"ac\", CONCAT(q.OwnerDisplayName, u.DisplayName) AS \"au\", q.Title AS \"title\", q.Tags AS \"tg\", q.Body AS \"body\" FROM Posts AS q LEFT JOIN Users AS u ON q.OwnerUserId = u.Id WHERE q.PostTypeId = 1 AND q.Tags LIKE '%<##Tag##>%' ORDER BY q.Id","CreationDate":"2014-07-28 09:44:29","validated":false,"QueryBody_Original":"SELECT  q.Id as [id], q.Score as [sc], q.AnswerCount as [ac], CONCAT(q.OwnerDisplayName, u.DisplayName) as [au], q.Title as [title], q.Tags as [tg], q.Body as [body] from Posts q\nleft join Users u on q.OwnerUserId=u.Id\nwhere q.PostTypeId = 1 and q.Tags like '%<##Tag##>%'\norder by q.Id asc"},{"QuerySetId":210248,"Title":"Find tag wikis with an image inside them.","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Posts.PostTypeId = 5 AND 'Tag Name' LIKE '%sql%'","CreationDate":"2014-08-29 23:44:42","validated":false,"QueryBody_Original":"SELECT  * \nFROM Posts\nWHERE Posts.PostTypeId = 5\n      AND 'Tag Name' LIKE '%sql%'"},{"QuerySetId":210254,"Title":"Users from a given place","Description":"List users from a given location, with username link, total reputation, last seen date and average reputation per post","QueryBody":"SELECT U.Id AS \"User Link\", U.Location, U.Reputation, U.LastAccessDate, SUM(U.\"Reputation\") \/ P.\"Number of Posts\" AS \"Average Reputation per Post\" FROM Users AS U JOIN (SELECT OwnerUserId, COUNT(*) AS \"Number of Posts\" FROM Posts GROUP BY OwnerUserId) AS P ON U.Id = P.OwnerUserId WHERE U.Location LIKE '%##Location##%' GROUP BY U.Id, U.Location, U.Reputation, U.LastAccessDate, P.\"Number of Posts\" ORDER BY U.Reputation DESC","CreationDate":"2019-04-11 14:42:57","validated":false,"QueryBody_Original":"SELECT \n  U.Id as [User Link], \n  U.Location,\n  U.Reputation,\n  U.LastAccessDate,\n  SUM(U.[Reputation])\/P.[Number of Posts] AS [Average Reputation per Post]\nFROM\n  Users AS U\nJOIN\n  (\n    SELECT\n      OwnerUserId,\n      COUNT(*) AS [Number of Posts]\n    FROM\n      Posts\n    GROUP BY\n      OwnerUserId\n  ) AS P\nON\n  U.Id = P.OwnerUserId\nWHERE\n  U.Location LIKE '%##Location##%'\nGROUP BY\n  U.Id, \n  U.Location,\n  U.Reputation,\n  U.LastAccessDate,\n  P.[Number of Posts]\nORDER BY\n  U.Reputation DESC"},{"QuerySetId":210381,"Title":"questions with tag using like","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Id, Title, Tags, RelatedPostId \/*  ViewCount, Floor(ViewCount\/1000) AS ViewK, \n  FavoriteCount, \n  LastActivityDate, Year(LastActivityDate) AS LastActivityYear, \n  Month(LastActivityDate) AS LastActivityMonth,\n  Score, AnswerCount, CreationDate\n*\/ AS \"Post Link\", LinkTypeId FROM Posts INNER JOIN PostLinks ON PostLinks.PostId = Posts.Id WHERE PostTypeId = 1 AND Tags LIKE '%delphi%' LIMIT 100","CreationDate":"2014-07-25 22:31:29","validated":false,"QueryBody_Original":"SELECT  TOP 100 Posts.Id AS [Post Link], Posts.Id, Title, Tags, \n\/*  ViewCount, Floor(ViewCount\/1000) AS ViewK, \n  FavoriteCount, \n  LastActivityDate, Year(LastActivityDate) AS LastActivityYear, \n  Month(LastActivityDate) AS LastActivityMonth,\n  Score, AnswerCount, CreationDate\n*\/\n  RelatedPostId as [Post Link],\n  LinkTypeId\nFROM Posts\nINNER JOIN PostLinks on PostLinks.PostId = Posts.Id\nWHERE PostTypeId = 1\n  AND Tags like '%delphi%'\n\/*ORDER BY \n  Floor(ViewCount\/1000) DESC,\n  FavoriteCount DESC,\n  Year(LastActivityDate) DESC, \n  Month(LastActivityDate) DESC,\n  Score DESC,\n  AnswerCount DESC,\n  Tags\n*\/"},{"QuerySetId":210394,"Title":"Maxium reputation without a gold badge","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", u.reputation FROM users AS u WHERE NOT u.id IN (SELECT b.userid FROM badges AS b INNER JOIN tags AS t ON t.tagname = b.name GROUP BY b.userid, t.id HAVING COUNT(*) = 3) ORDER BY u.reputation DESC","CreationDate":"2014-07-25 23:04:06","validated":false,"QueryBody_Original":"SELECT  u.id as [User Link]\n       , u.reputation\nfrom users u \nwhere u.id not in(\n SELECT b.userid \n from badges b \n inner join tags t on t.tagname = b.name\n group by b.userid, t.id\n having count(*)=3) \norder by u.reputation desc"},{"QuerySetId":210397,"Title":"query for all users sorted by reputation desc","Description":null,"QueryBody":"SELECT Id, displayName, reputation FROM users WHERE NOT users.Id IN (SELECT DISTINCT UserId FROM Badges WHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero') GROUP BY UserId) AND NOT users.Id IN (SELECT DISTINCT UserId FROM Badges WHERE ASCII(LEFT(Name, 1)) BETWEEN 97 AND 122 GROUP BY Name, UserId HAVING COUNT(*) = 3) AND reputation > 10000 ORDER BY reputation DESC","CreationDate":"2014-07-26 01:30:21","validated":false,"QueryBody_Original":"SELECT  Id, displayName, reputation from users where users.Id not in \n( \n   SELECT distinct UserId\n   FROM Badges\n   WHERE Name in ('Copy Editor', 'Electorate', 'Famous Question',\n      'Fanatic', 'Great Answer', 'Great Question', 'Legendary',\n      'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question',\n      'Steward', 'Unsung Hero')\n   GROUP BY UserId   \n) \nand users.Id NOT IN \n(\n   SELECT distinct UserId\n   FROM Badges\n   WHERE ASCII(LEFT(Name, 1)) BETWEEN 97 AND 122\n   GROUP BY Name, UserId\n   HAVING COUNT(*) = 3\n   ) \nand reputation > 10000   \norder by reputation desc"},{"QuerySetId":210417,"Title":"select Id, Age from Users group by Age","Description":null,"QueryBody":"SELECT Id, Age, UpVotes FROM Users WHERE UpVotes > 10000 GROUP BY Id, UpVotes, Age","CreationDate":"2014-07-26 00:59:31","validated":false,"QueryBody_Original":"SELECT  Id, Age, UpVotes from Users where UpVotes > 10000 group by Id, UpVotes, Age"},{"QuerySetId":210430,"Title":"query for top (high-rep) users without gold badge","Description":null,"QueryBody":"SELECT Id, displayName, reputation, upVotes, downVotes FROM users WHERE NOT users.Id IN (SELECT DISTINCT UserId FROM Badges WHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero') GROUP BY UserId) AND NOT users.Id IN (SELECT DISTINCT UserId FROM Badges WHERE ASCII(LEFT(Name, 1)) BETWEEN 97 AND 122 GROUP BY Name, UserId HAVING COUNT(*) = 3) AND reputation > 10000 ORDER BY reputation DESC","CreationDate":"2014-07-26 01:52:05","validated":false,"QueryBody_Original":"SELECT  Id, displayName, reputation, upVotes, downVotes from users where users.Id not in \n( \n   SELECT distinct UserId\n   FROM Badges\n   WHERE Name in ('Copy Editor', 'Electorate', 'Famous Question',\n      'Fanatic', 'Great Answer', 'Great Question', 'Legendary',\n      'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question',\n      'Steward', 'Unsung Hero')\n   GROUP BY UserId   \n) \nand users.Id NOT IN \n(\n   SELECT distinct UserId\n   FROM Badges\n   WHERE ASCII(LEFT(Name, 1)) BETWEEN 97 AND 122\n   GROUP BY Name, UserId\n   HAVING COUNT(*) = 3\n   ) \nand reputation > 10000   \norder by reputation desc"},{"QuerySetId":210566,"Title":"Users with at least X total badges","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS badgeCount FROM Badges GROUP BY UserId HAVING COUNT(*) > 100 ORDER BY badgeCount DESC","CreationDate":"2014-07-26 21:22:38","validated":false,"QueryBody_Original":"SELECT  \n    UserId as [User Link],\n    COUNT(*) as badgeCount\nFROM\n    Badges\nGROUP BY\n    UserId\nHAVING COUNT(*) > 100\nORDER BY badgeCount DESC"},{"QuerySetId":210628,"Title":"Titles of questions with a given tag","Description":null,"QueryBody":"SELECT q.Id, q.Score, q.AnswerCount AS \"Answers\", CONCAT(q.OwnerDisplayName, u.DisplayName) AS \"Author\", q.Title, q.Tags FROM Posts AS q LEFT JOIN Users AS u ON q.OwnerUserId = u.Id WHERE q.PostTypeId = 1 AND q.Tags LIKE '%<##Tag##>%' ORDER BY q.Id","CreationDate":"2014-07-27 07:16:13","validated":false,"QueryBody_Original":"SELECT  q.Id, q.Score, q.AnswerCount as [Answers], CONCAT(q.OwnerDisplayName, u.DisplayName) as [Author], q.Title, q.Tags from Posts q\nleft join Users u on q.OwnerUserId=u.Id\nwhere q.PostTypeId = 1 and q.Tags like '%<##Tag##>%'\norder by q.Id asc"},{"QuerySetId":210642,"Title":"Percentage of questions with keyword in the title","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), ROUND(100 * (SUM(CASE WHEN LOWER(Title) LIKE '%##keyword##%' THEN 1 ELSE 0 END) + 0.1) \/ COUNT(Id), 2) FROM Posts WHERE PostTypeId = 1 GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE)","CreationDate":"2014-07-27 11:42:51","validated":false,"QueryBody_Original":"SELECT  Cast(CreationDate as Date), round(100*(sum(case when lower(Title) like '%##keyword##%' then 1 else 0 end)+0.1)\/count(Id),2) from Posts\nwhere PostTypeId = 1\ngroup by Cast(CreationDate as Date)\nOrder by Cast(CreationDate as Date) asc"},{"QuerySetId":210772,"Title":"Number of open answered questions","Description":null,"QueryBody":"SELECT COUNT(DISTINCT p_q.Id) FROM Posts AS p_a INNER JOIN Posts AS p_q ON p_q.Id = p_a.ParentId AND p_q.PostTypeId = 1 AND p_q.ClosedDate IS NULL WHERE p_a.PostTypeId = 2 AND (p_a.score > 0 OR p_a.Id = p_q.AcceptedAnswerId)","CreationDate":"2014-07-28 07:12:16","validated":false,"QueryBody_Original":"SELECT  count(distinct p_q.Id)\nfrom Posts p_a\ninner join Posts p_q on\n      p_q.Id = p_a.ParentId\n  and p_q.PostTypeId = 1\n  and p_q.ClosedDate is null\nwhere p_a.PostTypeId = 2\nand (\n     p_a.score > 0\n  or p_a.Id = p_q.AcceptedAnswerId\n  )"},{"QuerySetId":210800,"Title":"Users based on location and badges","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##Location##%') ORDER BY Reputation DESC","CreationDate":"2014-07-28 10:55:29","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Location,\n    Reputation\nFROM\n    Users\nWHERE\nLOWER(Location) LIKE LOWER('%##Location##%') \nORDER BY\n    Reputation DESC;"},{"QuerySetId":210916,"Title":"Quoted part-questions in list format","Description":"Examples of quoted part-questions in list format. See http:\/\/meta.stackoverflow.com\/a\/266976","QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%<li><blockquote>%' AND OwnerUserId = 106224","CreationDate":"2014-07-28 17:03:55","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE Body LIKE '%<li><blockquote>%' AND OwnerUserId = 106224"},{"QuerySetId":210984,"Title":"Number of Users in a Location","Description":null,"QueryBody":"SELECT COUNT(*) AS NumberOfUsers FROM Users WHERE LOWER(Location) LIKE LOWER('%##Location##%')","CreationDate":"2014-07-29 02:57:33","validated":false,"QueryBody_Original":"SELECT  count(*) as NumberOfUsers\nfrom Users\nwhere lower(Location) like lower('%##Location##%')"},{"QuerySetId":211006,"Title":"Number of non-deleted questions closed by a user","Description":null,"QueryBody":"SELECT COUNT(Id) AS \"Closed Questions\" FROM PostHistory WHERE PostHistoryTypeId = 10 AND Text LIKE '%\"Id\":##UserId##%'","CreationDate":"2014-10-27 03:12:06","validated":false,"QueryBody_Original":"SELECT  count(Id) as [Closed Questions] from PostHistory\nwhere PostHistoryTypeId=10 and Text like '%\"Id\":##UserId##%'"},{"QuerySetId":211419,"Title":"Posts & Views x Post Year","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS post_creation_year, COUNT(DISTINCT Id) AS num_posts, SUM(CAST(ViewCount AS INT)) AS all_time_views FROM Posts WHERE PostTypeId = 1 GROUP BY YEAR(CreationDate) ORDER BY YEAR(CreationDate) DESC","CreationDate":"2014-07-31 00:34:45","validated":false,"QueryBody_Original":"SELECT  \n  year(CreationDate) as post_creation_year,\n  count(distinct Id) as num_posts, \n  sum(CAST(ViewCount AS BIGINT)) as all_time_views\nfrom \n  Posts\nwhere PostTypeId = 1\ngroup by year(CreationDate)\norder by year(CreationDate) desc"},{"QuerySetId":211428,"Title":"My comments ordered by votes","Description":null,"QueryBody":"SELECT postID AS \"Post Link\", Score, Text FROM Comments WHERE UserId = 56960 AND Score > 0 ORDER BY Score DESC","CreationDate":"2014-07-31 02:30:59","validated":false,"QueryBody_Original":"SELECT  postID [Post Link], Score, Text\nFROM \n    Comments\nWHERE UserId = 56960\nAND Score > 0\nORDER BY Score Desc"},{"QuerySetId":211436,"Title":"Recently closed questions with a tag","Description":null,"QueryBody":"SELECT p.ClosedDate, p.Score, p.Id AS \"Post Link\" FROM Posts AS p WHERE (p.PostTypeId = 1 AND p.AcceptedAnswerID IS NULL AND NOT p.ClosedDate IS NULL AND p.Score <= 1 AND 1 >= ALL (SELECT a.Score FROM Posts AS a WHERE (a.ParentId = p.Id)) AND Tags LIKE '%##Tag##%' AND NOT EXISTS(SELECT pl.Id FROM PostLinks AS pl WHERE pl.PostId = p.Id AND pl.LinkTypeId = 3)) ORDER BY p.ClosedDate DESC","CreationDate":"2014-07-31 05:07:16","validated":false,"QueryBody_Original":"SELECT  p.ClosedDate, p.Score, p.Id AS [Post Link] \nFROM Posts p \nWHERE (\n  p.PostTypeId = 1 AND\n  p.AcceptedAnswerID IS NULL AND\n  p.ClosedDate IS NOT NULL AND\n  p.Score <= 1 AND\n  1 >= ALL (\n    SELECT a.Score FROM Posts a WHERE (\n      a.ParentId = p.Id\n    ) \n  )\n  AND Tags Like '%##Tag##%'\n  AND NOT EXISTS ( SELECT pl.Id FROM PostLinks pl\n  WHERE pl.PostId = p.Id AND pl.LinkTypeId = 3\n  ) \n)\nORDER BY p.ClosedDate DESC"},{"QuerySetId":211604,"Title":"Chris's \"use a reference\" comments","Description":null,"QueryBody":"SELECT CreationDate, Id AS \"Comment Link\" FROM Comments WHERE UserId = 962089 AND Text LIKE '%a reference%' ORDER BY CreationDate","CreationDate":"2014-07-31 21:08:28","validated":false,"QueryBody_Original":"SELECT  CreationDate, Id AS [Comment Link]\n  FROM Comments\n WHERE UserId = 962089\n   AND Text LIKE '%a reference%'\n ORDER BY CreationDate ASC"},{"QuerySetId":211651,"Title":"Percentage of Answers on Closed Questions","Description":null,"QueryBody":"SELECT SUM(qPosts.AnswerCount) AS \"Total Answers\", SUM(CASE WHEN NOT qPosts.ClosedDate IS NULL THEN qPosts.AnswerCount ELSE 0 END) AS \"Answers on Closed Questions\", SUM(CASE WHEN NOT qPosts.ClosedDate IS NULL THEN qPosts.AnswerCount ELSE 0 END) * 100 \/ SUM(qPosts.AnswerCount) AS \"Percentage of Answers on Closed Questions\" FROM Posts AS qPosts WHERE qPosts.PostTypeID = 1 \/* Questions *\/","CreationDate":"2014-07-31 21:56:31","validated":false,"QueryBody_Original":"SELECT \n    SUM(qPosts.AnswerCount) [Total Answers],\n    SUM(CASE WHEN qPosts.ClosedDate IS NOT NULL THEN qPosts.AnswerCount ELSE 0 END) [Answers on Closed Questions],\n    SUM(CASE WHEN qPosts.ClosedDate IS NOT NULL THEN qPosts.AnswerCount ELSE 0 END) * 100 \/ SUM(qPosts.AnswerCount) as [Percentage of Answers on Closed Questions]\nFROM Posts as qPosts \nWHERE qPosts.PostTypeID = 1 --Questions"},{"QuerySetId":211761,"Title":"Questions with a deleted owner and an accepted answer with a deleted owner.","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p WHERE p.PostTypeId = 1 AND p.OwnerUserId IS NULL AND NOT p.AcceptedAnswerId IS NULL AND (SELECT p2.OwnerUserId FROM Posts AS p2 WHERE p2.Id = p.AcceptedAnswerId) IS NULL LIMIT 100","CreationDate":"2014-08-01 06:33:08","validated":false,"QueryBody_Original":"SELECT  TOP 100 p.Id as [Post Link] FROM Posts p\nWHERE p.PostTypeId = 1\nAND p.OwnerUserId IS NULL\nAND p.AcceptedAnswerId IS NOT NULL\nAND (SELECT p2.OwnerUserId FROM Posts p2 WHERE p2.Id = p.AcceptedAnswerId) IS NULL"},{"QuerySetId":212959,"Title":"vote to close by off-topic>other","Description":null,"QueryBody":"SELECT * FROM Votes WHERE VoteTypeId = 6 AND CreationDate >= '2014-08-01 00:00:00'","CreationDate":"2014-08-01 20:43:52","validated":false,"QueryBody_Original":"SELECT  *\nfrom Votes\nwhere\n VoteTypeId = 6\n and CreationDate >= '2014-08-01 00:00:00'\n-- VoteTypes"},{"QuerySetId":212995,"Title":"Metrics of Question Activity Over Time","Description":"The minimum, maximum, and average number of answers per post on Stack Overflow.\r\n","QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%YEAR') AS Year, TIME_TO_STR(p.CreationDate, '%-mONT%-H') AS Month, COUNT(*) AS Questions, SUM(p.AnswerCount) AS Answers, SUM(p.Score) AS QuestionUpvotes, SUM(CASE WHEN p.AnswerCount > 0 THEN 1 ELSE 0 END) AS QuestionsWithAnswers, SUM(CASE WHEN NOT p.AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) AS QuestionsWithAccepted, SUM(CASE WHEN NOT p.ClosedDate IS NULL THEN 1 ELSE 0 END) AS OpenQuestions FROM Posts AS p WHERE p.PostTypeId = 1 GROUP BY TIME_TO_STR(p.CreationDate, '%YEAR'), TIME_TO_STR(p.CreationDate, '%-mONT%-H') ORDER BY Year, Month","CreationDate":"2014-12-03 14:27:52","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(YEAR, p.CreationDate) as Year, DATEPART(MONTH, p.CreationDate) as Month, Count(*) as Questions,\n  sum(p.AnswerCount) as Answers,\n  sum(p.Score) as QuestionUpvotes,\n  sum(case when p.AnswerCount > 0 then 1 else 0 end) as QuestionsWithAnswers,\n  sum(case when p.AcceptedAnswerId is not null then 1 else 0 end) as QuestionsWithAccepted,\n  sum(case when p.ClosedDate is not NULL then 1 else 0 end) as OpenQuestions\nfrom Posts p\nwhere p.PostTypeId=1\nGROUP BY DATEPART(YEAR, p.CreationDate), DATEPART(MONTH, p.CreationDate)\nORDER BY Year, Month"},{"QuerySetId":213068,"Title":"Tag Wikis that are Too Short","Description":null,"QueryBody":"SELECT Tags.TagName AS \"Name\", Tags.Count AS \"Number of Posts\", Tags.Id AS \"Tag ID\", LENGTH(ex.Body) AS \"Tag Summary Length\", LENGTH(ex.Body) - LENGTH(REPLACE(ex.Body, ' ', '')) AS \"Words in Tag Summary\", LENGTH(w.Body) AS \"Tag Wiki Length\", LENGTH(w.Body) - LENGTH(REPLACE(w.Body, ' ', '')) AS \"Words in Tag Wiki\" FROM Tags LEFT JOIN Posts AS ex ON Tags.ExcerptPostId = ex.Id AND ex.PostTypeID = 4 \/* TagWikiExcerpt *\/ LEFT JOIN Posts AS w ON Tags.WikiPostId = w.Id AND w.PostTypeID = 5 \/* TagWiki *\/ WHERE LENGTH(ex.Body) < 50 \/* Tag Summary under 50 characters *\/ OR LENGTH(w.Body) < 100 \/* Full Tag Wiki under 100 characters *\/ OR NOT w.Body LIKE '%[* \\<>()[-#_+`]%' \/* no markdown styling :( *\/ ORDER BY Tags.Count DESC","CreationDate":"2014-08-01 22:16:52","validated":false,"QueryBody_Original":"SELECT \n  Tags.TagName as [Name],\n  Tags.Count as [Number of Posts],\n  Tags.Id as [Tag ID],\n  LEN(ex.Body) as [Tag Summary Length], \n  LEN(ex.Body) - LEN(REPLACE(ex.Body, ' ', '')) as [Words in Tag Summary],\n  LEN(w.Body) as [Tag Wiki Length], \n  LEN(w.Body) - LEN(REPLACE(w.Body, ' ', '')) as [Words in Tag Wiki]\nFROM Tags\nLEFT JOIN Posts ex\n  ON Tags.ExcerptPostId = ex.Id AND ex.PostTypeID = 4 --TagWikiExcerpt\nLEFT JOIN Posts w\n  ON Tags.WikiPostId = w.Id AND w.PostTypeID = 5 --TagWiki\n\nWHERE \n  LEN(ex.Body) < 50 -- Tag Summary under 50 characters\n  OR\n  LEN(w.Body) < 100 -- Full Tag Wiki under 100 characters\n  OR \n  w.Body NOT LIKE '%[* \\<>()[-#_+`]%' -- no markdown styling :(\n  \nORDER BY Tags.Count DESC"},{"QuerySetId":213140,"Title":"Questions by low rep users","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Tags, u.Reputation AS \"Asker's Reputation\", p.Score, CASE WHEN ClosedDate IS NULL THEN 'Open' ELSE 'Closed' END AS \"Open\" FROM Users AS u INNER JOIN (SELECT * FROM Posts WHERE PostTypeId = 1) AS p ON p.OwnerUserId = u.Id WHERE u.Reputation < 500 AND u.Reputation <> 1 AND NOT p.Tags LIKE '%identify-this%'","CreationDate":"2014-08-02 01:05:45","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link],\n       p.Tags,\n       u.Reputation AS [Asker's Reputation],\n       p.Score,\n       CASE WHEN ClosedDate IS NULL THEN 'Open' ELSE 'Closed' END AS [Open]\nFROM Users u\nINNER JOIN (SELECT * FROM Posts WHERE PostTypeId = 1) p\nON p.OwnerUserId = u.Id\nWHERE \n      u.Reputation < 500\n      AND u.Reputation != 1\n      AND p.Tags NOT LIKE '%identify-this%'"},{"QuerySetId":213319,"Title":"Average views per question by month","Description":null,"QueryBody":"SELECT CAST(CAST(TIME_TO_STR(p.CreationDate, '%Y') AS TEXT(4)) + '-' + CAST(TIME_TO_STR(p.CreationDate, '%M') AS TEXT(2)) + '-01' AS DATETIME) AS \"Date\", COUNT(*) AS \"Count\", AVG(p.ViewCount) AS \"Avg views\", STDEV(p.ViewCount) AS \"Std dev\", AVG(CASE WHEN p.Score > 0 THEN p.ViewCount ELSE NULL END) AS \"Score >0\" \/* , *\/ \/* Avg(CASE p.ClosedDate WHEN NULL THEN NULL ELSE p.ViewCount END) AS [Open] *\/ FROM Posts AS p WHERE p.PostTypeId = 1 GROUP BY CAST(CAST(TIME_TO_STR(p.CreationDate, '%Y') AS TEXT(4)) + '-' + CAST(TIME_TO_STR(p.CreationDate, '%M') AS TEXT(2)) + '-01' AS DATETIME) ORDER BY CAST(CAST(TIME_TO_STR(p.CreationDate, '%Y') AS TEXT(4)) + '-' + CAST(TIME_TO_STR(p.CreationDate, '%M') AS TEXT(2)) + '-01' AS DATETIME) DESC","CreationDate":"2014-08-07 23:56:27","validated":false,"QueryBody_Original":"SELECT \n  CAST(CAST(DATEPART(yyyy, p.CreationDate) AS NVARCHAR(4)) + '-' + CAST(DATEPART(mm, p.CreationDate) AS NVARCHAR(2)) + '-01' AS DATETIME) AS [Date],\n  Count(*) AS [Count],\n  Avg(p.ViewCount) AS [Avg views],\n  Stdev(p.ViewCount) AS [Std dev],\n  Avg(IIF(p.Score > 0, p.ViewCount, NULL)) AS [Score >0] --,\n  --Avg(CASE p.ClosedDate WHEN NULL THEN NULL ELSE p.ViewCount END) AS [Open]\nFROM Posts p\nWHERE p.PostTypeId = 1\nGROUP BY CAST(CAST(DATEPART(yyyy, p.CreationDate) AS NVARCHAR(4)) + '-' + CAST(DATEPART(mm, p.CreationDate) AS NVARCHAR(2)) + '-01' AS DATETIME)\nORDER BY CAST(CAST(DATEPART(yyyy, p.CreationDate) AS NVARCHAR(4)) + '-' + CAST(DATEPART(mm, p.CreationDate) AS NVARCHAR(2)) + '-01' AS DATETIME) DESC"},{"QuerySetId":213657,"Title":"sql injection in comments on questions","Description":"http:\/\/meta.stackoverflow.com\/questions\/267566\/etiquette-of-additional-information","QueryBody":"SELECT c.postid AS \"Post Link\", text FROM comments AS c INNER JOIN posts AS p ON p.id = c.postid WHERE text LIKE '%sql injection%' AND p.posttypeid = 1","CreationDate":"2014-08-02 16:55:54","validated":false,"QueryBody_Original":"SELECT  c.postid as [Post Link], text\nfrom comments c\ninner join posts p on p.id = c.postid\nwhere text like '%sql injection%'\nand p.posttypeid = 1"},{"QuerySetId":213879,"Title":"Find High-Voted Questions with No Accepted Answers in Last Month","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount AS Views, AnswerCount AS Answers, (SELECT Score FROM Posts AS b WHERE PostTypeId = 2 AND b.ParentId = a.Id ORDER BY Score DESC LIMIT 1) AS TopAnswerScore FROM Posts AS a WHERE NOT Tags LIKE '%' + 'story-identification' + '%' AND AcceptedAnswerId IS NULL AND PostTypeId = 1 AND CreationDate > CURRENT_TIMESTAMP() - 30 AND ClosedDate IS NULL ORDER BY AnswerCount, Score DESC LIMIT 100","CreationDate":"2014-09-25 18:48:21","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    Id AS [Post Link], \n    Score,\n    ViewCount as Views,\n    AnswerCount as Answers,\n    (SELECT TOP 1 Score FROM Posts b WHERE PostTypeId = 2 AND b.ParentId = a.Id ORDER BY Score DESC) AS TopAnswerScore\nFROM Posts a\nWHERE\n    Tags NOT LIKE '%'+'story-identification'+'%'\n    AND AcceptedAnswerId IS NULL\n    AND PostTypeId = 1\n    AND CreationDate > GETDATE() - 30\n    AND ClosedDate IS NULL\nORDER BY AnswerCount ASC, Score DESC"},{"QuerySetId":213938,"Title":"Rep gained by asking a duplicate","Description":"http:\/\/meta.stackexchange.com\/questions\/237286\/how-to-find-data-on-dupes-in-sp","QueryBody":"SELECT * FROM tags WHERE tagname LIKE 'reg%'","CreationDate":"2014-08-03 17:07:53","validated":false,"QueryBody_Original":"SELECT  * from  \ntags where tagname like 'reg%'"},{"QuerySetId":214523,"Title":"Questions with only one tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Tags LIKE '<##tags##>' OR Tags LIKE '\u00e9##tags##\u00e0' LIMIT 5000","CreationDate":"2015-10-27 04:23:20","validated":false,"QueryBody_Original":"SELECT  TOP 5000\n  Id AS [Post Link]\nFROM Posts\nWHERE Tags LIKE '<##tags##>' OR Tags LIKE '\u00e9##tags##\u00e0'"},{"QuerySetId":215093,"Title":"Script to identify serial upvoters","Description":null,"QueryBody":"SELECT Users.Id, Users.Reputation, Badges.Date, Posts.Id AS PostId, Posts.CreationDate AS PostDate, Votes.VoteTypeId AS VoteId \/* into #tmp1 *\/ FROM Users LEFT JOIN Badges ON Users.Id = Badges.UserId LEFT JOIN Posts ON Users.Id = Posts.OwnerUserId LEFT JOIN Votes ON Posts.Id = Votes.PostId WHERE Badges.Name = 'Mortarboard' AND Votes.VoteTypeId = 2 AND Users.Reputation < 2000 AND CAST(Badges.Date AS DATE) = Votes.CreationDate AND CAST(Posts.CreationDate AS DATE) <> Votes.CreationDate","CreationDate":"2020-11-04 19:50:06","validated":false,"QueryBody_Original":"SELECT  Users.Id,\n       Users.Reputation, \n       Badges.Date,\n       Posts.Id as PostId, \n       Posts.CreationDate as PostDate,\n       Votes.VoteTypeId as VoteId\n--into #tmp1\nfrom Users\n     left join Badges on Users.Id = Badges.UserId\n     left join Posts on Users.Id = Posts.OwnerUserId\n     left join Votes on Posts.Id = Votes.PostId\nwhere Badges.Name='Mortarboard' \n      and Votes.VoteTypeId=2\n      and Users.Reputation<2000\n      and cast(Badges.Date as date)=Votes.CreationDate\n      and cast(Posts.CreationDate as date)!=Votes.CreationDate;\n\n\n\n\n--SELECT distinct Users.Id as [User Link],\n--       Users.Reputation, \n--       count(Posts.Id)\n--from #tmp2;"},{"QuerySetId":215218,"Title":"Users with a Website or AboutMe - IDs <248532","Description":null,"QueryBody":"SELECT * FROM Users WHERE (LENGTH(WebsiteUrl) > 0 OR LENGTH(AboutMe) > 0) AND ID < 248532 ORDER BY ID","CreationDate":"2017-10-20 00:44:18","validated":false,"QueryBody_Original":"SELECT  * \nFROM Users\nWHERE (LEN(WebsiteUrl)>0 OR LEN(AboutMe)>0) AND ID<248532\nORDER BY ID"},{"QuerySetId":215405,"Title":"Users with a Website or AboutMe IDs 248532 to 497677","Description":null,"QueryBody":"SELECT * FROM Users WHERE (LENGTH(WebsiteUrl) > 0 OR LENGTH(AboutMe) > 0) AND ID >= 248532 AND ID < 497677 ORDER BY ID","CreationDate":"2017-10-20 00:46:42","validated":false,"QueryBody_Original":"SELECT  * \nFROM Users\nWHERE (LEN(WebsiteUrl)>0 OR LEN(AboutMe)>0) AND ID>=248532 AND ID<497677\nORDER BY ID"},{"QuerySetId":215520,"Title":"Opinions with low score (VLQ ready)","Description":null,"QueryBody":"SELECT id AS \"Post Link\", creationdate FROM posts WHERE closeddate IS NULL AND posttypeid = 1 AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) <= 3 AND score < 2 AND (title LIKE '%what is the best%' COLLATE Latin1_General_CI_AI OR title LIKE '%what are the best%' COLLATE Latin1_General_CI_AI) ORDER BY LENGTH(body)","CreationDate":"2016-06-30 16:29:52","validated":false,"QueryBody_Original":"SELECT  \n  id as [Post Link],\n  creationdate\nfrom\n  posts\nwhere\n  closeddate is null and\n  posttypeid = 1 and\n  datediff(month, CreationDate, GETDATE()) <=3 and\n  score < 2 and\n  (\n   title like '%what is the best%' collate Latin1_General_CI_AI or\n   title like '%what are the best%' collate Latin1_General_CI_AI\n  )\n  order by len(body) asc"},{"QuerySetId":215530,"Title":"Questions with \"wrong\" or \"incorrect\" in the title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ClosedDate, Tags FROM Posts WHERE PostTypeId = 1 \/* Question *\/ AND Title LIKE '%wrong%' OR Title LIKE '%incorrect%' ORDER BY Id","CreationDate":"2014-08-06 21:59:15","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Score, ClosedDate, Tags\n    FROM Posts\n    WHERE PostTypeId = 1  -- Question\n        AND Title LIKE '%wrong%' OR Title LIKE '%incorrect%'\n    ORDER BY Id;"},{"QuerySetId":215578,"Title":"Average number of undeleted questions per day per month since site inception","Description":null,"QueryBody":"SELECT DATEFROMPARTS(YEAR(\"Date\"), MONTH(\"Date\"), 1) AS \"Month\", AVG(\"Count\") AS \"Average Questions \/ Day \/ Month\" FROM (SELECT DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate)) AS \"Date\", COUNT(*) AS \"Count\" FROM Posts WHERE PostTypeId = 1 \/* question *\/ GROUP BY YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate)) AS QuestionsPerDay GROUP BY YEAR(\"Date\"), MONTH(\"Date\") ORDER BY \"Month\"","CreationDate":"2014-08-07 06:52:45","validated":false,"QueryBody_Original":"SELECT \n  DATEFROMPARTS(YEAR([Date]), MONTH([Date]), 1) AS [Month],\n  AVG([Count]) AS [Average Questions \/ Day \/ Month]\nFROM (\n  SELECT\n    DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate)) AS [Date],\n    COUNT(*) AS [Count]\n  FROM Posts\n  WHERE PostTypeId = 1 -- question\n  GROUP BY YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate)\n  -- ORDER BY [Date]\n) AS QuestionsPerDay\nGROUP BY YEAR([Date]), MONTH([Date])\nORDER BY [Month]"},{"QuerySetId":215861,"Title":"Users by Downvotes (top 100)","Description":null,"QueryBody":"SELECT * FROM Users ORDER BY DownVotes DESC LIMIT 100","CreationDate":"2014-08-07 23:21:40","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    *\nFROM Users\nORDER BY DownVotes DESC"},{"QuerySetId":215871,"Title":"Ratio of downvoted questions over time.","Description":"Look at the Graph, to see the evolution of the upvote\/downvote ratio.","QueryBody":"SELECT DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1) AS YearMonth, 1 \/ (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ NULLIF(CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT), 0)) AS Ratio FROM Votes WHERE CreationDate > '01-01-2010' GROUP BY DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1) ORDER BY DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1)","CreationDate":"2014-12-20 06:09:46","validated":false,"QueryBody_Original":"SELECT \ndatefromparts(YEAR(CreationDate), MONTH(CreationDate), 1) AS YearMonth\n, 1\/(CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ nullif(CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float),0)) AS Ratio\nFROM Votes\nWHERE CreationDate > '01-01-2010'\nGROUP BY datefromparts(YEAR(CreationDate), MONTH(CreationDate), 1)\nORDER BY datefromparts(YEAR(CreationDate), MONTH(CreationDate), 1)"},{"QuerySetId":215895,"Title":"Movement of Users vs Downvote Ratio","Description":null,"QueryBody":"SELECT DATEFROMPARTS(YEAR(U.CreationDate), MONTH(U.CreationDate), 1) AS YearMonth, MAX(U.Id) AS MaxUsers, MAX(U.Id) - LAG(MAX(U.Id), 1, 0) OVER (ORDER BY DATEFROMPARTS(YEAR(U.CreationDate), MONTH(U.CreationDate), 1)) AS Change, 1 \/ (CAST(SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ NULLIF(CAST(SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT), 0)) AS DownvoteUpvoteRatio FROM Users AS U INNER JOIN Votes AS V ON DATEFROMPARTS(YEAR(U.CreationDate), MONTH(U.CreationDate), 1) = DATEFROMPARTS(YEAR(V.CreationDate), MONTH(V.CreationDate), 1) GROUP BY DATEFROMPARTS(YEAR(U.CreationDate), MONTH(U.CreationDate), 1) ORDER BY DATEFROMPARTS(YEAR(U.CreationDate), MONTH(U.CreationDate), 1)","CreationDate":"2014-08-08 00:59:29","validated":false,"QueryBody_Original":"SELECT \n    datefromparts(YEAR(U.CreationDate), MONTH(U.CreationDate), 1) AS YearMonth\n    , MAX(U.Id) AS MaxUsers\n    , MAX(U.Id) - LAG(MAX(U.Id), 1, 0) OVER (ORDER BY  datefromparts(YEAR(U.CreationDate), MONTH(U.CreationDate), 1)) AS Change\n    , 1\/(CAST(SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ nullif(CAST(SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS float),0)) AS DownvoteUpvoteRatio\nFROM Users U\nINNER JOIN Votes V ON datefromparts(YEAR(U.CreationDate), MONTH(U.CreationDate), 1) = datefromparts(YEAR(V.CreationDate), MONTH(V.CreationDate), 1)\nGROUP BY datefromparts(YEAR(U.CreationDate), MONTH(U.CreationDate), 1)  \nORDER BY datefromparts(YEAR(U.CreationDate), MONTH(U.CreationDate), 1)"},{"QuerySetId":215917,"Title":"Posts from which an initial tag was removed","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", REPLACE(SUBSTRING(i.Text, 2, LENGTH(i.Text) - 2), '><', ' ') AS \"Initial tags\", REPLACE(SUBSTRING(p.Tags, 2, LENGTH(p.Tags) - 2), '><', ' ') AS \"Current tags\" FROM Posts AS p INNER JOIN PostHistory AS i ON p.Id = i.PostId WHERE i.PostHistoryTypeId = 3 \/* Initial Tags *\/ AND i.Text LIKE '%<' + '##Tag##' + '>%' AND NOT p.Tags LIKE '%<' + '##Tag##' + '>%' ORDER BY p.Id","CreationDate":"2014-08-08 02:34:11","validated":false,"QueryBody_Original":"SELECT \n  p.Id AS [Post Link],\n  Replace(SubString(i.Text, 2, Len(i.Text)-2), '><', ' ') AS [Initial tags],\n  Replace(SubString(p.Tags, 2, Len(p.Tags)-2), '><', ' ') AS [Current tags]\nFROM Posts p\nINNER JOIN PostHistory i ON p.Id = i.PostId\nWHERE i.PostHistoryTypeId = 3 -- Initial Tags\n  AND i.Text LIKE '%<' + '##Tag##' + '>%'\n  AND p.Tags NOT LIKE '%<' + '##Tag##' + '>%'\nORDER BY p.Id ASC"},{"QuerySetId":215920,"Title":"Guess NAA flags on SO by comments","Description":null,"QueryBody":"SELECT 'http:\/\/stackoverflow.com\/questions\/' + CAST(c.postID AS TEXT) FROM comments AS c INNER JOIN posts AS p ON (p.id = c.postID)\/* where c.text like '%possible duplicate of%' *\/  WHERE c.text LIKE '%This does not provide an answer to the question.%' AND c.score >= 0 AND p.body LIKE '%?%' AND p.score <= 0 AND NOT EXISTS(SELECT * FROM posthistory AS h WHERE posthistorytypeid IN (12, 13) AND h.postid = c.postid) ORDER BY LENGTH(p.body)","CreationDate":"2016-05-21 13:52:36","validated":false,"QueryBody_Original":"SELECT  'http:\/\/stackoverflow.com\/questions\/' + cast(c.postID as varchar) from comments c\ninner join posts p on (p.id = c.postID) \nwhere c.text like '%This does not provide an answer to the question.%'\n--where c.text like '%possible duplicate of%'\nand c.score >=0\nand p.body like '%?%'\nand p.score <=0 and not exists (\n  SELECT * from posthistory h where posthistorytypeid in (12,13) and h.postid=c.postid\n)\norder by len(p.body)"},{"QuerySetId":215959,"Title":"Top 50 Best Rep Per Answer","Description":null,"QueryBody":"SELECT U.DisplayName, OwnerUserId, COUNT(Posts.Id) AS Questions, U.Reputation \/ COUNT(*) AS Average FROM Posts INNER JOIN Users AS U ON OwnerUserId = U.Id WHERE Posts.PostTypeId = 2 GROUP BY OwnerUserId, U.Reputation, U.DisplayName HAVING COUNT(*) > 80 ORDER BY Average DESC LIMIT 50","CreationDate":"2015-05-22 18:44:53","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  U.DisplayName,\n  OwnerUserId,\n  Count(Posts.Id) as Questions,\n  U.Reputation \/ Count(*) as Average\n  \nFROM Posts\n  INNER JOIN Users as U on OwnerUserId = U.Id\n\nWhere Posts.PostTypeId = 2\n\nGROUP BY OwnerUserId, U.Reputation, U.DisplayName \nHAVING COUNT(*) > 80\nORDER BY Average DESC"},{"QuerySetId":216293,"Title":"Most prominent users from Ireland","Description":null,"QueryBody":"SELECT id, DisplayName, reputation FROM Users WHERE Location LIKE '%Ireland%' AND reputation > 8000 ORDER BY reputation DESC","CreationDate":"2014-08-09 20:54:25","validated":false,"QueryBody_Original":"SELECT  id,DisplayName, reputation from Users where Location like '%Ireland%' and reputation > 8000 order by reputation desc"},{"QuerySetId":216339,"Title":"Vicious Dog based on Accepts","Description":null,"QueryBody":"SELECT COUNT(*), MAX(a.CreationDate) AS LastOccurance, q.OwnerUserId AS \"User Link\", qu.Reputation AS AskerReputation, a.OwnerUserId AS \"User Link\", au.Reputation AS AnswererReputation, apc.TotalAnswers FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id INNER JOIN Users AS qu ON qu.Id = q.OwnerUserId INNER JOIN Users AS au ON au.Id = a.OwnerUserid INNER JOIN (SELECT COUNT(*) AS TotalAnswers, OwnerUserId FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS apc ON apc.OwnerUserId = au.Id WHERE qu.Id <> au.Id AND au.Reputation > 15 GROUP BY q.OwnerUserId, a.OwnerUserId, au.Reputation, qu.Reputation, apc.TotalAnswers HAVING COUNT(*) > 4 AND au.Reputation <= 5000 ORDER BY LastOccurance DESC","CreationDate":"2014-08-14 22:46:59","validated":false,"QueryBody_Original":"SELECT  COUNT(*), MAX(a.CreationDate) as LastOccurance, q.OwnerUserId as [User Link], qu.Reputation as AskerReputation, a.OwnerUserId as [User Link], au.Reputation as AnswererReputation, apc.TotalAnswers\nfrom Posts q\ninner join Posts a on q.AcceptedAnswerId=a.Id\ninner join Users qu on qu.Id = q.OwnerUserId\ninner join Users au on au.Id = a.OwnerUserid\ninner join (SELECT COUNT(*) as TotalAnswers, OwnerUserId from Posts where PostTypeId=2 GROUP BY OwnerUserId) apc on apc.OwnerUserId=au.Id\nwhere qu.Id != au.Id\nand au.Reputation>15\ngroup by q.OwnerUserId, a.OwnerUserId, au.Reputation, qu.Reputation, apc.TotalAnswers\nhaving COUNT(*)>4 and au.Reputation<=5000\norder by LastOccurance desc"},{"QuerySetId":216357,"Title":"Gaps in Posts Id ","Description":null,"QueryBody":"SELECT Id + 1 FROM Posts WHERE NOT Id + 1 IN (SELECT Id FROM Posts) ORDER BY Id","CreationDate":"2014-08-10 02:30:29","validated":false,"QueryBody_Original":"SELECT  Id+1  from Posts\nwhere Id+1 not in (SELECT Id from Posts)\norder by Id asc"},{"QuerySetId":216962,"Title":"Question with the most answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", AnswerCount FROM Posts WHERE PostTypeId = 1 AND AnswerCount > 10 ORDER BY AnswerCount DESC","CreationDate":"2015-12-30 22:58:19","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], AnswerCount\nfrom Posts\nwhere PostTypeId = 1\n      and AnswerCount > 10\n--      and CommunityOwnedDate is null\norder by AnswerCount desc"},{"QuerySetId":217167,"Title":"Usu\u00e1rios vs. Votantes no SOpt","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM Users) AS TotalUsuarios, (SELECT COUNT(*) FROM Users WHERE Reputation >= 15) AS PodemVotar, (SELECT COUNT(*) FROM Users WHERE UpVotes + DownVotes > 0) AS Votaram, (SELECT COUNT(*) FROM Users WHERE UpVotes + DownVotes > 9) AS VotaramDezVezes, (SELECT COUNT(*) FROM Users WHERE Reputation >= 200) AS UsuariosAtivos, (SELECT COUNT(*) FROM Users WHERE Reputation >= 200 AND UpVotes + DownVotes > 0) AS AtivosVotaram, (SELECT COUNT(*) FROM Users WHERE Reputation >= 200 AND UpVotes + DownVotes > 9) AS AtivosVotaramDezVezes","CreationDate":"2014-08-13 00:56:19","validated":false,"QueryBody_Original":"SELECT \n  (SELECT COUNT(*) FROM Users) AS TotalUsuarios,\n  (SELECT COUNT(*) FROM Users WHERE Reputation >= 15) AS PodemVotar,\n  (SELECT COUNT(*) FROM Users WHERE UpVotes + DownVotes > 0) AS Votaram,\n  (SELECT COUNT(*) FROM Users WHERE UpVotes + DownVotes > 9) AS VotaramDezVezes,\n  (SELECT COUNT(*) FROM Users WHERE Reputation >= 200) AS UsuariosAtivos,\n  (SELECT COUNT(*) FROM Users WHERE Reputation >= 200 AND UpVotes + DownVotes > 0) AS AtivosVotaram,\n  (SELECT COUNT(*) FROM Users WHERE Reputation >= 200 AND UpVotes + DownVotes > 9) AS AtivosVotaramDezVezes"},{"QuerySetId":217217,"Title":"Bad questions with good answers","Description":"Highest score range between question and best answer, for questions with negative score that have answers with positive score.","QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, tmp.BestAnswerScore, tmp.BestAnswerScore - p.Score AS ScoreDiff, p.CreationDate, p.OwnerUserId AS \"User Link\" FROM Posts AS p INNER JOIN (SELECT ParentId, MAX(Score) AS BestAnswerScore FROM Posts WHERE PostTypeId = 2 GROUP BY ParentId) AS tmp ON p.Id = tmp.ParentId WHERE p.PostTypeId = 1 AND p.Score < 0 AND tmp.BestAnswerScore > 0 ORDER BY ScoreDiff DESC LIMIT 500","CreationDate":"2014-08-12 21:25:57","validated":false,"QueryBody_Original":"SELECT  TOP (500)\n  p.Id AS [Post Link],\n  p.Score,\n  tmp.BestAnswerScore,\n  tmp.BestAnswerScore - p.Score AS ScoreDiff,\n  p.CreationDate,\n  p.OwnerUserId AS [User Link]\nFROM\n  Posts p INNER JOIN (\n    SELECT ParentId, MAX(Score) AS BestAnswerScore\n    FROM Posts\n    WHERE PostTypeId = 2\n    GROUP BY ParentId\n  ) tmp ON p.Id = tmp.ParentId\nWHERE\n  p.PostTypeId = 1 AND\n  p.Score < 0 AND\n  tmp.BestAnswerScore > 0\nORDER BY\n  ScoreDiff DESC"},{"QuerySetId":217358,"Title":"Total Answers from Users with Parameters","Description":null,"QueryBody":"SELECT COUNT(*) FROM USERS","CreationDate":"2015-10-08 16:32:40","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM USERS;"},{"QuerySetId":217360,"Title":"Waffles and Pancakes with Maple Syrup","Description":null,"QueryBody":"SELECT COUNT(*) FROM USERS","CreationDate":"2015-10-08 16:32:48","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM USERS;"},{"QuerySetId":217389,"Title":"Inactive Question above than 6 month","Description":null,"QueryBody":"SELECT * FROM posts WHERE id = 25279607","CreationDate":"2014-08-18 12:05:20","validated":false,"QueryBody_Original":"SELECT  *\nfrom posts\nwhere id = 25279607"},{"QuerySetId":217429,"Title":"select number of answers from user","Description":null,"QueryBody":"SELECT COUNT(Id) FROM POSTS WHERE POSTS.OwnerUserId = 939860","CreationDate":"2014-08-13 17:00:39","validated":false,"QueryBody_Original":"SELECT  count(Id) FROM POSTS where POSTS.OwnerUserId = 939860"},{"QuerySetId":217860,"Title":"Vicious Dog based on Strangeness","Description":null,"QueryBody":"SELECT COUNT(*), OwnerUserId FROM Posts WHERE PostTypeId = 2 AND Id IN (SELECT AcceptedAnswerId FROM Posts) GROUP BY OwnerUserId","CreationDate":"2014-08-15 06:08:35","validated":false,"QueryBody_Original":"SELECT  COUNT(*), OwnerUserId from Posts where PostTypeId=2 and Id in (SELECT AcceptedAnswerId from Posts) GROUP BY OwnerUserId"},{"QuerySetId":218035,"Title":"Voting Trend - Questions Only","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0) AS \"CreationDate\", COUNT(CASE WHEN p.Score < 0 AND NOT p.ClosedDate IS NULL THEN 1 ELSE NULL END) AS \"Voted down and closed\", COUNT(CASE WHEN p.Score < 0 THEN 1 ELSE NULL END) AS \"Voted down\", COUNT(CASE WHEN p.Score = 0 AND NOT p.ClosedDate IS NULL THEN 1 ELSE NULL END) AS \"Zero and closed\", COUNT(CASE WHEN p.Score = 0 THEN 1 ELSE NULL END) AS \"Ignored\", COUNT(CASE WHEN p.Score > 0 AND NOT p.ClosedDate IS NULL THEN 1 ELSE NULL END) AS \"Voted up and closed\", COUNT(CASE WHEN p.Score > 0 THEN 1 ELSE NULL END) AS \"Voted up\", COUNT(p.Id) AS Total FROM Posts AS p WHERE p.ParentId IS NULL GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0) ORDER BY DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0)","CreationDate":"2014-08-15 23:09:57","validated":false,"QueryBody_Original":"SELECT  DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0) as [CreationDate],\n  count(case when p.Score < 0 and p.ClosedDate is not null then 1 else null end) as [Voted down and closed],\n  count(case when p.Score < 0 then 1 else null end) as [Voted down],\n  count(case when p.Score = 0 and p.ClosedDate is not null then 1 else null end) as [Zero and closed],\n  count(case when p.Score = 0 then 1 else null end) as [Ignored],\n  count(case when p.Score > 0 and p.ClosedDate is not null then 1 else null end) as [Voted up and closed],\n  count(case when p.Score > 0 then 1 else null end) as [Voted up],\n  count(p.Id) as Total\nfrom Posts p\nwhere p.ParentId is null\ngroup by DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0)\norder by DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0)"},{"QuerySetId":218071,"Title":"How well do new users' posts fair on Meta?","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score AS \"Post Score\", u.Reputation AS \"User Reputation\", p.ClosedDate AS \"Date Closed\" FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.PostTypeId = 1 AND p.Score < 0 AND u.Reputation < 50 AND LENGTH(p.Body) < 500 AND p.ClosedDate <> '' ORDER BY \"Post Score\", \"User Reputation\"","CreationDate":"2014-08-15 22:21:47","validated":false,"QueryBody_Original":"SELECT \n    p.Id AS [Post Link],\n    p.Score AS [Post Score],\n    u.Reputation AS [User Reputation],\n    p.ClosedDate AS [Date Closed]\nFROM\n    Posts as p\nINNER JOIN\n    Users AS u\nON\n  u.Id = p.OwnerUserId\nWHERE\n    p.PostTypeId = 1\n  AND\n    p.Score < 0\n  AND\n    u.Reputation < 50\n  AND\n    LEN(p.Body) < 500\n  AND\n    p.ClosedDate != ''\nORDER BY\n  [Post Score] ASC, [User Reputation] ASC"},{"QuerySetId":218382,"Title":"SELECT TOP 65 u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes FROM Users u WHERE ","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes FROM Users AS u WHERE u.Location LIKE '%Portugal%' OR u.Location LIKE '%portugal%' GROUP BY u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes ORDER BY Reputation DESC LIMIT 65","CreationDate":"2014-08-17 06:18:01","validated":false,"QueryBody_Original":"SELECT  TOP 65 u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes\nFROM Users u\nWHERE u.Location like '%Portugal%' OR u.Location like '%portugal%'\nGROUP BY u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes\nORDER BY Reputation DESC;"},{"QuerySetId":218452,"Title":"High-Rep Users with only one post","Description":null,"QueryBody":"SELECT 'site:\/\/users\/' + CAST(u.id AS TEXT) + '|' + CAST(u.displayname AS TEXT) AS \"User\", u.reputation, COUNT(p.id) FROM users AS u, posts AS p WHERE u.reputation > 10000 AND u.id = p.owneruserid AND (p.posttypeid = 1 OR p.posttypeid = 2) GROUP BY u.id, u.displayname, u.reputation HAVING COUNT(p.id) = 1 ORDER BY u.reputation DESC","CreationDate":"2020-11-22 03:49:12","validated":false,"QueryBody_Original":"SELECT  \n  'site:\/\/users\/' + CAST(u.id as nvarchar) + '|' + CAST(u.displayname as nvarchar) AS [User], \n  u.reputation,\n  count(p.id)\nfrom users u, posts p\nwhere u.reputation > 10000 and \n  u.id = p.owneruserid and \n  (p.posttypeid = 1 or p.posttypeid = 2)\ngroup by u.id, u.displayname, u.reputation\nhaving count(p.id) = 1\norder by u.reputation desc"},{"QuerySetId":218553,"Title":"Number of distinct users who posted a Q or an A, in the last year (365 days)","Description":"Number of distinct users who posted a Q or an A, in the last 30 days","QueryBody":"SELECT COUNT(DISTINCT Users.id) FROM Users JOIN Posts ON Posts.OwnerUserId = Users.Id AND (Posts.PostTypeId = 1) WHERE DATEDIFF(CURRENT_TIMESTAMP(), Posts.CreationDate) < 365","CreationDate":"2014-08-18 01:09:55","validated":false,"QueryBody_Original":"SELECT  \n  COUNT(DISTINCT Users.id)\nFROM \n  Users\nJOIN \n  Posts ON \n    Posts.OwnerUserId = Users.Id \n    AND (Posts.PostTypeId =1)\nWHERE \n  DATEDIFF(day, Posts.CreationDate, GETDATE()) < 365"},{"QuerySetId":219015,"Title":"Sort users by great answer badge counts","Description":null,"QueryBody":"SELECT COUNT(userid), COUNT(DISTINCT userid) FROM badges WHERE name = 'Great Answer'","CreationDate":"2015-04-28 09:06:01","validated":false,"QueryBody_Original":"SELECT  count(userid), count(distinct userid)\n  from badges\n    where name = 'Great Answer'"},{"QuerySetId":219133,"Title":"Recent Unanswered Posts About C# & LINQ","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Score, ViewCount AS \"V\", AnswerCount AS \"A\", CommentCount AS \"C\", LastActivityDate, Tags FROM Posts WHERE ClosedDate IS NULL AND AnswerCount = 0 AND LastActivityDate > (CURRENT_TIMESTAMP() - 10) ORDER BY LastActivityDate DESC LIMIT 100","CreationDate":"2016-01-08 18:26:15","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    Id AS [Post Link]\n  , CreationDate\n  , Score\n  , ViewCount as [V]\n  , AnswerCount as [A]\n  , CommentCount as [C]\n  , LastActivityDate\n  , Tags\nFROM Posts\nWHERE \n  ClosedDate IS NULL \n  AND AnswerCount = 0 \n  AND LastActivityDate > (GETDATE() - 10)\n  -- AND Tags LIKE '%<c#>%' AND Tags LIKE '%<linq>%'\nORDER BY LastActivityDate DESC"},{"QuerySetId":219398,"Title":"answers that are possibly link only which were posted by new users","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", LENGTH(p.Body) AS BodyLength, p.ParentId, parentUser.DisplayName AS ParentOwner, p.Body FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId INNER JOIN Posts AS parentPost ON parentPost.Id = p.ParentId INNER JOIN Users AS parentUser ON parentUser.Id = parentPost.OwnerUserId WHERE p.PostTypeId = 2 AND p.Score < 3 AND p.Body LIKE '%a href%' AND LENGTH(p.Body) < 350 AND p.CreationDate > '2014-07-20T00:00:00.000' AND u.Reputation < 50 AND DATEDIFF(CURRENT_TIMESTAMP(), u.CreationDate) < 1 AND DATEDIFF(CURRENT_TIMESTAMP(), parentUser.CreationDate) < 1 ORDER BY BodyLength","CreationDate":"2014-08-20 21:30:57","validated":false,"QueryBody_Original":"SELECT \n    p.Id AS [Post Link],\n    LEN(p.Body) AS BodyLength,\n    p.ParentId,\n    parentUser.DisplayName AS ParentOwner,\n    p.Body\n    \nFROM\n    Posts AS p\nINNER JOIN\n    Users AS u\nON\n    u.Id = p.OwnerUserId\nINNER JOIN\n    Posts AS parentPost\nON\n    parentPost.Id = p.ParentId\nINNER JOIN\n    Users AS parentUser\nON\n    parentUser.Id = parentPost.OwnerUserId\nWHERE\n    p.PostTypeId = 2\n  AND\n    p.Score < 3\n  AND\n    p.Body like '%a href%'\n  AND\n    LEN(p.Body) < 350\n  AND\n    p.CreationDate > '2014-07-20T00:00:00.000'\n  AND\n    u.Reputation < 50\n  AND\n     DATEDIFF(MONTH, u.CreationDate, GETDATE()) < 1\n  AND\n     DATEDIFF(MONTH, parentUser.CreationDate, GETDATE()) < 1\nORDER BY\n    BodyLength ASC"},{"QuerySetId":219410,"Title":"Answers that are possibly link only which were posted by new users and question asker is new","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, LENGTH(p.Body) AS BodyLength FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId INNER JOIN Posts AS parentPost ON parentPost.Id = p.ParentId INNER JOIN Users AS parentUser ON parentUser.Id = parentPost.OwnerUserId WHERE p.PostTypeId = 2 AND p.Body LIKE '%a href%' AND p.CreationDate > '2014-01-01T00:00:00.000' AND DATEDIFF(p.CreationDate, u.CreationDate) < 1 AND DATEDIFF(p.CreationDate, parentUser.CreationDate) < 1 AND DATEDIFF(parentPost.CreationDate, p.CreationDate) < 1 AND parentUser.Id <> p.OwnerUserId ORDER BY p.CreationDate DESC","CreationDate":"2014-08-21 00:15:51","validated":false,"QueryBody_Original":"SELECT \n    p.Id AS [Post Link],\n    p.CreationDate,\n    LEN(p.Body) AS BodyLength\nFROM\n    Posts AS p\nINNER JOIN\n    Users AS u\nON\n    u.Id = p.OwnerUserId\nINNER JOIN\n    Posts AS parentPost\nON\n    parentPost.Id = p.ParentId\nINNER JOIN\n    Users AS parentUser\nON\n    parentUser.Id = parentPost.OwnerUserId\nWHERE\n    p.PostTypeId = 2\n  AND\n    p.Body like '%a href%'\n  AND\n    p.CreationDate > '2014-01-01T00:00:00.000'\n  AND\n     DATEDIFF(WEEK, u.CreationDate, p.CreationDate) < 1\n  AND\n     DATEDIFF(WEEK, parentUser.CreationDate, p.CreationDate) < 1\n  AND\n  DATEDIFF(DAY, p.CreationDate, parentPost.CreationDate) < 1\n  AND\n  parentUser.Id != p.OwnerUserId\n  \nORDER BY\n    p.CreationDate DESC"},{"QuerySetId":219610,"Title":"Self answers that were self answered from the start","Description":null,"QueryBody":"SELECT q.creationdate, q.id AS \"Post Link\", q.score AS QuestionScore, a.score AS AnswerScore, DATEDIFF(a.creationdate, q.creationdate) AS UnansweredHours FROM posts AS q INNER JOIN posts AS a ON a.parentid = q.id AND a.owneruserid = q.owneruserid ORDER BY DATEDIFF(a.creationdate, q.creationdate), q.creationdate DESC","CreationDate":"2014-08-21 16:46:23","validated":false,"QueryBody_Original":"SELECT  q.creationdate,q.id [Post Link], \n       q.score QuestionScore, \n       a.score AnswerScore,\n       datediff(hh,q.creationdate,a.creationdate) as UnansweredHours\nFROM   posts q \n       INNER JOIN posts a \n               ON a.parentid = q.id \n                  AND a.owneruserid = q.owneruserid \nORDER BY      \n      datediff(s,q.creationdate,a.creationdate) asc,\n      q.creationdate desc"},{"QuerySetId":219626,"Title":"Show comments on closed questions suggesting SO or Security","Description":null,"QueryBody":"SELECT 'site:\/\/questions\/' + CAST(p.Id AS TEXT(9)) + '#comment' + CAST(c.Id AS TEXT(9)) + '_' + CAST(p.Id AS TEXT(9)) + '|' + c.Text FROM Posts AS p INNER JOIN Comments AS c ON c.PostId = p.Id WHERE NOT p.ClosedDate IS NULL AND NOT EXISTS(SELECT Id FROM PostHistory AS h WHERE h.PostId = p.Id AND h.PostHistoryTypeId = 35) \/* exclude migrated questions *\/ AND (c.Text LIKE '%[Ss]tack[Oo]verflow%' OR c.Text LIKE '%[Ss]tack [Oo]verflow%' OR c.Text LIKE '%[Ss]ecurity [Ss]tack%' OR c.Text LIKE '%[Ss]ecurity.[Ss][Ee]%') ORDER BY p.Id, c.Id","CreationDate":"2014-08-21 18:56:55","validated":false,"QueryBody_Original":"SELECT \n  'site:\/\/questions\/' + Cast(p.Id AS VarChar(9)) +\n  '#comment' + Cast(c.Id AS VarChar(9)) + '_' + Cast(p.Id AS VarChar(9)) +\n  '|' + c.Text\nFROM Posts p\nINNER JOIN Comments c ON c.PostId = p.Id\nWHERE p.ClosedDate IS NOT NULL\n  AND NOT EXISTS (SELECT Id FROM PostHistory h\n                  WHERE h.PostId = p.Id\n                    AND h.PostHistoryTypeId = 35) -- exclude migrated questions\n  AND (c.Text LIKE '%[Ss]tack[Oo]verflow%' OR\n       c.Text LIKE '%[Ss]tack [Oo]verflow%' OR\n       c.Text LIKE '%[Ss]ecurity [Ss]tack%' OR\n       c.Text LIKE '%[Ss]ecurity.[Ss][Ee]%')\nORDER BY p.Id ASC, c.Id ASC"},{"QuerySetId":219659,"Title":"Questions with answercount 0 and an acceptedanswer or merged","Description":null,"QueryBody":"SELECT DISTINCT p.id AS \"Post Link\", p.AcceptedAnswerId AS \"Accepted Answer Id\", ap.id AS \"Post Link\", ph.CreationDate AS \"Merged on\" FROM Posts AS p LEFT OUTER JOIN posts AS ap ON ap.id = p.AcceptedAnswerId LEFT OUTER JOIN posthistory AS ph ON ph.postid = p.id AND ph.PostHistoryTypeId = 37 WHERE p.PostTypeId = 1 AND p.AnswerCount = 0 AND NOT p.AcceptedAnswerId IS NULL","CreationDate":"2014-08-21 22:29:18","validated":false,"QueryBody_Original":"SELECT  distinct p.id as[Post Link]\n, p.AcceptedAnswerId as [Accepted Answer Id]\n, ap.id as [Post Link]\n, ph.CreationDate as [Merged on]\nFROM Posts p\nleft outer join posts ap on ap.id = p.AcceptedAnswerId\nleft outer join posthistory ph \n  on ph.postid = p.id \n  and ph.PostHistoryTypeId = 37\nWHERE p.PostTypeId = 1\nAND p.AnswerCount = 0\nAND p.AcceptedAnswerId IS NOT NULL"},{"QuerySetId":219753,"Title":"Number of Q's and A's","Description":null,"QueryBody":"SELECT COUNT(*), PostTypeID FROM Posts WHERE PostTypeID = 1 OR PostTypeID = 2 GROUP BY PostTypeID","CreationDate":"2014-08-22 00:14:29","validated":false,"QueryBody_Original":"SELECT  Count(*), \n       PostTypeID\nFROM Posts\nWHERE PostTypeID = 1 OR PostTypeID = 2\nGROUP BY PostTypeID;"},{"QuerySetId":219768,"Title":"Stackoverflow posts with votes before they were created","Description":null,"QueryBody":"SELECT pv.age AS \"Post age when voted\", pv.VoteId AS \"Vote Id\", pv.VoteTypeId AS \"Vote type\", pv.UserId AS \"Vote user\", pv.UserId AS \"User Link\", pv.Id AS \"Post Link\" FROM (SELECT DATEDIFF(v.CreationDate, CAST(p.CreationDate AS DATE)) AS age, p.Id, v.Id AS VoteId, v.VoteTypeId, v.UserId FROM Posts AS p LEFT JOIN votes AS v ON p.Id = v.PostID) AS pv WHERE pv.age < 0 ORDER BY pv.age","CreationDate":"2014-08-22 17:34:22","validated":false,"QueryBody_Original":"SELECT  pv.age as [Post age when voted], \n       pv.VoteId as [Vote Id],\n       pv.VoteTypeId as [Vote type],\n       pv.UserId as [Vote user],\n       pv.UserId as [User Link],\n       pv.Id as [Post Link]\nfrom (\n  SELECT datediff(day, cast(p.CreationDate as Date), v.CreationDate) as age, \n         p.Id, v.Id as VoteId, v.VoteTypeId, v.UserId\n  from Posts p\n  left join votes v on p.Id = v.PostID\n) pv\nwhere pv.age < 0\norder by pv.age asc"},{"QuerySetId":219784,"Title":"Get Comments By User Id","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%##CommentText##%') AND UserId = '##UserId##' ORDER BY Score DESC","CreationDate":"2014-08-22 02:37:48","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('%##CommentText##%')\n   AND UserId = '##UserId##'\n ORDER BY Score DESC"},{"QuerySetId":219818,"Title":"Questions with the most answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", AnswerCount AS \"Number of Answers\", Score, Tags FROM Posts WHERE PostTypeId = 1 ORDER BY AnswerCount DESC LIMIT 100","CreationDate":"2014-08-22 09:44:09","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link],\n               AnswerCount AS [Number of Answers],\n               Score,\n               Tags\nFROM Posts\nWHERE PostTypeId = 1\nORDER BY AnswerCount DESC"},{"QuerySetId":219819,"Title":"Quetions with the most answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", AnswerCount AS \"Number of Answers\", Score AS Tags FROM Posts ORDER BY AnswerCount DESC LIMIT 100","CreationDate":"2014-08-22 09:02:58","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link],\n               AnswerCount AS [Number of Answers],\n               Score\n               Tags\nFROM Posts\nORDER BY AnswerCount DESC"},{"QuerySetId":219973,"Title":"Ask Ubuntu posts with votes before they were created","Description":null,"QueryBody":"SELECT pv.age AS \"Post Age\", pv.VoteId AS \"Vote Id\", pv.VoteTypeId AS \"Vote Type\", pv.UserId AS \"Vote User\", pv.UserId AS \"User Link\", pv.Id AS \"Post Link\" FROM (SELECT DATEDIFF(v.CreationDate, CAST(p.CreationDate AS DATE)) AS age, p.Id, v.Id AS VoteId, v.VoteTypeId, v.UserId FROM Posts AS p LEFT JOIN votes AS v ON p.Id = v.PostID) AS pv WHERE pv.age < 0 ORDER BY pv.age","CreationDate":"2014-08-22 17:49:19","validated":false,"QueryBody_Original":"SELECT  pv.age as [Post Age], \n       pv.VoteId as [Vote Id],\n       pv.VoteTypeId as [Vote Type],\n       pv.UserId as [Vote User],\n       pv.UserId as [User Link],\n       pv.Id as [Post Link]\nfrom (\n  SELECT datediff(day, cast(p.CreationDate as Date), v.CreationDate) as age, \n         p.Id, v.Id as VoteId, v.VoteTypeId, v.UserId\n  from Posts p\n  left join votes v on p.Id = v.PostID\n) pv\nwhere pv.age < 0\norder by pv.age asc"},{"QuerySetId":219974,"Title":"Math posts with votes before they were created","Description":null,"QueryBody":"SELECT pv.age AS \"Post Age\", pv.VoteId AS \"Vote Id\", pv.VoteTypeId AS \"Vote Type\", pv.UserId AS \"Vote User\", pv.UserId AS \"User Link\", pv.Id AS \"Post Link\" FROM (SELECT DATEDIFF(v.CreationDate, CAST(p.CreationDate AS DATE)) AS age, p.Id, v.Id AS VoteId, v.VoteTypeId, v.UserId FROM Posts AS p LEFT JOIN votes AS v ON p.Id = v.PostID) AS pv WHERE pv.age < 0 ORDER BY pv.age","CreationDate":"2014-08-22 17:39:45","validated":false,"QueryBody_Original":"SELECT  pv.age as [Post Age], \n       pv.VoteId as [Vote Id],\n       pv.VoteTypeId as [Vote Type],\n       pv.UserId as [Vote User],\n       pv.UserId as [User Link],\n       pv.Id as [Post Link]\nfrom (\n  SELECT datediff(day, cast(p.CreationDate as Date), v.CreationDate) as age, \n         p.Id, v.Id as VoteId, v.VoteTypeId, v.UserId\n  from Posts p\n  left join votes v on p.Id = v.PostID\n) pv\nwhere pv.age < 0\norder by pv.age asc"},{"QuerySetId":219984,"Title":"Meta Stack Exchange posts with votes before they were created","Description":null,"QueryBody":"SELECT pv.age AS \"Post Age\", pv.VoteId AS \"Vote Id\", pv.VoteTypeId AS \"Vote Type\", pv.UserId AS \"Vote User\", pv.UserId AS \"User Link\", pv.Id AS \"Post Link\" FROM (SELECT DATEDIFF(v.CreationDate, CAST(p.CreationDate AS DATE)) AS age, p.Id, v.Id AS VoteId, v.VoteTypeId, v.UserId FROM Posts AS p LEFT JOIN votes AS v ON p.Id = v.PostID) AS pv WHERE pv.age < 0 ORDER BY pv.age","CreationDate":"2014-08-22 17:52:57","validated":false,"QueryBody_Original":"SELECT  pv.age as [Post Age], \n       pv.VoteId as [Vote Id],\n       pv.VoteTypeId as [Vote Type],\n       pv.UserId as [Vote User],\n       pv.UserId as [User Link],\n       pv.Id as [Post Link]\nfrom (\n  SELECT datediff(day, cast(p.CreationDate as Date), v.CreationDate) as age, \n         p.Id, v.Id as VoteId, v.VoteTypeId, v.UserId\n  from Posts p\n  left join votes v on p.Id = v.PostID\n) pv\nwhere pv.age < 0\norder by pv.age asc"},{"QuerySetId":220008,"Title":"List top Spain user by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE Id LIKE '201' ORDER BY Reputation DESC","CreationDate":"2014-08-26 02:14:52","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    Id like '201'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":220062,"Title":"Accepted non-self-answers without accept-vote, where question owner exists","Description":null,"QueryBody":"SELECT p.AcceptedAnswerId AS \"Post Link\", p.OwnerUserId AS \"User Link\" FROM Posts AS p WHERE NOT p.OwnerUserId IS NULL AND NOT p.AcceptedAnswerId IN (SELECT v.PostId FROM Votes AS v WHERE v.VoteTypeId = 1) AND NOT p.AcceptedAnswerId IN (SELECT q.Id FROM Posts AS q WHERE q.OwnerUserId = p.OwnerUserId) ORDER BY p.AcceptedAnswerId DESC","CreationDate":"2015-09-15 06:04:14","validated":false,"QueryBody_Original":"SELECT  p.AcceptedAnswerId as [Post Link], p.OwnerUserId as [User Link] from Posts p \nwhere p.OwnerUserId is not null and p.AcceptedAnswerId not in (\nSELECT v.PostId from Votes v \nwhere v.VoteTypeId = 1 ) and p.AcceptedAnswerId not in (\nSELECT q.Id from Posts q \nwhere q.OwnerUserId = p.OwnerUserId) \norder by p.AcceptedAnswerId desc"},{"QuerySetId":220269,"Title":"downvote to upvote ratio by tag","Description":null,"QueryBody":"SELECT * FROM tags","CreationDate":"2014-08-23 17:30:09","validated":false,"QueryBody_Original":"SELECT  * from tags;"},{"QuerySetId":220293,"Title":"Undeleted accepted answers without accept vote","Description":null,"QueryBody":"SELECT p.AcceptedAnswerId AS \"Post Link\", p.OwnerUserId AS \"User Link\" FROM Posts AS p INNER JOIN PostHistory AS e ON p.AcceptedAnswerId = e.PostId WHERE e.PostHistoryTypeId = 13 AND NOT p.OwnerUserId IS NULL AND NOT p.AcceptedAnswerId IN (SELECT v.PostId FROM Votes AS v WHERE v.VoteTypeId = 1) ORDER BY p.AcceptedAnswerId DESC","CreationDate":"2014-08-23 18:36:06","validated":false,"QueryBody_Original":"SELECT  p.AcceptedAnswerId as [Post Link], p.OwnerUserId as [User Link] from Posts p \ninner join PostHistory e\non p.AcceptedAnswerId = e.PostId\nwhere e.PostHistoryTypeId = 13 and \n  p.OwnerUserId is not null and \n  p.AcceptedAnswerId not in (\n    SELECT v.PostId from Votes v \n      where v.VoteTypeId = 1 )\norder by p.AcceptedAnswerId desc"},{"QuerySetId":220296,"Title":"Answers that were deleted after being accepted","Description":null,"QueryBody":"SELECT e.PostId AS \"Post Link\", v.CreationDate AS \"Acceptance Time\", e.CreationDate AS \"Deletion Time\" FROM PostHistory AS e INNER JOIN Votes AS v ON v.PostId = e.PostId WHERE e.PostHistoryTypeId = 13 AND v.VoteTypeId = 1 AND DATEDIFF(e.CreationDate, v.CreationDate) > 1 ORDER BY e.CreationDate DESC","CreationDate":"2014-08-23 18:53:40","validated":false,"QueryBody_Original":"SELECT  e.PostId as [Post Link], v.CreationDate as [Acceptance Time], e.CreationDate as [Deletion Time] from PostHistory e \ninner join Votes v \non v.PostId=e.PostId\nwhere \n  e.PostHistoryTypeId = 13 and\n  v.VoteTypeId = 1 and \n  datediff(day, v.CreationDate, e.CreationDate)>1\norder by e.CreationDate desc"},{"QuerySetId":220344,"Title":"My Answers to closed quetions","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Score FROM Posts AS a INNER JOIN Posts AS q ON a.ParentId = q.Id WHERE NOT q.ClosedDate IS NULL","CreationDate":"2014-08-23 20:39:57","validated":false,"QueryBody_Original":"SELECT  a.Id AS [Post Link], a.Score\nFROM Posts a\nINNER JOIN Posts q\nON a.ParentId = q.Id\nWHERE q.ClosedDate IS NOT NULL"},{"QuerySetId":220624,"Title":"Get all of your user data.","Description":"Simply obtains all columns from the Users name given your User ID.\r\n","QueryBody":"SELECT Id AS \"User Link\", CreationDate FROM Users WHERE CreationDate >= DATEADD(day, -1, GETDATE()) ORDER BY CreationDate DESC","CreationDate":"2015-01-27 04:28:25","validated":false,"QueryBody_Original":"SELECT  Id [User Link], CreationDate FROM Users\nwhere CreationDate >= DATEADD(day, -1, GETDATE())\norder by CreationDate DESC"},{"QuerySetId":220936,"Title":"Up and down votes per user per day","Description":null,"QueryBody":"SELECT u.UpVotes \/ DATEDIFF(CURRENT_TIMESTAMP(), u.CreationDate) AS AvgUpvotes, u.DownVotes \/ DATEDIFF(CURRENT_TIMESTAMP(), u.CreationDate) AS AvgDownvotes FROM Users AS u","CreationDate":"2015-06-29 11:38:44","validated":false,"QueryBody_Original":"SELECT  \n  u.UpVotes \/ DATEDIFF(day, u.CreationDate, GETDATE()) As AvgUpvotes,\n  u.DownVotes \/ DATEDIFF(day, u.CreationDate, GETDATE()) As AvgDownvotes\nFROM Users u"},{"QuerySetId":221244,"Title":"Number of questions in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId IN (1) AND CreationDate >= DATEADD(DAY, -30, GETDATE())","CreationDate":"2014-08-28 17:56:11","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts \nWHERE PostTypeId in (1) AND CreationDate >= DATEADD(DAY, -30, GETDATE())"},{"QuerySetId":221246,"Title":"Number of votes in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes WHERE Votes.VoteTypeId IN (2, 3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE())","CreationDate":"2014-08-28 17:57:01","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nWHERE Votes.VoteTypeId in (2,3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE())"},{"QuerySetId":221249,"Title":"Number of votes on questions in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes JOIN Posts ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId IN (2, 3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (1)","CreationDate":"2014-08-28 17:58:21","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nJOIN Posts\nON Votes.PostId = Posts.Id\nWHERE Votes.VoteTypeId in (2,3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (1)"},{"QuerySetId":221250,"Title":"Number of votes on answers in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes JOIN Posts ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId IN (2, 3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (2)","CreationDate":"2014-08-28 17:58:50","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nJOIN Posts\nON Votes.PostId = Posts.Id\nWHERE Votes.VoteTypeId in (2,3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (2)"},{"QuerySetId":221251,"Title":"Number of up votes on questions in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes JOIN Posts ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId IN (2) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (1)","CreationDate":"2014-08-28 17:59:17","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nJOIN Posts\nON Votes.PostId = Posts.Id\nWHERE Votes.VoteTypeId in (2) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (1)"},{"QuerySetId":221252,"Title":"Number of down votes on questions in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes JOIN Posts ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId IN (3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (1)","CreationDate":"2014-08-28 17:59:40","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nJOIN Posts\nON Votes.PostId = Posts.Id\nWHERE Votes.VoteTypeId in (3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (1)"},{"QuerySetId":221253,"Title":"Number of up votes on answers in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes JOIN Posts ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId IN (2) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (2)","CreationDate":"2014-08-28 18:00:03","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nJOIN Posts\nON Votes.PostId = Posts.Id\nWHERE Votes.VoteTypeId in (2) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (2)"},{"QuerySetId":221254,"Title":"Number of down votes on answers in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes JOIN Posts ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId IN (3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (2)","CreationDate":"2014-08-28 18:00:27","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nJOIN Posts\nON Votes.PostId = Posts.Id\nWHERE Votes.VoteTypeId in (3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND Posts.PostTypeId IN (2)"},{"QuerySetId":221257,"Title":"Number of answers in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId IN (2) AND CreationDate >= DATEADD(DAY, -30, GETDATE())","CreationDate":"2014-08-28 18:06:54","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts \nWHERE PostTypeId in (2) AND CreationDate >= DATEADD(DAY, -30, GETDATE())"},{"QuerySetId":221258,"Title":"Number of up votes in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes WHERE Votes.VoteTypeId IN (2) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE())","CreationDate":"2014-08-28 18:12:02","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nWHERE Votes.VoteTypeId in (2) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE())"},{"QuerySetId":221259,"Title":"Number of down votes in past 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes WHERE Votes.VoteTypeId IN (3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE())","CreationDate":"2014-08-28 18:13:03","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes \nWHERE Votes.VoteTypeId in (3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE())"},{"QuerySetId":221263,"Title":"Number of votes on answers to older questions","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes JOIN Posts AS p1 ON Votes.PostId = p1.Id JOIN Posts AS p2 ON p1.ParentId = p2.Id WHERE Votes.VoteTypeId IN (2, 3) AND Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) AND p1.PostTypeId IN (2) AND NOT p1.ParentId IS NULL AND p2.PostTypeId IN (1) AND p2.CreationDate <= DATEADD(DAY, -120, GETDATE())","CreationDate":"2014-08-28 18:31:31","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Votes\nJOIN Posts as p1\nON Votes.PostId = p1.Id\nJoin Posts as p2\nON p1.ParentId = p2.Id\nWHERE Votes.VoteTypeId IN (2,3) AND Votes.CreationDate >= DATEADD(DAY,-30,GETDATE()) AND p1.PostTypeId IN (2) AND p1.ParentId IS NOT NULL AND p2.PostTypeId IN (1) AND p2.CreationDate <= DATEADD(DAY, -120, GETDATE())"},{"QuerySetId":221290,"Title":"Number of answers in past 30 days to questions older than 60 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS p1 JOIN Posts AS p2 ON p1.ParentId = p2.Id WHERE \/* posts parent question is older than 60 days *\/ \/* posted within last 30 days *\/ p1.PostTypeId = 2 \/* post is an answer *\/ AND \/* posted within last 30 days *\/ p1.CreationDate >= DATEADD(DAY, -30, GETDATE()) \/* posted within last 30 days *\/ AND NOT p1.ParentId IS NULL \/* post has a parent *\/ AND p2.PostTypeId = 1 \/* posts parent is a question *\/ AND \/* posts parent question is older than 60 days *\/ p2.CreationDate <= DATEADD(DAY, -60, GETDATE()) \/* posts parent question is older than 60 days *\/","CreationDate":"2014-08-28 19:06:19","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts as p1\nJoin Posts as p2\nON p1.ParentId = p2.Id\nWHERE p1.PostTypeId = 2 --post is an answer\nAND p1.CreationDate >= DATEADD(DAY,-30,GETDATE()) --posted within last 30 days\nAND p1.ParentId IS NOT NULL --post has a parent\nAND p2.PostTypeId = 1 --posts parent is a question\nAND p2.CreationDate <= DATEADD(DAY, -60, GETDATE()) --posts parent question is older than 60 days"},{"QuerySetId":221297,"Title":"Down votes cast in past 30 days on answers less than 30 days old answering questions more than 60 da","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes JOIN Posts AS p1 ON Votes.PostId = p1.Id JOIN Posts AS p2 ON p1.ParentId = p2.Id WHERE \/* voted on posts parent question is older than 60 days *\/ \/* Voted on answer was posted within last 30 days *\/ \/* vote is within last 30 days *\/ Votes.VoteTypeId IN (3) AND \/* vote is within last 30 days *\/ Votes.CreationDate >= DATEADD(DAY, -30, GETDATE()) \/* vote is within last 30 days *\/ AND p1.PostTypeId = 2 \/* voted on post is an answer *\/ AND \/* Voted on answer was posted within last 30 days *\/ p1.CreationDate >= DATEADD(DAY, -30, GETDATE()) \/* Voted on answer was posted within last 30 days *\/ AND NOT p1.ParentId IS NULL \/* voted on post has a parent *\/ AND p2.PostTypeId = 1 \/* voted on posts parent is a question *\/ AND \/* voted on posts parent question is older than 60 days *\/ p2.CreationDate <= DATEADD(DAY, -60, GETDATE()) \/* voted on posts parent question is older than 60 days *\/","CreationDate":"2014-08-28 19:11:01","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Votes\nJOIN Posts as p1\nON Votes.PostId = p1.Id\nJoin Posts as p2\nON p1.ParentId = p2.Id\nWHERE Votes.VoteTypeId IN (3) \nAND Votes.CreationDate >= DATEADD(DAY,-30,GETDATE()) --vote is within last 30 days\nAND p1.PostTypeId = 2 --voted on post is an answer\nAND p1.CreationDate >= DATEADD(DAY,-30,GETDATE()) --Voted on answer was posted within last 30 days\nAND p1.ParentId IS NOT NULL --voted on post has a parent\nAND p2.PostTypeId = 1 --voted on posts parent is a question\nAND p2.CreationDate <= DATEADD(DAY, -60, GETDATE()) --voted on posts parent question is older than 60 days"},{"QuerySetId":221452,"Title":"Images linked rather than displayed","Description":null,"QueryBody":"SELECT p.id, p.Body FROM Posts AS p WHERE p.Body LIKE '%http:\/\/%.jpg%' AND (NOT p.Body LIKE '%]: http:\/\/%' AND NOT p.Body LIKE '%<img src=%')","CreationDate":"2014-08-29 16:49:08","validated":false,"QueryBody_Original":"SELECT  p.id, p.Body\nFROM Posts p\nWHERE p.Body LIKE '%http:\/\/%.jpg%'\nAND (p.Body NOT LIKE '%]: http:\/\/%' AND p.Body NOT LIKE '%<img src=%')"},{"QuerySetId":221666,"Title":"Post Links by PostId descending","Description":null,"QueryBody":"SELECT PostId, RelatedPostId FROM PostLinks WHERE LinkTypeId = 1 ORDER BY PostId DESC","CreationDate":"2014-08-31 07:02:03","validated":false,"QueryBody_Original":"SELECT   PostId, RelatedPostId from PostLinks\nwhere LinkTypeId = 1\norder by PostId desc"},{"QuerySetId":221685,"Title":"Amount of user grouped by hundreds of their questions","Description":null,"QueryBody":"SELECT ((userQuestions.QuestionCount \/ 100) * 100) AS \"Questions count\", COUNT(UserQuestions.userId) AS \"Users count\" FROM (SELECT soUser.Id AS userId, COUNT(post.Id) AS QuestionCount FROM Posts AS post INNER JOIN Users AS soUser ON soUser.Id = post.OwnerUserId WHERE post.PostTypeId = 1 GROUP BY soUser.Id) AS userQuestions GROUP BY (userQuestions.QuestionCount \/ 100) ORDER BY (userQuestions.QuestionCount \/ 100) DESC","CreationDate":"2014-08-31 13:00:34","validated":false,"QueryBody_Original":"SELECT  \n  ((userQuestions.QuestionCount \/ 100) * 100) AS [Questions count], \n  COUNT(UserQuestions.userId) AS [Users count]\nFROM \n (SELECT soUser.Id AS userId, COUNT(post.Id) AS QuestionCount\n  FROM Posts AS post\n    INNER JOIN Users AS soUser\n    ON soUser.Id = post.OwnerUserId\n  WHERE post.PostTypeId = 1\n  GROUP BY soUser.Id) AS userQuestions\nGROUP BY (userQuestions.QuestionCount  \/ 100)\nORDER BY (userQuestions.QuestionCount  \/ 100) DESC"},{"QuerySetId":221720,"Title":"count of users by location","Description":null,"QueryBody":"SELECT COUNT(*), Users.location FROM Users WHERE LOWER(Users.Location) = '%india%' GROUP BY Users.Location","CreationDate":"2014-08-31 15:28:14","validated":false,"QueryBody_Original":"SELECT  count(*), Users.location from Users \nwhere lower(Users.Location)='%india%'  group by Users.Location"},{"QuerySetId":222135,"Title":"Comments as answers via disclaimer","Description":null,"QueryBody":"SELECT P.Id AS \"Post Link\", P.Score, P.Body FROM Posts AS P\/* in the last 6 months *\/ \/* guessing comments as answers are relatively short *\/ \/* Magic length *\/ \/* Answers only *\/  WHERE P.Body LIKE '%comment%' AND (P.Body LIKE '% rep %' OR P.Body LIKE '%points%') AND P.PostTypeId = 2 AND LEN(P.Body) <= 500 AND P.CreationDate > DATEADD(month, -6, CURRENT_TIMESTAMP())","CreationDate":"2014-09-03 00:02:57","validated":false,"QueryBody_Original":"SELECT \n    P.Id AS [Post Link]\n,   P.Score\n,   P.Body\nFROM\n    Posts AS P\nWHERE\n    -- F sargability\n    P.Body LIKE '%comment%'\n    AND \n    (\n        P.Body LIKE '% rep %'\n        OR P.Body LIKE '%points%'\n    )\n    -- Answers only\n    AND P.PostTypeId = 2\n    -- guessing comments as answers are relatively short\n    -- Magic length\n    AND LEN(P.Body) <= 500\n    -- in the last 6 months\n    AND P.CreationDate > dateadd(month, -6, current_timestamp);"},{"QuerySetId":222224,"Title":"% of Eventually-Downvoted Questions&Answers Created per Month ","Description":null,"QueryBody":"SELECT Posts.Id, 1 AS question, 1 AS upvote FROM Posts LEFT JOIN Votes ON Votes.PostId = Posts.Id WHERE Posts.PostTypeId = 1 AND Votes.VoteTypeId = 2 GROUP BY Posts.Id LIMIT 100 UNION ALL SELECT Posts.Id, 0 AS question, 1 AS upvote FROM Posts LEFT JOIN Votes ON Votes.PostId = Posts.Id WHERE Posts.PostTypeId = 2 AND Votes.VoteTypeId = 2 GROUP BY Posts.Id LIMIT 100 UNION ALL SELECT Posts.Id, 1 AS question, 0 AS upvote FROM Posts LEFT JOIN Votes ON Votes.PostId = Posts.Id WHERE Posts.PostTypeId = 1 AND Votes.VoteTypeId = 3 GROUP BY Posts.Id LIMIT 100 UNION ALL SELECT Posts.Id, 0 AS question, 0 AS upvote FROM Posts LEFT JOIN Votes ON Votes.PostId = Posts.Id WHERE Posts.PostTypeId = 2 AND Votes.VoteTypeId = 3 GROUP BY Posts.Id LIMIT 100","CreationDate":"2014-09-03 03:11:11","validated":false,"QueryBody_Original":"SELECT \nTOP 100 Posts.Id, 1 AS question, 1 AS upvote\nFROM Posts\nLEFT JOIN Votes ON Votes.PostId = Posts.Id\nWHERE Posts.PostTypeId=1\nAND Votes.VoteTypeId=2\nGROUP BY Posts.Id\nUNION ALL \nSELECT\nTOP 100 Posts.Id, 0 AS question, 1 AS upvote\nFROM Posts\nLEFT JOIN Votes ON Votes.PostId = Posts.Id\nWHERE Posts.PostTypeId=2\nAND Votes.VoteTypeId=2\nGROUP BY Posts.Id\nUNION ALL\nSELECT\nTOP 100 Posts.Id, 1 AS question, 0 AS upvote\nFROM Posts\nLEFT JOIN Votes ON Votes.PostId = Posts.Id\nWHERE Posts.PostTypeId=1\nAND Votes.VoteTypeId=3\nGROUP BY Posts.Id\nUNION ALL\nSELECT\nTOP 100 Posts.Id, 0 AS question, 0 AS upvote\nFROM Posts\nLEFT JOIN Votes ON Votes.PostId = Posts.Id\nWHERE Posts.PostTypeId=2\nAND Votes.VoteTypeId=3\nGROUP BY Posts.Id"},{"QuerySetId":222648,"Title":"How many questions got reopened in the last two months?","Description":null,"QueryBody":"SELECT COUNT(PostId) FROM PostHistory WHERE PostHistoryTypeId = 11 AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) < 60","CreationDate":"2014-10-30 19:13:35","validated":false,"QueryBody_Original":"SELECT  COUNT(PostId) \nFROM PostHistory \nWHERE PostHistoryTypeId = 11\nAND DATEDIFF(day, CreationDate, GETDATE() ) < 60"},{"QuerySetId":222850,"Title":"Late answers to mediocre questions","Description":"Based on http:\/\/data.stackexchange.com\/askubuntu\/query\/109210\/","QueryBody":"SELECT q.Id AS \"Post Link\", q.AnswerCount AS \"Total Answers\", q.ViewCount FROM Posts AS a INNER JOIN Posts AS q ON a.ParentId = q.Id INNER JOIN Users AS u ON a.OwnerUserId = u.Id LEFT OUTER JOIN (SELECT * FROM PostHistory AS ph WHERE ph.PostHistoryTypeId = 14) AS locks ON locks.PostId = q.Id WHERE DATEDIFF(a.CreationDate, q.CreationDate) > 3 AND a.Score >= 0 AND q.Score = 0 AND q.ClosedDate IS NULL AND locks.Id IS NULL AND q.AnswerCount = 1 GROUP BY q.Id, q.Score, q.AnswerCount, q.ViewCount","CreationDate":"2014-09-05 13:11:52","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.AnswerCount as [Total Answers], q.ViewCount\nfrom Posts a\n  inner join Posts q on a.ParentId = q.Id\n  inner join Users u on a.OwnerUserId = u.Id\n  left outer join (\n    SELECT * from PostHistory ph \n    where ph.PostHistoryTypeId = 14\n  ) locks on locks.PostId = q.Id\nwhere datediff(month, q.CreationDate, a.CreationDate) > 3\n  and a.Score >= 0\n  and q.Score = 0\n  and q.ClosedDate is null\n  and locks.Id is null\n  and q.AnswerCount = 1\n  --and q.AcceptedAnswerId = a.Id\n  --and a.OwnerUserId = 449\ngroup by q.Id, q.Score, q.AnswerCount, q.ViewCount"},{"QuerySetId":223222,"Title":"StackOverflow users in Frederick, MD","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%Frederick, MD%' ORDER BY Reputation DESC","CreationDate":"2014-09-07 22:12:09","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location\nfrom Users\nwhere Location like '%Frederick, MD%'\norder by Reputation desc"},{"QuerySetId":224475,"Title":"Low score unanswered & unclosed questions","Description":null,"QueryBody":"SELECT id AS \"Post Link\", Score, DATEADD(DAY, -3, GETDATE()) FROM posts WHERE creationdate > DATEADD(DAY, -5, GETDATE()) ORDER BY Score","CreationDate":"2014-09-11 16:00:16","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], Score,DATEADD(DAY,-3,getdate()) \n\nfrom posts \n\nwhere creationdate > DATEADD(DAY,-5,getdate()) \n\norder by Score"},{"QuerySetId":224639,"Title":"Simple Search Comments + sort on display name","Description":"based on work by [@rene on Meta](http:\/\/meta.stackexchange.com\/a\/234278\/203418)","QueryBody":"SELECT DISTINCT c.id AS \"Comment Link\", c.postid AS \"Post Link\", u.id AS \"User Link\", u.displayname FROM comments AS c INNER JOIN users AS u ON u.id = c.userid WHERE c.\"text\" LIKE '%##SearchValue##%' ORDER BY u.\"displayname\"","CreationDate":"2014-09-12 00:09:18","validated":false,"QueryBody_Original":"SELECT  distinct c.id as [Comment Link]\n, c.postid as [Post Link]\n, u.id as [User Link]\n, u.displayname\nfrom comments c \ninner join users u on u.id = c.userid\nWHERE c.[text] LIKE '%##SearchValue##%'\norder by u.[displayname] asc"},{"QuerySetId":224645,"Title":"Query language tags by use","Description":null,"QueryBody":"SELECT * FROM Tags ORDER BY Count DESC LIMIT 100","CreationDate":"2014-09-11 23:41:33","validated":false,"QueryBody_Original":"SELECT  TOP 100 * FROM Tags ORDER BY Count DESC"},{"QuerySetId":224825,"Title":"Comments containing \"Questions about LibreOffice\"","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", * FROM comments WHERE text LIKE '%Questions about LibreOffice%'","CreationDate":"2017-09-24 17:58:30","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], * from comments\nwhere text like '%Questions about LibreOffice%'"},{"QuerySetId":224930,"Title":"Count of posts by month","Description":"Simple count of posts by month\r\n","QueryBody":"SELECT (TIME_TO_STR(p.creationdate, '%Y') * 12) + TIME_TO_STR(p.creationdate, '%m') AS yearmonth, COUNT(*) AS postcount FROM posts AS p GROUP BY TIME_TO_STR(p.creationdate, '%Y'), TIME_TO_STR(p.creationdate, '%m') ORDER BY TIME_TO_STR(p.creationdate, '%Y'), TIME_TO_STR(p.creationdate, '%m')","CreationDate":"2014-09-13 00:33:14","validated":false,"QueryBody_Original":"SELECT  (datepart(year, p.creationdate) * 12) + datepart(month, p.creationdate) as yearmonth,\ncount(*) as postcount\nfrom posts p\ngroup by datepart(year, p.creationdate),\ndatepart(month, p.creationdate)\norder by datepart(year, p.creationdate),\ndatepart(month, p.creationdate)"},{"QuerySetId":225072,"Title":"Where do I stand among my contemporaries?","Description":null,"QueryBody":"SELECT Reputation, Id, DisplayName, CreationDate FROM Users WHERE CreationDate > '8\/1\/2014' AND Reputation > 20000 ORDER BY Reputation DESC","CreationDate":"2015-08-23 18:37:10","validated":false,"QueryBody_Original":"SELECT \n    Reputation,\n    Id,\n    DisplayName,\n    CreationDate\n    \nFROM\n    Users\n    \nWHERE\n    CreationDate > '8\/1\/2014' AND Reputation > 20000\n    \nORDER BY\n    Reputation DESC"},{"QuerySetId":225160,"Title":"Comments by a given user containing words tag and homework","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Text, CreationDate FROM Comments WHERE (LOWER(Text) LIKE '%[tag:homework]%') ORDER BY CreationDate","CreationDate":"2014-12-04 21:50:51","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], Text, CreationDate \nfrom Comments \nwhere (Lower(Text) like '%[tag:homework]%')\norder by CreationDate"},{"QuerySetId":225176,"Title":"Potentially Not An Answer answers to review.","Description":null,"QueryBody":"SELECT answer.Id AS \"Post Link\", answer.Score, answer.Body, LENGTH(answer.Body) AS Length FROM Posts AS answer INNER JOIN Posts AS question ON answer.ParentId = question.Id\/* Is a plain text post. *\/  WHERE question.PostTypeId = 1 \/* question is a question *\/ AND question.ClosedDate IS NULL \/* Not closed! *\/ AND answer.PostTypeId = 2 \/* answer is an answer *\/ AND LENGTH(answer.Body) < 500 AND NOT answer.Score >= 9 AND answer.Body LIKE '%<a href=\"http%' \/* Has a link! *\/ AND answer.Body LIKE '%##Keyword##%' AND NOT answer.Body LIKE '%<blockquote>%' AND NOT answer.Body LIKE '%<code>%' AND NOT answer.Body LIKE '%<li>%' ORDER BY answer.Score - LENGTH(answer.Body) \/ 10 LIMIT 100","CreationDate":"2014-10-10 13:26:13","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  answer.Id as [Post Link],\n  answer.Score,\n  answer.Body,\n  LEN(answer.Body) as Length\nFROM\n  Posts answer\n  INNER JOIN\n    Posts question\n  ON\n    answer.ParentId = question.Id\nWHERE\n  question.PostTypeId = 1     -- question is a question\nAND\n  question.ClosedDate IS NULL -- Not closed!\nAND\n  answer.PostTypeId = 2       -- answer is an answer\n  \nAND LEN(answer.Body) < 500\nAND NOT answer.Score >= 9\n\nAND answer.Body LIKE '%<a href=\"http%' -- Has a link!\nAND answer.Body LIKE '%##Keyword##%'\n\n-- Is a plain text post.\nAND NOT answer.Body LIKE '%<blockquote>%'\nAND NOT answer.Body LIKE '%<code>%'\nAND NOT answer.Body LIKE '%<li>%'\nORDER BY answer.Score - LEN(answer.Body) \/ 10"},{"QuerySetId":225451,"Title":"Tags that needs a wiki.","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags WHERE ExcerptPostId IS NULL AND WikiPostId IS NULL AND Count < 50 ORDER BY Count","CreationDate":"2014-10-20 19:34:06","validated":false,"QueryBody_Original":"SELECT \n  TagName,\n  Count\nFROM Tags\nWHERE ExcerptPostId IS NULL\nAND WikiPostId IS NULL\nAND Count < 50\nORDER BY\n  Count"},{"QuerySetId":225549,"Title":"Check if question is duplicate","Description":null,"QueryBody":"SELECT A.PostId AS \"Post Link\", COUNT(A.postid) \/ 3, P.CreationDate FROM PostLinks AS A JOIN PostHistory AS P ON P.PostId = A.PostId WHERE LinkTypeId IN (3) GROUP BY A.postId, P.CreationDate HAVING COUNT(A.postid) > 6 ORDER BY A.PostId","CreationDate":"2014-11-17 04:08:07","validated":false,"QueryBody_Original":"SELECT  A.PostId as [Post Link],count(A.postid)\/3,P.CreationDate\nFROM PostLinks A JOIN PostHistory P ON P.PostId=A.PostId\nWHERE LinkTypeId IN (3)\ngroup by A.postId,P.CreationDate\nhaving count(A.postid)>6\nORDER BY A.PostId"},{"QuerySetId":225747,"Title":"Get Title, ViewCount for all posts","Description":null,"QueryBody":"SELECT Title, ViewCount FROM posts","CreationDate":"2014-09-17 14:35:41","validated":false,"QueryBody_Original":"SELECT  Title,ViewCount FROM posts;"},{"QuerySetId":225838,"Title":"Purely link-only answers to review.","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Body, LENGTH(Body) AS Length FROM Posts\/* AND LEN(Body) < 1000 *\/  WHERE PostTypeId = 2 AND Body LIKE '<p><a href=\"%<\/a><\/p>' ORDER BY Score","CreationDate":"2015-04-14 22:33:19","validated":false,"QueryBody_Original":"SELECT \n  Id as [Post Link],\n  Score,\n  Body,\n  LEN(Body) as Length\nFROM Posts\nWHERE PostTypeId = 2\n--AND LEN(Body) < 1000\nAND Body LIKE '<p><a href=\"%<\/a><\/p>'\n--AND NOT Body LIKE '%<blockquote>%'\n--AND NOT Body LIKE '%<code>%'\nORDER BY Score"},{"QuerySetId":226301,"Title":"Questions with only the API tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE PostTypeId = 1 AND Tags = '<api>'","CreationDate":"2014-09-21 01:42:15","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate\nFROM Posts\nWHERE PostTypeId = 1\nAND Tags = '<api>'"},{"QuerySetId":226571,"Title":" Potentially useless comments from StackOverflow - Thanks etc.","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Score, Text, CreationDate FROM Comments WHERE (LENGTH(Text) < 19 AND Text LIKE 'Thanks%') ORDER BY Score DESC","CreationDate":"2014-09-21 08:45:11","validated":false,"QueryBody_Original":"SELECT \n  PostId AS [Post Link],\n  Score,\n  Text,\n  CreationDate\nFROM Comments\nWHERE (LEN(Text) < 19\nAND Text LIKE 'Thanks%')\nORDER BY\n  Score DESC"},{"QuerySetId":227195,"Title":"SELECT * where [CreationDate] >= CAST(GETDATE() AS date)","Description":null,"QueryBody":"SELECT COUNT(*) FROM POSTS WHERE ARRAY(CreationDate) < DATEADD(day, DATEDIFF(day, 0, GETDATE()), 0)","CreationDate":"2014-09-24 00:45:51","validated":false,"QueryBody_Original":"SELECT  count(*) \nfrom POSTS \nwhere [CreationDate] < DATEADD(day,DATEDIFF(day,0,GETDATE()),0)"},{"QuerySetId":227272,"Title":"Total upvote downvote ratio vs reputation","Description":null,"QueryBody":"SELECT SUM(UpVotes), SUM(DownVotes) FROM Users WHERE Reputation >= 100 AND Reputation < 10000 GROUP BY Reputation \/ 50 * 50 ORDER BY Reputation \/ 50 * 50","CreationDate":"2017-05-04 16:49:23","validated":false,"QueryBody_Original":"SELECT  SUM(UpVotes), SUM(DownVotes)\nFROM Users WHERE Reputation >= 100 AND Reputation < 10000\nGROUP BY Reputation\/50*50 ORDER BY Reputation\/50*50"},{"QuerySetId":227798,"Title":"Users that only down-vote questions","Description":"A list of users who happily down-vote questions, but don't down-vote answers.","QueryBody":"SELECT COUNT(UserId) FROM Votes AS V, Posts AS P WHERE P.PostTypeId = 2 AND P.Id = V.PostId GROUP BY V.UserId","CreationDate":"2018-04-18 14:12:38","validated":false,"QueryBody_Original":"SELECT   count(UserId) FROM Votes V,Posts P\nWHERE P.PostTypeId = 2 \nAND P.Id = V.PostId \nGROUP BY V.UserId"},{"QuerySetId":228302,"Title":"What is your favorite \u201cdata analysis\u201d cartoon?","Description":null,"QueryBody":"SELECT * FROM Comments WHERE PostId = 423","CreationDate":"2014-09-27 00:08:23","validated":false,"QueryBody_Original":"SELECT  * from Comments where PostId=423"},{"QuerySetId":228335,"Title":"Where do Stack Overflow users come from?","Description":null,"QueryBody":"SELECT u.Location, u.Id, u.Reputation FROM Users AS u WHERE u.Location = 'Cheyenne, WY'","CreationDate":"2014-09-27 04:44:31","validated":false,"QueryBody_Original":"SELECT  u.Location, u.Id, u.Reputation\nFROM Users u\nWHERE u.Location = 'Cheyenne, WY'"},{"QuerySetId":228602,"Title":"What day of the week are most bounties offered?","Description":"You probably won't be surprised by the result!\r\n","QueryBody":"SELECT SUM(Score) AS upvotes, COUNT(*) AS totalQuestions, (CAST(SUM((Score * 1.0) \/ (viewCount * 1.0)) AS FLOAT) \/ CAST(COUNT(*) AS FLOAT)) AS average, CASE (TIME_TO_STR(CreationDate, '%W') + @@DATEFIRST) % 7 WHEN 1 THEN 'Sunday' WHEN 2 THEN 'Monday' WHEN 3 THEN 'Tuesday' WHEN 4 THEN 'Wednesday' WHEN 5 THEN 'Thursday' WHEN 6 THEN 'Friday' WHEN 0 THEN 'Saturday' END AS Weekday FROM Posts WHERE PostTypeId = 1 AND CreationDate > '01-01-2014' GROUP BY TIME_TO_STR(CreationDate, '%W')","CreationDate":"2014-11-09 14:34:07","validated":false,"QueryBody_Original":"SELECT  SUM(Score) as upvotes, \n       count(*) as totalQuestions, \n       (CAST(SUM((Score*1.0)\/(viewCount*1.0)) AS FLOAT)\/CAST(count(*) AS FLOAT)) as average,\n    CASE (DATEPART(dw, CreationDate) + @@DATEFIRST) % 7\n      WHEN 1 THEN 'Sunday'\n      WHEN 2 THEN 'Monday'\n      WHEN 3 THEN 'Tuesday'\n      WHEN 4 THEN 'Wednesday'\n      WHEN 5 THEN 'Thursday'\n      WHEN 6 THEN 'Friday'\n      WHEN 0 THEN 'Saturday'\n    END AS Weekday \nFROM Posts where PostTypeId=1 and CreationDate>'01-01-2014'\nGROUP BY DATEPART(dw, CreationDate)"},{"QuerySetId":228880,"Title":"Score \/ Character by user","Description":"How much net score does each character in your answers bring you? Find out with this query ;)","QueryBody":"SELECT SUM(LENGTH(Body)) \/ SUM(Score) * 1.0 AS CharsPerUpvote FROM Posts WHERE OwnerUserId = '##UserId##' AND PostTypeId = 2 AND Score <> 0 GROUP BY OwnerUserId","CreationDate":"2014-09-29 20:28:25","validated":false,"QueryBody_Original":"SELECT \n  SUM(Len(Body)) \/ SUM(Score) * 1.0 as CharsPerUpvote\nFROM Posts\nWHERE OwnerUserId = '##UserId##'\n  AND PostTypeId = 2\n  AND Score <> 0\nGROUP BY\n  OwnerUserId"},{"QuerySetId":228886,"Title":"Characters per Score (CpS) by user on answers +","Description":"How much net score and views does each character in your answers among various tags bring you? Find out with this query ;)","QueryBody":"SELECT SUM(LENGTH(Body)) \/ SUM(Score) * 1.0 AS CharsPerUpvote FROM Posts WHERE OwnerUserId = '##UserId##' AND PostTypeId = 2 GROUP BY OwnerUserId","CreationDate":"2014-10-04 14:27:09","validated":false,"QueryBody_Original":"SELECT \n  SUM(Len(Body)) \/ SUM(Score) * 1.0 as CharsPerUpvote\nFROM Posts\nWHERE OwnerUserId = '##UserId##'\n  AND PostTypeId = 2\nGROUP BY\n  OwnerUserId"},{"QuerySetId":229087,"Title":"200+ Users Who Seem to Speak Korean","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.DisplayName, Users.Reputation, Users.Id FROM Users WHERE (Reputation >= 200) AND ((LOWER(Location) LIKE LOWER('%korea%') OR LOWER(Location) LIKE LOWER('%seoul%')) \/*      By Location *\/) ORDER BY Reputation DESC","CreationDate":"2014-09-30 16:40:56","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Users.DisplayName, \n    Users.Reputation,\n    Users.Id\n\nFROM\n    Users\nWHERE\n    (Reputation >= 200)\n    AND \n    (\n--      By Location\n        (\n            LOWER(Location) LIKE LOWER('%korea%') \n            OR LOWER(Location) LIKE LOWER('%seoul%')\n        ) \n   )\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":229251,"Title":"How many [ASP.Net] questions initially tagged [ASP] or [ASP-Classic]?","Description":"Initial stab at a query to workout how many ASP.Net questions each month are being incorrectly tagged as ASP or ASP-Classic. It's probably not perfect but it's a start.\r\n\r\nAdded parameter so you can specify how many years to return.\r\n\r\n0 - Returns all years\r\n2 - Default value.\r\n\r\nDesigned to accompany the meta post - http:\/\/meta.stackoverflow.com\/a\/272481\/692942","QueryBody":"SELECT p.Period, p.Total FROM (SELECT TIME_TO_STR(MAX(CreationDate), '%-mONT%-H') + ' ' + CAST(YEAR(CreationDate) AS TEXT(5)) AS \"Period\", COUNT(*) AS \"total\", YEAR(CreationDate) AS \"Year\", MONTH(CreationDate) AS \"Month\" FROM PostHistory WHERE PostHistoryTypeId = 3 AND ((\"Text\" LIKE '%<asp-classic>%' OR \"Text\" LIKE '%<asp>%') AND \"Text\" LIKE '%<asp.net>%') GROUP BY YEAR(CreationDate), MONTH(CreationDate)) AS p ORDER BY p.\"Year\", p.\"Month\"","CreationDate":"2014-09-30 21:05:07","validated":false,"QueryBody_Original":"SELECT  p.Period, p.Total\nFROM (\n  SELECT DATENAME(MONTH, MAX(CreationDate)) + ' ' + CAST(YEAR(CreationDate) AS VARCHAR(5)) [Period]\n  , COUNT(*) [total], YEAR(CreationDate) [Year], MONTH(CreationDate) [Month]\n  FROM PostHistory\n  WHERE PostHistoryTypeId = 3\n  AND (\n    ([Text] LIKE '%<asp-classic>%' OR [Text] LIKE '%<asp>%') \n    AND [Text] LIKE '%<asp.net>%'\n  )\n  GROUP BY YEAR(CreationDate), MONTH(CreationDate)\n) p\nORDER BY p.[Year] ASC, p.[Month] ASC\n\n\/*\nSELECT *\nFROM PostHistory ph\nINNER JOIN Posts p ON ph.PostId = p.id\nWHERE PostHistoryTypeId = 3\nAND (\n  (ph.[Text] LIKE '%<asp-classic>%' OR ph.[Text] LIKE '%<asp>%') \n  AND ph.[Text] LIKE '%<asp.net>%'\n)\nAND p.Tags NOT LIKE '%<asp-classic>%'\nAND ph.CreationDate BETWEEN '01-Aug-2014' AND '31-Aug-2014 23:59:59'\n*\/"},{"QuerySetId":229450,"Title":"How close am I to Explainer\/ Refiner\/ Illuminator","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 \/* answers *\/ AND Posts.OwnerUserId = Users.Id AND Posts.Score > 0 AND EXISTS(SELECT Id FROM PostHistory WHERE PostHistory.PostId = Posts.ParentId AND PostHistory.UserId = Users.Id AND PostHistory.CreationDate < DATE(Posts.CreationDate, '12 hour') AND PostHistory.CreationDate > DATE(Posts.CreationDate, '-12 hour')) AND NOT EXISTS(SELECT Id FROM Votes WHERE (Votes.VoteTypeId = 6 \/* close *\/ AND Votes.PostId = Posts.ParentId) OR (Votes.VoteTypeId = 6 \/* close *\/ AND Votes.PostId = Posts.ParentId)) GROUP BY Users.Id ORDER BY COUNT(Posts.Id) DESC","CreationDate":"2014-10-01 20:31:19","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link], COUNT(Posts.Id)\n\nFROM Posts\nJOIN Users\n  ON Posts.OwnerUserId = Users.Id\n\nWHERE Posts.PostTypeId = 2 --answers\n  AND Posts.OwnerUserId = Users.Id\n  AND Posts.Score > 0\n  AND EXISTS (\n   SELECT Id FROM PostHistory \n    WHERE PostHistory.PostId = Posts.ParentId \n      AND PostHistory.UserId = Users.Id\n      AND PostHistory.CreationDate < DATEADD(hour, 12, Posts.CreationDate)\n      AND PostHistory.CreationDate > DATEADD(hour, -12, Posts.CreationDate)\n      )\n  AND NOT EXISTS (\n   SELECT Id FROM Votes\n    WHERE (Votes.VoteTypeId = 6 --close\n            AND Votes.PostId = Posts.ParentId)\n       OR (Votes.VoteTypeId = 6 --close\n            AND Votes.PostId = Posts.ParentId)\n      )\n      \nGROUP BY Users.Id\nORDER BY COUNT(Posts.Id) DESC"},{"QuerySetId":229499,"Title":"Questions with $$ in the title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE title LIKE '% $$%'","CreationDate":"2014-10-02 15:16:19","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link] from Posts\nwhere title like '% $$%'"},{"QuerySetId":230075,"Title":"Accepted answers with lower scores","Description":null,"QueryBody":"SELECT Ans.Id AS \"Post Link\", * FROM Posts AS Ans INNER JOIN (SELECT ParentId, MAX(Score) AS Score FROM Posts GROUP BY ParentId) AS Highest ON Ans.ParentId = Highest.ParentId INNER JOIN Posts AS Parent ON Ans.ParentId = Parent.ParentId WHERE Ans.Id = Parent.AcceptedAnswerId AND Ans.Score <= Highest.Score AND Parent.CreationDate > '2014-06-01' LIMIT 10","CreationDate":"2014-10-03 00:25:02","validated":false,"QueryBody_Original":"SELECT  TOP 10 Ans.Id AS [Post Link], *\n\nFROM Posts Ans\nINNER JOIN (\n  SELECT  ParentId, \n          Max(Score) AS Score\n  FROM    Posts\n  GROUP BY ParentId\n) AS Highest\n    ON Ans.ParentId = Highest.ParentId\n\nINNER JOIN Posts AS Parent\n    ON Ans.ParentId = Parent.ParentId\n\nWHERE Ans.Id = Parent.AcceptedAnswerId\nAND   Ans.Score <= Highest.Score\nAND   Parent.CreationDate > '2014-06-01'"},{"QuerySetId":230620,"Title":"Chile users compared to others","Description":null,"QueryBody":"SELECT Location, COUNT(DisplayName) FROM Users WHERE Location IN ('NL', 'Netherlands', 'Holland') OR Location IN ('Chile', 'CL') GROUP BY Location ORDER BY Location","CreationDate":"2014-10-04 00:59:27","validated":false,"QueryBody_Original":"SELECT  Location, count(DisplayName)\nfrom Users\nwhere Location in ('NL', 'Netherlands', 'Holland')\nor Location in ('Chile', 'CL')\ngroup by Location\norder by Location"},{"QuerySetId":230798,"Title":"post within last three months","Description":null,"QueryBody":"SELECT ID, ParentId, PostTypeId, CreationDate, Body, Title, Tags FROM Posts WHERE CreationDate > '01\/01\/2014'","CreationDate":"2014-10-05 20:29:56","validated":false,"QueryBody_Original":"SELECT   ID, ParentId, PostTypeId, CreationDate, Body, Title, Tags\nfrom Posts\nwhere CreationDate>'01\/01\/2014';"},{"QuerySetId":230814,"Title":"Average score by day of post","Description":null,"QueryBody":"SELECT (TIME_TO_STR(CreationDate, 'WEEKDA%Y') - 1) * 24 + TIME_TO_STR(CreationDate, '%-HOUR') AS WeekHour, CAST(SUM(Score) AS FLOAT) \/ CAST(COUNT(Id) AS FLOAT) FROM Posts WHERE posttypeid = 1 AND Score >= 0 AND Score < 10 GROUP BY (TIME_TO_STR(CreationDate, 'WEEKDA%Y') - 1) * 24 + TIME_TO_STR(CreationDate, '%-HOUR') ORDER BY WeekHour","CreationDate":"2014-10-06 00:58:46","validated":false,"QueryBody_Original":"SELECT  (DatePart(WEEKDAY, CreationDate)-1)*24+DatePart(HOUR, CreationDate) AS WeekHour, cast(SUM(Score) as float)\/cast(count(Id) as float)\nFROM Posts\nwhere posttypeid = 1\nAND Score>=0\nAND Score<10\nGROUP BY (DatePart(WEEKDAY, CreationDate)-1)*24+DatePart(HOUR, CreationDate)\nORDER BY WeekHour"},{"QuerySetId":230848,"Title":"Limiting Posts by Date - Questions Only (Tutorial)","Description":null,"QueryBody":"SELECT Title, Id, PostTypeId FROM Posts\/* But some posts have no titles -- why is that? Check PostTypeId. *\/ \/* Not all items have all data types -- answers don't have titles. *\/ \/* Uncomment the next line to filter the data to only show questions *\/  WHERE CreationDate BETWEEN '2014-07-01' AND '2014-07-31' AND PostTypeId = 1","CreationDate":"2015-02-16 04:05:52","validated":false,"QueryBody_Original":"SELECT  Title, Id, PostTypeId\nFROM Posts\nWHERE CreationDate BETWEEN '2014-07-01' AND '2014-07-31'\n\n-- But some posts have no titles -- why is that? Check PostTypeId.\n-- Not all items have all data types -- answers don't have titles.\n\n-- Uncomment the next line to filter the data to only show questions\nAND PostTypeId = 1\n\n\n-- Query written by jmac"},{"QuerySetId":230917,"Title":"how many users have twitter","Description":null,"QueryBody":"SELECT COUNT(AboutMe) FROM Users WHERE NOT AboutMe LIKE ''","CreationDate":"2014-10-06 13:46:44","validated":false,"QueryBody_Original":"SELECT  count(AboutMe) from Users where AboutMe NOT LIKE ''"},{"QuerySetId":230946,"Title":"How much reputation would we get in commie SO?","Description":null,"QueryBody":"SELECT SUM(Reputation) \/ COUNT(*) AS Average_rep FROM users WHERE Reputation > 100","CreationDate":"2019-03-18 22:57:54","validated":false,"QueryBody_Original":"SELECT  Sum(Reputation) \/ Count(*) as Average_rep from users WHERE Reputation > 100"},{"QuerySetId":231043,"Title":"Who Answers My Questions Most Effectively? (Tutorial)","Description":null,"QueryBody":"SELECT ParentId AS \"Post Link\", COUNT(id) FROM posts WHERE posttypeid = 2 AND LENGTH(body) <= 200 AND (body LIKE '%hank%') GROUP BY parentid HAVING COUNT(id) > 1 ORDER BY COUNT(id) DESC","CreationDate":"2020-09-17 11:39:45","validated":false,"QueryBody_Original":"SELECT \n   ParentId as [Post Link],\n   count(id)\nfrom posts\nwhere posttypeid = 2 and len(body) <= 200\n  and (body like '%hank%')\ngroup by parentid\nhaving count(id) > 1\norder by count(id) desc;"},{"QuerySetId":231482,"Title":"Strange out of memory issue while loading an image to a Bitmap object","Description":null,"QueryBody":"SELECT * FROM Posts WHERE id = 477572","CreationDate":"2014-10-08 01:32:22","validated":false,"QueryBody_Original":"SELECT  * from Posts where id=477572"},{"QuerySetId":231656,"Title":"What is off-topic in aviation?","Description":null,"QueryBody":"SELECT q.Id AS Id, q.Score AS Score, q.Id AS \"Post Link\" FROM Posts AS q INNER JOIN PostHistory AS h ON q.Id = h.PostId WHERE h.PostHistoryTypeId = 10 AND h.comment = '102' AND NOT q.ClosedDate IS NULL ORDER BY q.ViewCount DESC","CreationDate":"2014-10-08 18:26:38","validated":false,"QueryBody_Original":"SELECT \n  q.Id AS Id,\n  q.Score AS Score,\n  q.Id AS [Post Link]\nFROM Posts q\nINNER JOIN PostHistory h ON q.Id = h.PostId\nWHERE h.PostHistoryTypeId = 10\n  AND h.comment='102'\n  AND q.ClosedDate IS NOT NULL\n\nORDER BY q.ViewCount DESC"},{"QuerySetId":231693,"Title":"Top 100 most recent closed posts","Description":"Demo for R package RStackExchange","QueryBody":"SELECT Title FROM Posts ORDER BY ClosedDate DESC LIMIT 100","CreationDate":"2014-10-27 02:43:15","validated":false,"QueryBody_Original":"SELECT  TOP 100 Title FROM Posts ORDER BY ClosedDate DESC"},{"QuerySetId":231700,"Title":"Counts closed questions with score < 0, score = 0 and score > 0 in the last month","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Total count\", SUM(CASE WHEN score < 0 THEN 1 END) AS \"Count with score < 0\", SUM(CASE WHEN score = 0 THEN 1 END) AS \"Count with score = 0\", SUM(CASE WHEN score > 0 THEN 1 END) AS \"Count with score > 0\" FROM posts JOIN posthistory AS ph ON posts.id = ph.postid\/* No more than 1 month old *\/  WHERE posttypeid = 1 \/* Questions *\/ AND NOT closeddate IS NULL \/* that are closed *\/ AND posthistorytypeid = 10 \/* posthistory records that record closure *\/ AND ph.comment <> '101' \/* exclude duplicates *\/ AND posts.creationdate >= DATEADD(month, -1, GETDATE())","CreationDate":"2014-10-14 23:10:49","validated":false,"QueryBody_Original":"SELECT  count(*) as 'Total count', \n        sum(case when score < 0 then 1 end) as 'Count with score < 0', \n       sum(case when score = 0 then 1 end) as 'Count with score = 0',\n       sum(case when score > 0 then 1 end) as 'Count with score > 0'\nfrom posts \n     join posthistory ph on posts.id = ph.postid\nwhere posttypeid = 1             -- Questions\n  and closeddate is not null     -- that are closed\n  and posthistorytypeid = 10     -- posthistory records that record closure\n  and ph.comment <> '101'        -- exclude duplicates\n  -- No more than 1 month old\n  and posts.creationdate >= dateadd(month, -1, getdate()) ;"},{"QuerySetId":231928,"Title":"Count [self-declared] children on site","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE Age < 10","CreationDate":"2015-10-18 13:26:31","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFROM Users\nWHERE Age < 10"},{"QuerySetId":232024,"Title":"Select questions with the tag.","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, CreationDate, Tags FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%##Tag##%'","CreationDate":"2014-10-10 14:03:30","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link],\n  Score,\n  CreationDate,\n  Tags\nFROM Posts\nWHERE PostTypeId = 1\nAND Tags LIKE '%##Tag##%'"},{"QuerySetId":232180,"Title":"Questions in the [row] tag with positive scores in the past year","Description":null,"QueryBody":"SELECT id AS \"Post Link\", score, tags, creationdate FROM posts WHERE tags LIKE '%<row>%' AND posttypeid = 1 AND score > 0 AND creationdate >= DATEADD(year, -1, GETDATE()) ORDER BY score DESC","CreationDate":"2015-10-02 02:19:41","validated":false,"QueryBody_Original":"SELECT \n  id AS [Post Link], score, tags, creationdate\nfrom\n  posts\nwhere tags like '%<row>%' and posttypeid = 1 and score > 0\n  and creationdate >= dateadd(year, -1, GetDate())\norder by score desc;"},{"QuerySetId":232320,"Title":"Votes per Question or Answer","Description":null,"QueryBody":"SELECT v1.CreationDate, (SELECT COUNT(*) FROM Votes AS v2 WHERE v2.CreationDate = v1.CreationDate) \/ (SELECT COUNT(*) FROM Posts AS p WHERE CAST(p.CreationDate AS DATE) = v1.CreationDate) AS VotesPerPost FROM Votes AS v1 GROUP BY v1.CreationDate ORDER BY v1.CreationDate","CreationDate":"2014-10-11 03:24:09","validated":false,"QueryBody_Original":"SELECT \n  v1.CreationDate,\n  (SELECT COUNT(*) FROM Votes AS v2 WHERE v2.CreationDate = v1.CreationDate) \/ (SELECT COUNT(*) FROM Posts AS p WHERE CAST(p.CreationDate AS Date) = v1.CreationDate) AS VotesPerPost\nFROM Votes AS v1\nGROUP BY v1.CreationDate\nORDER BY v1.CreationDate"},{"QuerySetId":232485,"Title":"Users with a given badge, by reputation","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation FROM Users AS u INNER JOIN Badges AS b ON b.userid = u.Id WHERE b.Name = '##Badge##' ORDER BY u.Reputation DESC","CreationDate":"2014-10-12 10:26:16","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link], u.Reputation from Users u\ninner join Badges b on b.userid = u.Id\nwhere b.Name = '##Badge##'\norder by u.Reputation desc"},{"QuerySetId":232741,"Title":"users and their post-type details","Description":null,"QueryBody":"SELECT COUNT(DISTINCT Users.id) FROM Users, Posts WHERE Posts.OwnerUserId = Users.Id AND Posts.PostTypeId = 2","CreationDate":"2014-10-13 12:57:10","validated":false,"QueryBody_Original":"SELECT  count(distinct Users.id) from Users,Posts where Posts.OwnerUserId=Users.Id and Posts.PostTypeId=2;"},{"QuerySetId":234288,"Title":"Title Length of Unanswered Questions","Description":null,"QueryBody":"SELECT AVG(LENGTH(Title)) FROM Posts WHERE AnswerCount <> 0","CreationDate":"2014-10-14 16:38:37","validated":false,"QueryBody_Original":"SELECT  avg(len(Title)) FROM Posts WHERE AnswerCount <> 0"},{"QuerySetId":234365,"Title":"Number Of Posts Created on a Certain Date","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Posts.CreationDate = '10-13-2014'","CreationDate":"2014-10-14 17:03:40","validated":false,"QueryBody_Original":"SELECT  count(*) \nFROM Posts \nWHERE Posts.CreationDate = '10-13-2014'"},{"QuerySetId":234496,"Title":"Who claims to be from Greenland?","Description":null,"QueryBody":"SELECT Id AS \"User Link\" FROM Users WHERE Location = 'Greenland'","CreationDate":"2014-10-14 20:02:54","validated":false,"QueryBody_Original":"SELECT  Id as [User Link]\nfrom Users\nwhere Location = 'Greenland'"},{"QuerySetId":234565,"Title":"Questions with score <= -5, with answers, currently closed, no answers and not closed","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Total questions scoring <= -5\", COUNT(CASE WHEN AnswerCount > 0 THEN 1 ELSE NULL END) AS \"with answers\", COUNT(CASE WHEN AnswerCount > 0 THEN 1 ELSE NULL END) * 100 \/ COUNT(*) AS \"%\", COUNT(ClosedDate) AS \"currently closed\", COUNT(ClosedDate) * 100 \/ COUNT(*) AS \"%\", COUNT(CASE WHEN AnswerCount = 0 AND closeddate IS NULL THEN 1 ELSE NULL END) AS \"not closed and without answers\", COUNT(CASE WHEN AnswerCount = 0 AND closeddate IS NULL THEN 1 ELSE NULL END) * 100 \/ COUNT(*) AS \"%\" FROM Posts AS q WHERE PostTypeId = 1 AND Score <= -5 AND creationdate >= DATEADD(day, -31, GETDATE())","CreationDate":"2014-10-16 02:39:37","validated":false,"QueryBody_Original":"SELECT  count(*) \"Total questions scoring <= -5\",\n  count(case when AnswerCount > 0 then 1 else null end) \"with answers\",\n  count(case when AnswerCount > 0 then 1 else null end) * 100 \/ count(*) \"%\",\n  count(ClosedDate) \"currently closed\",\n  count(ClosedDate) * 100 \/ count(*) \"%\",\n  count(case when AnswerCount = 0 And closeddate is null then 1 else null end) \"not closed and without answers\",\n  count(case when AnswerCount = 0 And closeddate is null then 1 else null end) * 100 \/ count(*) \"%\"\n\nfrom Posts q\nwhere PostTypeId=1\nand Score <= -5\nand creationdate >= dateadd(day, -31, getdate())"},{"QuerySetId":234751,"Title":"Top Pakistani users in StackOverFlow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName, Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PAKISTAN%' AND Reputation < 400 ORDER BY Reputation DESC","CreationDate":"2019-02-22 13:12:53","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], DisplayName,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PAKISTAN%'\n    AND Reputation < 400\nORDER BY\n    Reputation DESC;"},{"QuerySetId":235933,"Title":"User and count of answers on closed questions","Description":null,"QueryBody":"SELECT a.owneruserid, COUNT(*) AS \"total\" FROM Posts AS a JOIN Posts AS q ON q.id = a.ParentId WHERE NOT q.closeddate IS NULL GROUP BY a.owneruserid ORDER BY total DESC","CreationDate":"2014-10-18 03:12:20","validated":false,"QueryBody_Original":"SELECT  a.owneruserid, count(*) as 'total'\nfrom Posts a\n     join Posts q on q.id = a.ParentId\nwhere q.closeddate is not null\ngroup by a.owneruserid\norder by total desc"},{"QuerySetId":236122,"Title":"The most downvoted question ever!","Description":null,"QueryBody":"SELECT Reputation, Id FROM Users WHERE Reputation < 1 LIMIT 10","CreationDate":"2014-10-18 22:31:05","validated":false,"QueryBody_Original":"SELECT  Top 10 Reputation, Id\nFrom Users\nWhere Reputation < 1"},{"QuerySetId":236408,"Title":"People who ask questions but do not accept answers","Description":null,"QueryBody":"SELECT u.id, u.DisplayName, u.Reputation, COUNT(*) - COUNT(q.AcceptedAnswerId) FROM Users AS u INNER JOIN Posts AS q ON u.Id = q.OwnerUserId WHERE q.PostTypeId = 1 AND q.AnswerCount > 0 GROUP BY u.id, u.DisplayName, u.Reputation HAVING COUNT(*) = (COUNT(*) - COUNT(q.AcceptedAnswerId)) AND COUNT(*) > 10 ORDER BY COUNT(*) DESC","CreationDate":"2016-07-26 09:04:36","validated":false,"QueryBody_Original":"SELECT \nu.id,\nu.DisplayName,\nu.Reputation,\ncount(*) - count(q.AcceptedAnswerId)\nFROM \nUsers u\nINNER JOIN\nPosts q\nON \nu.Id = q.OwnerUserId\nWHERE \nq.PostTypeId = 1 AND\nq.AnswerCount > 0 \nGROUP BY u.id, u.DisplayName, u.Reputation\nHAVING count(*) = (count(*) - count(q.AcceptedAnswerId))\nAND count(*) > 10\nORDER BY count(*) DESC"},{"QuerySetId":236654,"Title":"select  AnswerCount,Title,Id from Posts","Description":null,"QueryBody":"SELECT AnswerCount, Title, Id FROM Posts","CreationDate":"2014-10-19 19:19:23","validated":false,"QueryBody_Original":"SELECT   AnswerCount,Title,Id from Posts"},{"QuerySetId":237370,"Title":"Crusader's crossbow: smite unanswered questions by finding worthy answers (by user)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE Id IN (SELECT ParentId FROM Posts WHERE ParentId IN (SELECT Q.Id FROM Posts AS Q INNER JOIN Posts AS A ON (A.ParentId = Q.Id) WHERE Q.PostTypeId = 1 AND A.PostTypeId = 2 AND A.OwnerUserId = '##UserId##' AND A.Score <= 0 AND Q.AcceptedAnswerId IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), Q.CreationDate) >= 180 AND Q.ClosedDate IS NULL) GROUP BY ParentId HAVING MAX(Score) <= 0)","CreationDate":"2020-12-08 10:21:36","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link],Tags\nfrom Posts\nwhere Id in (\nSELECT ParentId\nfrom Posts\nwhere ParentId in \n(SELECT Q.Id from Posts as Q\ninner join Posts as A on (A.ParentId = Q.Id)\nwhere Q.PostTypeId = 1\nand A.PostTypeId = 2\nand A.OwnerUserId = '##UserId##'\nand A.Score <= 0\nand Q.AcceptedAnswerId is null\nand DATEDIFF(day, Q.CreationDate, GETDATE()) >= 180\nand Q.ClosedDate is null)\ngroup by ParentId\nhaving max(Score) <= 0\n)\n;"},{"QuerySetId":237486,"Title":"Questions that would be orphaned by automated burnination of the [row] rag","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE tags = '<row>'","CreationDate":"2014-10-20 22:36:28","validated":false,"QueryBody_Original":"SELECT  Id FROM Posts WHERE tags = '<row>';"},{"QuerySetId":237488,"Title":"Questions that would be orphaned by automated burnination of the [row] tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE tags = '<row>'","CreationDate":"2015-10-02 02:11:49","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE tags = '<row>';"},{"QuerySetId":237541,"Title":"Downvoted questions in the [row] tag","Description":null,"QueryBody":"SELECT Id, Score, Title FROM Posts WHERE Tags LIKE '%<row>%' AND ClosedDate IS NULL AND Score < 0 ORDER BY Score","CreationDate":"2014-10-20 23:43:22","validated":false,"QueryBody_Original":"SELECT \n  Id,\n  Score,\n  Title\nFROM\n  Posts\nWHERE Tags LIKE '%<row>%'\n  AND ClosedDate IS NULL\n  AND Score < 0\nORDER BY Score ASC;"},{"QuerySetId":237558,"Title":"People who have answered the same question","Description":null,"QueryBody":"SELECT Id, PostTypeId FROM Posts WHERE PostTypeId = 2","CreationDate":"2014-10-21 00:11:59","validated":false,"QueryBody_Original":"SELECT  Id, PostTypeId FROM Posts WHERE PostTypeId = 2;"},{"QuerySetId":237582,"Title":"people who answered the same question","Description":null,"QueryBody":"SELECT p1.OwnerUserId, p2.OwnerUserId FROM Posts AS p1 JOIN Posts AS p2 ON p1.ParentId = p2.ParentId WHERE p1.OwnerUserId < p2.OwnerUserId AND p1.PostTypeId = 2 AND p2.PostTypeId = 2","CreationDate":"2014-10-21 02:57:01","validated":false,"QueryBody_Original":"SELECT  p1.OwnerUserId, p2.OwnerUserId\nFROM Posts AS p1\nJOIN Posts AS p2\nON p1.ParentId = p2.ParentId\nWHERE p1.OwnerUserId < p2.OwnerUserId\nAND p1.PostTypeId = 2\nAND p2.PostTypeId = 2;"},{"QuerySetId":237587,"Title":"People who answered the same question","Description":null,"QueryBody":"SELECT p1.OwnerUserId, p2.OwnerUserId FROM Posts AS p1 JOIN Posts AS p2 ON p1.ParentId = p2.ParentId WHERE p1.OwnerUserId < p2.OwnerUserId AND p1.PostTypeId = 2 AND p2.PostTypeId = 2","CreationDate":"2014-10-21 03:03:59","validated":false,"QueryBody_Original":"SELECT  p1.OwnerUserId, p2.OwnerUserId\nFROM Posts AS p1\nJOIN Posts AS p2\nON p1.ParentId = p2.ParentId\nWHERE p1.OwnerUserId < p2.OwnerUserId\nAND p1.PostTypeId = 2\nAND p2.PostTypeId = 2;"},{"QuerySetId":238094,"Title":"View User's Self Answered Questions","Description":null,"QueryBody":"SELECT AcceptedAnswerId FROM Posts WHERE OwnerUserId = '419'","CreationDate":"2016-03-17 21:05:54","validated":false,"QueryBody_Original":"SELECT  AcceptedAnswerId\n\nFROM Posts\n\nWHERE OwnerUserId  =  '419'"},{"QuerySetId":238226,"Title":"Reputation of top users ","Description":null,"QueryBody":"SELECT Id, Reputation FROM Users ORDER BY Reputation DESC LIMIT 50000","CreationDate":"2014-10-24 01:55:14","validated":false,"QueryBody_Original":"SELECT  Top 50000 Id, Reputation from Users\norder by Reputation desc"},{"QuerySetId":238362,"Title":"Top 100 most used edit comments","Description":null,"QueryBody":"SELECT UPPER(Comment) AS \"Edit Comment\", COUNT(*) AS \"Comment Count\" FROM PostHistory WHERE UPPER(Comment) LIKE '%HNQ%' GROUP BY UPPER(Comment) ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2018-10-18 09:58:44","validated":false,"QueryBody_Original":"SELECT  TOP 100 UPPER(Comment) [Edit Comment], COUNT(*) AS [Comment Count]\nFROM PostHistory\nWHERE Upper(Comment) LIKE '%HNQ%'\nGROUP BY UPPER(Comment)\nORDER BY COUNT(*) DESC"},{"QuerySetId":238652,"Title":"Unanswered questions on which a bounty was once set","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.OwnerUserId AS \"User Link\", p.tags FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId WHERE v.VoteTypeId = 8 ORDER BY p.CreationDate","CreationDate":"2014-11-22 22:34:02","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], p.Score, p.OwnerUserId as [User Link], p.tags from Posts p\ninner join Votes v\non p.Id = v.PostId\nwhere v.VoteTypeId = 8 \norder by p.CreationDate asc"},{"QuerySetId":238655,"Title":"Unanswered questions with a tag favorited by users with a badge in that tag","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.CommentCount, p.CreationDate FROM Posts AS p, Badges AS b, Votes AS v WHERE b.Name = '##tag##' AND v.VoteTypeId = 5 AND v.PostId = p.Id AND v.UserId = b.UserId AND p.Tags LIKE '%##tag##%' AND p.AnswerCount = 0 AND p.ClosedDate IS NULL GROUP BY p.Id, p.Score, p.CommentCount, p.CreationDate ORDER BY p.CreationDate DESC","CreationDate":"2014-10-26 01:20:56","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], p.Score, p.CommentCount, p.CreationDate from Posts p, Badges b, Votes v  \nwhere b.Name='##tag##' \n  and v.VoteTypeId=5 \n  and v.PostId=p.Id \n  and v.UserId=b.UserId \n  and p.Tags like '%##tag##%' \n  and p.AnswerCount = 0 \n  and p.ClosedDate is Null\ngroup by p.Id, p.Score, p.CommentCount, p.CreationDate\norder by p.CreationDate desc"},{"QuerySetId":238957,"Title":"most imgur pics for single post","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", (LENGTH(Body) - LENGTH(REPLACE(Body, 'src=\"http:\/\/i.stack.imgur.com', ''))) \/ 29 AS ImageCount FROM Posts WHERE CreationDate > '2014-01-01T00:00:00.001' AND (LENGTH(Body) - LENGTH(REPLACE(Body, 'src=\"http:\/\/i.stack.imgur.com', ''))) \/ 29 > 3 AND PostTypeId = 2 ORDER BY ImageCount DESC","CreationDate":"2015-01-07 05:56:19","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  (LEN(Body)-LEN(REPLACE(Body,'src=\"http:\/\/i.stack.imgur.com','')))\/29 AS ImageCount\nFROM\n  Posts\nWHERE\n  CreationDate > '2014-01-01T00:00:00.001'\n  AND (LEN(Body)-LEN(REPLACE(Body,'src=\"http:\/\/i.stack.imgur.com','')))\/29 > 3\n  AND PostTypeId = 2\nORDER BY\n  ImageCount DESC"},{"QuerySetId":239122,"Title":"Where are (US) StackExchange Users Located?","Description":null,"QueryBody":"SELECT * FROM (SELECT DISTINCT Users.Location, COUNT(*) AS N FROM Users WHERE Users.Location LIKE '%, [A-Z][A-Z]' GROUP BY Users.Location) AS a WHERE a.N > 10 ORDER BY a.N DESC","CreationDate":"2014-10-28 02:42:03","validated":false,"QueryBody_Original":"SELECT  * FROM \n(SELECT DISTINCT Users.Location, count(*) as N\nFROM Users\nWHERE Users.Location LIKE '%, [A-Z][A-Z]'\nGROUP BY Users.Location\n) as a\nWHERE a.N > 10\nORDER BY a.N DESC\n;"},{"QuerySetId":239216,"Title":"comments contain word like and other word like","Description":null,"QueryBody":"SELECT c.Score, c.Id AS \"Comment Link\", c.CreationDate FROM Comments AS c WHERE text LIKE '%##Word##%' COLLATE SQL_Latin1_General_CP1_CI_AS AND text LIKE '%##OtherWord##%' COLLATE SQL_Latin1_General_CP1_CI_AS ORDER BY c.CreationDate DESC","CreationDate":"2014-10-28 05:47:25","validated":false,"QueryBody_Original":"SELECT \n  c.Score,\n  c.Id AS [Comment Link],\n  c.CreationDate\nFROM\n  Comments c\nWHERE text like '%##Word##%' COLLATE SQL_Latin1_General_CP1_CI_AS\nand\ntext LIKE '%##OtherWord##%' COLLATE SQL_Latin1_General_CP1_CI_AS\nORDER BY c.CreationDate DESC"},{"QuerySetId":239273,"Title":"Find comment with the given text","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", PostId AS \"Post Link\", CreationDate FROM Comments WHERE Text LIKE '%##Text##%' ORDER BY CreationDate DESC","CreationDate":"2014-10-28 16:30:06","validated":false,"QueryBody_Original":"SELECT  \n  Id as [Comment Link],\n  PostId as [Post Link],\n  CreationDate\nfrom Comments\nwhere Text like '%##Text##%'\norder by CreationDate desc"},{"QuerySetId":239351,"Title":"Yearly script deletion candidates in category-theory","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", CreationDate, Tags FROM Posts WHERE AnswerCount = 0 AND CommentCount < 2 AND Score = 0 AND ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) > 350 AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) < 375 AND (Tags LIKE '%<category-theory>%' OR Tags LIKE '%<simplicial-stuff>%' OR Tags LIKE '%<algebraic-topology>%') ORDER BY CreationDate","CreationDate":"2014-10-28 18:42:51","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], OwnerUserId as [User Link], CreationDate, Tags from Posts\nwhere AnswerCount=0 and CommentCount<2 and Score=0 and ClosedDate is null\n  and DATEDIFF(DAY, CreationDate, GETDATE())>350\n  and DATEDIFF(DAY, CreationDate, GETDATE())<375\n  and (Tags LIKE '%<category-theory>%'\n  or Tags LIKE '%<simplicial-stuff>%'\n  or Tags LIKE '%<algebraic-topology>%')\norder by CreationDate asc"},{"QuerySetId":239356,"Title":"All data in last day","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts","CreationDate":"2014-10-28 20:42:15","validated":false,"QueryBody_Original":"SELECT  count(*) from posts"},{"QuerySetId":239762,"Title":"Questions closed by a user, except duplicates","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.AnswerCount, p.ViewCount, p.ClosedDate FROM Posts AS p INNER JOIN PostHistory AS h ON h.PostId = p.Id WHERE h.PostHistoryTypeId = 10 AND h.Comment = 101 AND h.Text LIKE '%\"Id\":##UserId##%' AND NOT p.ClosedDate IS NULL ORDER BY p.ClosedDate","CreationDate":"2017-01-19 02:21:33","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], p.Score, p.AnswerCount, p.ViewCount, p.ClosedDate from Posts p\ninner join PostHistory h\non h.PostId=p.Id\nwhere h.PostHistoryTypeId=10 \n  and h.Comment=101 \n  and h.Text like '%\"Id\":##UserId##%' \n  and p.ClosedDate is not null\norder by p.ClosedDate asc"},{"QuerySetId":239986,"Title":"Analysing User Activity Over Time","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Users Joined\", TIME_TO_STR(\"CreationDate\", '%-mONT%-H') AS \"Month\", TIME_TO_STR(\"CreationDate\", '%YEAR') AS \"Year\" FROM USERS GROUP BY TIME_TO_STR(\"CreationDate\", '%YEAR'), TIME_TO_STR(\"CreationDate\", '%-mONT%-H') ORDER BY TIME_TO_STR(\"CreationDate\", '%YEAR'), TIME_TO_STR(\"CreationDate\", '%-mONT%-H')","CreationDate":"2014-10-29 22:44:25","validated":false,"QueryBody_Original":"SELECT    COUNT(*) As 'Users Joined'\n        ,DATEPART(MONTH, [CreationDate]) As 'Month'\n        ,DATEPART(YEAR, [CreationDate]) As 'Year'\nFROM    USERS\nGROUP BY DATEPART(YEAR, [CreationDate]), DATEPART(MONTH, [CreationDate])\nORDER BY DATEPART(YEAR, [CreationDate]), DATEPART(MONTH, [CreationDate])"},{"QuerySetId":239988,"Title":"Overall site activity per hour","Description":null,"QueryBody":"SELECT h.hours AS \"Hour\", COUNT(postsCounter) AS \"Posts\" FROM (SELECT TIME_TO_STR(creationdate, '%h') AS active, 1 AS counter, 1 AS postsCounter, NULL AS commentsCounter, NULL AS editsCounter, NULL AS suggestedCounter FROM votes WHERE votetypeid = 1 AND TIME_TO_STR(creationdate, '%Y') >= 2013) AS a RIGHT JOIN (SELECT DISTINCT TIME_TO_STR(CreationDate, '%h') AS hours FROM votes WHERE votetypeid = 1) AS h ON a.active = h.hours GROUP BY h.hours ORDER BY h.hours","CreationDate":"2014-11-04 19:19:38","validated":false,"QueryBody_Original":"SELECT  h.hours as [Hour], count(postsCounter) as [Posts]\nfrom\n(\nSELECT datepart(hour, creationdate) as active, 1 as counter, 1 as postsCounter, NULL as commentsCounter, NULL as editsCounter, NULL as suggestedCounter from votes where votetypeid = 1 and datepart(year, creationdate) >= 2013\n) as a\nright join\n(\nSELECT distinct datepart(hour, CreationDate) as hours from votes where votetypeid = 1\n) as h on a.active = h.hours\n\ngroup by h.hours\norder by h.hours"},{"QuerySetId":240791,"Title":"Do earlier game jam submissions get more votes?","Description":null,"QueryBody":"SELECT creationDate - minDate.firstGame, score FROM posts, (SELECT MIN(creationDate) AS firstGame FROM posts WHERE posts.parentid = 1356) AS minDate WHERE posts.parentid = 1356 UNION SELECT creationDate - minDate.firstGame, score FROM posts, (SELECT MIN(creationDate) AS firstGame FROM posts WHERE posts.parentid = 1449) AS minDate WHERE posts.parentid = 1449","CreationDate":"2014-10-30 20:04:29","validated":false,"QueryBody_Original":"SELECT  creationDate - minDate.firstGame, score\nfrom posts,\n    (SELECT min(creationDate) firstGame from posts where posts.parentid = 1356) minDate\nwhere posts.parentid = 1356\n\nunion\n\nSELECT creationDate - minDate.firstGame, score\nfrom posts,\n    (SELECT min(creationDate) firstGame from posts where posts.parentid = 1449) minDate\nwhere posts.parentid = 1449\n\n-- fall 2013: 1356\n-- winter: 1449\n-- spring: 1565\n-- summer: 1637"},{"QuerySetId":241983,"Title":"LEGO Answers - One Tag Questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Tags LIKE '<##tags##>' OR Tags LIKE '\u00e9##tags##\u00e0' LIMIT 1000","CreationDate":"2014-11-03 17:49:31","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  Id AS [Post Link]\nFROM Posts\nWHERE Tags LIKE '<##tags##>' OR Tags LIKE '\u00e9##tags##\u00e0'"},{"QuerySetId":242320,"Title":"What Have you Tried? w\/ accepted answer","Description":null,"QueryBody":"SELECT c.Text, c.Id AS \"Comment Link\", p.Score, c.CreationDate, p.ViewCount, LENGTH(c.Text) AS \"Len\", p.Id AS \"Post Link\" FROM Comments AS c INNER JOIN Posts AS p ON c.PostId = p.Id WHERE c.Text LIKE '_hat have you tri%' AND NOT p.AcceptedAnswerId IS NULL AND LENGTH(c.Text) < 80 ORDER BY p.LastEditDate LIMIT 100","CreationDate":"2014-11-06 12:19:26","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    c.Text,\n    c.Id AS [Comment Link],\n    p.Score,\n    c.CreationDate,\n    p.ViewCount,\n    LEN(c.Text) as 'Len',\n    p.Id AS [Post Link]\nFROM\n    Comments c\n      INNER JOIN Posts p\n      ON c.PostId = p.Id\nWHERE \n    c.Text LIKE '_hat have you tri%'\n    AND p.AcceptedAnswerId IS NOT NULL\n    AND LEN(c.Text) < 80\nORDER BY p.LastEditDate ASC"},{"QuerySetId":242342,"Title":"select * from Posts where Tags like '%git%' order by score desc","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%git%' ORDER BY score DESC","CreationDate":"2014-11-04 15:29:04","validated":false,"QueryBody_Original":"SELECT  * from Posts where Tags like '%git%' order by score desc"},{"QuerySetId":242439,"Title":"Upvotes and downvotes by month (2014)","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%-mONT%-H') AS \"Month\", SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) \/ 100.0 AS \"Downvotes (hundred)\", SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) \/ 100.0 AS \"Upvotes (hundred)\", SUM(CASE WHEN PostId = 1 THEN 1 ELSE 0 END) AS \"Questions\", SUM(CASE WHEN PostId = 2 THEN 1 ELSE 0 END) AS \"Answers\" FROM Votes WHERE CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) = '2014' GROUP BY TIME_TO_STR(CreationDate, '%-mONT%-H') ORDER BY TIME_TO_STR(CreationDate, '%-mONT%-H')","CreationDate":"2014-11-04 21:00:00","validated":false,"QueryBody_Original":"SELECT  \n  DATEPART(MONTH, CreationDate) AS [Month]\n  ,SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) \/ 100.0 AS [Downvotes (hundred)]\n  ,SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) \/ 100.0 AS [Upvotes (hundred)]\n  ,SUM(CASE WHEN PostId = 1 THEN 1 ELSE 0 END) AS [Questions]\n  ,SUM(CASE WHEN PostId = 2 THEN 1 ELSE 0 END) AS [Answers]\nFROM \n  Votes\nWHERE \n  CAST(DATEPART(YYYY, CreationDate) AS VARCHAR)='2014'\nGROUP BY \n  DATEPART(MONTH, CreationDate)\nORDER BY \n  DATEPART(MONTH, CreationDate) ASC"},{"QuerySetId":242944,"Title":"Good and Bad code examples","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Body LIKE '%<code>%' AND ParentId IN (1109022, 151777, 541966, 1016896, 6343166, 477572, 2591036, 3145089, 2201917, 5033012, 600207, 3035692, 1560788, 2091465, 531427, 2139134, 6495898, 3166501, 4605527, 2736389, 2150078, 6200533, 867518, 2471935, 3624280, 2459916, 1667278, 2795833, 2317428, 3495890, 1397361, 2169649, 2403632, 2644134, 2695746, 4946295, 7723964, 8500283, 3331527, 11444238, 5105354, 2130932, 2617266, 2160619, 454315, 3226495, 1556987, 2322234, 5832368, 1101380, 5694933, 2973270, 419184, 6330260, 2271131, 3349121, 4165414, 2780102, 6290531, 574195, 1851633, 5357455, 2217753, 3647993, 3611457, 11281010, 8181828, 3916330, 5763304, 11321129, 660151, 6520718, 6176391, 4617898, 3996938, 6070805, 4894885, 1724937, 5495225, 16143562, 13739785)","CreationDate":"2014-11-06 09:31:05","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts where Body like '%<code>%' and  ParentId in (\n1109022,\n151777,\n541966,\n1016896,\n6343166,\n477572,\n2591036,\n3145089,\n2201917,\n5033012,\n600207,\n3035692,\n1560788,\n2091465,\n531427,\n2139134,\n6495898,\n3166501,\n4605527,\n2736389,\n2150078,\n6200533,\n867518,\n2471935,\n3624280,\n2459916,\n1667278,\n2795833,\n2317428,\n3495890,\n1397361,\n2169649,\n2403632,\n2644134,\n2695746,\n4946295,\n7723964,\n8500283,\n3331527,\n11444238,\n5105354,\n2130932,\n2617266,\n2160619,\n454315,\n3226495,\n1556987,\n2322234,\n5832368,\n1101380,\n5694933,\n2973270,\n419184,\n6330260,\n2271131,\n3349121,\n4165414,\n2780102,\n6290531,\n574195,\n1851633,\n5357455,\n2217753,\n3647993,\n3611457,\n11281010,\n8181828,\n3916330,\n5763304,\n11321129,\n660151,\n6520718,\n6176391,\n4617898,\n3996938,\n6070805,\n4894885,\n1724937,\n5495225,\n16143562,\n13739785)"},{"QuerySetId":243354,"Title":"Search all posts for a string of characters","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", CreationDate FROM Posts WHERE Body LIKE '%##text##%' ORDER BY CreationDate DESC","CreationDate":"2014-11-07 03:05:52","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], OwnerUserId as [User Link], CreationDate\nfrom Posts\nwhere\n  Body like '%##text##%'\norder by CreationDate desc"},{"QuerySetId":243724,"Title":"Do Questions Get Answers on Math.StackExchange?","Description":null,"QueryBody":"SELECT q1.\"# ans\", q1.\"ct\" AS \"#q\", q2.\"ct\" AS \"#q score>5\" FROM (SELECT Posts.AnswerCount AS \"# ans\", COUNT(*) AS \"ct\" FROM Posts WHERE Posts.AnswerCount >= -1 AND Posts.AnswerCount < 10 AND Posts.Score > 0 GROUP BY Posts.AnswerCount) AS q1 INNER JOIN (SELECT Posts.AnswerCount AS \"# ans\", COUNT(*) AS \"ct\" FROM Posts WHERE Posts.AnswerCount >= -1 AND Posts.AnswerCount < 10 AND Posts.Score > 5 GROUP BY Posts.AnswerCount) AS q2 ON q1.\"# ans\" = q2.\"# ans\" ORDER BY q1.\"# ans\"","CreationDate":"2014-11-07 19:42:41","validated":false,"QueryBody_Original":"SELECT  q1.\"# ans\", q1.\"ct\" as \"#q\", q2.\"ct\" as \"#q score>5\"\nfrom (SELECT Posts.AnswerCount as \"# ans\", COUNT(*) as \"ct\"\nFROM Posts\nWHERE\n  Posts.AnswerCount >= -1 and Posts.AnswerCount < 10 and Posts.Score > 0 \n  Group by Posts.AnswerCount ) as q1\ninner join\n(SELECT Posts.AnswerCount as \"# ans\", COUNT(*) as \"ct\"\nFROM Posts\nWHERE\n  Posts.AnswerCount >= -1 and Posts.AnswerCount < 10 and Posts.Score > 5 \n  Group by Posts.AnswerCount ) as q2\non q1.\"# ans\" = q2.\"# ans\"\norder by q1.\"# ans\""},{"QuerySetId":244004,"Title":"Questions favorited by a user with a matching tag badge","Description":null,"QueryBody":"SELECT p.CreationDate, p.Id AS \"Post Link\", p.Score, COUNT(b.UserId) AS \"Users\", p.Tags FROM Posts AS p, Badges AS b, Votes AS v WHERE v.VoteTypeId = 5 AND v.PostId = p.Id AND v.UserId = b.UserId AND p.Tags LIKE '%' + b.Name + '%' AND p.Score >= 0 AND p.ClosedDate IS NULL GROUP BY p.Id, p.Score, p.CommentCount, p.CreationDate, p.Tags ORDER BY Users DESC","CreationDate":"2014-11-08 04:17:50","validated":false,"QueryBody_Original":"SELECT  p.CreationDate, p.Id as [Post Link], p.Score, count(b.UserId) as [Users], p.Tags from Posts p, Badges b, Votes v  \nwhere v.VoteTypeId=5 \n  and v.PostId=p.Id \n  and v.UserId=b.UserId \n  and p.Tags like '%'+b.Name+'%' \n  and p.Score>=0\n  and p.ClosedDate is Null\ngroup by p.Id, p.Score, p.CommentCount, p.CreationDate, p.Tags\norder by Users desc"},{"QuerySetId":244156,"Title":"When to ask for maximum visibility","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%h') AS hour, CAST(SUM(AnswerCount) AS FLOAT) \/ COUNT(AnswerCount) AS avgAnswers FROM Posts WHERE PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%h') ORDER BY hour","CreationDate":"2014-11-11 09:43:29","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(hour, CreationDate) AS hour,\n  CAST(SUM(AnswerCount) AS FLOAT) \/ COUNT(AnswerCount) AS avgAnswers\nFROM Posts\nWHERE\n  PostTypeId = 1\nGROUP BY DATEPART(hour, CreationDate)\nORDER BY hour"},{"QuerySetId":244766,"Title":"Overall voting statistics for 2014","Description":null,"QueryBody":"SELECT UpVotes, DownVotes, CAST(100.0 * Downvotes \/ (Upvotes + Downvotes) AS INT) AS PercentageDownvotes FROM (SELECT SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes FROM Votes WHERE CreationDate >= '2014-01-01') AS VoteTotals","CreationDate":"2014-11-10 10:52:32","validated":false,"QueryBody_Original":"SELECT  UpVotes, DownVotes,\n  CAST(100.0 * Downvotes \/ (Upvotes + Downvotes) AS int) AS PercentageDownvotes\nFROM \n(\n\tSELECT SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,\n\t    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes\n\tFROM Votes\n    WHERE CreationDate >= '2014-01-01'\n) AS VoteTotals"},{"QuerySetId":244938,"Title":"Votes in a tag per day","Description":"Show a daily breakdown of the number of upvotes (+) and downvotes (-) on questions (Q) and answers (+) in a given tag. The data is based on the question tags at the time the query is run, not on the tags at the time of the vote. The total column includes all types of votes (not just up\/down but also favorite, close\/reopen, etc.).\r\n","QueryBody":"SELECT v.CreationDate AS \"Date\", COUNT(CASE WHEN v.VoteTypeId = 2 AND p.PostTypeId = 1 THEN 1 ELSE NULL END) AS \"Q+\", COUNT(CASE WHEN v.VoteTypeId = 3 AND p.PostTypeId = 1 THEN 1 ELSE NULL END) AS \"Q-\", COUNT(CASE WHEN v.VoteTypeId = 2 AND p.PostTypeId = 2 THEN 1 ELSE NULL END) AS \"A+\", COUNT(CASE WHEN v.VoteTypeId = 3 AND p.PostTypeId = 2 THEN 1 ELSE NULL END) AS \"A-\", COUNT(*) AS \"Total\" FROM Votes AS v INNER JOIN Posts AS p ON p.Id = v.PostId INNER JOIN Posts AS q ON q.Id = p.Id OR q.Id = p.ParentId WHERE q.PostTypeId = 1 AND (q.Tags LIKE '%<##Tag##>%' OR q.Tags LIKE '%\u00e9##Tag##\u00e0%') GROUP BY v.CreationDate ORDER BY Date","CreationDate":"2014-11-10 22:30:53","validated":false,"QueryBody_Original":"SELECT \n  v.CreationDate as [Date],\n  count(iif(v.VoteTypeId = 2 and p.PostTypeId = 1, 1, null)) as [Q+],\n  count(iif(v.VoteTypeId = 3 and p.PostTypeId = 1, 1, null)) as [Q-],\n  count(iif(v.VoteTypeId = 2 and p.PostTypeId = 2, 1, null)) as [A+],\n  count(iif(v.VoteTypeId = 3 and p.PostTypeId = 2, 1, null)) as [A-],\n  count(*) as [Total]\nfrom Votes v\ninner join Posts p on p.Id = v.PostId\ninner join Posts q on q.Id = p.Id or q.Id = p.ParentId\nwhere q.PostTypeId = 1\n  and (q.Tags like '%<##Tag##>%' or q.Tags like '%\u00e9##Tag##\u00e0%')\ngroup by v.CreationDate\norder by Date asc"},{"QuerySetId":245274,"Title":"Questions that received a lot of bounty","Description":"Shows all questions that received more than one bounty","QueryBody":"SELECT PostId AS \"Post Link\", bounties, amount FROM (SELECT PostId, COUNT(BountyAmount) AS bounties, SUM(BountyAmount) AS amount FROM Votes WHERE NOT BountyAmount IS NULL AND VoteTypeId = 8 \/* BountyStart *\/ GROUP BY PostId) AS B WHERE bounties > 1 ORDER BY amount DESC","CreationDate":"2015-04-08 20:07:40","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], bounties, amount \nFROM (\n  SELECT PostId, \n         COUNT(BountyAmount) bounties, \n         SUM(BountyAmount) amount \n  FROM Votes\n  WHERE BountyAmount IS NOT NULL AND VoteTypeId = 8 -- BountyStart\n  GROUP BY PostId\n) AS B\nWHERE bounties > 1\nORDER BY amount DESC"},{"QuerySetId":245329,"Title":"Looking for voting activity of users below 125 rep","Description":null,"QueryBody":"SELECT Id, Reputation, UpVotes, DownVotes FROM Users WHERE Reputation <= 125 ORDER BY UpVotes DESC","CreationDate":"2014-11-11 20:02:09","validated":false,"QueryBody_Original":"SELECT  Id, Reputation, UpVotes, DownVotes FROM Users WHERE Reputation <= 125 ORDER BY UpVotes DESC"},{"QuerySetId":245344,"Title":"Average time till the answer that gets a bounty is posted","Description":null,"QueryBody":"SELECT *, DATEDIFF(activeDate, X.CreationDate) AS time FROM (SELECT q.Id, bountyStart.BountyAmount AS startBounty, bountyStart.CreationDate, bountyClose.BountyAmount AS endBounty, a.LastEditDate, CASE WHEN a.CreationDate < bountyStart.CreationDate THEN bountyClose.CreationDate ELSE a.CreationDate END AS activeDate FROM Votes AS bountyClose INNER JOIN Posts AS a ON bountyClose.PostId = a.Id INNER JOIN Posts AS q ON a.ParentId = q.Id INNER JOIN Votes AS bountyStart ON bountyStart.PostId = q.Id WHERE NOT bountyClose.BountyAmount IS NULL AND NOT bountyStart.BountyAmount IS NULL AND bountyClose.VoteTypeId = 9 \/* BountyClose *\/ AND bountyStart.VoteTypeId = 8 \/* BountyStart *\/) AS X ORDER BY Id LIMIT 20","CreationDate":"2014-11-11 21:35:09","validated":false,"QueryBody_Original":"SELECT  TOP 20 \n  *,\n  DateDiff(Hour, X.CreationDate, activeDate) as time\nFROM (\n  SELECT \n    q.Id, \n    bountyStart.BountyAmount as startBounty, \n    bountyStart.CreationDate, \n    bountyClose.BountyAmount as endBounty, \n    a.LastEditDate,   \n    CASE \n      WHEN a.CreationDate < bountyStart.CreationDate\n        THEN bountyClose.CreationDate \n        ELSE a.CreationDate\n    END as activeDate \n  FROM Votes bountyClose\n  INNER JOIN Posts a\n    ON bountyClose.PostId = a.Id\n  INNER JOIN Posts q\n    ON a.ParentId = q.Id\n  INNER JOIN Votes bountyStart\n    ON bountyStart.PostId = q.Id\n  WHERE bountyClose.BountyAmount IS NOT NULL\n    AND bountyStart.BountyAmount IS NOT NULL\n    AND bountyClose.VoteTypeId = 9 -- BountyClose\n    AND bountyStart.VoteTypeId = 8 -- BountyStart\n  ) AS X\nORDER BY Id"},{"QuerySetId":245494,"Title":"Main reasons for question closing","Description":null,"QueryBody":"SELECT p.Id AS \"Closed Questions\", p.ClosedDate FROM Posts AS p INNER JOIN PostHistory AS h ON h.PostId = p.Id WHERE h.PostHistoryTypeId = 10 AND h.Comment = 102 AND NOT p.ClosedDate IS NULL ORDER BY p.ClosedDate","CreationDate":"2014-11-12 02:16:04","validated":false,"QueryBody_Original":"SELECT  p.Id as [Closed Questions], p.ClosedDate from Posts p\ninner join PostHistory h\non h.PostId=p.Id\nwhere h.PostHistoryTypeId=10 \n  and h.Comment= 102 \n  and p.ClosedDate is not null\norder by p.ClosedDate asc"},{"QuerySetId":245748,"Title":"Users from Beta near 10k","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation FROM Badges AS b INNER JOIN Users AS u ON b.UserId = u.Id WHERE b.Name = 'Beta' AND u.Reputation > 9500 AND u.Reputation < 10500 ORDER BY u.Reputation","CreationDate":"2014-11-12 15:27:53","validated":false,"QueryBody_Original":"SELECT  \n  u.Id, u.DisplayName, u.Reputation\nFROM \n  Badges b \nINNER JOIN\n  Users u ON b.UserId = u.Id\nWHERE\n  b.Name='Beta' AND u.Reputation > 9500 AND u.Reputation < 10500\nORDER BY\n  u.Reputation"},{"QuerySetId":245757,"Title":"Posts that consist solely of a spoiler block","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Score, OwnerUserId AS \"User Link\", RIGHT(Body, LENGTH(Body) - 34) AS \"Text\" FROM Posts WHERE Body LIKE '<blockquote class=\"spoiler\">%' AND NOT BODY LIKE '%<\/blockquote>%<p>%' ORDER BY Id","CreationDate":"2014-11-12 16:37:36","validated":false,"QueryBody_Original":"SELECT \n  Id As [Post Link],\n  CreationDate,\n  Score,\n  OwnerUserId As [User Link],\n  Right(Body, Len(Body)-34) AS [Text]\nFROM Posts\nWHERE Body LIKE '<blockquote class=\"spoiler\">%'\n  AND NOT BODY LIKE '%<\/blockquote>%<p>%'\nORDER BY Id ASC"},{"QuerySetId":245986,"Title":"Search for short comments ","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\" FROM Comments WHERE UserId = '##UserId##' AND Text LIKE '%##search##%' ORDER BY LENGTH(Text)","CreationDate":"2015-01-03 10:49:26","validated":false,"QueryBody_Original":"SELECT \n    Id AS [Comment Link] \nFROM\n    Comments\nWHERE\n    UserId = '##UserId##'\n    AND Text LIKE '%##search##%'  \nORDER BY\nlen(Text) ASC"},{"QuerySetId":246189,"Title":"Negative vs. Positive Questions over time","Description":null,"QueryBody":"SELECT CASE WHEN score >= 0 THEN 1 ELSE -1 END, YEAR(CreationDate), COUNT(1) FROM Posts WHERE posttypeid = 1 GROUP BY CASE WHEN score >= 0 THEN 1 ELSE -1 END, YEAR(CreationDate) ORDER BY 2, 1, 3","CreationDate":"2015-01-27 21:56:53","validated":false,"QueryBody_Original":"SELECT \n  case\n    when score >= 0 then 1\n    else -1\n  end,\n  year(CreationDate),\n  Count(1)\nfrom Posts where posttypeid = 1\ngroup by\n  case\n    when score >= 0 then 1\n    else -1\n  end,\n  year(CreationDate)\norder by 2, 1, 3"},{"QuerySetId":246820,"Title":"Users with > 25 Bountys","Description":null,"QueryBody":"SELECT COALESCE(p.owneruserid, -1) AS \"User Link\", COUNT(1) AS \"Bounty Answers Provided\", (SELECT location FROM users AS u WHERE u.id = p.owneruserid) AS \"Country\" FROM posts AS p, votes WHERE p.id = postid AND votetypeid = 9 GROUP BY owneruserid HAVING COUNT(1) > 25 ORDER BY 2","CreationDate":"2014-11-15 18:45:34","validated":false,"QueryBody_Original":"SELECT  ISNULL(p.owneruserid, -1) [User Link],\ncount(1) [Bounty Answers Provided],\n(SELECT location from users u where u.id = p.owneruserid) as [Country]\nfrom posts p,votes \nwhere p.id = postid\nand votetypeid = 9\ngroup by owneruserid\nhaving  count(1) > 25\norder by 2"},{"QuerySetId":246898,"Title":"Date of first question with Bounty","Description":null,"QueryBody":"SELECT PostId, MIN(CreationDate) AS DaDate FROM (SELECT PostId, CreationDate FROM Votes WHERE NOT BountyAmount IS NULL AND VoteTypeId = 8 \/* BountyStart *\/) AS B GROUP BY PostId ORDER BY DaDate LIMIT 10","CreationDate":"2014-11-14 19:38:07","validated":false,"QueryBody_Original":"SELECT  TOP 10 PostId, MIN(CreationDate) AS DaDate\nFROM (\n SELECT PostId, CreationDate\n FROM Votes\n WHERE BountyAmount IS NOT NULL AND VoteTypeId = 8 -- BountyStart\n) AS B\nGROUP BY PostId\nORDER BY DaDate"},{"QuerySetId":246908,"Title":"Number of Questions after introducing bounties to SO","Description":null,"QueryBody":"SELECT COUNT(id) FROM Posts WHERE CreationDate >= '2009-01-27' AND PostTypeId = 1","CreationDate":"2014-11-14 19:58:15","validated":false,"QueryBody_Original":"SELECT  COUNT(id)\nFROM Posts\nWHERE CreationDate >= '2009-01-27' AND PostTypeId = 1"},{"QuerySetId":246909,"Title":"Number of Questions before introducing bounties to SO","Description":null,"QueryBody":"SELECT COUNT(id) FROM Posts WHERE CreationDate < '2009-01-27' AND PostTypeId = 1","CreationDate":"2014-11-14 19:59:01","validated":false,"QueryBody_Original":"SELECT  COUNT(id)\nFROM Posts\nWHERE CreationDate < '2009-01-27' AND PostTypeId = 1"},{"QuerySetId":247111,"Title":"Top 100 posts that answer their own question","Description":"Find posts where the question score is not zero, an answer score is high and that answer was posted by the questioner at the same time. Capped at 100 for larger stacks.","QueryBody":"SELECT q.Id AS \"Post Link\", q.OwnerUserId AS \"User Link\", a.Score AS AnswerScore, q.Score AS QuestionScore FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE a.OwnerUserID = q.OwnerUserId AND q.Score >= 0 AND a.Score > 0 AND a.CommunityOwnedDate IS NULL AND q.ClosedDate IS NULL AND DATEDIFF(a.CreationDate, q.CreationDate) < 2 ORDER BY a.Score DESC LIMIT 100","CreationDate":"2014-11-15 04:39:12","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  q.Id as [Post Link],\n  q.OwnerUserId as [User Link],\n  a.Score as AnswerScore,\n  q.Score as QuestionScore\nFROM \n  Posts q\nINNER JOIN\n  Posts a ON a.ParentId = q.Id\nWHERE   \n  a.OwnerUserID = q.OwnerUserId AND\n  q.Score >= 0 AND\n  a.Score > 0 AND\n  a.CommunityOwnedDate is null AND \n  q.ClosedDate is null AND\n  DATEDIFF(Day, q.CreationDate, a.CreationDate) < 2  \nORDER BY a.Score desc"},{"QuerySetId":247472,"Title":"Avg User Upvotes for Answered","Description":null,"QueryBody":"SELECT AVG(UpVotes) FROM USERS WHERE ID IN (SELECT OwnerUserId FROM Posts WHERE NOT AcceptedAnswerId IS NULL)","CreationDate":"2014-11-16 09:58:40","validated":false,"QueryBody_Original":"SELECT  AVG(UpVotes) FROM USERS WHERE ID IN \n(SELECT OwnerUserId FROM Posts WHERE AcceptedAnswerId IS NOT NULL)"},{"QuerySetId":248048,"Title":"Find questions with unsuccessful bounites","Description":null,"QueryBody":"SELECT PostId FROM Votes WHERE Votes.VoteTypeId = 9 AND Votes.BountyAmount IS NULL","CreationDate":"2014-11-17 22:06:32","validated":false,"QueryBody_Original":"SELECT  PostId\nFROM Votes \nWHERE Votes.VoteTypeId = 9 AND Votes.BountyAmount Is Null"},{"QuerySetId":248184,"Title":"Vote Ratio Over Time By Post Type","Description":null,"QueryBody":"SELECT COUNT(votes.Id) AS \"Count\", votetypeid, posttypeid FROM Votes INNER JOIN posts ON posts.id = votes.postid WHERE votes.creationdate > GETUTCDATE() - 3 AND (votetypeid = 2 OR votetypeid = 3) GROUP BY votetypeid, posts.posttypeid","CreationDate":"2014-11-18 02:38:20","validated":false,"QueryBody_Original":"SELECT  count(votes.Id) as 'Count', votetypeid, posttypeid from Votes inner join posts on posts.id = votes.postid where votes.creationdate > GETUTCDATE()-3 and (votetypeid = 2 or votetypeid = 3) group by votetypeid, posts.posttypeid"},{"QuerySetId":248252,"Title":"Questions asked per tag per hour","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%I') AS Hours, COUNT(*) AS Total FROM posts WHERE posts.Tags LIKE '%a%' GROUP BY TIME_TO_STR(CreationDate, '%I')","CreationDate":"2014-11-18 18:05:46","validated":false,"QueryBody_Original":"SELECT  DATEPART(hh, CreationDate) as Hours, count(*) as Total from posts where posts.Tags like '%a%' GROUP BY DATEPART(hh, CreationDate);"},{"QuerySetId":248625,"Title":"Closed questions by user rep","Description":"Breaks down all closed questions by the reputation of the author. Note that almost all closed questions are by users with 1 rep, and the next highest is 6 rep (one question up vote).","QueryBody":"SELECT p.id AS \"Post Link\", u.Reputation, COUNT(u.Reputation) AS \"rep count\" FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId AND u.Reputation < 50 WHERE p.PostTypeId = 1 AND NOT p.ClosedDate IS NULL AND p.AnswerCount <= 0 GROUP BY u.Reputation, p.id ORDER BY u.Reputation","CreationDate":"2014-11-28 11:22:37","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  u.Reputation,\n  count(u.Reputation) [rep count]\nfrom Posts p\ninner join Users u on u.Id = p.OwnerUserId\n  and u.Reputation < 50\nwhere p.PostTypeId = 1\n  and p.ClosedDate is not null\n  and p.AnswerCount <= 0\ngroup by u.Reputation, p.id\norder by u.Reputation"},{"QuerySetId":248918,"Title":"Moderator candidates by last access date","Description":"All Users which have the necessary reputation and Badges for\r\nthe 2011 Stack Overflow Moderator election: http:\/\/stackoverflow.com\/election\/2","QueryBody":"SELECT Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE Reputation >= 90000 ORDER BY LastAccessDate DESC","CreationDate":"2014-12-10 01:33:51","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], Reputation, LastAccessDate\n from Users\n where Reputation >= 90000\n   \n   \norder by LastAccessDate desc"},{"QuerySetId":249312,"Title":"Find a question where I made a specific edit in an answer","Description":null,"QueryBody":"SELECT * FROM Posts AS p JOIN PostHistory AS ph ON p.Id = ph.PostId WHERE p.PostTypeId = 2 AND ph.UserId = 648265 AND ph.Text LIKE '%.cache%'","CreationDate":"2014-11-20 23:34:15","validated":false,"QueryBody_Original":"SELECT  * from Posts as p\njoin PostHistory as ph on p.Id=ph.PostId\n  where p.PostTypeId=2\n  and ph.UserId=648265\n  and ph.Text like '%.cache%'"},{"QuerySetId":249321,"Title":"select count(WebsiteUrl), count(Id), count(*) from Users","Description":null,"QueryBody":"SELECT COUNT(WebsiteUrl), COUNT(Id), COUNT(*) FROM Users","CreationDate":"2014-11-20 23:57:44","validated":false,"QueryBody_Original":"SELECT  count(WebsiteUrl), count(Id), count(*) from Users;"},{"QuerySetId":249365,"Title":"Closed, score 1, no answers or comments","Description":null,"QueryBody":"SELECT CreationDate, Id AS \"Post Link\" FROM Posts AS p WHERE NOT ClosedDate IS NULL AND Score = 1 AND CommentCount = 0 AND AnswerCount = 0 AND NOT EXISTS(SELECT l.Id FROM PostLinks AS l WHERE l.PostId = p.Id OR l.RelatedPostId = p.Id) ORDER BY CreationDate","CreationDate":"2014-11-21 02:02:11","validated":false,"QueryBody_Original":"SELECT   CreationDate, Id as [Post Link] from Posts p\nwhere ClosedDate is not null\nand Score = 1 \nand CommentCount = 0\nand AnswerCount = 0\nand not exists (SELECT l.Id from PostLinks l where l.PostId=p.Id or l.RelatedPostId=p.Id)\norder by CreationDate asc"},{"QuerySetId":249507,"Title":"find users with about me text like","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, CreationDate, LastAccessDate FROM Users WHERE AboutMe LIKE '%##text##%'","CreationDate":"2014-11-21 09:47:32","validated":false,"QueryBody_Original":"SELECT \n  Id AS [User Link],\n  Reputation,\n  CreationDate,\n  LastAccessDate\nFROM\n  Users\nWHERE\n  AboutMe LIKE '%##text##%'"},{"QuerySetId":249547,"Title":"Top Stack Overflow users from Pakistan by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' ORDER BY Reputation DESC","CreationDate":"2014-11-21 14:17:16","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":250151,"Title":"top users with default user name","Description":null,"QueryBody":"SELECT DisplayName, Reputation FROM Users WHERE SUBSTRING(DisplayName, 1, 4) = 'user' ORDER BY Reputation DESC","CreationDate":"2014-11-24 06:14:23","validated":false,"QueryBody_Original":"SELECT  DisplayName, Reputation from Users\nwhere SUBSTRING(DisplayName, 1, 4) = 'user'\norder by Reputation desc"},{"QuerySetId":250240,"Title":"Usage of Stack Snippets in Incorrect Tags (Examples)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags, CreationDate, Title FROM POSTS WHERE PostTypeId IN (1) AND CreationDate > '2018-01-01' AND Body LIKE ('%div class=\"snippet\"%') AND tags LIKE ('%python%') ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2018-05-08 15:00:40","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id as [Post Link], Tags, CreationDate, Title\nFROM POSTS\nWHERE PostTypeId IN(1)\n       AND CreationDate > '2018-01-01'  \n       AND Body LIKE('%div class=\"snippet\"%')\n       AND tags LIKE('%python%')\nORDER BY CreationDate DESC"},{"QuerySetId":250376,"Title":"Off-topic questions, past 90 days","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", h.CreationDate AS \"Closed on\" FROM PostHistory AS h WHERE PostHistoryTypeId = 10 AND Comment = '102' \/* off-topic *\/ AND CreationDate > CURRENT_TIMESTAMP() - 90","CreationDate":"2014-11-24 22:56:29","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], h.CreationDate \"Closed on\"\nfrom PostHistory h\nwhere PostHistoryTypeId=10\nand Comment='102' -- off-topic\nand CreationDate > getdate()-90"},{"QuerySetId":250788,"Title":"people with highest answer count","Description":null,"QueryBody":"SELECT Users.DisplayName, COUNT(Posts.Id) AS \"cnt\" FROM Users, Posts WHERE OwnerUserId = Users.Id AND PostTypeId = 2 GROUP BY Users.DisplayName ORDER BY cnt DESC LIMIT 25","CreationDate":"2014-11-25 21:19:55","validated":false,"QueryBody_Original":"SELECT  TOP 25\n Users.DisplayName, \n count(Posts.Id) as 'cnt'\nFROM\nUsers,\nPosts \nWHERE OwnerUserId = Users.Id  AND PostTypeId = 2\nGROUP BY Users.DisplayName\nORDER BY cnt DESC"},{"QuerySetId":252051,"Title":"No scored\/accepted answer in given time period","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.CreationDate FROM Posts AS q WHERE q.PostTypeId = 1 AND q.AcceptedAnswerId IS NULL AND q.CreationDate > '##StartDate##' AND q.CreationDate < '##EndDate##' AND q.ClosedDate IS NULL AND COALESCE((SELECT MAX(a.Score) FROM Posts AS a WHERE a.ParentId = q.Id AND a.PostTypeId = 2), 0) <= 0 ORDER BY q.CreationDate","CreationDate":"2015-10-03 18:38:40","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.CreationDate from Posts q\nwhere q.PostTypeId=1 and q.AcceptedAnswerId is null\n  and q.CreationDate>'##StartDate##'\n  and q.CreationDate<'##EndDate##'\n  and q.ClosedDate is null\n  and isnull((\n      SELECT max(a.Score) from Posts a\n      where a.ParentId = q.Id and a.PostTypeId=2\n    ),0) <= 0\norder by q.CreationDate;"},{"QuerySetId":253505,"Title":"Good Question Without Good Answer: High Question \/ Top Answer Score Ratio","Description":"Divide the question score by the score of the top answer and sort in decreasing order.\r\n\r\nShows questions for which no good solution exist: most of those are either good feature requests or mathematical impossibilities.","QueryBody":"SELECT q.Id AS \"Post Link\", q.Score AS \"Question Score\", MAX(a.Score) AS \"Top Answer Score\", CAST(q.Score AS FLOAT) \/ CAST(CASE WHEN MAX(a.Score) = 0 THEN 1 ELSE MAX(a.Score) END AS FLOAT) AS Ratio FROM Posts AS q INNER JOIN Posts AS a ON q.PostTypeId = 1 AND a.ParentId = q.Id GROUP BY q.Id, q.Score ORDER BY Ratio DESC LIMIT 100","CreationDate":"2014-12-04 15:40:01","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  q.Id AS [Post Link],\n  q.Score AS 'Question Score',\n  MAX(a.Score) AS 'Top Answer Score',\n  CAST(q.Score AS float) \/\n    Cast(IIF(MAX(a.Score) = 0, 1, MAX(a.Score)) AS float) AS Ratio\nFROM\n  Posts q\nINNER JOIN\n  Posts a\nON\n  q.PostTypeId = 1 AND\n  a.ParentId = q.Id\nGROUP BY\n  q.Id,\n  q.Score\nORDER BY\n  Ratio DESC"},{"QuerySetId":253812,"Title":"Users sorted by number of answers with images","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS \"Answers with Images\" FROM Posts INNER JOIN Users ON Users.ID = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND Body LIKE '%<img%' GROUP BY Users.Id, DisplayName ORDER BY \"Answers with Images\" DESC LIMIT 50","CreationDate":"2014-12-04 00:39:32","validated":false,"QueryBody_Original":"SELECT \n    TOP 50\n    Users.Id AS [User Link],\n    Count(Posts.Id) AS [Answers with Images]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.ID = OwnerUserId\nWHERE\n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null and Body LIKE '%<img%'\nGROUP BY\n    Users.Id, DisplayName\nORDER BY\n    [Answers with Images] DESC"},{"QuerySetId":253855,"Title":"Post answer details for mchallnege","Description":null,"QueryBody":"SELECT Q.Id, Q.AcceptedAnswerId, U.Reputation AS AnswererReputation, DATEDIFF(A.CreationDate, Q.CreationDate) AS QATimeGap FROM Posts AS Q, Posts AS A, Users AS U WHERE Q.AcceptedAnswerId = A.Id AND A.OwnerUserId = U.Id AND Q.Tags LIKE '%<android>%' AND Q.CreationDate > '2014-08-01'","CreationDate":"2014-12-06 01:53:44","validated":false,"QueryBody_Original":"SELECT    Q.Id, Q.AcceptedAnswerId, U.Reputation as AnswererReputation, \ndatediff(MINUTE, Q.CreationDate, A.CreationDate) as QATimeGap \nfrom Posts as Q, Posts as A, Users as U\nwhere \nQ.AcceptedAnswerId=A.Id and\nA.OwnerUserId=U.Id and\nQ.Tags like '%<android>%' and\nQ.CreationDate>'2014-08-01'"},{"QuerySetId":253873,"Title":"Undefined Tags with over 50 Posts","Description":null,"QueryBody":"SELECT ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, Count FROM Tags AS T WHERE T.WikiPostId IS NULL AND T.ExcerptPostId IS NULL AND COUNT > 50 AND COUNT < 400 ORDER BY T.TagName","CreationDate":"2014-12-04 07:32:33","validated":false,"QueryBody_Original":"SELECT  ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, Count\nFROM   Tags T\nWHERE  \nT.WikiPostId IS NULL\nAND\nT.ExcerptPostId IS NULL\nAND\nCOUNT > 50\nAND\nCOUNT < 400\nOrder by T.TagName"},{"QuerySetId":253987,"Title":"Loved but Closed: Highest Scoring Closed Questions","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score FROM Posts AS p WHERE NOT p.ClosedDate IS NULL ORDER BY p.Score DESC LIMIT 100","CreationDate":"2014-12-04 15:39:12","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  p.Id AS [Post Link],\n  p.Score\nFROM\n  Posts p\nWHERE\n  p.ClosedDate IS NOT NULL\nORDER BY\n  p.Score DESC"},{"QuerySetId":254021,"Title":" Dear Duplicates: Highest Scoring Closed as Duplicate Questions","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score FROM Posts AS p INNER JOIN PostLinks AS l ON p.Id = l.PostId AND l.LinkTypeId = 3 ORDER BY p.Score DESC","CreationDate":"2015-08-12 23:56:02","validated":false,"QueryBody_Original":"SELECT \n  p.Id as [Post Link],\n  p.Score\nFROM\n  Posts p\nINNER JOIN\n  PostLinks l\nON\n  p.Id = l.PostId AND\n  l.LinkTypeId = 3 \nORDER BY\n  p.Score DESC"},{"QuerySetId":254033,"Title":"Rampant Duplicates: Questions with the Most Duplicates","Description":"http:\/\/meta.stackexchange.com\/a\/244636\/200117","QueryBody":"SELECT l.RelatedPostId AS \"Post Link\", COUNT(l.PostId) AS \"Duplicate Count\" FROM PostLinks AS l WHERE l.LinkTypeId = 3 GROUP BY l.RelatedPostId ORDER BY 'Duplicate Count' DESC LIMIT 100","CreationDate":"2014-12-04 15:59:26","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  l.RelatedPostId AS [Post Link],\n  COUNT(l.PostId) AS 'Duplicate Count'\nFROM\n  PostLinks l\nWHERE\n  l.LinkTypeId = 3\nGROUP BY\n  l.RelatedPostId\nORDER BY\n  'Duplicate Count' DESC"},{"QuerySetId":254056,"Title":"Whistleblowers: Users Who Were the First to Close Vote Questions that are Currently Closed [WIP]","Description":"For a list of questions each user closed see: http:\/\/data.stackexchange.com\/stackoverflow\/query\/254073\/closed-questions-user-was-the-first-to-close-vote","QueryBody":"SELECT u.Id AS \"User Link\", COUNT(h.Text) AS \"Close Count\" FROM PostHistory AS h INNER JOIN Users AS u ON u.Id < 100 AND h.PostHistoryTypeId = 10 AND h.Text LIKE CONCAT('%Voters\":_{\"Id\":', u.Id, '%') INNER JOIN Posts AS p ON p.Id = h.PostId AND NOT p.ClosedDate IS NULL GROUP BY u.Id ORDER BY 'Close Count' DESC LIMIT 10","CreationDate":"2014-12-04 20:18:20","validated":false,"QueryBody_Original":"SELECT  TOP 10\n  u.Id as [User Link],\n  COUNT(h.Text) as 'Close Count'\nFROM\n  PostHistory h\nINNER JOIN\n  Users u\nON\n  \/* TODO remove those limitations. Anything larger and time blows. *\/\n  \/* u.Id = 895245 AND *\/\n  u.Id < 100 AND \n  h.PostHistoryTypeId = 10 AND\n  h.Text LIKE CONCAT('%Voters\":_{\"Id\":', u.Id, '%')\nINNER JOIN\n  Posts p\nON\n  p.Id = h.PostId AND\n  p.ClosedDate IS NOT NULL\nGROUP BY\n  u.Id\nORDER BY\n  'Close Count' DESC"},{"QuerySetId":254073,"Title":"Closed Questions User Voted in","Description":null,"QueryBody":"SELECT h.PostId AS \"Post Link\", h.Text FROM PostHistory AS h INNER JOIN Posts AS p ON p.Id = h.PostId AND NOT p.ClosedDate IS NULL AND h.PostHistoryTypeId = 10 AND h.Text LIKE CONCAT('%\"Id\":', '##UserId##', '%') ORDER BY h.CreationDate LIMIT 100","CreationDate":"2015-05-26 17:43:05","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  h.PostId as [Post Link],\n  h.Text\nFROM\n  PostHistory h\nINNER JOIN\n  Posts p\nON\n  p.Id = h.PostId AND\n  p.ClosedDate IS NOT NULL AND\n  h.PostHistoryTypeId = 10 AND\n  h.Text LIKE CONCAT('%\"Id\":', '##UserId##', '%')\nORDER BY\n  h.CreationDate ASC"},{"QuerySetId":254103,"Title":"Graph: No accepted\/upvoted answers by date","Description":null,"QueryBody":"SELECT CAST(q.CreationDate AS DATE), COUNT(CAST(q.CreationDate AS DATE)) FROM Posts AS q WHERE q.PostTypeId = 1 AND q.AcceptedAnswerId IS NULL AND q.ClosedDate IS NULL AND COALESCE((SELECT MAX(a.Score) FROM Posts AS a WHERE a.ParentId = q.Id AND a.PostTypeId = 2), 0) <= 0 GROUP BY CAST(q.CreationDate AS DATE) ORDER BY CAST(q.CreationDate AS DATE)","CreationDate":"2014-12-04 18:33:28","validated":false,"QueryBody_Original":"SELECT \n cast(q.CreationDate as date),\n count(cast(q.CreationDate as date))\nfrom Posts q\nwhere q.PostTypeId=1 and q.AcceptedAnswerId is null\n  and q.ClosedDate is null\n  and isnull((\n      SELECT max(a.Score) from Posts a\n      where a.ParentId = q.Id and a.PostTypeId=2\n    ),0) <= 0\ngroup by cast(q.CreationDate as date)\norder by cast(q.CreationDate as date);"},{"QuerySetId":255397,"Title":"Answers beginning with a keyword","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE PostTypeId = 2 AND Body LIKE '<p>##keyword##%' ORDER BY LENGTH(Body)","CreationDate":"2014-12-13 05:36:53","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body from Posts\nwhere PostTypeId=2 and Body like '<p>##keyword##%'\norder by len(Body) asc"},{"QuerySetId":256065,"Title":"Posts with links to my old blog","Description":null,"QueryBody":"SELECT 'http:\/\/stackoverflow.com\/q\/' + CAST(Id AS TEXT) AS URL FROM Posts WHERE OwnerUserId = 98713 AND (Body LIKE '%\/tomlev2.wordpress.com\/%' OR Body LIKE '%\/tomlev.wordpress.com\/%') ORDER BY ViewCount DESC","CreationDate":"2014-12-09 18:09:43","validated":false,"QueryBody_Original":"SELECT  'http:\/\/stackoverflow.com\/q\/' + cast(Id AS nvarchar) as URL from Posts\nwhere OwnerUserId = 98713 and\n(Body like '%\/tomlev2.wordpress.com\/%' or Body like '%\/tomlev.wordpress.com\/%')\norder by ViewCount desc"},{"QuerySetId":256114,"Title":"Users with 1K and three badges","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE Reputation >= 1000 AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Civic Duty') AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Deputy') AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Convention') ORDER BY LastAccessDate DESC","CreationDate":"2014-12-09 21:43:14","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], Reputation, LastAccessDate\n from Users\n where Reputation >= 1000\n   and exists (SELECT Id from Badges b where b.UserId = Users.Id and b.Name = 'Civic Duty')\n   and exists (SELECT Id from Badges b where b.UserId = Users.Id and b.Name = 'Deputy')\n   and exists (SELECT Id from Badges b where b.UserId = Users.Id and b.Name = 'Convention')\norder by LastAccessDate desc"},{"QuerySetId":256359,"Title":"Top 100 users from Thailand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC) AS Rank, Id, DisplayName, Reputation, WebsiteUrl, Location AS TagName FROM Users WHERE Location LIKE N'%Bangkok%' LIMIT 1000","CreationDate":"2019-07-25 10:00:49","validated":false,"QueryBody_Original":"SELECT \n   TOP 1000 ROW_NUMBER() OVER (Order by reputation DESC) as Rank,\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\n   TagName\nFROM\n   Users\nWHERE\n   Location like N'%Bangkok%'\n--ORDER BY\n--   reputation DESC"},{"QuerySetId":256386,"Title":"How many JavaScript questions are answered by jsfiddle or jsbin","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts AS q JOIN posts AS a ON q.acceptedanswerid = a.id WHERE q.tags LIKE '%javascript%' AND (a.body LIKE '%http:\/\/jsbin.com\/%' OR a.body LIKE '%http:\/\/jsfiddle.net\/%')","CreationDate":"2014-12-10 11:08:22","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM posts AS q\nJOIN posts AS a ON q.acceptedanswerid = a.id\nWHERE\n  q.tags like '%javascript%'\n  AND (a.body like '%http:\/\/jsbin.com\/%' OR a.body like '%http:\/\/jsfiddle.net\/%')"},{"QuerySetId":256533,"Title":"Top 10 Answers by score in particular tag ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY posts.score DESC) AS \"#\", posts.score, posts.Tags, posts.id AS \"Post Link\" FROM Posts AS posts WHERE posts.Tags LIKE '%<##TagName##>%' AND posts.PostTypeId = 2 ORDER BY posts.Score DESC LIMIT 10","CreationDate":"2014-12-10 18:04:47","validated":false,"QueryBody_Original":"SELECT   TOP 10 ROW_NUMBER() OVER(ORDER BY posts.score DESC) AS [#],\n        posts.score,\n        \n        posts.Tags,\n        posts.id as [Post Link]\n        \n        from Posts as posts\n\nwhere posts.Tags LIKE '%<##TagName##>%'\nand \nposts.PostTypeId=2\nORDER BY posts.Score DESC"},{"QuerySetId":256754,"Title":"Get knowledge about How the user data is stored to be exploit in Quality of answers?","Description":null,"QueryBody":"SELECT * FROM USERS WHERE Age = 20","CreationDate":"2014-12-11 03:33:21","validated":false,"QueryBody_Original":"SELECT  * FROM USERS WHERE Age=20"},{"QuerySetId":256778,"Title":"Post count by Tag and by Month","Description":null,"QueryBody":"SELECT COUNT(*) AS CommentCount FROM Comments AS C WHERE C.PostId IN (SELECT P.Id FROM Posts AS P WHERE P.PostTypeId = 1 AND P.CreationDate BETWEEN '2014-01-01 00:00:00' AND '2014-12-31 23:59:59' UNION ALL SELECT P2.Id FROM (SELECT P.Id FROM Posts AS P WHERE P.PostTypeId = 1 AND P.CreationDate BETWEEN '2014-01-01 00:00:00' AND '2014-12-31 23:59:59') AS P1 INNER JOIN Posts AS P2 ON P2.ParentId = P1.id)","CreationDate":"2015-03-22 15:30:32","validated":false,"QueryBody_Original":"SELECT  COUNT(*) CommentCount\nFROM Comments C\nWHERE C.PostId IN\n(\nSELECT P.Id\nFROM Posts P\nWHERE\n  P.PostTypeId=1 AND\n  P.CreationDate BETWEEN '2014-01-01 00:00:00' AND '2014-12-31 23:59:59'\n\nUNION ALL\n\nSELECT P2.Id\nFROM\n  (\n    SELECT P.Id\n    FROM Posts P\n    WHERE\n      P.PostTypeId=1 AND\n      P.CreationDate BETWEEN '2014-01-01 00:00:00' AND '2014-12-31 23:59:59'\n  ) P1 INNER JOIN\n  Posts P2 ON P2.ParentId=P1.id\n)"},{"QuerySetId":257211,"Title":"How many \"bad\" questions have >10k rep users asked?","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, (SELECT COUNT(*) FROM Posts WHERE Posts.OwnerUserId = Users.id AND Posts.PostTypeId = 1) AS num_questions, (SELECT COUNT(*) FROM Posts WHERE Posts.OwnerUserId = Users.id AND Posts.PostTypeId = 2) AS num_answers, (SELECT COUNT(*) FROM Posts WHERE Posts.OwnerUserId = Users.id AND Posts.PostTypeId = 1 AND Posts.Score < 0) AS num_bad_questions FROM Users WHERE Users.Reputation > 10000 ORDER BY num_bad_questions DESC","CreationDate":"2014-12-12 05:55:56","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, Reputation,\n(\n  SELECT count(*) from Posts\n  where Posts.OwnerUserId = Users.id and Posts.PostTypeId = 1\n) as num_questions,\n(\n  SELECT count(*) from Posts\n  where Posts.OwnerUserId = Users.id and Posts.PostTypeId = 2\n) as num_answers,\n(\n  SELECT count(*) from Posts\n  where Posts.OwnerUserId = Users.id and Posts.PostTypeId = 1 and Posts.Score < 0\n) as num_bad_questions\nfrom Users\nwhere Users.Reputation > 10000\norder by num_bad_questions desc"},{"QuerySetId":257366,"Title":"Find tags with empty excerpts or details","Description":null,"QueryBody":"SELECT Name, Wiki, Excerpt FROM (SELECT Tags.TagName AS Name, w.Body AS Wiki, e.Body AS Excerpt FROM Tags LEFT JOIN Posts AS w ON Tags.WikiPostId = w.id LEFT JOIN Posts AS e ON Tags.ExcerptPostId = e.id) AS twe WHERE LTRIM(RTRIM(twe.Wiki)) = '' OR twe.Wiki IS NULL OR LTRIM(RTRIM(twe.Excerpt)) = '' OR twe.Excerpt IS NULL ORDER BY twe.Excerpt","CreationDate":"2016-10-17 07:51:42","validated":false,"QueryBody_Original":"SELECT  Name, Wiki, Excerpt FROM \n  (\n    SELECT \n      Tags.TagName AS Name, \n      w.Body AS Wiki, \n      e.Body AS Excerpt \n    FROM Tags \n      LEFT JOIN Posts w ON Tags.WikiPostId = w.id \n      LEFT JOIN Posts e ON Tags.ExcerptPostId = e.id\n  ) AS twe \n  WHERE \n    LTRIM(RTRIM(twe.Wiki)) = '' OR twe.Wiki IS NULL\n    OR\n    LTRIM(RTRIM(twe.Excerpt)) = '' OR twe.Excerpt IS NULL \n  ORDER BY twe.Excerpt"},{"QuerySetId":257577,"Title":"Tag Badge Count By User","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, COUNT(Badges.Id) AS Number_of_Badges FROM Badges INNER JOIN Users ON Users.Id = Badges.UserId WHERE Badges.Name = 'Necromancer' GROUP BY Users.DisplayName, Users.Id ORDER BY Number_of_Badges DESC","CreationDate":"2017-04-03 16:24:23","validated":false,"QueryBody_Original":"SELECT \n    Users.Id as [User Link]\n    , Users.DisplayName\n    , COUNT (Badges.Id) AS Number_of_Badges\n  FROM \n    Badges\n    INNER JOIN Users ON Users.Id = Badges.UserId\n  WHERE Badges.Name = 'Necromancer'\n  GROUP BY Users.DisplayName, Users.Id\n  ORDER BY Number_of_Badges DESC"},{"QuerySetId":258174,"Title":"Question answered after >30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts AS questions LEFT JOIN posts AS answers ON questions.acceptedanswerid = answers.id WHERE questions.posttypeid = 1 AND DATEDIFF(answers.creationdate, questions.creationdate) > 30","CreationDate":"2014-12-15 14:57:22","validated":false,"QueryBody_Original":"SELECT  count (*)\n\nfrom posts as questions left join posts as answers on questions.acceptedanswerid = answers.id where questions.posttypeid=1\n\nand datediff(day, questions.creationdate, answers.creationdate) > 30"},{"QuerySetId":258349,"Title":"Number of Questions per Day","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE) AS Da, COUNT(*) FROM Posts WHERE PostTypeID = 1 GROUP BY CAST(CreationDate AS DATE) ORDER BY Da DESC","CreationDate":"2015-01-27 13:56:30","validated":false,"QueryBody_Original":"SELECT  CONVERT(date, CreationDate) AS Da, Count(*)\nFROM Posts\nWHERE PostTypeID = 1\nGROUP BY CONVERT(date, CreationDate)\nORDER BY Da DESC;"},{"QuerySetId":258393,"Title":"List of all distinct tags","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%redis%'","CreationDate":"2014-12-17 10:08:41","validated":false,"QueryBody_Original":"SELECT  * from Posts where Tags like '%redis%'"},{"QuerySetId":258764,"Title":"High-Rep Users by Reputation Per Day","Description":"High rep users based on the amount of reputation they have earned per day\r\n","QueryBody":"SELECT COUNT(*) FROM Users WHERE (Reputation >= 15000) AND (Reputation <= 75000)","CreationDate":"2014-12-24 11:26:36","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Users\nWHERE (Reputation>=15000) AND (Reputation<=75000)"},{"QuerySetId":258800,"Title":"Stack Exchange posts linked to from SO","Description":null,"QueryBody":"SELECT Title FROM Posts WHERE Body LIKE N'%meta.stackexchange.com%' AND CreationDate > CURRENT_TIMESTAMP() - 90","CreationDate":"2018-02-07 02:33:45","validated":false,"QueryBody_Original":"SELECT  Title\nfrom Posts\nwhere Body like N'%meta.stackexchange.com%'\n      and CreationDate > getdate() - 90;\n      \nSELECT PostId\nfrom Comments\nwhere Text like N'%meta.stackoverflow.com%'\n      and CreationDate > getdate() - 90"},{"QuerySetId":258804,"Title":"Server Fault posts linked to from SO","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts\/*      or Body like N'%.superuser.com%' *\/  WHERE Body LIKE N'%.serverfault.com%' AND CreationDate > CURRENT_TIMESTAMP() - 30","CreationDate":"2014-12-17 00:19:58","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Posts\nwhere Body like N'%.serverfault.com%'\n--      or Body like N'%.superuser.com%'\n      and CreationDate > getdate() - 30"},{"QuerySetId":258805,"Title":"Super User posts linked to from SO","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Body LIKE N'%.superuser.com%' AND CreationDate > CURRENT_TIMESTAMP() - 30","CreationDate":"2014-12-17 00:19:59","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Posts\nwhere Body like N'%.superuser.com%'\n      and CreationDate > getdate() - 30"},{"QuerySetId":258833,"Title":"Jquery + angular js posts","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Tags LIKE '%<angularjs>%' AND AcceptedAnswerId > 0","CreationDate":"2014-12-17 02:45:38","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts where \nTags like '%<angularjs>%' and \nAcceptedAnswerId>0"},{"QuerySetId":258866,"Title":"Unanswered questions by low-reputation users","Description":null,"QueryBody":"SELECT p.CreationDate, p.Id AS \"Post Link\", p.Tags FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE u.Reputation < 15 AND p.PostTypeId = 1 AND COALESCE(p.AnswerCount, 0) = 0 AND p.ClosedDate IS NULL ORDER BY p.CreationDate DESC","CreationDate":"2014-12-17 07:58:07","validated":false,"QueryBody_Original":"SELECT  p.CreationDate, p.Id as [Post Link], p.Tags from Posts p\ninner join Users u on p.OwnerUserId = u.Id\nwhere u.Reputation<15 and \n      p.PostTypeId=1 and \n      isnull(p.AnswerCount,0)=0 and \n      p.ClosedDate is null\norder by p.CreationDate desc"},{"QuerySetId":258886,"Title":"5 in 30 minutes or less","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.CreationDate, q.OwnerUserId AS \"User Link\", COUNT(a.Id) AS \"AnswersIn30\" FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId AND a.PostTypeId = 2 AND DATEDIFF(a.CreationDate, q.CreationDate) <= 60 WHERE q.PostTypeId = 1 AND q.ClosedDate IS NULL AND q.CreationDate > '1 Jan 2014' GROUP BY q.Id, q.CreationDate, q.OwnerUserId HAVING COUNT(a.Id) >= 5 ORDER BY q.CreationDate","CreationDate":"2015-03-30 19:19:04","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.CreationDate, q.OwnerUserId as [User Link], count(a.Id) as [AnswersIn30]\nfrom Posts q inner join Posts a\n     on q.Id = a.ParentId\n    and a.PostTypeId = 2\n    and DateDiff(minute, q.CreationDate, a.CreationDate) <= 60\nwhere q.PostTypeId = 1\n  and q.ClosedDate is null\n  and q.CreationDate > '1 Jan 2014'\ngroup by q.Id, q.CreationDate, q.OwnerUserId\nhaving count(a.Id) >= 5\norder by q.CreationDate"},{"QuerySetId":259096,"Title":"Pergunta com \"obrigado\" no corpo da postagem","Description":null,"QueryBody":"SELECT CreationDate, Id AS \"Post Link\", AnswerCount, CommentCount, FavoriteCount FROM Posts WHERE (PostTypeId = 1) AND (Body LIKE '%obrigado%') ORDER BY CreationDate DESC","CreationDate":"2014-12-18 06:22:47","validated":false,"QueryBody_Original":"SELECT \n  CreationDate,\n  Id AS [Post Link],\n  AnswerCount,\n  CommentCount,\n  FavoriteCount\nFROM\n  Posts\nWHERE\n  (PostTypeId = 1) AND (Body like '%obrigado%')\nORDER BY\n  CreationDate DESC"},{"QuerySetId":259481,"Title":"My answers on Stack Exchange","Description":null,"QueryBody":"SELECT * FROM posts WHERE owneruserid = 3422261","CreationDate":"2014-12-19 16:34:47","validated":false,"QueryBody_Original":"SELECT  * from posts where owneruserid=3422261;"},{"QuerySetId":259740,"Title":"late answers that were accepted and most likely have highest score","Description":null,"QueryBody":"SELECT COUNT(DISTINCT (q.Id)) FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id INNER JOIN Posts AS aa ON aa.ParentId = q.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 AND aa.PostTypeId = 2 AND q.AcceptedAnswerId = a.Id AND q.AnswerCount >= 2 AND DATEDIFF(a.CreationDate, q.CreationDate) <= 7 AND DATEDIFF(aa.CreationDate, q.CreationDate) >= 30 AND a.Score < aa.Score","CreationDate":"2014-12-20 20:23:34","validated":false,"QueryBody_Original":"SELECT  COUNT(DISTINCT(q.Id))\nFROM Posts AS q\nINNER JOIN Posts AS a\nON a.ParentId = q.Id\nINNER JOIN Posts AS aa\nON aa.ParentId = q.Id\nWHERE\n    q.PostTypeId = 1\nand a.PostTypeId = 2\nand aa.PostTypeId = 2\nand q.AcceptedAnswerId = a.Id\nand q.AnswerCount >= 2\nand DATEDIFF(DAY, q.CreationDate, a.CreationDate) <= 7\nand DATEDIFF(DAY, q.CreationDate, aa.CreationDate) >= 30\nand a.Score < aa.Score"},{"QuerySetId":259743,"Title":"late answers that are not accepted but most likely have highest score","Description":null,"QueryBody":"SELECT COUNT(DISTINCT (q.Id)) FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id INNER JOIN Posts AS aa ON aa.ParentId = q.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 AND aa.PostTypeId = 2 AND q.AnswerCount >= 2 AND DATEDIFF(a.CreationDate, q.CreationDate) <= 7 AND DATEDIFF(aa.CreationDate, q.CreationDate) >= 30 AND a.Score < aa.Score","CreationDate":"2014-12-20 20:41:00","validated":false,"QueryBody_Original":"SELECT  COUNT(DISTINCT(q.Id))\nFROM Posts AS q\nINNER JOIN Posts AS a\nON a.ParentId = q.Id\nINNER JOIN Posts AS aa\nON aa.ParentId = q.Id\nWHERE\n    q.PostTypeId = 1\nand a.PostTypeId = 2\nand aa.PostTypeId = 2\nand q.AnswerCount >= 2\nand DATEDIFF(DAY, q.CreationDate, a.CreationDate) <= 7\nand DATEDIFF(DAY, q.CreationDate, aa.CreationDate) >= 30\nand a.Score < aa.Score"},{"QuerySetId":259869,"Title":"The Reputation of Voters in This Election","Description":null,"QueryBody":"SELECT u.Reputation FROM Badges AS b LEFT JOIN Users AS u ON u.Id = b.UserId WHERE b.Name = 'Constituent' AND DATEDIFF(b.Date, '2018-08-06') > 0","CreationDate":"2018-08-12 15:57:54","validated":false,"QueryBody_Original":"SELECT  u.Reputation\nFrom Badges b\nleft join Users u\non u.Id = b.UserId\nWhere b.Name = 'Constituent'\nAND Datediff(minute,'2018-08-06',b.Date)>0"},{"QuerySetId":259908,"Title":"Reputation of Active, Eligible Voters","Description":null,"QueryBody":"SELECT u.Reputation FROM Users AS u WHERE u.Reputation >= 150 AND DATEDIFF(u.LastAccessDate, '2014-12-14') > 0","CreationDate":"2014-12-21 23:55:20","validated":false,"QueryBody_Original":"SELECT  u.Reputation\nFrom Users u\nWhere u.Reputation >= 150\nAND Datediff(minute,'2014-12-14',u.LastAccessDate)>0"},{"QuerySetId":259957,"Title":"Users with multiple badges, sorted by count","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(b.Id) AS \"Number of Badges\" FROM Users AS u, Badges AS b WHERE b.UserId = u.Id AND b.Name = '##Badge##' GROUP BY u.Id ORDER BY COUNT(b.Id) DESC","CreationDate":"2014-12-22 06:48:33","validated":false,"QueryBody_Original":"SELECT  u.Id as [User Link], count(b.Id) as [Number of Badges] from Users u, Badges b\nwhere b.UserId=u.Id and b.Name='##Badge##'\ngroup by u.Id \norder by count(b.Id) desc"},{"QuerySetId":259964,"Title":"Questions where accepted answer score lower than any other answer score","Description":null,"QueryBody":"SELECT COUNT(Q.Id) FROM Posts AS Q, Posts AS A, Posts AS OA WHERE Q.AnswerCount > 1 AND A.ParentId = Q.Id AND OA.ParentId = Q.Id AND A.Id = Q.AcceptedAnswerId AND OA.Id <> Q.AcceptedAnswerId AND A.Score < OA.Score","CreationDate":"2015-01-14 18:25:25","validated":false,"QueryBody_Original":"SELECT  count(Q.Id)\n     FROM Posts Q, Posts A, Posts OA\n    WHERE Q.AnswerCount > 1\n      AND A.ParentId = Q.Id\n      AND OA.ParentId = Q.Id\n      AND A.Id = Q.AcceptedAnswerId\n      AND OA.Id <> Q.AcceptedAnswerId\n      AND A.Score < OA.Score"},{"QuerySetId":260267,"Title":"Top User of BD ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM USERS WHERE LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%bd' ORDER BY Reputation DESC","CreationDate":"2014-12-23 17:35:23","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS [#],Id AS [User Link],Reputation\nFROM USERS\nwhere LOWER(Location) LIKE '%bangladesh%'\n      OR LOWER(Location) LIKE '%bd'\nORDER BY Reputation DESC"},{"QuerySetId":260380,"Title":"Find Stack Overflow User Ids In Philadelphia and Surrounding Areas","Description":null,"QueryBody":"SELECT Id FROM Users WHERE Location LIKE '%Philadelphia%' OR Location LIKE '%Plymouth Meeting, PA%' OR Location LIKE '%Phoenixville, PA%' OR Location LIKE '%West Chester, PA%' OR Location LIKE '%Newton Square, PA%' OR Location LIKE '%Sounderton, PA%' OR Location LIKE '%Doylestown, PA%' OR Location LIKE '%Warminister, PA%' OR Location LIKE '%Levittown, PA%' OR Location LIKE '%Cherry Hill, NJ%' OR Location LIKE '%Wilmington, DE%' OR Location LIKE '%King of Prussia, PA%' ORDER BY Location DESC","CreationDate":"2014-12-23 23:16:17","validated":false,"QueryBody_Original":"SELECT  Id\nfrom Users\nwhere Location like '%Philadelphia%' OR Location like '%Plymouth Meeting, PA%' OR Location like '%Phoenixville, PA%' OR Location like '%West Chester, PA%' OR Location like '%Newton Square, PA%' OR Location like '%Sounderton, PA%' OR Location like '%Doylestown, PA%' OR Location like '%Warminister, PA%' OR Location like '%Levittown, PA%' OR Location like '%Cherry Hill, NJ%' OR Location like '%Wilmington, DE%' OR Location like '%King of Prussia, PA%'\norder by Location desc"},{"QuerySetId":260426,"Title":"Hour, Length -> Score, Answers","Description":null,"QueryBody":"SELECT p.Id AS Id, TIME_TO_STR(p.CreationDate, '%-HOUR') AS Hour, LENGTH(p.Title) AS LengthOfTitle, LENGTH(p.Body) AS LengthOfBody, p.Score AS Score, p.ViewCount AS Views, p.AnswerCount AS Answers FROM Posts AS p WHERE LENGTH(p.Title) > 0 AND p.CreationDate > CAST('2014-10-01 00:00:00.000' AS DATETIME) AND p.CreationDate < CAST('2014-10-08 00:00:00.000' AS DATETIME)","CreationDate":"2014-12-24 03:02:57","validated":false,"QueryBody_Original":"SELECT  \np.Id as Id,\nDATEPART(HOUR, p.CreationDate) as Hour,\nLEN(p.Title) as LengthOfTitle,\nLEN(p.Body) as LengthOfBody,\np.Score as Score,\np.ViewCount as Views,\np.AnswerCount as Answers\nFROM Posts p\nWHERE\nLEN(p.Title) > 0 AND\np.CreationDate > CAST('2014-10-01 00:00:00.000' as datetime) AND\np.CreationDate < CAST('2014-10-08 00:00:00.000' as datetime)"},{"QuerySetId":260446,"Title":"Number of users by reputation range (15K-75K)","Description":"High rep users based on the amount of reputation they have earned per day\r\n","QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, Location FROM Users WHERE (Reputation >= 15000) AND (Reputation <= 75000) ORDER BY Reputation DESC","CreationDate":"2014-12-24 11:31:06","validated":false,"QueryBody_Original":"SELECT  Id as [User Link],\n       DisplayName, \n       Reputation,\n       Location\nFROM Users\nWHERE (Reputation>=15000) AND (Reputation<=75000)\nORDER BY Reputation DESC"},{"QuerySetId":260449,"Title":"Users by reputation range (15K-75K)","Description":"Users by reputation range (15K-75K)","QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, Location FROM Users WHERE (Reputation >= 15000) AND (Reputation <= 75000) ORDER BY Reputation DESC","CreationDate":"2014-12-25 14:16:24","validated":false,"QueryBody_Original":"SELECT  Id as [User Link],\n       DisplayName, \n       Reputation,\n       Location\nFROM Users\nWHERE (Reputation>=15000) AND (Reputation<=75000)\nORDER BY Reputation DESC"},{"QuerySetId":260620,"Title":"Gold badges (sans tag badges)","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) FROM Badges WHERE Name IN ('Socratic', 'Stellar Question', 'Great Question', 'Famous Question', 'Illuminator', 'Great Answer', 'Populist', 'Reversal', 'Unsung Hero', 'Fanatic', 'Legendary', 'Marshal', 'Constable', 'Sheriff', 'Steward', 'Copy Editor', 'Electorate', 'Publicist') GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 20","CreationDate":"2015-03-04 01:43:11","validated":false,"QueryBody_Original":"SELECT  TOP 20 UserId AS [User Link], COUNT(*) \nFROM Badges\nWHERE Name IN ('Socratic', 'Stellar Question', 'Great Question', 'Famous Question', 'Illuminator', 'Great Answer', 'Populist', 'Reversal', 'Unsung Hero', 'Fanatic', 'Legendary', 'Marshal', 'Constable', 'Sheriff', 'Steward', 'Copy Editor', 'Electorate', 'Publicist')\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":261027,"Title":"average reputation excluding 1 reputation users","Description":null,"QueryBody":"SELECT AVG(reputation) AS average_rep, MIN(reputation) AS min_rep, MAX(reputation) AS max_rep, COUNT(*) AS num_users FROM users WHERE reputation > 1","CreationDate":"2014-12-26 13:05:58","validated":false,"QueryBody_Original":"SELECT  \n  avg(reputation) average_rep\n, min(reputation) min_rep\n, max(reputation) max_rep\n, count(*) num_users\nfrom users\nwhere reputation > 1"},{"QuerySetId":261028,"Title":"Average reputation of users excluding 1 reps","Description":null,"QueryBody":"SELECT AVG(reputation) AS average_rep, MIN(reputation) AS min_rep, MAX(reputation) AS max_rep, COUNT(*) AS num_users FROM users WHERE reputation > 1","CreationDate":"2014-12-26 13:09:23","validated":false,"QueryBody_Original":"SELECT  \n  avg(reputation) average_rep\n, min(reputation) min_rep\n, max(reputation) max_rep\n, count(*) num_users\nfrom users\nwhere reputation > 1"},{"QuerySetId":261060,"Title":"select CreationDate from Posts where Tags LIKE '%scala%'","Description":null,"QueryBody":"SELECT CreationDate FROM Posts WHERE Tags LIKE '%scala%'","CreationDate":"2014-12-26 14:07:13","validated":false,"QueryBody_Original":"SELECT  CreationDate from Posts where Tags LIKE '%scala%'"},{"QuerySetId":261318,"Title":"Gold Badge Efficiency (Gold Badges \/ Reputation) - users over 1 rep only","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS \"Gold Badges\", (SELECT usr.Reputation FROM \"Users\" AS usr WHERE usr.Id = UserId) AS Reputation, (COUNT(*) \/ CAST((SELECT usr.Reputation FROM \"Users\" AS usr WHERE usr.Id = UserId AND usr.Reputation > 1000) AS FLOAT(9, 2))) AS \"Gold Badge Efficiency\" FROM \"Badges\" WHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero') GROUP BY UserId ORDER BY \"Gold Badge Efficiency\" DESC LIMIT 100","CreationDate":"2015-07-31 14:53:34","validated":false,"QueryBody_Original":"SELECT  TOP 100 UserId AS [User Link],\nCOUNT(*) As [Gold Badges],\n(SELECT usr.Reputation FROM [Users] usr WHERE usr.Id = UserId) As Reputation,\n(COUNT(*) \/ CAST((SELECT usr.Reputation FROM [Users] usr WHERE usr.Id = UserId AND usr.Reputation > 1000) AS DECIMAL (9,2))) As [Gold Badge Efficiency]\nFROM [Badges]\nWHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero')\nGROUP BY UserId\nORDER BY [Gold Badge Efficiency] DESC"},{"QuerySetId":261320,"Title":"Gold Badge Efficiency (Gold Badges \/ Reputation) - Users over 1 reputation only","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS \"Gold Badges\", (SELECT usr.Reputation FROM \"Users\" AS usr WHERE usr.Id = UserId) AS Reputation, (COUNT(*) \/ (SELECT usr.Reputation FROM \"Users\" AS usr WHERE usr.Id = UserId AND usr.Reputation > 1)) AS \"Gold Badge Efficiency\" FROM \"Badges\" WHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero') GROUP BY UserId ORDER BY \"Gold Badge Efficiency\" DESC LIMIT 10","CreationDate":"2014-12-29 05:00:09","validated":false,"QueryBody_Original":"SELECT  TOP 10 UserId AS [User Link],\nCOUNT(*) As [Gold Badges],\n(SELECT usr.Reputation FROM [Users] usr WHERE usr.Id = UserId) As Reputation,\n(COUNT(*) \/ (SELECT usr.Reputation FROM [Users] usr WHERE usr.Id = UserId AND usr.Reputation > 1)) As [Gold Badge Efficiency]\nFROM [Badges]\nWHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero')\nGROUP BY UserId\nORDER BY [Gold Badge Efficiency] DESC"},{"QuerySetId":261394,"Title":"Most frequent users of a word in posts","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(Id) AS \"posts\" FROM Posts WHERE LOWER(Body) LIKE LOWER('%##word##%') AND CreationDate < '##date##' GROUP BY OwnerUserId ORDER BY COUNT(Id) DESC","CreationDate":"2014-12-29 11:18:44","validated":false,"QueryBody_Original":"SELECT   OwnerUserId as [User Link], count(Id) as [posts] from Posts\nwhere lower(Body) like lower('%##word##%') and CreationDate<'##date##'\ngroup by OwnerUserId\norder by count(Id) desc"},{"QuerySetId":261395,"Title":"Most frequent users of a word in comments","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(Id) AS \"comments\" FROM Comments WHERE LOWER(Text) LIKE LOWER('%##word##%') GROUP BY UserId ORDER BY COUNT(Id) DESC","CreationDate":"2014-12-29 13:09:30","validated":false,"QueryBody_Original":"SELECT  UserId as [User Link], count(Id) as [comments] from Comments\nwhere lower(Text) like lower('%##word##%')\ngroup by UserId\norder by count(Id) desc"},{"QuerySetId":261422,"Title":"\"Home site\" of election voters","Description":null,"QueryBody":"SELECT COUNT(u.Id), u.Id FROM Badges AS b LEFT JOIN Users AS u ON u.Id = b.UserId WHERE b.Name = 'Constituent' GROUP BY u.id","CreationDate":"2014-12-29 19:42:22","validated":false,"QueryBody_Original":"SELECT  count(u.Id), u.Id\nFrom Badges b\nleft join Users u\non u.Id = b.UserId\nWhere b.Name = 'Constituent'\ngroup by u.id"},{"QuerySetId":261426,"Title":"How many answers on lifehacks are copied from lifehacker?","Description":null,"QueryBody":"SELECT DISTINCT (SELECT COUNT(po.Body) FROM Posts AS po WHERE po.PostTypeId = 2) AS ALLANSWERS, (SELECT COUNT(pos.Body) FROM Posts AS pos WHERE pos.PostTypeId = 2 AND pos.body = '%lifehacker%') AS LHACKERANSWERS FROM Posts AS p","CreationDate":"2014-12-29 20:38:23","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n(SELECT COUNT(po.Body) FROM Posts po WHERE po.PostTypeId = 2) AS ALLANSWERS,\n(SELECT COUNT(pos.Body) FROM Posts pos WHERE pos.PostTypeId = 2 AND pos.body = '%lifehacker%') AS LHACKERANSWERS\nFROM Posts p"},{"QuerySetId":261441,"Title":"Count of Answers on Lifehacks from Lifehacker","Description":null,"QueryBody":"SELECT DISTINCT (SELECT COUNT(po.Body) FROM Posts AS po WHERE po.PostTypeId = 2) AS ALLANSWERS, (SELECT COUNT(pos.Body) FROM Posts AS pos WHERE pos.PostTypeId = 2 AND (pos.body LIKE '%lifehacker%' OR pos.body LIKE '%Lifehacker%' OR pos.body LIKE '%Lifehacker.com%')) AS LHACKERANSWERS FROM Posts AS p","CreationDate":"2014-12-29 20:47:35","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n(SELECT COUNT(po.Body)\n  FROM Posts po WHERE po.PostTypeId = 2) AS ALLANSWERS,\n(SELECT COUNT(pos.Body) \n  FROM Posts pos WHERE pos.PostTypeId = 2 AND\n    (pos.body LIKE '%lifehacker%'\n    OR pos.body LIKE '%Lifehacker%'\n    OR pos.body LIKE '%Lifehacker.com%')) AS LHACKERANSWERS\nFROM Posts p"},{"QuerySetId":261444,"Title":"Answers on Lifehacks from Lifehacker","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.Body FROM Posts AS p WHERE p.PostTypeId = 2 AND p.Body LIKE '%lifehacker%'","CreationDate":"2014-12-29 20:51:57","validated":false,"QueryBody_Original":"SELECT  p.id AS [Post Link], p.Body\nFrom Posts p\nWHERE p.PostTypeId = 2\nAND\np.Body LIKE '%lifehacker%'"},{"QuerySetId":261497,"Title":"find most comments which include text like","Description":null,"QueryBody":"SELECT COUNT(c.Id), c.Text FROM Comments AS c WHERE c.Text LIKE '%##Text##%' COLLATE SQL_Latin1_General_CP1_CI_AS GROUP BY c.Text HAVING COUNT(c.Id) > 2 ORDER BY COUNT(c.Id) DESC","CreationDate":"2015-01-03 09:09:43","validated":false,"QueryBody_Original":"SELECT \n  COUNT(c.Id),\n  c.Text\nFROM\n  Comments c\nWHERE\n  c.Text LIKE '%##Text##%' COLLATE SQL_Latin1_General_CP1_CI_AS\nGROUP BY\n  c.Text\nHAVING\n  COUNT(c.Id) > 2\nORDER BY\n  Count(c.Id) DESC"},{"QuerySetId":261661,"Title":"Get Parent-Child links between duplicate questions","Description":null,"QueryBody":"SELECT PostLinks.PostId AS \"Child\", PostLinks.RelatedPostId AS \"Parent\" FROM PostLinks JOIN PostHistory ON PostLinks.PostId = PostHistory.PostId WHERE PostLinks.LinkTypeId = 3 \/* duplicate *\/ AND PostHistory.PostHistoryTypeId = 10","CreationDate":"2014-12-31 04:32:07","validated":false,"QueryBody_Original":"SELECT  \n  PostLinks.PostId as [Child],\n  PostLinks.RelatedPostId as [Parent]\nfrom PostLinks\n  join PostHistory on PostLinks.PostId = PostHistory.PostId\nwhere \n  PostLinks.LinkTypeId=3 -- duplicate\n  and PostHistory.PostHistoryTypeId = 10"},{"QuerySetId":261852,"Title":"Top 200 users from Ahmedabad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE Location LIKE '%ahmedabad%' OR Location LIKE '%Ahmedabad' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2014-12-31 12:27:22","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    Location LIKE '%ahmedabad%'\n    OR Location LIKE '%Ahmedabad'\n  \nORDER BY\n    Reputation DESC;"},{"QuerySetId":261904,"Title":"\"I have never\" in answers.","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\" FROM Posts AS p WHERE p.PostTypeId = 2 AND (p.Body LIKE '%I have never%' OR p.Body LIKE '%I''ve never%' OR p.Body LIKE '%never tried%')","CreationDate":"2014-12-31 21:08:06","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link]\nFROM Posts p\nWHERE p.PostTypeId = 2\nAND (p.Body LIKE '%I have never%'\nOR p.Body LIKE '%I''ve never%'\nOR p.Body LIKE '%never tried%')"},{"QuerySetId":261938,"Title":"% of bad Minecraft questions","Description":"Check on how the sheeple are doing in corrupting the Minecraft tag. Intended to be used in Arqade","QueryBody":"SELECT COUNT(Id) * 100. \/ (SELECT COUNT(Id) FROM posts WHERE PostTypeId = 1 AND Tags LIKE '%minecraft%') AS Pct FROM posts WHERE PostTypeId = 1 AND Tags LIKE '%minecraft%' AND (NOT ClosedDate IS NULL OR Score < 0)","CreationDate":"2015-01-01 01:13:24","validated":false,"QueryBody_Original":"SELECT  count(Id) * 100. \/ (SELECT count(Id) from posts where PostTypeId = 1 and Tags like '%minecraft%') as Pct\nfrom posts\nwhere PostTypeId = 1 and Tags like '%minecraft%' and (ClosedDate is not null or Score < 0)"},{"QuerySetId":262355,"Title":"Closures early in SO's history","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ClosedDate FROM Posts WHERE ClosedDate < '2009-01-17' ORDER BY ClosedDate DESC","CreationDate":"2015-01-03 07:42:33","validated":false,"QueryBody_Original":"SELECT  \n  Id AS [Post Link],\n  ClosedDate\nFROM\n  Posts\nWHERE\n  ClosedDate < '2009-01-17'\nORDER BY\n  ClosedDate DESC"},{"QuerySetId":262908,"Title":"Top 500 Users in India","Description":"It will gives you Top 500 Users who belongs to India.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 5000","CreationDate":"2017-08-11 10:44:16","validated":false,"QueryBody_Original":"SELECT  TOP 5000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":262930,"Title":"Lowest Rep Users With Electorate","Description":null,"QueryBody":"SELECT Badges.UserId AS \"User Link\", Users.Reputation FROM Badges JOIN Users ON Badges.UserId = Users.Id WHERE Badges.Name = 'Electorate' AND Users.Reputation > 1 \/* Don't show suspended users *\/ ORDER BY Users.Reputation LIMIT 50","CreationDate":"2015-01-06 09:59:15","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  Badges.UserId AS [User Link],\n  Users.Reputation\nFROM Badges\n  JOIN Users\n    on\n      Badges.UserId = Users.Id\nWHERE Badges.Name='Electorate'\n  AND Users.Reputation > 1 --Don't show suspended users\nORDER BY Users.Reputation ASC;"},{"QuerySetId":263011,"Title":"Gold badge ranking in India","Description":null,"QueryBody":"SELECT u.DisplayName, u.Id, REPLACE(CAST(TIME_TO_STR(b.Date, '%d %b %Y') AS TEXT(30)), ' ', '\/') FROM Users AS u JOIN Badges AS b ON u.Id = b.userId WHERE b.name = 'css' AND b.class = 1 ORDER BY b.Date DESC","CreationDate":"2016-10-24 11:37:44","validated":false,"QueryBody_Original":"SELECT   u.DisplayName, u.Id,\nreplace(convert(NVARCHAR, b.Date, 106), ' ', '\/')\nFROM Users u \nJOIN Badges b ON u.Id = b.userId\nWHERE b.name='css' and b.class = 1\nORDER BY b.Date DESC"},{"QuerySetId":263776,"Title":"List of users with highest reputation from Poland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%poland%' OR UPPER(Location) LIKE '%PL' ORDER BY Reputation DESC","CreationDate":"2015-01-09 00:19:48","validated":false,"QueryBody_Original":"SELECT \n\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n\n    Id AS [User Link], \n\n    Reputation\n\nFROM\n\n    Users\n\nWHERE\n\n    LOWER(Location) LIKE '%poland%'\n\n    OR UPPER(Location) LIKE '%PL'\n\nORDER BY\n\n    Reputation DESC;"},{"QuerySetId":263798,"Title":"select * from Posts where Tags LIKE '%unit-testing%';","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%unit-testing%' AND (Tags LIKE '%java%' OR Tags LIKE '%android%')","CreationDate":"2015-01-09 03:39:10","validated":false,"QueryBody_Original":"SELECT  * from Posts \nwhere Tags LIKE '%unit-testing%' \nand (Tags LIKE '%java%' or Tags LIKE '%android%');"},{"QuerySetId":264049,"Title":"Your RANK on STACKOVERFLOW.COM Worldwide,in india,in Pune","Description":null,"QueryBody":"SELECT d.RANK AS RANK_INDIA FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY REPUTATION DESC) AS RANK FROM Users WHERE LOWER(Location) LIKE '%india%') AS d WHERE d.id = 1288725","CreationDate":"2015-04-30 18:49:11","validated":false,"QueryBody_Original":"SELECT  d.RANK as RANK_INDIA from (\n\nSELECT *,ROW_NUMBER() OVER (ORDER BY REPUTATION DESC) RANK from Users where LOWER(Location) LIKE '%india%'\n\n)d where d.id=1288725"},{"QuerySetId":264137,"Title":"v2 - Answers that are possibly link only which were posted by new users and question asker is new","Description":"credit to Bill the Lizard for help putting this together http:\/\/meta.stackexchange.com\/a\/238320\/244519","QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, LENGTH(p.Body) AS BodyLength FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.PostTypeId = 1 AND p.CreationDate > '2015-04-15T00:00:00.000' AND DATEDIFF(p.CreationDate, u.CreationDate) < 104 ORDER BY p.CreationDate","CreationDate":"2015-04-24 14:49:12","validated":false,"QueryBody_Original":"SELECT \n    p.Id AS [Post Link],\n    p.CreationDate,\n    LEN(p.Body) AS BodyLength\nFROM\n    Posts AS p\nINNER JOIN\n    Users AS u\nON\n    u.Id = p.OwnerUserId\nWHERE\n    p.PostTypeId = 1\n  AND\n    p.CreationDate > '2015-04-15T00:00:00.000'\n  AND\n     DATEDIFF(WEEK, u.CreationDate, p.CreationDate) < 104\n  \nORDER BY\n    p.CreationDate"},{"QuerySetId":264294,"Title":"Search UserId's Questions & Answers for a Text string","Description":"Search UserId's Questions & Answers for a Text string.  Text searches use a % wildcard by default; searches are case-insensitive\r\n","QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", Posts.id AS \"Post Link\", Posts.PostTypeId AS \"Post Type\", Posts.Score AS \"Score\", Posts.Tags AS \"Tagged With\" FROM Posts WHERE (LOWER(Posts.Body) LIKE LOWER('%##Text2##%')) AND Posts.OwnerUserId = 5426 GROUP BY Posts.OwnerUserId, Posts.id, Posts.PostTypeId, Posts.Score, Posts.Tags ORDER BY Posts.PostTypeId, Posts.Score DESC","CreationDate":"2017-12-15 08:59:31","validated":false,"QueryBody_Original":"SELECT  Posts.OwnerUserId as [User Link], Posts.id as [Post Link], Posts.PostTypeId as [Post Type], Posts.Score as [Score], Posts.Tags as [Tagged With]\n\nFROM Posts\n\nWHERE (lower(Posts.Body) LIKE lower('%##Text2##%')) and Posts.OwnerUserId = 5426 \n     \n\nGROUP BY Posts.OwnerUserId, Posts.id, Posts.PostTypeId, Posts.Score, Posts.Tags\n\nORDER BY Posts.PostTypeId ASC, Posts.Score DESC"},{"QuerySetId":264314,"Title":"Posts on which to force Markdown re-rendering (Japanese.SE)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, LastActivityDate, ClosedDate FROM Posts WHERE Body LIKE '%*<em>%' OR Body LIKE '%*<strong>%' OR Body LIKE '%*<b>%' OR Body LIKE '%*<i>%' ORDER BY CreationDate DESC","CreationDate":"2015-01-21 21:23:20","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  CreationDate,\n  LastActivityDate,\n  ClosedDate\nFROM\n  Posts\nWHERE\n  Body LIKE '%*<em>%'\n  OR Body LIKE '%*<strong>%'\n  OR Body LIKE '%*<b>%'\n  OR Body LIKE '%*<i>%'\nORDER BY\n  CreationDate DESC"},{"QuerySetId":264366,"Title":"Posts that could be marked as 'not an answer' to help get the Marshal badge","Description":"targeting answers from users with not a lot of rep. I hate the use of `body like`, so please feel free to edit this. It was just quick n dirty! The Marshal badge is:\t \"Achieved a flag weight of 749 by reviewing and flagging appropriately :","QueryBody":"SELECT p.Id AS \"Post Link\", p.body, p.creationDate FROM posts AS p INNER JOIN \"users\" AS u ON u.id = p.owneruserid WHERE posttypeid = 2 AND (body LIKE '%how can%' OR body LIKE '%same problem%' OR body LIKE '%thank%' OR body LIKE '%please%' OR body LIKE '%plz%' OR body LIKE '%pls%') AND u.reputation < 100 AND p.score < 1 ORDER BY p.creationDate DESC","CreationDate":"2015-08-08 12:00:14","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], p.body, p.creationDate\nfrom posts as p\ninner join [users] as u on u.id = p.owneruserid\nwhere posttypeid = 2\nand (body like '%how can%' or\n     body like '%same problem%' or\n     body like '%thank%' or\n     body like '%please%' or\n     body like '%plz%' or\n     body like '%pls%')\nand u.reputation < 100\nand p.score < 1\norder by p.creationDate Desc"},{"QuerySetId":264452,"Title":"Shell looks for data in tables and joins some. ","Description":null,"QueryBody":"SELECT posts.id, posts.score, posts.parentid FROM posts JOIN comments ON posts.id = comments.postid","CreationDate":"2015-01-13 05:17:17","validated":false,"QueryBody_Original":"SELECT  \n\nposts.id,\nposts.score,\nposts.parentid\n\nfrom posts \njoin comments on posts.id= comments.postid"},{"QuerySetId":264585,"Title":"Retrieve profile image url of user 'jabbink'","Description":null,"QueryBody":"SELECT ProfileImageUrl FROM Users WHERE Id = '##UserID##'","CreationDate":"2016-03-27 22:37:08","validated":false,"QueryBody_Original":"SELECT  ProfileImageUrl FROM Users WHERE Id = '##UserID##'"},{"QuerySetId":264687,"Title":"Average title length by score","Description":null,"QueryBody":"SELECT Score \/ 10, AVG(LENGTH(Title)) AS \"Average Title Length\" FROM Posts WHERE PostTypeId = 1 GROUP BY Score \/ 10 ORDER BY Score \/ 10 DESC","CreationDate":"2015-01-14 01:18:57","validated":false,"QueryBody_Original":"SELECT  Score \/ 10, Avg(Len(Title)) As [Average Title Length]\nFrom Posts\nWhere PostTypeId=1\nGroup By Score \/ 10\nOrder By Score \/ 10 Desc"},{"QuerySetId":264967,"Title":"Search for Error in Title","Description":null,"QueryBody":"SELECT Title FROM Posts WHERE title LIKE '%Exception%'","CreationDate":"2015-01-14 23:28:35","validated":false,"QueryBody_Original":"SELECT  Title from Posts where title like '%Exception%'"},{"QuerySetId":265069,"Title":"What have I rolled back?","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE UserId = 14215 AND PostHistoryTypeId IN (7, 8, 9)","CreationDate":"2015-01-15 02:03:00","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link] \nfrom PostHistory\nwhere\n  UserId=14215\n    and\n  PostHistoryTypeId IN (7,8,9)"},{"QuerySetId":265574,"Title":"ViewCount isn't populated for tag wikis","Description":null,"QueryBody":"SELECT t.TagName, 'site:\/\/tags\/' + t.TagName + '\/info|' + t.TagName + ' wiki' AS \"WikiLink\", p.ViewCount FROM Posts AS p INNER JOIN Tags AS t ON t.WikiPostId = p.Id ORDER BY p.ViewCount DESC LIMIT 10","CreationDate":"2015-01-16 07:00:57","validated":false,"QueryBody_Original":"SELECT  TOP 10\n  t.TagName,\n  'site:\/\/tags\/' + t.TagName + '\/info|' + t.TagName + ' wiki' AS [WikiLink],\n  p.ViewCount\nFROM\n  Posts AS p\n  INNER JOIN Tags AS t\n    ON t.WikiPostId = p.Id\nORDER BY\n  p.ViewCount DESC"},{"QuerySetId":265605,"Title":"Badge Samaritan - nice answer- answers that need 1 upvote","Description":"http:\/\/stackoverflow.com\/help\/badges\/23\/nice-answer \"Answer score of 10 or more. This badge can be awarded multiple times. \"","QueryBody":"SELECT a.Id AS \"Post Link\", a.Score, a.CreationDate FROM Posts AS a INNER JOIN Posts AS q ON a.ParentId = q.Id INNER JOIN PostHistory AS ph ON ph.PostId = q.Id INNER JOIN Users AS u ON u.Id = a.OwnerUserId WHERE ph.PostHistoryTypeId <> 14 AND a.Score = 9 AND NOT a.OwnerUserId IN (SELECT DISTINCT (UserId) FROM Badges WHERE Name LIKE '%nice%') GROUP BY a.Id, a.Score, a.CreationDate ORDER BY a.Score, a.CreationDate DESC LIMIT 2000","CreationDate":"2015-06-06 20:03:41","validated":false,"QueryBody_Original":"SELECT  TOP 2000\n  a.Id AS [Post Link],\n  a.Score,\n  a.CreationDate\nFROM\n  Posts AS a\nINNER JOIN\n  Posts AS q\nON\n  a.ParentId = q.Id\nINNER JOIN\n  PostHistory AS ph\nON\n  ph.PostId = q.Id\nINNER JOIN\n  Users AS u\nON\n  u.Id = a.OwnerUserId\nWHERE\n      ph.PostHistoryTypeId != 14\n  and a.Score = 9\n  and a.OwnerUserId NOT IN (SELECT DISTINCT(UserId) FROM Badges WHERE Name LIKE '%nice%')\nGROUP BY\n  a.Id, a.Score, a.CreationDate\nORDER BY\n  a.Score, a.CreationDate DESC"},{"QuerySetId":265838,"Title":"Potentially useless comments to flag","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Score, Text, CreationDate, PostId FROM Comments WHERE LENGTH(Text) < 25 AND Text LIKE '%Thank%' ORDER BY CreationDate DESC","CreationDate":"2015-01-17 09:25:57","validated":false,"QueryBody_Original":"SELECT \n  PostId AS [Post Link],\n  Score,\n  Text,\n  CreationDate,\n  PostId\nFROM Comments\nWHERE LEN(Text) < 25 AND\nText LIKE '%Thank%'\nORDER BY\n  CreationDate DESC"},{"QuerySetId":265839,"Title":"sounds good, is good finder ","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Body, CreationDate FROM Posts WHERE Body LIKE '%it sounds good, it is good%' ORDER BY Score","CreationDate":"2020-09-25 17:55:55","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  Score,\n  Body,\n  CreationDate\nFROM Posts\nWHERE \nBody LIKE '%it sounds good, it is good%'\nORDER BY\n  Score ASC"},{"QuerySetId":266055,"Title":"top ten percent of all users by year excluding <=1 reputation","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Count\", MIN(a.reputation) AS \"Min_Rep\", '2008' AS \"Year\" FROM (SELECT percent AS Id, reputation FROM users WHERE reputation > 1 AND TIME_TO_STR(creationdate, '%Y') = '2008' ORDER BY reputation DESC LIMIT 10) AS a","CreationDate":"2015-01-18 09:46:43","validated":false,"QueryBody_Original":"SELECT  count(*) [Count],min(a.reputation) [Min_Rep],'2008' [Year]\n from (SELECT top(10) percent Id,reputation\n           from users\n           where  reputation > 1 and datepart(year,creationdate)='2008'\n           order by reputation desc) a"},{"QuerySetId":266086,"Title":"Tags which should not be used","Description":null,"QueryBody":"SELECT Tags.TagName, Tags.Count, Posts.Body FROM Tags, Posts WHERE Posts.Id = Tags.ExcerptPostId AND UPPER(Posts.Body) LIKE '%2012%' ORDER BY Tags.Count DESC","CreationDate":"2019-03-08 20:42:09","validated":false,"QueryBody_Original":"SELECT  Tags.TagName, Tags.Count, Posts.Body FROM Tags, Posts\n  WHERE Posts.Id = Tags.ExcerptPostId\n  AND UPPER(Posts.Body) LIKE '%2012%'\n  ORDER BY Tags.Count DESC;"},{"QuerySetId":266124,"Title":"pls gimme his about me","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id = 116614","CreationDate":"2015-01-18 18:47:23","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Id = 116614"},{"QuerySetId":266596,"Title":"people with top number of answers","Description":null,"QueryBody":"SELECT OwnerUserId, COUNT(Id) FROM Posts GROUP BY OwnerUserId ORDER BY COUNT(Id) DESC","CreationDate":"2015-01-20 16:37:11","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, count(Id) from Posts\ngroup by OwnerUserId \norder by count(Id) DESC"},{"QuerySetId":266676,"Title":"QA weights by ghost user","Description":null,"QueryBody":"SELECT ownerdisplayname, SUM(LENGTH(body)) AS QA_Weight FROM posts WHERE owneruserid IS NULL AND posttypeid >= 1 AND posttypeid <= 2 GROUP BY ownerdisplayname ORDER BY SUM(LENGTH(body)) DESC","CreationDate":"2015-01-21 01:42:18","validated":false,"QueryBody_Original":"SELECT  ownerdisplayname, sum(len(body)) as QA_Weight from posts \nwhere owneruserid is null\nand posttypeid >= 1\nand posttypeid <=2\ngroup by ownerdisplayname \norder by sum(len(body)) desc"},{"QuerySetId":266804,"Title":"Questions posted together with an answer","Description":"Find all questions that were posted together with an answer by the same user","QueryBody":"SELECT q.Score AS Score, u.id AS \"User Link\", q.id AS \"Post Link\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id AND a.OwnerUserId = q.OwnerUserId INNER JOIN Users AS u ON u.Id = q.OwnerUserId ORDER BY Score DESC","CreationDate":"2015-01-22 03:08:28","validated":false,"QueryBody_Original":"SELECT \n    q.Score as Score, u.id as [User Link], q.id as [Post Link]\nfrom\n    Posts q\n  inner join\n    Posts a\n  on a.ParentId = q.Id\n    and a.OwnerUserId = q.OwnerUserId\n  inner join Users u\n    on u.Id = q.OwnerUserId\norder by Score DESC"},{"QuerySetId":266895,"Title":"Is your User ID the same as your Post ID?","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\" FROM Posts WHERE Posts.Id = Posts.OwnerUserId","CreationDate":"2015-01-22 02:58:50","validated":false,"QueryBody_Original":"SELECT  Posts.Id AS [Post Link], Posts.OwnerUserId AS [User Link]\nFROM Posts\nWHERE Posts.Id = Posts.OwnerUserId"},{"QuerySetId":267344,"Title":"What is the percentage of answers contributed by Stack Exchange employees","Description":"http:\/\/meta.stackexchange.com\/questions\/247449\/for-each-stack-exchange-site-what-is-the-percentage-of-answers-contributed-by-s","QueryBody":"SELECT u.id AS \"User Link\", COUNT(*) AS \"Posts Q and A \" FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE u.accountid IN (1190 \/* Oded *\/) GROUP BY u.id","CreationDate":"2015-01-24 19:11:08","validated":false,"QueryBody_Original":"SELECT  u.id as [User Link]\n, count(*) as [Posts Q and A ] \nfrom posts p \ninner join users u on u.id = p.owneruserid\nwhere u.accountid in (1190 -- Oded\n)\ngroup by u.id"},{"QuerySetId":267831,"Title":"Low received posts (-100 score or less)","Description":null,"QueryBody":"SELECT Title, Id, Score FROM Posts WHERE Score < -100","CreationDate":"2015-01-26 20:31:22","validated":false,"QueryBody_Original":"SELECT  Title, Id, Score\nFROM Posts\nWHERE Score < -100"},{"QuerySetId":268598,"Title":" SELECT TOP 40 u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes FROM Users u WHERE","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes FROM Users AS u WHERE (u.Location LIKE '%Rockville%' OR u.Location LIKE '%Bethesda%' OR u.Location LIKE '%Silver Spring%' OR u.Location LIKE '%Kensington%' OR u.Location LIKE '%Gaithersburg%') AND (NOT u.Location LIKE '%London%') GROUP BY u.Id, u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes ORDER BY Location, Reputation DESC LIMIT 40","CreationDate":"2015-02-03 23:06:59","validated":false,"QueryBody_Original":"SELECT  TOP 40 u.Id, u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes \nFROM Users u \nWHERE (\nu.Location like '%Rockville%' \nOR u.Location like '%Bethesda%' \nOR u.Location like '%Silver Spring%' \nOR u.Location like '%Kensington%'\nOR u.Location like '%Gaithersburg%'\n) AND (\nu.Location  not like '%London%'\n)\nGROUP BY u.Id, u.DisplayName, u.Reputation, u.Location, u.Age, u.Views, u.UpVotes \nORDER BY Location, Reputation DESC;"},{"QuerySetId":268644,"Title":"INSERT INTO Posts (Score) VALUES(1)","Description":null,"QueryBody":"SELECT Score, COUNT(Score) FROM Posts WHERE Score > 10 AND Score < 100 GROUP BY Score ORDER BY Score","CreationDate":"2015-01-29 02:16:19","validated":false,"QueryBody_Original":"SELECT  Score, COUNT(Score) FROM Posts WHERE Score > 10 AND Score < 100 GROUP BY Score ORDER BY Score"},{"QuerySetId":268944,"Title":"How many python enthusiasts in a city (they asked a python question)","Description":null,"QueryBody":"SELECT DISTINCT Users.Id AS \"User Link\", Users.Reputation FROM Users JOIN Posts ON Users.Id = Posts.OwnerUserId AND Posts.Tags LIKE '%python%' WHERE LOWER(Location) LIKE '%cluj%' ORDER BY Users.Reputation DESC","CreationDate":"2015-01-29 23:09:16","validated":false,"QueryBody_Original":"SELECT  DISTINCT \n    Users.Id AS [User Link], \n    Users.Reputation\nFROM\n    Users\nJOIN\n    Posts\nON\n    Users.Id = Posts.OwnerUserId AND\n    Posts.Tags LIKE '%python%'\nWHERE\n    LOWER(Location) LIKE '%cluj%'\nORDER BY\n    Users.Reputation DESC;"},{"QuerySetId":268974,"Title":"For generating a list of plain-text links to remaining posts with default alt text","Description":null,"QueryBody":"SELECT 'http:\/\/meta.judaism.stackexchange.com\/a\/' \/* Replace with mi.yodeya.com\/q\/ for Main: *\/ + CAST(id AS TEXT) + '    ' FROM Posts WHERE (Body LIKE '%alt text%' OR Body LIKE '%enter image description here%') AND (Title IS NULL OR NOT Title LIKE '%alt text%' \/* Exclude meta post discussing alt texts *\/) ORDER BY Id \/* In order by immutable Id, to facilitate cooperation *\/","CreationDate":"2015-01-30 02:17:26","validated":false,"QueryBody_Original":"SELECT  \n   -- Replace with mi.yodeya.com\/q\/ for Main:\n   'http:\/\/meta.judaism.stackexchange.com\/a\/' + cast(id as varchar) + '    '\nFROM Posts \nWHERE \n      (\n          Body LIKE '%alt text%'\n       OR Body LIKE '%enter image description here%'\n      )\n  AND \n      (\n          Title IS NULL\n       OR Title NOT LIKE '%alt text%' -- Exclude meta post discussing alt texts\n      )\nORDER BY Id ASC -- In order by immutable Id, to facilitate cooperation"},{"QuerySetId":269023,"Title":"Top 10 users based on repo and upvotes","Description":null,"QueryBody":"SELECT DisplayName, LastAccessDate, Reputation, UpVotes, DownVotes FROM Users ORDER BY Reputation DESC, UpVotes DESC LIMIT 10","CreationDate":"2015-01-30 07:57:51","validated":false,"QueryBody_Original":"SELECT  TOP 10 DisplayName,LastAccessDate, Reputation,UpVotes,DownVotes from Users\nORDER BY Reputation DESC,UpVotes Desc"},{"QuerySetId":269037,"Title":"Posts with images and no default alt text, by owner","Description":null,"QueryBody":"SELECT p.Id, p.Id AS \"Post Link\", p.OwnerUserId AS \"User Link\", p.CreationDate, p.LastActivityDate FROM Posts AS p LEFT OUTER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.Body LIKE '%<img%' AND NOT p.Body LIKE '%alt text%' AND NOT p.Body LIKE '%enter image description here%' ORDER BY u.DisplayName, p.Id","CreationDate":"2015-01-30 10:55:07","validated":false,"QueryBody_Original":"SELECT  \n    p.Id\n  , p.Id AS [Post Link]\n  , p.OwnerUserId AS [User Link]\n  , p.CreationDate\n  , p.LastActivityDate\nFROM Posts p\nLEFT OUTER JOIN Users u\n  ON u.Id = p.OwnerUserId\nWHERE\n      p.Body LIKE '%<img%'\n  AND p.Body NOT LIKE '%alt text%'\n  AND p.Body NOT LIKE '%enter image description here%'\nORDER BY u.DisplayName Asc, p.Id Asc"},{"QuerySetId":269038,"Title":"Number of image posts without default alt text per owner","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS NumPosts FROM Posts WHERE Body LIKE '%<img%' AND NOT Body LIKE '%alt text%' AND NOT Body LIKE '%enter image description here%' GROUP BY OwnerUserId ORDER BY COUNT(*) DESC","CreationDate":"2015-01-30 10:48:10","validated":false,"QueryBody_Original":"SELECT  \n    OwnerUserId AS [User Link]\n    , count(*) AS NumPosts\nFROM Posts\nWHERE\n      Body LIKE '%<img%'\n  AND Body NOT LIKE '%alt text%'\n  AND Body NOT LIKE '%enter image description here%'\nGROUP BY OwnerUserId \nORDER BY count(*) DESC"},{"QuerySetId":269634,"Title":"Link-only answers in unclosed questions","Description":null,"QueryBody":"SELECT Questions.Score, Answers.Id AS \"Post Link\", Answers.Score, Answers.Body FROM Posts AS Answers INNER JOIN Posts AS Questions ON Answers.ParentId = Questions.Id WHERE Answers.PostTypeId = 2 AND LENGTH(Answers.Body) < 100 AND Answers.Body LIKE '%http:\/\/%' AND Answers.Score < 0 AND Questions.ClosedDate IS NULL ORDER BY Answers.Score","CreationDate":"2015-02-02 05:04:26","validated":false,"QueryBody_Original":"SELECT  Questions.Score,\n       Answers.Id AS [Post Link],\n       Answers.Score,\n       Answers.Body FROM Posts AS Answers\n  INNER JOIN Posts as Questions\n    ON Answers.ParentId = Questions.Id\n  WHERE Answers.PostTypeId = 2\n    AND LEN(Answers.Body) < 100\n    AND Answers.Body LIKE '%http:\/\/%'\n    AND Answers.Score < 0\n    AND Questions.ClosedDate IS NULL\n  ORDER BY Answers.Score ASC"},{"QuerySetId":269782,"Title":"Top 500 users from Morocco","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%morocco%' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2015-02-02 18:27:18","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%morocco%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":270118,"Title":"View Statistics for all questions","Description":null,"QueryBody":"SELECT AVG(viewcount) AS AvgViews, STDEV(viewcount) AS StDevViews, COUNT(*) AS N FROM posts WHERE posttypeid = 1 \/* Questions only *\/","CreationDate":"2015-02-03 21:59:11","validated":false,"QueryBody_Original":"SELECT \n    avg(viewcount) as AvgViews\n  , stdev(viewcount) as StDevViews\n  , count(*) as N\nfrom posts\nwhere posttypeid = 1 -- Questions only"},{"QuerySetId":270126,"Title":"Percent of questions with at least N views","Description":null,"QueryBody":"SELECT * FROM (SELECT ViewCount \/ 100 AS Hundred_Views \/* integer math automatically floors *\/, 1 - CUME_DIST() OVER (ORDER BY ViewCount \/ 100) AS percent_at_least FROM Posts WHERE posttypeid = 1 \/* only questions *\/) AS a GROUP BY Hundred_Views, percent_at_least ORDER BY Hundred_Views","CreationDate":"2015-02-03 22:07:54","validated":false,"QueryBody_Original":"SELECT  * from\n(\nSELECT\n    ViewCount \/ 100 as Hundred_Views -- integer math automatically floors\n  , 1 - CUME_DIST () over (order by ViewCount \/ 100 ) as percent_at_least\nFrom Posts \nwhere posttypeid = 1 -- only questions\n) a\ngroup by Hundred_Views, percent_at_least\norder by Hundred_Views"},{"QuerySetId":270807,"Title":"my answers on question that have their users removed or dis-associated","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", q.ownerdisplayname FROM posts AS p INNER JOIN posts AS q ON q.id = p.parentid WHERE p.posttypeid = 2 \/* A *\/ AND p.owneruserid = 7812 AND q.owneruserid IS NULL","CreationDate":"2015-12-04 02:48:44","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link], q.ownerdisplayname\nfrom posts p\ninner join posts q on q.id = p.parentid\nwhere p.posttypeid = 2 -- A\nand p.owneruserid = 7812\nand q.owneruserid is null"},{"QuerySetId":270846,"Title":"New Questions Analysis by Month","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS \"Year\", MONTH(CreationDate) AS \"Month\", SUM(CASE WHEN Posts.posttypeid = 1 THEN 1 ELSE 0 END) AS QuestionCount, SUM(CASE WHEN Posts.posttypeid = 2 THEN 1 ELSE 0 END) AS AnswerCount FROM Posts WHERE YEAR(CreationDate) >= 2014 GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2015-12-22 01:42:02","validated":false,"QueryBody_Original":"SELECT \n  YEAR(CreationDate) as [Year], \n  MONTH(CreationDate) AS [Month],\n  SUM(CASE WHEN Posts.posttypeid = 1 THEN 1 ELSE 0 END) AS QuestionCount, \n  SUM(CASE WHEN Posts.posttypeid = 2 THEN 1 ELSE 0 END) AS AnswerCount\nFROM Posts\nWHERE YEAR(CreationDate) >= 2014\nGROUP BY YEAR(CreationDate), MONTH(CreationDate)\nORDER BY YEAR(CreationDate), MONTH(CreationDate)"},{"QuerySetId":271027,"Title":"Find answers containing decorator to questions not containing decorator","Description":null,"QueryBody":"SELECT answers.Id AS \"Post Link\", answers.* FROM Posts AS questions INNER JOIN Posts AS answers ON questions.Id = answers.ParentId WHERE questions.PostTypeId = 1 AND answers.PostTypeId = 2 AND answers.Body LIKE '%strategy%' AND NOT questions.Body LIKE '%strategy%' AND questions.Score > 0 AND questions.tags LIKE '%java%' LIMIT 100","CreationDate":"2018-01-26 19:38:06","validated":false,"QueryBody_Original":"SELECT  TOP 100 answers.Id AS [Post Link], answers.*\nFROM Posts questions\n    INNER JOIN Posts answers ON questions.Id = answers.ParentId\nWHERE\n    questions.PostTypeId = 1 AND\n    answers.PostTypeId = 2 AND\n    answers.Body LIKE '%strategy%' AND\n    questions.Body NOT LIKE '%strategy%' AND\n    questions.Score > 0 AND\n    questions.tags LIKE '%java%'"},{"QuerySetId":271366,"Title":"Average Closed Questions per Week and Average Reasons for Closure","Description":null,"QueryBody":"SELECT *, ROUND(NegativeCount * 100.0 \/ TotalCount, 2) AS NegativePct, ROUND(Negative5Count * 100.0 \/ TotalCount, 2) AS Negative5Pct, ROUND(Negative10Count * 100.0 \/ TotalCount, 2) AS Negative10Pct FROM (SELECT COUNT(*) AS TotalCount, SUM(CASE WHEN p.Score < 0 THEN 1 ELSE 0 END) AS NegativeCount, SUM(CASE WHEN p.Score < -5 THEN 1 ELSE 0 END) AS Negative5Count, SUM(CASE WHEN p.Score < -10 THEN 1 ELSE 0 END) AS Negative10Count FROM Posts AS p WHERE p.PostTypeId = 1 AND p.CreationDate BETWEEN '2014-01-01 00:00:00' AND '2014-12-31 23:59:59') AS t","CreationDate":"2015-02-26 05:40:41","validated":false,"QueryBody_Original":"SELECT  *,\nROUND(NegativeCount*100.0\/TotalCount, 2) AS NegativePct,\nROUND(Negative5Count*100.0\/TotalCount, 2) AS Negative5Pct,\nROUND(Negative10Count*100.0\/TotalCount, 2) AS Negative10Pct\nFROM (\nSELECT COUNT(*) AS TotalCount,\nSUM(CASE WHEN p.Score < 0 THEN 1 ELSE 0 END) AS NegativeCount,\nSUM(CASE WHEN p.Score < -5 THEN 1 ELSE 0 END) AS Negative5Count,\nSUM(CASE WHEN p.Score < -10 THEN 1 ELSE 0 END) AS Negative10Count\nFROM Posts p\nWHERE p.PostTypeId = 1 AND p.CreationDate BETWEEN '2014-01-01 00:00:00' AND '2014-12-31 23:59:59')\nAS t"},{"QuerySetId":271400,"Title":"Does the \"Informed\" badge affect post score?","Description":null,"QueryBody":"SELECT CASE WHEN b.Id IS NULL THEN 'Not Informed' ELSE 'Informed' END AS Informed, COUNT(p.Id) AS \"Questions\", AVG(CAST(p.Score AS FLOAT)) AS \"Average Score\", STDEV(CAST(p.Score AS FLOAT)) AS \"STDEV\" FROM Posts AS p LEFT OUTER JOIN Badges AS b ON b.UserId = p.OwnerUserId AND b.Name = 'Informed' WHERE p.PostTypeId = 2 GROUP BY CASE WHEN b.Id IS NULL THEN 'Not Informed' ELSE 'Informed' END","CreationDate":"2015-02-08 09:31:09","validated":false,"QueryBody_Original":"SELECT \nCASE WHEN b.Id IS NULL THEN 'Not Informed' ELSE 'Informed' END AS Informed,\nCOUNT(p.Id) AS 'Questions',\nAVG(CAST(p.Score AS FLOAT)) AS 'Average Score',\nSTDEV(CAST(p.Score AS FLOAT)) AS 'STDEV'\nFROM Posts p\nLEFT OUTER JOIN Badges b\nON b.UserId = p.OwnerUserId AND b.Name = 'Informed'\nWHERE p.PostTypeId = 2\nGROUP BY CASE WHEN b.Id IS NULL THEN 'Not Informed' ELSE 'Informed' END;\n\nSELECT\np.Score AS 'Score',\nSUM(CASE WHEN b.Id IS NULL THEN 1 ELSE 0 END) AS 'Not Informed',\nSUM(CASE WHEN b.Id IS NULL THEN 0 ELSE 1 END) AS 'Informed'\nFROM Posts p\nLEFT OUTER JOIN Badges b\nON b.UserId = p.OwnerUserId AND b.Name = 'Informed'\nWHERE p.PostTypeId = 2\nGROUP BY p.Score\nORDER BY p.Score ASC;"},{"QuerySetId":272284,"Title":"get all activity in past timeframe","Description":null,"QueryBody":"SELECT Posts.Id AS post_id, Posts.CreationDate FROM Posts","CreationDate":"2015-02-10 21:49:12","validated":false,"QueryBody_Original":"SELECT  \n  Posts.Id as post_id, Posts.CreationDate\n  \nfrom Posts"},{"QuerySetId":272466,"Title":"Distribution of question counts over users","Description":null,"QueryBody":"SELECT cnt, COUNT(*) FROM (SELECT OwnerUserId, COUNT(*) AS cnt FROM Posts INNER JOIN Users ON Users.Id = Posts.OwnerUserId WHERE PostTypeId = 1 AND Users.Reputation > 500 GROUP BY OwnerUserId) AS results GROUP BY cnt HAVING cnt < 30000 \/* Community *\/","CreationDate":"2015-02-11 15:00:21","validated":false,"QueryBody_Original":"SELECT  cnt, COUNT(*)\nFROM \n(\n  SELECT OwnerUserId, COUNT(*) AS cnt\n  FROM Posts\n    INNER JOIN Users ON Users.Id = Posts.OwnerUserId\n  WHERE PostTypeId = 1 AND Users.Reputation > 500\n  GROUP BY OwnerUserId\n) results\nGROUP BY cnt\nHAVING cnt < 30000 -- Community"},{"QuerySetId":272727,"Title":"Find posts with 0 votes and 0 answers","Description":null,"QueryBody":"SELECT Posts.id, Posts.Title, CONCAT('http:\/\/math.stackexchange.com\/questions\/', CAST(Posts.id AS TEXT), '\/') FROM Posts LEFT OUTER JOIN Votes ON Posts.id = Votes.PostId WHERE Posts.AnswerCount = 0 AND Votes.PostId IS NULL ORDER BY id","CreationDate":"2015-02-12 06:44:23","validated":false,"QueryBody_Original":"SELECT  Posts.id, Posts.Title, CONCAT('http:\/\/math.stackexchange.com\/questions\/', CAST(Posts.id AS nvarchar(max)), '\/')\nFROM Posts\nLEFT OUTER JOIN Votes\nON Posts.id = Votes.PostId\nWHERE Posts.AnswerCount = 0 AND Votes.PostId is NULL\nORDER BY id ASC;"},{"QuerySetId":273136,"Title":"Hours Between Post Creation and Closing","Description":null,"QueryBody":"SELECT diff, COUNT(*) FROM (SELECT DATEDIFF(PostHistory.CreationDate, Posts.CreationDate) AS diff FROM Posts INNER JOIN PostHistory ON PostHistory.PostId = Posts.Id WHERE Posts.CreationDate > '2014-08-18' AND PostHistory.PostHistoryTypeId = 10) AS results GROUP BY diff","CreationDate":"2015-02-13 07:32:27","validated":false,"QueryBody_Original":"SELECT  diff, COUNT(*)\nFROM\n(\nSELECT DATEDIFF(HOUR, Posts.CreationDate, PostHistory.CreationDate) AS diff\n  FROM Posts\n    INNER JOIN PostHistory ON PostHistory.PostId = Posts.Id\n  WHERE Posts.CreationDate > '2014-08-18' AND PostHistory.PostHistoryTypeId = 10\n) results\nGROUP BY diff"},{"QuerySetId":273139,"Title":"Number of new users 2014","Description":null,"QueryBody":"SELECT COUNT(users.id) FROM Users AS users WHERE YEAR(users.creationDate) = 2014","CreationDate":"2015-02-13 07:00:44","validated":false,"QueryBody_Original":"SELECT  \ncount(users.id)\nfrom Users as users\nwhere YEAR(users.creationDate)=2014"},{"QuerySetId":273156,"Title":"How many questions on the site?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1","CreationDate":"2015-02-13 08:46:40","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Posts\nwhere PostTypeId = 1;"},{"QuerySetId":273605,"Title":"select * from Posts where PostTypeId=12;","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId = 12","CreationDate":"2015-02-15 00:57:28","validated":false,"QueryBody_Original":"SELECT  * from Posts where PostTypeId=12;"},{"QuerySetId":273681,"Title":"users with closure within 24 hours of first post","Description":null,"QueryBody":"SELECT udfp.owneruserid, COUNT(ph.id) AS numclosures FROM (SELECT p.owneruserid, MIN(p.creationdate) AS dfp \/* Datetime of First Post *\/ FROM posts AS p WHERE p.posttypeid < 3 \/* Q\/A *\/ GROUP BY p.owneruserid) AS udfp LEFT OUTER JOIN posts AS p ON p.owneruserid = udfp.owneruserid AND p.posttypeid = 1 \/* Q *\/ LEFT OUTER JOIN posthistory AS ph ON ph.posthistorytypeid = 10 \/* closure *\/ AND ph.postid = p.id AND DATEDIFF(ph.creationdate, udfp.dfp) < 24 GROUP BY udfp.owneruserid HAVING COUNT(ph.id) > 0 ORDER BY COUNT(ph.id) DESC","CreationDate":"2015-02-15 12:09:01","validated":false,"QueryBody_Original":"SELECT  udfp.owneruserid, count(ph.id) as numclosures\nfrom (\n  SELECT p.owneruserid, min(p.creationdate) as dfp -- Datetime of First Post\n  from posts p\n  where p.posttypeid < 3 -- Q\/A\n  group by p.owneruserid\n  ) udfp\nleft outer join posts p on\n      p.owneruserid = udfp.owneruserid\n  and p.posttypeid = 1 -- Q\nleft outer join posthistory ph on\n      ph.posthistorytypeid = 10 -- closure\n  and ph.postid = p.id\n  and datediff(hh, udfp.dfp, ph.creationdate) < 24\ngroup by udfp.owneruserid\n\nhaving count(ph.id) > 0\norder by count(ph.id) desc"},{"QuerySetId":273686,"Title":"first-day closures who come back on another day","Description":null,"QueryBody":"SELECT ucdfp.owneruserid, COUNT(p2.id) AS futureposts FROM (SELECT udfp.owneruserid, udfp.dfp FROM (SELECT p.owneruserid, MIN(p.creationdate) AS dfp \/* Datetime of First Post *\/ FROM posts AS p WHERE p.posttypeid < 3 \/* Q\/A *\/ GROUP BY p.owneruserid) AS udfp LEFT OUTER JOIN posts AS p ON p.owneruserid = udfp.owneruserid AND p.posttypeid = 1 \/* Q *\/ LEFT OUTER JOIN posthistory AS ph ON ph.posthistorytypeid = 10 \/* closure *\/ AND ph.postid = p.id AND DATEDIFF(ph.creationdate, udfp.dfp) < 24 GROUP BY udfp.owneruserid, udfp.dfp HAVING COUNT(ph.id) > 0) AS ucdfp LEFT OUTER JOIN posts AS p2 ON p2.owneruserid = ucdfp.owneruserid AND DATEDIFF(p2.creationdate, ucdfp.dfp) >= 24 AND p2.posttypeid < 3 \/* Q\/A *\/ GROUP BY ucdfp.owneruserid","CreationDate":"2015-02-15 12:16:11","validated":false,"QueryBody_Original":"SELECT  ucdfp.owneruserid, count(p2.id) as futureposts\nfrom (\n  SELECT udfp.owneruserid, udfp.dfp\n  from (\n    SELECT p.owneruserid, min(p.creationdate) as dfp -- Datetime of First Post\n    from posts p\n    where p.posttypeid < 3 -- Q\/A\n    group by p.owneruserid\n    ) udfp\n  left outer join posts p on\n        p.owneruserid = udfp.owneruserid\n    and p.posttypeid = 1 -- Q\n  left outer join posthistory ph on\n        ph.posthistorytypeid = 10 -- closure\n    and ph.postid = p.id\n    and datediff(hh, udfp.dfp, ph.creationdate) < 24\n  group by udfp.owneruserid, udfp.dfp\n  having count(ph.id) > 0\n  ) ucdfp\nleft outer join posts p2 on\n      p2.owneruserid = ucdfp.owneruserid\n  and datediff(hh, ucdfp.dfp, p2.creationdate) >= 24\n  and p2.posttypeid < 3 -- Q\/A\ngroup by ucdfp.owneruserid"},{"QuerySetId":273687,"Title":"Users who have posted more than 24 hours after first post","Description":null,"QueryBody":"SELECT udfp.owneruserid AS \"User Link\", COUNT(p2.id) AS futureposts FROM (SELECT p.owneruserid, MIN(p.creationdate) AS dfp \/* Datetime of First Post *\/ FROM posts AS p WHERE p.posttypeid < 3 \/* Q\/A *\/ GROUP BY p.owneruserid) AS udfp LEFT OUTER JOIN posts AS p2 ON p2.owneruserid = udfp.owneruserid AND DATEDIFF(p2.creationdate, udfp.dfp) >= 24 AND p2.posttypeid < 3 \/* Q\/A *\/ GROUP BY udfp.owneruserid HAVING COUNT(p2.id) > 0","CreationDate":"2015-02-15 12:23:08","validated":false,"QueryBody_Original":"SELECT  udfp.owneruserid as [User Link], count(p2.id) as futureposts\nfrom (\n  SELECT p.owneruserid, min(p.creationdate) as dfp -- Datetime of First Post\n  from posts p\n  where p.posttypeid < 3 -- Q\/A\n  group by p.owneruserid\n  ) udfp\nleft outer join posts p2 on\n      p2.owneruserid = udfp.owneruserid\n  and datediff(hh, udfp.dfp, p2.creationdate) >= 24\n  and p2.posttypeid < 3 -- Q\/A\ngroup by udfp.owneruserid\nhaving count(p2.id) > 0"},{"QuerySetId":273692,"Title":"Users with first-day closure and welcome comment","Description":null,"QueryBody":"SELECT udfp.owneruserid, COUNT(ph.id) AS numclosures FROM (SELECT p.owneruserid, MIN(p.creationdate) AS dfp \/* Datetime of First Post *\/ FROM posts AS p WHERE p.posttypeid < 3 \/* Q\/A *\/ GROUP BY p.owneruserid) AS udfp LEFT OUTER JOIN posts AS p ON p.owneruserid = udfp.owneruserid AND p.posttypeid < 3 \/* Q\/A *\/ LEFT OUTER JOIN comments AS c ON UPPER(c.text) LIKE '%WELCOME%' AND c.postid = p.id AND DATEDIFF(c.creationdate, udfp.dfp) < 24 LEFT OUTER JOIN posthistory AS ph ON ph.posthistorytypeid = 10 \/* closure *\/ AND ph.postid = p.id AND DATEDIFF(ph.creationdate, udfp.dfp) < 24 GROUP BY udfp.owneruserid HAVING COUNT(ph.id) > 0 AND COUNT(c.id) > 0 ORDER BY COUNT(ph.id) DESC","CreationDate":"2015-02-15 12:46:47","validated":false,"QueryBody_Original":"SELECT  udfp.owneruserid, count(ph.id) as numclosures\nfrom (\n  SELECT p.owneruserid, min(p.creationdate) as dfp -- Datetime of First Post\n  from posts p\n  where p.posttypeid < 3 -- Q\/A\n  group by p.owneruserid\n  ) udfp\nleft outer join posts p on\n      p.owneruserid = udfp.owneruserid\n  and p.posttypeid < 3 -- Q\/A\nleft outer join comments c on\n        upper(c.text) like '%WELCOME%'\n    and c.postid = p.id\n    and datediff(hh, udfp.dfp, c.creationdate) < 24\nleft outer join posthistory ph on\n      ph.posthistorytypeid = 10 -- closure\n  and ph.postid = p.id\n  and datediff(hh, udfp.dfp, ph.creationdate) < 24\ngroup by udfp.owneruserid\n\nhaving count(ph.id) > 0 AND count(c.id) > 0\norder by count(ph.id) desc"},{"QuerySetId":273696,"Title":"Get all posts on Java","Description":null,"QueryBody":"SELECT title, body, tags FROM Posts WHERE tags LIKE '%orienta\u00e7\u00e3o-a-objetos%'","CreationDate":"2015-02-18 22:28:32","validated":false,"QueryBody_Original":"SELECT  title, body, tags from Posts where \ntags like '%orienta\u00e7\u00e3o-a-objetos%'"},{"QuerySetId":273702,"Title":"Popular Unanswered Open Questions by View Count","Description":null,"QueryBody":"SELECT ViewCount FROM Posts WHERE AnswerCount IS NULL ORDER BY ViewCount DESC LIMIT 50","CreationDate":"2018-06-13 12:34:58","validated":false,"QueryBody_Original":"SELECT  TOP(50) ViewCount\nFROM Posts\nWHERE AnswerCount IS NULL\nORDER BY ViewCount DESC"},{"QuerySetId":273719,"Title":"How effective is the tour?","Description":null,"QueryBody":"SELECT Posts.Score AS Score, SUM(CASE WHEN Posts.CreationDate <= COALESCE(Badges.Date, CURRENT_TIMESTAMP()) THEN 1 ELSE 0 END) AS TouredFirst, SUM(CASE WHEN Posts.CreationDate > COALESCE(Badges.Date, CURRENT_TIMESTAMP()) THEN 1 ELSE 0 END) AS TouredLater FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id LEFT JOIN Badges ON Badges.UserId = Users.Id WHERE Badges.Name = 'Informed' AND Posts.Score < 20 AND Posts.Score >= -10 GROUP BY Posts.Score ORDER BY Posts.Score","CreationDate":"2015-02-16 02:48:28","validated":false,"QueryBody_Original":"SELECT  Posts.Score AS Score, \n  SUM(CASE WHEN Posts.CreationDate <= IsNull(Badges.Date, GETDATE()) THEN 1 ELSE 0 END) AS TouredFirst,\n  SUM(CASE WHEN Posts.CreationDate > IsNull(Badges.Date, GETDATE()) THEN 1 ELSE 0 END) AS TouredLater\nFROM Posts \nINNER JOIN Users ON Posts.OwnerUserId = Users.Id\nLEFT JOIN Badges ON Badges.UserId = Users.Id\nWHERE Badges.Name = 'Informed' AND Posts.Score < 20 AND Posts.Score >= -10\nGROUP BY Posts.Score\nORDER BY Posts.Score ASC"},{"QuerySetId":273738,"Title":"Limiting Posts by Date (Tutorial)","Description":null,"QueryBody":"SELECT Title, Id, PostTypeId FROM Posts WHERE CreationDate BETWEEN '2014-07-01' AND '2014-07-31'","CreationDate":"2015-02-16 04:06:43","validated":false,"QueryBody_Original":"SELECT  Title, Id, PostTypeId\nFROM Posts\nWHERE CreationDate BETWEEN '2014-07-01' AND '2014-07-31'\n\n-- But some posts have no titles -- why is that? Check PostTypeId.\n-- Not all items have all data types -- answers don't have titles.\n\n-- Uncomment the next line to filter the data to only show questions\n-- AND PostTypeId = 1\n\n\n-- Query written by jmac"},{"QuerySetId":273888,"Title":"Search inside comments of specific user (now case insensitive :))","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Score, \"Text\", CreationDate FROM Comments WHERE LOWER(\"Text\") LIKE LOWER('%http:%') ORDER BY Score DESC, CreationDate DESC LIMIT 100","CreationDate":"2019-05-10 17:50:01","validated":false,"QueryBody_Original":"SELECT  Top 100 PostId As [Post Link], Score, [Text], CreationDate From Comments\nWhere Lower([Text]) Like Lower('%http:%')\nOrder By Score Desc, CreationDate Desc"},{"QuerySetId":273939,"Title":"new answers from the last 48 hours to upvote","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", DATEDIFF(a.CreationDate, CURRENT_TIMESTAMP()) AS \"Time Difference\" FROM Posts AS a INNER JOIN Posts AS q ON a.ParentId = q.Id WHERE DATEDIFF(a.CreationDate, CURRENT_TIMESTAMP()) <= 48 ORDER BY RAND()","CreationDate":"2015-02-16 20:22:07","validated":false,"QueryBody_Original":"SELECT \n    a.Id AS [Post Link],\n    DATEDIFF(hour, GETDATE(), a.CreationDate) AS [Time Difference]\n\nFROM\n    Posts a INNER JOIN Posts q ON a.ParentId = q.Id\n\nWHERE\nDATEDIFF(hour, GETDATE(), a.CreationDate) <= 48\n\nORDER BY\nRAND()"},{"QuerySetId":273940,"Title":"new answers from the last 48 hours","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", DATEDIFF(CURRENT_TIMESTAMP(), a.CreationDate) AS \"Time Difference\", a.CreationDate FROM Posts AS a INNER JOIN Posts AS q ON a.ParentId = q.Id WHERE DATEDIFF(CURRENT_TIMESTAMP(), a.CreationDate) <= 48 ORDER BY a.CreationDate DESC","CreationDate":"2015-02-16 20:43:29","validated":false,"QueryBody_Original":"SELECT \n    a.Id AS [Post Link],\n    DATEDIFF(hour, a.CreationDate, GETDATE()) AS [Time Difference], a.CreationDate\n\nFROM\n    Posts a INNER JOIN Posts q ON a.ParentId = q.Id\n\nWHERE\n    DATEDIFF(hour, a.CreationDate, GETDATE()) <= 48\n\nORDER BY\na.CreationDate DESC"},{"QuerySetId":273959,"Title":"My position from Austrian users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS seqnum, Id AS \"UserId\", Reputation FROM Users WHERE LOWER(Location) LIKE '%germany%'","CreationDate":"2015-02-16 21:48:20","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS seqnum, \n             Id AS [UserId], \n             Reputation\n      FROM Users\n      WHERE LOWER(Location) LIKE '%germany%'"},{"QuerySetId":274347,"Title":"Find users eligible for moderator nomination","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation FROM Users WHERE Reputation >= 3000 AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Civic Duty') AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Strunk & White') AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Deputy') AND EXISTS(SELECT Id FROM Badges AS b WHERE b.UserId = Users.Id AND b.Name = 'Convention') ORDER BY DisplayName","CreationDate":"2015-02-18 06:28:59","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, Reputation\n FROM Users\n WHERE Reputation >= 3000\n   AND EXISTS (SELECT Id FROM Badges b WHERE b.UserId = Users.Id AND b.Name = 'Civic Duty')\n   AND EXISTS (SELECT Id FROM Badges b WHERE b.UserId = Users.Id AND b.Name = 'Strunk & White')\n   AND EXISTS (SELECT Id FROM Badges b WHERE b.UserId = Users.Id AND b.Name = 'Deputy')\n   AND EXISTS (SELECT Id FROM Badges b WHERE b.UserId = Users.Id AND b.Name = 'Convention')\nORDER BY DisplayName ASC"},{"QuerySetId":274785,"Title":"Stuff Ids inside user names","Description":null,"QueryBody":"SELECT STUFF(DisplayName, 5, 0, Id) FROM Users ORDER BY Reputation DESC LIMIT 100","CreationDate":"2015-02-18 23:17:37","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  STUFF(DisplayName, 5, 0, Id)\nFROM Users\nORDER BY Reputation DESC"},{"QuerySetId":276432,"Title":"Top answers for unresolved questions","Description":null,"QueryBody":"SELECT p1.ParentId, p1.Id FROM Posts AS p1 WHERE p1.ParentId IN (SELECT Id FROM Posts AS p2 WHERE p2.PostTypeId = 1 AND p2.AcceptedAnswerId IS NULL AND p2.AnswerCount > 10 AND p2.CreationDate < '2014-08-18') AND p1.Score = (SELECT MAX(Score) FROM Posts WHERE ParentId = p1.ParentId) ORDER BY p1.ParentId","CreationDate":"2015-02-20 07:37:40","validated":false,"QueryBody_Original":"SELECT  p1.ParentId, p1.Id from Posts as p1\n\nwhere p1.ParentId in (\n\nSELECT Id from Posts as p2\nwhere\np2.PostTypeId=1 and \np2.AcceptedAnswerId is null\nand p2.AnswerCount>10\nand p2.CreationDate< '2014-08-18'\n)\nand \n\np1.Score=(SELECT max(Score) from Posts where ParentId=p1.ParentId)\n\n--group by p1.ParentId\norder by p1.ParentId"},{"QuerySetId":276452,"Title":"Answer details for solved questions","Description":null,"QueryBody":"SELECT Id, Score FROM Posts WHERE Id IN (SELECT AcceptedAnswerId FROM Posts \/* , Users *\/ WHERE PostTypeId \/* OwnerUserId=Users.Id *\/ \/* and *\/ = 1 AND AcceptedAnswerId \/* Score>0 *\/ \/* and *\/ > 0 AND AnswerCount > 15 AND Posts.CreationDate < '2014-08-18')","CreationDate":"2015-02-21 07:02:16","validated":false,"QueryBody_Original":"SELECT  Id, Score from Posts where Id in\n(\nSELECT AcceptedAnswerId\nfrom Posts\n--, Users\nwhere \n--OwnerUserId=Users.Id\n--and\nPostTypeId=1 and \n--Score>0\n--and \nAcceptedAnswerId>0\nand AnswerCount>15\nand Posts.CreationDate< '2014-08-18')\n\n\n\/*SELECT Id, Body from Posts where Id in\n(\nSELECT AcceptedAnswerId\nfrom Posts\n--, Users\nwhere \n--OwnerUserId=Users.Id\n--and\nPostTypeId=1 and \n--Score>0\n--and \nAcceptedAnswerId>0\nand AnswerCount>15\nand Posts.CreationDate< '2014-08-18')*\/"},{"QuerySetId":277070,"Title":"Number of closes per week the last year","Description":null,"QueryBody":"SELECT TIME_TO_STR(ClosedDate, '%W') AS \"Week\", COUNT(*) AS \"Number of Closed Questions\" FROM Posts WHERE PostTypeId = 1 \/* question *\/ AND NOT ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), ClosedDate) < DATEDIFF(CURRENT_TIMESTAMP(), 'Jan 1, 2015') GROUP BY TIME_TO_STR(ClosedDate, '%W') ORDER BY TIME_TO_STR(ClosedDate, '%W')","CreationDate":"2015-02-22 00:58:34","validated":false,"QueryBody_Original":"SELECT \n  datepart(week, ClosedDate) AS [Week], \n  COUNT(*) AS [Number of Closed Questions]\nFROM Posts\nWHERE PostTypeId = 1 -- question\n  AND ClosedDate IS NOT NULL\n  AND DATEDIFF(DAY, ClosedDate, GETDATE()) < DATEDIFF(DAY, 'Jan 1, 2015', GETDATE())\nGROUP BY datepart(week, ClosedDate)\nORDER BY datepart(week, ClosedDate)"},{"QuerySetId":278531,"Title":"Top 200 users from Uzbekistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%uzb%' OR UPPER(Location) LIKE '%uzb' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-03-16 12:55:23","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%uzb%'\n    OR UPPER(Location) LIKE '%uzb'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":278622,"Title":"Top users by country ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Age FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%') ORDER BY Reputation DESC","CreationDate":"2015-02-25 14:16:04","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Age\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##CountryName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":279049,"Title":"Question score by week number","Description":"Questions with at least one answer, grouped by UTC hour.\r\n","QueryBody":"SELECT COUNT(*) AS \"Total questions\", OwnerUserId AS \"User ID\" FROM Posts WHERE PostTypeId = 1 AND Score < 0 GROUP BY OwnerUserId ORDER BY OwnerUserId","CreationDate":"2015-03-14 14:53:01","validated":false,"QueryBody_Original":"SELECT  \n    Count(*) AS [Total questions],\n    OwnerUserId AS [User ID]\nFROM Posts\nWHERE PostTypeId = 1 AND Score < 0\nGROUP BY OwnerUserId\nORDER BY OwnerUserId"},{"QuerySetId":281726,"Title":"See when tags were created","Description":null,"QueryBody":"SELECT t.TagName, p.CreationDate FROM Tags AS t INNER JOIN Posts AS p ON t.WikiPostId = p.Id ORDER BY p.CreationDate DESC LIMIT 100","CreationDate":"2015-03-02 14:56:21","validated":false,"QueryBody_Original":"SELECT  Top 100 t.TagName, p.CreationDate\nFrom Tags t Inner Join Posts p On t.WikiPostId=p.Id\nOrder By p.CreationDate Desc"},{"QuerySetId":282596,"Title":"Get All Notable Questions group by user","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", COUNT(p.Id) AS Questions FROM posts AS p JOIN users AS u ON u.Id = p.OwnerUserId WHERE p.posttypeid = 1 AND p.viewcount >= 2500 GROUP BY u.id ORDER BY COUNT(p.Id) DESC","CreationDate":"2015-03-04 14:50:34","validated":false,"QueryBody_Original":"SELECT  u.id AS [User Link], count(p.Id) AS Questions\nFROM posts p\njoin users u ON u.Id = p.OwnerUserId\nWHERE p.posttypeid = 1 and p.viewcount >= 2500\nGROUP BY u.id\nORDER BY count(p.Id) DESC"},{"QuerySetId":282785,"Title":"Find the 3k rep members who haven't reviewed","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\", U.Reputation AS \"Rep\" FROM Users AS U WHERE U.Reputation >= 3000 AND NOT EXISTS(SELECT * FROM Badges AS B WHERE B.Name = 'Custodian' AND B.UserId = U.Id) GROUP BY U.Id, U.Reputation ORDER BY U.Reputation","CreationDate":"2015-03-20 20:29:54","validated":false,"QueryBody_Original":"SELECT  U.Id AS [User Link], U.Reputation as [Rep]\n\nFROM Users U\n   WHERE U.Reputation >= 3000\n   AND NOT EXISTS(SELECT * FROM Badges B WHERE B.Name = 'Custodian' AND B.UserId = U.Id)\n   GROUP BY U.Id, U.Reputation\n   ORDER BY U.Reputation ASC"},{"QuerySetId":282954,"Title":"comments like accept rate - 1 flag auto-nuke","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.Score, c.CreationDate FROM Comments AS c INNER JOIN Posts AS q ON q.Id = c.PostId WHERE q.PostTypeId = 1 AND q.ViewCount > 200 AND c.Text LIKE '%accept rate%' COLLATE SQL_Latin1_General_CP1_CI_AS ORDER BY c.Score DESC, q.ViewCount DESC","CreationDate":"2015-03-09 06:36:46","validated":false,"QueryBody_Original":"SELECT \n    c.Id AS [Comment Link],\n    c.Score,\n    c.CreationDate\nFROM\n    Comments c\nINNER JOIN\n    Posts q\nON\n    q.Id = c.PostId\nWHERE\n    q.PostTypeId = 1\n  and\n    q.ViewCount > 200\n  and\n    c.Text LIKE '%accept rate%' COLLATE SQL_Latin1_General_CP1_CI_AS\nORDER BY\n  c.Score DESC, q.ViewCount DESC"},{"QuerySetId":282972,"Title":"Average upvotes and downvotes, number of 'active' users by location","Description":"Any user who has more than 14 reputation is considered 'active'","QueryBody":"SELECT COUNT(id) AS c, AVG(upvotes), AVG(downvotes), location FROM users WHERE reputation > 14 \/* 15 is the threshold to vote up *\/ GROUP BY location ORDER BY c DESC","CreationDate":"2015-03-05 09:53:21","validated":false,"QueryBody_Original":"SELECT  count(id) as c, avg(upvotes), avg(downvotes), location\nfrom users\nwhere reputation > 14 --15 is the threshold to vote up\ngroup by location\norder by  c desc"},{"QuerySetId":283001,"Title":"select *  from posts","Description":null,"QueryBody":"SELECT * FROM posts","CreationDate":"2015-03-05 12:16:02","validated":false,"QueryBody_Original":"SELECT  *  from posts"},{"QuerySetId":283065,"Title":"Top Moscow iOS users(search in AboutMe)","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%moscow%' AND (LOWER(AboutMe) LIKE '%ios%' OR LOWER(AboutMe) LIKE '%objectiv-c%' OR LOWER(AboutMe) LIKE '%swift%') ORDER BY Reputation DESC","CreationDate":"2015-03-05 16:49:12","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM \n    Users\nWHERE\n    LOWER(Location) LIKE '%moscow%' \n    AND\n    (\n      LOWER(AboutMe) LIKE '%ios%' \n      OR \n      LOWER(AboutMe) LIKE '%objectiv-c%' \n      OR \n      LOWER(AboutMe) LIKE '%swift%'\n    )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":283214,"Title":"Tags that might need to be pluralized","Description":null,"QueryBody":"SELECT t.TagName FROM Tags AS t WHERE NOT t.TagName LIKE '%s'","CreationDate":"2015-03-06 01:22:29","validated":false,"QueryBody_Original":"SELECT  t.TagName FROM Tags t WHERE t.TagName NOT LIKE '%s'"},{"QuerySetId":284284,"Title":"users whose top-voted question was PTIJ","Description":null,"QueryBody":"SELECT p.owneruserid, MAX(p.score) FROM posts AS p WHERE p.posttypeid = 1 GROUP BY p.owneruserid","CreationDate":"2015-03-10 00:54:58","validated":false,"QueryBody_Original":"SELECT  p.owneruserid, max(p.score)\nfrom posts p\nwhere p.posttypeid = 1\ngroup by p.owneruserid"},{"QuerySetId":284809,"Title":"First Answer -> Good Answer How Soon?","Description":null,"QueryBody":"SELECT owneruserid, id FROM posts WHERE body LIKE ('%rowdsourcing%') AND posttypeid = 1 AND creationdate BETWEEN '2014-07-01' AND '2014-07-30' ORDER BY owneruserid","CreationDate":"2015-04-26 16:08:21","validated":false,"QueryBody_Original":"SELECT  owneruserid, id from posts\nwhere body like ('%rowdsourcing%') \nand posttypeid =1\nand creationdate between '2014-07-01' and '2014-07-30'\norder by owneruserid"},{"QuerySetId":284812,"Title":"Top developers in Saudi Arabia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, CreationDate, LastAccessDate, Views FROM Users WHERE LOWER(Location) LIKE '%saudi%' ORDER BY Reputation DESC","CreationDate":"2015-03-10 23:34:30","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    CreationDate,\n    LastAccessDate,\n    Views\nFROM\n    Users\nWHERE\n    LOWER(Location) like '%saudi%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":285560,"Title":"SELECT Title FROM Posts WHERE id=1","Description":null,"QueryBody":"SELECT Title FROM Posts WHERE id = 1","CreationDate":"2015-03-11 18:56:24","validated":false,"QueryBody_Original":"SELECT  Title FROM Posts WHERE id=1"},{"QuerySetId":285649,"Title":"Users from Switzerland with Posts tagged with Angular","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation, u.DisplayName, u.Location, p.Score, p.Id AS \"Post Link\" FROM Users AS u, Posts AS p WHERE u.Id = p.OwnerUserId AND (u.Location LIKE '%Schweiz%' OR u.Location LIKE '%Switzerland%' OR u.Location LIKE '%Zurich%' OR u.Location LIKE '%Z\u00fcrich%') AND p.Tags LIKE '%angular%' AND p.Score > 10 ORDER BY u.Reputation DESC","CreationDate":"2015-03-12 10:50:55","validated":false,"QueryBody_Original":"SELECT  u.Id [User Link], u.Reputation, u.DisplayName, u.Location, p.Score, p.Id [Post Link]\nFROM Users u, Posts p\nWHERE \n   u.Id = p.OwnerUserId\nAND (u.Location LIKE '%Schweiz%' \nOR u.Location LIKE '%Switzerland%' \nOR u.Location LIKE '%Zurich%'\nOR u.Location LIKE '%Z\u00fcrich%')\nAND p.Tags like '%angular%'\nAND p.Score > 10\nORDER BY u.Reputation DESC"},{"QuerySetId":285696,"Title":"All tags by count, tagname","Description":null,"QueryBody":"SELECT tagname, tags.count AS \"count\" FROM tags ORDER BY \"count\" DESC, tagname","CreationDate":"2015-03-12 08:59:04","validated":false,"QueryBody_Original":"SELECT  tagname, tags.count as [count]\nfrom tags\norder by [count] desc, tagname"},{"QuerySetId":285990,"Title":"earliest still available date for a tag to show up","Description":null,"QueryBody":"SELECT creationdate, text, posthistorytypeid, userid AS \"user10926745\", postid AS \"Post Link\" FROM posthistory WHERE posthistorytypeid IN (3, 6, 9) AND text LIKE '%<drupal>%' ORDER BY creationdate","CreationDate":"2019-01-17 13:41:58","validated":false,"QueryBody_Original":"SELECT  creationdate\n, text\n, posthistorytypeid\n, userid as [user10926745]\n, postid as [Post Link]\nfrom posthistory\nwhere posthistorytypeid in(3,6,9)\nand text like '%<drupal>%'\norder by creationdate"},{"QuerySetId":286013,"Title":"Investigating the utility of getting Informed","Description":null,"QueryBody":"SELECT SUM(CASE WHEN b.id IS NULL THEN 1 ELSE 0 END) AS Nuninf, SUM(CASE WHEN NOT b.id IS NULL THEN 1 ELSE 0 END) AS Ninf, SUM(CASE WHEN b.id IS NULL THEN p.score ELSE 0 END) * 1.0 \/ SUM(CASE WHEN b.id IS NULL THEN 1 ELSE 0 END) AS AvgScoreUninf, SUM(CASE WHEN NOT b.id IS NULL THEN p.score ELSE 0 END) * 1.0 \/ SUM(CASE WHEN NOT b.id IS NULL THEN 1 ELSE 0 END) AS AvgScoreInf FROM posts AS p LEFT OUTER JOIN badges AS b ON b.userid = p.owneruserid AND b.name = 'Informed' AND b.date < p.creationdate","CreationDate":"2015-03-13 01:16:21","validated":false,"QueryBody_Original":"SELECT \n    sum(case when b.id is null then 1 else 0 end) as Nuninf\n  , sum(case when b.id is not null then 1 else 0 end) as Ninf\n  , sum(case when b.id is null then p.score else 0 end) * 1.0\n    \/ sum(case when b.id is null then 1 else 0 end)\n    as AvgScoreUninf\n  , sum(case when b.id is not null then p.score else 0 end) * 1.0\n    \/ sum(case when b.id is not null then 1 else 0 end)\n    as AvgScoreInf\nfrom posts p\nleft outer join badges b\non b.userid = p.owneruserid\nand b.name = 'Informed'\nand b.date < p.creationdate"},{"QuerySetId":286781,"Title":"Questions with 5 close votes","Description":null,"QueryBody":"SELECT postid AS \"Post Link\" FROM votes WHERE votetypeid = 6 AND creationdate > '2015-01-01' GROUP BY postid HAVING SUM(1) = 4","CreationDate":"2015-04-01 23:27:24","validated":false,"QueryBody_Original":"SELECT  postid as [Post Link]\nfrom votes \nwhere votetypeid = 6 and creationdate > '2015-01-01'\ngroup by postid\nhaving sum(1) = 4"},{"QuerySetId":286799,"Title":"Most Prolific Editors (Last Editor)","Description":null,"QueryBody":"SELECT Id AS \"User Link\", (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS LastQuestionEditorEdits, (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 2 AND LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS LastAnswerEditorEdits, (SELECT COUNT(*) FROM Posts WHERE LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS TotalLastEditorEdits FROM Users WHERE (SELECT COUNT(*) FROM Posts WHERE LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) > 0 ORDER BY TotalLastEditorEdits DESC","CreationDate":"2015-03-14 21:09:54","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link],\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            PostTypeId = 1 AND\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS LastQuestionEditorEdits,\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            PostTypeId = 2 AND\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS LastAnswerEditorEdits,\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS TotalLastEditorEdits\n    FROM Users\n    WHERE (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) > 0\n    ORDER BY TotalLastEditorEdits DESC"},{"QuerySetId":286810,"Title":"Users with reputation at least 15","Description":null,"QueryBody":"SELECT COUNT(*) AS ReppedUsers FROM Users WHERE Reputation >= 15","CreationDate":"2015-03-14 21:23:23","validated":false,"QueryBody_Original":"SELECT  \n    -- Id, DisplayName, Reputation\n    COUNT(*) AS ReppedUsers\nFROM Users\nWHERE \n    Reputation >= 15\n-- ORDER BY Reputation DESC"},{"QuerySetId":286814,"Title":"Count of users with < 15 rep","Description":null,"QueryBody":"SELECT COUNT(CASE WHEN Reputation < 15 THEN 1 END) AS \"< 15\", COUNT(*) AS total, COUNT(CASE WHEN Reputation < 15 THEN 1 END) \/ CAST(COUNT(*) AS FLOAT) AS ratio FROM Users","CreationDate":"2015-09-04 14:09:25","validated":false,"QueryBody_Original":"SELECT  \n  COUNT(CASE WHEN Reputation < 15 THEN 1 END) AS \"< 15\",\n  COUNT(*) AS total,\n  \/* TODO reuse the above. *\/\n  COUNT(CASE WHEN Reputation < 15 THEN 1 END) \/ CAST(COUNT(*) AS FLOAT) AS ratio\nFROM\n  Users"},{"QuerySetId":286817,"Title":"Reputation of users created over time","Description":null,"QueryBody":"SELECT t.Year, t.Month, AVG(t.Reputation) AS AvgReputation, MAX(t.Reputation) AS MaxReputation FROM (SELECT TIME_TO_STR(CreationDate, '%Y') AS Year, TIME_TO_STR(CreationDate, '%m') AS Month, TIME_TO_STR(CreationDate, '%d') AS Day, Reputation FROM Users WHERE Reputation >= 15) AS t GROUP BY YEAR, Month ORDER BY YEAR DESC, Month DESC","CreationDate":"2015-03-14 22:24:53","validated":false,"QueryBody_Original":"SELECT \n  t.Year,\n  t.Month,\n  Avg(t.Reputation) As AvgReputation,\n  Max(t.Reputation) AS MaxReputation\nFROM\n  (\n  SELECT\n      DATEPART(year,CreationDate) AS Year,\n      DATEPART(month,CreationDate) AS Month,\n      DATEPART(day,CreationDate) AS Day,\n      Reputation\n  FROM Users\n  WHERE Reputation >= 15\n  ) AS t\nGROUP BY YEAR, Month\nORDER BY YEAR DESC, Month DESC"},{"QuerySetId":287082,"Title":"Open questions with lame titles CORRECT, GRAMM, RIGHT","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, AnswerCount FROM Posts WHERE posttypeid = 1 AND (title LIKE '%standard%') AND ClosedDate IS NULL ORDER BY Score, AnswerCount","CreationDate":"2019-09-16 15:31:55","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Score, AnswerCount\n    from Posts\n    where   posttypeid = 1\n        and (title like '%standard%'\n        )     \n        and ClosedDate is   null\n    order by Score asc, AnswerCount asc"},{"QuerySetId":287117,"Title":"Closed questions with negative scores","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", score, ClosedDate FROM Posts WHERE PostTypeID = 1 AND NOT ClosedDate IS NULL AND Score < 0 ORDER BY score","CreationDate":"2015-03-16 06:59:58","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], score, ClosedDate from Posts\n   where PostTypeID = 1\n     and ClosedDate is not null\n     and Score < 0\n   order by score asc"},{"QuerySetId":288464,"Title":"SELECT TOP 10 * FROM users","Description":null,"QueryBody":"SELECT CommentCount, ClosedDate, LastActivityDate FROM Posts LIMIT 10","CreationDate":"2015-03-17 19:28:01","validated":false,"QueryBody_Original":"SELECT  TOP 10 CommentCount, ClosedDate, LastActivityDate\nFROM Posts"},{"QuerySetId":288675,"Title":"SELECT TOP 10 FROM Users","Description":null,"QueryBody":"SELECT CreationDate FROM Users ORDER BY CreationDate LIMIT 10","CreationDate":"2015-03-17 20:04:52","validated":false,"QueryBody_Original":"SELECT  TOP 10 CreationDate FROM Users\nORDER BY CreationDate ASC"},{"QuerySetId":289335,"Title":"SELECT nvarch  FROM Users","Description":null,"QueryBody":"SELECT MIN(id) FROM users","CreationDate":"2015-03-18 13:33:21","validated":false,"QueryBody_Original":"SELECT  min (id) from users"},{"QuerySetId":289468,"Title":"Les 7 premiers utilisateurs ayant 30 ans","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE age = 30 ORDER BY DisplayName LIMIT 7","CreationDate":"2015-03-18 12:52:51","validated":false,"QueryBody_Original":"SELECT  TOP 7 DisplayName\nFROM Users\nWHERE age = 30\nORDER BY DisplayName"},{"QuerySetId":290097,"Title":"SO - Total Posts per Month","Description":null,"QueryBody":"SELECT CONCAT(YEAR(P.CreationDate), '-', MONTH(P.CreationDate)) AS YearMonth, COUNT(*) AS PostCount FROM POSTS AS P GROUP BY YEAR(P.CreationDate), MONTH(P.CreationDate) ORDER BY YEAR(P.CreationDate) DESC, MONTH(P.CreationDate) DESC","CreationDate":"2015-03-18 20:35:48","validated":false,"QueryBody_Original":"SELECT  CONCAT(year(P.CreationDate), '-', month(P.CreationDate)) as YearMonth, COUNT(*) as PostCount\nFROM POSTS P\nGROUP BY year(P.CreationDate), month(P.CreationDate)\nORDER BY year(P.CreationDate) DESC, month(P.CreationDate) DESC"},{"QuerySetId":290537,"Title":"select * from Users where 1=1 ORDER BY reputation DESC","Description":null,"QueryBody":"SELECT * FROM Users\/* and displayName like 'gord%' *\/  WHERE 1 = 1 AND UPPER(Location) LIKE '%, AL' ORDER BY reputation DESC","CreationDate":"2015-03-19 06:44:10","validated":false,"QueryBody_Original":"SELECT  *\nfrom Users\nwhere 1=1\n  --and displayName like 'gord%'\n  AND UPPER(Location) LIKE '%, AL'\n  --AND AboutMe LIKE '%C#%'\nORDER BY reputation DESC"},{"QuerySetId":290594,"Title":"accept rate 1 flag auto-nuke","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.Score, c.CreationDate FROM Comments AS c WHERE c.CreationDate < '2014-01-22T00:00:00.000' AND c.Text LIKE '%accept%' AND (c.Text LIKE '%accept rate%' COLLATE SQL_Latin1_General_CP1_CI_AS OR c.Text LIKE '%acceptrate%' COLLATE SQL_Latin1_General_CP1_CI_AS OR c.Text LIKE '%acceptance rate%' COLLATE SQL_Latin1_General_CP1_CI_AS OR c.Text LIKE '%acceptancerate%' COLLATE SQL_Latin1_General_CP1_CI_AS) ORDER BY c.Score DESC","CreationDate":"2015-03-22 13:55:14","validated":false,"QueryBody_Original":"SELECT \n    c.Id AS [Comment Link],\n    c.Score,\n    c.CreationDate\nFROM\n    Comments c\nWHERE\n    c.CreationDate < '2014-01-22T00:00:00.000'\n   AND\n    c.Text LIKE '%accept%'\n   AND (\n    c.Text LIKE '%accept rate%' COLLATE SQL_Latin1_General_CP1_CI_AS\n   OR\n    c.Text LIKE '%acceptrate%' COLLATE SQL_Latin1_General_CP1_CI_AS\n   OR\n    c.Text LIKE '%acceptance rate%' COLLATE SQL_Latin1_General_CP1_CI_AS\n   OR\n    c.Text LIKE '%acceptancerate%' COLLATE SQL_Latin1_General_CP1_CI_AS\n    )\nORDER BY\n  c.Score DESC"},{"QuerySetId":291190,"Title":"Up votes and down votes, questions and answers","Description":null,"QueryBody":"SELECT CASE WHEN p.PostTypeId = 1 THEN 'Questions' ELSE 'Answers' END AS \"Post Type\", CASE WHEN v.VoteTypeId = 2 THEN 'Up Votes' ELSE 'Down Votes' END AS \"Vote Type\", COUNT(*) AS \"Count\" FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId\/* upvotes (2) and downvotes (3) only *\/ \/* questions (1) and answers (2) only: *\/  WHERE p.ClosedDate IS NULL AND (p.PostTypeId = 1 OR p.PostTypeId = 2) AND (v.VoteTypeId = 2 OR v.VoteTypeId = 3) GROUP BY p.PostTypeId, v.VoteTypeId","CreationDate":"2015-03-21 03:40:59","validated":false,"QueryBody_Original":"SELECT \n  -- the kruft here is just for pretty output formatting\n  IIF(p.PostTypeId = 1, 'Questions', 'Answers') AS [Post Type],\n  IIF(v.VoteTypeId = 2, 'Up Votes', 'Down Votes') AS [Vote Type],\n  COUNT(*) AS [Count]\nFROM\n  Posts p INNER JOIN Votes v ON p.Id = v.PostId\nWHERE\n  -- open questions only (roughly):\n  p.ClosedDate IS NULL \n  -- questions (1) and answers (2) only:\n  AND (p.PostTypeId = 1 OR p.PostTypeId = 2) \n  -- upvotes (2) and downvotes (3) only\n  AND (v.VoteTypeId = 2 OR v.VoteTypeId = 3) \nGROUP BY\n  -- group into questions + answers and upvotes + downvotes for counting\n  p.PostTypeId, v.VoteTypeId"},{"QuerySetId":291280,"Title":"votes on Questions and Answers","Description":null,"QueryBody":"SELECT CASE WHEN p.PostTypeId = 1 THEN 'Questions' ELSE 'Answers' END AS \"Post Type\", CASE WHEN v.VoteTypeId = 2 THEN 'Up Votes' ELSE 'Down Votes' END AS \"Vote Type\", COUNT(*) AS \"Count\" FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId\/* upvotes (2) and downvotes (3) only *\/ \/* questions (1) and answers (2) only: *\/  WHERE p.ClosedDate IS NULL AND (p.PostTypeId = 1 OR p.PostTypeId = 2) AND (v.VoteTypeId = 2 OR v.VoteTypeId = 3) GROUP BY p.PostTypeId, v.VoteTypeId","CreationDate":"2015-03-21 15:21:53","validated":false,"QueryBody_Original":"SELECT \n  -- the kruft here is just for pretty output formatting\n  IIF(p.PostTypeId = 1, 'Questions', 'Answers') AS [Post Type],\n  IIF(v.VoteTypeId = 2, 'Up Votes', 'Down Votes') AS [Vote Type],\n  COUNT(*) AS [Count]\nFROM\n  Posts p INNER JOIN Votes v ON p.Id = v.PostId\nWHERE\n  -- open questions only (roughly):\n  p.ClosedDate IS NULL \n  -- questions (1) and answers (2) only:\n  AND (p.PostTypeId = 1 OR p.PostTypeId = 2) \n  -- upvotes (2) and downvotes (3) only\n  AND (v.VoteTypeId = 2 OR v.VoteTypeId = 3) \nGROUP BY\n  -- group into questions + answers and upvotes + downvotes for counting\n  p.PostTypeId, v.VoteTypeId"},{"QuerySetId":291327,"Title":"SELECT TOP 10 * FROM Users","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%Nigeria%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2015-03-21 17:01:57","validated":false,"QueryBody_Original":"SELECT  TOP 10 * FROM Users WHERE Location LIKE '%Nigeria%' ORDER BY Reputation DESC"},{"QuerySetId":291975,"Title":"obtain top 987 closed questions","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY score DESC, viewcount DESC) AS row, score, viewcount, answercount, favoritecount, id AS \"Post Link\", creationdate, closeddate, tags FROM posts WHERE NOT closeddate IS NULL AND score > -5 AND answercount = 0 AND viewcount > 70 ORDER BY score, viewcount LIMIT 987","CreationDate":"2019-02-17 20:14:06","validated":false,"QueryBody_Original":"SELECT  TOP 987\n  ROW_NUMBER() OVER (ORDER BY score DESC, viewcount DESC) AS row,\n  score, viewcount, answercount, favoritecount,\n  id as [Post Link], creationdate, closeddate, tags\nFROM posts\nWHERE closeddate IS NOT NULL AND score > -5 AND answercount = 0 AND viewcount > 70\nORDER BY score ASC, viewcount ASC"},{"QuerySetId":291996,"Title":"Unprotected questions with an accepted answer that are over three years old","Description":"Got this working! Wahooo!","QueryBody":"SELECT unprotected.PostId AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Posts.CreationDate, Posts.LastActivityDate, Posts.Score FROM Posts, (SELECT DISTINCT PostID FROM PostHistory WHERE PostHistoryTypeID <> 19) AS unprotected WHERE unprotected.PostId = Posts.Id AND DATEDIFF(CURRENT_TIMESTAMP(), Posts.CreationDate) > 1095 AND Posts.ClosedDate IS NULL AND NOT Posts.AcceptedAnswerId IS NULL ORDER BY CreationDate","CreationDate":"2015-05-15 19:31:54","validated":false,"QueryBody_Original":"SELECT \n  unprotected.PostId AS [Post Link],\n  Posts.OwnerUserId AS [User Link],\n  Posts.CreationDate,\n  Posts.LastActivityDate,\n  Posts.Score\nFROM\n  Posts,\n  (SELECT DISTINCT PostID\n    FROM PostHistory\n    WHERE PostHistoryTypeID <> 19\n  ) unprotected\nWHERE\n  unprotected.PostId = Posts.Id and\n  DATEDIFF(day, Posts.CreationDate, CURRENT_TIMESTAMP) > 1095 and\n  Posts.ClosedDate is null and\n  Posts.AcceptedAnswerId is not null\nORDER BY\n  CreationDate"},{"QuerySetId":292081,"Title":"Display Posts By Votes For Tag in Timerange","Description":null,"QueryBody":"SELECT RANK() OVER (ORDER BY SCORE DESC, ViewCount DESC), Title, b.DisplayName AS UserName, Score, ViewCount, CAST(TIME_TO_STR(a.CreationDate, '%d\/%m\/%Y') AS TEXT(30)) AS Date, Tags FROM Posts AS a INNER JOIN Users AS b ON a.OwnerUserId = b.Id WHERE a.CreationDate BETWEEN '03-09-2015' AND '03-22-2015' AND PostTypeId = 1 AND Tags LIKE '%creature-design%' ORDER BY Score DESC, ViewCount DESC","CreationDate":"2015-03-24 06:06:57","validated":false,"QueryBody_Original":"SELECT  \nrank() over (ORDER BY SCORE DESC, ViewCount DESC)\n  ,Title\n  ,b.DisplayName as UserName\n  ,Score\n  ,ViewCount\n  ,convert(varchar, a.CreationDate, 103) as Date\n  ,Tags\nFROM Posts a\nINNER JOIN Users b ON a.OwnerUserId = b.Id\nWHERE\n  a.CreationDate between '03-09-2015' and '03-22-2015'\n  and PostTypeId = 1\n  and Tags like '%creature-design%' \nORDER BY Score DESC, ViewCount DESC"},{"QuerySetId":292580,"Title":"Users who visited in the last day","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Num of Recent Visitors\" FROM Users WHERE LastAccessDate > CURRENT_TIMESTAMP() - 34","CreationDate":"2015-03-25 09:08:30","validated":false,"QueryBody_Original":"SELECT  count(*) as \"Num of Recent Visitors\"\nfrom Users\nwhere LastAccessDate > GETDATE() - 34"},{"QuerySetId":293139,"Title":"my posts edited by someone else","Description":null,"QueryBody":"SELECT id, title FROM posts WHERE ownerUserId = 499 AND lastEditorUserId <> 499","CreationDate":"2020-04-06 02:08:44","validated":false,"QueryBody_Original":"SELECT  id,title \nfrom posts\nwhere ownerUserId =499\nand lastEditorUserId <> 499"},{"QuerySetId":293227,"Title":"Count of posts' and votes' sorted by rep","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, u.UpVotes, u.DownVotes, q.QuestionsCount, a.AnswersCount, u.Reputation \/ a.AnswersCount AS RepPerAnswer FROM Users AS u JOIN (SELECT COUNT(1) AS QuestionsCount, OwnerUserId FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId) AS q ON u.id = q.OwnerUserId JOIN (SELECT COUNT(1) AS AnswersCount, OwnerUserId FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS a ON u.id = a.OwnerUserId ORDER BY u.Reputation DESC","CreationDate":"2015-05-11 20:54:45","validated":false,"QueryBody_Original":"SELECT \n  u.DisplayName,\n  u.Reputation,\n  u.UpVotes,\n  u.DownVotes,\n  q.QuestionsCount,\n  a.AnswersCount,\n  u.Reputation \/ a.AnswersCount as RepPerAnswer\nfrom Users u\njoin\n(\n    SELECT\n      count(1) as QuestionsCount,\n      OwnerUserId\n    from Posts\n    where PostTypeId = 1\n    group by OwnerUserId\n) q\n  on u.id = q.OwnerUserId\njoin\n(\n    SELECT\n      count(1) as AnswersCount,\n      OwnerUserId\n    from Posts\n    where PostTypeId = 2\n    group by OwnerUserId\n) a\n  on u.id = a.OwnerUserId\norder by u.Reputation desc"},{"QuerySetId":293299,"Title":"Total view counts of all closed questions","Description":null,"QueryBody":"SELECT SUM(CAST(ViewCount AS INT)) FROM Posts WHERE PostTypeId = 1 AND (Posts.CreationDate BETWEEN '2013-01-01' AND '2017-12-31')","CreationDate":"2018-11-06 07:33:21","validated":false,"QueryBody_Original":"SELECT   Sum(Cast(ViewCount as bigint)) FROM Posts WHERE PostTypeId = 1\nAND (Posts.CreationDate between'2013-01-01' and '2017-12-31')"},{"QuerySetId":293300,"Title":"Total view count of questions closed as duplicates","Description":null,"QueryBody":"SELECT COUNT(DISTINCT p.Id) AS \"# Duplicates\" FROM Posts AS p INNER JOIN PostLinks AS pl ON pl.PostId = p.Id WHERE pl.LinkTypeId = 3 AND NOT p.ClosedDate IS NULL","CreationDate":"2015-04-15 01:39:58","validated":false,"QueryBody_Original":"SELECT  count(distinct p.Id) as [# Duplicates]\nfrom Posts p \ninner join  PostLinks pl \non pl.PostId = p.Id\nwhere pl.LinkTypeId = 3 and p.ClosedDate is not null"},{"QuerySetId":293439,"Title":"Questions needing attention to avoid Roomba carnage","Description":null,"QueryBody":"SELECT CommentCount, COUNT(*) FROM Posts\/* and AnswerCount = 0 *\/  WHERE PostTypeId = 1 AND Score = 0 AND ClosedDate IS NULL GROUP BY CommentCount","CreationDate":"2016-12-25 04:48:47","validated":false,"QueryBody_Original":"SELECT  CommentCount,  COUNT(*) \nfrom Posts\nwhere PostTypeId = 1 \n  and Score = 0 \n  -- and AnswerCount = 0\n  and ClosedDate IS NULL\n GROUP BY CommentCount\n-- order by CreationDate asc"},{"QuerySetId":293748,"Title":"Site-wide rep gain per answer score","Description":null,"QueryBody":"SELECT CASE WHEN score > 50 THEN 50 ELSE score END AS bucket, SUM(score * 10 + CASE WHEN AcceptedAnswerId IS NULL THEN 15 ELSE 0 END) AS REP FROM posts WHERE PostTypeId = 2 AND score >= 0 GROUP BY CASE WHEN score > 50 THEN 50 ELSE score END ORDER BY CASE WHEN score > 50 THEN 50 ELSE score END","CreationDate":"2015-03-28 18:02:26","validated":false,"QueryBody_Original":"SELECT \n  IIF(score > 50, 50, score) AS bucket,\n  SUM(score * 10 + CASE WHEN AcceptedAnswerId IS NULL THEN 15 ELSE 0 END) AS REP\nFROM\n  posts\nWHERE\n  PostTypeId = 2\n  AND score >= 0\nGROUP BY\n  IIF(score > 50, 50, score)\nORDER BY\n  IIF(score > 50, 50, score)"},{"QuerySetId":293954,"Title":"Emacs questions across Stack Exchange, per month","Description":"Number of questions posted each month about Emacs across Stack Exchange.\r\nAll questions from Emacs Stack Exchange are included, as well as questions tagged [emacs*], [elisp] or [org-mode] on other sites.","QueryBody":"SELECT so.month AS \"month\", emacs.count AS \"Emacs\", so.count AS \"SO\" FROM (SELECT CAST(YEAR(p.CreationDate) AS TEXT(4)) + '-' + CAST(MONTH(p.CreationDate) AS TEXT(2)) AS \"month\", COUNT(*) AS \"count\" FROM \"StackExchange.Emacs\".dbo.Posts AS p GROUP BY YEAR(p.CreationDate), MONTH(p.CreationDate)) AS emacs JOIN (SELECT CAST(YEAR(p.CreationDate) AS TEXT(4)) + '-' + CAST(MONTH(p.CreationDate) AS TEXT(2)) AS \"month\", COUNT(*) AS \"count\" FROM \"StackOverflow\".dbo.Posts AS p WHERE p.Tags LIKE '%<emacs%' OR p.Tags LIKE '%<elisp>%' OR p.Tags LIKE '%<org-mode>%' GROUP BY YEAR(p.CreationDate), MONTH(p.CreationDate)) AS so ON emacs.month = so.month ORDER BY so.month","CreationDate":"2015-03-29 01:47:39","validated":false,"QueryBody_Original":"SELECT \n  so.month AS [month],\n  emacs.count AS [Emacs],\n  so.count AS [SO]\nfrom (\n  SELECT\n    cast(year(p.CreationDate) as char(4)) + '-' + cast(month(p.CreationDate) as char(2)) as [month],\n    count(*) as [count]\n  from [StackExchange.Emacs].dbo.Posts p\n  group by year(p.CreationDate), month(p.CreationDate)\n) as emacs join (\n  SELECT\n    cast(year(p.CreationDate) as char(4)) + '-' + cast(month(p.CreationDate) as char(2)) as [month],\n    count(*) as [count]\n  from [StackOverflow].dbo.Posts p\n  where p.Tags like '%<emacs%' or p.Tags like '%<elisp>%' or p.Tags like '%<org-mode>%'\n  group by year(p.CreationDate), month(p.CreationDate)\n) as so on emacs.month = so.month\norder by so.month asc"},{"QuerySetId":293986,"Title":"Vi questions across Stack Exchange, per month","Description":"Number of questions posted each month about Vi across Stack Exchange. All questions from Vi Stack Exchange are included, as well as questions tagged [vi], [macvim] or [vim] on other sites.","QueryBody":"SELECT STR_TO_TIME(vi.month + '-01 13:37:00', '%Y-%m-%d %H:%M:%S') AS \"month\", vi.count AS \"Vi\" FROM (SELECT CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) AS \"month\", COUNT(*) AS \"count\" FROM \"StackExchange.Vi\".dbo.Posts AS p WHERE p.PostTypeId = 1 GROUP BY CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7))) AS vi ORDER BY vi.month","CreationDate":"2017-01-04 04:04:23","validated":false,"QueryBody_Original":"SELECT \nconvert(datetime, vi.month + '-01 13:37:00', 120) as [month],\n  vi.count as [Vi]\nfrom (\n  SELECT\n    convert(char(7), CreationDate, 20) as [month],\n    count(*) as [count]\n  from [StackExchange.Vi].dbo.Posts p\n  where p.PostTypeId = 1\n  group by convert(char(7), CreationDate, 20)\n) as vi\norder by vi.month asc"},{"QuerySetId":294078,"Title":"Questions closed for a specific reason","Description":"See here for close reason types:\r\nhttp:\/\/data.stackexchange.com\/stackoverflow\/query\/36599\/show-all-types\r\n\r\nNote that if a question has been closed and reopened multiple times, all reasons will show up in the results.","QueryBody":"SELECT * FROM Posts AS q INNER JOIN PostHistory AS h ON q.Id = h.PostId WHERE h.PostHistoryTypeId = 10 AND NOT q.ClosedDate IS NULL","CreationDate":"2017-06-02 21:45:53","validated":false,"QueryBody_Original":"SELECT  *\nFROM Posts q\nINNER JOIN PostHistory h ON q.Id = h.PostId\nWHERE h.PostHistoryTypeId = 10\n  AND q.ClosedDate IS NOT NULL"},{"QuerySetId":294156,"Title":"Q0 - General - What vs Total","Description":null,"QueryBody":"SELECT 'posts' AS what, COUNT(1) AS total FROM posts UNION SELECT 'questions' AS what, COUNT(1) AS total FROM posts WHERE posttypeid = 1 UNION SELECT 'answers' AS what, COUNT(1) FROM posts WHERE posttypeid = 2 UNION SELECT 'others' AS what, COUNT(1) AS total FROM posts WHERE NOT posttypeid IN (1, 2) UNION SELECT 'questions with answer' AS what, COUNT(1) FROM posts WHERE posttypeid = 1 AND answercount > 0 UNION SELECT 'questions with acceptedanswerid' AS what, COUNT(1) FROM posts WHERE posttypeid = 1 AND NOT acceptedanswerid IS NULL UNION SELECT 'questions with owneruserid' AS what, COUNT(1) FROM posts WHERE posttypeid = 1 AND NOT owneruserid IS NULL UNION SELECT 'answers with owneruserid' AS what, COUNT(1) FROM posts WHERE posttypeid = 2 AND NOT owneruserid IS NULL","CreationDate":"2015-03-30 02:43:02","validated":false,"QueryBody_Original":"SELECT  \n  'posts' as what\n  ,count(1) as total\nfrom posts\n\nunion\n\nSELECT \n'questions' as what\n,count(1) as total\nfrom posts\nwhere posttypeid = 1\n\nunion\n\nSELECT\n'answers' as what\n,count(1)\nfrom posts\nwhere posttypeid = 2\n\nunion\n\nSELECT \n  'others' as what\n  ,count(1) as total\nfrom posts\nwhere posttypeid not in (1, 2)\n\nunion\n\nSELECT\n'questions with answer' as what\n,count(1)\nfrom posts\nwhere posttypeid = 1\nand answercount >0\n\nunion\n\nSELECT\n'questions with acceptedanswerid' as what\n,count(1)\nfrom posts\nwhere posttypeid = 1\nand acceptedanswerid is not null\nunion\n\nSELECT\n'questions with owneruserid' as what\n,count(1)\nfrom posts\nwhere posttypeid = 1\nand owneruserid is not null\n\nunion\n\nSELECT\n'answers with owneruserid' as what\n,count(1)\nfrom posts\nwhere posttypeid = 2\nand owneruserid is not null"},{"QuerySetId":294178,"Title":"select * from posts limit 10;","Description":null,"QueryBody":"SELECT * FROM posts WHERE score > 1000","CreationDate":"2015-03-29 22:20:27","validated":false,"QueryBody_Original":"SELECT  * from posts where score > 1000;"},{"QuerySetId":294264,"Title":"Revisions with [general-aviation] taken out","Description":null,"QueryBody":"SELECT PostHistory.PostId AS \"Post Link\", PostHistory.CreationDate AS CreationDate, PostHistory.Text AS InitialTags, Posts.Tags AS CurrentTags, Posts.OwnerUserId AS \"User Link\" FROM PostHistory INNER JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistory.PostHistoryTypeId = 3 AND PostHistory.Text LIKE '%<general-aviation>%' AND NOT Posts.Tags LIKE '%<general-aviation>%' ORDER BY CreationDate DESC LIMIT 50","CreationDate":"2015-03-30 03:00:50","validated":false,"QueryBody_Original":"SELECT \n  TOP 50\n  PostHistory.PostId as [Post Link],\n  PostHistory.CreationDate as CreationDate,\n  PostHistory.Text as InitialTags,\n  Posts.Tags as CurrentTags,\n  Posts.OwnerUserId as [User Link]\n  \n  FROM \n      PostHistory\n    INNER JOIN\n      Posts\n    ON PostHistory.PostId = Posts.Id\n  \n  WHERE \n      PostHistory.PostHistoryTypeId = 3\n    AND\n      PostHistory.Text LIKE '%<general-aviation>%'\n    AND\n      Posts.Tags NOT LIKE '%<general-aviation>%'\n  \n  ORDER BY CreationDate DESC;"},{"QuerySetId":294431,"Title":"iOS skill tag in Israel","Description":null,"QueryBody":"SELECT users.Id AS \"User Link\", displayname, emailhash, reputation, location, tags FROM users INNER JOIN posthistory AS ph ON ph.userid = users.id INNER JOIN posts ON posts.id = ph.postid\/* and location not in ('','on the server farm') *\/  WHERE tags LIKE '%php%' \/* and tags like '%ssis%'  *\/ AND location LIKE '%Israel%' ORDER BY reputation DESC","CreationDate":"2015-05-03 00:10:35","validated":false,"QueryBody_Original":"SELECT  users.Id [User Link],displayname, emailhash, reputation, location, tags\nfrom users\ninner join posthistory ph\n  on ph.userid = users.id\ninner join posts\n  on posts.id = ph.postid\n  \nwhere tags like '%php%' -- and tags like '%ssis%'  \n-- and location not in ('','on the server farm')\nand location like '%Israel%'\norder by reputation desc"},{"QuerySetId":294495,"Title":"500+ rep users by contry","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%##CountryName##%' AND Reputation >= 500 ORDER BY Reputation DESC","CreationDate":"2015-03-30 16:40:56","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%##CountryName##%'\n    AND Reputation >= 500\nORDER BY\n    Reputation DESC;"},{"QuerySetId":295118,"Title":"how many users StackOverflow have?","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"total users\", SUM(u.UpVotes) AS \"total upvotes\", SUM(u.DownVotes) AS \"total downvotes\" FROM Users AS u","CreationDate":"2015-03-31 20:09:00","validated":false,"QueryBody_Original":"SELECT  count(u.Id) as \"total users\", sum(u.UpVotes) as \"total upvotes\", sum(u.DownVotes) as \"total downvotes\" FROM Users u"},{"QuerySetId":295354,"Title":"How many not owner's edits per question.","Description":null,"QueryBody":"SELECT t.EditCount AS \"EditsPerQuestion\", COUNT(t.EditCount) AS \"Cases\" FROM (SELECT COUNT(p.Id) AS EditCount FROM Posts AS p INNER JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE p.PostTypeId = 1 AND p.OwnerUserId <> ph.UserId GROUP BY p.Id) AS t GROUP BY t.EditCount ORDER BY t.EditCount DESC","CreationDate":"2015-04-01 13:19:37","validated":false,"QueryBody_Original":"SELECT \n    t.EditCount as 'EditsPerQuestion',\n    COUNT(t.EditCount) as 'Cases'\nFROM (\n  SELECT\n    COUNT(p.Id) as EditCount\n  FROM\n    Posts as p\n    INNER JOIN PostHistory as ph ON ph.PostId = p.Id\n  WHERE\n    p.PostTypeId = 1\n    AND p.OwnerUserId != ph.UserId\n  GROUP BY p.Id\n) as t\nGROUP BY t.EditCount\nORDER BY t.EditCount DESC\n\n-- It is out of consideration of PostHistoryTypeId.\n-- See: http:\/\/meta.stackexchange.com\/questions\/2677 if you want."},{"QuerySetId":295360,"Title":"select * from posts where owneruserid=1505120;","Description":null,"QueryBody":"SELECT * FROM posts WHERE owneruserid = 1505120","CreationDate":"2015-04-01 12:40:32","validated":false,"QueryBody_Original":"SELECT  * from posts where owneruserid=1505120;"},{"QuerySetId":295520,"Title":"Questions with 4 Close Votes","Description":null,"QueryBody":"SELECT postid AS \"Post Link\" FROM votes WHERE votetypeid = 6 GROUP BY postid HAVING SUM(1) = 4","CreationDate":"2015-04-01 23:29:16","validated":false,"QueryBody_Original":"SELECT  postid as [Post Link]\nfrom votes \nwhere votetypeid = 6\ngroup by postid\nhaving sum(1) = 4"},{"QuerySetId":295744,"Title":"Top 1000 developers of Pakistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%germany%' OR UPPER(Location) LIKE '%DE%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2018-11-07 14:33:22","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%germany%'\n    OR UPPER(Location) LIKE '%DE%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":296183,"Title":"find a comment based on a key word","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Postid AS \"Post Link\", CAST(TIME_TO_STR(CreationDate, '%Y.%m.%d') AS TEXT(10)) AS Date, Text, UserId FROM Comments WHERE Text LIKE '%##Text1##%' AND Text LIKE '%##Text2##%'","CreationDate":"2015-04-04 02:28:41","validated":false,"QueryBody_Original":"SELECT \n    Id [Comment Link],\n    Postid [Post Link],\n    convert(char(10), CreationDate, 102) Date,\n    Text,\n    UserId\nfrom Comments\n\nwhere Text like '%##Text1##%'\nand Text like '%##Text2##%'"},{"QuerySetId":296205,"Title":"Repeated `Comment` for `PostHistoryTypeId IN (33, 34)`","Description":null,"QueryBody":"SELECT Comment, COUNT(*) AS \"Count\" FROM PostHistory WHERE PostHistoryTypeId IN (33, 34) GROUP BY Comment HAVING COUNT(*) > 2 ORDER BY \"Count\" DESC","CreationDate":"2015-04-04 03:31:06","validated":false,"QueryBody_Original":"SELECT \n  Comment,\n  COUNT(*) AS \"Count\"\nFROM\n  PostHistory\nWHERE\n  PostHistoryTypeId IN (33, 34)\nGROUP BY\n  Comment\nHAVING\n  COUNT(*) > 2\nORDER BY\n  \"Count\" DESC"},{"QuerySetId":296707,"Title":"Find all posts with only the \"doctrine\" tag","Description":null,"QueryBody":"SELECT Id, Title, Tags FROM Posts WHERE NOT Title IS NULL AND Tags = '<doctrine>'","CreationDate":"2015-04-06 09:58:53","validated":false,"QueryBody_Original":"SELECT  Id, Title, Tags from Posts\nwhere Title is not null\nand Tags = '<doctrine>'"},{"QuerySetId":296914,"Title":"SELECT Users by Reputation >= 5000","Description":null,"QueryBody":"SELECT Users.DisplayName, Users.Reputation, Users.WebsiteUrl FROM Users WHERE Reputation >= 5000 ORDER BY Reputation DESC","CreationDate":"2015-04-14 16:01:07","validated":false,"QueryBody_Original":"SELECT   Users.DisplayName, Users.Reputation, Users.WebsiteUrl FROM Users WHERE Reputation >= 5000 ORDER BY Reputation DESC"},{"QuerySetId":297417,"Title":"High-rep users with only 2 posts","Description":null,"QueryBody":"SELECT 'site:\/\/users\/' + CAST(u.id AS TEXT) + '|' + CAST(u.displayname AS TEXT) AS \"User\", u.reputation, COUNT(p.id) FROM users AS u, posts AS p WHERE u.reputation > 10000 AND u.id = p.owneruserid AND (p.posttypeid = 1 OR p.posttypeid = 2) GROUP BY u.id, u.displayname, u.reputation HAVING COUNT(p.id) = 2 ORDER BY u.reputation DESC","CreationDate":"2015-04-07 12:28:03","validated":false,"QueryBody_Original":"SELECT  \n  'site:\/\/users\/' + CAST(u.id as nvarchar) + '|' + CAST(u.displayname as nvarchar) AS [User], \n  u.reputation,\n  count(p.id)\nfrom users u, posts p\nwhere u.reputation > 10000 and \n  u.id = p.owneruserid and \n  (p.posttypeid = 1 or p.posttypeid = 2)\ngroup by u.id, u.displayname, u.reputation\nhaving count(p.id) = 2\norder by u.reputation desc"},{"QuerySetId":297568,"Title":"SELECT     ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],      Id AS [User Link],      Reputati","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%croatia%') ORDER BY Reputation DESC","CreationDate":"2015-04-07 15:32:54","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%croatia%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":297857,"Title":"mostly spam about me sections by users with no other activity","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\" FROM Users AS u LEFT OUTER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE u.Reputation = 1 AND u.UpVotes = 0 AND u.DownVotes = 0 AND DATEDIFF(CURRENT_TIMESTAMP(), u.LastAccessDate) > 183 AND u.AboutMe LIKE '%href%' AND p.Id IS NULL","CreationDate":"2016-04-17 00:36:22","validated":false,"QueryBody_Original":"SELECT \n  u.Id [User Link]\nFROM\n  Users AS u\nLEFT OUTER JOIN\nPosts AS p\nON\n  p.OwnerUserId = u.Id\nWHERE\n  u.Reputation = 1 and\n  u.UpVotes = 0 and\n  u.DownVotes = 0 and\n  DATEDIFF(DAY, u.LastAccessDate, GETDATE()) > 183 and\n  u.AboutMe LIKE '%href%' and\n  p.Id IS NULL"},{"QuerySetId":297895,"Title":"vsetci ktori maju viac ako 50 postov","Description":null,"QueryBody":"SELECT Users.DisplayName, COUNT(Posts.OwnerUserId) AS PocPostov FROM Posts INNER JOIN Users ON Users.Id = Posts.OwnerUserId GROUP BY DisplayName HAVING COUNT(Posts.OwnerUserId) > 5000","CreationDate":"2015-04-08 10:47:27","validated":false,"QueryBody_Original":"SELECT  Users.DisplayName, COUNT(Posts.OwnerUserId) AS PocPostov\nFROM Posts INNER JOIN Users ON Users.Id=Posts.OwnerUserId\nGROUP BY DisplayName\nHAVING COUNT(Posts.OwnerUserId) > 5000"},{"QuerySetId":298215,"Title":"TOP 100 - Brazilian Users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%brazil%' OR UPPER(Location) LIKE '%BRA' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2015-04-08 20:35:24","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%brazil%'\n    OR UPPER(Location) LIKE '%BRA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":298221,"Title":"TOP 200 - Brazilian Users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%brazil%' OR UPPER(Location) LIKE '%BRA' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-04-08 20:38:06","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%brazil%'\n    OR UPPER(Location) LIKE '%BRA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":298430,"Title":"Find all posts with only the \"theology\" tag","Description":null,"QueryBody":"SELECT Id, Title, Tags FROM Posts AS \"Post Link\" WHERE NOT Title IS NULL AND Tags = '<theology>'","CreationDate":"2015-04-28 19:22:28","validated":false,"QueryBody_Original":"SELECT  Id, Title, Tags from Posts as [Post Link]\nwhere Title is not null\nand Tags = '<theology>'"},{"QuerySetId":298468,"Title":"New users sorted by creation date","Description":null,"QueryBody":"SELECT Id, DisplayName, CreationDate FROM Users WHERE DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) <= 720 ORDER BY CreationDate DESC","CreationDate":"2015-04-25 17:09:07","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, CreationDate\nfrom Users\nwhere DateDiff(\"d\",CreationDate,getdate()) <= 720\norder by CreationDate desc;"},{"QuerySetId":298514,"Title":"Find Posts where tags like javascript","Description":null,"QueryBody":"SELECT Id, CreationDate, ViewCount, Title, Body, Tags FROM Posts WHERE (Title LIKE '%javascript%' OR Tags LIKE '%javasript%')","CreationDate":"2015-04-09 06:39:33","validated":false,"QueryBody_Original":"SELECT  Id, CreationDate, ViewCount, Title, Body, Tags FROM Posts \nWHERE (Title like '%javascript%' OR Tags like '%javasript%')"},{"QuerySetId":298519,"Title":"Find Posts where tags like html","Description":null,"QueryBody":"SELECT Id, CreationDate, ViewCount, Title, Body, Tags FROM Posts WHERE (Title LIKE '%html%' OR Tags LIKE '%html%') LIMIT 100000","CreationDate":"2015-04-09 06:51:08","validated":false,"QueryBody_Original":"SELECT  TOP 100000 Id, CreationDate, ViewCount, Title, Body, Tags FROM Posts \nWHERE (Title like '%html%' OR Tags like '%html%')"},{"QuerySetId":298549,"Title":"Find Posts where tags like PHP","Description":null,"QueryBody":"SELECT Id, CreationDate, ViewCount, Title, Body, Tags FROM Posts WHERE (Title LIKE 'php%' OR Tags LIKE 'php%')","CreationDate":"2015-04-09 09:06:28","validated":false,"QueryBody_Original":"SELECT  Id, CreationDate, ViewCount, Title, Body, Tags FROM Posts \nWHERE (Title like 'php%' OR Tags like 'php%')"},{"QuerySetId":298951,"Title":"deleteme - Morocco Top 200","Description":null,"QueryBody":"SELECT Id AS ID, DisplayName AS Name, Reputation, LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Morocco%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-11-19 17:46:00","validated":false,"QueryBody_Original":"SELECT  TOP 200 Id AS ID,DisplayName AS Name,Reputation,LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Morocco%' ORDER BY Reputation DESC"},{"QuerySetId":298952,"Title":"deleteme - Tunisia Top 200","Description":null,"QueryBody":"SELECT Id AS ID, DisplayName AS Name, Reputation, LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Tunisia%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-11-19 17:45:38","validated":false,"QueryBody_Original":"SELECT  TOP 200 Id AS ID,DisplayName AS Name,Reputation,LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Tunisia%' ORDER BY Reputation DESC"},{"QuerySetId":298953,"Title":"Questions migrated to Stack Overflow","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\" FROM Posts, PostHistory WHERE Posts.Id = PostHistory.PostId AND PostHistoryTypeId = 35 LIMIT 50","CreationDate":"2015-04-10 00:15:19","validated":false,"QueryBody_Original":"SELECT  TOP 50 Posts.Id AS [Post Link]\nFROM Posts, PostHistory\nWHERE Posts.Id = PostHistory.PostId AND PostHistoryTypeId = 35;"},{"QuerySetId":298955,"Title":"deleteme - Saudi top 200","Description":null,"QueryBody":"SELECT Id AS ID, DisplayName AS Name, Reputation, LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Saudi%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-11-19 17:44:45","validated":false,"QueryBody_Original":"SELECT  TOP 200 Id AS ID,DisplayName AS Name,Reputation,LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Saudi%' ORDER BY Reputation DESC"},{"QuerySetId":298959,"Title":"Posts migrated from Ask Ubuntu","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", PostHistory.Comment FROM PostHistory, Posts WHERE PostHistory.PostId = Posts.Id AND PostHistoryTypeId = 36 AND PostHistory.Comment LIKE 'from http:\/\/askubuntu.com%' AND Posts.PostTypeId = 1 AND Posts.Body LIKE '%ubuntu%' ORDER BY Posts.CreationDate DESC LIMIT 50","CreationDate":"2015-04-10 13:21:58","validated":false,"QueryBody_Original":"SELECT  TOP 50 Posts.Id AS [Post Link], PostHistory.Comment \nFROM PostHistory, Posts\nWHERE PostHistory.PostId = Posts.Id AND PostHistoryTypeId = 36 AND PostHistory.Comment LIKE 'from http:\/\/askubuntu.com%' AND Posts.PostTypeId = 1 AND Posts.Body LIKE '%ubuntu%'\nORDER BY Posts.CreationDate DESC;"},{"QuerySetId":299030,"Title":"Read the Best Question Ever","Description":null,"QueryBody":"SELECT * FROM Posts WHERE ParentId = 14790550","CreationDate":"2015-04-10 10:55:49","validated":false,"QueryBody_Original":"SELECT  * from Posts where ParentId=14790550"},{"QuerySetId":299300,"Title":"This is a test query","Description":null,"QueryBody":"SELECT COUNT(1) FROM posts WHERE score > 1000","CreationDate":"2015-04-15 23:36:30","validated":false,"QueryBody_Original":"SELECT  count(1) from posts where score > 1000;"},{"QuerySetId":299326,"Title":"Bounty Amount Received per User","Description":"Questions where a user has received a Bounty Amount for their answer.\r\n","QueryBody":"SELECT * FROM posthistory WHERE posthistorytypeid = 21","CreationDate":"2015-04-11 02:13:38","validated":false,"QueryBody_Original":"SELECT  * from posthistory where posthistorytypeid = 21"},{"QuerySetId":299678,"Title":"Top Palestinians on Stackoverflow ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, CreationDate, LastAccessDate, Views FROM Users WHERE LOWER(Location) LIKE '%palestine%' OR LOWER(Location) LIKE '%palestinian%' ORDER BY Reputation DESC","CreationDate":"2015-04-12 00:31:11","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    CreationDate,\n    LastAccessDate,\n    Views\nFROM\n    Users\nWHERE\n    LOWER(Location) like '%palestine%' or LOWER(Location) like '%palestinian%'\n\nORDER BY\n    Reputation DESC;"},{"QuerySetId":299808,"Title":"answer count greater than 50","Description":null,"QueryBody":"SELECT * FROM Posts WHERE AnswerCount > 50","CreationDate":"2015-04-12 11:16:03","validated":false,"QueryBody_Original":"SELECT  * from Posts where AnswerCount > 50;"},{"QuerySetId":299995,"Title":"TOP 100 stackoverflow users from kerala, INDIA","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location, EmailHash FROM Users WHERE Location LIKE N'%Karnataka%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2020-06-24 11:10:08","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location,\n   EmailHash\nFROM\n   Users\nWHERE\n    Location like N'%Karnataka%' \nORDER BY\n   reputation DESC"},{"QuerySetId":300035,"Title":"Jon Skeet and Eric Lippers answering the same question","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\" FROM Posts AS q JOIN Posts AS ja ON ja.OwnerUserId = 1001643 AND ja.ParentId = q.Id JOIN Posts AS ea ON ea.OwnerUserId = 487339 AND ea.ParentId = q.Id","CreationDate":"2015-07-02 22:27:06","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link] from Posts as q\n  join Posts as ja on ja.OwnerUserId = 1001643 and ja.ParentId = q.Id\n  join Posts as ea on ea.OwnerUserId = 487339 and ea.ParentId = q.Id"},{"QuerySetId":300502,"Title":"Answers with higher score than accepted","Description":"They know better than topic starter","QueryBody":"SELECT u.Id AS \"User Link\", notacceptedbetter, likeaccepted, acceptedbetter, total, totalscore FROM (SELECT a.owneruserid AS userid, SUM(CASE WHEN a.score > ap.score THEN 1 ELSE 0 END) AS notacceptedbetter, SUM(CASE WHEN a.score = ap.score THEN 1 ELSE 0 END) AS likeaccepted, SUM(CASE WHEN a.score <= ap.score THEN 1 ELSE 0 END) AS acceptedbetter, COUNT(*) AS total, SUM(a.score) AS totalscore FROM posts AS a JOIN posts AS p ON a.parentid = p.id JOIN posts AS ap ON p.acceptedanswerid = ap.id WHERE a.posttypeid = 2 \/* answers *\/ AND ap.id <> a.id GROUP BY a.owneruserid) AS answers JOIN users AS u ON answers.userid = u.id ORDER BY notacceptedbetter DESC","CreationDate":"2015-04-14 06:08:09","validated":false,"QueryBody_Original":"SELECT  \nu.Id as [User Link], \nnotacceptedbetter, likeaccepted, acceptedbetter, total, totalscore \nfrom (\n  SELECT a.owneruserid as userid, \n  sum(case when a.score > ap.score then 1 else 0 end) as notacceptedbetter,\n  sum(case when a.score = ap.score then 1 else 0 end) as likeaccepted,\n  sum(case when a.score <= ap.score then 1 else 0 end) as acceptedbetter,\n  count(*) as total,\n  sum(a.score) as totalscore\n  from posts a\n    join posts p on a.parentid = p.id\n    join posts ap on p.acceptedanswerid = ap.id\n  where \n    a.posttypeid = 2 --answers\n    and ap.id <> a.id\n  group by a.owneruserid\n  ) answers\n  join users u on answers.userid = u.id\n  order by notacceptedbetter desc"},{"QuerySetId":300737,"Title":"Users with most Necromancer badges at 2015-04-14","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rank, UserId AS \"User Link\", COUNT(*) AS badges FROM Badges WHERE Name = 'Necromancer' AND Date < '##Date?2015-04-14##' GROUP BY UserId ORDER BY Badges DESC LIMIT 300","CreationDate":"2015-08-09 02:33:10","validated":false,"QueryBody_Original":"SELECT  TOP 300\n  row_number() over(order by count(*) desc) as rank, \n  UserId AS [User Link],\n  count(*) AS badges\nFROM\n  Badges\nWHERE\n  Name = 'Necromancer' AND\n  Date < '##Date?2015-04-14##'\nGROUP BY\n  UserId\nORDER BY\n  Badges DESC"},{"QuerySetId":300919,"Title":"Distribution of Votes on Answers","Description":null,"QueryBody":"SELECT Score, LOG10(COUNT(Score)) FROM Posts WHERE PostTypeId = 2 GROUP BY Score ORDER BY Score","CreationDate":"2016-06-26 23:57:38","validated":false,"QueryBody_Original":"SELECT \n  Score,\n  LOG10(COUNT(Score))\nFROM Posts\nWHERE\n  PostTypeId = 2\nGROUP BY Score\nORDER BY Score"},{"QuerySetId":300931,"Title":"Number of questions with respective number of answers","Description":"Returns a table (graphable) giving the number of questions that have each specific number of answers.","QueryBody":"SELECT AnswerCount AS \"Number of answers\", COUNT(*) AS \"Number of questions\" FROM Posts WHERE ClosedDate IS NULL AND PostTypeId = 1 GROUP BY AnswerCount ORDER BY AnswerCount","CreationDate":"2015-04-14 23:51:30","validated":false,"QueryBody_Original":"SELECT \n  AnswerCount AS [Number of answers],\n  COUNT(*) AS [Number of questions]\nFROM Posts\nWHERE ClosedDate IS NULL AND PostTypeId = 1\nGROUP BY AnswerCount\nORDER BY AnswerCount ASC"},{"QuerySetId":300995,"Title":"Top users from Padova, Italy","Description":null,"QueryBody":"SELECT displayname AS \"User\", reputation AS \"Reputation\", WebsiteUrl AS \"Website\" FROM USERS WHERE (location LIKE '%Salvador%') AND reputation > 100 ORDER BY reputation DESC","CreationDate":"2015-10-23 18:19:10","validated":false,"QueryBody_Original":"SELECT  \n  displayname as [User],\n  reputation as [Reputation],\n  WebsiteUrl as [Website]\nfrom USERS\nwhere \n  (location LIKE '%Salvador%') \n  AND reputation > 100\norder by reputation DESC"},{"QuerySetId":301142,"Title":"comments like accepting - 1 flag auto-nuke","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.Score, c.CreationDate FROM Comments AS c INNER JOIN Posts AS q ON q.Id = c.PostId WHERE q.PostTypeId = 1 AND q.ViewCount > 100 AND c.Text LIKE N'%\u0441\u0443\u043a\u0430%' AND LENGTH(c.Text) >= 150 ORDER BY c.Score DESC, q.ViewCount DESC","CreationDate":"2015-10-12 20:49:34","validated":false,"QueryBody_Original":"SELECT \n    c.Id AS [Comment Link],\n    c.Score,\n    c.CreationDate\nFROM\n    Comments c\nINNER JOIN\n    Posts q\nON\n    q.Id = c.PostId\nWHERE\n    q.PostTypeId = 1\n  and\n    q.ViewCount > 100\n  and\n    c.Text LIKE N'%\u0441\u0443\u043a\u0430%' \n  and\n    LEN(c.Text) >= 150\nORDER BY\n  c.Score DESC, q.ViewCount DESC"},{"QuerySetId":301584,"Title":"Day of Week Most Popular for Posting","Description":null,"QueryBody":"SELECT COUNT(ID) AS PostCount, CASE TIME_TO_STR(CreationDate, '%W') WHEN 1 THEN 'Sunday' WHEN 2 THEN 'Monday' WHEN 3 THEN 'Tuesday' WHEN 4 THEN 'Wednesday' WHEN 5 THEN 'Thursday' WHEN 6 THEN 'Friday' WHEN 7 THEN 'Saturday' END AS DayOfPost FROM Posts WHERE CreationDate > '2015-01-01' GROUP BY TIME_TO_STR(CreationDate, '%W') ORDER BY COUNT(ID) DESC","CreationDate":"2015-04-16 08:00:47","validated":false,"QueryBody_Original":"SELECT  Count(ID) as PostCount, \nCASE DatePart(weekday,CreationDate) \n    WHEN 1 THEN 'Sunday'\n    WHEN 2 THEN 'Monday'\n    WHEN 3 THEN 'Tuesday'\n    WHEN 4 THEN 'Wednesday'\n    WHEN 5 THEN 'Thursday'\n    WHEN 6 THEN 'Friday'\n    WHEN 7 THEN 'Saturday'\n    END  as DayOfPost\nFrom Posts\nWhere CreationDate > '2015-01-01'\nGroup By DatePart(weekday,CreationDate)\nOrder by Count(ID) DESC;\nGo"},{"QuerySetId":302141,"Title":"New Answers to Old Questions","Description":null,"QueryBody":"SELECT post.Id AS \"Post Link\", post.OwnerUserId AS \"User Link\", post.CreationDate AS \"Posted On\", parent.CreationDate AS \"Question Asked On\" FROM Posts AS post INNER JOIN Posts AS parent ON post.ParentId = parent.Id WHERE post.PostTypeId = 2 AND post.CreationDate - parent.CreationDate > 30 AND CURRENT_TIMESTAMP() - post.CreationDate < 7 ORDER BY (CURRENT_TIMESTAMP() - post.CreationDate) DESC LIMIT 15","CreationDate":"2015-04-16 20:32:51","validated":false,"QueryBody_Original":"SELECT  TOP 15\n  post.Id AS [Post Link],\n  post.OwnerUserId AS [User Link],\n  post.CreationDate AS [Posted On],\n  parent.CreationDate AS [Question Asked On]\nFROM Posts AS post\nINNER JOIN Posts AS parent ON post.ParentId = parent.Id\nWHERE\n  post.PostTypeId = 2\n  AND post.CreationDate - parent.CreationDate > 30\n  AND GETDATE() - post.CreationDate < 7\nORDER BY (GETDATE() - post.CreationDate) DESC"},{"QuerySetId":302271,"Title":"Highest scored double \/ multiple answers","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", A.OwnerUserId AS \"User Id\", A.OwnerUserId AS \"User Link\", COUNT(*) AS Answers, MIN(A.Score) AS MinScore, MAX(A.Score) AS MaxScore FROM Posts AS Q JOIN Posts AS A ON A.ParentId = Q.Id WHERE Q.PostTypeId = 1 AND A.PostTypeId = 2 AND NOT A.OwnerUserId IS NULL GROUP BY Q.Id, A.OwnerUserId HAVING COUNT(*) > 1 ORDER BY MinScore DESC LIMIT 1000","CreationDate":"2015-04-17 02:14:01","validated":false,"QueryBody_Original":"SELECT  Top 1000\n  Q.Id as [Post Link],\n  A.OwnerUserId as [User Id],\n  A.OwnerUserId as [User Link],\n  Count(*) as Answers,\n  Min(A.Score) as MinScore,\n  Max(A.Score) as MaxScore\nFrom\n  Posts as Q\n  Join Posts as A On A.ParentId = Q.Id\nWhere\n  Q.PostTypeId = 1 and A.PostTypeId = 2\n  and A.OwnerUserId is not null\nGroup By\n  Q.Id, A.OwnerUserId\nHaving Count(*) > 1\nOrder By MinScore Desc"},{"QuerySetId":302380,"Title":"Short unanswered questions with zero score","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM Posts WHERE AnswerCount = 0 AND Score = 0 ORDER BY LENGTH(Body)","CreationDate":"2015-04-17 03:24:59","validated":false,"QueryBody_Original":"SELECT  id as [Post Link] from Posts\nwhere AnswerCount = 0 and Score=0\norder by len(Body) asc"},{"QuerySetId":302461,"Title":"Users who have posted questions","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\" FROM Users AS U INNER JOIN Posts AS Q ON Q.OwnerUserId = U.Id AND Q.PostTypeId = 1 GROUP BY U.Id","CreationDate":"2015-04-17 06:04:52","validated":false,"QueryBody_Original":"SELECT  U.Id AS [User Link]\nFROM Users U\n  INNER JOIN Posts Q ON Q.OwnerUserId = U.Id AND Q.PostTypeId = 1\nGROUP BY U.Id"},{"QuerySetId":302504,"Title":"People who ask questions, get answers, and never upvote anything","Description":null,"QueryBody":"SELECT * FROM Users AS U WHERE U.UpVotes = 0 AND U.Downvotes = 0","CreationDate":"2015-04-17 07:14:51","validated":false,"QueryBody_Original":"SELECT  *\nFROM Users U\nWHERE U.UpVotes = 0\nAND U.Downvotes = 0"},{"QuerySetId":302781,"Title":"Favorite questions asked since 1 Jan 2000","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, FavoriteCount FROM Posts WHERE PostTypeId = 1 AND TIME_TO_STR(CreationDate, '%Y') >= 2000 AND FavoriteCount >= 250 ORDER BY FavoriteCount DESC","CreationDate":"2015-08-04 09:35:05","validated":false,"QueryBody_Original":"SELECT \n    Id as [Post Link],\n    CreationDate, \n    FavoriteCount\nFROM Posts\nWHERE PostTypeId=1 \nand DatePart(year,CreationDate) >= 2000 \nand FavoriteCount >= 250\nORDER BY FavoriteCount DESC"},{"QuerySetId":302833,"Title":"Find first question for query","Description":null,"QueryBody":"SELECT MIN(OwnerUserId), MIN(Id) AS QuestionId FROM POSTS WHERE PostTypeId = 1 GROUP BY OwnerUserId","CreationDate":"2015-04-17 18:30:55","validated":false,"QueryBody_Original":"SELECT  MIN(OwnerUserId), MIN(Id) as QuestionId\nFROM POSTS\nWHERE PostTypeId = 1\nGROUP BY OwnerUserId\n;"},{"QuerySetId":303242,"Title":"top 1000 users from india","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2015-04-18 11:15:03","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":303400,"Title":"How many one-question users are there?","Description":null,"QueryBody":"SELECT * FROM Users WHERE Reputation = 1","CreationDate":"2015-04-19 00:35:32","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Reputation=1;"},{"QuerySetId":303621,"Title":"Find tags with no wikis","Description":null,"QueryBody":"SELECT Count, ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, ExcerptPostId AS \"Post Link\", WikiPostId AS \"Post Link\" FROM Tags AS t LEFT JOIN Posts AS p ON p.Id = t.ExcerptPostId WHERE ExcerptPostId IS NULL \/* no tag excerpt *\/ OR LENGTH(Body) = 0 \/* tag excerpt empty *\/ ORDER BY Count DESC","CreationDate":"2015-04-19 23:58:07","validated":false,"QueryBody_Original":"SELECT  Count,\n       ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName,\n       ExcerptPostId                              AS [Post Link],\n       WikiPostId                                 AS [Post Link]\nFROM   Tags t\n       LEFT JOIN Posts p\n         ON p.Id = t.ExcerptPostId\nWHERE  ExcerptPostId IS NULL -- no tag excerpt\n       OR LEN(Body) = 0   -- tag excerpt empty\nORDER  BY Count DESC"},{"QuerySetId":303848,"Title":"Users' aggregated comments and posts in parent posts","Description":"User id's which are null or less than 0 have been removed","QueryBody":"SELECT DISTINCT a.UserId, a.QuestionId AS PostId, COUNT(a.QuestionId) AS Aggregate FROM (SELECT Posts.OwnerUserId AS UserId, COALESCE(Posts.ParentId, Posts.Id) AS QuestionId FROM Posts WHERE NOT Posts.OwnerUserId IS NULL AND Posts.OwnerUserId > 0 UNION ALL SELECT b.UserId AS UserId, COALESCE(b.ParentId, b.PostId) AS QuestionId FROM (SELECT Posts.ParentId, Posts.PostTypeId, Posts.Id AS PostId, Comments.UserId, Comments.Id FROM Posts INNER JOIN Comments ON Posts.Id = Comments.PostId WHERE NOT Comments.UserId IS NULL) AS b) AS a GROUP BY a.UserId, a.QuestionId","CreationDate":"2015-04-24 14:22:57","validated":false,"QueryBody_Original":"SELECT  DISTINCT a.UserId, a.QuestionId AS PostId,\n                count(a.QuestionId) AS Aggregate\nFROM (SELECT Posts.OwnerUserId AS UserId, \n             ISNULL(Posts.ParentId,Posts.Id) AS QuestionId\n      FROM Posts\n      WHERE Posts.OwnerUserId IS NOT NULL AND Posts.OwnerUserId > 0\n      UNION ALL\n      SELECT b.UserId AS UserId,  ISNULL(b.ParentId,b.PostId) as QuestionId\nFROM(SELECT  Posts.ParentId,Posts.PostTypeId, Posts.Id as PostId, Comments.UserId,Comments.Id\nFROM Posts \nINNER JOIN Comments\nON Posts.Id = Comments.PostId\nWHERE Comments.UserId IS NOT NULL) AS b) AS a\n      \nGROUP BY a.UserId,a.QuestionId"},{"QuerySetId":303951,"Title":"Age Distribution for High-Rep Users","Description":null,"QueryBody":"SELECT * FROM Users ORDER BY reputation DESC","CreationDate":"2018-09-15 02:13:23","validated":false,"QueryBody_Original":"SELECT  * FROM Users order by reputation desc"},{"QuerySetId":303982,"Title":"Posts containing Google redirect links","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Body LIKE 'http:\/\/stackoverflow.com\/users\/3639582\/shaunak-d'","CreationDate":"2015-04-25 15:22:05","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link]\nFROM Posts\nWHERE Body LIKE 'http:\/\/stackoverflow.com\/users\/3639582\/shaunak-d'"},{"QuerySetId":304057,"Title":"Site users overlap with SO","Description":"Original inspiration: http:\/\/data.stackexchange.com\/stackoverflow\/query\/168043\/accountid-comparison","QueryBody":"SELECT 'Aviation SE User Count', COUNT(*) FROM \"StackExchange.Aviation\".Users AS fu UNION ALL SELECT 'Users of both SO and AviationSE', COUNT(*) FROM \"StackExchange.Aviation\".Users AS fu JOIN Users AS u ON fu.AccountId = u.AccountId","CreationDate":"2015-04-21 03:59:42","validated":false,"QueryBody_Original":"SELECT  'Aviation SE User Count', Count(*) From [StackExchange.Aviation]..Users fu  UNION ALL                      \nSELECT 'Users of both SO and AviationSE', Count(*) From [StackExchange.Aviation]..Users fu Join Users u ON fu.AccountId=u.AccountId"},{"QuerySetId":304059,"Title":"Count of Post History entries in 2015","Description":null,"QueryBody":"SELECT COUNT(id) FROM PostHistory WHERE CreationDate >= '2015-01-01'","CreationDate":"2015-04-21 04:47:22","validated":false,"QueryBody_Original":"SELECT  count(id) from PostHistory\nwhere CreationDate>='2015-01-01'"},{"QuerySetId":304323,"Title":"Total Number of Duplicated Questions","Description":null,"QueryBody":"SELECT COUNT(*) AS count FROM Posts WHERE PostTypeId = 2","CreationDate":"2015-04-21 19:25:38","validated":false,"QueryBody_Original":"SELECT  count(*) as count\nfrom Posts\nwhere PostTypeId = 2"},{"QuerySetId":305365,"Title":"Top 250 users from BD","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%bd%' ORDER BY Reputation DESC LIMIT 250","CreationDate":"2015-04-23 11:56:55","validated":false,"QueryBody_Original":"SELECT  TOP 250\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR LOWER(Location) LIKE '%bd%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":305410,"Title":"Top 20 posts and the scores","Description":null,"QueryBody":"SELECT ViewCount, Score, Id AS \"Post Link\" FROM Posts ORDER BY ViewCount DESC LIMIT 20","CreationDate":"2015-04-25 11:28:14","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ViewCount,\n    Score,\n    Id as [Post Link]\nFROM \n    Posts\nORDER BY \n    ViewCount DESC"},{"QuerySetId":306019,"Title":"How many POSTS are in meta about Jon Skeet","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Number of questions\" FROM Posts WHERE PostTypeId = 1 AND Title LIKE '%Jon Skeet%' OR Title LIKE '%Jon-Skeet%' OR Title LIKE '%Skeet%'","CreationDate":"2015-04-24 16:41:48","validated":false,"QueryBody_Original":"SELECT  COUNT(*) AS [Number of questions]\nFROM Posts\nWHERE PostTypeId = 1 AND\n      Title LIKE '%Jon Skeet%' OR Title LIKE '%Jon-Skeet%' OR Title LIKE '%Skeet%'"},{"QuerySetId":306053,"Title":"Widest Question\/Answer Score Ranges (Answer > Question)","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", q.Score AS QScore, q.OwnerUserId AS \"User Link\", a.Score AS AScore, a.OwnerUserId AS \"User Link\", a.Score - q.Score AS ScoreDiff FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId ORDER BY ScoreDiff DESC LIMIT 500","CreationDate":"2015-04-24 19:03:48","validated":false,"QueryBody_Original":"SELECT  TOP 500\n  a.Id AS [Post Link],\n  q.Score AS QScore,\n  q.OwnerUserId AS [User Link],\n  a.Score AS AScore,\n  a.OwnerUserId AS [User Link],\n  a.Score - q.Score AS ScoreDiff\nFROM\n  Posts q INNER JOIN Posts a ON q.Id = a.ParentId\nORDER BY\n  ScoreDiff DESC"},{"QuerySetId":306274,"Title":"Top 20 comments by users and the scores","Description":null,"QueryBody":"SELECT Score, Id AS \"Comment Link\" FROM Comments ORDER BY Score DESC LIMIT 20","CreationDate":"2015-04-25 11:31:00","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    Score,\n    Id as [Comment Link]\nFROM \n    Comments\nORDER BY \n    Score DESC"},{"QuerySetId":306276,"Title":"Top 20 users with most comments","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Total Comments\", Userid, Userid AS \"User Link\" FROM Comments GROUP BY Userid ORDER BY COUNT(*) DESC LIMIT 20","CreationDate":"2015-04-25 12:52:40","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    COUNT(*) [Total Comments],\n    Userid,\n    Userid AS [User Link]\nFROM Comments\nGROUP BY Userid\nORDER BY COUNT(*) DESC"},{"QuerySetId":306416,"Title":"Total answers for a question","Description":null,"QueryBody":"SELECT COUNT(Id) AS \"Total posts\", AnswerCount AS \"Number of answers\" FROM Posts WHERE PostTypeId = 1 GROUP BY AnswerCount ORDER BY AnswerCount DESC","CreationDate":"2015-04-25 20:59:49","validated":false,"QueryBody_Original":"SELECT \n    COUNT(Id) AS [Total posts],\n    AnswerCount AS [Number of answers]\nFROM\n    Posts\nWHERE PostTypeId = 1\nGROUP BY AnswerCount\nORDER BY AnswerCount DESC"},{"QuerySetId":306428,"Title":"Top 20 questions with the most answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", AnswerCount AS \"Number of answers\" FROM Posts WHERE PostTypeId = 1 ORDER BY AnswerCount DESC LIMIT 20","CreationDate":"2015-04-25 21:01:55","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    Id AS [Post Link],\n    AnswerCount AS [Number of answers]\nFROM\n    Posts\nWHERE PostTypeId = 1\nORDER BY AnswerCount DESC"},{"QuerySetId":307117,"Title":"SELECT *  FROM Posts;","Description":null,"QueryBody":"SELECT Id, Reputation, Location, Views, Age, AccountId FROM Users","CreationDate":"2015-04-27 01:30:05","validated":false,"QueryBody_Original":"SELECT  Id,Reputation,Location,Views,Age,AccountId FROM Users;"},{"QuerySetId":307428,"Title":"Number of Compile-to-JS askers by Month","Description":null,"QueryBody":"SELECT Tag, STR(Year) + '-' + REPLACE(STR(Month, 2), SPACE(1), '0') AS Month, COUNT(DISTINCT OwnerUserId) AS Askers FROM (SELECT ViewCount, OwnerUserId, MONTH(CreationDate) AS Month, YEAR(CreationDate) AS Year, CASE WHEN Tags LIKE '%<flowtype>%' THEN 'FlowType' ELSE CASE WHEN Tags LIKE '%<typescript>%' THEN 'TypeScript' ELSE CASE WHEN Tags LIKE '%<google-closure-compiler>%' THEN 'Closure' ELSE CASE WHEN Tags LIKE '%<coffeescript>%' THEN 'CoffeeScript' ELSE 'Other' END END END END AS Tag FROM Posts WHERE PostTypeId = 1 \/* Question *\/ AND (Tags LIKE '%<typescript>%' OR Tags LIKE '%<coffeescript>%' OR Tags LIKE '%<flowtype>%' OR Tags LIKE '%<google-closure-compiler>%')) AS SubQry GROUP BY Month, Year, Tag ORDER BY Month DESC, Tag","CreationDate":"2018-02-12 23:27:58","validated":false,"QueryBody_Original":"SELECT \n  Tag,\n  STR(Year) + '-' + REPLACE(STR(Month, 2), SPACE(1), '0') AS Month,\n  COUNT(DISTINCT OwnerUserId) AS Askers\nFROM (\n  SELECT\n    ViewCount,\n    OwnerUserId,\n    Month(CreationDate) AS Month,\n    Year(CreationDate) AS Year,\n    IIF(Tags like '%<flowtype>%', 'FlowType',\n    IIF(Tags like '%<typescript>%', 'TypeScript',\n    IIF(Tags like '%<google-closure-compiler>%', 'Closure',\n    IIF(Tags like '%<coffeescript>%', 'CoffeeScript',\n    'Other')))) AS Tag\n  FROM\n    Posts\n  WHERE\n      PostTypeId = 1 -- Question\n      AND (\n      Tags like '%<typescript>%'\n      OR Tags like '%<coffeescript>%'\n      OR Tags like '%<flowtype>%'\n      OR Tags like '%<google-closure-compiler>%'\n      )\n  ) AS SubQry\n  GROUP BY\n    Month,\n    Year,\n    Tag\nORDER BY Month DESC, Tag"},{"QuerySetId":307551,"Title":"Hong Kong users by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%hong kong%' OR UPPER(Location) LIKE '%HK' ORDER BY Reputation DESC","CreationDate":"2016-01-08 09:57:11","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%hong kong%'\n    OR UPPER(Location) LIKE '%HK'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":307556,"Title":"Questions with the most repeat answerers","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", U.Id AS \"User Link\", COUNT(Q.Id) AS answer_count FROM Posts AS A INNER JOIN Posts AS Q ON A.ParentId = Q.Id INNER JOIN Users AS U ON A.OwnerUserId = U.Id WHERE A.PostTypeId = 2 AND Q.PostTypeId = 1 GROUP BY Q.Id, U.Id ORDER BY answer_count DESC LIMIT 20","CreationDate":"2015-04-28 06:49:22","validated":false,"QueryBody_Original":"SELECT  TOP 20\n  Q.Id AS [Post Link],\n  U.Id AS [User Link],\n  COUNT(Q.Id) AS answer_count\nFROM\n  Posts A\n  INNER JOIN Posts Q\n    ON A.ParentId = Q.Id\n  INNER JOIN Users U\n    ON A.OwnerUserId = U.Id\nWHERE\n  A.PostTypeId = 2 AND\n  Q.PostTypeId = 1\nGROUP BY\n  Q.Id, U.Id\nORDER BY\n  answer_count DESC"},{"QuerySetId":307735,"Title":"Top 50 unanswered questions and without self-answered question","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Tags FROM Posts AS q LEFT JOIN Posts AS a ON q.Id = a.ParentId WHERE q.PostTypeId = 1 AND q.AcceptedAnswerId IS NULL AND 0 = COALESCE((SELECT MAX(ai.Score) FROM Posts AS ai WHERE ai.ParentId = q.Id), 0) AND 0 = COALESCE((SELECT COUNT(*) FROM Posts AS ai WHERE ai.ParentId = q.Id AND ai.OwnerUserId = q.OwnerUserId), 0) AND q.tags LIKE '%##Tags##%' GROUP BY q.Id, q.Tags, q.PostTypeId LIMIT 50","CreationDate":"2015-04-28 18:15:50","validated":false,"QueryBody_Original":"SELECT  TOP(50) \n  q.Id As [Post Link], \n  q.Tags\nfrom \n  Posts q\n  left join \n  Posts a on q.Id = a.ParentId\n  \nwhere\n  q.PostTypeId = 1 and\n  q.AcceptedAnswerId is null and\n  0 = isnull((SELECT max(ai.Score) \n              from Posts ai\n              where ai.ParentId = q.Id), 0) and\n  0 = isnull((SELECT count(*)\n              from Posts ai\n              where ai.ParentId = q.Id \n                and ai.OwnerUserId = q.OwnerUserId), 0) and\n  q.tags like '%##Tags##%'\ngroup by\n  q.Id,\n  q.Tags,\n  q.PostTypeId"},{"QuerySetId":307780,"Title":"Top viewed questions of 2015","Description":null,"QueryBody":"SELECT Title, ViewCount, Score FROM Posts WHERE CreationDate >= '20150101' ORDER BY ViewCount DESC","CreationDate":"2015-07-08 03:25:53","validated":false,"QueryBody_Original":"SELECT  Title, ViewCount, Score from Posts where CreationDate >= '20150101' order by ViewCount DESC"},{"QuerySetId":307982,"Title":"select * from users; ","Description":null,"QueryBody":"SELECT * FROM users","CreationDate":"2015-04-29 08:16:59","validated":false,"QueryBody_Original":"SELECT  * from users;"},{"QuerySetId":307984,"Title":"That's a bunch of bananas","Description":null,"QueryBody":"SELECT LENGTH('\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c') AS \"300 bananas\"","CreationDate":"2015-04-29 11:48:19","validated":false,"QueryBody_Original":"SELECT  len(\n  '\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\ud83c\udf4c'\n) \"300 bananas\";\n\nSELECT len(\n  '\ud83c\udf4c'\n) \"1 lonely banana\""},{"QuerySetId":308120,"Title":"Fetching Title with relevant information","Description":null,"QueryBody":"SELECT Id, Title, Score, AnswerCount, FavoriteCount, ViewCount, CreationDate, ClosedDate FROM Posts","CreationDate":"2015-04-29 15:01:47","validated":false,"QueryBody_Original":"SELECT  Id,Title,Score,AnswerCount,FavoriteCount,ViewCount,CreationDate,ClosedDate from Posts"},{"QuerySetId":308244,"Title":"System average scores for StackOverflow","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Number of Answers\", ROUND(AVG(CAST(a.Score AS FLOAT)), 4) AS \"Average Answer Score\" FROM Posts AS a WHERE a.PostTypeId = 2 AND CreationDate > '2013-08-12' AND CreationDate < '2013-09-13'","CreationDate":"2015-04-29 18:42:18","validated":false,"QueryBody_Original":"SELECT \n  COUNT(*) as [Number of Answers],\n  ROUND(AVG(CAST(a.Score as Decimal)), 4) as [Average Answer Score]\nFROM Posts a\nwhere a.PostTypeId = 2 \nand CreationDate > '2013-08-12' and CreationDate < '2013-09-13'"},{"QuerySetId":308535,"Title":"Find bad answers from \"not an answer\" comments","Description":null,"QueryBody":"SELECT c.PostId AS \"Post Link\", YEAR(C.CreationDate) AS Year, MONTH(C.CreationDate) AS Month, c.text AS Body FROM Comments AS C, Posts AS P WHERE (C.Text LIKE '%should be a comment%' AND LENGTH(c.Text) < 25 AND C.PostID = P.ID AND C.CreationDate < '2016-12-01T00:00:00.000' AND C.CreationDate > '2011-01-01T00:00:00.000' AND P.ClosedDate IS NULL AND NOT P.ParentId IS NULL AND P.Score < 1) ORDER BY Year, Month DESC LIMIT 1000","CreationDate":"2016-12-12 07:20:11","validated":false,"QueryBody_Original":"SELECT  TOP 1000  c.PostId AS [Post Link], YEAR(C.CreationDate) AS Year, Month(C.CreationDate) AS Month, c.text AS Body\nFROM Comments C, Posts P\nWhere (\n  C.Text LIKE '%should be a comment%' AND\n  LEN(c.Text) < 25 AND\n  C.PostID = P.ID AND\n  C.CreationDate < '2016-12-01T00:00:00.000' AND\n  C.CreationDate > '2011-01-01T00:00:00.000' AND\n  P.ClosedDate IS NULL AND\n  P.ParentId IS NOT NULL AND\n  P.Score < 1\n)\nOrder By Year, Month DESC"},{"QuerySetId":309349,"Title":"Number of questions per year - HBase, Cassandra, CQL","Description":null,"QueryBody":"SELECT Id FROM TAGS WHERE TagName LIKE 'phoenix'","CreationDate":"2018-02-06 06:27:29","validated":false,"QueryBody_Original":"SELECT  Id FROM TAGS WHERE TagName LIKE 'phoenix';"},{"QuerySetId":309477,"Title":"PHP skill tag in Israel","Description":null,"QueryBody":"SELECT users.Id AS \"User Link\", displayname, emailhash, reputation, location, tags FROM users INNER JOIN posthistory AS ph ON ph.userid = users.id INNER JOIN posts ON posts.id = ph.postid\/* and location not in ('','on the server farm') *\/  WHERE tags LIKE '%php%' \/* and tags like '%ssis%'  *\/ AND location LIKE '%Bangalore%' ORDER BY reputation DESC","CreationDate":"2016-03-20 19:42:02","validated":false,"QueryBody_Original":"SELECT  users.Id [User Link],displayname, emailhash, reputation, location, tags\nfrom users\ninner join posthistory ph\n  on ph.userid = users.id\ninner join posts\n  on posts.id = ph.postid\n  \nwhere tags like '%php%' -- and tags like '%ssis%'  \n-- and location not in ('','on the server farm')\nand location like '%Bangalore%'\norder by reputation desc"},{"QuerySetId":309478,"Title":"Avid users under 18 years old.","Description":null,"QueryBody":"SELECT Id, DisplayName, Views AS Age, Reputation FROM Users WHERE Age < 18 AND Reputation >= 200 ORDER BY Age","CreationDate":"2015-05-03 00:29:20","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, Views Age, Reputation FROM Users WHERE \n  Age < 18 \n  AND Reputation >= 200\nORDER BY Age ASC;"},{"QuerySetId":309694,"Title":"Find posts with broken MathJax (single dollar sign)","Description":null,"QueryBody":"SELECT id AS \"Post Link\", body, CreationDate AS \"Date\" FROM posts WHERE body LIKE '%$%' AND NOT body LIKE '%$%$%'","CreationDate":"2016-07-05 19:19:28","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], body, CreationDate as [Date]\nfrom posts\nwhere body like '%$%'\nand body not like '%$%$%'"},{"QuerySetId":309745,"Title":"Top users under 18 by Reputation","Description":null,"QueryBody":"SELECT Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate, 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT) AS Url FROM Users AS b WHERE (b.Age <= 18) ORDER BY b.Reputation, b.Age","CreationDate":"2017-08-19 17:10:56","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate,\n'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS VARCHAR) AS Url\nFROM Users b\nWHERE (\nb.Age <= 18)\nORDER BY b.Reputation, b.Age;"},{"QuerySetId":310937,"Title":"SebasSBM's custom filter (test phase)","Description":null,"QueryBody":"SELECT id FROM Posts WHERE ViewCount = 9999","CreationDate":"2015-05-07 02:23:22","validated":false,"QueryBody_Original":"SELECT  id FROM Posts WHERE ViewCount=9999;"},{"QuerySetId":310972,"Title":"100k rep users eligible for swag","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC), ROW_NUMBER() OVER (ORDER BY creationdate), * FROM Users WHERE Reputation >= 100000 ORDER BY Reputation DESC","CreationDate":"2019-12-07 20:12:02","validated":false,"QueryBody_Original":"SELECT  row_number() OVER (Order by reputation desc), row_number() OVER (Order by creationdate asc), *\nFROM\n    Users\nWHERE\n    Reputation >= 100000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":311253,"Title":"users with certain words in their profile or username","Description":null,"QueryBody":"SELECT id AS \"User Link\", aboutme FROM users WHERE displayname LIKE '%##Username##%'","CreationDate":"2015-06-10 06:44:11","validated":false,"QueryBody_Original":"SELECT  id as [User Link], aboutme\nfrom users\nwhere displayname like '%##Username##%'"},{"QuerySetId":311265,"Title":"Prevalence of Bootstrap, Foundation, and Responsive as Tags","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE (Tags LIKE '%bootstrap%' OR Tags LIKE '%boilerplate%' OR Tags LIKE '%foundation%')","CreationDate":"2017-04-24 22:45:21","validated":false,"QueryBody_Original":"SELECT \nCount(Id)\nfrom Posts \nwhere \n(Tags like '%bootstrap%'\nor Tags like '%boilerplate%'\nor Tags like '%foundation%')"},{"QuerySetId":311266,"Title":"Prevalence of Cross-Browser as Tags","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE (Tags LIKE '%cross browser%' OR Tags LIKE '%cross-browser%')","CreationDate":"2015-05-07 20:47:01","validated":false,"QueryBody_Original":"SELECT \ncount(Id)\nfrom Posts \nwhere \n(Tags like '%cross browser%'\nor Tags like '%cross-browser%')"},{"QuerySetId":312309,"Title":"Average Post Score by Day of the Week","Description":null,"QueryBody":"SELECT AVG(1.00 * Score) AS AvgScore, TIME_TO_STR(CreationDate, '%A') AS DayOfWeek FROM Posts GROUP BY TIME_TO_STR(CreationDate, '%A') ORDER BY SUM(Score) DESC","CreationDate":"2019-11-15 17:49:26","validated":false,"QueryBody_Original":"SELECT  Avg(1.00*Score) as AvgScore,datename(dw,CreationDate) as DayOfWeek \nFROM Posts\ngroup by datename(dw,CreationDate)\norder by sum(Score) DESC;"},{"QuerySetId":312494,"Title":"What is the Highest ranked question","Description":null,"QueryBody":"SELECT id, title, score, body FROM Posts WHERE PostTypeId = 1 AND score > 3000 ORDER BY score DESC","CreationDate":"2015-05-10 12:05:28","validated":false,"QueryBody_Original":"SELECT  id,title,score,body from Posts where PostTypeId = 1 and score > 3000 order by score desc ;"},{"QuerySetId":312670,"Title":"Top 25 Posts on your Site","Description":"Top 25 posts on your website, with links and posters.","QueryBody":"SELECT Score, Id AS \"Post Link\", OwnerDisplayName AS \"Poster\" FROM Posts ORDER BY Score DESC LIMIT 25","CreationDate":"2015-05-11 01:22:50","validated":false,"QueryBody_Original":"SELECT  TOP 25\n    Score,\n    Id as [Post Link],\n    OwnerDisplayName as [Poster]\nFROM \n Posts\nORDER BY \n Score DESC"},{"QuerySetId":312794,"Title":"Getting List of All users","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location = 'Tehran'","CreationDate":"2015-05-11 10:09:14","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Location = 'Tehran'"},{"QuerySetId":312816,"Title":"Largest user View \/ Reputation ratios including suspended users","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation FROM Users ORDER BY Reputation DESC LIMIT 256","CreationDate":"2018-06-29 22:42:22","validated":false,"QueryBody_Original":"SELECT  TOP 256\n  Id AS [User Link],\n  Reputation\nFROM\n  Users\nORDER BY\n  Reputation DESC"},{"QuerySetId":312860,"Title":"Chinese dissidents by keyword AboutMe or DisplayName","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, AboutMe FROM Users WHERE LOWER(AboutMe) LIKE N'%\u516d\u56db%' ORDER BY Reputation DESC LIMIT 256","CreationDate":"2017-09-20 09:35:57","validated":false,"QueryBody_Original":"SELECT  TOP 256\n  Id AS [User Link], Reputation, DisplayName, AboutMe\nFROM\n  Users\nWHERE\n  LOWER(AboutMe) LIKE N'%\u516d\u56db%'\nORDER BY Reputation DESC"},{"QuerySetId":312863,"Title":"Mentioned Ciro Santilli on AboutMe or DisplayName","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, AboutMe FROM Users WHERE LOWER(AboutMe) LIKE '%ciro santilli%' OR LOWER(DisplayName) LIKE '%ciro santilli%' OR LOWER(AboutMe) LIKE '%895245%' OR LOWER(DisplayName) LIKE '%895245%' ORDER BY Reputation DESC LIMIT 256","CreationDate":"2017-06-02 10:17:16","validated":false,"QueryBody_Original":"SELECT  TOP 256\n  Id AS [User Link], Reputation, DisplayName, AboutMe\nFROM\n  Users\nWHERE\n  LOWER(AboutMe) LIKE '%ciro santilli%' OR\n  LOWER(DisplayName) LIKE '%ciro santilli%' OR\n  LOWER(AboutMe) LIKE '%895245%' OR\n  LOWER(DisplayName) LIKE '%895245%'\nORDER BY Reputation DESC"},{"QuerySetId":313039,"Title":"Top 20 Most Answered Questions","Description":"Top 20 Most Answered Questions on your site. This is intended for sites like Puzzling.SE or Code Golf, but it should work anywhere.","QueryBody":"SELECT AnswerCount AS \"Answers\", Id AS \"Post Link\", CommentCount AS \"Comments\" FROM Posts ORDER BY AnswerCount DESC LIMIT 20","CreationDate":"2015-05-11 18:46:55","validated":false,"QueryBody_Original":"SELECT  TOP 20\n AnswerCount as [Answers],\n Id as [Post Link],\n CommentCount as [Comments]\nFROM\n Posts\nORDER BY\n AnswerCount DESC"},{"QuerySetId":313109,"Title":"Most commonly reported locations on user profiles","Description":null,"QueryBody":"SELECT Location, COUNT(*) AS UserCount, SUM(Reputation) AS TotalRep, CAST(SUM(Reputation) AS FLOAT(12, 3)) \/ COUNT(*) AS AvgRep FROM Users WHERE Location <> '' GROUP BY Location HAVING COUNT(*) >= 100 ORDER BY UserCount DESC, TotalRep DESC, AvgRep DESC LIMIT 1000","CreationDate":"2016-12-18 07:36:26","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    Location,\n    count(*) AS UserCount,\n    sum(Reputation) AS TotalRep,\n    CAST(sum(Reputation) AS decimal(12,3)) \/ count(*) AS AvgRep\nFROM\n    Users\nWHERE\n    Location <> ''\nGROUP BY\n    Location\nHAVING\n    count(*) >= 100\nORDER BY\n    UserCount DESC,\n    TotalRep DESC,\n    AvgRep DESC;"},{"QuerySetId":313111,"Title":"Number of edits per question.","Description":null,"QueryBody":"SELECT p.Id, p.Id AS \"Post Link\", (SELECT COUNT(ph.id) FROM PostHistory AS ph WHERE (ph.PostHistoryTypeId = 4 OR ph.PostHistoryTypeId = 5) AND ph.PostId = 1 AND (ph.UserId IS NULL OR ph.UserId <> (SELECT ph2.UserId FROM PostHistory AS ph2 WHERE ph2.PostId = ph.PostId AND ph2.PostHistoryTypeId = 1))) FROM Posts AS p WHERE p.PostTypeId = 1","CreationDate":"2015-05-11 20:30:07","validated":false,"QueryBody_Original":"SELECT  p.Id, p.Id as [Post Link], ( SELECT COUNT(ph.id)\n                                    FROM PostHistory ph\n                                    WHERE (ph.PostHistoryTypeId = 4 OR ph.PostHistoryTypeId = 5)\n                                    AND ph.PostId = 1\n                                    AND (ph.UserId IS NULL OR ph.UserId != (  SELECT ph2.UserId\n                                                                              From PostHistory ph2\n                                                                              WHERE ph2.PostId = ph.PostId\n                                                                              AND ph2.PostHistoryTypeId = 1)))\nFROM Posts p\nWHERE p.PostTypeId = 1"},{"QuerySetId":313448,"Title":"Has question received any answers after having accepted one?","Description":"This shows if a question has received any additional answers after having accepted one. To be more specific, this finds answers posted from the day after an answer was accepted onwards (since we cannot access the exact date the answer was accepted, dates get rewound back to midnight of that day). Does not account for possible changes of the accepted answer (e.g. q had accepted answer, new answer posted, changed accept vote to another answer).","QueryBody":"SELECT q.Id AS \"Post Link\", 'Accepted answer' = CONCAT('http:\/\/anime.stackexchange.com\/questions\/', q.AcceptedAnswerId), 'Newer answer' = CONCAT('http:\/\/anime.stackexchange.com\/questions\/', a.Id), 'Answer creation date' = a.CreationDate FROM posts AS q LEFT JOIN posts AS a ON a.ParentId = q.Id WHERE q.Id IN (SELECT p1.ParentId FROM posts AS p1 RIGHT JOIN votes AS v1 ON v1.PostId = p1.Id AND v1.VoteTypeId LIKE 1 WHERE p1.PostTypeId LIKE 2) AND a.CreationDate > ANY (SELECT v2.CreationDate FROM posts AS p2 RIGHT JOIN votes AS v2 ON v2.PostId = p2.Id AND v2.VoteTypeId LIKE 1 WHERE p2.PostTypeId LIKE 2) AND q.AcceptedAnswerId <> a.Id ORDER BY q.LastActivityDate DESC","CreationDate":"2015-05-12 23:34:35","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link],\n'Accepted answer' = concat('http:\/\/anime.stackexchange.com\/questions\/', q.AcceptedAnswerId),\n'Newer answer' = concat('http:\/\/anime.stackexchange.com\/questions\/', a.Id),\n'Answer creation date' = a.CreationDate\n\nFROM posts q\n\nLEFT JOIN posts a ON a.ParentId = q.Id\n\nWHERE q.Id IN (SELECT p1.ParentId\n  FROM posts p1\n  RIGHT JOIN votes v1 ON v1.PostId = p1.Id AND v1.VoteTypeId LIKE 1\n  WHERE p1.PostTypeId LIKE 2\n  )\n  \nAND a.CreationDate > ANY(SELECT v2.CreationDate\n  FROM posts p2\n  RIGHT JOIN votes v2 ON v2.PostId = p2.Id AND v2.VoteTypeId LIKE 1\n  WHERE p2.PostTypeId LIKE 2\n  )\n  \nAND q.AcceptedAnswerId != a.Id\n\n  \nORDER BY q.LastActivityDate DESC"},{"QuerySetId":313463,"Title":"How many active users are there?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE LastAccessDate >= DATEADD(dd, -30, GETDATE())","CreationDate":"2015-05-12 19:57:13","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Users\nWHERE LastAccessDate >= DATEADD(dd, -30, getdate());"},{"QuerySetId":313621,"Title":"Average total views per question by date","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE) AS date, AVG(CAST(ViewCount AS FLOAT)) AS avg_views FROM Posts WHERE PostTypeID = 1 GROUP BY CAST(CreationDate AS DATE) ORDER BY date DESC","CreationDate":"2015-05-13 01:25:36","validated":false,"QueryBody_Original":"SELECT  CONVERT(date, CreationDate) AS date, AVG(CAST(ViewCount AS FLOAT)) AS avg_views\nFROM Posts\nWHERE PostTypeID = 1\nGROUP BY CONVERT(date, CreationDate)\nORDER BY date DESC;"},{"QuerySetId":313777,"Title":"Distribution of users by the number of upvotes","Description":null,"QueryBody":"SELECT UpVotes AS upvotes, COUNT(*) AS total_users FROM Users WHERE Reputation >= 15 GROUP BY UpVotes ORDER BY UpVotes","CreationDate":"2015-05-13 13:28:51","validated":false,"QueryBody_Original":"SELECT  UpVotes as upvotes, COUNT(*) as total_users\nFROM Users\nWHERE Reputation >= 15\nGROUP BY UpVotes\nORDER BY UpVotes ASC"},{"QuerySetId":313913,"Title":"How often is a new answer posted? ","Description":null,"QueryBody":"SELECT CreationDate FROM posts LIMIT 1","CreationDate":"2015-05-13 20:23:18","validated":false,"QueryBody_Original":"SELECT  top(1) CreationDate from posts"},{"QuerySetId":313986,"Title":"Total bad questions, good questions, and total questions.","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND AnswerCount > 1","CreationDate":"2015-08-26 11:28:06","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts WHERE\n  PostTypeId = 1\n  AND AnswerCount > 1"},{"QuerySetId":314111,"Title":"Number of \"bad\" questions, \"good\" questions, and total questions.","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND Score <= 0 AND NOT ClosedDate IS NULL","CreationDate":"2015-05-14 07:44:26","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts WHERE\n  PostTypeId = 1 AND\n  Score <= 0 AND\n  ClosedDate IS NOT NULL;\n  \n-- Get the number of \"good\" questions\nSELECT COUNT(*) FROM Posts WHERE\n  PostTypeId = 1 AND\n  Score >= 0 AND\n  ClosedDate IS NULL;\n  \n-- Get the total number of questions\nSELECT COUNT(*) FROM Posts WHERE\n  PostTypeId = 1;"},{"QuerySetId":314253,"Title":"Get number of questions in a single month","Description":null,"QueryBody":"SELECT COUNT(id) FROM Posts WHERE PostTypeId = 1 AND CreationDate > '2015-04-01' AND CreationDate < '2015-05-01'","CreationDate":"2015-05-14 15:02:17","validated":false,"QueryBody_Original":"SELECT  count(id) from Posts\nwhere PostTypeId=1 AND CreationDate > '2015-04-01' AND CreationDate < '2015-05-01'"},{"QuerySetId":315109,"Title":"Comments with the same text","Description":null,"QueryBody":"SELECT SUBSTRING(c.Text, STR_POSITION(c.Text, '@'), LENGTH(c.Text)) AS \"Text\" FROM Comments AS c GROUP BY \"Text\"","CreationDate":"2015-05-17 01:56:16","validated":false,"QueryBody_Original":"SELECT \n  substring(c.Text, charindex('@', c.Text), len(c.Text)) as [Text]\nfrom\n  Comments as c\ngroup by\n  [Text]"},{"QuerySetId":315385,"Title":"Find a question containing Vim that I have upvoted","Description":null,"QueryBody":"SELECT posts.Id AS \"Post Link\", users.Id, users.DisplayName, votes.Id, posts.*, votes.* FROM Users AS users INNER JOIN Votes AS votes ON votes.UserId = users.Id INNER JOIN Posts AS posts ON posts.Id = votes.PostId WHERE users.DisplayName = 'shantanuo' LIMIT 100","CreationDate":"2019-02-01 17:41:55","validated":false,"QueryBody_Original":"SELECT  TOP 100 posts.Id AS [Post Link], users.Id, users.DisplayName, votes.Id, posts.*, votes.*\nFROM Users users\n  INNER JOIN Votes votes ON votes.UserId = users.Id\n  INNER JOIN Posts posts ON posts.Id =  votes.PostId\nWHERE\n            users.DisplayName = 'shantanuo'"},{"QuerySetId":316736,"Title":"Most upvoted questions closed as unclear what you'are asking and then reopened","Description":null,"QueryBody":"SELECT q.ViewCount AS Views, q.Score AS score, q.Id AS \"Post Link\" FROM Posts AS q INNER JOIN PostHistory AS h ON q.Id = h.PostId WHERE h.PostHistoryTypeId = 10 AND h.Comment = 103 AND NOT q.ClosedDate IS NULL ORDER BY score LIMIT 20","CreationDate":"2018-04-26 14:58:17","validated":false,"QueryBody_Original":"SELECT  TOP 20\n  q.ViewCount AS Views,\n  q.Score as score,\n  q.Id AS [Post Link]\nFROM Posts q\nINNER JOIN PostHistory h ON q.Id = h.PostId\nWHERE h.PostHistoryTypeId = 10\n  AND h.Comment=103\n  AND q.ClosedDate IS NOT NULL\nORDER BY score ASC"},{"QuerySetId":317915,"Title":"Top Users by Number of Bounty Points","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", COUNT(*) AS BountiesWon, SUM(Votes.BountyAmount) AS Booty FROM Votes INNER JOIN Posts ON Votes.PostId = Posts.Id WHERE VoteTypeId = 9 GROUP BY Posts.OwnerUserId ORDER BY Booty DESC LIMIT 100","CreationDate":"2015-05-24 01:36:07","validated":false,"QueryBody_Original":"SELECT  Top 100\nPosts.OwnerUserId As [User Link], COUNT(*) As BountiesWon, SUM(Votes.BountyAmount) as Booty\nFROM Votes\n  INNER JOIN Posts ON Votes.PostId = Posts.Id\nWHERE\n  VoteTypeId=9\nGROUP BY\n  Posts.OwnerUserId\nORDER BY\n  Booty DESC"},{"QuerySetId":317917,"Title":"Top Users by Bounty Points","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", COUNT(*) AS BountiesWon, SUM(Votes.BountyAmount) AS Booty FROM Votes INNER JOIN Posts ON Votes.PostId = Posts.Id WHERE VoteTypeId = 9 GROUP BY Posts.OwnerUserId ORDER BY Booty DESC LIMIT 300","CreationDate":"2016-12-08 07:42:32","validated":false,"QueryBody_Original":"SELECT  Top 300\nPosts.OwnerUserId As [User Link], COUNT(*) As BountiesWon, SUM(Votes.BountyAmount) as Booty\nFROM Votes\n  INNER JOIN Posts ON Votes.PostId = Posts.Id\nWHERE\n  VoteTypeId=9\nGROUP BY\n  Posts.OwnerUserId\nORDER BY\n  Booty DESC"},{"QuerySetId":319013,"Title":" Closed Questions User was the First to Close Vote","Description":null,"QueryBody":"SELECT h.PostId AS \"Post Link\", h.Text FROM PostHistory AS h INNER JOIN Posts AS p ON p.Id = h.PostId AND NOT p.ClosedDate IS NULL AND h.PostHistoryTypeId = 10 AND h.Text LIKE CONCAT('%Voters\":_{\"Id\":', '##UserId##', '%') ORDER BY h.CreationDate LIMIT 100","CreationDate":"2015-05-26 17:47:50","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  h.PostId as [Post Link],\n  h.Text\nFROM\n  PostHistory h\nINNER JOIN\n  Posts p\nON\n  p.Id = h.PostId AND\n  p.ClosedDate IS NOT NULL AND\n  h.PostHistoryTypeId = 10 AND\n  h.Text LIKE CONCAT('%Voters\":_{\"Id\":', '##UserId##', '%')\nORDER BY\n  h.CreationDate ASC"},{"QuerySetId":319270,"Title":"Populist badge candidate users and posts","Description":null,"QueryBody":"SELECT answers.OwnerUserId AS \"User Link\", answers.Id AS \"Post Link\", answers.CreationDate, answers.Score AS \"User score\", acceptedanswers.score AS \"accepted answer score\" FROM Posts AS answers INNER JOIN Posts AS questions ON answers.ParentId = questions.Id INNER JOIN Posts AS acceptedanswers ON questions.AcceptedAnswerId = acceptedanswers.Id WHERE acceptedanswers.Score > 5 AND answers.OwnerUserId = 2641576 ORDER BY answers.CreationDate DESC, answers.Score","CreationDate":"2015-05-27 12:00:25","validated":false,"QueryBody_Original":"SELECT  \n  answers.OwnerUserId as [User Link],\n  answers.Id as [Post Link],\n  answers.CreationDate,\n  answers.Score as [User score],\n  acceptedanswers.score as [accepted answer score]\nFROM Posts AS answers\nINNER JOIN Posts AS questions\n  ON answers.ParentId=questions.Id\nINNER JOIN Posts AS acceptedanswers\n  ON questions.AcceptedAnswerId=acceptedanswers.Id\nWHERE acceptedanswers.Score>5\n  and answers.OwnerUserId = 2641576\nORDER BY answers.CreationDate DESC, answers.Score ASC"},{"QuerySetId":320029,"Title":"List of posts with pending undelete votes","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Votes AS V WHERE VoteTypeId = 11","CreationDate":"2017-08-24 02:38:29","validated":false,"QueryBody_Original":"SELECT \n  Id as [Post Link]\nFROM\n  Votes V\nWHERE VoteTypeId = 11"},{"QuerySetId":320108,"Title":"Highly viewed questions with no accepted answer","Description":null,"QueryBody":"SELECT p.ViewCount, p.Id AS \"Post Id\", p.Title, p.AnswerCount FROM Posts AS p WHERE p.PostTypeId = 1 AND p.AcceptedAnswerId IS NULL AND p.ClosedDate IS NULL AND p.CommunityOwnedDate IS NULL AND p.AnswerCount = 0 ORDER BY p.ViewCount DESC LIMIT 100","CreationDate":"2015-05-28 19:22:23","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  p.ViewCount, p.Id AS \"Post Id\", p.Title, p.AnswerCount\nFROM Posts p\nWHERE p.PostTypeId = 1 AND\n  p.AcceptedAnswerId IS NULL AND\n  p.ClosedDate IS NULL AND\n  p.CommunityOwnedDate IS NULL\n  AND p.AnswerCount = 0\nORDER BY p.ViewCount DESC"},{"QuerySetId":320297,"Title":"DATEDIFF(day, DATEADD(yy, DATEDIFF(yy,0,getdate()), 0), today) \/DATEDIFF(day, DATEADD(y","Description":null,"QueryBody":"SELECT DATEADD(mm, DATEDIFF(mm, 0, DATEADD(ms, -3, DATEADD(yy, DATEDIFF(yy, 0, DATEADD(YEAR, -1, GETDATE())), 0))), 0)","CreationDate":"2017-11-24 20:03:22","validated":false,"QueryBody_Original":"SELECT  DATEADD(mm, DATEDIFF(mm,0, dateadd(ms,-3,DATEADD(yy, DATEDIFF(yy,0,DATEADD(YEAR, -1, GETDATE()) ), 0))), 0)"},{"QuerySetId":320482,"Title":"Good Question, Good Answer & Good Query :)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score FROM Posts WHERE posttypeid IN (1, 2) AND score = 99","CreationDate":"2015-06-02 12:22:33","validated":false,"QueryBody_Original":"SELECT  \nId as [Post Link], Score \nfrom Posts \nwhere posttypeid IN (1 , 2)\nand score = 99"},{"QuerySetId":320973,"Title":"Top 100 users from kerala","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kerala%' OR UPPER(Location) LIKE '%Kerala' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2015-05-31 11:48:33","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kerala%'\n    OR UPPER(Location) LIKE '%Kerala'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":321628,"Title":"Top users sorted by percentage of answers on closed questions","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = Users.Id AND PostTypeID = 2) AS TotalAnswers, (SELECT COUNT(*) FROM Posts AS aPosts LEFT JOIN Posts AS qPosts ON qPosts.PostTypeID = 1 \/* Questions *\/ AND qPosts.ID = aPosts.ParentId WHERE aPosts.OwnerUserId = Users.Id AND aPosts.PostTypeID = 2 AND NOT qPosts.ClosedDate IS NULL) \/ (SELECT COUNT(*) + 0.000000001 FROM Posts WHERE OwnerUserId = Users.Id AND PostTypeID = 2) * 100 AS PercentageOnClosedQns, LastAccessDate FROM Users WHERE Reputation > 5000 ORDER BY PercentageOnClosedQns DESC","CreationDate":"2015-09-12 18:41:08","validated":false,"QueryBody_Original":"SELECT \n    Id AS [User Link], \n    Reputation,\n    (\n    SELECT COUNT(*) FROM Posts\n    WHERE\n        OwnerUserId = Users.Id AND\n        PostTypeID = 2\n    ) as TotalAnswers,\n    (\n    SELECT COUNT(*) FROM Posts as aPosts\n      LEFT JOIN Posts as qPosts\n        ON qPosts.PostTypeID = 1 --Questions\n          AND qPosts.ID = aPosts.ParentId\n    WHERE\n        aPosts.OwnerUserId = Users.Id AND\n        aPosts.PostTypeID = 2 AND\n        qPosts.ClosedDate IS NOT NULL\n    ) \/ (\n    SELECT COUNT(*) + 0.000000001 FROM Posts\n    WHERE\n        OwnerUserId = Users.Id AND\n        PostTypeID = 2\n    ) * 100 as PercentageOnClosedQns,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    Reputation > 5000\nORDER BY\n    PercentageOnClosedQns DESC;"},{"QuerySetId":321698,"Title":"Find non JS questions using Stack Snippets","Description":null,"QueryBody":"SELECT * FROM posts WHERE body LIKE '%begin snippet%' AND CreationDate > CAST('2014-09-16' AS DATETIME)","CreationDate":"2015-06-02 15:05:15","validated":false,"QueryBody_Original":"SELECT  * from posts where body LIKE '%begin snippet%' AND CreationDate > Convert(datetime, '2014-09-16' )"},{"QuerySetId":321844,"Title":"What's your Electorate Badge progress?","Description":"Show total votes and Total vote on question (need 600 for Electorate)\r\n(There appears to be a problem with the database, since it claims\r\nI've only votes 17 times)","QueryBody":"SELECT v.Id AS \"user link\", v.upvotes, v.downvotes FROM Users AS v","CreationDate":"2016-04-18 04:03:09","validated":false,"QueryBody_Original":"SELECT  v.Id as [user link], v.upvotes, v.downvotes\nFROM    Users v"},{"QuerySetId":321942,"Title":"Recently Active Users (within last 30 days) with active Posts","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\", COUNT(P.Id) AS PostCount FROM Users AS U INNER JOIN Posts AS P ON P.OwnerUserID = U.Id WHERE P.CreationDate > GETUTCDATE() - 30 AND U.LastAccessDate > GETUTCDATE() - 30 GROUP BY U.Id ORDER BY PostCount DESC","CreationDate":"2016-06-19 06:42:28","validated":false,"QueryBody_Original":"SELECT  U.Id as [User Link], \n-- U.Reputation, U.LastAccessDate,\nCOUNT(P.Id) As PostCount\n     from Users as U\ninner join \n        Posts as P\nOn P.OwnerUserID=U.Id\n     \n        where P.CreationDate > GETUTCDATE()-30 and\n      U.LastAccessDate > GETUTCDATE()-30\n\nGROUP BY U.Id order by PostCount DESC;"},{"QuerySetId":322450,"Title":"Select posts with historic use of tag","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE PostHistoryTypeId IN (3, 6) AND Text LIKE '%<database-schema>%'","CreationDate":"2015-06-04 17:22:57","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link]\nfrom PostHistory\nwhere PostHistoryTypeId in (3,6)\n  and Text like '%<database-schema>%'"},{"QuerySetId":322530,"Title":"Posts with an externally hosted image","Description":null,"QueryBody":"SELECT Body, Id AS \"Post Link\" FROM Posts WHERE LOWER(Body) LIKE '%<img%' AND NOT LOWER(Body) LIKE '%<img src=\"http:\/\/i.stack.imgur.com\/%'","CreationDate":"2015-06-05 02:21:58","validated":false,"QueryBody_Original":"SELECT  Body, Id as [Post Link]\nFROM Posts\nWHERE lower(Body) LIKE '%<img%'\nAND lower(Body) NOT LIKE '%<img src=\"http:\/\/i.stack.imgur.com\/%'"},{"QuerySetId":323317,"Title":"Post Basics, Filtered More (Tutorial)","Description":null,"QueryBody":"SELECT Title, Id, Score, ViewCount, creationdate, posttypeid FROM Posts WHERE creationdate >= '2015-07-27 00:00:00.000' AND PostTypeId = 0 OR Score >= 25","CreationDate":"2020-10-21 16:41:19","validated":false,"QueryBody_Original":"SELECT  Title, Id, Score, ViewCount, creationdate, posttypeid\nFROM Posts\nWHERE creationdate >= '2015-07-27 00:00:00.000'\n\nAND PostTypeId = 0\nOr Score >= 25"},{"QuerySetId":323543,"Title":"Best average score per post","Description":null,"QueryBody":"SELECT users.id AS \"User Link\", COUNT(posts.id) AS \"Posts\", SUM(posts.score) AS \"Score\", ROUND(CAST(SUM(posts.score) AS FLOAT) \/ COUNT(posts.id), 1) AS \"Average score\" FROM users, posts WHERE posts.owneruserid = users.id GROUP BY users.id HAVING COUNT(posts.id) >= 10 ORDER BY \"Average score\" DESC","CreationDate":"2015-06-08 18:01:57","validated":false,"QueryBody_Original":"SELECT  users.id as [User Link], \n  count(posts.id) as [Posts], \n  sum(posts.score) as [Score], \n  round(cast(sum(posts.score) as float) \/ count(posts.id), 1) as [Average score]\nfrom users, posts \nwhere posts.owneruserid = users.id\ngroup by users.id\nhaving count(posts.id) >= 10\norder by [Average score] desc"},{"QuerySetId":323563,"Title":"Link only answers with select-able answerscore and answerlength.","Description":null,"QueryBody":"SELECT c.PostId AS \"Post Link\", c.text, p.tags FROM comments AS c INNER JOIN posts AS p ON p.Id = c.PostId WHERE c.Score = 0 AND UPPER(c.text) LIKE '%HTTP:\/\/%' AND YEAR(c.creationdate) >= 2015 AND p.PostTypeId = 2 LIMIT 5","CreationDate":"2015-06-08 16:49:49","validated":false,"QueryBody_Original":"SELECT  top(5)\n  c.PostId as [Post Link],\n  c.text,\n  p.tags\nfrom \n  comments c\ninner join \n  posts p\non\n  p.Id = c.PostId\nwhere\n  c.Score = 0\n  and UPPER(c.text) like '%HTTP:\/\/%'\n  and year(c.creationdate) >= 2015 \n  and p.PostTypeId = 2"},{"QuerySetId":323721,"Title":"Find the Unikitties!(For The Bridge)","Description":"Made to annoy nobody!","QueryBody":"SELECT Users.Id AS \"User Link\", Reputation, Views AS \"Profile Views\" FROM USERS WHERE NOT AccountId IS NULL AND Users.DisplayName LIKE 'Uni%' ORDER BY DisplayName DESC LIMIT 1000","CreationDate":"2015-06-25 18:44:16","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  Users.Id AS [User Link],\n  Reputation,\n  Views AS [Profile Views]\nFROM USERS\nWHERE AccountId IS NOT NULL AND Users.DisplayName like 'Uni%'\nORDER BY DisplayName DESC"},{"QuerySetId":323979,"Title":"Searching for String in Title\/Tags\/Body with minimum score 4 and with code in body","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Tags, ViewCount, AnswerCount, CommentCount, FavoriteCount, OwnerUserId, Title FROM Posts WHERE (PostTypeId = 1) AND (NOT Body LIKE '%<pre%><code>%') AND (Posts.Score >= 4) AND ((LOWER(Posts.Tags) LIKE LOWER(LTRIM(RTRIM('%<##Text##>%')))) OR (LOWER(Posts.Title) LIKE LOWER(LTRIM(RTRIM('%<##Text##>%')))) OR (LOWER(Posts.Body) LIKE LOWER(LTRIM(RTRIM('%<##Text##>%'))))) ORDER BY Score DESC","CreationDate":"2015-06-09 17:58:41","validated":false,"QueryBody_Original":"SELECT     Id AS [Post Link], Score, Tags, ViewCount, AnswerCount, CommentCount, FavoriteCount, OwnerUserId, Title \n\nFROM Posts\n\nWHERE\n     (PostTypeId = 1) AND\n     (Body NOT LIKE '%<pre%><code>%') AND\n     (Posts.Score >= 4) AND\n     ((lower(Posts.Tags) LIKE lower(LTRIM(RTRIM('%<##Text##>%')))) OR\n     (lower(Posts.Title) LIKE lower(LTRIM(RTRIM('%<##Text##>%')))) OR\n     (lower(Posts.Body) LIKE lower(LTRIM(RTRIM('%<##Text##>%')))))\n\n\nORDER BY Score DESC"},{"QuerySetId":324323,"Title":"Find off topic minecraft quesitons","Description":"Get all the off topic closed minecraft questions","QueryBody":"SELECT id AS \"Post Link\", title AS \"Post Title\", body AS \"Post Body\", score AS \"Vote Count\" FROM POSTS WHERE NOT CLOSEDDATE IS NULL AND title LIKE '%minecraft%' AND SCORE < 0","CreationDate":"2015-07-05 11:13:11","validated":false,"QueryBody_Original":"SELECT  id AS [Post Link],\n  title AS [Post Title],\n  body AS [Post Body],\n  score AS [Vote Count]\nFROM POSTS\nWHERE CLOSEDDATE IS NOT NULL AND title LIKE '%minecraft%' AND SCORE < 0"},{"QuerySetId":324474,"Title":"The lastest questions and answers ","Description":null,"QueryBody":"SELECT t1.Id, t1.ParentID, t1.PostTypeId, t1.CreationDate, t1.AcceptedAnswerId, t1.ViewCount, t1.Title, t1.Body, t1.Score, t2.PostTypeId, t2.CreationDate, t2.ViewCount, t2.Title, t2.Body, t2.Score, t1.OwnerUserId, Users.Id, Users.Reputation FROM Posts AS t1 INNER JOIN Posts AS t2 ON t2.Id = t1.ParentID INNER JOIN Users ON t2.OwnerUserId = Users.Id WHERE t2.CreationDate LIKE '%2015%' ORDER BY t2.CreationDate DESC","CreationDate":"2015-06-10 17:53:21","validated":false,"QueryBody_Original":"SELECT  t1.Id, t1.ParentID, t1.PostTypeId, t1.CreationDate, t1.AcceptedAnswerId, t1.ViewCount, t1.Title, t1.Body, t1.Score, t2.PostTypeId, t2.CreationDate, t2.ViewCount, t2.Title, t2.Body, t2.Score, t1.OwnerUserId, Users.Id, Users.Reputation\nfrom Posts t1\nInner JOIN Posts t2\nON t2.Id = t1.ParentID  \nInner JOIN Users\nON t2.OwnerUserId = Users.Id\nWhere t2.CreationDate Like '%2015%'\nOrder by t2.CreationDate desc"},{"QuerySetId":324554,"Title":"Top 100 questions matching given tags","Description":null,"QueryBody":"SELECT Id, Title, CreationDate, Tags, Body, ClosedDate, ViewCount, Score, FavoriteCount FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%##TagName1##%' AND Tags LIKE '%##TagName2##%' AND NOT Tags LIKE '%##ExcludedTag##%' ORDER BY ViewCount DESC, Score DESC, FavoriteCount DESC LIMIT 100","CreationDate":"2017-09-09 19:54:17","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id,Title,CreationDate,Tags,Body,ClosedDate,ViewCount, Score, FavoriteCount\nFROM Posts \nWHERE PostTypeId = 1 \nAND Tags LIKE '%##TagName1##%' \nAND Tags LIKE '%##TagName2##%' \nAND Tags NOT LIKE '%##ExcludedTag##%'\nORDER BY ViewCount DESC, Score DESC, FavoriteCount DESC"},{"QuerySetId":324640,"Title":"Bad questions, based on vote score and closure and the like","Description":null,"QueryBody":"SELECT Score, CASE WHEN ClosedDate IS NULL THEN 'Y' ELSE 'Er' END AS \"Closed?\", Id AS \"Post Link\" FROM Posts WHERE PostTypeId \/* It's a question *\/ = 1 AND (NOT ClosedDate \/* Closed *\/ IS NULL OR Score \/* Very negative score *\/ < -3) ORDER BY Score LIMIT 500","CreationDate":"2017-04-06 10:56:03","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    Score\n  , CASE\n      WHEN ClosedDate IS NULL THEN 'Y'\n      ELSE 'Er'\n    END AS [Closed?]\n  , Id AS [Post Link] FROM Posts\nWHERE\n  -- It's a question\n  PostTypeId = 1\n  AND (\n    -- Closed\n    ClosedDate IS NOT NULL\n    OR\n    -- Very negative score\n    Score < -3\n  )\nORDER BY Score ASC;"},{"QuerySetId":324739,"Title":"All posts of a user ","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", u.DisplayName, p.Id AS \"Post Link\", ParentId AS \"Post Link\", Title FROM posts AS p LEFT OUTER JOIN users AS u ON u.Id = OwnerUserId WHERE OwnerUserId = 65889","CreationDate":"2015-06-12 05:56:47","validated":false,"QueryBody_Original":"SELECT  OwnerUserId as [User Link], u.DisplayName, p.Id as [Post Link], ParentId as [Post Link], Title\nfrom posts p\nleft outer join users u on u.Id = OwnerUserId\nwhere OwnerUserId = 65889"},{"QuerySetId":324960,"Title":"Question-Answer distribution on non-closed questions","Description":null,"QueryBody":"SELECT AnswerCount, COUNT(*) FROM Posts WHERE PostTypeId = 1 GROUP BY AnswerCount ORDER BY AnswerCount","CreationDate":"2015-06-13 01:50:44","validated":false,"QueryBody_Original":"SELECT  AnswerCount, count(*)\nfrom Posts\nwhere PostTypeId = 1\ngroup by AnswerCount\norder by AnswerCount"},{"QuerySetId":325123,"Title":"Find Post Deletion Suspects ","Description":null,"QueryBody":"SELECT REPUTATION, DISPLAYNAME FROM USERS WHERE REPUTATION >= 20000 ORDER BY REPUTATION DESC, DISPLAYNAME","CreationDate":"2015-06-12 08:05:09","validated":false,"QueryBody_Original":"SELECT  REPUTATION, DISPLAYNAME\nFROM USERS\nWHERE REPUTATION >= 20000\nORDER BY REPUTATION DESC, DISPLAYNAME;"},{"QuerySetId":325144,"Title":"All StackOverflow articles in 2014","Description":null,"QueryBody":"SELECT * FROM posts WHERE Posts.CreationDate < '2015-01-01' AND Posts.CreationDate > '2014-12-31' LIMIT 5000","CreationDate":"2015-06-12 14:30:43","validated":false,"QueryBody_Original":"SELECT  TOP(5000) * from posts \nwhere Posts.CreationDate < '2015-01-01'\nand Posts.CreationDate > '2014-12-31'"},{"QuerySetId":325413,"Title":"Question-Answer distribution on all questions.","Description":null,"QueryBody":"SELECT Title, Id FROM Posts WHERE PostTypeId = 1 AND AnswerCount > 100 GROUP BY Title, Id","CreationDate":"2015-06-13 01:54:45","validated":false,"QueryBody_Original":"SELECT  Title, Id\nfrom Posts\nwhere PostTypeId = 1 and AnswerCount > 100\ngroup by Title, Id"},{"QuerySetId":325527,"Title":"Count of Meta.SE posts that may contain images with meaningful alt text","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Body LIKE '%<img%' AND NOT Body LIKE '%alt=\"enter image description here\"%' AND NOT Body LIKE '%alt=\"alt text\"%' AND NOT Body LIKE '%alt=\"\"%'","CreationDate":"2015-06-13 17:21:00","validated":false,"QueryBody_Original":"SELECT  count(*) \nFROM Posts \nWHERE Body LIKE '%<img%' \n  AND NOT Body LIKE '%alt=\"enter image description here\"%' \n  AND NOT Body LIKE '%alt=\"alt text\"%'\n  AND NOT Body LIKE '%alt=\"\"%'"},{"QuerySetId":326051,"Title":"Top SO users from Chennai(India)","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Chennai%' OR UPPER(Location) LIKE '%chennai%' OR Location LIKE '%Chennai%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2015-06-15 10:44:20","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Chennai%'\n    OR UPPER(Location) LIKE '%chennai%'\n    or Location like '%Chennai%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":326054,"Title":"Top SO users from Chennai","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Chennai%' OR UPPER(Location) LIKE '%chennai%' OR Location LIKE '%Chennai%' AND Reputation >= 2100 ORDER BY Reputation DESC","CreationDate":"2018-09-07 11:25:40","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Chennai%'\n    OR UPPER(Location) LIKE '%chennai%'\n    or Location like '%Chennai%'\n    AND Reputation >= 2100\nORDER BY\n    Reputation DESC;"},{"QuerySetId":326103,"Title":"Top 100 Questions by tags (sorted by score)","Description":null,"QueryBody":"SELECT Id, Title, CreationDate, Tags, ClosedDate, FavoriteCount, ViewCount, Score FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%##TagName1##%' AND Tags LIKE '%##TagName2##%' AND NOT Tags LIKE '%##ExcludedTag##%' ORDER BY Score DESC, ViewCount DESC LIMIT 100","CreationDate":"2015-06-15 11:29:53","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id,Title,CreationDate,Tags,ClosedDate,FavoriteCount,ViewCount,Score \nFROM Posts \nWHERE PostTypeId = 1 \nAND Tags LIKE '%##TagName1##%' \nAND Tags LIKE '%##TagName2##%' \nAND Tags NOT LIKE '%##ExcludedTag##%'\n--And Posts.CreationDate > GETDATE() - 365\nORDER BY Score DESC, ViewCount DESC"},{"QuerySetId":326146,"Title":"List users who post questions with input tags","Description":null,"QueryBody":"SELECT Users.Id, Users.DisplayName, WebsiteURL, COUNT(Posts.id) AS NumQuestion FROM Users, Posts WHERE Users.id = Posts.OwnerUserId AND Posts.PostTypeId = 1 AND Posts.Tags LIKE '%##TAG1##%' AND Posts.Tags LIKE '%##TAG2##%' AND NOT Posts.Tags LIKE '%##EXCLUDEDTAG##%' AND WebsiteURL <> '' AND NOT Users.id IN (1927832, 104998, 5218, 1589522, 1440785, 543, 8946, 9506, 13986, 15255, 24874, 37416, 88111, 98094, 108234, 158766, 174527, 176336, 219525, 277683, 325704, 488539, 581164, 648138, 681233, 717442, 784849, 942391, 942412, 955836, 1048138, 1183357, 1268003, 1438733, 1732418, 2014525, 2096538, 2105309, 2170265, 2513062, 2837388, 751, 973122, 1360853, 3117915, 4154201, 1113715, 1124494, 2104742, 2962624, 3078552) GROUP BY Users.Id, DisplayName, WebsiteURL ORDER BY NumQuestion DESC","CreationDate":"2015-07-07 16:39:01","validated":false,"QueryBody_Original":"SELECT  \nUsers.Id, Users.DisplayName, WebsiteURL, Count(Posts.id) as NumQuestion\nFROM \nUsers, Posts\nWHERE\nUsers.id = Posts.OwnerUserId\nAND Posts.PostTypeId = 1\nAND Posts.Tags LIKE '%##TAG1##%'\nAND Posts.Tags LIKE '%##TAG2##%'\nAND Posts.Tags NOT LIKE '%##EXCLUDEDTAG##%'\nAND WebsiteURL <>''\nAND Users.id NOT IN (1927832,104998,5218,1589522,1440785,543,8946,9506,13986,15255,24874,37416,88111,98094,108234,158766,174527,176336,219525,277683,325704,488539,581164,648138,681233,717442,784849,942391,942412,955836,1048138,1183357,1268003,1438733,1732418,2014525,2096538,2105309,2170265,2513062,2837388,751,973122,1360853,3117915,4154201,1113715,1124494,2104742,2962624,3078552)\nGroup by Users.Id, DisplayName, WebsiteURL \nOrder by NumQuestion DESC"},{"QuerySetId":326164,"Title":"Votes received on answers to closed questions vs votes received on all answers","Description":null,"QueryBody":"SELECT * FROM (SELECT u.id, u.DisplayName, SUM(a.score) AS allVotes, SUM(a.score * CASE WHEN q.ClosedDate IS NULL THEN 0 ELSE 1 END) AS closedVotes FROM Users AS u JOIN Posts AS a ON a.PostTypeId = 2 AND u.Id = a.OwnerUserId JOIN Posts AS q ON q.Id = a.ParentId GROUP BY u.id, u.DisplayName) AS x WHERE x.allVotes > 1000 ORDER BY x.closedVotes \/ x.allVotes DESC","CreationDate":"2015-06-15 14:52:13","validated":false,"QueryBody_Original":"SELECT  * from (SELECT u.id, u.DisplayName, sum(a.score) as allVotes, sum(a.score * case when q.ClosedDate is null then 0 else 1 end) as closedVotes\nfrom Users u\njoin Posts a on a.PostTypeId = 2 and u.Id = a.OwnerUserId\njoin Posts q on q.Id = a.ParentId\ngroup by u.id, u.DisplayName) x\nwhere x.allVotes > 1000\norder by x.closedVotes \/ x.allVotes desc"},{"QuerySetId":326487,"Title":"Finding Potential Posts To Be Closed","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", Score, Tags FROM Posts WHERE Score <= 0 AND ClosedDate IS NULL AND (LOWER(Title) LIKE '%broken%' OR LOWER(Title) LIKE '%fixing' OR LOWER(Title) LIKE '%debug my code%' OR LOWER(Title) LIKE '%help me fix%' OR LOWER(Title) LIKE '%debugging my code%')","CreationDate":"2015-06-16 04:31:00","validated":false,"QueryBody_Original":"SELECT  \n    Id AS [Post Link]\n  , OwnerUserId AS [User Link]\n  , Score\n  , Tags\n  FROM Posts WHERE\n    Score <= 0 AND\n    ClosedDate IS NULL AND\n    (\n      LOWER(Title) LIKE '%broken%' OR\n      LOWER(Title) LIKE '%fixing' OR\n      LOWER(Title) LIKE '%debug my code%' OR\n      LOWER(Title) LIKE '%help me fix%' OR\n      LOWER(Title) LIKE '%debugging my code%'\n    );"},{"QuerySetId":326698,"Title":"Answers per answered question - with or without self-answer","Description":null,"QueryBody":"SELECT SUM(CASE WHEN pa.id IS NULL THEN 1 ELSE 0 END) AS NnonSelf, SUM(CASE WHEN NOT pa.id IS NULL THEN 1 ELSE 0 END) AS NSelf, SUM(CASE WHEN pa.id IS NULL THEN p.answercount ELSE 0 END) * 1.0 \/ SUM(CASE WHEN pa.id IS NULL THEN 1 ELSE 0 END) AS AvgAnsNonSelf, SUM(CASE WHEN NOT pa.id IS NULL THEN p.answercount ELSE 0 END) * 1.0 \/ SUM(CASE WHEN NOT pa.id IS NULL THEN 1 ELSE 0 END) AS AvgAnsSelf FROM posts AS p LEFT OUTER JOIN posts AS pa ON pa.posttypeid = 2 AND pa.parentid = p.id AND pa.creationdate = p.creationdate AND pa.owneruserid = p.owneruserid WHERE p.closeddate IS NULL AND p.posttypeid = 1 AND p.answercount > 0","CreationDate":"2015-06-16 21:08:52","validated":false,"QueryBody_Original":"SELECT  \n    sum(case when pa.id is null then 1 else 0 end) as NnonSelf\n  , sum(case when pa.id is not null then 1 else 0 end) as NSelf\n  , sum(case when pa.id is null then p.answercount else 0 end) * 1.0 \/ \n    sum(case when pa.id is null then 1 else 0 end) as AvgAnsNonSelf\n  , sum(case when pa.id is not null then p.answercount else 0 end) * 1.0 \/ \n    sum(case when pa.id is not null then 1 else 0 end) as AvgAnsSelf\nfrom posts p\nleft outer join posts pa on\n      pa.posttypeid = 2\n  and pa.parentid = p.id\n  and pa.creationdate = p.creationdate\n  and pa.owneruserid = p.owneruserid\nwhere\n      p.closeddate is null\n  and p.posttypeid = 1\n  and p.answercount > 0"},{"QuerySetId":327098,"Title":"Daily most used tag ","Description":null,"QueryBody":"SELECT * FROM Posts","CreationDate":"2015-06-18 04:24:52","validated":false,"QueryBody_Original":"SELECT  * FROM Posts"},{"QuerySetId":327153,"Title":"Last posts with negative score","Description":null,"QueryBody":"SELECT \"Id\" AS \"Post Link\", \"Score\", \"CreationDate\", \"ClosedDate\", \"Body\" FROM Posts WHERE Score < -10 ORDER BY CreationDate DESC LIMIT 50","CreationDate":"2015-06-18 09:05:16","validated":false,"QueryBody_Original":"SELECT  TOP 50 [Id] AS [Post Link], [Score], [CreationDate], [ClosedDate], [Body] FROM Posts \nWHERE Score < -10\nORDER BY CreationDate DESC"},{"QuerySetId":327560,"Title":"Off topic questions in after 2015-1-1","Description":null,"QueryBody":"SELECT p.Id FROM Posts AS p INNER JOIN PostHistory AS ph ON p.Id = ph.PostId WHERE p.PostTypeId = 1 AND p.ClosedDate = ph.CreationDate AND ph.PostHistoryTypeId = 10 AND (comment = 102) AND p.ClosedDate > '2015-1-1'","CreationDate":"2015-06-19 07:12:27","validated":false,"QueryBody_Original":"SELECT  \n p.Id\nFROM Posts p\ninner join PostHistory ph on p.Id = ph.PostId\nWHERE p.PostTypeId = 1 AND p.ClosedDate = ph.CreationDate AND ph.PostHistoryTypeId = 10 and (comment = 102) AND p.ClosedDate > '2015-1-1'"},{"QuerySetId":327778,"Title":"Questions per Day - Rolling average","Description":null,"QueryBody":"SELECT DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate)) AS \"Date\", COUNT(*) FROM Posts WHERE ParentId IS NULL GROUP BY YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate)","CreationDate":"2015-07-20 10:11:11","validated":false,"QueryBody_Original":"SELECT  DATEFROMPARTS(year(CreationDate), month(CreationDate), day(CreationDate)) as [Date]\n  , count(*)\nfrom Posts where ParentId is null\ngroup by year(CreationDate), month(CreationDate), day(CreationDate)\norder by year(CreationDate), month(CreationDate), day(CreationDate) asc"},{"QuerySetId":328337,"Title":"Get users that have contributed to a keyword.","Description":null,"QueryBody":"SELECT p.Title, p.Tags, p.CreationDate, p.AnswerCount, p.CommentCount, p.OwnerUserId, Users.DisplayName, Users.Reputation FROM Posts AS p JOIN Users ON Users.Id = p.OwnerUserId WHERE p.Tags LIKE '%qt%' ORDER BY p.CreationDate","CreationDate":"2015-06-22 18:13:39","validated":false,"QueryBody_Original":"SELECT \n     p.Title, p.Tags, p.CreationDate,p.AnswerCount, p.CommentCount, p.OwnerUserId, Users.DisplayName, Users.Reputation\nFROM Posts p\n    JOIN Users on Users.Id = p.OwnerUserId\nWHERE    \n    p.Tags LIKE '%qt%' \nORDER BY\n    p.CreationDate"},{"QuerySetId":328703,"Title":"Number of users by number of digits of reputation","Description":null,"QueryBody":"SELECT CONCAT(POWER(10, rep_digits - 1) + 1, '-', POWER(10, rep_digits)) AS rep_bracket, count, CAST((count * 100.0) \/ (SELECT COUNT(*) FROM users) AS FLOAT(4, 2)) AS percentage FROM (SELECT CEIL(LOG10(reputation)) AS rep_digits, COUNT(*) AS count FROM users GROUP BY CEIL(LOG10(reputation))) AS x ORDER BY rep_digits","CreationDate":"2015-06-23 19:01:58","validated":false,"QueryBody_Original":"SELECT \n  concat(power(10, rep_digits - 1) + 1, '-', power(10, rep_digits)) rep_bracket,\n  count,\n  cast((count * 100.0) \/ (SELECT count(*) from users) as decimal(4,2)) as percentage\nfrom (\n  SELECT\n    ceiling(log10(reputation)) as rep_digits,\n    count(*) count\n    from users\n    group by ceiling(log10(reputation))) x\norder by rep_digits"},{"QuerySetId":328737,"Title":"rep loss -1 -> -2","Description":null,"QueryBody":"SELECT ID, DisplayName, (U.DownVotes * -2) AS Loss1, U.Reputation AS CurrentRep, (U.Reputation + U.DownVotes * -2) AS NewRep FROM Users AS U ORDER BY Loss1 LIMIT 100","CreationDate":"2015-06-23 22:01:38","validated":false,"QueryBody_Original":"SELECT  TOP 100 ID, DisplayName,\n              (U.DownVotes*-2) AS Loss1,\n              U.Reputation AS CurrentRep,\n              (U.Reputation + U.DownVotes*-2) AS NewRep\n              FROM Users U\nORDER BY Loss1 ASC"},{"QuerySetId":329033,"Title":"Worst Posts (according to votes)","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\" FROM Posts WHERE PostTypeId = 1 ORDER BY Score LIMIT 10","CreationDate":"2015-06-24 19:16:44","validated":false,"QueryBody_Original":"SELECT  TOP 10\n  Score,\n  Id AS [Post Link]\nFROM Posts\nWHERE PostTypeId = 1\nORDER BY Score ASC"},{"QuerySetId":329091,"Title":"Total Upvote to Downvote Ratio","Description":null,"QueryBody":"SELECT SUM(U.UpVotes) AS \"Total Up\", SUM(U.DownVotes) AS \"Total Down\" FROM Users AS U LEFT JOIN Posts AS p ON U.Id = P.OwnerUserId","CreationDate":"2015-06-24 21:27:05","validated":false,"QueryBody_Original":"SELECT  \n   SUM(U.UpVotes) AS \"Total Up\",\n   SUM(U.DownVotes) AS \"Total Down\"\nFROM Users U\n   LEFT JOIN Posts p ON U.Id = P.OwnerUserId"},{"QuerySetId":329173,"Title":"Percentage of users above a certain reputation threshold","Description":null,"QueryBody":"SELECT ((SELECT CAST(COUNT(*) AS FLOAT) FROM USERS WHERE Reputation >= 15) \/ (SELECT COUNT(*) FROM USERS))","CreationDate":"2015-06-25 07:57:47","validated":false,"QueryBody_Original":"SELECT  ((SELECT cast(count(*) as decimal) from USERS where Reputation >= 15) \/\n\n(SELECT count(*) from USERS))"},{"QuerySetId":329177,"Title":"Find people by a specific skill in Israel","Description":null,"QueryBody":"SELECT users.Id AS \"User Link\", displayname, emailhash, reputation, location FROM users INNER JOIN posthistory AS ph ON ph.userid = users.id INNER JOIN posts ON posts.id = ph.postid\/* and location not in ('','on the server farm') *\/  WHERE tags LIKE ('%##Skill##%') \/* and tags like '%ssis%'  *\/ AND location LIKE '%Israel%' ORDER BY reputation DESC","CreationDate":"2015-06-25 09:32:49","validated":false,"QueryBody_Original":"SELECT  users.Id [User Link],displayname, emailhash, reputation, location\nfrom users\ninner join posthistory ph\n  on ph.userid = users.id\ninner join posts\n  on posts.id = ph.postid\n  \n  where tags like ('%##Skill##%') -- and tags like '%ssis%'  \n-- and location not in ('','on the server farm')\nand location like '%Israel%'\norder by reputation desc"},{"QuerySetId":329178,"Title":"Find people with two specific skills in Israel","Description":null,"QueryBody":"SELECT users.Id AS \"User Link\", displayname, emailhash, reputation, location FROM users INNER JOIN posthistory AS ph ON ph.userid = users.id INNER JOIN posts ON posts.id = ph.postid WHERE tags LIKE ('%##Skill1##%') AND tags LIKE ('%##Skill2##%') \/* and tags like '%ssis%'  *\/ AND location LIKE '%Israel%' ORDER BY reputation DESC","CreationDate":"2015-06-25 09:55:03","validated":false,"QueryBody_Original":"SELECT  users.Id [User Link],displayname, emailhash, reputation, location\nfrom users\ninner join posthistory ph\n  on ph.userid = users.id\ninner join posts\n  on posts.id = ph.postid\n  \n  where tags like ('%##Skill1##%')\n  and tags like ('%##Skill2##%')  -- and tags like '%ssis%'  \nand location like '%Israel%'\norder by reputation desc"},{"QuerySetId":329249,"Title":"UniKitty's Testing grounds for this","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Reputation, Views AS \"Profile Views\" FROM USERS WHERE NOT AccountId IS NULL AND USERS.Reputation > 1 ORDER BY Reputation DESC LIMIT 10000","CreationDate":"2015-06-27 13:22:40","validated":false,"QueryBody_Original":"SELECT  TOP 10000\n  Users.Id AS [User Link],\n  Reputation,\n  Views AS [Profile Views]\nFROM USERS\nWHERE AccountId IS NOT NULL AND USERS.Reputation > 1\nORDER BY Reputation DESC"},{"QuerySetId":329416,"Title":"How many Tags are there?","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags WHERE TagName LIKE '%python%'","CreationDate":"2015-06-26 02:43:05","validated":false,"QueryBody_Original":"SELECT  TagName, Count\nfrom Tags\nwhere TagName LIKE '%python%'"},{"QuerySetId":329445,"Title":"Users with more than 1000 upvotes","Description":null,"QueryBody":"SELECT * FROM Users WHERE UpVotes > 1000","CreationDate":"2015-06-26 05:09:01","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE UpVotes>1000"},{"QuerySetId":329580,"Title":"Most number of great answers","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\", COUNT(A.Id) AS \"Number of Great Answers\" FROM Posts AS A INNER JOIN Users AS U ON A.OwnerUserId = U.Id WHERE A.Score > 100 GROUP BY U.Id HAVING COUNT(A.Id) > 30 ORDER BY \"Number of Great Answers\" DESC","CreationDate":"2015-06-26 14:44:41","validated":false,"QueryBody_Original":"SELECT  U.Id AS [User Link], COUNT(A.Id) [Number of Great Answers]\nFROM Posts A\nINNER JOIN Users U ON A.OwnerUserId = U.Id\nWHERE A.Score > 100\nGROUP BY U.Id\nHAVING COUNT(A.Id) > 30\nORDER BY [Number of Great Answers] DESC"},{"QuerySetId":329581,"Title":"Most number of votes on questions","Description":null,"QueryBody":"SELECT U.Id AS \"User Link\", COUNT(V.Id) AS \"Number of Votes on Questions\" FROM Users AS U INNER JOIN Votes AS V ON U.Id = V.UserId INNER JOIN Posts AS Q ON V.PostId = Q.Id WHERE Q.PostTypeId = 1 AND V.VoteTypeId = 5 GROUP BY U.Id HAVING COUNT(V.Id) > 3000 ORDER BY \"Number of Votes on Questions\" DESC","CreationDate":"2015-06-26 15:16:17","validated":false,"QueryBody_Original":"SELECT  U.Id AS [User Link], COUNT(V.Id) [Number of Votes on Questions]\nFROM Users U \nINNER JOIN Votes V ON U.Id = V.UserId\nINNER JOIN Posts Q ON V.PostId = Q.Id\nWHERE Q.PostTypeId = 1 \nAND V.VoteTypeId = 5\nGROUP BY U.Id\nHAVING COUNT(V.Id) > 3000\nORDER BY [Number of Votes on Questions] DESC"},{"QuerySetId":329619,"Title":"My Comments Order By Score(Votes No)","Description":null,"QueryBody":"SELECT * FROM Comments WHERE UserID = 1600305 ORDER BY Score DESC","CreationDate":"2015-06-26 18:20:52","validated":false,"QueryBody_Original":"SELECT  * from Comments where UserID=1600305 order by Score desc"},{"QuerySetId":329955,"Title":"relation between comment count and edit","Description":null,"QueryBody":"SELECT CommentCount, AVG(CAST(COALESCE(BodyEditCount, 0) AS FLOAT)), COUNT(*) AS c FROM Posts AS p LEFT JOIN (SELECT PostId, COUNT(*) AS BodyEditCount FROM PostHistory WHERE PostHistoryTypeId = 5 GROUP BY PostId) AS e ON e.PostId = p.Id WHERE PostTypeId = 1 GROUP BY CommentCount","CreationDate":"2015-06-29 01:25:03","validated":false,"QueryBody_Original":"SELECT  CommentCount, AVG(Cast(ISNULL(BodyEditCount, 0) as float)), COUNT(*) AS c\nFROM\nPosts AS p\nLEFT JOIN\n(SELECT PostId, COUNT(*) as BodyEditCount FROM PostHistory WHERE PostHistoryTypeId = 5 GROUP BY PostId) AS e\nON e.PostId = p.Id\nWHERE PostTypeId = 1\nGROUP BY CommentCount"},{"QuerySetId":330037,"Title":"How many people have websites linked to their profile?","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Website Count\" FROM Users WHERE NOT WebsiteUrl IS NULL","CreationDate":"2015-06-29 04:14:28","validated":false,"QueryBody_Original":"SELECT \nCOUNT(*) [Website Count]\n  FROM Users\n  WHERE WebsiteUrl IS NOT NULL"},{"QuerySetId":330086,"Title":"select comments with exact same text , with text like, and count > 2","Description":null,"QueryBody":"SELECT cc.Id AS \"Comment Link\" FROM Comments AS cc WHERE cc.Text IN (SELECT c.Text FROM Comments AS c WHERE c.Text LIKE '%##Text##%' COLLATE SQL_Latin1_General_CP1_CI_AS GROUP BY c.Text HAVING COUNT(c.Id) > 2 LIMIT 35) AND cc.CreationDate > '2015-05-22T00:00:00.000'","CreationDate":"2015-08-02 15:02:35","validated":false,"QueryBody_Original":"SELECT \n  cc.Id AS [Comment Link]\nFROM\n  Comments AS cc\nWHERE\ncc.Text IN (SELECT TOP 35 c.Text\n            FROM Comments AS c\n            WHERE c.Text LIKE '%##Text##%' COLLATE SQL_Latin1_General_CP1_CI_AS\n            GROUP BY c.Text\n            HAVING COUNT(c.Id) > 2\n            )\n and\n     cc.CreationDate > '2015-05-22T00:00:00.000'"},{"QuerySetId":330293,"Title":"All display names on StackOverflow sorted by frequency","Description":null,"QueryBody":"SELECT DisplayName, COUNT(DisplayName) FROM Users GROUP BY DisplayName ORDER BY COUNT(DisplayName) DESC","CreationDate":"2015-06-29 17:56:42","validated":false,"QueryBody_Original":"SELECT  DisplayName, COUNT(DisplayName) FROM Users\n  GROUP BY DisplayName\n  ORDER BY COUNT(DisplayName) DESC"},{"QuerySetId":330383,"Title":"Who favorited any question of mine?","Description":null,"QueryBody":"SELECT posts.owneruserid AS \"User Link\", COUNT(postid) AS \"Favourites\", COUNT(DISTINCT postid) AS \"Posts\" FROM votes INNER JOIN posts ON votes.postId = posts.id WHERE votetypeid = 5 GROUP BY owneruserid ORDER BY COUNT(postid) DESC LIMIT 500","CreationDate":"2015-06-30 05:11:47","validated":false,"QueryBody_Original":"SELECT  Top 500\n       posts.owneruserid as [User Link],\n       count (postid) as [Favourites],\n       count(distinct postid) as [Posts]\nfrom votes\n     inner join posts on votes.postId = posts.id\nwhere votetypeid = 5\ngroup by owneruserid\norder by count(postid) DESC"},{"QuerySetId":330466,"Title":"Unanswered Java questions by post length","Description":null,"QueryBody":"SELECT LENGTH(Body) AS \"Post Length\", Score, CreationDate, Id AS \"Post Link\", Tags FROM Posts WHERE Tags LIKE '%java%' AND AnswerCount = 0 AND ClosedDate IS NULL AND PostTypeId = 1 AND NOT Tags LIKE '%javascript%' ORDER BY \"Post Length\"","CreationDate":"2015-06-30 14:58:36","validated":false,"QueryBody_Original":"SELECT \n    LEN(Body) [Post Length]\n  , Score\n  , CreationDate\n  , Id [Post Link]\n  , Tags\nFROM Posts\nWHERE\n      Tags LIKE '%java%'\n  AND AnswerCount = 0\n  AND ClosedDate IS NULL\n  AND PostTypeId = 1\n  AND Tags NOT LIKE '%javascript%'\nORDER BY [Post Length] ASC"},{"QuerySetId":330579,"Title":"How much of SO am I?","Description":null,"QueryBody":"SELECT SUM(CASE WHEN id = 344949 THEN reputation END), SUM(reputation) FROM users","CreationDate":"2015-07-01 16:55:56","validated":false,"QueryBody_Original":"SELECT  sum(case when id=344949 then reputation end), sum(reputation) from users;"},{"QuerySetId":330624,"Title":"Get questions with particular tags asked by specific user","Description":null,"QueryBody":"SELECT Users.Id, Posts.id AS \"Post Link\" FROM Users, Posts\/* AND Users.id = '##USERID##' *\/  WHERE Users.id = Posts.OwnerUserId AND Posts.PostTypeId = 1 AND Posts.Tags LIKE '%##TAG1##%' AND Posts.Tags LIKE '%##TAG2##%' AND NOT Posts.Tags LIKE '%##EXCLUDEDTAG##%' AND Users.id IN (4154201, 2962624, 3078552, 973122, 1124494, 1360853, 751, 1113715, 3117915, 2104742) ORDER BY Users.Id","CreationDate":"2015-07-06 12:12:29","validated":false,"QueryBody_Original":"SELECT  \nUsers.Id, Posts.id AS [Post Link]\nFROM \nUsers, Posts\nWHERE\nUsers.id = Posts.OwnerUserId\nAND Posts.PostTypeId = 1\nAND Posts.Tags LIKE '%##TAG1##%'\nAND Posts.Tags LIKE '%##TAG2##%'\nAND Posts.Tags NOT LIKE '%##EXCLUDEDTAG##%'\n--AND Users.id = '##USERID##'\nAND Users.id IN (4154201,2962624,3078552,973122,1124494,1360853,751,1113715,3117915,2104742)\nORDER BY Users.Id"},{"QuerySetId":330966,"Title":"Get all users of provided location","Description":null,"QueryBody":"SELECT Id, DisplayName FROM Users WHERE location IN (SELECT DISTINCT (location) FROM Users WHERE location LIKE '%urgaon%')","CreationDate":"2015-07-01 17:31:07","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName\nfrom Users\nwhere location in (\nSELECT distinct(location)\nfrom Users\nwhere location like '%urgaon%')"},{"QuerySetId":330981,"Title":"Questions with \"Magento\" in title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE title LIKE '%Magento%'","CreationDate":"2015-07-01 17:18:00","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link]\nfrom Posts\nwhere title like '%Magento%'"},{"QuerySetId":331858,"Title":"Find user with given email","Description":null,"QueryBody":"SELECT * FROM users","CreationDate":"2015-07-03 18:09:20","validated":false,"QueryBody_Original":"SELECT  * from users"},{"QuerySetId":331859,"Title":"Number of users per location","Description":null,"QueryBody":"SELECT location, COUNT(*) AS cnt FROM users GROUP BY location ORDER BY cnt DESC LIMIT 100","CreationDate":"2015-07-03 18:13:06","validated":false,"QueryBody_Original":"SELECT  top  100 location, count(*) as cnt from users group by location order by cnt desc"},{"QuerySetId":332461,"Title":"select * from posts where id=1;","Description":null,"QueryBody":"SELECT * FROM posts WHERE id = 1","CreationDate":"2015-07-06 08:29:25","validated":false,"QueryBody_Original":"SELECT  * from posts where id=1;"},{"QuerySetId":332827,"Title":"Posts tagged language by location and view count","Description":null,"QueryBody":"SELECT Posts.ID, Posts.CreationDate, Posts.Tags, Posts.ViewCount, Users.Id, Users.Reputation, Users.Location FROM Posts LEFT JOIN Users ON Users.Id = Posts.OwnerUserId WHERE DATALENGTH(Posts.Title) > 0 AND DATALENGTH(Users.Location) > 0 AND Posts.CreationDate >= '2014-01-01T00:00:00.000' AND Posts.CreationDate <= '2015-07-06T00:00:00.000' AND Posts.Tags IN (SELECT Posts.Tags FROM Posts WHERE Posts.Tags LIKE '%ruby%' OR Posts.Tags LIKE '%php%' OR Posts.Tags LIKE '%python%' OR Posts.Tags LIKE '%javascript%' OR Posts.Tags LIKE '%MEAN%' OR Posts.Tags LIKE '%LAMP%' OR Posts.Tags LIKE '%rails%')","CreationDate":"2015-07-07 06:23:52","validated":false,"QueryBody_Original":"SELECT  Posts.ID, Posts.CreationDate, Posts.Tags, Posts.ViewCount, Users.Id, Users.Reputation, Users.Location\nFROM Posts\nLEFT JOIN Users ON Users.Id = Posts.OwnerUserId\nWHERE \n  DATALENGTH(Posts.Title) > 0 AND\n  DATALENGTH(Users.Location) > 0 AND\n  Posts.CreationDate >= '2014-01-01T00:00:00.000' AND\n  Posts.CreationDate <='2015-07-06T00:00:00.000' AND\n  Posts.Tags IN(SELECT Posts.Tags FROM Posts WHERE \n    Posts.Tags LIKE '%ruby%' OR\n    Posts.Tags LIKE '%php%' OR\n    Posts.Tags LIKE '%python%' OR\n    Posts.Tags LIKE '%javascript%' OR\n    Posts.Tags LIKE '%MEAN%' OR\n    Posts.Tags LIKE '%LAMP%' OR\n    Posts.Tags LIKE '%rails%')"},{"QuerySetId":332920,"Title":"All posts about web development","Description":null,"QueryBody":"SELECT * FROM POSTS WHERE Posts.CreationDate > '2020-01-01T00:00:00.000' AND Posts.Tags LIKE '%webdevelopment%'","CreationDate":"2020-02-24 23:23:39","validated":false,"QueryBody_Original":"SELECT  * FROM POSTS WHERE Posts.CreationDate > '2020-01-01T00:00:00.000' \nAND Posts.Tags LIKE '%webdevelopment%'"},{"QuerySetId":333158,"Title":"Who got the Autobiographer Badge?","Description":null,"QueryBody":"SELECT Badges.Name, Badges.UserId, Users.DisplayName, Users.LastAccessDate FROM Badges INNER JOIN Users ON Badges.UserID = Users.Id WHERE Badges.Name = 'Autobiographer'","CreationDate":"2015-07-07 17:48:32","validated":false,"QueryBody_Original":"SELECT  Badges.Name, Badges.UserId, Users.DisplayName, Users.LastAccessDate\nFROM Badges\nINNER JOIN Users\nON Badges.UserID = Users.Id\nWHERE Badges.Name='Autobiographer'"},{"QuerySetId":333162,"Title":"How many of each type of Badge are there?","Description":null,"QueryBody":"SELECT COUNT(DISTINCT Badges.Name) AS Number, Badges.Class AS Class FROM Badges WHERE Badges.TagBased = 0 GROUP BY Badges.Class","CreationDate":"2015-07-07 18:19:50","validated":false,"QueryBody_Original":"SELECT  COUNT(DISTINCT Badges.Name) AS Number , Badges.Class AS Class\nFROM Badges\nWhere Badges.TagBased = 0\nGROUP BY Badges.Class"},{"QuerySetId":333183,"Title":"Which Badges are the most dificult to get?","Description":null,"QueryBody":"SELECT Badges.Name AS Name, Badges.Class AS Class, COUNT(Users.Id) AS NumberUsers FROM Badges INNER JOIN Users ON Badges.UserId = Users.Id WHERE Badges.TagBased = 0 GROUP BY Name, Class ORDER BY NumberUsers","CreationDate":"2015-07-07 19:23:10","validated":false,"QueryBody_Original":"SELECT  Badges.Name AS Name, Badges.Class AS Class, COUNT(Users.Id) AS NumberUsers\nFROM Badges INNER JOIN Users ON Badges.UserId = Users.Id\nWHERE Badges.TagBased=0\nGROUP BY Name, Class\nORDER BY NumberUsers"},{"QuerySetId":333211,"Title":"Number of votes on max-upvoted answer versus Number of Questions in that category","Description":null,"QueryBody":"SELECT max_upvotes, COUNT(*) AS num_of_questions FROM (SELECT question_id, answer_id, MAX(upvotes) AS max_upvotes FROM (SELECT Posts.Id AS answer_id, Posts.ParentId AS question_id, COUNT(*) AS upvotes FROM Posts INNER JOIN Votes ON Posts.Id = Votes.PostId\/* is an Answer *\/  WHERE Posts.PostTypeId = 2 AND Votes.VoteTypeId = 2 \/* is an upvote, i.e upmod *\/ GROUP BY Posts.Id, Posts.ParentId) AS a GROUP BY question_id, answer_id) AS b GROUP BY max_upvotes ORDER BY max_upvotes","CreationDate":"2015-07-07 21:31:28","validated":false,"QueryBody_Original":"SELECT  max_upvotes, count(*) as num_of_questions FROM(\n    SELECT question_id, answer_id, max(upvotes) as max_upvotes FROM(\n        SELECT Posts.Id as answer_id, Posts.ParentId as question_id, count(*) as upvotes FROM \n        Posts INNER JOIN Votes ON Posts.Id=Votes.PostId\n        WHERE \n            Posts.PostTypeId = 2 AND \/* is an Answer *\/\n            Votes.VoteTypeId = 2   \/* is an upvote, i.e upmod *\/\n        GROUP BY Posts.Id, Posts.ParentId\n        ) a\n    GROUP BY question_id, answer_id\n    ) b\nGROUP BY max_upvotes\nORDER BY max_upvotes"},{"QuerySetId":333579,"Title":"Keywords for Qt posts Jan-March 2015","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%YEAR') AS Year, TIME_TO_STR(p.CreationDate, '%-mONT%-H') AS Month, COUNT(*) AS Questions, SUM(p.AnswerCount) AS Answers, SUM(p.Score) AS QuestionUpvotes, SUM(p.ViewCount) AS \"Views\", SUM(CASE WHEN p.Score > 1 THEN 1 ELSE 0 END) AS \"UpvotedQuestions\", SUM(CASE WHEN NOT p.AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) AS \"AcceptedQuestions\" FROM Posts AS p WHERE p.PostTypeId = 1 AND p.tags LIKE '%qt%' AND p.CreationDate >= '2015-01-01 00:00:00' AND p.CreationDate < '2015-04-01 00:00:00' GROUP BY TIME_TO_STR(p.CreationDate, '%YEAR'), TIME_TO_STR(p.CreationDate, '%-mONT%-H') ORDER BY Year, Month","CreationDate":"2015-07-08 16:52:09","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(YEAR, p.CreationDate) as Year, DATEPART(MONTH, p.CreationDate) as Month, Count(*) as Questions,\n  sum(p.AnswerCount) as Answers,\n  sum(p.Score) as QuestionUpvotes,\n  sum(p.ViewCount) as [Views],\n  sum(case when p.Score > 1 then 1 else 0 end) as [UpvotedQuestions],\n  sum(case when p.AcceptedAnswerId is not null then 1 else 0 end) as [AcceptedQuestions]\nfrom Posts p\nwhere p.PostTypeId=1 AND p.tags like '%qt%' AND p.CreationDate >= '2015-01-01 00:00:00' AND p.CreationDate < '2015-04-01 00:00:00'\nGROUP BY DATEPART(YEAR, p.CreationDate), DATEPART(MONTH, p.CreationDate)\nORDER BY Year, Month"},{"QuerySetId":333987,"Title":"Users with reputation > 5000 and < 10 answers","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, SUM(CASE WHEN Posts.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers, Users.Upvotes, Users.Downvotes FROM Users INNER JOIN Posts ON Users.Id = Posts.OwnerUserId AND (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2) AND Users.Reputation > 5000 GROUP BY Users.Id, Users.CreationDate, Users.LastAccessDate, Users.Reputation, Users.DisplayName, Users.CreationDate, Users.Views, Users.Upvotes, Users.Downvotes HAVING SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) < 10 ORDER BY Users.Id","CreationDate":"2015-07-09 18:08:49","validated":false,"QueryBody_Original":"SELECT \n    Users.Id AS [User Link],\n    Users.DisplayName,\n    Users.Reputation,\n    SUM(Case when Posts.PostTypeId = 1 then 1 else 0 end) As Questions,\n    SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) As Answers,\n    Users.Upvotes,\n    Users.Downvotes\nFROM Users\ninner join Posts on Users.Id = Posts.OwnerUserId\n    and (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2)\n    and Users.Reputation > 5000\nGROUP BY\n   Users.Id,\n   Users.CreationDate,\n   Users.LastAccessDate,\n   Users.Reputation,\n   Users.DisplayName,\n   Users.CreationDate,\n   Users.Views,\n   Users.Upvotes,\n   Users.Downvotes\nHAVING SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) < 10\nORDER BY Users.Id ASC"},{"QuerySetId":334176,"Title":"Users with reputation > 10000 and < 10 answers","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, SUM(CASE WHEN Posts.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers, Users.Upvotes, Users.Downvotes FROM Users INNER JOIN Posts ON Users.Id = Posts.OwnerUserId AND (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2) AND Users.Reputation > 10000 GROUP BY Users.Id, Users.CreationDate, Users.LastAccessDate, Users.Reputation, Users.DisplayName, Users.CreationDate, Users.Views, Users.Upvotes, Users.Downvotes HAVING SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) < 10 ORDER BY Users.Id","CreationDate":"2015-07-09 18:09:07","validated":false,"QueryBody_Original":"SELECT \n    Users.Id AS [User Link],\n    Users.DisplayName,\n    Users.Reputation,\n    SUM(Case when Posts.PostTypeId = 1 then 1 else 0 end) As Questions,\n    SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) As Answers,\n    Users.Upvotes,\n    Users.Downvotes\nFROM Users\ninner join Posts on Users.Id = Posts.OwnerUserId\n    and (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2)\n    and Users.Reputation > 10000\nGROUP BY\n   Users.Id,\n   Users.CreationDate,\n   Users.LastAccessDate,\n   Users.Reputation,\n   Users.DisplayName,\n   Users.CreationDate,\n   Users.Views,\n   Users.Upvotes,\n   Users.Downvotes\nHAVING SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) < 10\nORDER BY Users.Id ASC"},{"QuerySetId":334234,"Title":"Users with reputation > 10000 and < 20 answers","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, SUM(CASE WHEN Posts.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers, Users.Upvotes, Users.Downvotes FROM Users INNER JOIN Posts ON Users.Id = Posts.OwnerUserId AND (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2) AND Users.Reputation > 10000 GROUP BY Users.Id, Users.CreationDate, Users.LastAccessDate, Users.Reputation, Users.DisplayName, Users.CreationDate, Users.Views, Users.Upvotes, Users.Downvotes HAVING SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) < 20 ORDER BY Users.Id","CreationDate":"2015-07-09 18:20:23","validated":false,"QueryBody_Original":"SELECT \n    Users.Id AS [User Link],\n    Users.DisplayName,\n    Users.Reputation,\n    SUM(Case when Posts.PostTypeId = 1 then 1 else 0 end) As Questions,\n    SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) As Answers,\n    Users.Upvotes,\n    Users.Downvotes\nFROM Users\ninner join Posts on Users.Id = Posts.OwnerUserId\n    and (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2)\n    and Users.Reputation > 10000\nGROUP BY\n   Users.Id,\n   Users.CreationDate,\n   Users.LastAccessDate,\n   Users.Reputation,\n   Users.DisplayName,\n   Users.CreationDate,\n   Users.Views,\n   Users.Upvotes,\n   Users.Downvotes\nHAVING SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) < 20\nORDER BY Users.Id ASC"},{"QuerySetId":334235,"Title":"Users with reputation > 10000 and < 50 answers","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, SUM(CASE WHEN Posts.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers, Users.Upvotes, Users.Downvotes FROM Users INNER JOIN Posts ON Users.Id = Posts.OwnerUserId AND (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2) AND Users.Reputation > 10000 GROUP BY Users.Id, Users.CreationDate, Users.LastAccessDate, Users.Reputation, Users.DisplayName, Users.CreationDate, Users.Views, Users.Upvotes, Users.Downvotes HAVING SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) < 50 ORDER BY Users.Id","CreationDate":"2015-07-09 18:57:18","validated":false,"QueryBody_Original":"SELECT \n    Users.Id AS [User Link],\n    Users.DisplayName,\n    Users.Reputation,\n    SUM(Case when Posts.PostTypeId = 1 then 1 else 0 end) As Questions,\n    SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) As Answers,\n    Users.Upvotes,\n    Users.Downvotes\nFROM Users\ninner join Posts on Users.Id = Posts.OwnerUserId\n    and (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2)\n    and Users.Reputation > 10000\nGROUP BY\n   Users.Id,\n   Users.CreationDate,\n   Users.LastAccessDate,\n   Users.Reputation,\n   Users.DisplayName,\n   Users.CreationDate,\n   Users.Views,\n   Users.Upvotes,\n   Users.Downvotes\nHAVING SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) < 50\nORDER BY Users.Id ASC"},{"QuerySetId":334431,"Title":"Users with reputation > 5,000 who posted the least answers","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, SUM(CASE WHEN Posts.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers, Users.Upvotes, Users.Downvotes FROM Users INNER JOIN Posts ON Users.Id = Posts.OwnerUserId AND (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2) AND Users.Reputation > 5000 GROUP BY Users.Id, Users.CreationDate, Users.LastAccessDate, Users.Reputation, Users.DisplayName, Users.CreationDate, Users.Views, Users.Upvotes, Users.Downvotes ORDER BY Answers LIMIT 100","CreationDate":"2015-07-09 18:19:51","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    Users.Id AS [User Link], \n    Users.DisplayName,\n    Users.Reputation,\n    SUM(Case when Posts.PostTypeId = 1 then 1 else 0 end) As Questions,\n    SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) As Answers,\n    Users.Upvotes,\n    Users.Downvotes\nFROM Users\ninner join Posts on Users.Id = Posts.OwnerUserId\n    and (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2)\n    and Users.Reputation > 5000\nGROUP BY\n   Users.Id,\n   Users.CreationDate,\n   Users.LastAccessDate,\n   Users.Reputation,\n   Users.DisplayName,\n   Users.CreationDate,\n   Users.Views,\n   Users.Upvotes,\n   Users.Downvotes\nORDER BY Answers ASC"},{"QuerySetId":334434,"Title":"Users with reputation < 5,000 who posted the most answers","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, SUM(CASE WHEN Posts.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN Posts.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers, Users.Upvotes, Users.Downvotes FROM Users INNER JOIN Posts ON Users.Id = Posts.OwnerUserId AND (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2) AND Users.Reputation > 1 AND Users.Reputation < 5000 GROUP BY Users.Id, Users.CreationDate, Users.LastAccessDate, Users.Reputation, Users.DisplayName, Users.CreationDate, Users.Views, Users.Upvotes, Users.Downvotes ORDER BY Answers DESC LIMIT 100","CreationDate":"2015-07-09 18:19:42","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    Users.Id AS [User Link],\n    Users.DisplayName,\n    Users.Reputation,\n    SUM(Case when Posts.PostTypeId = 1 then 1 else 0 end) As Questions,\n    SUM(Case when Posts.PostTypeId = 2 then 1 else 0 end) As Answers,\n    Users.Upvotes,\n    Users.Downvotes\nFROM Users\ninner join Posts on Users.Id = Posts.OwnerUserId\n    and (Posts.PostTypeId = 1 OR Posts.PostTypeId = 2)\n    and Users.Reputation > 1\n    and Users.Reputation < 5000\nGROUP BY\n   Users.Id,\n   Users.CreationDate,\n   Users.LastAccessDate,\n   Users.Reputation,\n   Users.DisplayName,\n   Users.CreationDate,\n   Users.Views,\n   Users.Upvotes,\n   Users.Downvotes\nORDER BY Answers DESC"},{"QuerySetId":334448,"Title":"Users with reputation > 5000 who never downvoted","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.DisplayName, u.Reputation, u.DownVotes, u.UpVotes, u.LastAccessDate FROM Users AS u WHERE u.Reputation > 5000 AND u.DownVotes = 0 ORDER BY u.DownVotes, u.Reputation DESC LIMIT 500","CreationDate":"2015-07-09 19:14:57","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    u.Id AS [User Link], \n    u.DisplayName, \n    u.Reputation, \n    u.DownVotes, \n    u.UpVotes,\n    u.LastAccessDate\nFROM Users u\nWHERE u.Reputation > 5000\n   and u.DownVotes = 0\nORDER BY u.DownVotes ASC, u.Reputation DESC"},{"QuerySetId":334820,"Title":"Posting users and posts by hour of day, Friday and Saturday, GMT","Description":null,"QueryBody":"SELECT AVG(CAST(a.score AS FLOAT)) FROM posts AS q INNER JOIN posts AS a ON q.id = a.parentid WHERE DATEDIFF(a.creationdate, q.creationdate) < 1 AND LENGTH(a.body) > 500 AND DATEDIFF(a.creationdate, q.creationdate) > 0 AND a.owneruserid <> q.owneruserid","CreationDate":"2015-08-31 18:26:46","validated":false,"QueryBody_Original":"SELECT  avg(cast(a.score as float))\nfrom posts q inner join posts a on q.id=a.parentid\nwhere datediff(minute,q.creationdate,a.creationdate)<1\nand len(a.body)> 500\nand datediff(second,q.creationdate,a.creationdate)>0\nand a.owneruserid!=q.owneruserid"},{"QuerySetId":334836,"Title":"TOP 250 users from The Netherlands","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Turkey%' ORDER BY reputation DESC LIMIT 250","CreationDate":"2020-05-26 02:46:03","validated":false,"QueryBody_Original":"SELECT  TOP 250\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Turkey%'\nORDER BY\n   reputation DESC"},{"QuerySetId":335841,"Title":"The 10 Million Dollar Question","Description":null,"QueryBody":"SELECT Id, ID AS \"Post Link\", CreationDate, Score, ViewCount, OwnerDisplayName, AnswerCount, CommentCount, FavoriteCount FROM Posts WHERE PostTypeId = 1 AND ID = 10000000","CreationDate":"2015-07-13 14:02:16","validated":false,"QueryBody_Original":"SELECT  Id, ID AS [Post Link], CreationDate, Score, ViewCount, OwnerDisplayName, AnswerCount, CommentCount, FavoriteCount\nFROM Posts\nWHERE PostTypeId = 1\nAND ID = 10000000"},{"QuerySetId":336050,"Title":"Top 100 StackOverflow users from Nigeria","Description":null,"QueryBody":"SELECT Id, DisplayName AS \"Display Name\", Reputation, WebsiteUrl AS Website, Location FROM Users WHERE Location LIKE N'%Nigeria%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2020-01-20 06:09:31","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName as [Display Name],\n   Reputation,\n   WebsiteUrl as Website,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Nigeria%'\nORDER BY\n   reputation DESC"},{"QuerySetId":336071,"Title":"Examples of shell redirections involving file descriptors 3 and above","Description":"Search for posts containing redirections to or from fd 3 and above.\r\nOn Stack Overflow, you should restrict the search to a few tags by uncommenting the second part of the WHERE clause below.\r\n","QueryBody":"SELECT Id AS \"Post Link\", CreationDate AS \"Date\", OwnerUserId AS \"User Link\", Score AS \"Score\", Tags AS \"tags\" FROM Posts WHERE (Body LIKE '%[3-9]&[gl]t;&amp;%' OR Body LIKE '%&[gl]t;&amp;[3-9]%') AND (Tags LIKE '%[\u00e9]shell[\u00e0]%' OR Tags LIKE '%[\u00e9]shell-script[\u00e0]%' OR Tags LIKE '%[\u00e9]bash[\u00e0]%' OR Tags LIKE '%[\u00e9]ksh[\u00e0]%' OR Tags LIKE '%[\u00e9]zsh[\u00e0]%') ORDER BY Score DESC LIMIT 50","CreationDate":"2015-07-13 20:28:43","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  Id AS [Post Link],\n  CreationDate As [Date],\n  OwnerUserId As [User Link],\n  Score As [Score],\n  Tags as [tags]\nFROM Posts\nWHERE (Body LIKE '%[3-9]&[gl]t;&amp;%' OR Body LIKE '%&[gl]t;&amp;[3-9]%')\n  AND (Tags LIKE '%[\u00e9]shell[\u00e0]%' OR Tags LIKE '%[\u00e9]shell-script[\u00e0]%' OR\n       Tags LIKE '%[\u00e9]bash[\u00e0]%' OR Tags LIKE '%[\u00e9]ksh[\u00e0]%' OR Tags LIKE '%[\u00e9]zsh[\u00e0]%')\nORDER BY Score DESC"},{"QuerySetId":336313,"Title":"PostLinks that point to missing posts.","Description":null,"QueryBody":"SELECT LinkTypeId, COUNT(*) FROM PostLinks GROUP BY LinkTypeId","CreationDate":"2015-09-20 07:21:30","validated":false,"QueryBody_Original":"SELECT  LinkTypeId, count(*)\nfrom PostLinks\ngroup by LinkTypeId"},{"QuerySetId":336653,"Title":"Top 1000 StackOverflow users from South Africa","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, WebsiteUrl AS Website, Location FROM Users WHERE Location LIKE N'%South Africa%' ORDER BY reputation DESC LIMIT 1000","CreationDate":"2015-07-15 19:10:18","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id AS [User Link],\n   Reputation,\n   WebsiteUrl as Website,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%South Africa%'\nORDER BY\n   reputation DESC"},{"QuerySetId":336660,"Title":"all questions and answers zsh","Description":null,"QueryBody":"SELECT * FROM POSTS WHERE Score > 0 AND AnswerCount > 0","CreationDate":"2015-07-15 19:12:59","validated":false,"QueryBody_Original":"SELECT  * from POSTS where Score > 0 AND AnswerCount > 0"},{"QuerySetId":336800,"Title":"Unique occurrences of Dallas, Texas","Description":null,"QueryBody":"SELECT location, COUNT(*) FROM users WHERE UPPER(location) LIKE '%DALLAS%' OR UPPER(location) LIKE '%DFW%' GROUP BY location ORDER BY COUNT(*) DESC","CreationDate":"2015-07-16 00:14:46","validated":false,"QueryBody_Original":"SELECT  location\n     , count(*)\nfrom users\nwhere upper(location) like '%DALLAS%' or upper(location) like '%DFW%'\ngroup by location\norder by count(*) desc"},{"QuerySetId":337070,"Title":"Top 200 from Chennai, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%chennai%india%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-07-16 17:32:05","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%chennai%india%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":337368,"Title":"Select all profile images that use plain http","Description":null,"QueryBody":"SELECT SUBSTRING(ProfileImageUrl, 0, 20), COUNT(ProfileImageUrl) FROM Users WHERE (Users.ProfileImageURL LIKE 'gravatar') GROUP BY SUBSTRING(ProfileImageUrl, 0, 20)","CreationDate":"2016-01-29 04:23:04","validated":false,"QueryBody_Original":"SELECT  SubString(ProfileImageUrl, 0, 20), count(ProfileImageUrl)\nfrom Users WHERE (Users.ProfileImageURL LIKE 'gravatar')\ngroup by SubString(ProfileImageUrl, 0, 20)"},{"QuerySetId":337690,"Title":"Get tag wikis under a certain length","Description":"Search for tags without a proper wiki.","QueryBody":"SELECT tag.TagName, wiki.Body, wiki.LastEditDate FROM Tags AS tag LEFT JOIN Posts AS excerpt ON tag.ExcerptPostId = excerpt.Id LEFT JOIN Posts AS wiki ON tag.WikiPostId = wiki.Id WHERE LENGTH(wiki.Body) > 100 ORDER BY wiki.LastEditDate DESC LIMIT 1000","CreationDate":"2015-11-25 02:33:37","validated":false,"QueryBody_Original":"SELECT \n  TOP 1000\n  tag.TagName, wiki.Body, wiki.LastEditDate\nFROM\n  Tags tag\n  LEFT JOIN Posts excerpt ON tag.ExcerptPostId = excerpt.Id\n  LEFT JOIN Posts wiki ON tag.WikiPostId = wiki.Id\nWHERE\n  LEN(wiki.Body) > 100\nORDER BY\n  wiki.LastEditDate DESC"},{"QuerySetId":337709,"Title":"5000 newest answers to bad questions","Description":null,"QueryBody":"SELECT CASE WHEN q.acceptedanswerid = a.id THEN 1 ELSE 0 END AS \"Accepted\", a.score AS \"Score\", a.id AS \"Post Link\", q.closeddate AS \"Date Closed\", a.creationdate AS \"Date Posted\" FROM Posts AS a INNER JOIN posts AS q ON a.parentid = q.id WHERE NOT q.closeddate IS NULL AND NOT EXISTS(SELECT 1 FROM PostHistory WHERE PostId = q.Id AND CreationDate = q.ClosedDate AND PostHistoryTypeId = 10 AND Comment IN (101, 1)) ORDER BY q.creationdate DESC LIMIT 5000","CreationDate":"2015-07-18 20:52:35","validated":false,"QueryBody_Original":"SELECT  TOP 5000\n  case\n    when q.acceptedanswerid = a.id then 1\n    else 0 \n  end as [Accepted], a.score as [Score], a.id as [Post Link], q.closeddate as [Date Closed], a.creationdate as [Date Posted]\nfrom\n  Posts a\n  inner join posts q on a.parentid = q.id\nwhere\n  q.closeddate is not null\n  and not exists (SELECT 1 from PostHistory where PostId=q.Id and CreationDate=q.ClosedDate and PostHistoryTypeId=10 and Comment in (101,1))\norder by\n  q.creationdate desc"},{"QuerySetId":338298,"Title":"Questions that got an answer after they got closed","Description":"http:\/\/meta.stackexchange.com\/questions\/261039\/how-often-questions-get-answered-after-they-got-closed","QueryBody":"SELECT q.id AS \"Post Link\", q.closeddate, a.id AS \"Post Link\", a.creationdate, DATEDIFF(a.creationdate, q.closeddate) AS \"Minutes\", DATEDIFF(a.creationdate, q.closeddate) AS \"seconds\" FROM posts AS q INNER JOIN posts AS a ON a.parentid = q.id WHERE q.posttypeid = 1 \/* Q *\/ AND a.posttypeid = 2 \/* A *\/ AND NOT q.closeddate IS NULL \/* closed *\/ AND a.creationdate > q.closeddate AND NOT q.id IN (SELECT postid FROM posthistory WHERE posthistorytypeid = 10 GROUP BY postid HAVING COUNT(*) > 1) \/* questions that got closed and reopened *\/ ORDER BY DATEDIFF(a.creationdate, q.closeddate) DESC","CreationDate":"2015-07-20 14:03:03","validated":false,"QueryBody_Original":"SELECT  q.id as [Post Link]\n    ,  q.closeddate\n    ,  a.id as [Post Link]\n    ,  a.creationdate\n    , datediff(mi, q.closeddate, a.creationdate) as [Minutes]\n    , datediff(s, q.closeddate, a.creationdate) as [seconds]\nfrom posts q \ninner join posts a on a.parentid = q.id\nwhere q.posttypeid = 1 -- Q\nand a.posttypeid = 2 -- A\nand q.closeddate is not null -- closed\nand a.creationdate > q.closeddate \nand q.id not in (SELECT postid\n                 from posthistory \n                 where posthistorytypeid = 10\n                 group by postid\n                 having count(*) > 1) -- questions that got closed and reopened\n order by datediff(s, q.closeddate, a.creationdate) desc"},{"QuerySetId":338301,"Title":"Unique question that got answers after closing","Description":"http:\/\/meta.stackexchange.com\/questions\/261039\/how-often-questions-get-answered-after-they-got-closed","QueryBody":"SELECT qid AS \"Post Link\", COUNT(*) FROM (SELECT q.id AS qid, q.closeddate, a.id AS aid, a.creationdate, DATEDIFF(a.creationdate, q.closeddate) AS \"Minutes\", DATEDIFF(a.creationdate, q.closeddate) AS \"seconds\" FROM posts AS q INNER JOIN posts AS a ON a.parentid = q.id WHERE q.posttypeid = 1 \/* Q *\/ AND a.posttypeid = 2 \/* A *\/ AND NOT q.closeddate IS NULL \/* closed *\/ AND a.creationdate > q.closeddate AND NOT q.id IN (SELECT postid FROM posthistory WHERE posthistorytypeid = 10 GROUP BY postid HAVING COUNT(*) > 1) \/* questions that got closed and reopened *\/) AS main GROUP BY qid","CreationDate":"2015-07-20 14:02:34","validated":false,"QueryBody_Original":"SELECT  qid as [Post Link]\n, count(*)\nfrom\n(\nSELECT q.id  as qid\n    ,  q.closeddate\n    ,  a.id as aid\n    ,  a.creationdate\n    , datediff(mi, q.closeddate, a.creationdate) as [Minutes]\n    , datediff(s, q.closeddate, a.creationdate) as [seconds]\nfrom posts q \ninner join posts a on a.parentid = q.id\nwhere q.posttypeid = 1 -- Q\nand a.posttypeid = 2 -- A\nand q.closeddate is not null -- closed\nand a.creationdate > q.closeddate \nand q.id not in (SELECT postid\n                 from posthistory \n                 where posthistorytypeid = 10\n                 group by postid\n                 having count(*) > 1) -- questions that got closed and reopened\n) as main\ngroup by qid"},{"QuerySetId":338787,"Title":"Count of questions by score","Description":null,"QueryBody":"SELECT score, COUNT(id) FROM posts WHERE postTypeId = 2 AND OwnerUserId = 6309 GROUP BY score ORDER BY score DESC","CreationDate":"2016-04-04 08:46:41","validated":false,"QueryBody_Original":"SELECT  score, count(id)\nfrom posts\nwhere postTypeId = 2 and\nOwnerUserId = 6309  \ngroup by score\norder by score desc"},{"QuerySetId":338884,"Title":"Overview of the number of tags per question","Description":null,"QueryBody":"SELECT LENGTH(Tags) - LENGTH(REPLACE(Tags, '>', '')) AS Tag_Count, COUNT(*) AS Questions_With_X_Tags \/* http:\/\/stackoverflow.com\/questions\/738282\/how-do-you-count-the-number-of-occurrences-of-a-certain-substring-in-a-sql-varch *\/ FROM Posts WHERE PostTypeId = 1 GROUP BY LENGTH(Tags) - LENGTH(REPLACE(Tags, '>', ''))","CreationDate":"2015-07-22 04:22:49","validated":false,"QueryBody_Original":"SELECT  len(Tags) - len(replace(Tags, '>', '')) AS Tag_Count, COUNT(*) AS Questions_With_X_Tags\n-- http:\/\/stackoverflow.com\/questions\/738282\/how-do-you-count-the-number-of-occurrences-of-a-certain-substring-in-a-sql-varch\nFROM Posts WHERE PostTypeId = 1\nGROUP BY len(Tags) - len(replace(Tags, '>', ''))"},{"QuerySetId":338930,"Title":"Show User Details (Beginners Query)","Description":null,"QueryBody":"SELECT Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, ProfileImageUrl, Age, AccountId FROM Users WHERE Id = '##UserId##'","CreationDate":"2015-07-22 10:19:33","validated":false,"QueryBody_Original":"SELECT  Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl,\nLocation, AboutMe, Views, UpVotes, DownVotes, ProfileImageUrl, Age, AccountId\nfrom Users\nwhere Id = '##UserId##'"},{"QuerySetId":339568,"Title":"Top (Bottom?) 20 Lowest Scoring Questions","Description":"Top 20 Lowest Scoring questions (negative scores, most likely)","QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.OwnerUserId, p.Tags FROM Posts AS p INNER JOIN votes AS v ON v.postid = p.id WHERE p.PostTypeId = 1 GROUP BY p.ID, p.Score, p.OwnerUserId, p.Tags ORDER BY \"Score\" LIMIT 20","CreationDate":"2015-07-24 08:51:02","validated":false,"QueryBody_Original":"SELECT  Top 20 p.Id [Post Link], p.Score,  p.OwnerUserId, p.Tags\nFrom Posts p\ninner join votes v on v.postid=p.id\nWhere p.PostTypeId = 1\nGROUP BY p.ID, p.Score, p.OwnerUserId, p.Tags\nOrder By \"Score\" asc"},{"QuerySetId":339610,"Title":"Questions where all answers have negative score","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p WHERE AnswerCount > 0 AND AcceptedAnswerId IS NULL AND ClosedDate IS NULL AND NOT EXISTS(SELECT a.Id FROM Posts AS a WHERE a.ParentId = p.Id AND a.Score >= 0) ORDER BY p.Score DESC","CreationDate":"2015-07-24 19:28:53","validated":false,"QueryBody_Original":"SELECT  p.Id  as [Post Link] from Posts p\nwhere AnswerCount>0\nand AcceptedAnswerId is null\nand ClosedDate is null\nand not exists (\n SELECT a.Id from Posts a\n where a.ParentId=p.Id\n and a.Score>=0 \n)\norder by p.Score desc"},{"QuerySetId":339637,"Title":"Average of time between posts and accepted answer creation, by months","Description":null,"QueryBody":"SELECT STR_TO_TIME(CONCAT(YEAR(p.CreationDate), '-', MONTH(p.CreationDate), '-01'), '%Y-%m-%d %H:%M:%S') AS Mes, CAST(AVG(DATEDIFF(ans.CreationDate, p.CreationDate)) AS FLOAT) \/ 24 AS dias FROM Posts AS p JOIN Posts AS ans ON ans.Id = p.AcceptedAnswerId WHERE p.AcceptedAnswerId > 0 GROUP BY YEAR(p.CreationDate), MONTH(p.CreationDate) ORDER BY YEAR(p.CreationDate), MONTH(p.CreationDate)","CreationDate":"2015-07-24 20:34:25","validated":false,"QueryBody_Original":"SELECT \nCONVERT(DATETIME, CONCAT(YEAR(p.CreationDate), '-', MONTH(p.CreationDate), '-01'), 20) AS Mes,\nCONVERT(float,avg(datediff(hour,p.CreationDate,ans.CreationDate)))\/24 dias\n\nFROM Posts as p JOIN Posts as ans ON ans.Id=p.AcceptedAnswerId\nWHERE p.AcceptedAnswerId>0  \nGROUP BY YEAR(p.CreationDate), MONTH(p.CreationDate)\nORDER BY YEAR(p.CreationDate), MONTH(p.CreationDate)"},{"QuerySetId":339647,"Title":"Average time between post creation and first vote","Description":null,"QueryBody":"SELECT STR_TO_TIME(CONCAT(YEAR(Posts.CreationDate), '-', MONTH(Posts.CreationDate), '-01'), '%Y-%m-%d %H:%M:%S') AS Mes, CAST(AVG(DATEDIFF(v.FirstVoteCreationDate, Posts.CreationDate)) AS FLOAT) \/ (60 * 24), AVG(DATEDIFF(v.FirstVoteCreationDate, Posts.CreationDate)) FROM (SELECT MIN(CreationDate) AS FirstVoteCreationDate, PostId FROM Votes WHERE VoteTypeId IN (2, 3) GROUP BY PostId) AS v JOIN Posts ON Posts.Id = v.PostId WHERE PostTypeId = 2 \/* Somente perguntas *\/ GROUP BY YEAR(Posts.CreationDate), MONTH(Posts.CreationDate) ORDER BY YEAR(Posts.CreationDate), MONTH(Posts.CreationDate)","CreationDate":"2015-07-24 23:48:21","validated":false,"QueryBody_Original":"SELECT  \nCONVERT(DATETIME, CONCAT(YEAR(Posts.CreationDate), '-', MONTH(Posts.CreationDate), '-01'), 20) AS Mes,\nCONVERT(FLOAT, AVG(datediff(minute,Posts.CreationDate,v.FirstVoteCreationDate))) \/ (60*24)\n, AVG(datediff(minute,Posts.CreationDate,v.FirstVoteCreationDate))\nFROM (SELECT MIN(CreationDate) as FirstVoteCreationDate, PostId FROM Votes WHERE VoteTypeId IN(2,3) GROUP BY PostId) v JOIN Posts on Posts.Id=v.PostId\nWHERE PostTypeId=2 -- Somente perguntas\nGROUP BY YEAR(Posts.CreationDate), MONTH(Posts.CreationDate)\nORDER BY YEAR(Posts.CreationDate), MONTH(Posts.CreationDate)"},{"QuerySetId":339882,"Title":"Proportion of Questions with an Accepted Answer","Description":null,"QueryBody":"\/* only rows meeting criteria to be counted *\/ SELECT \/* only rows meeting criteria to be counted *\/ 1.0 * COUNT(CASE WHEN NOT AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) \/* only rows meeting criteria to be counted *\/ \/ COUNT(*) \/* all rows *\/ \/* all rows *\/\/* all rows *\/ \/* all rows *\/  FROM Posts WHERE PostTypeId = 1","CreationDate":"2015-07-24 22:49:42","validated":false,"QueryBody_Original":"SELECT \n    1.0 * COUNT(CASE WHEN AcceptedAnswerId IS NOT NULL THEN 1 ELSE NULL END) -- only rows meeting criteria to be counted\n          \/ \n    COUNT(*) -- all rows\nFROM Posts\nwhere PostTypeId = 1"},{"QuerySetId":340022,"Title":"Most questions with upvoted self-answers","Description":null,"QueryBody":"SELECT q.OwnerUserId AS \"User Link\", COUNT(DISTINCT q.Id) AS \"Count\" FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId WHERE q.OwnerUserId = a.OwnerUserId AND a.Score > 0 GROUP BY q.OwnerUserId ORDER BY \"Count\" DESC","CreationDate":"2015-07-25 07:38:17","validated":false,"QueryBody_Original":"SELECT \n  q.OwnerUserId AS [User Link],\n  COUNT(DISTINCT q.Id) AS [Count]\nFROM\n  Posts AS q\n  INNER JOIN Posts AS a\n    ON q.Id = a.ParentId\nWHERE\n  q.OwnerUserId = a.OwnerUserId\n  AND a.Score > 0\nGROUP BY\n  q.OwnerUserId\nORDER BY\n  [Count] DESC"},{"QuerySetId":340026,"Title":"SELECT * FROM VOTES WHERE BOUNTYAMOUNT > 500;","Description":null,"QueryBody":"SELECT * FROM VOTES WHERE BOUNTYAMOUNT >= 500 ORDER BY CREATIONDATE","CreationDate":"2015-07-25 13:21:04","validated":false,"QueryBody_Original":"SELECT  * FROM VOTES WHERE BOUNTYAMOUNT >= 500\nORDER BY CREATIONDATE;"},{"QuerySetId":340216,"Title":"Search for explicit comment replies from user A to user B","Description":"Search for comments where user A replied to user B with an explicit @userB ping.","QueryBody":"SELECT ('site:\/\/q\/' + CAST(reply.PostId AS TEXT(9)) + '#comment' + CAST(reply.Id AS TEXT(9)) + '_' + CAST(reply.PostId AS TEXT(9)) + '|' + reply.Text) AS \"Text\", reply.CreationDate AS \"Date\", reply.Score AS \"Score\" FROM Comments AS reply WHERE reply.UserID = '##AuthorUserId##' AND reply.Text LIKE '%@##TargetName##%' ORDER BY reply.CreationDate","CreationDate":"2015-07-26 17:20:08","validated":false,"QueryBody_Original":"SELECT \n  ('site:\/\/q\/' + cast(reply.PostId as varchar(9)) +\n   '#comment' + cast(reply.Id as varchar(9)) + '_' +\n   cast(reply.PostId as varchar(9)) + '|' +\n   reply.Text) as [Text],\n  reply.CreationDate as [Date],\n  reply.Score as [Score]\nfrom Comments reply\nwhere reply.UserID = '##AuthorUserId##'\n  and reply.Text like '%@##TargetName##%'\norder by reply.CreationDate asc"},{"QuerySetId":340255,"Title":"Questions I've answered that involve 2012 but aren't tagged as such","Description":null,"QueryBody":"SELECT 'http:\/\/dba.stackexchange.com\/questions\/' + RTRIM(Id) FROM dbo.Posts AS p WHERE NOT Tags LIKE '%2012%' AND EXISTS(SELECT 1 FROM dbo.Posts WHERE ParentId = p.Id AND OwnerUserID = 1186 AND Body LIKE '% 2012%') ORDER BY Id","CreationDate":"2015-07-26 20:09:11","validated":false,"QueryBody_Original":"SELECT  'http:\/\/dba.stackexchange.com\/questions\/' +RTRIM(Id) FROM dbo.Posts AS p\nWHERE Tags NOT LIKE '%2012%' AND EXISTS\n(SELECT 1 FROM dbo.Posts WHERE ParentId = p.Id AND OwnerUserID = 1186\nAND Body LIKE '% 2012%')\nORDER BY Id"},{"QuerySetId":340538,"Title":"Posts With \"When I Was...\" In The Body","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title AS \"Post Title\", OwnerDisplayName, OwnerUserID, Score FROM Posts WHERE (Body LIKE '%When I was%' OR Body LIKE '%when I was%') AND Tags LIKE '%identification%' ORDER BY Score","CreationDate":"2015-07-28 01:43:51","validated":false,"QueryBody_Original":"SELECT \n  Id [Post Link], \n  Title [Post Title], \n  OwnerDisplayName, \n  OwnerUserID,\n  Score\nFROM\n  Posts \nWHERE\n  (Body LIKE '%When I was%' OR Body LIKE '%when I was%')\n  AND Tags LIKE '%identification%'\nORDER BY\n  Score ASC"},{"QuerySetId":340557,"Title":"Posts with \"When I Was...\" in the body (by Score)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserID AS \"User Link\", Score FROM Posts WHERE (Body LIKE '%When I was%' OR Body LIKE '%when I was%') AND Tags LIKE '%identification%' AND ClosedDate IS NULL ORDER BY Score","CreationDate":"2015-07-28 03:10:30","validated":false,"QueryBody_Original":"SELECT \n    Id [Post Link]\n  , OwnerUserID [User Link]\n  , Score\nFROM\n  Posts \nWHERE\n  (Body LIKE '%When I was%' OR Body LIKE '%when I was%')\n  AND Tags LIKE '%identification%'\n  AND ClosedDate IS NULL\nORDER BY\n  Score ASC"},{"QuerySetId":340827,"Title":"post and posthistory details for `35314` post id","Description":null,"QueryBody":"SELECT * FROM Posts, PostHistory WHERE Posts.id = '35314' AND PostHistory.PostId = '35314'","CreationDate":"2015-07-28 10:52:19","validated":false,"QueryBody_Original":"SELECT  *\nFrom Posts,PostHistory\nwhere Posts.id='35314' and PostHistory.PostId='35314'"},{"QuerySetId":341338,"Title":"FROM Posts SELECT Tags WHERE Id = 1","Description":null,"QueryBody":"SELECT Tags FROM Posts WHERE Id = 1","CreationDate":"2015-07-29 14:20:02","validated":false,"QueryBody_Original":"SELECT  Tags FROM Posts WHERE Id = 1"},{"QuerySetId":341617,"Title":"Average number of votes per week","Description":null,"QueryBody":"SELECT numVotes \/ acctAgeWeeks FROM (SELECT (u.upvotes + u.downvotes) AS numVotes, ((utils.now - (TIME_TO_STR(u.creationdate, '%y') + (TIME_TO_STR(u.creationdate, '%W') - 1) \/ 52.0)) * 52.0) AS acctAgeWeeks FROM users AS u, (SELECT MAX((TIME_TO_STR(u.creationdate, '%y') + (TIME_TO_STR(u.creationdate, '%W') - 1) \/ 52.0)) AS now FROM users AS u) AS utils) AS WeeklyVotes WHERE acctAgeWeeks > 0.1","CreationDate":"2015-07-30 12:39:17","validated":false,"QueryBody_Original":"SELECT  numVotes\/acctAgeWeeks from (\nSELECT (u.upvotes+u.downvotes) as numVotes, ((utils.now-(datepart(yy, u.creationdate) + (datepart(wk, u.creationdate)-1) \/ 52.0))*52.0) as acctAgeWeeks from users as u, \n(SELECT max((datepart(yy, u.creationdate) + (datepart(wk, u.creationdate)-1) \/ 52.0)) as now from users as u) as utils ) WeeklyVotes where acctAgeWeeks>0.1"},{"QuerySetId":341721,"Title":"Top 200 Users from France","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%france%' ORDER BY Reputation DESC LIMIT 20000","CreationDate":"2015-07-30 16:21:55","validated":false,"QueryBody_Original":"SELECT \nTOP (20000) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%france%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":341858,"Title":"Closed unanswered questions with score of one","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE ClosedDate IS NULL AND Score = 1 AND AnswerCount = 0 AND CommentCount < 2","CreationDate":"2018-02-26 05:55:48","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link],CreationDate\nFROM Posts\nWHERE ClosedDate IS NULL\n  AND Score = 1\n  AND AnswerCount = 0\n  AND CommentCount < 2"},{"QuerySetId":341890,"Title":"Top 100 users from Nepal","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%nepal%' OR UPPER(Location) LIKE '%NEP' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2015-07-31 11:04:17","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%nepal%'\n    OR UPPER(Location) LIKE '%NEP'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":341898,"Title":"Top 300 users from Nepal","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%nepal%' OR UPPER(Location) LIKE '%NEP' ORDER BY Reputation DESC LIMIT 300","CreationDate":"2015-07-31 11:20:23","validated":false,"QueryBody_Original":"SELECT  TOP 300\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%nepal%'\n    OR UPPER(Location) LIKE '%NEP'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":341904,"Title":"Average answer length (and min and max)","Description":null,"QueryBody":"SELECT (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%W') - 1) \/ 52.0) AS YR_WK, MIN(LENGTH(p.Body)) AS \"Min\", AVG(LENGTH(p.Body)) AS \"Average\", MAX(LENGTH(p.Body)) AS \"Max\" FROM Users AS u, Posts AS p WHERE p.PostTypeId = 2 AND p.score > 0 AND p.creationdate >= '2015-01-01 00:00' GROUP BY (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%W') - 1) \/ 52.0) ORDER BY (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%W') - 1) \/ 52.0)","CreationDate":"2015-07-31 12:10:11","validated":false,"QueryBody_Original":"SELECT \n (datepart(yy, p.creationdate) + (datepart(wk, p.creationdate)-1) \/ 52.0) as YR_WK,\n  Min(Len(p.Body)) AS [Min],\n  Avg(Len(p.Body)) AS [Average],\n  Max(Len(p.Body)) AS [Max]\nFROM Users u, Posts p\nWHERE p.PostTypeId = 2\nand p.score>0 and p.creationdate>='2015-01-01 00:00'\nGROUP BY (datepart(yy, p.creationdate) + (datepart(wk, p.creationdate)-1) \/ 52.0)\nORDER BY (datepart(yy, p.creationdate) + (datepart(wk, p.creationdate)-1) \/ 52.0)"},{"QuerySetId":341913,"Title":"Dunbar's number and the social graph","Description":null,"QueryBody":"SELECT COUNT(*) AS arity, A.OwnerUserId, Q.OwnerUserId FROM Posts AS A INNER JOIN Posts AS Q ON A.ParentId = Q.Id AND A.PostTypeId = 2 AND Q.PostTypeId = 1 AND Q.Score > 0 AND A.Score > 0 AND NOT A.OwnerUserId IS NULL AND NOT Q.OwnerUserId IS NULL GROUP BY A.OwnerUserId, Q.OwnerUserId","CreationDate":"2015-07-31 13:47:54","validated":false,"QueryBody_Original":"SELECT  Count(*) as arity, A.OwnerUserId, Q.OwnerUserId\nFROM Posts A \n  INNER JOIN Posts Q\nON A.ParentId=Q.Id\nAND A.PostTypeId=2\nAND Q.PostTypeId=1\nAND Q.Score>0\nAND A.Score>0\nAND A.OwnerUserId IS NOT NULL AND Q.OwnerUserId IS NOT NULL\nGROUP BY A.OwnerUserId, Q.OwnerUserId"},{"QuerySetId":342269,"Title":"Reputation between 200 and 300 ","Description":"List of users having reputation between 200 and 300 ","QueryBody":"SELECT Id, Reputation FROM Users WHERE Reputation > 200 AND Reputation < 300","CreationDate":"2015-08-01 09:43:07","validated":false,"QueryBody_Original":"SELECT  Id, Reputation FROM Users WHERE Reputation > 200 AND Reputation < 300"},{"QuerySetId":342558,"Title":"Users have posts way older than they are!!!","Description":"See http:\/\/meta.stackexchange.com\/q\/190267\/148310","QueryBody":"SELECT DATEDIFF(p.CreationDate, u.CreationDate) AS memberMonth, u.ID AS \"User Link\", p.ID AS \"Post Link\" FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE u.ID > 0 AND DATEDIFF(p.CreationDate, u.CreationDate) < 0 ORDER BY DATEDIFF(p.CreationDate, u.CreationDate) LIMIT 10","CreationDate":"2015-08-03 02:30:17","validated":false,"QueryBody_Original":"SELECT  Top 10\n            DATEDIFF( MONTH, u.CreationDate, p.CreationDate ) AS memberMonth\n            , u.ID AS [User Link]\n            , p.ID AS [Post Link]\nFROM        Users u\nJOIN        Posts p             ON p.OwnerUserId = u.Id\nWHERE       u.ID > 0\nAND         DATEDIFF( MONTH, u.CreationDate, p.CreationDate ) < 0\nORDER BY    DATEDIFF( MONTH, u.CreationDate, p.CreationDate )"},{"QuerySetId":342929,"Title":"Top 150 Users from Bangalore,India","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Bangalore%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2015-08-04 08:48:13","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Bangalore%'\nORDER BY\n   reputation DESC"},{"QuerySetId":343256,"Title":"MSE rate of posting (non-zero)","Description":null,"QueryBody":"SELECT COUNT(*) AS Q_count, p.OwnerUserId AS uid FROM posts AS p WHERE p.PostTypeId = 1 AND p.OwnerUserId IN (141525, 146126, 811, 50049, 1438, 164200, 115866, 155160, 98786, 209637, 147336, 131182, 135201, 23354, 51, 6212, 146719, 166017, 4, 2, 130213, 159928, 13, 176330, 208518, 142481, 229741, 232374, 147574, 235711, 236798, 3, 179315, 132770, 167585, 166581, 184698, 140512, 131257, 253547, 262550, 282398, 147667) GROUP BY p.OwnerUserId ORDER BY Q_count DESC","CreationDate":"2015-08-07 14:40:27","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as Q_count, p.OwnerUserId as uid from posts p\nwhere p.PostTypeId = 1 and \np.OwnerUserId in (141525, 146126, 811, 50049, 1438, 164200, 115866, 155160, 98786,\n209637, 147336, 131182, 135201, 23354, 51, 6212, 146719, 166017, 4, 2,\n130213, 159928, 13, 176330, 208518, 142481, 229741, 232374, 147574,\n235711, 236798, 3, 179315, 132770, 167585, 166581, 184698, 140512,\n131257, 253547, 262550, 282398, 147667) \ngroup by p.OwnerUserId\norder by Q_count DESC"},{"QuerySetId":343307,"Title":"Anonymous users (userXXXX) by reputation, last access date, and time since creation","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, LastAccessDate, CreationDate, DATEDIFF(mm, CreationDate, GETDATE()) \/ 12 AS Years, DATEDIFF(mm, CreationDate, GETDATE()) % 12 AS Months FROM Users WHERE DisplayName LIKE 'user%' AND Reputation > 1000 AND LastAccessDate > DATEADD(MONTH, -6, GETDATE()) ORDER BY Reputation DESC","CreationDate":"2015-09-01 20:14:39","validated":false,"QueryBody_Original":"SELECT \n  Id AS [User Link],\n  Reputation,\n  LastAccessDate,\n  CreationDate,\n  DATEDIFF(mm, CreationDate, GETDATE())\/12 AS Years,\n  DATEDIFF(mm, CreationDate, GETDATE())%12 AS Months\nFROM\n  Users\nWHERE\n  DisplayName LIKE 'user%'\n  AND Reputation > 1000\n  AND LastAccessDate > DATEADD(MONTH, -6, GETDATE()) \nORDER BY \n  Reputation DESC"},{"QuerySetId":344258,"Title":"Posts with a single accepted answer that is upvoted at the same time","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes AS v INNER JOIN Posts AS p ON p.AcceptedAnswerId = v.PostId INNER JOIN votes AS upv ON upv.PostId = v.PostId AND upv.VoteTypeId = 2 AND v.CreationDate = upv.CreationDate WHERE v.VoteTypeId = 1 AND p.AnswerCount = 1","CreationDate":"2015-08-05 17:58:18","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Votes v\ninner join Posts p on p.AcceptedAnswerId = v.PostId\ninner join votes upv on upv.PostId = v.PostId \n                     And upv.VoteTypeId = 2\n                     And v.CreationDate = upv.CreationDate\nwhere v.VoteTypeId = 1\nand p.AnswerCount = 1"},{"QuerySetId":344295,"Title":"Posts with a single accepted answer that is downvoted at the same time","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes AS v INNER JOIN Posts AS p ON p.AcceptedAnswerId = v.PostId INNER JOIN votes AS upv ON upv.PostId = v.PostId AND upv.VoteTypeId = 2 AND upv.CreationDate = v.CreationDate WHERE v.VoteTypeId = 1 AND p.AnswerCount = 1","CreationDate":"2015-08-05 18:49:40","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Votes v\ninner join Posts p on p.AcceptedAnswerId = v.PostId\ninner join votes upv on upv.PostId = v.PostId \n                     And upv.VoteTypeId = 2\n                     And upv.CreationDate = v.CreationDate \nwhere v.VoteTypeId = 1\nand p.AnswerCount = 1"},{"QuerySetId":344604,"Title":"TOP 50 users from Michigan","Description":"Lists the top 50 users (ranked by reputation) that are located in Calicut\/Kozhikode, Kerala, India according to their profile information.\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Michigan%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2015-08-06 22:11:46","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like '%Michigan%'\n   --OR Location like N'%Kozhi%'\n   --OR Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":344854,"Title":"MSE rate of posting (checks and dates)","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.OwnerUserId AS \"User Link\", p.CreationDate FROM posts AS p WHERE p.PostTypeId = 1 AND p.OwnerUserId IN (141525, 146126, 811, 50049, 1438, 164200, 115866, 155160, 98786, 209637, 147336, 131182, 135201, 23354, 51, 6212, 146719, 166017, 4, 2, 130213, 159928, 13, 176330, 208518, 142481, 229741, 232374, 147574, 235711, 236798, 3, 179315, 132770, 167585, 166581, 184698, 140512, 131257, 253547, 262550, 282398, 147667) ORDER BY p.CreationDate DESC","CreationDate":"2015-08-07 14:43:47","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link],\np.OwnerUserId as [User Link], \np.CreationDate from posts p \nwhere p.PostTypeId = 1 and \np.OwnerUserId in (141525, 146126, 811, 50049, 1438, 164200, 115866, 155160, 98786,\n209637, 147336, 131182, 135201, 23354, 51, 6212, 146719, 166017, 4, 2,\n130213, 159928, 13, 176330, 208518, 142481, 229741, 232374, 147574,\n235711, 236798, 3, 179315, 132770, 167585, 166581, 184698, 140512,\n131257, 253547, 262550, 282398, 147667)\norder by p.CreationDate DESC"},{"QuerySetId":345013,"Title":"How many Posts per day? (Both questions and answers)","Description":null,"QueryBody":"SELECT DATEADD(DAY, DATEDIFF(DAY, 0, p.CreationDate), 0) AS \"Date\", COUNT(p.PostTypeId) AS \"Posts per day\" FROM Posts AS p GROUP BY DATEADD(DAY, DATEDIFF(DAY, 0, p.CreationDate), 0) ORDER BY DATEADD(DAY, DATEDIFF(DAY, 0, p.CreationDate), 0)","CreationDate":"2015-08-07 19:24:13","validated":false,"QueryBody_Original":"SELECT \n            DATEADD( DAY, DATEDIFF( DAY, 0, p.CreationDate ), 0 )   AS [Date]\n            , COUNT (p.PostTypeId)                                  AS [Posts per day]\nFROM        Posts p\nGROUP BY    DATEADD( DAY, DATEDIFF( DAY, 0, p.CreationDate ), 0 )\nORDER BY    DATEADD( DAY, DATEDIFF( DAY, 0, p.CreationDate ), 0 )"},{"QuerySetId":345124,"Title":"Heinz's query on total users","Description":null,"QueryBody":"SELECT AVG(users.\"count\") FROM (SELECT COUNT(*) AS \"count\" FROM Users GROUP BY CAST(CreationDate AS DATE)) AS users","CreationDate":"2015-09-23 10:40:17","validated":false,"QueryBody_Original":"SELECT  AVG(users.[count]) FROM (\nSELECT COUNT(*) as [count]  FROM Users\nGROUP BY CAST(CreationDate AS DATE)\n) users"},{"QuerySetId":346088,"Title":"Top comments of all time","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Score, Text FROM Comments ORDER BY Score DESC LIMIT 250","CreationDate":"2015-08-10 18:01:47","validated":false,"QueryBody_Original":"SELECT  TOP 250\n    PostId AS [Post Link],\n    Score,\n    Text\nFROM Comments\n-- WHERE UserId = ##UserId##\nORDER BY Score DESC"},{"QuerySetId":346159,"Title":"Top 10 users Ahmedabad India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Ahmedabad%' OR UPPER(Location) LIKE '%Ahmedabad%' OR Location LIKE '%Ahmedabad%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2015-08-10 20:40:41","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Ahmedabad%'\n    OR UPPER(Location) LIKE '%Ahmedabad%'\n    or Location like '%Ahmedabad%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":348259,"Title":"Contributing users and id-request-first users - how much do they overlap?","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", p.Id AS \"Post Link\", p.CreationDate, (CASE WHEN p.PostTypeId = 1 THEN p.Tags WHEN p.PostTypeId = 2 THEN (SELECT Tags FROM Posts AS p3 WHERE p3.Id = p.ParentId) END) AS \"Tags\" FROM Users AS u INNER JOIN (SELECT p2.OwnerUserId, MIN(p2.Id) AS \"Id\", MIN(p2.CreationDate) AS \"CreationDate\", MIN(p2.PostTypeId) AS \"PostTypeId\", MIN(p2.ParentId) AS \"ParentId\", MIN(p2.Tags) AS \"Tags\" FROM Posts AS p2 \/* exclude tag wikis and stuff *\/ WHERE p2.PostTypeId IN (1, 2) GROUP BY p2.OwnerUserId) AS p ON u.Id = p.OwnerUserId","CreationDate":"2015-08-12 02:36:20","validated":false,"QueryBody_Original":"SELECT \n  u.Id AS [User Link],\n  p.Id AS [Post Link],\n  p.CreationDate,\n  (CASE -- get tags from user's question or from the question they answered\n    WHEN p.PostTypeId = 1 THEN p.Tags\n    WHEN p.PostTypeId = 2 THEN (SELECT Tags FROM Posts AS p3 WHERE p3.Id = p.ParentId)\n  END) AS [Tags]\nFROM\n  Users AS u\n  INNER JOIN (\n    SELECT \n      p2.OwnerUserId, \n      MIN(p2.Id) AS [Id], \n      MIN(p2.CreationDate) AS [CreationDate],\n      MIN(p2.PostTypeId) AS [PostTypeId],\n      MIN(p2.ParentId) AS [ParentId],\n      MIN(p2.Tags) AS [Tags]\n    FROM Posts AS p2\n    WHERE p2.PostTypeId IN (1, 2) -- exclude tag wikis and stuff\n    GROUP BY p2.OwnerUserId\n  ) AS p\n    ON u.Id = p.OwnerUserId"},{"QuerySetId":348326,"Title":"How many Python questions are there?","Description":null,"QueryBody":"SELECT COUNT(1) FROM Posts WHERE PostTypeId = 1 AND STR_POSITION(Tags, 'R') > 0","CreationDate":"2015-08-14 09:31:22","validated":false,"QueryBody_Original":"SELECT  count(1) from Posts where PostTypeId = 1 AND CHARINDEX('R', Tags) > 0;"},{"QuerySetId":348454,"Title":"TOP 50 users from Bangladesh","Description":"Lists the top 50 users (ranked by reputation) that are located in Calicut\/Kozhikode, Kerala, India according to their profile information.\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location, LastAccessDate FROM Users WHERE Location LIKE N'%Bangladesh%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2016-01-30 13:27:47","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location,\n   LastAccessDate\nFROM\n   Users\nWHERE\n   Location like N'%Bangladesh%'\nORDER BY\n   reputation DESC"},{"QuerySetId":348487,"Title":"Querry all posts that start with 'Welcome to'","Description":null,"QueryBody":"SELECT c.CreationDate, c.Id AS \"Comment Link\", c.Text FROM Comments AS c INNER JOIN Posts AS p ON p.Id = c.PostId WHERE Text LIKE 'Welcome to%' OR Text LIKE 'welcome to%' ORDER BY c.CreationDate DESC","CreationDate":"2015-08-12 13:25:13","validated":false,"QueryBody_Original":"SELECT  c.CreationDate, c.Id as [Comment Link], c.Text from Comments c \ninner join Posts p on p.Id = c.PostId \n      where Text like 'Welcome to%' or Text like 'welcome to%'\n\norder by c.CreationDate desc"},{"QuerySetId":348639,"Title":"select akser info and answerer info and answer","Description":null,"QueryBody":"SELECT * FROM Users AS up LEFT JOIN Posts AS pp ON up.Id = pp.OwnerUserId LEFT JOIN Posts AS pa ON pp.Id = pa.ParentID LEFT JOIN Users AS ua ON ua.Id = pa.OwnerUserId WHERE pp.Id IN (31510351, 31511444, 31511708)","CreationDate":"2015-08-12 16:43:07","validated":false,"QueryBody_Original":"SELECT  *\nfrom Users up left join Posts pp on up.Id = pp.OwnerUserId left join Posts pa on pp.Id = pa.ParentID left join Users ua on ua.Id = pa.OwnerUserId \nwhere pp.Id in(31510351,31511444,31511708)"},{"QuerySetId":348872,"Title":"Posts with lots of Comments and Unanswered Bounties this Month","Description":null,"QueryBody":"SELECT P.Id AS \"Post Link\", V.BountyAmount, (SELECT P2.Tags FROM Posts AS P2 WHERE P2.Id = P.ParentId) AS \"Tags\" FROM Posts AS P, Votes AS V WHERE P.Id = V.PostId AND P.CommentCount > 10 AND P.ClosedDate IS NULL AND P.AcceptedAnswerId IS NULL AND NOT V.BountyAmount IS NULL AND V.VoteTypeId = 9 AND DATEDIFF(CURRENT_TIMESTAMP(), V.CreationDate) < 1 ORDER BY V.BountyAmount DESC, P.CreationDate DESC","CreationDate":"2015-08-26 19:43:58","validated":false,"QueryBody_Original":"SELECT  P.Id as [Post Link], V.BountyAmount, (SELECT P2.Tags from Posts P2 WHERE P2.Id = P.ParentId) AS [Tags]\nFROM Posts P, Votes V\nWHERE \nP.Id = V.PostId\nAND\nP.CommentCount > 10\nAND\nP.ClosedDate IS NULL\nAND\nP.AcceptedAnswerId IS NULL\nAND\nV.BountyAmount IS NOT NULL\nAND\nV.VoteTypeId = 9\nAND\nDATEDIFF(month, V.CreationDate, GETDATE() ) < 1\nORDER BY \nV.BountyAmount DESC, P.CreationDate DESC"},{"QuerySetId":348980,"Title":"Most active voters (up & down)","Description":"List a site's top 100 most prolific voters of content (upvotes + downvotes).","QueryBody":"SELECT Id AS \"User Link\", UpVotes + DownVotes AS \"Total Votes\", UpVotes, DownVotes FROM USERS WHERE (UpVotes > 0 OR DownVotes > 0) ORDER BY \"Total Votes\" DESC LIMIT 500","CreationDate":"2015-08-16 04:08:06","validated":false,"QueryBody_Original":"SELECT  TOP 500 Id                  AS [User Link],\n               UpVotes + DownVotes AS [Total Votes],\n               UpVotes,\n               DownVotes\nFROM   USERS\nWHERE  (UpVotes > 0\nOR DownVotes > 0)\nORDER  BY [Total Votes] DESC"},{"QuerySetId":349016,"Title":"Top ten lowest scored answers","Description":null,"QueryBody":"SELECT \"Id\" AS \"Post Link\", \"Title\", \"Score\" FROM \"Posts\" WHERE \"PostTypeId\" = 1 AND \"Score\" < 0 ORDER BY \"Score\" LIMIT 10","CreationDate":"2017-12-20 01:40:31","validated":false,"QueryBody_Original":"SELECT  top(10) [Id] as [Post Link], [Title], [Score] from [Posts]\nwhere [PostTypeId] = 1 and [Score] < 0\norder by [Score]"},{"QuerySetId":349532,"Title":"How many unanswered questions in different years [AskDifferent]","Description":null,"QueryBody":"SELECT YEAR(CreationDate), COUNT(*) AS NumberOfUnanswered FROM Posts WHERE PostTypeId = 1 AND AnswerCount = 0 GROUP BY YEAR(CreationDate)","CreationDate":"2015-08-13 16:21:00","validated":false,"QueryBody_Original":"SELECT  Year(CreationDate), count(*) as NumberOfUnanswered from Posts \n    where PostTypeId = 1 and AnswerCount = 0\n    group by Year(CreationDate) ;"},{"QuerySetId":349533,"Title":"Number of new Users each month [AskDifferent]","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) AS CD, COUNT(*) FROM Users GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) ORDER BY CD","CreationDate":"2015-08-13 16:05:24","validated":false,"QueryBody_Original":"SELECT   DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) as  CD , count(*)\n    from Users\n    group by DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n    order by CD"},{"QuerySetId":349554,"Title":"Users age distribution, average users distribution in different years [AskDifferent]","Description":null,"QueryBody":"SELECT Age, COUNT(*) AS NumberOfUsers, AVG(Reputation) AS AverageUsersReputation FROM Users WHERE NOT (Age IS NULL) GROUP BY Age ORDER BY Age","CreationDate":"2015-08-13 17:04:37","validated":false,"QueryBody_Original":"SELECT  Age, count(*) as NumberOfUsers, avg(Reputation) as AverageUsersReputation\n    from Users\n    where not(Age is null)\n    group by Age\n    order by Age;\n    \nSELECT * from\n    (SELECT min(Age) as UsersMinimumAge, max(Age) as UsersMaximumAge, \n            round(avg(cast(Reputation as float)),2) as AllUsersAverageReputation\n            from Users) as a, \n    (SELECT round(avg(cast(Reputation as float)),2) as UsersWithAgeAverageReputation \n      from Users where not(Age is null)) as b,\n    (SELECT round(avg(cast(Reputation as float)),2) as UsersWithoutAgeAverageReputation \n      from Users where Age is null) as c  ;\n    \n\n    \nSELECT count(*) as Number_of_Users_without_filled_Age from Users where Age is null\n    group by Age;"},{"QuerySetId":349711,"Title":"Post Metrics Over Year and Month","Description":null,"QueryBody":"SELECT TIME_TO_STR(P.CreationDate, '%YEAR') AS PostYear, TIME_TO_STR(P.CreationDate, '%-mONT%-H') AS PostMonth, COUNT(*) AS Posts, SUM(AnswerCount) AS AnswerSum, SUM(CommentCount) AS CommentSum, MIN(FavoriteCount) AS FavoriteMin, AVG(FavoriteCount) AS FavoriteAvg, MAX(FavoriteCount) AS FavoriteMax, SUM(FavoriteCount) AS FavoriteSum, MIN(Score) AS ScoreMin, AVG(Score) AS ScoreAvg, MAX(Score) AS ScoreMax, SUM(Score) AS ScoreSum, MIN(ViewCount) AS ViewMin, AVG(ViewCount) AS ViewAvg, MAX(ViewCount) AS ViewMax, SUM(ViewCount) AS ViewSum FROM Posts AS P WHERE P.CreationDate BETWEEN '2008-08-01' AND '2015-08-01' GROUP BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H') ORDER BY TIME_TO_STR(P.CreationDate, '%YEAR'), TIME_TO_STR(P.CreationDate, '%-mONT%-H')","CreationDate":"2015-08-14 03:39:04","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(YEAR, P.CreationDate) as PostYear,\n  DATEPART(MONTH, P.CreationDate) as PostMonth,\n  COUNT(*) as Posts,\n  SUM(AnswerCount) as AnswerSum,\n  SUM(CommentCount) as CommentSum,\n  MIN(FavoriteCount) as FavoriteMin,\n  AVG(FavoriteCount) as FavoriteAvg,\n  MAX(FavoriteCount) as FavoriteMax,\n  SUM(FavoriteCount) as FavoriteSum,\n  MIN(Score) as ScoreMin,\n  AVG(Score) as ScoreAvg,\n  MAX(Score) as ScoreMax,\n  SUM(Score) as ScoreSum,\n  MIN(ViewCount) as ViewMin,\n  AVG(ViewCount) as ViewAvg,\n  MAX(ViewCount) as ViewMax,\n  SUM(ViewCount) as ViewSum\nFROM\n  Posts P\nWHERE\n  P.CreationDate BETWEEN '2008-08-01' AND '2015-08-01'\nGROUP BY\n  DATEPART(YEAR, P.CreationDate),\n  DATEPART(MONTH, P.CreationDate)\nORDER BY\n  DATEPART(YEAR, P.CreationDate),\n  DATEPART(MONTH, P.CreationDate)"},{"QuerySetId":350165,"Title":"Total number of users on SO","Description":null,"QueryBody":"SELECT COUNT(id) FROM Users","CreationDate":"2015-08-15 06:25:23","validated":false,"QueryBody_Original":"SELECT  count(id)\nFROM Users"},{"QuerySetId":350186,"Title":"Comments and Questions by month Workplace","Description":null,"QueryBody":"SELECT YEAR(CreationDate), MONTH(CreationDate), COUNT(id), SUM(commentcount) FROM Posts WHERE CreationDate >= '01\/01\/2014' AND posttypeid = 1 GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2015-08-15 09:33:27","validated":false,"QueryBody_Original":"SELECT  Year(CreationDate), Month(CreationDate), count(id), sum(commentcount)\nfrom Posts\nwhere CreationDate >= '01\/01\/2014'\nand posttypeid = 1\ngroup by Year(CreationDate), Month(CreationDate)\norder by Year(CreationDate), Month(CreationDate)"},{"QuerySetId":350346,"Title":"Top 50 Users from Algeria","Description":null,"QueryBody":"SELECT Id AS ID, DisplayName AS Name, Reputation, LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Algeria%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2015-08-16 18:12:26","validated":false,"QueryBody_Original":"SELECT  TOP 50 Id AS ID,DisplayName AS Name,Reputation,LastAccessDate AS Seen FROM Users WHERE Location LIKE '%Algeria%' ORDER BY Reputation DESC"},{"QuerySetId":351094,"Title":"Vancouver SO Users By Rep","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", u.Id AS \"User Link\", u.Reputation FROM Users AS u WHERE LOWER(Location) LIKE LOWER('%manchester%') GROUP BY u.id, u.reputation ORDER BY Reputation DESC","CreationDate":"2015-10-21 01:10:36","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    u.Id AS [User Link], \n    u.Reputation\nFROM\n    Users u\nWHERE\n    LOWER(Location) LIKE LOWER('%manchester%')\ngroup by u.id,u.reputation\nORDER BY\n    Reputation DESC;"},{"QuerySetId":351169,"Title":"Ken vs. Dan Battle for Throne","Description":null,"QueryBody":"SELECT Reputation, DisplayName, UpVotes, DownVotes, Views FROM Users WHERE Id = 628781 OR Id = 1102617","CreationDate":"2015-08-18 20:03:59","validated":false,"QueryBody_Original":"SELECT  Reputation, DisplayName, UpVotes, DownVotes , Views\nFROM Users\nWHERE Id = 628781 or Id = 1102617"},{"QuerySetId":351218,"Title":"Wikiless tags used more than once","Description":null,"QueryBody":"SELECT 'site:\/\/tags\/' + t.TagName + '|' + t.TagName AS \"Tag\", t.Count AS \"Uses\", e.Body AS \"Excerpt\", b.Body AS \"Wiki\" FROM Tags AS t LEFT JOIN Posts AS e ON e.Id = t.ExcerptPostId LEFT JOIN Posts AS b ON b.Id = t.WikiPostId WHERE (e.Body IS NULL OR b.Body IS NULL OR LENGTH(e.Body) = 0 OR LENGTH(b.Body) = 0) AND count > 1 ORDER BY Count DESC","CreationDate":"2015-08-18 05:43:50","validated":false,"QueryBody_Original":"SELECT \n  'site:\/\/tags\/' + t.TagName + '|' + t.TagName AS [Tag],\n  t.Count AS [Uses],\n  e.Body AS [Excerpt],\n  b.Body AS [Wiki]\nFROM Tags t\nLEFT JOIN Posts e ON e.Id = t.ExcerptPostId\nLEFT JOIN Posts b ON b.Id = t.WikiPostId\nWHERE (e.Body IS NULL OR b.Body IS NULL OR Len(e.Body) = 0 OR Len(b.Body) = 0) and count >1\nORDER BY Count DESC"},{"QuerySetId":351409,"Title":"Evolution of mean score and number of questions in 2015 by week","Description":"Evolution of mean score and number of questions in 2015 by week","QueryBody":"SELECT TIME_TO_STR(p.creationdate, '%W') AS weekOfCreation, AVG(p.score) AS meanQuestionScore, COUNT(p.Id) AS NumberOfPosts FROM Posts AS p WHERE p.PostTypeId = 1 AND TIME_TO_STR(p.creationdate, '%Y') = 2015 GROUP BY TIME_TO_STR(p.creationdate, '%W') ORDER BY TIME_TO_STR(p.creationdate, '%W')","CreationDate":"2015-08-18 16:46:29","validated":false,"QueryBody_Original":"SELECT     DATEPART(week, p.creationdate) AS weekOfCreation, \n          AVG(p.score) As meanQuestionScore,\n          COUNT(p.Id) As NumberOfPosts\nFROM      Posts p\nWHERE     p.PostTypeId = 1\nAND       DATEPART(year, p.creationdate) = 2015\nGROUP BY  DATEPART(week, p.creationdate)\nORDER BY  DATEPART(week, p.creationdate);"},{"QuerySetId":351602,"Title":"Downvoted posts with no comment","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS \"DVs\", Score FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id WHERE COALESCE(p.CommentCount, 0) = 0 AND v.VoteTypeId = 3 GROUP BY PostId, Score","CreationDate":"2015-08-22 01:29:49","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], sum(case when VoteTypeId = 3 then 1 else 0 end) as [DVs], Score\nfrom Votes v join Posts p on v.PostId = p.Id\nwhere isnull(p.CommentCount,0) = 0 and v.VoteTypeId = 3\ngroup by PostId, Score"},{"QuerySetId":351714,"Title":"Graph of first questions by users along with all questions","Description":null,"QueryBody":"SELECT COALESCE(da, firstasked) AS question_date, COALESCE(first_question_by_user, 0) AS first_question_by_user, all_questions FROM (SELECT firstasked, COUNT(*) AS first_question_by_user FROM (SELECT MIN(CAST(CreationDate AS DATE)) AS firstasked FROM posts AS questions WHERE questions.PostTypeId = 1 GROUP BY OwnerUserId) AS firstquestions GROUP BY firstasked) AS firstpart FULL OUTER JOIN (SELECT CAST(CreationDate AS DATE) AS Da, COUNT(*) AS all_questions FROM Posts WHERE PostTypeID = 1 GROUP BY CAST(CreationDate AS DATE)) AS secondpart ON firstpart.firstasked = secondpart.Da ORDER BY question_date","CreationDate":"2015-08-19 21:35:01","validated":false,"QueryBody_Original":"SELECT  COALESCE(da, firstasked) as question_date, COALESCE(first_question_by_user, 0) as first_question_by_user, all_questions\n\nFROM (SELECT firstasked, Count(*) as first_question_by_user\nFROM (\n  SELECT MIN(Convert(date, CreationDate)) as firstasked\n  FROM posts as questions\n  where questions.PostTypeId = 1\n  GROUP BY OwnerUserId) as firstquestions\nGROUP BY firstasked) as firstpart\n\nFULL OUTER JOIN (\n\nSELECT CONVERT(date, CreationDate) AS Da, Count(*) as all_questions\nFROM Posts\nWHERE PostTypeID = 1\nGROUP BY CONVERT(date, CreationDate) ) as secondpart\n\nON firstpart.firstasked = secondpart.Da\n\nORDER BY question_date"},{"QuerySetId":351715,"Title":"Number of user by country","Description":"Number of users by country\r\n","QueryBody":"SELECT u.Location, COUNT(*) AS theCount FROM Users AS u WHERE u.Reputation > 1 AND u.Reputation <> 101 GROUP BY u.Location ORDER BY theCount DESC","CreationDate":"2015-08-19 19:04:39","validated":false,"QueryBody_Original":"SELECT  u.Location,\n       count(*)as theCount\nFROM Users u\nWHERE u.Reputation > 1 \nAND u.Reputation <> 101\nGROUP BY u.Location\nORDER BY theCount DESC"},{"QuerySetId":352464,"Title":"Total number of downvoted posts","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts JOIN Votes ON Votes.PostId = Posts.Id WHERE VoteTypeId = 3","CreationDate":"2015-08-20 02:53:04","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts JOIN Votes ON Votes.PostId = Posts.Id\nWHERE VoteTypeId = 3"},{"QuerySetId":352488,"Title":"All swift-related questions in 2015","Description":null,"QueryBody":"SELECT Id, PostTypeId, Body, ParentId, CreationDate, Score FROM Posts AS p WHERE p.ParentId IN (SELECT Id FROM Posts AS q WHERE (q.Tags LIKE '%<swift>%' OR q.Tags LIKE '%<swift2>%' OR q.Tags LIKE '%<swift-playground>%' OR q.Tags LIKE '%<swift-json>%' OR q.Tags LIKE '%<swift-generics>%' OR q.Tags LIKE '%<swift-extensions>%' OR q.Tags LIKE '%<sqlite.swift>%' OR q.Tags LIKE '%<swift-protocols>%' OR q.Tags LIKE '%<swift-array>%' OR q.Tags LIKE '%<cocos2d-swift>%' OR q.Tags LIKE '%<swift-dictionary>%' OR q.Tags LIKE '%<objective-c-swift-bridge>%')) AND CreationDate >= '2015-01-01' AND CreationDate <= '2015-08-19'","CreationDate":"2015-08-20 04:20:12","validated":false,"QueryBody_Original":"SELECT  Id,PostTypeId,Body,ParentId,CreationDate,Score\nfrom Posts p\nwhere p.ParentId in (SELECT Id from Posts q where (q.Tags like '%<swift>%' or \n       q.Tags like '%<swift2>%' or \n       q.Tags like '%<swift-playground>%' or\n       q.Tags like '%<swift-json>%' or\n       q.Tags like '%<swift-generics>%' or       \n       q.Tags like '%<swift-extensions>%' or       \n       q.Tags like '%<sqlite.swift>%' or      \n       q.Tags like '%<swift-protocols>%' or\n       q.Tags like '%<swift-array>%' or      \n       q.Tags like '%<cocos2d-swift>%' or\n       q.Tags like '%<swift-dictionary>%' or      \n       q.Tags like '%<objective-c-swift-bridge>%'))\n       AND CreationDate >= '2015-01-01'\n       AND CreationDate <= '2015-08-19'"},{"QuerySetId":352525,"Title":"All-caps posts on English Language & Usage","Description":null,"QueryBody":"SELECT Title FROM Posts WHERE Title = UPPER(Title)","CreationDate":"2018-04-06 23:24:05","validated":false,"QueryBody_Original":"SELECT  Title from Posts where Title = UPPER(Title);"},{"QuerySetId":352727,"Title":"Find questions only tagged with one thing, that isn't also in the title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", tags FROM Posts WHERE tags LIKE '<gimp>' AND NOT Title LIKE '%gimp%'","CreationDate":"2015-08-20 14:34:41","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], tags from Posts\nWHERE tags like '<gimp>'\nAND Title not like '%gimp%'"},{"QuerySetId":352730,"Title":"how many questions are there on SO?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1","CreationDate":"2015-11-02 01:41:15","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nFROM Posts\nWHERE PostTypeId=1"},{"QuerySetId":352917,"Title":"Posts with a screwed-up history","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COALESCE(SUM(CHOOSE(posthistorytypeid - 9, 1, -1)), 0) AS closed, COALESCE(SUM(CHOOSE(posthistorytypeid - 13, 1, -1)), 0) AS locked, COALESCE(SUM(CHOOSE(posthistorytypeid - 18, 1, -1)), 0) AS protected FROM posthistory GROUP BY PostId HAVING NOT COALESCE(SUM(CHOOSE(posthistorytypeid - 9, 1, -1)), 0) IN (0, 1) OR NOT COALESCE(SUM(CHOOSE(posthistorytypeid - 13, 1, -1)), 0) IN (0, 1) OR NOT COALESCE(SUM(CHOOSE(posthistorytypeid - 18, 1, -1)), 0) IN (0, 1)","CreationDate":"2015-08-22 07:56:00","validated":false,"QueryBody_Original":"SELECT  PostId [Post Link],\n  coalesce(sum(choose(posthistorytypeid-9,1,-1)), 0) closed,\n  coalesce(sum(choose(posthistorytypeid-13,1,-1)), 0) locked,\n  coalesce(sum(choose(posthistorytypeid-18,1,-1)), 0) protected\nfrom posthistory\ngroup by PostId\nhaving coalesce(sum(choose(posthistorytypeid-9,1,-1)), 0) not in(0, 1)\n  or coalesce(sum(choose(posthistorytypeid-13,1,-1)), 0) not in(0, 1)\n  or coalesce(sum(choose(posthistorytypeid-18,1,-1)), 0) not in(0, 1)"},{"QuerySetId":352945,"Title":"Closed, Locked, and Protected Posts","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", CASE WHEN MAX(CASE PostHistoryTypeId WHEN 10 THEN id ELSE 0 END) > MAX(CASE PostHistoryTypeId WHEN 11 THEN id ELSE 0 END) THEN 1 ELSE 0 END AS closed, CASE WHEN MAX(CASE PostHistoryTypeId WHEN 14 THEN id ELSE 0 END) > MAX(CASE PostHistoryTypeId WHEN 15 THEN id ELSE 0 END) THEN 1 ELSE 0 END AS locked, CASE WHEN MAX(CASE PostHistoryTypeId WHEN 19 THEN id ELSE 0 END) > MAX(CASE PostHistoryTypeId WHEN 20 THEN id ELSE 0 END) THEN 1 ELSE 0 END AS protected FROM PostHistory GROUP BY PostId","CreationDate":"2015-08-20 22:06:25","validated":false,"QueryBody_Original":"SELECT  PostId [Post Link],\n  case when max(case PostHistoryTypeId when 10 then id else 0 end)\n  > max(case PostHistoryTypeId when 11 then id else 0 end) then 1 else 0 end closed,\n  case when max(case PostHistoryTypeId when 14 then id else 0 end)\n  > max(case PostHistoryTypeId when 15 then id else 0 end) then 1 else 0 end locked,\n  case when max(case PostHistoryTypeId when 19 then id else 0 end)\n  > max(case PostHistoryTypeId when 20 then id else 0 end) then 1 else 0 end protected\nfrom PostHistory\ngroup by PostId"},{"QuerySetId":353002,"Title":"Number of questions by country","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE NOT location IS NULL)","CreationDate":"2015-10-19 02:12:43","validated":false,"QueryBody_Original":"SELECT  count(*) \nfrom posts \nwhere owneruserid in (SELECT id from users where location is not null);"},{"QuerySetId":353014,"Title":"Finds the top 100 question-askers","Description":null,"QueryBody":"SELECT COUNT(p.Id) AS \"Question Count\", p.OwnerUserId AS \"User Link\" FROM Posts AS p WHERE p.PostTypeId = 1 AND NOT p.OwnerUserId IS NULL GROUP BY p.OwnerUserId ORDER BY 1 DESC LIMIT 100","CreationDate":"2015-09-27 16:33:06","validated":false,"QueryBody_Original":"SELECT  TOP 100 count(p.Id) as [Question Count], p.OwnerUserId as [User Link]\n  FROM Posts p\n  WHERE p.PostTypeId = 1 and p.OwnerUserId is not null\n  GROUP BY p.OwnerUserId\n  ORDER BY 1 desc;"},{"QuerySetId":353211,"Title":"People with a connection to Oberlin OH","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location = 'Oberlin, OH' OR AboutMe LIKE '%Oberlin%'","CreationDate":"2015-08-21 11:31:00","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Location = 'Oberlin, OH' OR AboutMe LIKE '%Oberlin%'"},{"QuerySetId":353417,"Title":"Questions Likely to be of poor quality","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Body LIKE '% i %' COLLATE Latin1_General_BIN ORDER BY Id","CreationDate":"2015-08-21 19:28:32","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE  Body LIKE '% i %' COLLATE Latin1_General_BIN ORDER BY Id"},{"QuerySetId":353448,"Title":"Questions and Answers by Day of Week","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%A') AS \"Date\", PostTypeId, COUNT(*) AS \"Posted\" FROM Posts WHERE DeletionDate IS NULL AND ClosedDate IS NULL AND AnswerCount > 0 AND CreationDate >= '2020-01-01T00:00:00' GROUP BY TIME_TO_STR(CreationDate, '%A'), PostTypeId ORDER BY PostTypeId, Posted","CreationDate":"2020-08-29 15:53:50","validated":false,"QueryBody_Original":"SELECT  DATENAME(dw, CreationDate) AS [Date], PostTypeId, COUNT(*) AS [Posted]\nFROM Posts\nWHERE DeletionDate IS NULL\n  AND ClosedDate IS NULL\n  AND AnswerCount > 0\n  AND CreationDate >= '2020-01-01T00:00:00'\nGROUP BY DATENAME(dw, CreationDate), PostTypeId\nORDER BY PostTypeId, Posted"},{"QuerySetId":353538,"Title":"Most Lowest-Scoring Posts of 2015","Description":null,"QueryBody":"SELECT Title, Body, Score FROM Posts WHERE Score < 0 AND CreationDate = 2015 ORDER BY Score","CreationDate":"2015-08-22 06:15:11","validated":false,"QueryBody_Original":"SELECT  Title, Body, Score\nfrom Posts\nwhere Score < 0\nand\nCreationDate = 2015\norder by Score"},{"QuerySetId":354011,"Title":"List people who signed up during private beta","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Id, u.CreationDate FROM Users AS u WHERE u.CreationDate < '2011-08-30 00:00:00.00'","CreationDate":"2015-08-24 02:08:23","validated":false,"QueryBody_Original":"SELECT  u.Id as [User Link], u.Id, u.CreationDate\nFROM Users u\nWHERE u.CreationDate < '2011-08-30 00:00:00.00'"},{"QuerySetId":354014,"Title":"How many StackOverflow users are there?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2015-08-24 02:18:43","validated":false,"QueryBody_Original":"SELECT  Count(*) From Users"},{"QuerySetId":354170,"Title":"TOP 1000 users from Bangalore, India","Description":"Lists the top 1000 users (ranked by reputation) that are located in Bangalore, Karnataka, India according to their profile information.\r\n\r\n\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/query\/60933\/top-50-users-from-india\r\n\r\n\r\nEdited by GNKeshava","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE (LOWER(DisplayName) LIKE '%Patel%' OR UPPER(DisplayName) LIKE '%Patel%' OR DisplayName LIKE '%Patel%' OR LOWER(DisplayName) LIKE '%patel%' OR UPPER(DisplayName) LIKE '%patel%' OR DisplayName LIKE '%patel%') AND (LOWER(Location) LIKE '%Ahmedabad%' OR UPPER(Location) LIKE '%Ahmedabad%' OR Location LIKE '%Ahmedabad%' OR LOWER(Location) LIKE '%Ahmedabad%' OR UPPER(Location) LIKE '%Ahmedabad%' OR Location LIKE '%Ahmedabad%') ORDER BY reputation DESC LIMIT 1000","CreationDate":"2018-12-20 16:48:50","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    ( \n      LOWER(DisplayName) LIKE '%Patel%'\n      OR UPPER(DisplayName) LIKE '%Patel%'\n      OR DisplayName like '%Patel%'\n      OR LOWER(DisplayName) LIKE '%patel%'\n      OR UPPER(DisplayName) LIKE '%patel%'\n      OR DisplayName like '%patel%'\n    )\n    AND (\n    LOWER(Location) LIKE '%Ahmedabad%'\n    OR UPPER(Location) LIKE '%Ahmedabad%'\n    OR Location like '%Ahmedabad%'\n    OR LOWER(Location) LIKE '%Ahmedabad%'\n    OR UPPER(Location) LIKE '%Ahmedabad%'\n    OR Location like '%Ahmedabad%'\n    )\n  \n\nORDER BY\n   reputation DESC"},{"QuerySetId":354824,"Title":"Up vs Down votes by day for last week of Question or Answer","Description":null,"QueryBody":"SELECT CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END AS \"Post Type\", TIME_TO_STR(p.CreationDate, '%H'), COUNT(*) AS Amount, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes, CASE WHEN SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) = 0 THEN NULL ELSE (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT)) END AS UpVoteDownVoteRatio FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id WHERE PostTypeId IN (1) AND VoteTypeId IN (2, 3) AND p.CreationDate > '2016-01-01' GROUP BY PostTypeId, TIME_TO_STR(p.CreationDate, '%H') ORDER BY TIME_TO_STR(p.CreationDate, '%H')","CreationDate":"2016-08-16 17:24:20","validated":false,"QueryBody_Original":"SELECT \n    CASE WHEN PostTypeId = 1 THEN 'Question' ELSE 'Answer' END As [Post Type],\n    DATEPART(HH, p.CreationDate),\n    Count(*) AS Amount,\n    SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,\n    SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,\n    CASE WHEN SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) = 0 THEN NULL\n     ELSE (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float))\n    END AS UpVoteDownVoteRatio\nFROM\n    Votes v JOIN Posts p ON v.PostId=p.Id\nWHERE\n  PostTypeId In (1)--,2)\n AND\n    VoteTypeId In (2,3)\n AND   \n    p.CreationDate > '2016-01-01'\nGROUP BY\n    PostTypeId, DATEPART(HH, p.CreationDate)\nORDER BY\n    DATEPART(HH, p.CreationDate)"},{"QuerySetId":355260,"Title":"All-lowercase Stack Overflow questions asked in the last three days","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", 'http:\/\/stackoverflow.com\/posts\/' + CAST(p.Id AS TEXT(100)) + '\/revisions', Text FROM PostHistory AS ph JOIN Posts AS p ON p.Id = ph.PostId WHERE PostHistoryTypeId = 2 AND Text = UPPER(Text) COLLATE SQL_Latin1_General_CP1_CS_AS AND ph.CreationDate > (SELECT CreationDate FROM Posts WHERE Id = (SELECT MAX(Id) FROM Posts)) - 3 AND p.PostTypeId = 1","CreationDate":"2016-07-06 05:40:15","validated":false,"QueryBody_Original":"SELECT  PostId AS [Post Link],\n       'http:\/\/stackoverflow.com\/posts\/' + cast(p.Id AS varchar(100)) + '\/revisions', Text\nFROM PostHistory ph\nJOIN Posts p ON p.Id = ph.PostId\nWHERE PostHistoryTypeId = 2\n    AND Text = upper(Text) COLLATE SQL_Latin1_General_CP1_CS_AS\n    AND ph.CreationDate >\n        (SELECT CreationDate\n         FROM Posts\n         WHERE Id =\n                 (SELECT max(Id)\n                  FROM Posts)) - 3\n    AND p.PostTypeId = 1"},{"QuerySetId":355286,"Title":"All-uppercase Stack Overflow posts made in the last three days","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", 'http:\/\/stackoverflow.com\/posts\/' + CAST(p.Id AS TEXT(100)) + '\/revisions', Text FROM PostHistory AS ph JOIN Posts AS p ON p.Id = ph.PostId WHERE PostHistoryTypeId = 2 AND Text = UPPER(Text) COLLATE SQL_Latin1_General_CP1_CS_AS AND ph.CreationDate > (SELECT CreationDate FROM Posts WHERE Id = (SELECT MAX(Id) FROM Posts)) - 3 AND p.PostTypeId = 1","CreationDate":"2015-08-26 18:00:06","validated":false,"QueryBody_Original":"SELECT  PostId AS [Post Link],\n       'http:\/\/stackoverflow.com\/posts\/' + cast(p.Id AS varchar(100)) + '\/revisions', Text\nFROM PostHistory ph\nJOIN Posts p ON p.Id = ph.PostId\nWHERE PostHistoryTypeId = 2\n    AND Text = upper(Text) COLLATE SQL_Latin1_General_CP1_CS_AS\n    AND ph.CreationDate >\n        (SELECT CreationDate\n         FROM Posts\n         WHERE Id =\n                 (SELECT max(Id)\n                  FROM Posts)) - 3\n    AND p.PostTypeId = 1"},{"QuerySetId":356050,"Title":"Number of Users with Reputation <= N","Description":"For each unique reputation value N, this query retrieves the number of uses with reputation <= N.\r\n\r\nClick the graph tab for interesting pictures.","QueryBody":"SELECT Reputation, SUM(COUNT(*)) OVER (ORDER BY Reputation ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS UserCount, COUNT(*) AS total FROM Users GROUP BY Reputation ORDER BY Reputation","CreationDate":"2020-07-21 00:15:21","validated":false,"QueryBody_Original":"SELECT  \n  Reputation, \n  SUM(COUNT(*)) OVER(\n    ORDER BY Reputation \n    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS UserCount,\n    count(*) as total\nFROM \n  Users\nGROUP BY Reputation\nORDER BY Reputation"},{"QuerySetId":356538,"Title":"Badge Hunters? NOT IN OUR HOUSE!","Description":null,"QueryBody":"SELECT avg_days_between_badges = AVG(1. * base.days_between_badges), min_days_between_badges = MIN(1. * base.days_between_badges), max_days_between_badges = MAX(1. * base.days_between_badges), stdev_days_between_badges = STDEV(1. * base.days_between_badges) FROM (SELECT u.DisplayName, b.Name, b.\"Date\", LastBadgeDate = LAG(date, 1, NULL) OVER (ORDER BY date), days_between_badges = DATEDIFF(date, LAG(date, 1, NULL) OVER (PARTITION BY userid ORDER BY date)) FROM dbo.Badges AS b JOIN dbo.Users AS u ON u.Id = b.UserID) AS base","CreationDate":"2015-10-23 05:56:34","validated":false,"QueryBody_Original":"SELECT  \t\n\tavg_days_between_badges = avg(1.*base.days_between_badges), \n\tmin_days_between_badges = min(1.*base.days_between_badges), \n\tmax_days_between_badges = max(1.*base.days_between_badges), \n\tstdev_days_between_badges = stdev(1.*base.days_between_badges)\nfrom (\n\t\tSELECT \t\t\t\n\t\t\tu.DisplayName,\n\t\t\tb.Name, \n\t\t\tb.[Date], \n\t\t\tLastBadgeDate = lag(date,1,null) over (order by date asc),\n\t\t\tdays_between_badges = datediff(day,lag(date,1,null) over (partition by userid order by date asc),date)\t\n\t\tfrom dbo.Badges b \t\t\n\t\tjoin dbo.Users u \t\t\t\n\t\t\ton u.Id = b.UserID\t\t\t\n\t) base"},{"QuerySetId":356546,"Title":"#SOreadytohelp winners - week 1","Description":null,"QueryBody":"SELECT Id AS \"User Link\" FROM Users WHERE DisplayName LIKE '%tehran%' LIMIT 1000","CreationDate":"2015-09-30 13:54:45","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Id AS [User Link]\nFROM Users\nwhere DisplayName like '%tehran%'"},{"QuerySetId":357045,"Title":"Users with hashtag in profile","Description":null,"QueryBody":"SELECT Id AS \"User Link\" FROM Users WHERE Location LIKE '%Troms%'","CreationDate":"2015-08-30 13:32:20","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link]\nFROM Users\nWHERE Location LIKE '%Troms%';"},{"QuerySetId":357302,"Title":"close votes agianst posts that are not closed","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", COUNT(*) AS \"close votes\" FROM posts AS p INNER JOIN posthistory AS ph ON ph.postid = p.id WHERE p.closeddate IS NULL AND ph.posthistorytypeid = 10 \/* close *\/ AND p.posttypeid = 1 \/* Q *\/ GROUP BY p.id","CreationDate":"2015-08-30 22:52:17","validated":false,"QueryBody_Original":"SELECT   p.id as [Post Link]\n     , count(*) as [close votes]\nfrom posts p \ninner join posthistory ph on ph.postid = p.id\nwhere p.closeddate is null\nand ph.posthistorytypeid = 10 -- close\nand p.posttypeid = 1 -- Q\ngroup by p.id"},{"QuerySetId":357372,"Title":"How many votes have key fields, by type?","Description":null,"QueryBody":"SELECT NUMBER_TO_STR(COUNT(*), '##,###') AS Total, SUM(CASE WHEN UserId IS NULL THEN 0 ELSE 1 END) AS \"Have User\" FROM Votes WHERE VoteTypeId IS NULL","CreationDate":"2015-08-31 00:42:05","validated":false,"QueryBody_Original":"SELECT       FORMAT (COUNT (*), '##,###')   AS Total,\n            SUM( CASE WHEN UserId is null THEN 0 ELSE 1 END )  AS [Have User]\nFROM        Votes\nwhere VoteTypeId is null"},{"QuerySetId":357567,"Title":"Who joined earliest and is still active","Description":null,"QueryBody":"SELECT Id AS \"User Link\", CreationDate, LastAccessDate FROM Users WHERE CreationDate < DATEADD(day, 30, (SELECT CreationDate FROM Users WHERE Id = -1)) AND (DATEDIFF(day, LastAccessDate, GETDATE())) < 32 AND UpVotes <> 0 AND DownVotes <> 0 AND NOT (Reputation = 1 OR Reputation = 101) ORDER BY CreationDate","CreationDate":"2015-08-31 13:55:54","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], CreationDate, LastAccessDate\nFROM Users \nWHERE CreationDate < DATEADD( day, 30, (SELECT CreationDate FROM Users WHERE Id = -1 ))\n  AND ( DATEDIFF(day, LastAccessDate, GETDATE() ) ) < 32\n  AND UpVotes != 0\n  AND DownVotes != 0\n  AND NOT (Reputation = 1 OR Reputation = 101)\nORDER BY CreationDate"},{"QuerySetId":357715,"Title":"Statistics for Wikipedia about SO","Description":null,"QueryBody":"SELECT (SELECT COUNT(Users.Id) FROM Users) AS \"Total users\", (SELECT COUNT(Posts.Id) FROM Posts WHERE PostTypeid = 1) AS \"Total posts\"","CreationDate":"2017-07-15 01:15:33","validated":false,"QueryBody_Original":"SELECT  \n  ( SELECT count( Users.Id ) FROM Users ) as \"Total users\",\n  ( SELECT count( Posts.Id ) FROM Posts WHERE PostTypeid = 1 ) as \"Total posts\";\n\nSELECT TOP 10 Tags.TagName as \"Top Tags\" FROM Tags ORDER by Tags.Count DESC;"},{"QuerySetId":358027,"Title":"Edit counts less own edits","Description":null,"QueryBody":"SELECT PostHistory.UserId AS \"User Link\", COUNT(DISTINCT PostHistory.CreationDate) AS Number FROM PostHistory JOIN Posts ON Posts.Id = PostHistory.PostId WHERE PostHistory.PostHistoryTypeId BETWEEN 1 AND 6 AND Posts.OwnerUserId <> PostHistory.UserId AND PostHistory.UserId <> -1 GROUP BY PostHistory.UserId ORDER BY Number DESC","CreationDate":"2015-09-11 02:25:08","validated":false,"QueryBody_Original":"SELECT \n-- TOP 10\nPostHistory.UserId as [User Link], count(DISTINCT PostHistory.CreationDate) as Number\nFROM PostHistory\nJOIN Posts ON Posts.Id = PostHistory.PostId\nWHERE PostHistory.PostHistoryTypeId BETWEEN 1 AND 6\nAND Posts.OwnerUserId != PostHistory.UserId\nAND PostHistory.UserId != -1\nGROUP BY PostHistory.UserId\nORDER BY Number DESC"},{"QuerySetId":358281,"Title":"Winforms View Counts by Date","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%d') AS \"Day\", TIME_TO_STR(CreationDate, '%M') AS \"Month\", TIME_TO_STR(CreationDate, '%Y') AS \"Year\", SUM(ViewCount) AS \"Views\" FROM Posts WHERE (STR_POSITION(Tags, '<winforms>') > 0) GROUP BY TIME_TO_STR(CreationDate, '%d'), TIME_TO_STR(CreationDate, '%M'), TIME_TO_STR(CreationDate, '%Y')","CreationDate":"2015-09-01 19:27:01","validated":false,"QueryBody_Original":"SELECT  DATEPART(dd,CreationDate) AS [Day],\nDATEPART(mm,CreationDate) AS [Month],\nDATEPART(yyyy,CreationDate) AS [Year],\nSUM(ViewCount) AS [Views]\nFROM Posts \nWHERE\n(\nCHARINDEX('<winforms>', Tags) > 0\n)\nGROUP BY DATEPART(dd,CreationDate), DATEPART(mm,CreationDate), DATEPART(yyyy,CreationDate)"},{"QuerySetId":358317,"Title":"Questions with no accepted answer","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND AcceptedAnswerId IS NULL) AS noanswer, (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1) \/* Enter Query Title *\/ \/* Enter Query Description *\/ AS allquestions","CreationDate":"2015-09-01 22:06:01","validated":false,"QueryBody_Original":"SELECT \n(\nSELECT count(*)\nfrom Posts\nwhere PostTypeId = 1\nand AcceptedAnswerId is null\n) noanswer,\n(\n-- Enter Query Title\n-- Enter Query Description\nSELECT count(*)\nfrom Posts\nwhere PostTypeId = 1\n) allquestions"},{"QuerySetId":358366,"Title":"Sublimetext post counts  by date","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%d') AS \"Day\", TIME_TO_STR(CreationDate, '%M') AS \"Month\", TIME_TO_STR(CreationDate, '%Y') AS \"Year\", COUNT(*) FROM Posts WHERE (STR_POSITION(Tags, '<sublimetext>') > 0) GROUP BY TIME_TO_STR(CreationDate, '%d'), TIME_TO_STR(CreationDate, '%M'), TIME_TO_STR(CreationDate, '%Y')","CreationDate":"2015-09-01 23:52:33","validated":false,"QueryBody_Original":"SELECT  DATEPART(dd,CreationDate) AS [Day],\nDATEPART(mm,CreationDate) AS [Month],\nDATEPART(yyyy,CreationDate) AS [Year],\nCOUNT(*)\nFROM Posts \nWHERE\n(\nCHARINDEX('<sublimetext>', Tags) > 0\n)\nGROUP BY DATEPART(dd,CreationDate), DATEPART(mm,CreationDate), DATEPART(yyyy,CreationDate)"},{"QuerySetId":359236,"Title":"Closed questions on a tag with 1 <= score <= 5","Description":null,"QueryBody":"SELECT Posts.ID AS \"Post Link\", Posts.CreationDate, Posts.Score, Posts.ClosedDate FROM Posts \/* TODO: include answers at same time *\/ \/* INNER JOIN Posts Answers *\/ \/*           ON Posts.id = Answers.ParentId *\/ \/* INNER JOIN PostTags ON Posts.ID = PostTags.PostID *\/ \/* INNER JOIN ( *\/ \/*  SELECT ID *\/ \/*  FROM Tags *\/ \/*  WHERE TagName = N'##Tag##' *\/ \/* ) AS t1 ON PostTags.TagID = t1.ID *\/ WHERE (Posts.Score >= 1 AND Posts.Score <= 5) AND Posts.AcceptedAnswerId IS NULL AND (NOT Posts.ClosedDate IS NULL) AND Tags LIKE N'##Tag##' ORDER BY Posts.Score DESC LIMIT 50","CreationDate":"2015-09-03 18:38:19","validated":false,"QueryBody_Original":"SELECT  TOP 50 Posts.ID AS [Post Link], Posts.CreationDate, Posts.Score, Posts.ClosedDate\nFROM Posts\n-- TODO: include answers at same time\n--INNER JOIN Posts Answers\n--           ON Posts.id = Answers.ParentId\n--INNER JOIN PostTags ON Posts.ID = PostTags.PostID\n--INNER JOIN (\n--  SELECT ID\n--  FROM Tags \n--  WHERE TagName = N'##Tag##'\n--) AS t1 ON PostTags.TagID = t1.ID\nWHERE (Posts.Score >= 1 AND Posts.Score <= 5)\n      AND Posts.AcceptedAnswerId IS NULL\n      AND (Posts.ClosedDate IS NOT NULL)\n      AND Tags LIKE N'##Tag##'\nORDER BY Posts.Score DESC"},{"QuerySetId":359247,"Title":"average reputation per tag, per people subscribed on the tag","Description":null,"QueryBody":"SELECT AVG(Users.Reputation), COUNT(DISTINCT Users.Id), Tags.TagName FROM Users JOIN Tags ON Tags.Id = Users.Id GROUP BY Tags.TagName","CreationDate":"2015-09-03 18:47:46","validated":false,"QueryBody_Original":"SELECT  avg(Users.Reputation), Count(DISTINCT Users.Id), Tags.TagName FROM Users JOIN Tags ON Tags.Id = Users.Id GROUP BY Tags.TagName;"},{"QuerySetId":359362,"Title":"Top SO users from Poznan, Poland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%poznan%' OR LOWER(Location) LIKE '%pozna\u0144%') AND Reputation >= 100 ORDER BY Reputation DESC","CreationDate":"2015-09-03 23:56:32","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (\n        LOWER(Location) LIKE '%poznan%'\n        OR LOWER(Location) LIKE '%pozna\u0144%'\n    )\n    AND Reputation >= 100\nORDER BY\n    Reputation DESC;"},{"QuerySetId":359467,"Title":"Distribution of Accepted Answer Scores","Description":null,"QueryBody":"SELECT COUNT(1), a.Score FROM Posts AS a INNER JOIN Posts AS q ON q.AcceptedAnswerId = a.id WHERE a.PostTypeId = 2 \/* Answer *\/ GROUP BY a.Score ORDER BY a.Score","CreationDate":"2015-11-14 17:02:06","validated":false,"QueryBody_Original":"SELECT  count(1), a.Score \nfrom Posts as a\n    INNER JOIN Posts q ON q.AcceptedAnswerId = a.id\nwhere a.PostTypeId = 2 -- Answer\ngroup by a.Score\norder by a.Score"},{"QuerySetId":359684,"Title":"Where with multiple values - sorted in Ascending order","Description":null,"QueryBody":"SELECT * FROM Users WHERE DisplayName IN ('Tim', 'Tom') AND Id > 5000000 AND ID % 2 = 0 ORDER BY Id","CreationDate":"2015-09-04 21:17:32","validated":false,"QueryBody_Original":"SELECT  *\nFrom Users\nWhere DisplayName IN ('Tim', 'Tom') AND Id >5000000 AND ID % 2 = 0\nORDER BY Id ASC;\n\n\/*DESC is descending order, ASC ascending\nLine 4 restricts the list to even ID numbers <> = 0 would restrict it to odd*\/"},{"QuerySetId":360271,"Title":"Little Bobby Tables: Exploits of a Mom","Description":"Query to find answers referencing the famous xkcd comic, Exploits of a Mom.\r\nhttps:\/\/xkcd.com\/327\/","QueryBody":"SELECT id AS \"Post Link\", OwnerUserId AS \"User Link\" FROM Posts WHERE PostTypeId = 2 \/* answers *\/ AND (Body LIKE '%little bobby tables%' OR Body LIKE '%http:\/\/i.stack.imgur.com\/bRxGS.png%' OR Body LIKE '%https:\/\/xkcd.com\/327\/%' OR Body LIKE '%http:\/\/imgs.xkcd.com\/comics\/exploits_of_a_mom.png%' OR Body LIKE '%Robert''); DROP TABLE Students; --%' OR Body LIKE '%Exploits of a Mom%')","CreationDate":"2015-09-05 18:31:58","validated":false,"QueryBody_Original":"SELECT  id As [Post Link], OwnerUserId As [User Link]\nFrom Posts\nWhere PostTypeId = 2 --answers\n  And (Body Like '%little bobby tables%'\n      Or Body Like '%http:\/\/i.stack.imgur.com\/bRxGS.png%'\n      Or Body Like '%https:\/\/xkcd.com\/327\/%'\n      Or Body Like '%http:\/\/imgs.xkcd.com\/comics\/exploits_of_a_mom.png%'\n      Or Body Like '%Robert''); DROP TABLE Students; --%'\n      Or Body Like '%Exploits of a Mom%'\n      )"},{"QuerySetId":360288,"Title":"Questions with titles beginning with \"is this\"","Description":null,"QueryBody":"SELECT id AS \"post link\" FROM posts WHERE title LIKE 'Is this %' AND posttypeid = 1","CreationDate":"2015-09-05 20:27:47","validated":false,"QueryBody_Original":"SELECT  id as [post link]\nfrom posts\nwhere title like 'Is this %'\nand posttypeid = 1"},{"QuerySetId":360306,"Title":"Questions with titles \"Usage of\"","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM posts WHERE title LIKE 'programatically%' AND posttypeid = 1","CreationDate":"2015-09-24 15:05:02","validated":false,"QueryBody_Original":"SELECT  id as [Post Link]\nfrom posts\nwhere title like 'programatically%'\nand posttypeid = 1"},{"QuerySetId":360463,"Title":"Average age of SO User","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes","CreationDate":"2015-09-06 06:39:31","validated":false,"QueryBody_Original":"SELECT  count(*) from Votes"},{"QuerySetId":360853,"Title":"Use of LIKE function with AND","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id <= 1000 AND Id > 0 AND DisplayName LIKE 'Tim%' AND DisplayName LIKE '%Bol%'","CreationDate":"2015-09-06 22:13:28","validated":false,"QueryBody_Original":"SELECT  *\nFrom Users\nWhere Id <=1000 AND Id >0\nAND DisplayName Like 'Tim%'\nAND DisplayName Like '%Bol%';\n\n\/* This returns just one value for a 'Tim Boland'*\/"},{"QuerySetId":360861,"Title":"Use of LIKE function with OR","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id <= 100 AND Id > 0 AND DisplayName LIKE 'Tim%' OR DisplayName LIKE 'Dav%'","CreationDate":"2015-09-06 22:16:59","validated":false,"QueryBody_Original":"SELECT  *\nFrom Users\nWhere Id <=100 AND Id >0\nAND DisplayName Like 'Tim%'\nOR DisplayName Like 'Dav%';\n\n\/* Stack Exchange seems to have gone on strike \nwhile I tried to run this query so will come back to it.'*\/"},{"QuerySetId":360903,"Title":"How posts fare, by DOW and post type","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W') AS dow, TIME_TO_STR(CreationDate, '%A') AS dowName, 1.0 * COUNT(all AS ClosedDate) \/ COUNT(*) AS fractionThatHaveBeenClosed, (SELECT MAX(CASE WHEN rownum * 1.0 \/ numrows <= 0.9 THEN Score END) FROM (SELECT Score, ROW_NUMBER() OVER (ORDER BY Score) AS rownum, COUNT(*) OVER (PARTITION BY NULL) AS numrows FROM Posts WHERE TIME_TO_STR(CreationDate, '%W') = TIME_TO_STR(p.CreationDate, '%W') AND PostTypeId = p.PostTypeId) AS t) AS medianScore, CASE PostTypeId WHEN 1 THEN 'Q' WHEN 2 THEN 'A' END AS postType FROM Posts AS p WHERE PostTypeId < 3 GROUP BY TIME_TO_STR(CreationDate, '%W'), TIME_TO_STR(CreationDate, '%A'), PostTypeId ORDER BY PostTypeId, dow","CreationDate":"2015-09-07 01:43:03","validated":false,"QueryBody_Original":"SELECT  datepart(dw,CreationDate) as dow,datename(dw, CreationDate) as dowName, \n1.0*count(all ClosedDate)\/count(*) as fractionThatHaveBeenClosed,\n(SELECT max(case when rownum*1.0\/numrows <= 0.9 then Score end)\nfrom (SELECT Score,\n       row_number() over (order by Score) as rownum,\n       count(*) over (partition by NULL) as numrows\n       from Posts\n       where datepart(dw, CreationDate) = datepart(dw, p.CreationDate)\n       and PostTypeId = p.PostTypeId\n      ) t\n) as medianScore,\ncase PostTypeId when 1 then 'Q' when 2 then 'A' end postType\nfrom Posts as p\nwhere PostTypeId < 3\ngroup by datepart(dw,CreationDate),datename(dw, CreationDate),PostTypeId\norder by PostTypeId, dow"},{"QuerySetId":361500,"Title":"Average score for answers in Java","Description":null,"QueryBody":"SELECT AVG(Score) AS ave FROM Posts\/* And CreationDate >= getdate()-60 *\/  WHERE PostTypeId = 2 AND Tags LIKE '%php%'","CreationDate":"2015-09-23 00:56:34","validated":false,"QueryBody_Original":"SELECT   \n       AVG(Score) ave\n FROM Posts\n WHERE PostTypeId = 2\n -- And CreationDate >= getdate()-60\n AND Tags LIKE '%php%'"},{"QuerySetId":361627,"Title":"Top 1000 users from India ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2015-09-09 13:57:15","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":361736,"Title":"Top Stackoveflow Programmers in India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%stuttgart%' OR Location LIKE '%Stuttgart%') AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-06-12 19:23:29","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (\n        LOWER(Location) LIKE '%stuttgart%'\n        OR Location like '%Stuttgart%'\n    )\n    AND Reputation >= 1000\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":362309,"Title":"Posts of a hibernate project","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%hibernate%' AND Tags LIKE '%orm%' AND Body LIKE '%doc%'","CreationDate":"2015-09-10 08:12:52","validated":false,"QueryBody_Original":"SELECT  * from Posts\nwhere Tags like '%hibernate%'\nand Tags like '%orm%'\nand Body like '%doc%';"},{"QuerySetId":362467,"Title":"IN Statement with Order by","Description":null,"QueryBody":"SELECT * FROM Users WHERE DisplayName IN ('Tom', 'Tim') ORDER BY DisplayName DESC, Id","CreationDate":"2015-09-10 19:52:05","validated":false,"QueryBody_Original":"SELECT  *\nFrom Users\nWhere \nDisplayName IN ('Tom','Tim')\nOrder by DisplayName DESC, Id;\n\n\/* Note can't use wildcards with IN statements. They don't match.\nORDER BY - By default is Ascending (ASC) that 1-10 with 1 at top). \nReverse it by following it with DESC as shown above. Multiple Order by statements \nseparated with a comma.*\/"},{"QuerySetId":362726,"Title":"Tags with Stack Snippet Starter Pack in Wiki","Description":null,"QueryBody":"SELECT ('site:\/\/tags\/' + TagName + '\/info|' + TagName) AS TagName, pw.Body FROM Tags AS t LEFT JOIN Posts AS pw ON pw.ID = t.WikiPostId WHERE pw.Body LIKE '%Stack Snippet Starter Pack%' ORDER BY t.TagName","CreationDate":"2015-09-11 17:37:44","validated":false,"QueryBody_Original":"SELECT     ('site:\/\/tags\/' + TagName + '\/info|' + TagName) AS TagName, pw.Body\nFROM      Tags t\nLEFT JOIN Posts pw ON pw.ID = t.WikiPostId\nWHERE     pw.Body LIKE '%Stack Snippet Starter Pack%'\nORDER BY  t.TagName"},{"QuerySetId":362913,"Title":"Evolution of the mean question score and number of questions of each week of 2015","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.creationdate, '%W') AS weekOfCreation, SUM(p.Score) AS meanQuestionScore FROM Posts AS p WHERE p.PostTypeId = 1 AND TIME_TO_STR(p.creationdate, '%Y') = 2015 GROUP BY TIME_TO_STR(p.creationdate, '%W') ORDER BY TIME_TO_STR(p.creationdate, '%W')","CreationDate":"2015-09-12 03:23:55","validated":false,"QueryBody_Original":"SELECT     DATEPART(week, p.creationdate) AS weekOfCreation, \n          SUM(p.Score) As meanQuestionScore\nFROM      Posts p\nWHERE     p.PostTypeId = 1\nAND       DATEPART(year, p.creationdate) = 2015\nGROUP BY  DATEPART(week, p.creationdate)\nORDER BY  DATEPART(week, p.creationdate);"},{"QuerySetId":362932,"Title":"AVG question score of each week of 2014","Description":null,"QueryBody":"SELECT TIME_TO_STR(b.Date, '%W') AS weekOfCreation, COUNT(*) AS avgQuestionScore FROM Badges AS b WHERE b.Id = 63 AND TIME_TO_STR(b.Date, '%Y') = 2014 GROUP BY TIME_TO_STR(b.Date, '%W') ORDER BY TIME_TO_STR(b.Date, '%W')","CreationDate":"2015-09-15 00:56:45","validated":false,"QueryBody_Original":"SELECT     DATEPART(week, b.Date) AS weekOfCreation, \n          Count(*) As avgQuestionScore\nFROM      Badges b\nWHERE     b.Id = 63\nAND       DATEPART(year, b.Date) = 2014\nGROUP BY  DATEPART(week, b.Date)\nORDER BY  DATEPART(week, b.Date);"},{"QuerySetId":362965,"Title":"Graph: Unanswered questions by score","Description":null,"QueryBody":"SELECT Score, COUNT(Score) FROM Posts AS P WHERE P.PostTypeId = 1 AND P.AnswerCount = 0 GROUP BY Score ORDER BY Score","CreationDate":"2015-09-12 08:08:52","validated":false,"QueryBody_Original":"SELECT  \nScore,\nCOUNT(Score)\nFROM Posts P\nWHERE P.PostTypeId = 1\nAND P.AnswerCount = 0\nGROUP BY Score\nORDER BY Score"},{"QuerySetId":362968,"Title":"Graph: Unanswered questions by Length","Description":null,"QueryBody":"SELECT t.range AS \"score range\", COUNT(*) AS \"number of occurences\" FROM (SELECT CASE WHEN LENGTH(body) BETWEEN 0 AND 100 THEN ' 0-100' WHEN LENGTH(body) BETWEEN 101 AND 200 THEN '101-200' WHEN LENGTH(body) BETWEEN 201 AND 300 THEN '201-300' WHEN LENGTH(body) BETWEEN 301 AND 400 THEN '301-400' WHEN LENGTH(body) BETWEEN 401 AND 500 THEN '401-500' WHEN LENGTH(body) BETWEEN 501 AND 600 THEN '501-600' WHEN LENGTH(body) BETWEEN 601 AND 700 THEN '601-700' WHEN LENGTH(body) BETWEEN 701 AND 800 THEN '701-800' WHEN LENGTH(body) BETWEEN 801 AND 900 THEN '801-900' ELSE '900' END AS range FROM Posts AS P WHERE P.AnswerCount > 0) AS t GROUP BY t.range","CreationDate":"2015-09-12 12:44:25","validated":false,"QueryBody_Original":"SELECT  t.range as [score range], count(*) as [number of occurences]\nfrom (\n  SELECT case  \n    when LEN(body) between 0 and 100 then ' 0-100'\n    when LEN(body) between 101 and 200 then '101-200'\n    when LEN(body) between 201 and 300 then '201-300'\n    when LEN(body) between 301 and 400 then '301-400'\n    when LEN(body) between 401 and 500 then '401-500'\n    when LEN(body) between 501 and 600 then '501-600'\n    when LEN(body) between 601 and 700 then '601-700'\n    when LEN(body) between 701 and 800 then '701-800'\n    when LEN(body) between 801 and 900 then '801-900'\n    else '900' end as range\n  from Posts P\n  where P.AnswerCount > 0) t\ngroup by t.range"},{"QuerySetId":363245,"Title":"Graph: Unanswered questions by date","Description":null,"QueryBody":"SELECT d = CAST(CreationDate AS DATE), \"Unanswered Questions\" = COUNT(Id) FROM Posts AS P WHERE P.ClosedDate IS NULL AND P.AnswerCount = 0 GROUP BY CAST(CreationDate AS DATE) ORDER BY d","CreationDate":"2015-09-13 12:07:25","validated":false,"QueryBody_Original":"SELECT \n d = Convert(DATE, CreationDate),\n \"Unanswered Questions\" = COUNT(Id)\nFROM Posts P\n  Where P.ClosedDate is null\n  AND P.AnswerCount = 0\nGROUP BY Convert(DATE, \nCreationDate)\nORDER BY d"},{"QuerySetId":363313,"Title":"The most viewed ELL questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount, Score FROM Posts ORDER BY ViewCount DESC LIMIT 200","CreationDate":"2015-09-13 17:49:15","validated":false,"QueryBody_Original":"SELECT  TOP 200 Id \nAS [Post Link], \nViewCount,\nScore\n\nFROM Posts\n\nORDER BY ViewCount DESC"},{"QuerySetId":363368,"Title":"PPCG: Many more Q's than A's","Description":null,"QueryBody":"SELECT U.Id, U.DisplayName, Q.Questions, A.Answers FROM Users AS U INNER JOIN (SELECT OwnerUserId, COUNT(*) AS Questions FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId) AS Q ON U.Id = Q.OwnerUserId INNER JOIN (SELECT OwnerUserId, COUNT(*) AS Answers FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS A ON Q.OwnerUserId = A.OwnerUserId AND Q.Questions > 2 * A.Answers ORDER BY U.Id","CreationDate":"2015-09-13 22:41:26","validated":false,"QueryBody_Original":"SELECT  U.Id, U.DisplayName, Q.Questions, A.Answers\nfrom Users U\ninner join (\n  SELECT OwnerUserId, COUNT(*) as Questions\n  from Posts\n  where PostTypeId = 1\n  group by OwnerUserId\n) Q\non U.Id = Q.OwnerUserId\ninner join (\n  SELECT OwnerUserId, COUNT(*) as Answers\n  from Posts\n  where PostTypeId = 2\n  group by OwnerUserId\n) A\non Q.OwnerUserId = A.OwnerUserId\n  and Q.Questions > 2*A.Answers\norder by U.Id"},{"QuerySetId":364139,"Title":"Votes per day by Reputation","Description":null,"QueryBody":"SELECT Reputation, COUNT((UpVotes + DownVotes)) FROM Users AS U GROUP BY Reputation ORDER BY Reputation","CreationDate":"2015-09-15 08:56:23","validated":false,"QueryBody_Original":"SELECT \n Reputation,\n COUNT((UpVotes+DownVotes))\nFROM Users U\nGROUP BY Reputation\nORDER BY Reputation"},{"QuerySetId":364145,"Title":"Questions and Answers for the Hibernate Project","Description":null,"QueryBody":"SELECT id, AVG(Score) FROM Posts GROUP BY id","CreationDate":"2015-09-15 09:46:31","validated":false,"QueryBody_Original":"SELECT  id, Avg(Score) \nFROM Posts \nGROUP BY id;"},{"QuerySetId":364238,"Title":"Naive query to detect exact-match plagiarism","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", p1.Score, TIME_TO_STR(p1.CreationDate, '%Y-%m-%d') AS \"Date\", p1.Id AS \"Post Link\", p2.Id AS \"Post Link\" FROM Posts AS p1 INNER JOIN Posts AS p2 ON SOUNDEX(p1.Body) = SOUNDEX(p2.Body) INNER JOIN Users AS u ON p1.OwnerUserId = u.Id WHERE p1.PostTypeId = 2 AND p2.PostTypeId = 2 AND p1.Id <> p2.Id AND p1.OwnerUserId <> p2.OwnerUserId AND p2.CreationDate < p1.CreationDate AND p2.parentid = p1.parentid ORDER BY u.Id, p1.Score DESC, \"Date\" LIMIT 50","CreationDate":"2015-09-18 03:46:24","validated":false,"QueryBody_Original":"SELECT  TOP 50 u.Id AS [User Link],\n        p1.Score,\n        FORMAT(p1.CreationDate, 'yyyy-MM-dd') AS [Date],\n        p1.Id AS [Post Link],\n        p2.Id AS [Post Link]\n        FROM Posts p1 INNER JOIN Posts p2 ON SOUNDEX(p1.Body) = SOUNDEX(p2.Body)\n              INNER JOIN Users u ON p1.OwnerUserId = u.Id\nWHERE p1.PostTypeId = 2 AND p2.PostTypeId = 2\n  AND p1.Id <> p2.Id\n  AND p1.OwnerUserId <> p2.OwnerUserId\n  AND p2.CreationDate < p1.CreationDate\n  AND p2.parentid = p1.parentid\nORDER BY  u.Id,\n          p1.Score DESC,\n          [Date]"},{"QuerySetId":364300,"Title":"Number of Posts by Number of Users","Description":null,"QueryBody":"SELECT Posts, COUNT(*) AS Qty FROM (SELECT OwnerUserId, COUNT(OwnerUserId) AS Posts FROM Posts AS P WHERE P.PostTypeId = 1 OR P.PostTypeId = 2 GROUP BY OwnerUserId) AS SUB WHERE Posts > 0 GROUP BY Posts ORDER BY Posts","CreationDate":"2015-09-15 19:31:18","validated":false,"QueryBody_Original":"SELECT  Posts, COUNT(*) as Qty \nFROM\n(\nSELECT \nOwnerUserId,\nCount(OwnerUserId) as Posts\nFROM Posts P\nWHERE P.PostTypeId = 1 OR P.PostTypeId = 2\nGROUP BY OwnerUserId\n) AS SUB\nWHERE Posts > 0\nGROUP BY Posts\nORDER BY Posts"},{"QuerySetId":364916,"Title":"Questions and views by date","Description":null,"QueryBody":"SELECT d = CAST(CreationDate AS DATE), \"Questions\" = COUNT(Id), SUM(ViewCount) \/ 100.00000 AS \"Views (hundreds)\" FROM Posts AS P WHERE P.PostTypeId = 1 GROUP BY CAST(CreationDate AS DATE) ORDER BY d","CreationDate":"2015-09-17 07:26:10","validated":false,"QueryBody_Original":"SELECT \n d = Convert(DATE, CreationDate),\n \"Questions\" = COUNT(Id),\n SUM(ViewCount)\/100.00000 as 'Views (hundreds)'\nFROM Posts P\n  Where P.PostTypeId = 1\nGROUP BY Convert(DATE, CreationDate)\nORDER BY d"},{"QuerySetId":365027,"Title":"Top 150 users from bulgaria","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Bulgaria%' OR Location LIKE '%sofia%' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2015-09-16 23:09:59","validated":false,"QueryBody_Original":"SELECT  TOP 150 \n  Id\n  ,DisplayName\n  ,Reputation\n  ,WebsiteUrl\n  ,Location\nFROM Users\nWHERE \n  Location LIKE '%Bulgaria%' \n  OR Location LIKE '%sofia%'\nORDER BY Reputation DESC"},{"QuerySetId":365045,"Title":"Utenti ordinati per numero di posts","Description":null,"QueryBody":"SELECT * FROM (Users AS U INNER JOIN Posts AS P ON U.id = P.OwnerUserId)","CreationDate":"2015-09-17 00:26:07","validated":false,"QueryBody_Original":"SELECT  * from (\n\n  Users as U inner join Posts as P\n  on U.id = P.OwnerUserId\n)"},{"QuerySetId":365066,"Title":"Posting rate of astrophysics questions in Physics since Astronomy entered public beta","Description":null,"QueryBody":"SELECT CreationDate, ROW_NUMBER() OVER (ORDER BY CreationDate) AS No FROM Posts WHERE Tags LIKE '%astrophysics%' ORDER BY CreationDate DESC","CreationDate":"2015-09-17 01:00:52","validated":false,"QueryBody_Original":"SELECT \nCreationDate,\nROW_NUMBER() OVER (ORDER BY CreationDate ASC) AS No\nFROM\n  Posts\nWHERE Tags LIKE '%astrophysics%'\n---  AND CreationDate >= '2013-10-08'\nORDER BY \n  CreationDate DESC"},{"QuerySetId":365314,"Title":"Users active in the last fortnight","Description":null,"QueryBody":"SELECT Id AS \"User Link\", LastAccessDate FROM Users WHERE LastAccessDate > DATEDIFF(CURRENT_TIMESTAMP(), 1) ORDER BY LastAccessDate","CreationDate":"2016-04-26 19:34:13","validated":false,"QueryBody_Original":"SELECT  Id as [User Link],\nLastAccessDate\nFROM Users\nWHERE LastAccessDate > DATEDIFF(DAY, 1, GETDATE())\nORDER BY LastAccessDate"},{"QuerySetId":365463,"Title":"See Schema for a DB","Description":null,"QueryBody":"SELECT * FROM Users","CreationDate":"2015-09-17 19:04:48","validated":false,"QueryBody_Original":"SELECT  * From Users;"},{"QuerySetId":365663,"Title":"When has Jon Skeet commented on my posts","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate FROM Posts AS p INNER JOIN comments AS c ON p.id = c.Postid WHERE p.OwnerUserId = 12725 AND c.UserId = 22656 ORDER BY p.CreationDate DESC","CreationDate":"2017-06-27 00:38:16","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], p.CreationDate\nfrom Posts p\ninner join comments c on p.id = c.Postid\nwhere p.OwnerUserId = 12725 \nand c.UserId = 22656\norder by p.CreationDate desc"},{"QuerySetId":365928,"Title":"TOP 150 Users From Bulgaria","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Sofia%' OR Location LIKE '%Bulgaria%' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2015-09-18 15:47:14","validated":false,"QueryBody_Original":"SELECT  TOP 150 \n  Id,\n  DisplayName,\n  Reputation,\n  WebsiteUrl,\n  Location\nFROM Users\nWHERE\n  Location LIKE '%Sofia%'\n  OR Location LIKE '%Bulgaria%'\nORDER BY Reputation DESC"},{"QuerySetId":366096,"Title":"StackOverflow Users by Location and Skill sorted by Average Score","Description":null,"QueryBody":"SELECT DISTINCT Users.Id, Users.DisplayName, Users.Location, Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Score\", Users.AboutMe AS About, Users.Reputation AS Reputation FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND Location LIKE '%##Location##%' AND LOWER(Users.AboutMe) LIKE LOWER('%##Skill##%') GROUP BY Users.Id, DisplayName, Location, AboutMe, Reputation HAVING COUNT(Posts.Id) > 5 ORDER BY \"Average Score\" DESC LIMIT 500","CreationDate":"2015-09-19 04:00:43","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  TOP 500\n  Users.Id,\n  Users.DisplayName,\n  Users.Location,\n  Users.Id as [User Link],\n  Count(Posts.Id) AS Answers,\n  CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Score],\n  Users.AboutMe as About,\n  Users.Reputation as Reputation\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2\n    AND\n      CommunityOwnedDate is null\n    AND\n      ClosedDate is null\n    AND\n      Location like '%##Location##%'\n    AND\n      lower(Users.AboutMe) LIKE lower('%##Skill##%')\nGROUP BY\n    Users.Id, DisplayName, Location, AboutMe, Reputation\nHAVING\n    Count(Posts.Id) > 5\nORDER BY\n    [Average Score] DESC"},{"QuerySetId":366295,"Title":"avg view count per post","Description":null,"QueryBody":"SELECT AVG(ViewCount * 1.0) AS view_count, AVG(AnswerCount * 1.0) AS ans_count, AVG(FavoriteCount * 1.0) AS fav_count, AVG(CommentCount * 1.0) AS com_count, COUNT(Id) AS question_count FROM posts WHERE PostTypeId = 1","CreationDate":"2015-09-20 00:34:24","validated":false,"QueryBody_Original":"SELECT \navg(ViewCount*1.0) view_count,\navg(AnswerCount*1.0) ans_count,\navg(FavoriteCount*1.0) fav_count,\navg(CommentCount*1.0) com_count,\ncount(Id) question_count\nfrom posts\nwhere PostTypeId = 1"},{"QuerySetId":366998,"Title":"Post with its answers, by Id","Description":null,"QueryBody":"SELECT p.* FROM Posts AS p WHERE p.Id = 1252512","CreationDate":"2015-10-30 01:33:38","validated":false,"QueryBody_Original":"SELECT \n    p.*\nfrom\n    Posts p \nwhere\n      p.Id=1252512"},{"QuerySetId":367003,"Title":"TOP 150 Users from Bulgaria","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, Location FROM Users WHERE Location LIKE '%Sofia%' OR Location LIKE '%Bulgaria%' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2015-09-21 18:46:19","validated":false,"QueryBody_Original":"SELECT  TOP 150\n  Id,\n  DisplayName,\n  Reputation,\n  Location\nFROM Users\nWHERE\n   Location LIKE '%Sofia%'\n   OR Location LIKE '%Bulgaria%'\nORDER BY Reputation DESC"},{"QuerySetId":367015,"Title":"Users and Answers by date","Description":null,"QueryBody":"SELECT CAST(P.CreationDate AS DATE), COUNT(P.Id) AS Posts, COUNT(U.Id) AS Users FROM Posts AS P INNER JOIN Users AS U ON CAST(P.CreationDate AS DATE) = CAST(U.CreationDate AS DATE) GROUP BY CAST(P.CreationDate AS DATE) ORDER BY CAST(P.CreationDate AS DATE)","CreationDate":"2015-09-21 20:01:01","validated":false,"QueryBody_Original":"SELECT  CONVERT(Date, P.CreationDate), COUNT(P.Id) as Posts, COUNT(U.Id) as Users\nFROM Posts P INNER JOIN\nUsers U ON CONVERT(Date, P.CreationDate)=CONVERT(Date, U.CreationDate)\nGROUP BY CONVERT(Date, P.CreationDate)\nORDER BY CONVERT(Date, P.CreationDate)"},{"QuerySetId":367408,"Title":"Questions by day of week","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W'), COUNT(Id) FROM Posts AS P WHERE P.PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%W') ORDER BY TIME_TO_STR(CreationDate, '%W')","CreationDate":"2015-09-22 16:48:09","validated":false,"QueryBody_Original":"SELECT  \nDATEPART(weekday, CreationDate),\nCOUNT(Id)\nFROM Posts P\nWhere P.PostTypeId = 1\nGROUP BY DATEPART(weekday, CreationDate)\nORDER BY DATEPART(weekday, CreationDate)"},{"QuerySetId":367417,"Title":"Questions and Answers by date","Description":null,"QueryBody":"SELECT * FROM (SELECT CreationDate, Id AS Questions FROM Posts AS P WHERE P.PostTypeId = 1 UNION SELECT CreationDate, Id AS Answers FROM Posts AS P WHERE P.PostTypeId = 2) AS t","CreationDate":"2015-09-22 17:07:50","validated":false,"QueryBody_Original":"SELECT  * \nFROM\n(\nSELECT CreationDate,\nId as Questions\nFROM Posts P\nWHERE P.PostTypeId = 1\nUNION\nSELECT CreationDate,\nId as Answers\nFROM Posts P\nWHERE P.PostTypeId = 2\n) t"},{"QuerySetId":367446,"Title":" Migrated questions by date","Description":null,"QueryBody":"SELECT MigrationDate, COUNT(Id) - 1 FROM (SELECT P.Id AS Id, CAST(P.CreationDate AS DATE) AS MigrationDate FROM Posts AS P, PostHistory AS H WHERE P.PostTypeId = 1 AND P.Id = H.PostId AND H.PostHistoryTypeId = 36 AND H.Comment LIKE 'from http:\/\/english.%' UNION SELECT -1 AS Id, CAST(CreationDate AS DATE) AS MigrationDate FROM Posts AS P2) AS t GROUP BY MigrationDate ORDER BY MigrationDate","CreationDate":"2015-09-22 18:45:36","validated":false,"QueryBody_Original":"SELECT \n  MigrationDate,\n  COUNT(Id) - 1\nFROM (\n  SELECT\n    P.Id as Id,\n    CONVERT(DATE, P.CreationDate) as MigrationDate\n  FROM Posts P, PostHistory H\n  WHERE\n    P.PostTypeId = 1\n    AND P.Id = H.PostId\n    AND H.PostHistoryTypeId = 36\n    AND H.Comment LIKE 'from http:\/\/english.%'\n  UNION\n  SELECT\n    -1 as Id,\n    CONVERT(DATE, CreationDate) as MigrationDate\n  FROM Posts P2\n) t\nGROUP BY MigrationDate\nORDER BY MigrationDate"},{"QuerySetId":367832,"Title":"Low scoring questions with high scoring answers","Description":null,"QueryBody":"SELECT q.Id AS question_id, q.Title AS question_title, q.ViewCount AS views, q.Score AS question_score, a.Score AS answer_score, a.Id AS answer_id, a.OwnerUserId AS answer_user, users.DisplayName AS username, a.OwnerDisplayName AS unregistered_name FROM Posts AS q JOIN Posts AS a ON a.parentId = q.Id JOIN (SELECT parentID, MAX(Score) AS Score FROM Posts GROUP BY parentID) AS bestAnswers ON bestAnswers.parentID = a.parentID AND bestAnswers.Score = a.Score LEFT OUTER JOIN Users ON users.Id = a.OwnerUserId WHERE q.parentId IS NULL ORDER BY q.ID, a.Score DESC, a.Id LIMIT 100","CreationDate":"2015-09-23 17:16:33","validated":false,"QueryBody_Original":"SELECT  \n  TOP 100\n  q.Id                as question_id,\n  q.Title             as question_title,\n  q.ViewCount         as views,\n  q.Score             as question_score,\n  a.Score             as answer_score,\n  a.Id                as answer_id,\n  a.OwnerUserId       as answer_user,\n  users.DisplayName   as username,\n  a.OwnerDisplayName  as unregistered_name\n  \nFROM Posts as q\nJOIN Posts as a \n  on a.parentId = q.Id\n-- Get t\njoin (  SELECT parentID, max(Score) as Score\n        FROM Posts \n        GROUP BY parentID ) as bestAnswers\n  ON  bestAnswers.parentID = a.parentID\n  and bestAnswers.Score    = a.Score\nleft outer JOIN Users\n  ON users.Id = a.OwnerUserId\nWHERE\n  q.parentId is null\n--AND q.CreationDate > '2013-01-01'\nORDER BY q.ID, a.Score DESC, a.Id;"},{"QuerySetId":367952,"Title":"Aggregate post statistics per year and week number","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%y') AS \"Year\", TIME_TO_STR(p.CreationDate, '%W') AS \"Week\", COUNT(*) AS \"Posts\", NUMBER_TO_STR(AVG(CAST(p.Score AS FLOAT)), 'N2') AS \"Mean Score\", SUM(p.Score) AS \"Sum Score\", NUMBER_TO_STR(AVG(CAST(p.ViewCount AS FLOAT)), 'N2') AS \"Mean Views\", SUM(p.ViewCount) AS \"Sum Views\", NUMBER_TO_STR(AVG(CAST(p.AnswerCount AS FLOAT)), 'N2') AS \"Mean Answers\", SUM(p.AnswerCount) AS \"Sum Answers\", NUMBER_TO_STR(AVG(CAST(p.CommentCount AS FLOAT)), 'N2') AS \"Mean Comments\", SUM(p.CommentCount) AS \"Sum Comments\", NUMBER_TO_STR(AVG(CAST(p.FavoriteCount AS FLOAT)), 'N2') AS \"Mean Favorites\", SUM(p.FavoriteCount) AS \"Sum Favorites\" FROM Posts AS p GROUP BY TIME_TO_STR(p.CreationDate, '%y'), TIME_TO_STR(p.CreationDate, '%W') ORDER BY TIME_TO_STR(p.CreationDate, '%y'), TIME_TO_STR(p.CreationDate, '%W')","CreationDate":"2015-09-24 00:44:03","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(yy, p.CreationDate) AS [Year],\n  DATEPART(ww, p.CreationDate) AS [Week],\n  COUNT(*) AS [Posts],\n  FORMAT(AVG(Cast(p.Score as Float)), 'N2') AS [Mean Score],\n  SUM(p.Score) AS [Sum Score],\n  FORMAT(AVG(Cast(p.ViewCount as Float)), 'N2') AS [Mean Views],\n  SUM(p.ViewCount) AS [Sum Views],  \n  FORMAT(AVG(Cast(p.AnswerCount as Float)), 'N2') AS [Mean Answers],\n  SUM(p.AnswerCount) AS [Sum Answers],\n  FORMAT(AVG(Cast(p.CommentCount as Float)), 'N2') AS [Mean Comments],\n  SUM(p.CommentCount) AS [Sum Comments],\n  FORMAT(AVG(Cast(p.FavoriteCount as Float)), 'N2') AS [Mean Favorites],\n  SUM(p.FavoriteCount) AS [Sum Favorites]\n\nFROM Posts p\n\nGROUP BY\n  DATEPART(yy, p.CreationDate), DATEPART(ww, p.CreationDate)\n\nORDER BY\n  DATEPART(yy, p.CreationDate), DATEPART(ww, p.CreationDate)"},{"QuerySetId":368126,"Title":"Number of entries in PostHistory","Description":null,"QueryBody":"SELECT COUNT(*) FROM PostHistory","CreationDate":"2015-09-24 17:04:14","validated":false,"QueryBody_Original":"SELECT  count(*) from PostHistory"},{"QuerySetId":368362,"Title":"no of entries in badge","Description":null,"QueryBody":"SELECT COUNT(*) FROM Badges","CreationDate":"2015-09-25 20:38:14","validated":false,"QueryBody_Original":"SELECT  count(*) from Badges;"},{"QuerySetId":368391,"Title":"Rank users by number of questions","Description":null,"QueryBody":"SELECT u.DisplayName AS \"User\", COUNT(*) AS \"Number questions\" FROM Posts AS q INNER JOIN Users AS u ON q.OwnerUserId = u.Id AND q.PostTypeId = 1 GROUP BY u.DisplayName ORDER BY COUNT(*) DESC","CreationDate":"2015-10-07 00:18:10","validated":false,"QueryBody_Original":"SELECT  \n  u.DisplayName AS 'User', \n  count(*) AS 'Number questions'\nFROM \n  Posts q\ninner join Users u ON q.OwnerUserId = u.Id\n  and q.PostTypeId = 1\nGROUP BY u.DisplayName\nORDER BY count(*) DESC;"},{"QuerySetId":368583,"Title":"Badge Samaritan - revival - answers that need 1 upvote ","Description":"http:\/\/stackoverflow.com\/help\/badges\/837\/revival \"Answered more than 30 days later as first answer scoring 2 or more. This badge can be awarded multiple times.\"","QueryBody":"SELECT a.Id AS \"Post Link\", a.Score, a.CreationDate FROM Posts AS a INNER JOIN Posts AS q ON a.ParentId = q.Id INNER JOIN PostHistory AS ph ON ph.PostId = q.Id WHERE ph.PostHistoryTypeId <> 14 AND DATEDIFF(a.CreationDate, q.CreationDate) > 60 AND (a.Score = 4) GROUP BY a.Id, a.Score, a.CreationDate ORDER BY a.CreationDate DESC LIMIT 2000","CreationDate":"2019-04-20 18:35:22","validated":false,"QueryBody_Original":"SELECT  TOP 2000\n  a.Id AS [Post Link],\n  a.Score,\n  a.CreationDate\nFROM\n  Posts AS a\nINNER JOIN\n  Posts AS q\nON\n  a.ParentId = q.Id\nINNER JOIN\n  PostHistory AS ph\nON\n  ph.PostId = q.Id\nWHERE\n      ph.PostHistoryTypeId != 14\n  and DATEDIFF(DAY, q.CreationDate, a.CreationDate) > 60\n  and (a.Score = 4)\n--  and q.AnswerCount = 1\nGROUP BY\n  a.Id, a.Score, a.CreationDate\nORDER BY\n  a.CreationDate DESC"},{"QuerySetId":369183,"Title":"is score can be negative","Description":null,"QueryBody":"SELECT MAX(score) FROM Posts WHERE posttypeid = 1","CreationDate":"2015-09-28 15:05:27","validated":false,"QueryBody_Original":"SELECT  max(score) from Posts where  posttypeid =1 ;"},{"QuerySetId":369204,"Title":"max rep of a user","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE posttypeid = 1","CreationDate":"2015-09-28 17:43:50","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts where posttypeid =1;"},{"QuerySetId":369300,"Title":"Scores of questions against sum of answers","Description":null,"QueryBody":"SELECT q.Score AS \"Question Votes\", SUM(a.Score) AS \"Answers Votes\" \/* q.Id *\/ FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id GROUP BY q.Score, q.Id ORDER BY q.Id","CreationDate":"2015-09-29 01:40:38","validated":false,"QueryBody_Original":"SELECT \n  q.Score AS 'Question Votes',\n  sum(a.Score) AS 'Answers Votes'\n  --q.Id\nFROM Posts q\ninner join Posts a ON a.ParentId = q.Id\nGROUP BY q.Score, q.Id\nORDER BY q.Id"},{"QuerySetId":369557,"Title":"Users located in the states","Description":null,"QueryBody":"SELECT id AS \"User Link\", Reputation, WebsiteUrl, Location, AboutMe, LastAccessDate FROM Users WHERE UPPER(Location) LIKE '%Goa, India%' OR UPPER(Location) LIKE '%Goa%' OR UPPER(Location) LIKE '%India, Goa%' ORDER BY Reputation DESC","CreationDate":"2016-01-01 19:45:21","validated":false,"QueryBody_Original":"SELECT  id as [User Link], Reputation, WebsiteUrl, Location, AboutMe,\nLastAccessDate  \nfrom Users \nwhere upper(Location) like '%Goa, India%' \nor upper(Location) like '%Goa%'\nor upper(Location) like '%India, Goa%'\norder by Reputation desc"},{"QuerySetId":369902,"Title":"SELECT   DisplayName, Reputation, Id FROM     Users WHERE    UPPER(Location) LIKE '%ISRAEL%' ORDER B","Description":null,"QueryBody":"SELECT DisplayName, Reputation, Id AS \"User Link\" FROM Users WHERE UPPER(Location) LIKE '%ISRAEL%' ORDER BY 2 DESC","CreationDate":"2015-09-30 22:45:49","validated":false,"QueryBody_Original":"SELECT    DisplayName, Reputation, Id AS [User Link] FROM     Users WHERE    UPPER(Location) LIKE '%ISRAEL%' ORDER BY 2 DESC"},{"QuerySetId":370020,"Title":"good answers to bad questions","Description":null,"QueryBody":"SELECT * FROM Posts WHERE id IN (SELECT AcceptedAnswerId FROM posts WHERE NOT AcceptedAnswerId IS NULL ORDER BY Score LIMIT 1000) ORDER BY Score DESC LIMIT 1000","CreationDate":"2015-10-01 14:15:55","validated":false,"QueryBody_Original":"SELECT  top(1000) * From Posts where id in \n(SELECT top(1000) AcceptedAnswerId \n    from posts \n    where AcceptedAnswerId is not null\n    order by Score ASC\n  ) Order by Score Desc"},{"QuerySetId":370021,"Title":"Top 100 users from Pakistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2020-11-16 03:59:52","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":370104,"Title":"select Id [User Link], Reputation, DisplayName, Location from Users where Location like '%Latvia%' o","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%Latvia%' ORDER BY Reputation DESC","CreationDate":"2015-10-01 19:17:57","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location from Users where Location like '%Latvia%' order by Reputation desc"},{"QuerySetId":370179,"Title":"Tag wiki excerpts with markdown","Description":null,"QueryBody":"SELECT T.tagName, P.Body FROM Tags AS T JOIN Posts AS P ON T.excerptPostId = P.id AND P.postTypeId = 4 \/* tagWiki *\/ WHERE P.body LIKE '%](%' \/* a construction typical of markdown *\/","CreationDate":"2015-10-01 20:39:33","validated":false,"QueryBody_Original":"SELECT  T.tagName, P.Body\nfrom Tags T\njoin Posts P\non T.excerptPostId = P.id\nand P.postTypeId = 4 --tagWiki\nwhere P.body like '%](%' --a construction typical of markdown"},{"QuerySetId":370833,"Title":"Closed, undeleted, questions with votes <= 1 by date","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.CreationDate FROM Posts AS q WHERE q.PostTypeId = 1 AND q.CreationDate > '##StartDate##' AND q.CreationDate < '##EndDate##' AND q.ClosedDate > '##StartDate##' AND q.DeletionDate IS NULL AND q.Score <= 1 AND COALESCE((SELECT MAX(a.Score) FROM Posts AS a WHERE a.ParentId = q.Id AND a.PostTypeId = 2), 0) <= 1 ORDER BY q.CreationDate","CreationDate":"2015-10-03 18:59:24","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.CreationDate from Posts q\nwhere q.PostTypeId=1\n  and q.CreationDate>'##StartDate##'\n  and q.CreationDate<'##EndDate##'\n  and q.ClosedDate>'##StartDate##'\n  and q.DeletionDate is null\n  and q.Score <= 1\n  and isnull((\n      SELECT max(a.Score) from Posts a\n      where a.ParentId = q.Id and a.PostTypeId=2\n    ),0) <= 1\norder by q.CreationDate;"},{"QuerySetId":370837,"Title":"What is the most downvoted answer?","Description":null,"QueryBody":"SELECT id FROM Users","CreationDate":"2015-10-03 20:11:33","validated":false,"QueryBody_Original":"SELECT  id FROM Users"},{"QuerySetId":370911,"Title":"Users with most deleted questions","Description":null,"QueryBody":"SELECT Users.Id, COUNT(Posts.Id) FROM Users LEFT JOIN Posts ON Users.Id = Posts.OwnerUserId WHERE Posts.DeletionDate IS NULL AND PostTypeId = 1 GROUP BY Users.Id","CreationDate":"2015-10-04 04:20:08","validated":false,"QueryBody_Original":"SELECT  Users.Id, count(Posts.Id)\nFROM Users left join Posts on Users.Id = Posts.OwnerUserId\nWHERE Posts.DeletionDate is NULL and PostTypeId = 1\nGROUP BY Users.Id"},{"QuerySetId":370978,"Title":"What version is the DB running?","Description":null,"QueryBody":"SELECT @@version","CreationDate":"2015-10-04 14:16:20","validated":false,"QueryBody_Original":"SELECT  @@version"},{"QuerySetId":371067,"Title":"Hardware Recommendation comments on Superuser","Description":null,"QueryBody":"SELECT id AS \"Comment Link\", * FROM comments AS c WHERE c.creationdate >= '2015-09-09' AND (c.text LIKE '%hardware rec%' OR c.text LIKE '%hardwarerecs%') ORDER BY c.creationdate DESC","CreationDate":"2015-10-04 19:59:33","validated":false,"QueryBody_Original":"SELECT  \n  id as [Comment Link],\n  * \nfrom\n  comments c \nwhere \n  c.creationdate >= '2015-09-09'\n  and (c.text like '%hardware rec%'\n      or c.text like '%hardwarerecs%'\n      )\norder by \n  c.creationdate desc"},{"QuerySetId":371166,"Title":"Top Indian Users On Stackoverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' AND Reputation >= 200 ORDER BY Reputation DESC","CreationDate":"2015-10-05 11:23:13","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    AND Reputation >= 200\nORDER BY\n    Reputation DESC;"},{"QuerySetId":371333,"Title":"total reputation for all users on site","Description":null,"QueryBody":"SELECT SUM(Reputation) \/ COUNT(Id) AS \"Average Rep\", COUNT(Id) AS \"Number of Users\" FROM Users","CreationDate":"2020-08-03 20:31:28","validated":false,"QueryBody_Original":"SELECT  SUM(Reputation) \/ COUNT(Id) as [Average Rep], COUNT(Id) AS [Number of Users]\nFROM Users"},{"QuerySetId":371338,"Title":"Total amount of reputation on the entire site","Description":null,"QueryBody":"SELECT SUM(Reputation) AS Reputation FROM Users","CreationDate":"2015-10-05 22:00:46","validated":false,"QueryBody_Original":"SELECT  sum(Reputation) AS Reputation FROM Users"},{"QuerySetId":371889,"Title":"TOP 100 users from Bangladesh","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Bangladesh%' ORDER BY reputation DESC LIMIT 1000","CreationDate":"2018-05-08 13:51:03","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Bangladesh%'\n   --OR Location like N'%Dhaka%'\nORDER BY\n   reputation DESC"},{"QuerySetId":372048,"Title":"Posts containing png or jpgs","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", Id AS \"Post Link\", Score, ViewCount FROM Posts WHERE Body LIKE '%http:\/\/%.jpg%' OR Body LIKE '%http:\/\/%.png%' ORDER BY ViewCount DESC","CreationDate":"2015-10-08 16:26:12","validated":false,"QueryBody_Original":"SELECT  OwnerUserId AS [User Link], Id as [Post Link], Score, ViewCount\nFROM Posts\nWHERE Body LIKE '%http:\/\/%.jpg%' OR Body LIKE '%http:\/\/%.png%'\nORDER BY ViewCount DESC"},{"QuerySetId":372173,"Title":"Reputation of Asker and Scores of Answers","Description":null,"QueryBody":"SELECT question.Id, answers.Id, asker.Reputation, answers.Score FROM Posts AS question JOIN Posts AS answers ON question.Id = answers.ParentId JOIN Users AS asker ON question.OwnerUserId = asker.Id WHERE question.PostTypeId = 1 AND answers.PostTypeId = 2 ORDER BY question.Id DESC","CreationDate":"2015-10-06 20:51:08","validated":false,"QueryBody_Original":"SELECT \n  question.Id,\n  answers.Id,\n  asker.Reputation,\n  answers.Score\nFROM \n  Posts question\n  JOIN\n    Posts answers ON question.Id = answers.ParentId\n  JOIN\n    Users asker ON question.OwnerUserId = asker.Id\nWHERE\n  question.PostTypeId =1  AND\n  answers.PostTypeId = 2\nORDER BY question.Id DESC"},{"QuerySetId":372228,"Title":"Show top 20 least generous users with badges","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 1) AS GoldBadges, (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 2) AS SilverBadges, (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 3) AS BronzeBadges FROM Users\/* exclude Community and sin binned users *\/ \/* minimum amount here to qualify for this? *\/  WHERE (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) IS NULL \/* ensure no bounty has been awarded *\/ AND Users.Reputation > 50 ORDER BY Reputation DESC LIMIT 20","CreationDate":"2015-10-07 00:52:11","validated":false,"QueryBody_Original":"SELECT \n  TOP(20)\n  Users.Id [User Link],\n  Users.DisplayName,\n  Users.Reputation,\n  (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 1) as GoldBadges,\n  (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 2) as SilverBadges,\n  (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 3) as BronzeBadges\nFROM Users\nWHERE\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) is null -- ensure no bounty has been awarded\n  -- exclude Community and sin binned users\n  -- minimum amount here to qualify for this?\n  AND Users.Reputation > 50 \nORDER BY \n  Reputation DESC"},{"QuerySetId":372233,"Title":"Show top 20 most generous users with badges: bounties awarded","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 1) AS GoldBadges, (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 2) AS SilverBadges, (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 3) AS BronzeBadges, (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) AS TotalBountiesAwarded FROM Users\/* exclude Community and sin binned users *\/ \/* minimum amount here to qualify for this? *\/  WHERE (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) > 0 \/* ensure no bounty has been awarded *\/ AND Users.Reputation > 50 ORDER BY TotalBountiesAwarded DESC LIMIT 20","CreationDate":"2015-10-07 00:51:07","validated":false,"QueryBody_Original":"SELECT \n  TOP(20)\n  Users.Id [User Link],\n  Users.DisplayName,\n  Users.Reputation,\n  (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 1) as GoldBadges,\n  (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 2) as SilverBadges,\n  (SELECT SUM(1) FROM Badges WHERE Badges.UserId = Users.Id AND Class = 3) as BronzeBadges,\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) as TotalBountiesAwarded\nFROM Users\nWHERE\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) > 0 -- ensure no bounty has been awarded\n  -- exclude Community and sin binned users\n  -- minimum amount here to qualify for this?\n  AND Users.Reputation > 50 \nORDER BY \n  TotalBountiesAwarded DESC"},{"QuerySetId":372239,"Title":"Rank users by number of questions and give average vote","Description":null,"QueryBody":"SELECT * FROM (SELECT u.DisplayName AS UserName, COUNT(*) AS Nquestions, SUM(q.Score) AS TotalVotes, ROUND(SUM(q.Score) \/ (1.0 * COUNT(*)), 2) AS AverageVotes FROM Posts AS q INNER JOIN Users AS u ON q.OwnerUserId = u.Id AND q.PostTypeId = 1 GROUP BY u.DisplayName) AS a WHERE a.Nquestions > 10 ORDER BY a.AverageVotes DESC, a.Nquestions DESC","CreationDate":"2015-10-07 01:03:53","validated":false,"QueryBody_Original":"SELECT  * from (\nSELECT \n  u.DisplayName AS UserName, \n  count(*) AS Nquestions,\n  sum(q.Score) AS TotalVotes,\n  round(sum(q.Score)\/(1.0*count(*)),2) AS AverageVotes\nFROM \n  Posts q\ninner join Users u ON q.OwnerUserId = u.Id\n  and q.PostTypeId = 1\nGROUP BY u.DisplayName) a\nwhere a.Nquestions > 10\nORDER BY a.AverageVotes DESC, a.Nquestions DESC"},{"QuerySetId":372243,"Title":"Rank users by number of questions and give average vote N>10","Description":null,"QueryBody":"SELECT * FROM (SELECT u.DisplayName AS UserName, COUNT(*) AS Nquestions, SUM(q.Score) AS TotalVotes, ROUND(SUM(q.Score) \/ (1.0 * COUNT(*)), 2) AS AverageVotes FROM Posts AS q INNER JOIN Users AS u ON q.OwnerUserId = u.Id WHERE q.PostTypeId = 1 GROUP BY u.DisplayName) AS a WHERE a.Nquestions > 10 ORDER BY a.AverageVotes DESC, a.Nquestions DESC","CreationDate":"2015-10-07 01:25:12","validated":false,"QueryBody_Original":"SELECT  * from (\nSELECT \n  u.DisplayName AS UserName, \n  count(*) AS Nquestions,\n  sum(q.Score) AS TotalVotes,\n  round(sum(q.Score)\/(1.0*count(*)),2) AS AverageVotes\nFROM \n  Posts q\ninner join Users u ON q.OwnerUserId = u.Id\nwhere q.PostTypeId = 1\nGROUP BY u.DisplayName) a\nwhere a.Nquestions > 10 \nORDER BY a.AverageVotes DESC, a.Nquestions DESC"},{"QuerySetId":372418,"Title":"Users ranked by number of badges (all kinds)","Description":null,"QueryBody":"SELECT UserLink AS \"User Link\", Rep, NumBadges, COUNT(*) AS \"NumQuestions\" FROM (SELECT * FROM (SELECT Users.Id AS \"UserLink\", Users.Reputation AS \"Rep\", COUNT(*) AS \"NumBadges\" FROM Users INNER JOIN Badges ON Users.Id = Badges.UserId WHERE Badges.Class = 1 GROUP BY Users.Id, Users.Reputation) AS UserByBadge ORDER BY NumBadges DESC LIMIT 100) AS UserByQuestion INNER JOIN Posts ON Posts.OwnerUserId = UserLink WHERE Posts.PostTypeId = 1 GROUP BY UserLink, Rep, NumBadges ORDER BY NumBadges DESC","CreationDate":"2015-10-07 15:15:07","validated":false,"QueryBody_Original":"SELECT  \n  UserLink as [User Link],\n  Rep,\n  NumBadges,\n  COUNT(*) as [NumQuestions]\nFROM(\nSELECT TOP 100\n  *\nFROM (\n  SELECT\n    Users.Id as [UserLink],\n    Users.Reputation as [Rep],\n    COUNT(*) as [NumBadges]\n  FROM\n    Users INNER JOIN Badges\n    ON Users.Id = Badges.UserId\n    WHERE Badges.Class = 1\n  GROUP BY\n    Users.Id,\n    Users.Reputation    \n) as UserByBadge \nORDER BY NumBadges DESC\n  ) as UserByQuestion INNER JOIN Posts\n  ON Posts.OwnerUserId = UserLink\n  WHERE Posts.PostTypeId = 1\n  GROUP BY\n    UserLink,\n    Rep,\n    NumBadges\nORDER BY NumBadges DESC"},{"QuerySetId":372598,"Title":"Top 20 Users by Reputation","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation FROM Users ORDER BY Users.Reputation DESC LIMIT 20","CreationDate":"2015-10-08 00:08:26","validated":false,"QueryBody_Original":"SELECT  TOP(20)\n  Users.Id [User Link],\n  Users.DisplayName,\n  Users.Reputation\nFROM Users\nORDER BY \n  Users.Reputation DESC"},{"QuerySetId":372747,"Title":"Top 10 users from Gurgaon, India","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%India%' ORDER BY reputation DESC LIMIT 10","CreationDate":"2015-10-14 10:39:57","validated":false,"QueryBody_Original":"SELECT  TOP 10\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%India%'\n\nORDER BY\n   reputation DESC"},{"QuerySetId":372870,"Title":"TOP 50 user from india","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users ORDER BY reputation DESC LIMIT 150","CreationDate":"2015-12-10 15:47:31","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nORDER BY\n   reputation DESC"},{"QuerySetId":372875,"Title":"TOP 100 Users based on coimbatore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Coimbatore%' OR UPPER(Location) LIKE '%coimbatore%' OR Location LIKE '%Coimbatore%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2015-10-08 14:46:35","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Coimbatore%'\n    OR UPPER(Location) LIKE '%coimbatore%'\n    or Location like '%Coimbatore%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":373364,"Title":"select top 10 * from dbo.Posts","Description":null,"QueryBody":"SELECT * FROM dbo.Posts AS p WHERE p.Id = 100","CreationDate":"2015-10-09 11:13:07","validated":false,"QueryBody_Original":"SELECT  *\nfrom dbo.Posts as p\nwhere p.Id = 100"},{"QuerySetId":373681,"Title":"Top 100 Tunisian users on stackover flow","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Tunis%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2015-10-10 00:42:34","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Tunis%'\n\nORDER BY\n   reputation DESC"},{"QuerySetId":373847,"Title":"Questions with a certain tag by score","Description":null,"QueryBody":"SELECT Score, COUNT(Score) AS Number FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '<##Tag##>' GROUP BY SCORE ORDER BY SCORE","CreationDate":"2015-10-10 07:52:45","validated":false,"QueryBody_Original":"SELECT  Score, Count(Score) as Number\nFROM Posts\nWHERE PostTypeId = 1\nAND Tags LIKE '<##Tag##>'\nGROUP BY SCORE\nORDER BY SCORE ASC"},{"QuerySetId":373900,"Title":"database schema for questions and answers","Description":null,"QueryBody":"SELECT * FROM Posts WHERE id BETWEEN 6000 AND 6500","CreationDate":"2015-10-10 13:49:03","validated":false,"QueryBody_Original":"SELECT  * from Posts where id between 6000 and 6500"},{"QuerySetId":373964,"Title":"The BIGGEST Post Body on Stack Overflow","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", LENGTH(Body) AS Size, CreationDate, LastEditDate FROM Posts ORDER BY LENGTH(Body) DESC LIMIT 1","CreationDate":"2015-10-10 16:23:29","validated":false,"QueryBody_Original":"SELECT  TOP 1\n  Id AS [Post Link],\n  LEN(Body) AS Size,\n  CreationDate,\n  LastEditDate\nFROM Posts\nORDER BY LEN(Body) DESC"},{"QuerySetId":373967,"Title":"All tag names in decending order of uses","Description":null,"QueryBody":"SELECT TagName, \"Count\" FROM Tags ORDER BY \"Count\" DESC","CreationDate":"2015-10-10 16:36:27","validated":false,"QueryBody_Original":"SELECT  \n  TagName,\n  [Count]\nFROM Tags\nORDER BY [Count] DESC"},{"QuerySetId":374595,"Title":"Users accusing other users of plagiarism (double-sigh)","Description":null,"QueryBody":"SELECT c.PostId AS \"Post Link\", c.Text FROM Comments AS c WHERE c.Text LIKE '%http%plagiari%e%http%' OR c.Text LIKE '%http%cop%http%' OR c.Text LIKE '%http%stole%http%'","CreationDate":"2015-10-12 08:59:38","validated":false,"QueryBody_Original":"SELECT \n c.PostId AS [Post Link],\n c.Text\nFROM Comments c\nWHERE c.Text LIKE '%http%plagiari%e%http%'\n   OR c.Text LIKE '%http%cop%http%'\n   OR c.Text LIKE '%http%stole%http%'"},{"QuerySetId":374632,"Title":"Users accusing other users of plagiarism (sigh)","Description":null,"QueryBody":"SELECT c.PostId AS \"Post Link\", c.Text FROM Comments AS c WHERE c.Text LIKE '%plagiari%e%'","CreationDate":"2015-10-12 08:58:25","validated":false,"QueryBody_Original":"SELECT \n c.PostId AS [Post Link],\n c.Text\nFROM Comments c\nWHERE c.Text LIKE '%plagiari%e%'"},{"QuerySetId":374894,"Title":"Find question in the past month that have links to JSFiddle or CodePen but no code in the question","Description":null,"QueryBody":"SELECT CONCAT('http:\/\/stackoverflow.com\/questions\/', Id) AS \"Link\", Score FROM Posts WHERE CreationDate > DATEADD(MONTH, -1, GETDATE()) AND PostTypeId = 1 AND (Body LIKE '%jsfiddle.net%' OR Body LIKE '%codepen.io%') AND NOT (Body LIKE '%    %' OR Body LIKE '%<pre>%' OR Body LIKE '%<code>%')","CreationDate":"2015-10-12 23:54:37","validated":false,"QueryBody_Original":"SELECT  concat('http:\/\/stackoverflow.com\/questions\/',Id) as 'Link', Score from Posts where CreationDate > DATEADD(MONTH, -1, GETDATE()) and PostTypeId = 1 and (Body like '%jsfiddle.net%' or Body like '%codepen.io%') and not (Body like '%    %' or Body like '%<pre>%' or Body like '%<code>%')"},{"QuerySetId":374927,"Title":"Sh*tty Minecraft questions that have been left undeleted","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", Score FROM Posts WHERE DeletionDate IS NULL AND Score <= -1 AND (Tags LIKE '%minecraft-%%' OR Tags LIKE '%minecraft%') AND (ClosedDate IS NULL OR NOT ClosedDate IS NULL)","CreationDate":"2015-10-13 02:25:34","validated":false,"QueryBody_Original":"SELECT \n    Id AS [Post Link]\n  , OwnerUserId AS [User Link]\n  , Score\nFROM Posts WHERE\n  DeletionDate IS NULL\n  AND Score <= -1\n  AND (\n    Tags LIKE '%minecraft-%%'\n    OR Tags LIKE '%minecraft%'\n  )\n  AND (\n    ClosedDate IS NULL \n    OR ClosedDate IS NOT NULL\n  );\n\n\nSELECT\n  COUNT(*)\nFROM Posts WHERE\n  DeletionDate IS NULL\n  AND Score <= -1\n  AND (\n    Tags LIKE '%minecraft-%%'\n    OR Tags LIKE '%minecraft%'\n  )\n  AND (\n    ClosedDate IS NULL \n    OR ClosedDate IS NOT NULL\n  );"},{"QuerySetId":374932,"Title":"Sh*tty Minecraft questions that have been left undeleted or unacted upon","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", Score FROM Posts WHERE DeletionDate IS NULL AND Score <= -1 AND AnswerCount <= 0 AND (Tags LIKE '%minecraft-%%' OR Tags LIKE '%minecraft%') AND (ClosedDate IS NULL OR NOT ClosedDate IS NULL)","CreationDate":"2015-10-13 19:14:36","validated":false,"QueryBody_Original":"SELECT \n    Id AS [Post Link]\n  , OwnerUserId AS [User Link]\n  , Score\nFROM Posts WHERE\n  DeletionDate IS NULL\n  AND Score <= -1\n  AND AnswerCount <= 0\n  AND (\n    Tags LIKE '%minecraft-%%'\n    OR Tags LIKE '%minecraft%'\n  )\n  AND (\n    ClosedDate IS NULL \n    OR ClosedDate IS NOT NULL\n  );\n\n\nSELECT\n  COUNT(*)\nFROM Posts WHERE\n  DeletionDate IS NULL\n  AND Score <= -1\n  AND AnswerCount <= 0\n  AND (\n    Tags LIKE '%minecraft-%%'\n    OR Tags LIKE '%minecraft%'\n  )\n  AND (\n    ClosedDate IS NULL \n    OR ClosedDate IS NOT NULL\n  );"},{"QuerySetId":375296,"Title":"Deleted questions from the past year that had Bounties","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", Score, BountyAmount, DeletionDate FROM Posts AS q INNER JOIN Votes AS v ON q.Id = v.PostId WHERE q.CreationDate > DATEADD(YEAR, -1, GETDATE()) AND q.DeletionDate > DATEADD(YEAR, -1, GETDATE()) AND BountyAmount > 0","CreationDate":"2015-10-14 05:29:13","validated":false,"QueryBody_Original":"SELECT  q.Id [Post Link], Score, BountyAmount, DeletionDate from Posts q\ninner join Votes v\non q.Id = v.PostId\nWHERE q.CreationDate > DATEADD(YEAR, -1, GETDATE())\nAND q.DeletionDate > DATEADD(YEAR, -1, GETDATE())\nAND BountyAmount > 0"},{"QuerySetId":375321,"Title":"Top 100 stackoverflow user in Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Age, Users.Location, Users.Reputation, Users.Views, Users.UpVotes, Users.DownVotes, (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS \"Questions\", (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS \"Answers\" FROM Users WHERE UPPER(Users.Location) LIKE '%BANGLADESH%' OR UPPER(Users.Location) LIKE '%DHAKA%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2015-10-14 09:02:38","validated":false,"QueryBody_Original":"SELECT  TOP 100 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Users.Age,\n    Users.Location,\n    Users.Reputation,\n    Users.Views,\n    Users.UpVotes,\n    Users.DownVotes,    \n    (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS [Questions],\n    (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS [Answers]\nFROM\n    Users\nWHERE\n    UPPER(Users.Location) LIKE '%BANGLADESH%' OR UPPER(Users.Location) LIKE '%DHAKA%' \nORDER BY\n    Reputation DESC;"},{"QuerySetId":375475,"Title":"Straight To The Point Questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Tags FROM Posts WHERE LENGTH(Body) < 100 AND Score > 20 AND PostTypeId = 1 ORDER BY Score DESC LIMIT 20","CreationDate":"2015-10-14 17:15:15","validated":false,"QueryBody_Original":"SELECT  TOP 20 Id as [Post Link], Score, Tags\nFROM Posts\nWHERE LEN(Body) < 100\n AND Score > 20\n AND PostTypeId = 1\nORDER BY Score DESC"},{"QuerySetId":375476,"Title":"Straight To The Point Answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score FROM Posts WHERE LENGTH(Body) < 50 AND Score > 20 AND PostTypeId = 2 ORDER BY Score DESC LIMIT 20","CreationDate":"2015-10-14 17:48:32","validated":false,"QueryBody_Original":"SELECT  TOP 20 Id as [Post Link], Score\nFROM Posts\nWHERE LEN(Body) < 50\n AND Score > 20\n AND PostTypeId = 2\nORDER BY Score DESC"},{"QuerySetId":375559,"Title":"Posts comparison for old & new users","Description":null,"QueryBody":"SELECT a.* FROM (SELECT 'High Rep' AS Type, COUNT(Posts.Id) AS \"Count\", AVG(Posts.Score) AS \"Average Score\", AVG(Users.Reputation) AS \"Average Reputation\" FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Users.Reputation > 5000 AND Posts.PostTypeId = 1 AND Posts.CreationDate > CAST('2014-10-14' AS DATETIME)) AS a UNION ALL SELECT b.* FROM (SELECT 'Low Rep' AS Type, COUNT(Posts.Id) AS \"Count\", AVG(Posts.Score) AS \"Average Score\", AVG(Users.Reputation) AS \"Average Reputation\" FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Users.Reputation < 5000 AND Posts.PostTypeId = 1 AND Posts.CreationDate > CAST('2014-10-14' AS DATETIME)) AS b","CreationDate":"2015-10-14 22:15:16","validated":false,"QueryBody_Original":"SELECT  a.* FROM (\n  SELECT\n     'High Rep' as Type,\n     COUNT(Posts.Id) as [Count],\n     AVG(Posts.Score) as [Average Score],\n     AVG(Users.Reputation) as [Average Reputation]\n  FROM Posts INNER JOIN Users ON Posts.OwnerUserId=Users.Id\n  WHERE Users.Reputation > 5000 AND \n        Posts.PostTypeId = 1 AND \n        Posts.CreationDate > CONVERT(datetime, '2014-10-14')\n  ) a\nUNION ALL\nSELECT b.* FROM (\n  SELECT\n     'Low Rep' as Type,\n     COUNT(Posts.Id) as [Count],\n     AVG(Posts.Score) as [Average Score],\n     AVG(Users.Reputation) as [Average Reputation]\n  FROM Posts INNER JOIN Users ON Posts.OwnerUserId=Users.Id\n  WHERE Users.Reputation < 5000 AND \n        Posts.PostTypeId = 1 AND \n        Posts.CreationDate > CONVERT(datetime, '2014-10-14')\n  ) b"},{"QuerySetId":376334,"Title":"Number of answers per question","Description":null,"QueryBody":"SELECT q.AnswerCount AS \"Nb Answers\", q.Id AS \"Post Link\", u.Id AS \"User Link\" FROM Posts AS q INNER JOIN Users AS u ON u.Id = q.OwnerUserId WHERE q.PostTypeId = 1 ORDER BY q.AnswerCount DESC, u.Id","CreationDate":"2015-10-16 01:17:25","validated":false,"QueryBody_Original":"SELECT \n  q.AnswerCount AS \"Nb Answers\",\n  q.Id AS [Post Link],\n  u.Id AS [User Link]\nFROM\n  Posts q\ninner join Users u ON u.Id = q.OwnerUserId\nWHERE q.PostTypeId = 1\nORDER BY q.AnswerCount DESC, u.Id;"},{"QuerySetId":376783,"Title":"[database] questions without specific-database tags","Description":null,"QueryBody":"SELECT Tags AS \"Post Link\" FROM Posts WHERE Tags LIKE '%database%' AND NOT Tags LIKE '%oracle%' AND NOT Tags LIKE '%mysql%' AND NOT Tags LIKE '%sql-server%' AND NOT Tags LIKE '%postgresql%'","CreationDate":"2015-10-16 22:58:47","validated":false,"QueryBody_Original":"SELECT  Tags AS [Post Link] from Posts where Tags like '%database%' \n    and not Tags like '%oracle%'\n    and not Tags like '%mysql%'\n    and not Tags like '%sql-server%'\n    and not Tags like '%postgresql%'"},{"QuerySetId":377058,"Title":"Typical number of downvotes per vote","Description":null,"QueryBody":"SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY (downvotes \/ (upvotes + downvotes))) OVER (PARTITION BY 'a') AS downvotes_per_vote FROM users WHERE DATEDIFF(lastaccessdate, creationdate) > 60 AND DATEDIFF(CURRENT_TIMESTAMP(), lastaccessdate) < 120 AND upvotes + downvotes > 50","CreationDate":"2015-10-18 11:14:18","validated":false,"QueryBody_Original":"SELECT  percentile_cont (0.5)\nwithin group (order by (downvotes\/(upvotes+downvotes)))\nover (partition by 'a')\nas downvotes_per_vote\nfrom users\nwhere datediff(day,creationdate,lastaccessdate) > 60\nand datediff(day,lastaccessdate,getdate()) < 120\nand upvotes+downvotes > 50"},{"QuerySetId":377259,"Title":"How many points have I earned from \"long-tail\" questions and answers?","Description":null,"QueryBody":"SELECT * FROM Posts WHERE (PostTypeId = 1 OR PostTypeId = 2) AND OwnerUserId = 3195","CreationDate":"2015-10-19 00:42:32","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE (PostTypeId = 1 OR PostTypeId = 2) AND OwnerUserId = 3195\n\n--SELECT SUM(questionVotes * 5 + answerVotes * 10)\n--all posts:\n--SELECT PostId FROM PostHistory WHERE UserId = 3195"},{"QuerySetId":377537,"Title":"Users with the Reversal badge by times awarded","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", 'http:\/\/stackoverflow.com\/help\/badges\/95\/reversal?userid=' + CAST(Posts.OwnerUserId AS TEXT(30)) + '|SO Link' AS \"SO Badge Link\", 'http:\/\/meta.stackoverflow.com\/help\/badges\/57\/reversal?userid=' + CAST(Posts.OwnerUserId AS TEXT(30)) + '|Meta Link' AS \"SO Meta Badge Link\", COUNT(Posts.Id) AS \"Count\", AVG(Posts.Score) AS \"Avg Answer Score\", AVG(q.Score) AS \"Avg Question Score\", AVG(Posts.Score) - AVG(q.Score) AS \"Diff\" FROM Posts INNER JOIN Posts AS q ON Posts.ParentId = q.Id WHERE Posts.Score >= 20 AND Posts.PostTypeId = 2 AND q.Score <= -5 GROUP BY Posts.OwnerUserId ORDER BY \"Count\" DESC, \"Diff\" DESC","CreationDate":"2015-10-19 18:48:33","validated":false,"QueryBody_Original":"SELECT  \n  Posts.OwnerUserId AS [User Link],\n  'http:\/\/stackoverflow.com\/help\/badges\/95\/reversal?userid=' + CONVERT(varchar, Posts.OwnerUserId) + '|SO Link' as [SO Badge Link],\n  'http:\/\/meta.stackoverflow.com\/help\/badges\/57\/reversal?userid=' + CONVERT(varchar, Posts.OwnerUserId) + '|Meta Link' as [SO Meta Badge Link],\n  COUNT(Posts.Id) as [Count],\n  AVG(Posts.Score) AS [Avg Answer Score],\n  AVG(q.Score) AS [Avg Question Score],\n  AVG(Posts.Score) - AVG(q.Score) as [Diff]\nFROM Posts INNER JOIN Posts q ON Posts.ParentId=q.Id\nWHERE Posts.Score >= 20 AND Posts.PostTypeId=2 AND q.Score <= -5\nGROUP BY Posts.OwnerUserId\nORDER BY [Count] DESC, [Diff] DESC"},{"QuerySetId":378622,"Title":"Unanswered app engine questions WITH answers","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id = 02154","CreationDate":"2015-10-21 22:00:33","validated":false,"QueryBody_Original":"SELECT  * from posts where Id = 02154"},{"QuerySetId":378789,"Title":"Forum style questions - multiple self answers from asker","Description":"Multiple self answers from asker, sorted by the number of times self-answered, and filtered to exclude questions prior to Jan 1, 2010. (To avoid questions from 2008 with historical locks.)\r\n","QueryBody":"SELECT question.Id AS \"Post Link\", question.CreationDate, COUNT(selfAnswer.Id) AS \"Count\" FROM posts AS question INNER JOIN posts AS selfAnswer ON selfAnswer.owneruserid = question.owneruserid AND selfAnswer.parentid = question.id INNER JOIN Users AS users ON users.Id = question.owneruserid WHERE question.posttypeid = 1 AND selfAnswer.posttypeid = 2 AND question.CommunityOwnedDate IS NULL GROUP BY question.Id, question.CreationDate HAVING COUNT(DISTINCT selfAnswer.id) > 0 ORDER BY \"Count\" DESC, question.CreationDate DESC LIMIT 1000","CreationDate":"2019-04-22 21:53:31","validated":false,"QueryBody_Original":"SELECT  TOP 1000 question.Id as [Post Link], \n       question.CreationDate,\n       count(selfAnswer.Id) as [Count]\nfrom posts as question\n    inner join posts as selfAnswer\n        on  selfAnswer.owneruserid = question.owneruserid\n        and selfAnswer.parentid = question.id\n        inner join Users as users on users.Id = question.owneruserid\nwhere question.posttypeid = 1\nand selfAnswer.posttypeid = 2\nand question.CommunityOwnedDate is null\ngroup by question.Id, \n         question.CreationDate\nhaving count(distinct selfAnswer.id) > 0\norder by \n        [Count] DESC,\n        question.CreationDate DESC"},{"QuerySetId":378898,"Title":"Posts with more then 1000 votes on SQA&T","Description":null,"QueryBody":"SELECT * FROM posts AS p WHERE p.score > 1000","CreationDate":"2015-10-22 10:57:18","validated":false,"QueryBody_Original":"SELECT  *\nfrom posts p\nwhere p.score > 1000"},{"QuerySetId":379220,"Title":"old good posts with absent authors","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM posts AS p WHERE posttypeid = 2 \/* answer *\/ AND communityowneddate IS NULL AND score > 0 AND lasteditdate < (SELECT MAX(creationdate) FROM comments WHERE postid = p.id) AND (SELECT lastaccessdate FROM users WHERE id = p.owneruserid) < (SELECT MAX(creationdate) FROM comments WHERE postid = p.id) ORDER BY score DESC","CreationDate":"2015-10-22 23:14:40","validated":false,"QueryBody_Original":"SELECT  id as [Post Link]\nfrom posts as p\nwhere posttypeid = 2 -- answer\nand communityowneddate is null\nand score > 0\nand lasteditdate\n< (SELECT max(creationdate) from comments where postid = p.id)\nand (SELECT lastaccessdate from users where id = p.owneruserid)\n< (SELECT max(creationdate) from comments where postid = p.id)\norder by score desc"},{"QuerySetId":380016,"Title":"Count of Gold Badge Users for Specified Tags","Description":null,"QueryBody":"SELECT TagName, COUNT(*) AS total FROM Tags GROUP BY TagName ORDER BY total DESC","CreationDate":"2015-10-24 01:41:30","validated":false,"QueryBody_Original":"SELECT  TagName, count(*) as total from Tags  group by TagName order by total desc;\n\n-- SELECT count(*) from Badges where Name 'java' and TagBased = 1;"},{"QuerySetId":380175,"Title":"How many users have each level of badge?","Description":null,"QueryBody":"SELECT CASE WHEN class = 1 THEN 'Gold' WHEN class = 2 THEN 'Silver' WHEN class = 3 THEN 'Bronze' END AS class, tagBased, COUNT(DISTINCT UserId) FROM Badges GROUP BY class, tagBased","CreationDate":"2015-10-25 00:12:06","validated":false,"QueryBody_Original":"SELECT \n  CASE\n    WHEN class = 1 THEN 'Gold'\n    WHEN class = 2 THEN 'Silver'\n    WHEN class = 3 THEN 'Bronze'\n  END AS class,\n  tagBased,\n  count(DISTINCT UserId)\nFROM Badges\nGROUP BY class, tagBased"},{"QuerySetId":380213,"Title":"Some questions where accepted answer does not have the highest score","Description":null,"QueryBody":"SELECT P2.Id AS \"Post Link\", P.Score AS HighestScore, P3.Score AS AcceptedAnswerScore FROM Posts AS P JOIN Posts AS P2 ON (P2.Id = P.ParentId) JOIN Posts AS P3 ON (P3.ParentId = P2.Id) WHERE P.Score > 2 AND P.PostTypeId = 2 AND P2.PostTypeId = 1 AND P3.PostTypeId = 2 AND P.Score > P3.Score AND P2.AcceptedAnswerId = P3.Id AND P2.CreationDate BETWEEN '2012-10-01' AND '2012-12-31' ORDER BY P.Score - P3.Score DESC","CreationDate":"2015-10-25 03:11:12","validated":false,"QueryBody_Original":"SELECT  P2.Id AS [Post Link], \n       P.Score AS HighestScore, \n       P3.Score AS AcceptedAnswerScore\nFROM Posts P \nJOIN Posts P2 ON (P2.Id = P.ParentId)\nJOIN Posts P3 ON (P3.ParentId = P2.Id)\nWHERE P.Score > 2\n      AND P.PostTypeId = 2 \n      AND P2.PostTypeId = 1\n      AND P3.PostTypeId = 2\n      AND P.Score > P3.Score \n      AND P2.AcceptedAnswerId = P3.Id\n      AND P2.CreationDate BETWEEN '2012-10-01' AND '2012-12-31'\nORDER BY P.Score - P3.Score DESC;"},{"QuerySetId":380215,"Title":"Where accepted answer does not have the highest score","Description":null,"QueryBody":"SELECT COUNT(P2.\"Id\") AS \"NumQuestions\" FROM Posts AS P JOIN Posts AS P2 ON (P2.Id = P.ParentId) JOIN Posts AS P3 ON (P3.ParentId = P2.Id) WHERE P.Score > 1 \/* Included because the query times out otherwise. *\/ AND P.PostTypeId = 2 AND P2.PostTypeId = 1 AND P3.PostTypeId = 2 AND P.Score > P3.Score AND P2.AcceptedAnswerId = P3.Id AND P2.CreationDate BETWEEN '2012-10-01' AND '2012-12-31' GROUP BY P2.ID","CreationDate":"2015-10-29 03:15:27","validated":false,"QueryBody_Original":"SELECT  COUNT(P2.[Id]) AS [NumQuestions]\nFROM Posts P \nJOIN Posts P2 ON (P2.Id = P.ParentId)\nJOIN Posts P3 ON (P3.ParentId = P2.Id)\nWHERE P.Score > 1 -- Included because the query times out otherwise.\n      AND P.PostTypeId = 2 \n      AND P2.PostTypeId = 1\n      AND P3.PostTypeId = 2\n      AND P.Score > P3.Score \n      AND P2.AcceptedAnswerId = P3.Id\n      AND P2.CreationDate BETWEEN '2012-10-01' AND '2012-12-31'\nGROUP BY P2.ID"},{"QuerySetId":380978,"Title":"Sample Posts and Comments query","Description":null,"QueryBody":"SELECT Posts.Id, COUNT(Comments.Id) FROM Comments INNER JOIN Posts ON Comments.PostId = Posts.Id GROUP BY Posts.Id ORDER BY COUNT(Comments.Id)","CreationDate":"2015-10-27 15:30:38","validated":false,"QueryBody_Original":"SELECT  Posts.Id,count(Comments.Id)\nfrom Comments\ninner join Posts on Comments.PostId=Posts.Id\ngroup by Posts.Id\norder by count(Comments.Id)"},{"QuerySetId":381564,"Title":"find candidates for Revival badge","Description":"find questions older than 30 days which have no answers","QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount AS Views, AnswerCount AS Answers, CreationDate, Tags FROM Posts WHERE AcceptedAnswerId IS NULL AND PostTypeId = 1 AND CreationDate < CURRENT_TIMESTAMP() - 30 AND ClosedDate IS NULL AND NOT EXISTS(SELECT * FROM Posts AS p WHERE p.ParentId = Posts.Id AND p.PostTypeId = 2) AND Tags LIKE '%jquery%' ORDER BY CreationDate LIMIT 1000","CreationDate":"2015-10-28 13:10:27","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    Id AS [Post Link],\n    Score,\n    ViewCount as Views,\n    AnswerCount as Answers,\n    CreationDate,\n    Tags\nFROM Posts\nWHERE\n    AcceptedAnswerId IS NULL\n    AND PostTypeId = 1\n    AND CreationDate < GETDATE() - 30\n    AND ClosedDate IS NULL\n    AND NOT EXISTS\n    (\n        SELECT *\n        FROM Posts p\n        WHERE p.ParentId = Posts.Id\n        AND p.PostTypeId = 2\n    )\n    AND Tags LIKE '%jquery%'\nORDER BY CreationDate ASC"},{"QuerySetId":382344,"Title":"Get number of Questions with Accepted Answers","Description":null,"QueryBody":"SELECT COUNT(Id) AS Posts, COUNT(AcceptedAnswerId) AS Accepted FROM Posts WHERE PostTypeId = 1","CreationDate":"2015-10-30 14:45:57","validated":false,"QueryBody_Original":"SELECT  Count(Id) AS Posts, Count(AcceptedAnswerId) AS Accepted\nFROM Posts\nWHERE PostTypeId = 1"},{"QuerySetId":382345,"Title":"Get number of Answered questions","Description":null,"QueryBody":"SELECT COUNT(Id) AS Posts, COUNT(AnswerCount) AS Ans FROM Posts WHERE PostTypeId = 1 AND AnswerCount <> 0","CreationDate":"2015-10-30 14:45:27","validated":false,"QueryBody_Original":"SELECT  Count(Id) AS Posts, Count(AnswerCount) AS Ans\nFROM Posts\nWHERE PostTypeId = 1 AND AnswerCount <> 0"},{"QuerySetId":382435,"Title":"select count(id) from posts where creationdate>2015-01-01","Description":null,"QueryBody":"SELECT COUNT(id) FROM posts WHERE creationdate BETWEEN '2015-01-01 00:00:00' AND '2015-01-02 00:00:00'","CreationDate":"2015-10-30 09:57:25","validated":false,"QueryBody_Original":"SELECT  count(id) from posts where creationdate between '2015-01-01 00:00:00' and '2015-01-02 00:00:00'"},{"QuerySetId":382472,"Title":"Top 20 users in Pune","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Age, Users.Location, Users.Reputation, Users.Views, Users.UpVotes, Users.DownVotes, (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS \"Questions\", (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS \"Answers\" FROM Users WHERE UPPER(Users.Location) LIKE '%PUNE%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2016-01-04 17:38:27","validated":false,"QueryBody_Original":"SELECT  TOP 20 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Users.Age,\n    Users.Location,\n    Users.Reputation,\n    Users.Views,\n    Users.UpVotes,\n    Users.DownVotes,    \n    (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS [Questions],\n    (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS [Answers]\nFROM\n    Users\nWHERE\n    UPPER(Users.Location) LIKE '%PUNE%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":382566,"Title":"how many entries in comment","Description":null,"QueryBody":"SELECT COUNT(*) FROM Comments","CreationDate":"2015-10-30 19:05:25","validated":false,"QueryBody_Original":"SELECT  count(*) from Comments;"},{"QuerySetId":382592,"Title":"Most questions asked by a user","Description":null,"QueryBody":"SELECT COUNT(Posts.Id) AS NoOfQueAsked, Users.Id FROM Posts, Users WHERE Users.Id = OwnerUserId AND Posts.PostTypeId = 1 GROUP BY Users.Id ORDER BY COUNT(Posts.Id) DESC","CreationDate":"2015-10-30 22:13:34","validated":false,"QueryBody_Original":"SELECT  COUNT(Posts.Id) as NoOfQueAsked, Users.Id\nFROM Posts,Users\nWHERE Users.Id = OwnerUserId AND Posts.PostTypeId=1\nGROUP BY Users.Id\nORDER BY COUNT(Posts.Id) DESC"},{"QuerySetId":382870,"Title":"Posts with Title containing [word]","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", OwnerUserId AS \"User Link\", Score, Users.Reputation FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE LOWER(Title) LIKE LOWER('%##SearchWord##%') ORDER BY Users.Reputation DESC","CreationDate":"2015-10-31 19:59:46","validated":false,"QueryBody_Original":"SELECT  Posts.Id As [Post Link], \n       OwnerUserId As [User Link], \n       Score, \n       Users.Reputation\nFROM Posts\n  INNER JOIN Users On Posts.OwnerUserId = Users.Id\nWHERE LOWER(Title) LIKE LOWER('%##SearchWord##%')\nORDER BY Users.Reputation DESC"},{"QuerySetId":383186,"Title":"Non-wiki posts with a lot of edits","Description":null,"QueryBody":"SELECT PostHistory.PostId AS \"Post Link\", COUNT(PostHistory.Id) AS \"Count\" FROM PostHistory INNER JOIN Posts ON PostHistory.PostId = Posts.Id WHERE Posts.CommunityOwnedDate IS NULL GROUP BY PostId ORDER BY \"Count\" DESC LIMIT 100","CreationDate":"2015-11-02 00:11:56","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  PostHistory.PostId as [Post Link],\n  Count(PostHistory.Id) as [Count]\nFROM PostHistory INNER JOIN Posts ON PostHistory.PostId=Posts.Id\nWHERE Posts.CommunityOwnedDate IS NULL\nGROUP BY PostId\nORDER BY [Count] DESC"},{"QuerySetId":383335,"Title":"Quantity of Users Per Location","Description":null,"QueryBody":"SELECT COUNT(*), Location FROM Users WHERE NOT Location IS NULL GROUP BY Location ORDER BY COUNT(Location) DESC","CreationDate":"2015-11-02 06:48:38","validated":false,"QueryBody_Original":"SELECT \n  Count(*),\n  Location\nFROM\n    Users\nWHERE Location is not null\nGROUP BY Location\nORDER BY\nCount(Location) DESC;"},{"QuerySetId":384146,"Title":"What is the total number of users on StackOverflow","Description":null,"QueryBody":"SELECT * FROM Users WHERE displayname = 'BalusC'","CreationDate":"2015-11-03 17:33:47","validated":false,"QueryBody_Original":"SELECT  *  FROM Users where displayname='BalusC'"},{"QuerySetId":384386,"Title":"What does raw data look like","Description":null,"QueryBody":"SELECT * FROM \"dbo\".\"Posts\"","CreationDate":"2015-11-03 22:22:35","validated":false,"QueryBody_Original":"SELECT  * FROM [dbo].[Posts]"},{"QuerySetId":384763,"Title":"Can I get a witness?","Description":null,"QueryBody":"SELECT * FROM Posts","CreationDate":"2015-11-04 22:18:44","validated":false,"QueryBody_Original":"SELECT  * from Posts"},{"QuerySetId":385022,"Title":"Looking for posts by keyword","Description":null,"QueryBody":"SELECT ParentId AS \"Post Link\", COUNT(id) FROM posts WHERE tags LIKE 'cPanel' GROUP BY parentid","CreationDate":"2016-01-31 00:28:31","validated":false,"QueryBody_Original":"SELECT \n   ParentId as [Post Link],\n   count(id)\nfrom posts\nwhere \n  tags like 'cPanel'\n  --or body like 'cPanel'\ngroup by parentid"},{"QuerySetId":386296,"Title":"Top 10 users from Morocco","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%france%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2019-06-09 18:44:04","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%france%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":386316,"Title":"Frequency of anonymous suggested edits","Description":"Returns the cumulative number of suggested edits that were submitted by anonymous users over the past NumberOfEdits suggested edits. If the anonymous suggestion rate was constant at x%, then the graph would show a straight line at slope 100x (e.g. if all edit suggestions were anonymous, a straight line with slope 1).","QueryBody":"SELECT \"Post Link\", Score, NumEdits FROM (SELECT p.Id AS \"Post Link\", p.Score AS Score, COUNT(ph.UserId) AS NumEdits FROM Posts AS p, PostHistory AS ph WHERE p.Id = ph.PostId AND p.Score >= 100 AND ph.UserId <> p.OwnerUserId GROUP BY p.Id, p.Score) AS Y WHERE NumEdits >= 10","CreationDate":"2016-01-30 04:33:59","validated":false,"QueryBody_Original":"SELECT  [Post Link], Score, NumEdits FROM \n(\nSELECT p.Id AS [Post Link]\n, p.Score AS Score\n, COUNT(ph.UserId) AS NumEdits\n\nFROM Posts AS p, PostHistory AS ph\nWHERE p.Id = ph.PostId\nAND p.Score>=100\nAND ph.UserId <> p.OwnerUserId\n-- AND p.CreationDate >= '2015-01-01'\nGROUP BY p.Id, p.Score\n\n\n) AS Y WHERE NumEdits>=10"},{"QuerySetId":386755,"Title":"UpVote > 2 && DownVote > 2","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.CreationDate, Posts.Score, upmod.cnt AS Up, downmod.cnt AS Down FROM Posts INNER JOIN (SELECT PostId, COUNT(*) AS cnt FROM Votes WHERE VoteTypeId = 2 \/* upmod *\/ GROUP BY PostId) AS upmod ON Posts.Id = upmod.PostId INNER JOIN (SELECT PostId, COUNT(*) AS cnt FROM Votes WHERE VoteTypeId = 3 \/* downmod *\/ GROUP BY PostId) AS downmod ON Posts.Id = downmod.PostId WHERE Posts.PostTypeId = 1 \/* question *\/ AND Posts.CreationDate < '2015-11-07' AND upmod.cnt > 2 AND downmod.cnt > 2 ORDER BY Posts.Id DESC","CreationDate":"2016-03-22 11:29:30","validated":false,"QueryBody_Original":"SELECT \n  Posts.Id as [Post Link],\n  Posts.CreationDate,\n  Posts.Score,\n  upmod.cnt as Up,\n  downmod.cnt as Down\nfrom Posts\ninner join (\n    SELECT PostId, count(*) as cnt from Votes\n    where VoteTypeId = 2 \/*upmod*\/\n    group by PostId\n  ) upmod on Posts.Id = upmod.PostId\ninner join (\n    SELECT PostId, count(*) as cnt from Votes\n    where VoteTypeId = 3 \/*downmod*\/\n    group by PostId\n  ) downmod on Posts.Id = downmod.PostId\nwhere\n  Posts.PostTypeId = 1 \/*question*\/\n  and Posts.CreationDate < '2015-11-07'\n  and upmod.cnt > 2\n  and downmod.cnt > 2\norder by Posts.Id desc"},{"QuerySetId":386932,"Title":"All the distinct days on which I created posts","Description":null,"QueryBody":"SELECT * FROM Posts","CreationDate":"2020-11-09 14:49:23","validated":false,"QueryBody_Original":"SELECT  * from Posts"},{"QuerySetId":386996,"Title":"Tags for Posts By Date","Description":null,"QueryBody":"SELECT * FROM (SELECT OwnerUserId AS id, MAX(Tags) AS tags FROM Posts WHERE CreationDate > '1\/1\/2015' AND LENGTH(Tags) > 0 GROUP BY OwnerUserId) AS x WHERE LENGTH(tags) > 50 LIMIT 50000","CreationDate":"2015-11-20 02:25:55","validated":false,"QueryBody_Original":"SELECT  TOP(50000) * FROM (\nSELECT OwnerUserId as id, max(Tags) as tags\nFROM Posts\nWHERE CreationDate > '1\/1\/2015'\nAND LEN(Tags) > 0\nGROUP BY OwnerUserId\n)x\nWHERE LEN(tags) > 50;"},{"QuerySetId":387333,"Title":"no of users every year","Description":null,"QueryBody":"SELECT SUM(a.Reputation) FROM (SELECT Reputation FROM users ORDER BY Reputation LIMIT 2415565) AS a","CreationDate":"2015-11-09 07:43:37","validated":false,"QueryBody_Original":"SELECT  sum(a.Reputation) from (SELECT top(2415565) Reputation from users order by Reputation asc) as a;"},{"QuerySetId":388789,"Title":"Search stuff in AboutMe or ","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, AboutMe FROM Users WHERE AboutMe LIKE '%downvote%' ORDER BY Reputation DESC LIMIT 256","CreationDate":"2015-11-11 07:54:17","validated":false,"QueryBody_Original":"SELECT  TOP 256\n    Id AS [User Link], Reputation, DisplayName, AboutMe\n  FROM\n    Users\n  WHERE\n    AboutMe LIKE '%downvote%'\n  ORDER BY Reputation DESC"},{"QuerySetId":389594,"Title":"Users with more than 10,000 reputation","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE Reputation >= 10000","CreationDate":"2015-11-12 07:39:47","validated":false,"QueryBody_Original":"SELECT  COUNT(Id) FROM Users WHERE Reputation >= 10000"},{"QuerySetId":390704,"Title":"Top 5 StackOverflowers in Coimbatore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%singapore%' OR UPPER(Location) LIKE '%SINGAPORE%' OR Location LIKE '%singapore%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 25","CreationDate":"2016-06-07 06:34:03","validated":false,"QueryBody_Original":"SELECT  TOP 25\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%singapore%'\n    OR UPPER(Location) LIKE '%SINGAPORE%'\n    or Location like '%singapore%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":390985,"Title":"Monthly active users in StackOverflow \/ StackExchange","Description":null,"QueryBody":"SELECT COUNT(*) AS ActivePosters5 FROM Posts AS p WHERE p.Score >= 0 AND DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) <= 30 GROUP BY p.OwnerUserId HAVING COUNT(p.Id) >= 5","CreationDate":"2015-11-13 19:00:54","validated":false,"QueryBody_Original":"SELECT  COUNT(*) AS ActivePosters5\nFROM Posts p\nWHERE p.Score >= 0\nAND DATEDIFF(day, p.CreationDate, GETDATE()) <= 30\nGROUP BY p.OwnerUserId\nHAVING COUNT(p.Id) >= 5;"},{"QuerySetId":392362,"Title":"Count Reopened Questions Edited At All","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS p WHERE \/* reopened *\/ \/* closed *\/ p.PostTypeId = 1 \/* questions only *\/ AND EXISTS(SELECT * FROM PostHistory AS ph INNER JOIN PostHistory AS ph2 ON ph2.postId = ph.postId AND ph2.PostHistoryTypeId IN (5) AND ph2.CreationDate > ph.CreationDate WHERE ph.postId = p.Id AND ph.PostHistoryTypeId = 10 \/* closed *\/) \/* closed *\/ AND EXISTS(SELECT * FROM PostHistory AS ph WHERE ph.postId = p.Id AND ph.PostHistoryTypeId = 11 \/* reopened *\/) \/* reopened *\/","CreationDate":"2015-11-15 15:11:44","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts p\nWHERE \n    p.PostTypeId = 1 -- questions only\n    AND EXISTS (\n      SELECT * FROM PostHistory ph\n          INNER JOIN PostHistory ph2 ON ph2.postId = ph.postId\n          AND ph2.PostHistoryTypeId IN (5) -- edit title(4), body(5), tags(6)\n            AND ph2.CreationDate > ph.CreationDate\n      WHERE ph.postId = p.Id\n        AND ph.PostHistoryTypeId = 10 -- closed\n        )\n    AND EXISTS (\n      SELECT * FROM PostHistory ph\n      WHERE ph.postId = p.Id\n        AND ph.PostHistoryTypeId = 11 -- reopened\n        )"},{"QuerySetId":392574,"Title":"Question bodies containing a <br> tag.","Description":null,"QueryBody":"SELECT p.Id FROM Posts AS p WHERE p.Body LIKE '%<br>%' AND p.PostTypeId = 1 ORDER BY p.Id DESC LIMIT 128","CreationDate":"2015-11-16 01:50:34","validated":false,"QueryBody_Original":"SELECT  TOP 128\n  p.Id\nFROM\n  Posts AS p\nWHERE\n  p.Body LIKE '%<br>%'\n  AND p.PostTypeId = 1\nORDER BY\n  p.Id DESC"},{"QuerySetId":393152,"Title":"Percentage of questions edited (title\/body)","Description":null,"QueryBody":"SELECT EditedQuestions, AllQuestions, EditedQuestions * 100.0 \/ AllQuestions AS Percentage FROM (SELECT COUNT(DISTINCT p.Id) AS EditedQuestions FROM Posts AS p JOIN PostHistory AS ph ON p.Id = ph.PostId\/* 4, 5, 6 are edit title, body, tags respectively *\/  WHERE (ph.PostHistoryTypeId = 4 OR ph.PostHistoryTypeId = 5) AND p.PostTypeId = 1) AS e, (SELECT COUNT(*) AS AllQuestions FROM Posts WHERE PostTypeId = 1) AS a","CreationDate":"2015-11-16 19:13:11","validated":false,"QueryBody_Original":"SELECT  EditedQuestions, AllQuestions, EditedQuestions * 100.0 \/ AllQuestions as Percentage\nfrom\n(\n  SELECT count(distinct p.Id) as EditedQuestions\n  from Posts as p\n    join PostHistory as ph on p.Id = ph.PostId\n  where (ph.PostHistoryTypeId = 4\n    or ph.PostHistoryTypeId = 5)\n  -- 4, 5, 6 are edit title, body, tags respectively\n    and p.PostTypeId = 1\n) as e,\n(\n  SELECT count(*) as AllQuestions\n  from Posts\n  where PostTypeId = 1\n) as a"},{"QuerySetId":393380,"Title":"All caps titles (all-caps, capital)","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p WHERE p.PostTypeId = 1 AND p.ClosedDate IS NULL AND p.Title = UPPER(Title) ORDER BY p.CreationDate DESC","CreationDate":"2015-11-17 08:15:28","validated":false,"QueryBody_Original":"SELECT       \n            p.Id as [Post Link]\nFROM        Posts p\nWHERE       p.PostTypeId = 1\nAND         p.ClosedDate is null\nAND         p.Title = UPPER (Title)\nORDER BY    p.CreationDate DESC"},{"QuerySetId":393543,"Title":"number of posts in slots","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') AS rok, TIME_TO_STR(CreationDate, '%m') AS miesiac, COUNT(id) AS ilosc FROM posts WHERE posts.postTypeId = 1 \/* 1 dla pyta\u0144, 2 dla odpowiedzi *\/ GROUP BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m') ORDER BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m')","CreationDate":"2015-11-17 15:04:21","validated":false,"QueryBody_Original":"SELECT  datepart(YYYY,CreationDate) as rok,datepart(MM,CreationDate) as miesiac,count(id) as ilosc\nfrom posts\nwhere posts.postTypeId=1 -- 1 dla pyta\u0144, 2 dla odpowiedzi\ngroup by datepart(YYYY,CreationDate),datepart(MM,CreationDate)\norder by datepart(YYYY,CreationDate),datepart(MM,CreationDate)"},{"QuerySetId":393587,"Title":"number of posts in time slots","Description":null,"QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(users.CreationDate, '%Y'), 1, 1), TIME_TO_STR(users.CreationDate, '%Y') AS rok, COUNT(posts.id) AS ilosc FROM posts INNER JOIN users ON users.id = posts.OwnerUserId WHERE posts.postTypeId = 1 GROUP BY TIME_TO_STR(users.CreationDate, '%Y') ORDER BY TIME_TO_STR(users.CreationDate, '%Y')","CreationDate":"2015-11-17 17:31:29","validated":false,"QueryBody_Original":"SELECT  DATEFROMPARTS(datepart(YYYY,users.CreationDate),1,1),datepart(YYYY,users.CreationDate) as rok,count(posts.id) as ilosc\nfrom posts\ninner join users\non users.id=posts.OwnerUserId\nwhere posts.postTypeId=1\ngroup by datepart(YYYY,users.CreationDate)\norder by datepart(YYYY,users.CreationDate)"},{"QuerySetId":393614,"Title":"Top 20 SO Users from Delhi India","Description":"Top 20 SO Users from Delhi, India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%delhi%' OR UPPER(Location) LIKE '%DELHI%' OR Location LIKE '%delhi%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 20","CreationDate":"2020-10-22 12:01:08","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%delhi%'\n    OR UPPER(Location) LIKE '%DELHI%'\n    or Location like '%delhi%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":393625,"Title":"SELECT * WHERE `ClosedDate` is NOT NULL;","Description":null,"QueryBody":"SELECT * FROM Posts WHERE NOT 'ClosedDate' IS NULL","CreationDate":"2015-11-17 16:43:29","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE 'ClosedDate' is NOT NULL;"},{"QuerySetId":394174,"Title":"Top 50 users from China","Description":"Top 50 SO users from India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%china%' OR UPPER(Location) LIKE '%CHINA%' OR Location LIKE '%China%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 150","CreationDate":"2015-11-18 13:59:56","validated":false,"QueryBody_Original":"SELECT  TOP 150\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%china%'\n    OR UPPER(Location) LIKE '%CHINA%'\n    or Location like '%China%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":394188,"Title":"Top 150 users from China","Description":"Top 150 SO users from China","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%sweden%' OR UPPER(Location) LIKE '%SWEDEN%' OR Location LIKE '%SWEDEN%' AND Reputation >= 0 ORDER BY Reputation DESC LIMIT 150","CreationDate":"2015-11-18 21:05:14","validated":false,"QueryBody_Original":"SELECT  TOP 150\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%sweden%'\n    OR UPPER(Location) LIKE '%SWEDEN%'\n    or Location like '%SWEDEN%'\n    AND Reputation >= 0\nORDER BY\n    Reputation DESC;"},{"QuerySetId":394191,"Title":"Top 150 users from Nethelands","Description":"Top 150 SO users from China","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%holland%' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2015-11-18 14:15:30","validated":false,"QueryBody_Original":"SELECT  TOP 150\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%holland%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":394215,"Title":"Top 20 users from Shandong","Description":"Top 20 SO users from China","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(DisplayName) = 'davidg' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2015-11-18 14:55:07","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(DisplayName) = 'davidg'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":394217,"Title":"Top 20 users called DavidG","Description":"Top 20 SO users from China","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(DisplayName) = 'jon skeet' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2015-11-18 15:05:08","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(DisplayName) = 'jon skeet'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":394226,"Title":"Top 20 users called Tushar","Description":"Top 20 users called Tushar","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(DisplayName) = 'closey' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2015-11-18 15:06:08","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(DisplayName) = 'closey'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":394233,"Title":"Top 20 users called Tunaki","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(DisplayName) LIKE '%skeet%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2015-11-18 15:06:15","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(DisplayName) LIKE '%skeet%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":394385,"Title":"Highest and lowest voted posts","Description":null,"QueryBody":"SELECT 'site:\/\/questions\/' + CAST(Id AS TEXT) AS \"Question With Highest Score\" FROM Posts ORDER BY Score DESC LIMIT 1","CreationDate":"2015-11-18 19:04:41","validated":false,"QueryBody_Original":"SELECT  Top 1 'site:\/\/questions\/' + CAST(Id AS nvarchar) AS [Question With Highest Score]\nFrom Posts\nOrder By Score Desc"},{"QuerySetId":394691,"Title":"Top users answering questions for a specific tag","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS Count FROM Posts WHERE Posts.CreationDate < '2015-05-02' AND Posts.CreationDate > '2015-05-01' GROUP BY OwnerUserId ORDER BY Count DESC","CreationDate":"2019-05-21 07:25:51","validated":false,"QueryBody_Original":"SELECT  OwnerUserId as [User Link], count(*) as Count\nfrom Posts\nwhere Posts.CreationDate < '2015-05-02'\nand Posts.CreationDate > '2015-05-01'\ngroup by OwnerUserId\norder by Count desc"},{"QuerySetId":394771,"Title":"Tag Wiki Excerpts that start with \"Do not use\"","Description":null,"QueryBody":"SELECT Tags.TagName FROM Tags INNER JOIN Posts ON Tags.ExcerptPostId = Posts.Id WHERE LOWER(Posts.Body) LIKE '%off-topic%' OR LOWER(Posts.Body) LIKE '%don''t use%'","CreationDate":"2016-03-31 07:22:58","validated":false,"QueryBody_Original":"SELECT  Tags.TagName\nFROM Tags INNER JOIN Posts ON Tags.ExcerptPostId = Posts.Id\nWHERE Lower(Posts.Body) LIKE '%off-topic%' OR Lower(Posts.Body) LIKE '%don''t use%'"},{"QuerySetId":395062,"Title":"How many 3k users there are","Description":null,"QueryBody":"SELECT COUNT(id) FROM Users WHERE Reputation > 15 AND Reputation < 3000","CreationDate":"2015-11-19 14:41:39","validated":false,"QueryBody_Original":"SELECT  count(id) from Users\nwhere Reputation > 15 and Reputation < 3000;"},{"QuerySetId":395093,"Title":"Top 100 user in India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Age, Users.Location, Users.Reputation, Users.Views, Users.UpVotes, Users.DownVotes, (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS \"Questions\", (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS \"Answers\" FROM Users WHERE Users.Id LIKE '%shakun%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2015-11-19 15:08:34","validated":false,"QueryBody_Original":"SELECT  TOP 100 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Users.Age,\n    Users.Location,\n    Users.Reputation,\n    Users.Views,\n    Users.UpVotes,\n    Users.DownVotes,    \n    (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS [Questions],\n    (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS [Answers]\nFROM\n    Users\nWHERE     \n    Users.Id LIKE '%shakun%' \nORDER BY\n    Reputation DESC;"},{"QuerySetId":395097,"Title":"Top 1 Lac users in india","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Age, Users.Location, Users.Reputation, Users.Views, Users.UpVotes, Users.DownVotes, (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS \"Questions\", (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS \"Answers\" FROM Users WHERE Users.Id LIKE '%2050394%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2015-11-19 15:14:13","validated":false,"QueryBody_Original":"SELECT  TOP 10 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Users.Age,\n    Users.Location,\n    Users.Reputation,\n    Users.Views,\n    Users.UpVotes,\n    Users.DownVotes,    \n    (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS [Questions],\n    (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS [Answers]\nFROM\n    Users\nWHERE     \n    Users.Id LIKE '%2050394%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":395159,"Title":"Top 50 users from Germany","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%germany%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2015-11-19 17:21:19","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%germany%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":395172,"Title":"I need find out how many Nathan here","Description":null,"QueryBody":"SELECT * FROM Users WHERE DisplayName LIKE '%Nathan%'","CreationDate":"2015-11-19 18:01:46","validated":false,"QueryBody_Original":"SELECT  * from Users \nwhere DisplayName like '%Nathan%';"},{"QuerySetId":396367,"Title":"What are the highest bounties?","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", UserId AS \"User Link\", BountyAmount, CreationDate FROM Votes ORDER BY BountyAmount, CreationDate LIMIT 20","CreationDate":"2020-10-11 23:42:17","validated":false,"QueryBody_Original":"SELECT \n  TOP(20)\n  PostId as [Post Link],\n  UserId [User Link],\n  BountyAmount,\n  CreationDate\nFROM\n  Votes\nORDER BY \n  BountyAmount ASC, CreationDate ASC"},{"QuerySetId":396716,"Title":"Users with at least one post","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"Users with a post\" FROM Users AS u WHERE EXISTS(SELECT p.Id FROM Posts AS p WHERE p.OwnerUserId = u.Id)","CreationDate":"2015-11-22 22:38:47","validated":false,"QueryBody_Original":"SELECT  count(u.Id) as [Users with a post] from Users u\nwhere exists (SELECT p.Id from Posts p where p.OwnerUserId = u.Id)"},{"QuerySetId":396724,"Title":"Users with at least one positively scored post","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"Users with upvoted post\" FROM Users AS u WHERE EXISTS(SELECT p.Id FROM Posts AS p WHERE p.OwnerUserId = u.Id AND p.Score > 0)","CreationDate":"2015-11-22 22:56:18","validated":false,"QueryBody_Original":"SELECT  count(u.Id) as [Users with upvoted post] from Users u\nwhere exists (SELECT p.Id from Posts p where p.OwnerUserId = u.Id and p.Score>0)"},{"QuerySetId":396829,"Title":"Top 50 Users from New Zealand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%zealand' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2015-11-23 09:00:11","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%zealand'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":396834,"Title":"Top 50 users from New Zealand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%zealand' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2015-11-23 09:06:36","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%zealand'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":396840,"Title":"Posts with the most links","Description":null,"QueryBody":"SELECT COUNT(*) AS NumLinks, p.Id AS \"Post Link\" FROM PostLinks AS pl, Posts AS p WHERE pl.LinkTypeId = 1 AND p.Id = pl.PostId GROUP BY p.Id ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2015-11-23 09:28:32","validated":false,"QueryBody_Original":"SELECT  TOP 100 COUNT(*) AS NumLinks, p.Id AS [Post Link]\nFROM PostLinks pl, Posts p\nWHERE pl.LinkTypeId=1\nAND p.Id=pl.PostId\nGROUP BY p.Id\nORDER BY COUNT(*) DESC"},{"QuerySetId":398031,"Title":"check fields for a question by a deleted user","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts WHERE Posts.Id = 1271810","CreationDate":"2015-11-24 23:26:43","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link],* from Posts where Posts.Id=1271810"},{"QuerySetId":398388,"Title":"All comments that you have ever made (limited to SEDE restrictions)","Description":null,"QueryBody":"SELECT CreationDate, Score, Id AS \"Comment Link\" FROM Comments WHERE UserId = 736172 ORDER BY CreationDate","CreationDate":"2018-11-22 13:38:33","validated":false,"QueryBody_Original":"SELECT \n  CreationDate,\n  Score,\n  Id AS [Comment Link]\nFROM Comments\nWHERE UserId = 736172\nORDER BY CreationDate ASC"},{"QuerySetId":399093,"Title":"comments more popular than their parent posts","Description":null,"QueryBody":"SELECT Comments.Id AS \"Comment Link\", Comments.Score, Comments.UserId AS \"User Link\", Posts.Id AS \"Post Link\", Posts.Score FROM Comments INNER JOIN Posts ON Comments.PostId = Posts.Id ORDER BY Comments.Score - Posts.Score DESC LIMIT 20","CreationDate":"2015-11-26 11:44:12","validated":false,"QueryBody_Original":"SELECT  TOP 20\n  Comments.Id as [Comment Link],\n  Comments.Score,\n  Comments.UserId as [User Link],\n  Posts.Id as [Post Link],\n  Posts.Score\nFROM Comments\nINNER JOIN Posts\n  ON Comments.PostId = Posts.Id\nORDER BY Comments.Score - Posts.Score DESC"},{"QuerySetId":399329,"Title":"Find the most downvoted post of all time","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts ORDER BY Score LIMIT 1","CreationDate":"2015-11-26 20:16:35","validated":false,"QueryBody_Original":"SELECT  TOP 1 Id AS [Post Link]\nFROM Posts\nORDER BY Score ASC"},{"QuerySetId":400273,"Title":"All badges by month (2011)","Description":null,"QueryBody":"SELECT DATEADD(m, MONTH(Date), '2010-12-01') AS \"Month\", Name, CASE Class WHEN 1 THEN '1-Gold' WHEN 2 THEN '2-Silver' WHEN 3 THEN '3-Bronze' END AS Class, TagBased, COUNT(Id) AS BadgeTotal FROM Badges WHERE YEAR(Date) = 2011 GROUP BY MONTH(Date), Name, Class, TagBased","CreationDate":"2015-11-28 03:32:46","validated":false,"QueryBody_Original":"SELECT \n  DateAdd(m, Month(Date), '2010-12-01') As [Month],\n  Name,\n  Case Class\n    When 1 Then '1-Gold'\n    When 2 Then '2-Silver'\n    When 3 Then '3-Bronze'\n  End As Class,\n  TagBased,\n  Count(Id) As BadgeTotal\nFrom\n  Badges\nWhere\n  Year(Date) = 2011\nGroup By\n  Month(Date),\n  Name,\n  Class,\n  TagBased;"},{"QuerySetId":400276,"Title":"Badge: Supporter, by month (2011)","Description":null,"QueryBody":"SELECT DATEADD(m, MONTH(Date), '2010-12-01') AS \"Month\", COUNT(Id) AS \"Supporter\" FROM Badges WHERE YEAR(Date) = 2011 AND Name = 'Supporter' GROUP BY MONTH(Date) ORDER BY MONTH(Date)","CreationDate":"2015-11-28 02:42:52","validated":false,"QueryBody_Original":"SELECT \n  DateAdd(m, Month(Date), '2010-12-01') As [Month],\n  Count(Id) As [Supporter]\nFrom\n  Badges\nWhere\n  Year(Date) = 2011 And\n  Name = 'Supporter'\nGroup By\n  Month(Date)\nOrder By\n  Month(Date);"},{"QuerySetId":400280,"Title":"Badge: Editor, by month (2011)","Description":null,"QueryBody":"SELECT DATEADD(m, MONTH(Date), '2010-12-01') AS \"Month\", COUNT(Id) AS \"Editor\" FROM Badges WHERE YEAR(Date) = 2011 AND Name = 'Editor' GROUP BY MONTH(Date) ORDER BY MONTH(Date)","CreationDate":"2015-11-28 02:47:02","validated":false,"QueryBody_Original":"SELECT \n  DateAdd(m, Month(Date), '2010-12-01') As [Month],\n  Count(Id) As [Editor]\nFrom\n  Badges\nWhere\n  Year(Date) = 2011 And\n  Name = 'Editor'\nGroup By\n  Month(Date)\nOrder By\n  Month(Date);"},{"QuerySetId":400288,"Title":"All badges by day-of-week (2011)","Description":null,"QueryBody":"SELECT Name, CASE Class WHEN 1 THEN '1-Gold' WHEN 2 THEN '2-Silver' WHEN 3 THEN '3-Bronze' END AS Class, TagBased, COUNT(Id) AS BadgeTotal FROM Badges WHERE YEAR(Date) = 2011 GROUP BY Name, Class, TagBased","CreationDate":"2015-11-30 03:34:51","validated":false,"QueryBody_Original":"SELECT \n  Name,\n  Case Class\n    When 1 Then '1-Gold'\n    When 2 Then '2-Silver'\n    When 3 Then '3-Bronze'\n  End As Class,\n  TagBased,\n  Count(Id) As BadgeTotal\nFrom\n  Badges\nWhere\n  Year(Date) = 2011\nGroup By\n  Name,\n  Class,\n  TagBased;"},{"QuerySetId":400557,"Title":"Users by creation date (2011)","Description":null,"QueryBody":"SELECT Id, CreationDate FROM Users WHERE YEAR(CreationDate) = 2011 ORDER BY CreationDate","CreationDate":"2015-11-29 07:36:45","validated":false,"QueryBody_Original":"SELECT \n  Id,\n  CreationDate\nFrom\n  Users\nWhere\n  Year(CreationDate) = 2011\nOrder By\n  CreationDate;"},{"QuerySetId":400564,"Title":"Users by the number of answers since a given date","Description":null,"QueryBody":"SELECT p.OwnerUserId, COUNT(p.Id) AS \"Number of Answers\" FROM Posts AS p WHERE DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) <= 90 GROUP BY p.OwnerUserId ORDER BY COUNT(p.Id) DESC","CreationDate":"2015-11-29 07:04:27","validated":false,"QueryBody_Original":"SELECT  p.OwnerUserId, count(p.Id) as [Number of Answers] from Posts p\nwhere datediff(day, p.CreationDate, getdate()) <= 90 \ngroup by p.OwnerUserId\norder by count(p.Id) desc"},{"QuerySetId":401335,"Title":"Evolution of the up-\/downvote ratio by year and month","Description":"Look at the Graph, to see the evolution of the upvote\/downvote ratio.","QueryBody":"SELECT DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1) AS YearMonth, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ NULLIF(CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT), 0)) AS Ratio FROM Votes WHERE CreationDate > '01-01-2015' AND CreationDate < '12-31-2020' GROUP BY DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1) ORDER BY DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1)","CreationDate":"2019-11-16 01:44:25","validated":false,"QueryBody_Original":"SELECT \ndatefromparts(YEAR(CreationDate), MONTH(CreationDate), 1) AS YearMonth\n, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ nullif(CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float),0)) AS Ratio\nFROM Votes\nWHERE CreationDate > '01-01-2015' AND CreationDate < '12-31-2020'\nGROUP BY datefromparts(YEAR(CreationDate), MONTH(CreationDate), 1)\nORDER BY datefromparts(YEAR(CreationDate), MONTH(CreationDate), 1)"},{"QuerySetId":401521,"Title":"Top users by reputation in Kyrgyzstan","Description":null,"QueryBody":"SELECT Reputation FROM Users WHERE AccountId = 4018622 ORDER BY Reputation DESC","CreationDate":"2015-12-01 14:57:39","validated":false,"QueryBody_Original":"SELECT \n    Reputation\nFROM\n    Users\nWHERE\n    AccountId=4018622\nORDER BY\n    Reputation DESC;"},{"QuerySetId":402842,"Title":"Tag post count trend by month","Description":null,"QueryBody":"SELECT COUNT(*) FROM tags","CreationDate":"2015-12-03 10:00:48","validated":false,"QueryBody_Original":"SELECT  count(*) from tags;"},{"QuerySetId":402952,"Title":"Finding tag by excerpt contents","Description":null,"QueryBody":"SELECT t.TagName, p.Body, t.Count FROM Tags AS t INNER JOIN Posts AS p ON t.ExcerptPostId = p.Id WHERE p.Body LIKE '' ORDER BY t.\"Count\" DESC","CreationDate":"2019-11-28 15:30:15","validated":false,"QueryBody_Original":"SELECT  t.TagName, p.Body, t.Count\nFrom Tags t Inner Join Posts p On t.ExcerptPostId=p.Id\nWhere p.Body Like ''\nOrder By t.[Count] Desc"},{"QuerySetId":403108,"Title":"Number of posts linked by duplicate closure","Description":null,"QueryBody":"SELECT COUNT(*) FROM PostLinks WHERE LinkTypeId = 3","CreationDate":"2015-12-08 01:18:29","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom PostLinks\nwhere LinkTypeId = 3"},{"QuerySetId":403145,"Title":"Questions with answers, but still unanswered","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", Q.Score, COUNT(A.Id) AS \"Answer Count\", MAX(A.Score) AS \"Max Answer Score\" FROM Posts AS Q LEFT JOIN Posts AS A ON Q.Id = A.ParentId WHERE Q.PostTypeId = 1 AND Q.ClosedDate IS NULL AND Q.AcceptedAnswerId IS NULL GROUP BY Q.Id, Q.Score HAVING NOT MAX(A.Id) IS NULL AND MAX(A.Score) <= 0 ORDER BY Q.Score DESC","CreationDate":"2015-12-04 03:14:37","validated":false,"QueryBody_Original":"SELECT \n  Q.Id as [Post Link],\n  Q.Score,\n  count(A.Id) as [Answer Count],\n  max(A.Score) as [Max Answer Score]\nfrom\n  Posts as Q left join Posts as A on Q.Id = A.ParentId\nwhere\n  Q.PostTypeId = 1 and\n  Q.ClosedDate is null and\n  Q.AcceptedAnswerId is null\ngroup by\n  Q.Id, Q.Score\nhaving\n  max(A.Id) is not null and\n  max(A.Score) <= 0\norder by\n  Q.Score desc"},{"QuerySetId":404585,"Title":"Top Users in Cairo, Egypt","Description":"Top ranking users on stackoverflow in Cairo, Egypt","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE Location LIKE '%Cairo%' OR Location LIKE 'Amman' OR Location LIKE 'Doha' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-07-03 15:13:56","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    Location like '%Cairo%' OR Location like 'Amman' OR Location like 'Doha'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":404777,"Title":"How many posts are there on the website?","Description":null,"QueryBody":"SELECT * FROM Posts","CreationDate":"2015-12-07 21:33:31","validated":false,"QueryBody_Original":"SELECT  *\nfrom Posts"},{"QuerySetId":405051,"Title":"Top Java Comments from Top Questions","Description":null,"QueryBody":"SELECT Id, Score, Text, CreationDate FROM Comments WHERE CreationDate < '2014-10-10' AND PostId IN (SELECT Id FROM Posts WHERE ParentId IN (SELECT Id FROM Posts WHERE Tags LIKE '%<java>%') UNION SELECT Id FROM Posts WHERE Tags LIKE '%<java>%') ORDER BY Score, CreationDate LIMIT 100","CreationDate":"2015-12-08 07:50:11","validated":false,"QueryBody_Original":"SELECT  Top 100 Id, Score, Text, CreationDate from Comments \n\nwhere\n\nCreationDate < '2014-10-10' \nand\nPostId\nin\n(SELECT Id from Posts where ParentId in \n(SELECT Id from Posts where Tags like '%<java>%')\nunion\nSELECT Id from Posts where Tags like '%<java>%'\n)\norder by Score asc, CreationDate asc"},{"QuerySetId":405633,"Title":"Swagger \/ RAML \/ API Blueprint","Description":null,"QueryBody":"SELECT COUNT(*), CONCAT(MONTH(creationDate), '\/1\/', YEAR(creationDate)) AS blueprint FROM posts WHERE tags LIKE '%blueprint%' GROUP BY CONCAT(MONTH(creationDate), '\/1\/', YEAR(creationDate)) ORDER BY blueprint DESC LIMIT 20","CreationDate":"2015-12-09 01:51:48","validated":false,"QueryBody_Original":"SELECT  TOP 20\ncount(*), concat(month(creationDate), '\/1\/', year(creationDate)) blueprint\nfrom posts where tags like '%blueprint%'\ngroup by concat(month(creationDate), '\/1\/', year(creationDate))\norder by blueprint desc"},{"QuerySetId":405800,"Title":"User Reputation of Java comments","Description":null,"QueryBody":"SELECT Id, Reputation FROM Users WHERE Id IN (SELECT UserId FROM Comments WHERE CreationDate \/* Score>0 and *\/ < '2014-10-10' AND PostId IN (SELECT Id FROM Posts WHERE ParentId IN (SELECT Id FROM Posts WHERE Tags LIKE '%<php>%') UNION SELECT Id FROM Posts WHERE Tags LIKE '%<php>%')) AND Reputation <= 3 ORDER BY Reputation DESC","CreationDate":"2015-12-09 06:16:23","validated":false,"QueryBody_Original":"SELECT  Id, Reputation from Users where Id in\n(\n\nSELECT UserId  from Comments where \n--Score>0 and\nCreationDate < '2014-10-10' \nand\nPostId\nin\n(SELECT Id from Posts where ParentId in \n(SELECT Id from Posts where Tags like '%<php>%')\nunion\nSELECT Id from Posts where Tags like '%<php>%'\n)\n\n)\nand Reputation <=3\n\norder by Reputation desc"},{"QuerySetId":406044,"Title":"Top 20 SO Users from Pune","Description":"Top 20 SO Users from Pune, Maharashtra, India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%kolhapur%' OR UPPER(Location) LIKE '%kolhapur%' OR Location LIKE '%kolhapur%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2019-11-02 16:16:50","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%kolhapur%'\n    OR UPPER(Location) LIKE '%kolhapur%'\n    or Location like '%kolhapur%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":406174,"Title":"Kentico - answers by month","Description":null,"QueryBody":"SELECT CAST(YEAR(p.CreationDate) AS TEXT(4)) + '-' + REPLACE(STR(CAST(MONTH(p.CreationDate) AS TEXT(2)), 2), SPACE(1), '0') AS \"Period\", COUNT(p.Id) AS \"Count\" FROM posts AS p INNER JOIN posts AS p2 ON p.ParentId = p2.Id WHERE p.CreationDate >= '2015-01-01' AND p.CreationDate < '2016-01-01' AND p.PostTypeId = 2 AND p2.tags LIKE '%kentico%' AND p2.PostTypeId = 1 GROUP BY CAST(YEAR(p.CreationDate) AS TEXT(4)) + '-' + REPLACE(STR(CAST(MONTH(p.CreationDate) AS TEXT(2)), 2), SPACE(1), '0') ORDER BY Period","CreationDate":"2015-12-09 22:49:55","validated":false,"QueryBody_Original":"SELECT  CAST(YEAR(p.CreationDate) AS VARCHAR(4)) + '-' +\nREPLACE(STR(CAST(MONTH(p.CreationDate) AS VARCHAR(2)) , 2), SPACE(1), '0') \nAS [Period], COUNT(p.Id) as [Count] FROM posts p inner join posts p2 on p.ParentId=p2.Id WHERE\np.CreationDate >= '2015-01-01' and p.CreationDate < '2016-01-01' and p.PostTypeId=2 and \np2.tags like '%kentico%' and p2.PostTypeId=1\nGROUP BY  CAST(YEAR(p.CreationDate) AS VARCHAR(4)) + '-' + \nREPLACE(STR(CAST(MONTH(p.CreationDate) AS VARCHAR(2)) , 2), SPACE(1), '0') \nORDER BY Period"},{"QuerySetId":406589,"Title":"Most viewed questions with no votes","Description":null,"QueryBody":"SELECT * FROM Posts WHERE ViewCount >= 100 AND Score = 0 ORDER BY ViewCount DESC","CreationDate":"2018-12-20 01:54:10","validated":false,"QueryBody_Original":"SELECT  * from Posts where ViewCount >= 100 and Score = 0 order by ViewCount desc"},{"QuerySetId":408324,"Title":"% of accepted, open, questions","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%Y') AS \"Year\" \/* , datepart(q, creationdate) as [Quarter] *\/, SUM(CASE WHEN NOT acceptedanswerid IS NULL THEN 1 ELSE 0 END) AS \"Accepted\", SUM(CASE WHEN acceptedanswerid IS NULL THEN 1 ELSE 0 END) AS \"Not Accepted\", CAST(ROUND(CAST(COUNT(acceptedanswerid) AS FLOAT) \/ CAST(COUNT(*) AS FLOAT), 4) * 100 AS TEXT) + '%' AS \"Accept Rate\" FROM posts WHERE posttypeid = 1 AND closeddate IS NULL AND answercount > 0 GROUP BY TIME_TO_STR(creationdate, '%Y') ORDER BY TIME_TO_STR(creationdate, '%Y')","CreationDate":"2015-12-23 09:07:11","validated":false,"QueryBody_Original":"SELECT  datepart(yyyy, creationdate) as [Year]\n     --, datepart(q, creationdate) as [Quarter]\n     , sum(case when acceptedanswerid is not null then 1 else 0\n           end ) as [Accepted]\n     , sum(case when acceptedanswerid is null then 1 else 0\n           end ) as [Not Accepted]\n     , cast(round(cast(count(acceptedanswerid) as float )\n                  \/ cast(count(*) as float)\n                 , 4)\n       * 100 as varchar) + '%' as [Accept Rate]\n  from posts\n where posttypeid = 1\n   and closeddate is null\n   and answercount > 0\n   --and tags like '%security%'\n group by datepart(yyyy, creationdate)\n       -- , datepart(q, creationdate)\n order by datepart(yyyy, creationdate)\n       -- , datepart(q, creationdate)"},{"QuerySetId":408368,"Title":"select count(u.Id) as \"total users\" FROM Users u","Description":null,"QueryBody":"SELECT COUNT(p.ParentId) AS \"threads\" FROM Posts AS p","CreationDate":"2015-12-14 12:32:24","validated":false,"QueryBody_Original":"SELECT  count(p.ParentId) as \"threads\" FROM Posts p"},{"QuerySetId":408564,"Title":"All posts since Jan 2013","Description":null,"QueryBody":"SELECT Id, PostTypeId, Title, Body, Tags, Score, AnswerCount, CommentCount FROM Posts WHERE CreationDate >= CAST('2013-01-01' AS DATE)","CreationDate":"2015-12-14 19:51:15","validated":false,"QueryBody_Original":"SELECT  Id, PostTypeId, Title,Body,Tags, Score, AnswerCount, CommentCount from Posts where CreationDate>=convert(date,'2013-01-01')"},{"QuerySetId":408567,"Title":"All posts from Jan 2015 to Dec 2015","Description":null,"QueryBody":"SELECT Id, PostTypeId, Title, Body, Tags, Score, AnswerCount, CommentCount FROM Posts WHERE CreationDate >= CAST('2015-01-01' AS DATE)","CreationDate":"2015-12-14 19:54:11","validated":false,"QueryBody_Original":"SELECT  Id, PostTypeId, Title,Body,Tags, Score, AnswerCount, CommentCount from\nPosts where CreationDate>=convert(date,'2015-01-01')"},{"QuerySetId":409598,"Title":"How many tag badges have been awarded?","Description":null,"QueryBody":"SELECT COUNT(1) FROM Badges AS b","CreationDate":"2018-08-23 10:30:14","validated":false,"QueryBody_Original":"SELECT  COUNT(1)\nfrom Badges b;"},{"QuerySetId":409852,"Title":"Top 50 users from Bulgaria","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%bulgaria' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2015-12-16 16:48:18","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%bulgaria'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":410668,"Title":"Questions (not deleted) with lowest scores","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score FROM Posts WHERE NOT DeletionDate \/* PostTypeId = 1 And -- Question *\/ IS NULL ORDER BY Score LIMIT 100","CreationDate":"2019-11-23 01:28:01","validated":false,"QueryBody_Original":"SELECT  Top 100\n  Id As [Post Link],\n  Score\nFrom\n  Posts\nWhere\n  -- PostTypeId = 1 And -- Question\n  DeletionDate Is NOT Null\nOrder By\n  Score;"},{"QuerySetId":411711,"Title":"Counting bug related questions from Stack Overflow","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE PostTypeId = 1 AND (Title LIKE '%bug%' OR Title LIKE '%issue%' OR Title LIKE '%error%' OR Title LIKE '%exception%') \/* or Title like '%issue%' *\/ \/* or Title like '%debug%' *\/ AND Body LIKE '%<code>%' AND Tags LIKE '%<java>%'","CreationDate":"2015-12-20 07:43:42","validated":false,"QueryBody_Original":"SELECT  count(Id) from Posts where PostTypeId=1 and\n(Title like '%bug%' \nor Title like '%issue%' \n--or Title like '%issue%' \n--or Title like '%debug%' \nor Title like '%error%' \nor Title like '%exception%'\n--or Title like '%problem%'\n)\nand Body like '%<code>%'\nand Tags like '%<java>%'\n--group by Year(CreationDate)\n\n\n\/*(SELECT Id from Posts where PostTypeId=1 \nand Title like '% bug%') \nunion\n(SELECT Id from Posts where PostTypeId=1 \nand Title like '% issue%')\nunion\n(SELECT Id from Posts where PostTypeId=1 \nand Title like '% debug%')\nunion\n(SELECT Id from Posts where PostTypeId=1 \nand Title like '% error%')\nunion\n(SELECT Id from Posts where PostTypeId=1 \nand Title like '% exception%')\nunion\n(SELECT Id from Posts where PostTypeId=1 \nand Title like '% not working%') *\/"},{"QuerySetId":411826,"Title":"Answered questions with given length ","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM posts WHERE posttypeid = 2 AND answercount = 1 AND LENGTH(body) < 100","CreationDate":"2015-12-18 18:17:53","validated":false,"QueryBody_Original":"SELECT  id as [Post Link]\n  from posts\n where posttypeid = 2\n   and answercount = 1\n   and len(body) < 100"},{"QuerySetId":411869,"Title":"User with most questions asked","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", QuestionCounts.PostsCount AS \"Number of Questions\", AnswerCounts.PostsCount AS \"Number of Answers\" FROM (SELECT OwnerUserId, COUNT(id) AS PostsCount FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId) AS QuestionCounts, (SELECT OwnerUserId, COUNT(id) AS PostsCount FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS AnswerCounts, Users WHERE Users.Id = QuestionCounts.OwnerUserId AND Users.Id = AnswerCounts.OwnerUserId ORDER BY QuestionCounts.PostsCount DESC LIMIT 50","CreationDate":"2015-12-18 20:40:20","validated":false,"QueryBody_Original":"SELECT  TOP(50) Users.Id as [User Link],\n       QuestionCounts.PostsCount as [Number of Questions],\n       AnswerCounts.PostsCount as [Number of Answers]\nFROM (\n  SELECT OwnerUserId, COUNT(id) AS PostsCount\n  FROM Posts\n  WHERE PostTypeId = 1\n  GROUP BY OwnerUserId\n  ) QuestionCounts,\n  (\n  SELECT OwnerUserId, COUNT(id) AS PostsCount\n  FROM Posts\n  WHERE PostTypeId = 2\n  GROUP BY OwnerUserId\n  ) AnswerCounts, \n  Users\nWHERE Users.Id = QuestionCounts.OwnerUserId AND\n      Users.Id = AnswerCounts.OwnerUserId\nORDER BY QuestionCounts.PostsCount DESC"},{"QuerySetId":411923,"Title":"Find the number of questions and answers for the people who ask many questions","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", QuestionCounts.Number AS \"Number of Questions\", AnswerCounts.Number AS \"Number of Answers\", Users.Location FROM (SELECT OwnerUserId, COUNT(Id) AS Number FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId) AS QuestionCounts, (SELECT OwnerUserId, COUNT(id) AS Number FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS AnswerCounts, Users WHERE Users.Id = QuestionCounts.OwnerUserId AND Users.Id = AnswerCounts.OwnerUserId ORDER BY QuestionCounts.Number DESC","CreationDate":"2015-12-18 20:51:19","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link],\n       QuestionCounts.Number as [Number of Questions],\n       AnswerCounts.Number as [Number of Answers],\n       Users.Location\nFROM (\n  SELECT OwnerUserId, COUNT(Id) AS Number\n  FROM Posts\n  WHERE PostTypeId = 1\n  GROUP BY OwnerUserId\n  ) QuestionCounts,\n  (\n  SELECT OwnerUserId, COUNT(id) AS Number\n  FROM Posts\n  WHERE PostTypeId = 2\n  GROUP BY OwnerUserId\n  ) AnswerCounts, \n  Users\nWHERE Users.Id = QuestionCounts.OwnerUserId AND\n      Users.Id = AnswerCounts.OwnerUserId\nORDER BY QuestionCounts.Number DESC"},{"QuerySetId":412368,"Title":"Top StackOverflow Rockers from Bangladesh","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE N'%Bangladesh%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2015-12-20 04:35:55","validated":false,"QueryBody_Original":"SELECT  TOP 100\n*\nFROM\n   Users\nWHERE\n   Location like N'%Bangladesh%'\nORDER BY\n   reputation DESC"},{"QuerySetId":412542,"Title":"List of Newcastle Upon Tyne based users, ordered by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%newcast%' OR LOWER(Location) LIKE '%new cast%' ORDER BY Reputation DESC","CreationDate":"2015-12-19 23:31:29","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%newcast%'\n    OR LOWER(Location) LIKE '%new cast%'\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":412600,"Title":"User with lowest ID and rep over 1k","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, CreationDate FROM Users WHERE Reputation > 1000","CreationDate":"2015-12-20 06:46:29","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, CreationDate\nFrom Users\nWhere Reputation > 1000"},{"QuerySetId":412827,"Title":"Answered question that were never accepted","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS Q, Users AS U WHERE Q.AnswerCount > 0 AND Q.AcceptedAnswerId IS NULL AND Q.OwnerUserId = U.Id AND U.Reputation = 1","CreationDate":"2015-12-20 18:21:42","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFROM\n    Posts Q, Users U\nWHERE\n  Q.AnswerCount > 0 AND\n  Q.AcceptedAnswerId IS NULL AND\n  Q.OwnerUserId = U.Id AND\n  U.Reputation = 1"},{"QuerySetId":412847,"Title":"Questions posted by users with reputation 1 with at least one answer and no accepted answer","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS Q, Users AS U INNER JOIN (SELECT OwnerUserId, COUNT(Id) AS QuestionCount FROM posts WHERE PostTypeId = 1 GROUP BY OwnerUserId) AS QU ON U.Id = QU.OwnerUserId WHERE Q.PostTypeId = 1 AND Q.AnswerCount > 0 AND Q.AcceptedAnswerId IS NULL AND Q.OwnerUserId = U.Id AND U.Reputation < 102 AND QU.questionCount = 1","CreationDate":"2015-12-20 18:54:11","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFROM\n    Posts Q, Users U\ninner join (\n  SELECT\n    OwnerUserId,\n    count(Id) as QuestionCount\n  from posts\n  where PostTypeId = 1\n  group by OwnerUserId\n) as QU on U.Id = QU.OwnerUserId\nWHERE\n  Q.PostTypeId = 1 AND\n  Q.AnswerCount > 0 AND\n  Q.AcceptedAnswerId IS NULL AND\n  Q.OwnerUserId = U.Id AND\n  U.Reputation < 102 AND\n  QU.questionCount = 1"},{"QuerySetId":412863,"Title":"Find Stack Overflow Users by Location and a Tag","Description":"A simply query to find users by tag in your city or country.","QueryBody":"SELECT DISTINCT Users.Id AS \"User Link\", Users.Reputation FROM Users JOIN Posts ON Posts.OwnerUserId = Users.Id WHERE Users.Location LIKE LOWER('%##Location##%') AND Posts.Tags LIKE LOWER('%##Tags##%') ORDER BY Users.Reputation DESC","CreationDate":"2018-09-27 20:04:06","validated":false,"QueryBody_Original":"SELECT  distinct Users.Id [User Link], Users.Reputation\nfrom Users\njoin Posts\n  on Posts.OwnerUserId = Users.Id\n  where Users.Location like LOWER('%##Location##%')\n  and Posts.Tags like LOWER('%##Tags##%')\norder by Users.Reputation desc"},{"QuerySetId":413286,"Title":"Top 200 users from Bulgaria","Description":null,"QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, Location FROM Users WHERE Location LIKE '%Sofia%' OR Location LIKE '%Bulgaria%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2015-12-22 18:37:48","validated":false,"QueryBody_Original":"SELECT  TOP 200\n  Id AS [User Link],\n  DisplayName,\n  Reputation,\n  Location\nFROM Users\nWHERE\n   Location LIKE '%Sofia%'\n   OR Location LIKE '%Bulgaria%'\nORDER BY Reputation DESC"},{"QuerySetId":413628,"Title":"Count of New Questions and Answers Since a Specified Year","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS \"Year\", MONTH(CreationDate) AS \"Month\", SUM(CASE WHEN Posts.posttypeid = 1 THEN 1 ELSE 0 END) AS QuestionCount, SUM(CASE WHEN Posts.posttypeid = 2 THEN 1 ELSE 0 END) AS AnswerCount FROM Posts WHERE YEAR(CreationDate) >= 2014 GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2015-12-22 01:44:56","validated":false,"QueryBody_Original":"SELECT \n  YEAR(CreationDate) as [Year], \n  MONTH(CreationDate) AS [Month],\n  SUM(CASE WHEN Posts.posttypeid = 1 THEN 1 ELSE 0 END) AS QuestionCount, \n  SUM(CASE WHEN Posts.posttypeid = 2 THEN 1 ELSE 0 END) AS AnswerCount\nFROM Posts\nWHERE YEAR(CreationDate) >= 2014\nGROUP BY YEAR(CreationDate), MONTH(CreationDate)\nORDER BY YEAR(CreationDate), MONTH(CreationDate)"},{"QuerySetId":413629,"Title":"Count of New Questions and Answers Per Month Since a Specified Year (Including Deleted)","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS \"Year\", MONTH(CreationDate) AS \"Month\", SUM(CASE WHEN Posts.posttypeid = 1 THEN 1 ELSE 0 END) AS QuestionCount, SUM(CASE WHEN Posts.posttypeid = 2 THEN 1 ELSE 0 END) AS AnswerCount FROM Posts WHERE YEAR(CreationDate) >= 2014 GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2015-12-22 01:52:08","validated":false,"QueryBody_Original":"SELECT \n  YEAR(CreationDate) as [Year], \n  MONTH(CreationDate) AS [Month],\n  SUM(CASE WHEN Posts.posttypeid = 1 THEN 1 ELSE 0 END) AS QuestionCount, \n  SUM(CASE WHEN Posts.posttypeid = 2 THEN 1 ELSE 0 END) AS AnswerCount\nFROM Posts\nWHERE YEAR(CreationDate) >= 2014\nGROUP BY YEAR(CreationDate), MONTH(CreationDate)\nORDER BY YEAR(CreationDate), MONTH(CreationDate)"},{"QuerySetId":415684,"Title":"Posts and Active Users per month 2014-2015","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%Y%m') AS ym, COUNT(*) AS postcount, COUNT(DISTINCT owneruserid) AS distinctusercount FROM Posts WHERE creationdate BETWEEN '2014-01-01' AND '2015-12-31' GROUP BY TIME_TO_STR(creationdate, '%Y%m')","CreationDate":"2015-12-26 00:25:39","validated":false,"QueryBody_Original":"SELECT  format(creationdate, 'yyyyMM') as ym, \ncount(*) as postcount, count(distinct owneruserid) as distinctusercount \nfrom Posts where creationdate between '2014-01-01' and '2015-12-31' \ngroup by format(creationdate, 'yyyyMM')"},{"QuerySetId":416382,"Title":"Tag not used in 2011","Description":"19. List the names of the tags that were not used in 2011.","QueryBody":"SELECT TagName FROM Tags EXCEPT (SELECT DISTINCT TagName AS Name FROM PostHistory JOIN Tags ON PostHistory.Text LIKE ('%<' + Tags.TagName + '>%') \/* SELECT TOP 10 * FROM PostHistory *\/\/* rollback tags *\/  WHERE YEAR(CreationDate) = 2011 AND PostHistoryTypeId IN (3 \/* initial tags *\/, 6 \/* edit tags *\/, 9))","CreationDate":"2016-01-13 17:13:15","validated":false,"QueryBody_Original":"SELECT  TagName FROM Tags\nEXCEPT (SELECT DISTINCT TagName AS Name FROM PostHistory \n  JOIN Tags ON PostHistory.Text LIKE ('%<' + Tags.TagName + '>%')\n\n--SELECT TOP 10 * FROM PostHistory\n WHERE  year(CreationDate) = 2011\n    AND    PostHistoryTypeId IN (3  -- initial tags\n                           , 6  -- edit tags\n                           , 9) -- rollback tags\n                        \n                        )"},{"QuerySetId":416971,"Title":"Data Science - Posts and Users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY p.Id) AS RowNum, p.Id, p.Title, p.PostTypeId, p.CreationDate, p.ClosedDate, p.Score, p.ViewCount, p.AnswerCount, p.Tags, p.OwnerUserId, p.OwnerDisplayName, owner.Location, owner.Reputation, c.Id AS AnswerId, c.Score AS AnswerScore, responseOwner.Id AS ResponseOwnerId, responseOwner.DisplayName AS ResponseOwnerDisplayName, responseOwner.Location AS ResponseOwnerLocation, responseOwner.UpVotes, responseOwner.DownVotes FROM Posts AS p INNER JOIN Posts AS c ON c.Id = p.AcceptedAnswerId INNER JOIN Users AS owner ON p.OwnerUserId = owner.Id INNER JOIN Users AS responseOwner ON c.OwnerUserId = responseOwner.Id","CreationDate":"2015-12-29 02:54:49","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY p.Id) AS RowNum,\n   p.Id, p.Title, p.PostTypeId, p.CreationDate, p.ClosedDate,\np.Score, p.ViewCount, p.AnswerCount, p.Tags,\np.OwnerUserId, p.OwnerDisplayName, owner.Location, owner.Reputation,\nc.Id as AnswerId, c.Score AnswerScore, \nresponseOwner.Id as ResponseOwnerId, \nresponseOwner.DisplayName as ResponseOwnerDisplayName,\nresponseOwner.Location as ResponseOwnerLocation,\nresponseOwner.UpVotes, responseOwner.DownVotes\nfrom Posts p\nINNER JOIN Posts c ON c.Id=p.AcceptedAnswerId\nINNER JOIN Users owner ON p.OwnerUserId=owner.Id\nINNER JOIN Users responseOwner ON c.OwnerUserId=responseOwner.Id"},{"QuerySetId":417474,"Title":"Accept button is not clear and creates a bad user experience","Description":"http:\/\/meta.stackexchange.com\/questions\/272103\/accept-button-is-not-clear-and-creates-a-bad-user-experience#272103","QueryBody":"SELECT u.reputation \/ 10, SUM(CASE WHEN NOT acceptedanswerid IS NULL THEN 1 ELSE 0 END) AS acc, SUM(CASE WHEN acceptedanswerid IS NULL THEN 1 ELSE 0 END) AS not_acc FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE u.reputation < 500 GROUP BY u.reputation \/ 10 ORDER BY u.reputation \/ 10","CreationDate":"2015-12-30 05:33:37","validated":false,"QueryBody_Original":"SELECT   u.reputation \/ 10\n      , sum(case when acceptedanswerid is not null then 1 else 0 end) as acc\n      , sum(case when acceptedanswerid  is  null then 1 else 0 end) as not_acc\n     \nfrom posts p\ninner join users u on u.id = p.owneruserid \nwhere u.reputation < 500\ngroup by u.reputation \/10\norder by u.reputation \/10"},{"QuerySetId":417816,"Title":"Top 10 SO Users from Mysore","Description":"Top 10 SO Users from Mysore, Karnataka, India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%mysore%' OR UPPER(Location) LIKE '%MYSORE%' OR Location LIKE '%mysore%' AND Reputation >= 1000 ORDER BY Reputation DESC LIMIT 10","CreationDate":"2015-12-31 12:52:59","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%mysore%'\n    OR UPPER(Location) LIKE '%MYSORE%'\n    or Location like '%mysore%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":418100,"Title":"Top 300 Users in India","Description":"It will gives you Top 300 Users who belongs to India.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 300","CreationDate":"2020-09-19 11:21:25","validated":false,"QueryBody_Original":"SELECT  TOP 300\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":418146,"Title":"Get tag names sorted by tag name","Description":null,"QueryBody":"SELECT Name FROM Badges ORDER BY \"Name\"","CreationDate":"2016-01-01 15:34:29","validated":false,"QueryBody_Original":"SELECT  Name \nfrom Badges\norder by [Name]"},{"QuerySetId":418161,"Title":"Users who cast the most downvotes [save]","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Downvotes, Users.Reputation FROM Users ORDER BY Users.Downvotes DESC LIMIT 128","CreationDate":"2016-01-01 17:32:36","validated":false,"QueryBody_Original":"SELECT  TOP 128\n  Users.Id AS [User Link],\n  Users.Downvotes,\n  Users.Reputation\nFROM Users\nORDER BY Users.Downvotes DESC"},{"QuerySetId":418552,"Title":"Number User Joined by Year","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE CreationDate >= '01\/01\/2017' AND CreationDate <= '12\/31\/2017'","CreationDate":"2018-01-03 06:21:54","validated":false,"QueryBody_Original":"SELECT  count(Id)\nFROM Users\nWHERE CreationDate >= '01\/01\/2017'\nAND CreationDate <= '12\/31\/2017'"},{"QuerySetId":418651,"Title":"Tag edits to add grammar","Description":null,"QueryBody":"SELECT DISTINCT I.PostId AS \"Post Link\", I.CreationDate \/* , I.Text As originalTags, E.Text As editedTags *\/ FROM (SELECT * FROM PostHistory WHERE PostHistoryTypeId = 3) AS I INNER JOIN (SELECT * FROM PostHistory WHERE PostHistoryTypeId = 6) AS E ON I.PostId = E.PostId WHERE e.Text LIKE '%bare-role%' AND NOT i.Text LIKE '%bare-role%'","CreationDate":"2016-01-03 12:48:22","validated":false,"QueryBody_Original":"SELECT  Distinct I.PostId as [Post Link],I.CreationDate\n--, I.Text As originalTags, E.Text As editedTags \nFrom \n( SELECT *\nFrom PostHistory\nWhere PostHistoryTypeId = 3\n) I\nInner Join\n(SELECT *\nFrom PostHistory\nWhere PostHistoryTypeId = 6) E\nOn I.PostId = E.PostId\nWhere e.Text Like '%bare-role%'\nAnd i.Text Not Like '%bare-role%';"},{"QuerySetId":419198,"Title":"TOP 50 users from Jaipur","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Jaipur%' ORDER BY reputation DESC LIMIT 1550","CreationDate":"2020-08-22 02:21:56","validated":false,"QueryBody_Original":"SELECT  TOP 1550\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Jaipur%'\n   --OR Location like N'%jaipur%'\n \nORDER BY\n   reputation DESC"},{"QuerySetId":419494,"Title":"top hundred user for rajkot","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Bengalore%' OR UPPER(Location) LIKE '%BENGALORE' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-01-05 13:38:56","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Bengalore%'\n    OR UPPER(Location) LIKE '%BENGALORE'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":419525,"Title":"R Trends (# Questions per Tag per Year)","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE YEAR(CreationDate) = '2008'","CreationDate":"2016-01-06 07:33:55","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts where Year(CreationDate)='2008'"},{"QuerySetId":419531,"Title":"Top 5 Answers by Tag & Year","Description":null,"QueryBody":"SELECT COUNT(1) FROM Posts AS p1 WHERE p1.PostTypeId = 2 AND p1.OwnerUserId = 22656","CreationDate":"2016-01-16 18:25:01","validated":false,"QueryBody_Original":"SELECT  \n  count(1)\nFROM Posts as p1 \nWHERE\np1.PostTypeId = 2 and p1.OwnerUserId = 22656"},{"QuerySetId":420366,"Title":"Kentico - questions by month","Description":null,"QueryBody":"SELECT CAST(YEAR(p.CreationDate) AS TEXT(4)) + '-' + REPLACE(STR(CAST(MONTH(p.CreationDate) AS TEXT(2)), 2), SPACE(1), '0') AS \"Period\", COUNT(p.Id) AS \"Count\" FROM posts AS p WHERE p.CreationDate >= '2015-01-01' AND p.CreationDate < '2017-01-01' AND p.PostTypeId = 1 AND p.tags LIKE '%kentico%' GROUP BY CAST(YEAR(p.CreationDate) AS TEXT(4)) + '-' + REPLACE(STR(CAST(MONTH(p.CreationDate) AS TEXT(2)), 2), SPACE(1), '0') ORDER BY Period","CreationDate":"2016-01-26 15:58:13","validated":false,"QueryBody_Original":"SELECT  CAST(YEAR(p.CreationDate) AS VARCHAR(4)) + '-' +\nREPLACE(STR(CAST(MONTH(p.CreationDate) AS VARCHAR(2)) , 2), SPACE(1), '0') \nAS [Period], COUNT(p.Id) as [Count] FROM posts p WHERE\np.CreationDate >= '2015-01-01' and p.CreationDate < '2017-01-01' and p.PostTypeId=1 \nand p.tags like '%kentico%' \nGROUP BY  CAST(YEAR(p.CreationDate) AS VARCHAR(4)) + '-' + \nREPLACE(STR(CAST(MONTH(p.CreationDate) AS VARCHAR(2)) , 2), SPACE(1), '0') \nORDER BY Period"},{"QuerySetId":420674,"Title":"Users with SOReadyToHelp Meta Posts","Description":null,"QueryBody":"SELECT DISTINCT P.OwnerUserId AS \"User Link\" FROM Posts AS P WHERE P.ParentId = 303988 OR P.ParentId = 303045 ORDER BY \"User Link\" DESC","CreationDate":"2016-01-07 17:21:40","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  P.OwnerUserId as [User Link]\nFROM Posts as P\nWHERE P.ParentId = 303988\nOR P.ParentId = 303045\nORDER BY [User Link] DESC"},{"QuerySetId":420872,"Title":"top 100 users from india","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%Bengaluru%' OR UPPER(Location) LIKE '%Bengaluru%' OR Location LIKE '%Bengaluru%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2016-01-08 12:53:24","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%Bengaluru%'\n    OR UPPER(Location) LIKE '%Bengaluru%'\n    or Location like '%Bengaluru%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":420981,"Title":"top 10 users from Bengaluru India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%Bengaluru%' OR UPPER(Location) LIKE '%Bengaluru%' OR Location LIKE '%Bengaluru%' OR LOWER(Location) LIKE '%Bangalore%' OR UPPER(Location) LIKE '%Bangalore%' OR Location LIKE '%Bangalore%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2017-10-20 13:02:13","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%Bengaluru%'\n    OR UPPER(Location) LIKE '%Bengaluru%'\n    or Location like '%Bengaluru%'\n    or LOWER(Location) LIKE '%Bangalore%'\n    OR UPPER(Location) LIKE '%Bangalore%'\n    or Location like '%Bangalore%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":420991,"Title":"top 200 users from Bengaluru\/Bangalore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%india%' OR LOWER(Location) LIKE '%india%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2016-02-22 12:13:47","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR LOWER(Location) LIKE '%india%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":421027,"Title":"Top 10 users in Bangalore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%bournemouth%' OR UPPER(Location) LIKE '%BOURNEMOUTH%' OR Location LIKE '%bournemouth%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 10","CreationDate":"2016-01-08 21:37:00","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%bournemouth%'\n    OR UPPER(Location) LIKE '%BOURNEMOUTH%'\n    or Location like '%bournemouth%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":421042,"Title":"R versus Python tags - quotient Py\/R","Description":null,"QueryBody":"SELECT CAST(CAST(t.yr AS TEXT(4)) + '-' + CAST(t.mnth AS TEXT(2)) + '-01' AS DATE) AS dt, (CASE WHEN t.r_mnth_count = 0 THEN NULL ELSE CAST(t.py_mnth_count AS FLOAT) \/ CAST(t.r_mnth_count AS FLOAT) END) AS py_div_r FROM (SELECT MONTH(CreationDate) AS mnth, YEAR(CreationDate) AS yr \/* count <r> tags *\/, SUM(CASE WHEN tags LIKE '%<r>%' THEN 1 ELSE 0 END) AS r_mnth_count \/* count <python> tags *\/, SUM(CASE WHEN tags LIKE '%<python>%' THEN 1 ELSE 0 END) AS py_mnth_count FROM posts WHERE tags \/* tags are wrapped by <> *\/ LIKE '%<r>%' OR tags LIKE '%<python>%' GROUP BY MONTH(CreationDate), YEAR(CreationDate)) AS t \/* exclude last (incomplete) month *\/ WHERE NOT (t.mnth = MONTH(CURRENT_TIMESTAMP()) AND t.yr = YEAR(CURRENT_TIMESTAMP())) AND yr >= 2014 ORDER BY t.yr, t.mnth","CreationDate":"2020-05-27 07:50:41","validated":false,"QueryBody_Original":"SELECT \n  cast(cast(t.yr as varchar(4))+'-'+cast(t.mnth as varchar(2))+'-01' as date) as dt\n  ,(case when t.r_mnth_count=0 then NULL else cast(t.py_mnth_count as float)\/cast(t.r_mnth_count as float) end) as py_div_r\nfrom\n(\n  SELECT\n    month(CreationDate) as mnth\n    ,year(CreationDate) as yr\n    -- count <r> tags\n    ,sum(case when tags like '%<r>%' then 1 else 0 end) as r_mnth_count\n    -- count <python> tags\n    ,sum(case when tags like '%<python>%' then 1 else 0 end) as py_mnth_count\n  from\n    posts\n  where\n    -- tags are wrapped by <>\n    tags like '%<r>%'\n    or tags like '%<python>%'\n  group by month(CreationDate), year(CreationDate)\n) as t\n-- exclude last (incomplete) month\nwhere not (t.mnth=month(GETDATE()) and t.yr=year(GETDATE()))\nand yr>=2014\norder by t.yr asc, t.mnth asc"},{"QuerySetId":421074,"Title":"Top 10 users Stack Overflow users from Morocco","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Bournemouth%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2016-01-08 21:36:15","validated":false,"QueryBody_Original":"SELECT \nTOP (10) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Bournemouth%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":421423,"Title":"The custom close reasons which starts with \"I'm voting to close [...]\" ","Description":null,"QueryBody":"SELECT Text FROM Comments WHERE Text LIKE 'I''m voting to close this question as off-topic because%'","CreationDate":"2016-01-09 14:34:41","validated":false,"QueryBody_Original":"SELECT  Text from Comments \nwhere Text like \n'I''m voting to close this question as off-topic because%';"},{"QuerySetId":421428,"Title":"The custom close reasons which start with \"I'm voting to close [...]\"","Description":null,"QueryBody":"SELECT PostId AS \"PostId\", Text FROM Comments WHERE Text LIKE 'I''m voting to close this question as off-topic because%'","CreationDate":"2019-06-05 01:22:27","validated":false,"QueryBody_Original":"SELECT  PostId [PostId], Text from Comments \nwhere Text like \n'I''m voting to close this question as off-topic because%';"},{"QuerySetId":421543,"Title":"Top 10 Highest Favorite Count Questions","Description":null,"QueryBody":"SELECT p.ID, p.Title, p.FavoriteCount AS \"Faves\" FROM Posts AS p ORDER BY p.FavoriteCount DESC LIMIT 10","CreationDate":"2016-01-10 07:02:54","validated":false,"QueryBody_Original":"SELECT  TOP(10) p.ID, p.Title, p.FavoriteCount [Faves]\nFROM Posts p\nORDER BY p.FavoriteCount DESC"},{"QuerySetId":421723,"Title":"All posts with \"express.js\" in the post's body","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body, CreationDate FROM Posts WHERE BODY LIKE '%express.js%' AND CreationDate > '2014-01-01' AND CreationDate < '2016-01-01' ORDER BY CreationDate DESC","CreationDate":"2016-01-11 06:21:13","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Body, CreationDate\nFROM Posts\nWHERE BODY like '%express.js%'\nAND CreationDate > '2014-01-01' AND CreationDate < '2016-01-01'\nORDER BY CreationDate DESC"},{"QuerySetId":422587,"Title":"Posts by New users per day","Description":"This counts how many posts there have been by users on their first day. Broken down for easy graphing.","QueryBody":"SELECT DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate)), COUNT(*) FROM Posts AS p INNER JOIN users AS u ON u.id = p.owneruserid INNER JOIN votes AS v ON v.postid = p.id WHERE p.PostTypeId = 1 AND DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate)) > '2015-07-31 00:00:00' AND v.votetypeid = 3 GROUP BY DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate)) ORDER BY DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate))","CreationDate":"2016-05-31 05:14:46","validated":false,"QueryBody_Original":"SELECT \n    DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate)),\n    COUNT(*)\nFROM\n        Posts p\n    inner join users u on u.id = p.owneruserid\n    inner join votes v\n     on v.postid = p.id\nWHERE p.PostTypeId = 1\nand  DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate))> '2015-07-31 00:00:00'\nand v.votetypeid=3\n-- and u.reputation<250\n-- and u.reputation>100\nGROUP BY\n    DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate))\nORDER BY\n    DATEADD(d, 0, DATEDIFF(d, 0, p.CreationDate))"},{"QuerySetId":422905,"Title":"Repeated questions + linked original question","Description":null,"QueryBody":"SELECT orig.Id AS original_id, orig.Title AS original_title, rep.Id AS duplicate_Id, rep.Title AS duplicate_title FROM Posts AS orig INNER JOIN (SELECT Posts.Id, Posts.Title, Posts.Score, Posts.ViewCount, Posts.Body, PostLinks.RelatedPostId AS orig_Id FROM Posts INNER JOIN PostLinks ON Posts.Id = PostLinks.PostId WHERE Posts.PostTypeId = 1 AND NOT Posts.ClosedDate IS NULL AND PostLinks.LinkTypeId = 3) AS rep ON rep.orig_id = orig.Id WHERE orig.PostTypeId = 1","CreationDate":"2017-11-02 23:18:19","validated":false,"QueryBody_Original":"SELECT \n  orig.Id as original_id, \n  orig.Title as original_title,\n  rep.Id as duplicate_Id,  \n  rep.Title as duplicate_title\nFROM Posts orig\nINNER JOIN (\n  SELECT Posts.Id, Posts.Title, Posts.Score, Posts.ViewCount,\n    Posts.Body, PostLinks.RelatedPostId  as orig_Id\n  FROM Posts\n  INNER JOIN PostLinks ON Posts.Id = PostLinks.PostId\n  WHERE Posts.PostTypeId = 1\n  AND Posts.ClosedDate IS NOT NULL\n  AND PostLinks.LinkTypeId = 3\n) rep ON rep.orig_id = orig.Id\nWHERE orig.PostTypeId = 1"},{"QuerySetId":422933,"Title":"Answer retrieval + linked Q set","Description":null,"QueryBody":"SELECT q.Id AS Q_id, q.AnswerCount, a.Id AS A_Id, 'http:\/\/stackoverflow.com\/questions\/' + CAST(a.Id AS TEXT) AS Link, a.Score, a.Body FROM Posts AS a INNER JOIN Posts AS q ON q.Id = a.ParentId WHERE a.PostTypeId = 2 AND q.Tags LIKE '%python%' ORDER BY q.score DESC, a.Score DESC LIMIT 10","CreationDate":"2016-01-14 19:00:49","validated":false,"QueryBody_Original":"SELECT  TOP 10\n  q.Id as Q_id,\n  q.AnswerCount,\n  a.Id as A_Id,\n  'http:\/\/stackoverflow.com\/questions\/'+CAST(a.Id as varchar) as Link,\n  a.Score,\n  a.Body\nFROM Posts a\nINNER JOIN Posts q ON q.Id = a.ParentId\nWHERE a.PostTypeId = 2\nAND q.Tags LIKE '%python%'\nORDER BY q.score DESC, a.Score DESC"},{"QuerySetId":424006,"Title":"Search My answers by question title","Description":null,"QueryBody":"SELECT P1.TITLE, * FROM POSTS AS P INNER JOIN POSTS AS P1 ON P.PARENTID = P1.ID WHERE P.OWNERUSERID = 2717391 AND P1.title LIKE '%split%'","CreationDate":"2016-01-15 09:41:25","validated":false,"QueryBody_Original":"SELECT  P1.TITLE,* FROM \nPOSTS P INNER JOIN POSTS P1 ON P.PARENTID = P1.ID\nWHERE P.OWNERUSERID=2717391 AND P1.title like '%split%'"},{"QuerySetId":424036,"Title":"Top users from India (on WordPress stackexchnage)","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE UPPER(Location) LIKE '%INDIA%' ORDER BY Reputation DESC","CreationDate":"2016-01-15 13:07:50","validated":false,"QueryBody_Original":"SELECT  Id [User Link], *\nfrom Users\nwhere UPPER(Location) like '%INDIA%'  \norder by Reputation desc"},{"QuerySetId":424504,"Title":"Find JavaScript questions needing an edit","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE ClosedDate IS NULL AND DeletionDate IS NULL LIMIT 5","CreationDate":"2016-08-14 18:04:38","validated":false,"QueryBody_Original":"SELECT  TOP 5\n  Id AS [Post Link],\n  Tags\nFROM Posts\nWHERE \n      ClosedDate IS NULL\n  AND  DeletionDate IS NULL"},{"QuerySetId":424547,"Title":"Can I identify when a tag has been made on Data Explorer or the SE API?","Description":"http:\/\/meta.stackexchange.com\/questions\/144933\/can-i-identify-when-a-tag-has-been-made-on-data-explorer-or-the-se-api\/273185#273185","QueryBody":"SELECT t.tagname, t.count, CASE WHEN excerpt.creationdate < wiki.creationdate THEN excerpt.creationdate ELSE wiki.creationdate END AS \"creationdate\" FROM tags AS t INNER JOIN posts AS excerpt ON excerpt.id = t.excerptPostid INNER JOIN posts AS wiki ON wiki.id = t.wikiPostid ORDER BY count, CASE WHEN excerpt.creationdate < wiki.creationdate THEN excerpt.creationdate ELSE wiki.creationdate END","CreationDate":"2016-01-17 02:07:19","validated":false,"QueryBody_Original":"SELECT  t.tagname\n     , t.count\n     , case \n       when excerpt.creationdate < wiki.creationdate \n       then excerpt.creationdate\n       else wiki.creationdate \n       end [creationdate]\nfrom tags t\ninner join posts excerpt \n        on excerpt.id = t.excerptPostid\ninner join posts wiki\n        on wiki.id = t.wikiPostid\norder by count asc\n       , case \n       when excerpt.creationdate < wiki.creationdate \n       then excerpt.creationdate\n       else wiki.creationdate \n       end asc"},{"QuerySetId":425159,"Title":"Select * from Users where Location = \"india\"","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location = 'india'","CreationDate":"2016-01-19 13:14:41","validated":false,"QueryBody_Original":"SELECT  * from Users where Location ='india'"},{"QuerySetId":425248,"Title":"select * from users where location='vietnam'","Description":null,"QueryBody":"SELECT * FROM users WHERE LOWER(location) LIKE '%vietnam%' ORDER BY reputation DESC","CreationDate":"2016-01-19 15:44:28","validated":false,"QueryBody_Original":"SELECT  * from users where lower(location) LIKE '%vietnam%' ORDER BY reputation desc"},{"QuerySetId":425459,"Title":"SELECT * from Comments c WHERE c.PostId in (SELECT Id FROM Posts WHERE YEAR ( CreationDate ) = 2015)","Description":null,"QueryBody":"SELECT * FROM Comments AS c WHERE c.PostId IN (SELECT Id FROM Posts WHERE YEAR(CreationDate) = 2015)","CreationDate":"2016-01-19 20:47:33","validated":false,"QueryBody_Original":"SELECT  * from Comments c WHERE c.PostId in (SELECT Id FROM Posts WHERE YEAR ( CreationDate ) = 2015)"},{"QuerySetId":426939,"Title":"Questions with 3 or more identified duplicates","Description":null,"QueryBody":"SELECT * FROM (SELECT PostLinks.RelatedPostId AS \"Post Link\", COUNT(PostLinks.PostId) AS \"qty\" FROM PostLinks WHERE PostLinks.LinkTypeId = 3 GROUP BY PostLinks.RelatedPostId) AS subq WHERE subq.qty > 2 ORDER BY subq.qty DESC","CreationDate":"2016-01-23 00:45:59","validated":false,"QueryBody_Original":"SELECT   *\n    FROM\n    (\n    SELECT\n      PostLinks.RelatedPostId AS [Post Link],\n      COUNT(PostLinks.PostId) AS 'qty'\n    FROM\n      PostLinks\n    WHERE\n      PostLinks.LinkTypeId = 3\n    GROUP BY\n      PostLinks.RelatedPostId\n    ) subq\nWHERE\n    subq.qty > 2\nORDER BY\n    subq.qty DESC"},{"QuerySetId":427408,"Title":"How long before first answer?","Description":null,"QueryBody":"SELECT Question.Id AS \"Post Link\", MIN(Question.Title), MIN(Question.PostTypeId), MIN(Answer.PostTypeId), MIN(DATEDIFF(Answer.CreationDate, Question.CreationDate)) AS Age FROM Posts AS Answer, Posts AS Question WHERE Answer.ParentId = Question.Id AND Answer.OwnerUserId <> Question.OwnerUserId GROUP BY Question.Id ORDER BY Age LIMIT 2000","CreationDate":"2016-01-25 17:36:30","validated":false,"QueryBody_Original":"SELECT  TOP 2000 Question.Id as [Post Link],min(Question.Title), min(Question.PostTypeId), min(Answer.PostTypeId), min(DATEDIFF(\"MI\", Question.CreationDate, Answer.CreationDate)) as Age\nFROM Posts as Answer, Posts as Question\nWHERE Answer.ParentId = Question.Id and Answer.OwnerUserId <> Question.OwnerUserId\nGROUP BY Question.Id\nORDER BY Age"},{"QuerySetId":428620,"Title":"all answers of a user on question of particular tags","Description":null,"QueryBody":"SELECT tags FROM posts WHERE ownerUserId = 1524450","CreationDate":"2016-01-28 00:40:45","validated":false,"QueryBody_Original":"SELECT  tags from posts where ownerUserId=1524450"},{"QuerySetId":428820,"Title":"Rate of Questions with Accepted Answers","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Total Questions\", SUM(CASE WHEN q.AcceptedAnswerId <> '' THEN 1 ELSE 0 END) AS \"Questions with Accepted Answers\", SUM(CASE WHEN q.AcceptedAnswerId <> '' THEN 1 ELSE 0 END) * 100.0 \/ COUNT(*) AS \"Percentage Accepted\" FROM Posts AS q WHERE q.PostTypeId = 1","CreationDate":"2016-01-28 06:40:46","validated":false,"QueryBody_Original":"SELECT \n    Count(*) AS [Total Questions],\n    SUM(CASE WHEN q.AcceptedAnswerId <> '' THEN 1 ELSE 0 END) AS [Questions with Accepted Answers],\n    SUM(CASE WHEN q.AcceptedAnswerId <> '' THEN 1 ELSE 0 END) * 100.0 \/ Count(*) AS [Percentage Accepted]\nFROM\n    Posts AS q\nWHERE\n    q.PostTypeId = 1"},{"QuerySetId":428823,"Title":"PayPal products analysis of Tag test","Description":null,"QueryBody":"SELECT * \/* count(PostTags.TagId) AS CountTags *\/ FROM Posts AS q \/* q.PostTypeId=1 AND a.PostTypeId=2 --AND t.TagName = 'paypal' *\/\/* a.OwnerUserId in (##UserId##) *\/  WHERE q.Id = 34963083 \/* 31805314 --a, 31629151-q *\/ AND q.CreationDate > '2016-01-01 00:00:00' AND q.CreationDate < '2017-01-01 00:00:00'","CreationDate":"2016-01-28 08:05:10","validated":false,"QueryBody_Original":"SELECT  \n\n--count(PostTags.TagId) AS CountTags\n*\nfrom Posts q\n\nwhere --q.PostTypeId=1 AND a.PostTypeId=2 --AND t.TagName = 'paypal'\n-- post type 2 means that post is an answer\n--AND \nq.Id = 34963083  --31805314 --a, 31629151-q\n--a.OwnerUserId in (##UserId##)\nAND\nq.CreationDate > '2016-01-01 00:00:00'\nAND\nq.CreationDate < '2017-01-01 00:00:00'\n--dateadd(month, datediff(month, 0, getdate()), 0) \n--group by PostTags.PostId --t.TagName\n--,dateadd(month, datediff(month, 0, q.CreationDate), 0)\n--order by Question DESC\n--, dateadd(month, datediff(month, 0, q.CreationDate), 0)"},{"QuerySetId":429127,"Title":"Posts with only a single, given tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, CreationDate, LastEditDate FROM Posts WHERE Tags = '<##Tag##>' ORDER BY Id","CreationDate":"2016-01-28 19:11:46","validated":false,"QueryBody_Original":"SELECT \n  Id as [Post Link],\n  Score,\n  ViewCount,\n  CreationDate,\n  LastEditDate\nfrom Posts\nwhere Tags = '<##Tag##>'\norder by Id asc"},{"QuerySetId":429332,"Title":"Subtract the preceding value from the current value using php while loop","Description":null,"QueryBody":"SELECT * FROM Posts WHERE id = '5312400'","CreationDate":"2016-01-29 13:51:21","validated":false,"QueryBody_Original":"SELECT  * from Posts where id='5312400';"},{"QuerySetId":429380,"Title":"Number of created accounts per week","Description":null,"QueryBody":"SELECT (TIME_TO_STR(CreationDate, '%y') + (TIME_TO_STR(CreationDate, '%W') - 1) \/ 52.0) AS YR_WK, COUNT(*) AS c FROM Users GROUP BY (TIME_TO_STR(CreationDate, '%y') + (TIME_TO_STR(CreationDate, '%W') - 1) \/ 52.0) ORDER BY (TIME_TO_STR(CreationDate, '%y') + (TIME_TO_STR(CreationDate, '%W') - 1) \/ 52.0)","CreationDate":"2016-01-29 15:55:22","validated":false,"QueryBody_Original":"SELECT  (datepart(yy, CreationDate) + (datepart(wk, CreationDate)-1) \/ 52.0) as YR_WK,\nCOUNT(*) as c  FROM Users\n\nGROUP BY (datepart(yy, CreationDate) + (datepart(wk, CreationDate)-1) \/ 52.0)\nORDER BY (datepart(yy, CreationDate) + (datepart(wk, CreationDate)-1) \/ 52.0)"},{"QuerySetId":429730,"Title":"What are the top voted comments on closed questions, and who made the comments?","Description":null,"QueryBody":"SELECT C.Score, C.UserId AS \"User Link\", C.PostId AS \"Post Link\", C.Id AS \"Comment Link\" FROM Comments AS C JOIN Posts AS p ON p.Id = c.PostId WHERE NOT p.ClosedDate IS NULL ORDER BY C.Score DESC","CreationDate":"2016-01-30 14:56:00","validated":false,"QueryBody_Original":"SELECT \n  C.Score,\n  C.UserId as [User Link],\n  C.PostId as [Post Link],\n  C.Id as [Comment Link]\nFROM\n  Comments as C\nJOIN Posts AS p\n    ON p.Id = c.PostId\n    WHERE p.ClosedDate IS NOT NULL\n  \nORDER BY C.Score DESC"},{"QuerySetId":430067,"Title":"Users with > 10k Reputation","Description":null,"QueryBody":"SELECT * FROM Users WHERE Users.Reputation > 1000 ORDER BY Users.Reputation DESC","CreationDate":"2019-09-17 06:11:48","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Users.Reputation > 1000 ORDER BY Users.Reputation DESC"},{"QuerySetId":430120,"Title":"Get count of users with <10k and >=10k reputation points","Description":null,"QueryBody":"SELECT u1.\"Less than 10k\", u2.\"10k or more\" FROM (SELECT COUNT(Id) AS \"Less than 10k\" FROM Users WHERE Reputation < 10000) AS u1, (SELECT COUNT(Id) AS \"10k or more\" FROM Users WHERE Reputation >= 10000) AS u2","CreationDate":"2016-01-31 17:00:36","validated":false,"QueryBody_Original":"SELECT  u1.[Less than 10k], u2.[10k or more]\nFrom\n(\n    SELECT Count(Id) As [Less than 10k]\n    From Users\n    Where Reputation<10000\n) As u1, \n(\n    SELECT Count(Id) As [10k or more]\n    From Users\n    Where Reputation>=10000\n) As u2"},{"QuerySetId":430676,"Title":"Top 50 users from France","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%france%' OR UPPER(Location) LIKE '%france' ORDER BY Reputation DESC LIMIT 2500","CreationDate":"2018-12-14 19:57:07","validated":false,"QueryBody_Original":"SELECT  TOP 2500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%france%'\n    OR UPPER(Location) LIKE '%france'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":431056,"Title":"Top 100 SO Users from India","Description":"I m on 81st position","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%india' AND LOWER(Id) LIKE '%taurus05' ORDER BY Reputation DESC LIMIT 100000","CreationDate":"2019-11-20 18:20:05","validated":false,"QueryBody_Original":"SELECT  TOP 100000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n  LOWER(Location) LIKE '%india' AND LOWER(Id) LIKE '%taurus05'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":431417,"Title":"Progress towards Favorite Question and Stellar Question badges","Description":"Questions need to be favorited 25 times for Favorite Question nad 100 times for Stellar Question","QueryBody":"SELECT Id AS \"Post Link\", FavoriteCount, CAST(CAST(CAST(FavoriteCount AS FLOAT) * 4 AS INT) AS TEXT(3)) + '%' AS Favorite, CAST(FavoriteCount AS TEXT(3)) + '%' AS Stellar FROM Posts WHERE PostTypeId = 1 AND FavoriteCount > 0 ORDER BY FavoriteCount DESC LIMIT 500","CreationDate":"2016-02-02 23:09:21","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    Id as [Post Link],\n    FavoriteCount,\n    CAST(CONVERT(INT, CAST(FavoriteCount as float) * 4) as VARCHAR(3)) + '%' as Favorite,\n    CAST(FavoriteCount as VARCHAR(3)) + '%' as Stellar\nFROM Posts\nWHERE PostTypeId=1 and FavoriteCount > 0\nORDER BY FavoriteCount DESC"},{"QuerySetId":431591,"Title":"Find answers of specific user by a keyword","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE PostTypeId = 2 AND OwnerUserId = 510662 ORDER BY CreationDate DESC","CreationDate":"2019-08-28 07:46:10","validated":false,"QueryBody_Original":"SELECT  Id As [Post Link], CreationDate\nFrom Posts\nWhere PostTypeId=2 and OwnerUserId=510662\nOrder By CreationDate Desc"},{"QuerySetId":431621,"Title":"Most used tags without excerpts","Description":null,"QueryBody":"SELECT * FROM Tags AS t WHERE t.Count > 0 AND t.ExcerptPostId IS NULL ORDER BY t.Count DESC LIMIT 50","CreationDate":"2016-02-03 17:29:30","validated":false,"QueryBody_Original":"SELECT  TOP 50 *\n\nFROM Tags t\n\nWHERE t.Count > 0\nAND t.ExcerptPostId IS NULL\nORDER BY t.Count DESC"},{"QuerySetId":431647,"Title":"Find all users with skill and location","Description":null,"QueryBody":"SELECT * FROM Users WHERE Users.Location = 'Sydney' AND LOWER(Users.DisplayName) LIKE '%recordpoint%' ORDER BY Reputation DESC","CreationDate":"2016-02-03 16:31:13","validated":false,"QueryBody_Original":"SELECT  \n    * \nFROM Users\nWHERE \nUsers.Location = 'Sydney' and\n     lower(Users.DisplayName) like '%recordpoint%'\nORDER BY\n    Reputation DESC"},{"QuerySetId":431856,"Title":"Lista de respostas positivas em perguntas negativas","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score AS \"Score Pergunta\", r.Score AS \"Score Resposta\", r.CreationDate AS \"Data Resposta\" FROM Posts AS p INNER JOIN Posts AS r ON p.Id = r.ParentId WHERE p.PostTypeId = 1 AND p.Score < 0 AND r.Score > 0 AND NOT p.ClosedDate IS NULL ORDER BY r.CreationDate DESC, r.Score DESC","CreationDate":"2016-02-03 21:39:55","validated":false,"QueryBody_Original":"SELECT \n    p.Id as [Post Link]\n   ,p.Score as [Score Pergunta]\n   ,r.Score as [Score Resposta]\n   ,r.CreationDate as [Data Resposta]\nfrom Posts p\n  inner join Posts r on p.Id = r.ParentId\nwhere p.PostTypeId = 1\nand p.Score < 0\nand r.Score > 0\nand p.ClosedDate is not null\norder by r.CreationDate desc, r.Score desc"},{"QuerySetId":431957,"Title":"Questions that formerly had the [rules-as-written] tag","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Tags, PostHistory.CreationDate FROM Posts, PostHistory WHERE Posts.Id = PostHistory.PostId AND NOT Posts.Tags LIKE '%<rules-as-written>%' AND PostHistory.Text LIKE '%<rules-as-written>%' ORDER BY Posts.Id DESC, PostHistory.CreationDate","CreationDate":"2016-02-04 07:22:34","validated":false,"QueryBody_Original":"SELECT  Posts.Id as [Post Link], Posts.Tags, PostHistory.CreationDate\nfrom Posts, PostHistory\nwhere Posts.Id = PostHistory.PostId\nand Posts.Tags not like '%<rules-as-written>%'\nand PostHistory.Text like '%<rules-as-written>%'\norder by Posts.Id DESC, PostHistory.CreationDate ASC;"},{"QuerySetId":432198,"Title":"number of unanswered SimpleItemDecorator questions","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE (Body LIKE '%[s,S]imple[i,I]tem[d,D]ecorator%') AND (Tags LIKE '%android%') AND (AnswerCount = 0)","CreationDate":"2016-02-04 22:07:59","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts \nWHERE (Body LIKE '%[s,S]imple[i,I]tem[d,D]ecorator%')\nAND (Tags LIKE '%android%')\nAND (AnswerCount=0);"},{"QuerySetId":432371,"Title":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0445 \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u0431\u0435\u0437 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430","Description":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u0431\u0435\u0437 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430(\u043d\u043e \u0441 >1 \u043e\u0442\u0432\u0435\u0442\u043e\u043c), \u0430\u0432\u0442\u043e\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435 \u0437\u0430\u0445\u043e\u0434\u0438\u043b\u0438 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u0438\u0439 Stack Overflow \u0431\u043e\u043b\u044c\u0448\u0435 \u043c\u0435\u0441\u044f\u0446\u0430 \u043d\u0430\u0437\u0430\u0434.","QueryBody":"SELECT COUNT(*) FROM Posts JOIN Users AS Owner ON OwnerUserId = Owner.Id WHERE PostTypeId = 1 AND AnswerCount > 0 AND AcceptedAnswerId IS NULL AND CommunityOwnedDate IS NULL AND Owner.LastAccessDate <= DATEADD(mm, -1, GETDATE())","CreationDate":"2016-02-05 08:51:37","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Posts\nJOIN Users AS Owner ON OwnerUserId = Owner.Id\nWHERE PostTypeId = 1\n  AND AnswerCount > 0\n  AND AcceptedAnswerId IS NULL\n  AND CommunityOwnedDate IS NULL\n  AND Owner.LastAccessDate <= DATEADD(mm, -1, GETDATE())"},{"QuerySetId":432376,"Title":"Count of abandoned questions on Russian Stack StackOverflow","Description":"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u0431\u0435\u0437 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430(\u043e\u0434\u043d\u0430\u043a\u043e \u0438\u043c\u0435\u044e\u0449\u0438\u0445 \u0445\u043e\u0442\u044c 1 \u043e\u0442\u0432\u0435\u0442), \u0430\u0432\u0442\u043e\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435 \u0437\u0430\u0445\u043e\u0434\u0438\u043b\u0438 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u0438\u0439 Stack Overflow \u0431\u043e\u043b\u044c\u0448\u0435 \u043c\u0435\u0441\u044f\u0446\u0430 \u043d\u0430\u0437\u0430\u0434.","QueryBody":"SELECT COUNT(*) FROM Posts JOIN Users AS Owner ON OwnerUserId = Owner.Id WHERE PostTypeId = 1 AND AnswerCount > 0 AND AcceptedAnswerId IS NULL AND CommunityOwnedDate IS NULL AND Owner.LastAccessDate <= DATEADD(mm, -1, GETDATE())","CreationDate":"2016-02-05 09:23:37","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Posts\nJOIN Users AS Owner ON OwnerUserId = Owner.Id\nWHERE PostTypeId = 1\n  AND AnswerCount > 0\n  AND AcceptedAnswerId IS NULL\n  AND CommunityOwnedDate IS NULL\n  AND Owner.LastAccessDate <= DATEADD(mm, -1, GETDATE())"},{"QuerySetId":432404,"Title":"Negatively scored answers on Stack Overflow - aggregation by last edit date","Description":"Calculates DV questions based on their last edit date *only*.","QueryBody":"SELECT p.Score, COUNT(*) AS downvoted_all_time, SUM(CASE WHEN DATEDIFF(CURRENT_TIMESTAMP(), p.LastEditDate) > 30 THEN 1 ELSE 0 END) AS active_last_thirty_days, SUM(CASE WHEN DATEDIFF(CURRENT_TIMESTAMP(), p.LastEditDate) > 60 THEN 1 ELSE 0 END) AS active_last_sixty_days, SUM(CASE WHEN DATEDIFF(CURRENT_TIMESTAMP(), p.LastEditDate) > 90 THEN 1 ELSE 0 END) AS active_last_ninety_days, SUM(CASE WHEN DATEDIFF(CURRENT_TIMESTAMP(), p.LastEditDate) > 180 THEN 1 ELSE 0 END) AS active_last_180_days, SUM(CASE WHEN DATEDIFF(CURRENT_TIMESTAMP(), p.LastEditDate) > 1 THEN 1 ELSE 0 END) AS active_last_year FROM Posts AS p LEFT JOIN Votes AS v ON p.Id = v.PostId WHERE p.PostTypeId = 2 GROUP BY p.Score HAVING p.Score <= -1 AND p.Score >= -100 ORDER BY p.Score DESC","CreationDate":"2016-02-05 13:50:09","validated":false,"QueryBody_Original":"SELECT  p.Score,\n  COUNT(*) AS downvoted_all_time,\n  SUM(CASE WHEN DATEDIFF(day, p.LastEditDate, getdate()) > 30 THEN 1 ELSE 0 END) AS active_last_thirty_days,\n  SUM(CASE WHEN DATEDIFF(day, p.LastEditDate, getdate()) > 60 THEN 1 ELSE 0 END) AS active_last_sixty_days,\n  SUM(CASE WHEN DATEDIFF(day, p.LastEditDate, getdate()) > 90 THEN 1 ELSE 0 END) AS active_last_ninety_days,\n  SUM(CASE WHEN DATEDIFF(day, p.LastEditDate, getdate()) > 180 THEN 1 ELSE 0 END) AS active_last_180_days,\n  SUM(CASE WHEN DATEDIFF(year, p.LastEditDate, getdate()) > 1 THEN 1 ELSE 0 END) AS active_last_year\nFROM Posts p\n  LEFT JOIN Votes v ON p.Id = v.PostId\nWHERE p.PostTypeId = 2\nGROUP BY p.Score\nHAVING p.Score <= -1 AND p.Score >= -100\nORDER BY p.Score DESC"},{"QuerySetId":432463,"Title":"Negatively scored answers on Stack Overflow - upvote, downvote, and acceptance breakouts ","Description":null,"QueryBody":"SELECT p.Score, COUNT(*) AS total_votes, SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS total_upvote_count, SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS total_downvote_count, SUM(CASE WHEN v.VoteTypeId = 1 THEN 1 ELSE 0 END) AS total_accepted_answer_count, CAST(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(*) * 100 AS average_pct_upvote, CAST(SUM(CASE WHEN v.VoteTypeId = 1 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(*) * 100 AS average_pct_accepted FROM Posts AS p LEFT JOIN Votes AS v ON p.Id = v.PostId WHERE p.PostTypeId = 2 GROUP BY p.Score HAVING p.Score <= -1 AND p.Score >= -100 ORDER BY p.Score DESC","CreationDate":"2017-09-26 23:38:48","validated":false,"QueryBody_Original":"SELECT \n  p.Score,\n  count(*) as total_votes,\n  SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS total_upvote_count,\n  SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS total_downvote_count,\n  SUM(CASE WHEN v.VoteTypeId = 1 THEN 1 ELSE 0 END) AS total_accepted_answer_count,\n  CAST(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS DECIMAL)\/count(*) * 100 AS average_pct_upvote,\n  CAST(SUM(CASE WHEN v.VoteTypeId = 1 THEN 1 ELSE 0 END) AS DECIMAL)\/count(*) * 100 AS average_pct_accepted\nFROM Posts p\n  LEFT JOIN Votes v ON p.Id = v.PostId\nWHERE p.PostTypeId = 2\nGROUP BY p.Score\nHAVING p.Score <= -1 AND p.Score >= -100\nORDER BY p.Score DESC"},{"QuerySetId":432698,"Title":"How many people are from India","Description":null,"QueryBody":"SELECT COUNT(location), MAX(Reputation) FROM users WHERE location LIKE '%India%'","CreationDate":"2016-02-06 08:33:50","validated":false,"QueryBody_Original":"SELECT  count(location), max(Reputation) from users where location like'%India%';"},{"QuerySetId":433398,"Title":"Top 30 SO Users from Pune","Description":"Top 30 SO Users from Pune, Maharashtra, India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%surat%' OR UPPER(Location) LIKE '%SURAT%' OR Location LIKE '%surat%' AND Reputation >= 2500 ORDER BY Reputation DESC LIMIT 30","CreationDate":"2016-12-14 15:21:29","validated":false,"QueryBody_Original":"SELECT  TOP 30\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%surat%'\n    OR UPPER(Location) LIKE '%SURAT%'\n    or Location like '%surat%'\n    AND Reputation >= 2500\nORDER BY\n    Reputation DESC;"},{"QuerySetId":433533,"Title":"Users by \"Related\" and \"therein\" links in comments","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(Id) AS \"Links in comments\" FROM Comments WHERE (Text LIKE '%therein%' OR Text LIKE '%Related%' OR Text LIKE '%relevant%' OR Text LIKE '%duplicate%') GROUP BY UserId ORDER BY COUNT(Id) DESC","CreationDate":"2018-08-08 05:19:04","validated":false,"QueryBody_Original":"SELECT \n  UserId AS [User Link],\n  COUNT(Id) AS 'Links in comments'\nFROM Comments\nWHERE (Text LIKE '%therein%'\n   OR  Text LIKE '%Related%'\n   OR  Text LIKE '%relevant%'\n   OR  Text LIKE '%duplicate%')\nGROUP BY UserId\nORDER BY COUNT(Id) DESC"},{"QuerySetId":433534,"Title":"Users by in-site links in comments","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(Id) AS \"Links in comments\" FROM Comments WHERE Text LIKE '%http:\/\/physics.stackexchange.com\/%' OR Text LIKE '%https:\/\/physics.stackexchange.com\/%' GROUP BY UserId ORDER BY COUNT(Id) DESC","CreationDate":"2017-05-27 23:58:40","validated":false,"QueryBody_Original":"SELECT \n  UserId AS [User Link],\n  COUNT(Id) AS 'Links in comments'\nFROM Comments\nWHERE Text LIKE '%http:\/\/physics.stackexchange.com\/%'\n   OR Text LIKE '%https:\/\/physics.stackexchange.com\/%'\nGROUP BY UserId\nORDER BY COUNT(Id) DESC"},{"QuerySetId":433535,"Title":"Users by number of tag edits","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(Id) FROM PostHistory WHERE PostHistoryTypeId = 6 \/* Edit tags *\/ GROUP BY UserId ORDER BY COUNT(Id) DESC","CreationDate":"2016-02-09 03:19:12","validated":false,"QueryBody_Original":"SELECT  \n  UserId AS [User Link],\n  COUNT(Id)\nFROM PostHistory\nWHERE PostHistoryTypeId=6 --Edit tags\nGROUP BY UserId\nORDER BY COUNT(Id) DESC"},{"QuerySetId":433569,"Title":"Something to edit: \"Thank you\" in the body of a question","Description":"Enter Query Description\r\n","QueryBody":"SELECT id AS \"Post Link\" FROM posts WHERE body LIKE '%Thank you%' OR body LIKE '%thank you%'","CreationDate":"2016-02-22 02:14:10","validated":false,"QueryBody_Original":"SELECT  id [Post Link] from posts where body like '%Thank you%' or body like '%thank you%'"},{"QuerySetId":434595,"Title":"Identification Request Questions Containing Images Or Links","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CAST(COALESCE(AcceptedAnswerId, 0) AS INT) AS HasAcceptedAnswer, Score FROM Posts WHERE Tags LIKE '_identification-request_' AND ClosedDate IS NULL AND (Body LIKE '%<img%' OR Body LIKE '%<a %') ORDER BY HasAcceptedAnswer, Score, CreationDate","CreationDate":"2016-02-28 09:14:39","validated":false,"QueryBody_Original":"SELECT  Id [Post Link],\n       CAST(COALESCE(AcceptedAnswerId, 0) AS bit) AS HasAcceptedAnswer,\n       Score\nFROM Posts\nWHERE Tags LIKE '_identification-request_'\n      AND ClosedDate IS NULL\n      AND (Body LIKE '%<img%' OR Body LIKE '%<a %')\nORDER BY HasAcceptedAnswer ASC,\n         Score ASC,\n         CreationDate ASC"},{"QuerySetId":434664,"Title":"Top 100 users from bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%bd' OR LOWER(Location) LIKE '%dhaka%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-02-14 12:07:03","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR LOWER(Location) LIKE '%bd'\n    OR LOWER(Location) LIKE '%dhaka%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":435379,"Title":"Users with Most 'Popular Question' Badges ","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", 'site:\/\/help\/badges\/26\/popularquestion?userid=' + CAST(UserId AS TEXT) + '|Badges Links', COUNT(UserId) AS \"Number of Badge\" FROM Badges WHERE Name = 'Popular Question' GROUP BY UserId ORDER BY COUNT(UserId) DESC","CreationDate":"2016-02-12 03:27:21","validated":false,"QueryBody_Original":"SELECT \n  UserId [User Link],\n  'site:\/\/help\/badges\/26\/popularquestion?userid=' + CAST(UserId AS nvarchar) + '|Badges Links',\n  COUNT(UserId) AS [Number of Badge]\n\nFROM\n  Badges\n\nWHERE\n  Name = 'Popular Question'\n\nGROUP BY\n  UserId\n  \nORDER BY\n  COUNT(UserId) DESC"},{"QuerySetId":435447,"Title":"Git Top 100 By Vote","Description":null,"QueryBody":"SELECT Id, Title, Tags, ClosedDate, FavoriteCount, ViewCount, Score FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%git%' ORDER BY Score DESC, FavoriteCount DESC LIMIT 100","CreationDate":"2016-02-12 10:45:01","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id,Title,Tags,ClosedDate,FavoriteCount,ViewCount,Score \nFROM Posts \nWHERE PostTypeId = 1 \nAND Tags LIKE '%git%' \n \nORDER By Score  DESC ,   FavoriteCount DESC"},{"QuerySetId":435496,"Title":"Evolution of questions and accepted answers in a tag per month","Description":null,"QueryBody":"SELECT YEAR(q.CreationDate) + MONTH(q.CreationDate) \/ 12.0 AS \"M\", COUNT(*) AS \"Questions\", ROUND(COUNT(q.AcceptedAnswerId) * 100.0 \/ COUNT(*), 2) AS \"% Accepted\" FROM Posts AS q WHERE q.PostTypeId = 1 AND q.Tags LIKE '%##Tag##%' GROUP BY YEAR(q.CreationDate), MONTH(q.CreationDate) ORDER BY YEAR(q.CreationDate), MONTH(q.CreationDate)","CreationDate":"2016-02-12 17:59:18","validated":false,"QueryBody_Original":"SELECT \n  year(q.CreationDate) + month(q.CreationDate) \/ 12.0 as [M],\n  --convert(char(7), min(CreationDate), 20) as [Month],\n  count(*) as [Questions],\n  round(count(q.AcceptedAnswerId) * 100.0 \/ count(*), 2) as [% Accepted]\nfrom Posts q\nwhere q.PostTypeId = 1 and q.Tags like '%##Tag##%'\ngroup by year(q.CreationDate), month(q.CreationDate)\norder by year(q.CreationDate) asc, month(q.CreationDate) asc"},{"QuerySetId":435514,"Title":"Accept rate in a tag vs global accept rate per month","Description":null,"QueryBody":"SELECT YEAR(q.CreationDate) + MONTH(q.CreationDate) \/ 12.0 AS \"M\", ROUND(COUNT(q.AcceptedAnswerId) * 100.0 \/ COUNT(*), 2) AS \"Global % accepted\", ROUND(COUNT(CASE WHEN NOT q.AcceptedAnswerId IS NULL AND q.Tags LIKE '%##Tag##%' THEN 1 ELSE NULL END) * 100.0 \/ NULLIF(COUNT(CASE WHEN q.Tags LIKE '%##Tag##%' THEN 1 ELSE NULL END), 0), 2) AS \"% accepted in tag\" FROM Posts AS q WHERE q.PostTypeId = 1 GROUP BY YEAR(q.CreationDate), MONTH(q.CreationDate) ORDER BY YEAR(q.CreationDate), MONTH(q.CreationDate)","CreationDate":"2016-02-12 18:15:57","validated":false,"QueryBody_Original":"SELECT \n  year(q.CreationDate) + month(q.CreationDate) \/ 12.0 as [M],\n  --convert(char(7), min(CreationDate), 20) as [Month],\n  round(count(q.AcceptedAnswerId) * 100.0 \/ count(*), 2) as [Global % accepted],\n  round(count(iif(q.AcceptedAnswerId is not null and q.Tags like '%##Tag##%', 1, null)) * 100.0 \/ nullif(count(iif(q.Tags like '%##Tag##%', 1, null)), 0), 2) as [% accepted in tag]\nfrom Posts q\nwhere q.PostTypeId = 1\ngroup by year(q.CreationDate), month(q.CreationDate)\norder by year(q.CreationDate) asc, month(q.CreationDate) asc"},{"QuerySetId":435646,"Title":"top 100 users by reputation who haven't asked any questions","Description":null,"QueryBody":"SELECT Ranking = ROW_NUMBER() OVER (ORDER BY Reputation DESC), u.id AS \"User Link\", u.Reputation FROM Users AS u WHERE NOT u.Id IN (SELECT DISTINCT OwnerUserId FROM Posts WHERE PostTypeId = 1 AND OwnerUserId <> '') ORDER BY u.Reputation DESC LIMIT 100","CreationDate":"2016-02-12 23:35:08","validated":false,"QueryBody_Original":"SELECT  TOP 100\n       Ranking = ROW_NUMBER() OVER(ORDER BY Reputation DESC),\n       u.id as [User Link], \n       u.Reputation \nfrom Users u\nwhere u.Id not in\n  (SELECT distinct OwnerUserId from Posts where PostTypeId = 1\n         and OwnerUserId != '')\norder by u.Reputation DESC;"},{"QuerySetId":435662,"Title":"Global accept rate by month","Description":null,"QueryBody":"SELECT YEAR(q.CreationDate) + MONTH(q.CreationDate) \/ 12.0 AS \"M\", ROUND(COUNT(q.AcceptedAnswerId) * 100.0 \/ COUNT(*), 2) AS \"Global % accepted\" FROM Posts AS q WHERE q.PostTypeId = 1 GROUP BY YEAR(q.CreationDate), MONTH(q.CreationDate) ORDER BY YEAR(q.CreationDate), MONTH(q.CreationDate)","CreationDate":"2016-02-13 01:05:43","validated":false,"QueryBody_Original":"SELECT \n  year(q.CreationDate) + month(q.CreationDate) \/ 12.0 as [M],\n  round(count(q.AcceptedAnswerId) * 100.0 \/ count(*), 2) as [Global % accepted]\nfrom Posts q\nwhere q.PostTypeId = 1\ngroup by year(q.CreationDate), month(q.CreationDate)\norder by year(q.CreationDate) asc, month(q.CreationDate) asc"},{"QuerySetId":435684,"Title":"Questions and Answers Score Distribution","Description":null,"QueryBody":"SELECT PostTypeId, Score, COUNT(Id) FROM (SELECT CASE WHEN Score < 0 THEN '0-        < 0' WHEN Score BETWEEN 0 AND 100 THEN '1-      0-100' WHEN Score BETWEEN 101 AND 500 THEN '2-    101-500' WHEN Score BETWEEN 501 AND 1000 THEN '3-   501-1000' WHEN Score BETWEEN 1001 AND 2000 THEN '4-  1001-2000' WHEN Score BETWEEN 2001 AND 5000 THEN '5-  2001-5000' WHEN Score BETWEEN 5001 AND 10000 THEN '6- 5001-10000' ELSE '7-     10000+' END AS \"Score\", Id, PostTypeId FROM Posts WHERE PostTypeId IN (1, 2)) AS t GROUP BY PostTypeId, Score ORDER BY PostTypeId, Score","CreationDate":"2016-02-13 02:16:38","validated":false,"QueryBody_Original":"SELECT  PostTypeId, Score, count(Id) from (\nSELECT\n     CASE\n        WHEN Score < 0                    THEN '0-        < 0'\n        WHEN Score BETWEEN    0 AND   100 THEN '1-      0-100'\n        WHEN Score BETWEEN  101 AND   500 THEN '2-    101-500'\n        WHEN Score BETWEEN  501 AND  1000 THEN '3-   501-1000'\n        WHEN Score BETWEEN 1001 AND  2000 THEN '4-  1001-2000'\n        WHEN Score BETWEEN 2001 AND  5000 THEN '5-  2001-5000'\n        WHEN Score BETWEEN 5001 AND 10000 THEN '6- 5001-10000'\n                                          ELSE '7-     10000+'\n     END AS 'Score',\n     Id,\n     PostTypeId\nFROM\n    Posts\nWHERE\n    PostTypeId IN (1,2)\n    ) t\nGROUP BY\n    PostTypeId, Score\nORDER BY\n    PostTypeId asc,\n    Score asc"},{"QuerySetId":436547,"Title":"Top answers on UX Stack Exchange","Description":null,"QueryBody":"SELECT CONCAT('http:\/\/dba.stackexchange.com\/a\/', Posts.Id) AS \"Url\", Posts.Score, Users.DisplayName FROM Posts JOIN Users ON (Posts.OwnerUserId = Users.Id) WHERE PostTypeId = 2 ORDER BY Score DESC LIMIT 100","CreationDate":"2016-02-14 21:39:52","validated":false,"QueryBody_Original":"SELECT  TOP 100 CONCAT('http:\/\/dba.stackexchange.com\/a\/', Posts.Id) AS 'Url', Posts.Score, Users.DisplayName FROM Posts JOIN Users ON (Posts.OwnerUserId = Users.Id) WHERE PostTypeId = 2 ORDER BY Score DESC"},{"QuerySetId":436697,"Title":"How many people can participate in an election","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE Reputation >= 150","CreationDate":"2016-02-15 13:02:15","validated":false,"QueryBody_Original":"SELECT \n  count(*)\nFROM \n  Users\nWHERE\n  Reputation>=150"},{"QuerySetId":436729,"Title":"Average Character Length of Questions and Answers By Month","Description":null,"QueryBody":"SELECT MONTH(CreationDate) AS \"Month\", AVG(CASE WHEN Posts.posttypeid = 1 THEN LENGTH(Posts.Body) ELSE 0 END) AS QuestionLength, AVG(CASE WHEN Posts.posttypeid = 2 THEN LENGTH(Posts.Body) ELSE 0 END) AS AnswerLength FROM Posts WHERE YEAR(CreationDate) >= 2015 AND YEAR(CreationDate) < 2016 GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2016-02-15 16:17:59","validated":false,"QueryBody_Original":"SELECT \n  MONTH(CreationDate) AS [Month],\n  AVG(\n    CASE WHEN Posts.posttypeid = 1\n      THEN LEN(Posts.Body)\n      ELSE 0 \n    END\n  ) AS QuestionLength,\n  AVG(\n    CASE WHEN Posts.posttypeid = 2\n      THEN LEN(Posts.Body)\n      ELSE 0\n    END\n  ) AS AnswerLength\nFROM Posts\nWHERE\n  YEAR(CreationDate) >= 2015 AND\n  YEAR(CreationDate) < 2016\nGROUP BY YEAR(CreationDate), MONTH(CreationDate)\nORDER BY YEAR(CreationDate), MONTH(CreationDate)"},{"QuerySetId":437453,"Title":"Voting overview using Constituent Badge","Description":null,"QueryBody":"SELECT Hour, COUNT(*) AS Num FROM (SELECT DATE(0, 'DATEDIFF(b.Date, 0) hour') AS Hour FROM Badges AS b WHERE Name LIKE '%Constituent%') AS VoteHours GROUP BY Hour ORDER BY Hour DESC","CreationDate":"2016-08-19 10:30:31","validated":false,"QueryBody_Original":"SELECT  Hour, Count(*) AS Num\nFROM (\n  SELECT DATEADD(hour, DATEDIFF(hour, 0, b.Date), 0) AS Hour\n  FROM Badges b\n  WHERE Name LIKE '%Constituent%') AS VoteHours\nGROUP BY Hour\nORDER BY Hour DESC"},{"QuerySetId":437911,"Title":"Top 50 Gold Badge Users","Description":null,"QueryBody":"SELECT b.userid AS \"User Link\", SUM(SIGN(b.tagbased)) AS TagBadgeCount, COUNT(*) - SUM(SIGN(b.tagbased)) AS NonTagBadgeCount, COUNT(*) AS TotalBadgeCount FROM badges AS b WHERE b.class = 1 GROUP BY b.userid ORDER BY COUNT(*) DESC LIMIT 50","CreationDate":"2016-02-17 17:43:50","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  b.userid AS [User Link],\n  SUM(SIGN(b.tagbased)) AS TagBadgeCount,\n  COUNT(*) - SUM(SIGN(b.tagbased)) AS NonTagBadgeCount,\n  COUNT(*) AS TotalBadgeCount\nFROM badges b\nWHERE b.class = 1\nGROUP BY b.userid\nORDER BY COUNT(*) DESC"},{"QuerySetId":438230,"Title":"Top 300 SO Users from Pune","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%pune%' OR UPPER(Location) LIKE '%PUNE%' OR Location LIKE '%Pune%' AND Reputation >= 1000 ORDER BY Reputation DESC LIMIT 300","CreationDate":"2016-02-18 02:27:41","validated":false,"QueryBody_Original":"SELECT  TOP 300\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%pune%'\n    OR UPPER(Location) LIKE '%PUNE%'\n    or Location like '%Pune%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":439262,"Title":"Total number of users (per site)","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"total users\", SUM(u.UpVotes) AS \"total upvotes\", SUM(u.DownVotes) AS \"total downvotes\" FROM Users AS u","CreationDate":"2016-02-20 00:27:31","validated":false,"QueryBody_Original":"SELECT  count(u.Id) as \"total users\", sum(u.UpVotes) as \"total upvotes\", sum(u.DownVotes) as \"total downvotes\" FROM Users u"},{"QuerySetId":439426,"Title":"User ranking for questions only, simple - no check for CW or rep cap","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", COUNT(DISTINCT p.Id) AS \"Total Questions\", SUM(CASE WHEN votetypeid = 2 THEN 5 \/* up vote *\/ WHEN votetypeid = 3 THEN -2 \/* down vote *\/ END) + (SELECT COUNT(*) FROM posts AS acc WHERE acc.owneruserid = p.owneruserid AND NOT acceptedanswerid IS NULL) * 2 \/* accept *\/ AS \"Total Reputation\" FROM Posts AS p INNER JOIN Votes AS v ON v.PostId = p.Id AND v.VoteTypeId IN (2, 3) WHERE NOT p.OwnerUserId IS NULL AND p.OwnerUserId > 0 AND p.PostTypeId = 1 \/* Questions *\/ GROUP BY p.OwnerUserId ORDER BY \"Total Reputation\" DESC LIMIT 100","CreationDate":"2016-02-20 23:02:07","validated":false,"QueryBody_Original":"SELECT  Top 100 \n       p.OwnerUserId As [User Link]\n     , Count(Distinct p.Id) As [Total Questions]\n     , sum(\n      case \n      when votetypeid = 2 then 5  -- up vote\n      when votetypeid = 3 then -2 -- down vote\n      end \n     )  + (SELECT count(*) \n             from posts acc\n             where acc.owneruserid = p.owneruserid\n             and acceptedanswerid is not null\n             ) * 2  -- accept\n             As [Total Reputation]\nFrom Posts p \nInner Join Votes v On v.PostId=p.Id \nAnd v.VoteTypeId in (2,3) --upvotes\nWhere p.OwnerUserId Is Not Null \nAnd p.OwnerUserId > 0 \nAnd p.PostTypeId=1 --Questions\nGroup By p.OwnerUserId\nOrder By [Total Reputation] Desc"},{"QuerySetId":439478,"Title":"Getting all coments on a site","Description":null,"QueryBody":"SELECT Score, PostId AS \"Post Link\", Id AS \"Comment Link\", UserId AS \"User Link\" FROM Comments ORDER BY Score DESC LIMIT 10000","CreationDate":"2016-02-21 11:04:09","validated":false,"QueryBody_Original":"SELECT  TOP 10000 Score,\n               PostId AS [Post Link],\n               Id     AS [Comment Link],\n               UserId AS [User Link]\nFROM   Comments\nORDER  BY Score DESC"},{"QuerySetId":439776,"Title":"Top 600 SO Users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%belgaum' ORDER BY Reputation DESC LIMIT 600","CreationDate":"2016-05-30 19:17:16","validated":false,"QueryBody_Original":"SELECT  TOP 600\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%belgaum'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":439936,"Title":"Users with the most Necromancer and Revival badges combined","Description":"Most long tail aficionados\r\n","QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS Badges FROM Badges WHERE Badges.Name = 'Necromancer' OR Badges.Name = 'Revival' GROUP BY UserId ORDER BY Badges DESC LIMIT 100","CreationDate":"2016-02-23 07:07:58","validated":false,"QueryBody_Original":"SELECT  TOP 100 UserId AS [User Link], count(*) AS Badges\nFROM Badges\nWHERE \nBadges.Name = 'Necromancer'\nOR \nBadges.Name = 'Revival'\nGROUP BY UserId\nORDER BY Badges DESC"},{"QuerySetId":440308,"Title":"Total Number of Users with Small Rep","Description":null,"QueryBody":"SELECT COUNT(*) AS N, Reputation FROM Users WHERE Reputation < 2100 GROUP BY Reputation ORDER BY Reputation","CreationDate":"2016-02-23 20:47:12","validated":false,"QueryBody_Original":"SELECT  COUNT(*) AS N, Reputation \nFROM Users WHERE Reputation < 2100 \nGROUP BY Reputation\nORDER BY Reputation"},{"QuerySetId":440730,"Title":"Top SO Users from Jhalawar","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%kotar Rajasthan%' OR UPPER(Location) LIKE '%KOTA Rajasthan%' OR Location LIKE '%Kota Rajasthan%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2016-02-24 10:28:10","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%kotar Rajasthan%'\n    OR UPPER(Location) LIKE '%KOTA Rajasthan%'\n    or Location like '%Kota Rajasthan%'    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":441383,"Title":"Top 200 users from Taiwan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%taiwan%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2016-02-25 15:43:36","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%taiwan%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":441762,"Title":"Edits in a year, other than of own posts","Description":null,"QueryBody":"SELECT MIN(ph.UserDisplayName), COUNT(*) AS edits FROM PostHistory AS ph JOIN Posts AS p ON p.Id = PostId\/* questions and answers *\/  WHERE PostHistoryTypeId = 5 \/* \"Edit Body\" *\/ AND PostTypeId IN (1, 2) AND p.DeletionDate IS NULL AND p.OwnerUserId <> ph.UserId GROUP BY ph.UserId ORDER BY edits DESC","CreationDate":"2017-02-11 16:53:50","validated":false,"QueryBody_Original":"SELECT  \nmin(ph.UserDisplayName), count(*) edits\nfrom PostHistory ph\n     join Posts p on p.Id = PostId\nwhere PostHistoryTypeId = 5 -- \"Edit Body\"\n      and PostTypeId in (1,2) -- questions and answers\n      and p.DeletionDate is null\n      and p.OwnerUserId <> ph.UserId\ngroup by ph.UserId\norder by edits desc;"},{"QuerySetId":442438,"Title":"Top 200 users from Iran","Description":"Lists the top 200 users (ranked by reputation) that are located in Iran according to their profile information.","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Iran%' ORDER BY reputation DESC LIMIT 200","CreationDate":"2019-01-19 21:18:21","validated":false,"QueryBody_Original":"SELECT  TOP 200\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n \n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Iran%'\n   --OR Location like N'%IRR%'\n   --OR Location like N'%Tehran%'\nORDER BY\n   reputation DESC"},{"QuerySetId":443212,"Title":"Votes between 2014-05 to 2014-10","Description":null,"QueryBody":"SELECT * FROM votes WHERE creationdate >= '2014-05-01' AND creationdate <= '2014-10-01' AND NOT userid IS NULL ORDER BY id","CreationDate":"2016-02-29 17:12:16","validated":false,"QueryBody_Original":"SELECT  * from votes where creationdate>='2014-05-01' and creationdate<='2014-10-01' and userid is not null order by id"},{"QuerySetId":443223,"Title":"votes between 2014-05 to 2014-10","Description":null,"QueryBody":"SELECT * FROM votes WHERE creationdate >= '2014-05-01' AND creationdate < '2014-10-01' AND NOT userid IS NULL ORDER BY id","CreationDate":"2016-02-29 17:12:58","validated":false,"QueryBody_Original":"SELECT  * from votes where creationdate>='2014-05-01' and creationdate<'2014-10-01' and userid is not null order by id"},{"QuerySetId":444403,"Title":"SELECT TOP 10 Id AS Post Link FROM Posts ORDER BY CreationDate DESC","Description":null,"QueryBody":"SELECT Id AS PostLink FROM Posts ORDER BY CreationDate DESC LIMIT 10","CreationDate":"2016-03-03 06:38:39","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id AS PostLink FROM Posts ORDER BY CreationDate DESC"},{"QuerySetId":444479,"Title":"A dataset for expert finding","Description":null,"QueryBody":"SELECT Id, AcceptedAnswerId, AnswerCount, Title FROM Posts WHERE (Posts.CreationDate > '2015-01-01' AND Posts.CreationDate < '2015-06-01') AND Posts.PostTypeId = '1'","CreationDate":"2016-03-17 17:51:15","validated":false,"QueryBody_Original":"SELECT  Id, AcceptedAnswerId , AnswerCount, Title  from Posts WHERE (Posts.CreationDate > '2015-01-01' AND Posts.CreationDate < '2015-06-01') AND Posts.PostTypeId = '1'"},{"QuerySetId":444496,"Title":"SO users from Des Moines","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%des moines%' ORDER BY Reputation DESC","CreationDate":"2016-03-03 14:22:53","validated":false,"QueryBody_Original":"SELECT  \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id As [User Link], \n    Reputation,\n    Location\nFROM Users\nWHERE LOWER(Location) LIKE '%des moines%'\nORDER BY Reputation DESC"},{"QuerySetId":444835,"Title":"Tags that have to do with Python","Description":null,"QueryBody":"SELECT Id, TagName FROM Tags WHERE LOWER(TagName) LIKE '%python%'","CreationDate":"2016-03-04 02:32:10","validated":false,"QueryBody_Original":"SELECT  Id, TagName FROM Tags WHERE lower(TagName) LIKE '%python%'"},{"QuerySetId":445054,"Title":"Find Posts with MathJax in title (search for $)","Description":null,"QueryBody":"SELECT id AS \"Post Link\", score, Id FROM posts WHERE title LIKE '%$%' ORDER BY score DESC","CreationDate":"2016-03-04 11:47:59","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], score, Id\nfrom posts \nwhere title like '%$%'\nORDER BY score DESC"},{"QuerySetId":445456,"Title":"Top 20 Display Names on Stack Overflow","Description":null,"QueryBody":"SELECT DisplayName, COUNT(DisplayName) FROM Users GROUP BY DisplayName ORDER BY COUNT(DisplayName) DESC LIMIT 20","CreationDate":"2016-03-04 21:56:09","validated":false,"QueryBody_Original":"SELECT  TOP 20 DisplayName, COUNT(DisplayName) FROM Users\n  GROUP BY DisplayName\n  ORDER BY COUNT(DisplayName) DESC"},{"QuerySetId":446741,"Title":"How do I query SEDE for user names with ZALGO Unicode abuse?","Description":"http:\/\/meta.stackexchange.com\/questions\/276551\/how-do-i-query-sede-for-user-names-with-zalgo-unicode-abuse\/277871#277871","QueryBody":"SELECT id, CAST(displayname AS TEXT(150)) COLLATE Latin1_General_BIN FROM users WHERE NOT LOWER(SUBSTRING(DisplayName, 1, 1)) IN ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0')","CreationDate":"2016-03-08 01:08:55","validated":false,"QueryBody_Original":"SELECT  id, cast(displayname as varchar(150)) collate Latin1_General_BIN\nfrom users\nwhere \nLower(Substring(DisplayName, 1, 1)) Not In \n  ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', \n  'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', \n  '3', '4', '5', '6', '7', '8', '9', '0')"},{"QuerySetId":446948,"Title":"Users receiving multiple bounties from the same person","Description":null,"QueryBody":"SELECT CAST(N'2016-03-08T08:00:00' AS DATETIME)","CreationDate":"2016-03-08 23:34:59","validated":false,"QueryBody_Original":"SELECT  CAST(N'2016-03-08T08:00:00' AS DATETIME)"},{"QuerySetId":447005,"Title":"How old on average are the answers with 10 votes or more in 2015?","Description":null,"QueryBody":"SELECT AVG(DATEDIFF(CURRENT_TIMESTAMP(), p2.CreationDate)), COUNT(*) FROM (SELECT p.Id, v.CreationDate FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId AND p.PostTypeId = 2 \/* Answer *\/ AND v.VoteTypeId = 2 \/* UpMod *\/ WHERE v.CreationDate >= '2015\/01\/01' AND v.CreationDate <= '2015\/12\/31 23:59:59.999' GROUP BY p.Id, v.CreationDate HAVING COUNT(v.Id) >= 10) AS t INNER JOIN Posts AS p2 ON p2.Id = t.Id GROUP BY p2.Id ORDER BY 1","CreationDate":"2016-03-08 21:02:38","validated":false,"QueryBody_Original":"SELECT  \n   AVG(DATEDIFF(d, p2.CreationDate, GETDATE())),\n   count(*)\nFROM (\n  SELECT  \n     p.Id,\n     v.CreationDate\n  FROM Posts p\n  INNER JOIN Votes v\n      ON p.Id = v.PostId\n      AND p.PostTypeId = 2 -- Answer\n      AND v.VoteTypeId = 2 -- UpMod\n  WHERE\n     v.CreationDate >= '2015\/01\/01'\n  AND  \n     v.CreationDate <= '2015\/12\/31 23:59:59.999'\n  GROUP BY\n     p.Id, v.CreationDate\n  HAVING\n     count(v.Id) >= 10\n) t\nINNER JOIN Posts p2 ON p2.Id = t.Id\nGROUP BY\n     p2.Id\nORDER BY\n    1 ASC"},{"QuerySetId":447061,"Title":"Users from romania by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS seqnum, Id AS \"UserId\", DisplayName, Reputation, WebsiteUrl FROM Users WHERE LOWER(Location) LIKE '%romania%'","CreationDate":"2016-03-08 19:04:59","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS seqnum, \n             Id AS [UserId], DisplayName,Reputation, WebsiteUrl\n      FROM Users\n      WHERE LOWER(Location) LIKE '%romania%'"},{"QuerySetId":447394,"Title":"Questions upvoted by low vote users only","Description":"To investigate CodeGray's claim in http:\/\/meta.stackoverflow.com\/a\/318576\/794234 that LQ questions are being upvoted by a subset of low rep users.","QueryBody":"SELECT v.PostId AS \"Post Link\" FROM Votes AS v INNER JOIN (SELECT Id, Reputation FROM Users) AS u ON u.Id = v.UserId GROUP BY v.PostId HAVING SUM(CASE WHEN u.Reputation < 200 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN u.Reputation >= 200 THEN 1 ELSE 0 END) = 0","CreationDate":"2016-03-09 12:51:18","validated":false,"QueryBody_Original":"SELECT \n  v.PostId as [Post Link]\n\nfrom\n  Votes v\n  inner join (SELECT Id, Reputation from Users) u on u.Id = v.UserId\n  \ngroup by\n  v.PostId\n  \nhaving\n  sum(case when u.Reputation < 200 then 1 else 0 end) > 0\n  and sum(case when u.Reputation >= 200 then 1 else 0 end) = 0"},{"QuerySetId":447993,"Title":"Find good questions with low answers by creation date.","Description":null,"QueryBody":"SELECT \"Id\" AS \"Post Link\", Id, Score, CreationDate, AnswerCount FROM Posts WHERE AnswerCount = 0 AND Score = 0 AND PostTypeId = 1 AND CreationDate > '2017-10-01 00:00:00' ORDER BY CreationDate DESC","CreationDate":"2017-10-07 17:05:04","validated":false,"QueryBody_Original":"SELECT  [Id] as [Post Link], Id, Score, CreationDate, AnswerCount\nfrom Posts\nwhere AnswerCount = 0\nand Score = 0\nand PostTypeId = 1\nand CreationDate > '2017-10-01 00:00:00'\norder by CreationDate desc"},{"QuerySetId":448279,"Title":"Resolution time for Apache Isis","Description":null,"QueryBody":"SELECT questions.Id, questions.Tags, questions.CreationDate, answers.CreationDate AS AnswerDate, (answers.CreationDate - questions.CreationDate) AS Duration FROM Posts AS questions LEFT JOIN Posts AS answers ON questions.AcceptedAnswerId = answers.Id WHERE questions.Tags LIKE '%isis%'","CreationDate":"2016-03-10 17:20:32","validated":false,"QueryBody_Original":"SELECT  \n  questions.Id, questions.Tags, questions.CreationDate,\n  answers.CreationDate AS AnswerDate, \n  (answers.CreationDate - questions.CreationDate) AS Duration\nFROM \n  Posts AS questions \n  LEFT JOIN Posts AS answers ON questions.AcceptedAnswerId=answers.Id\nWHERE \n  questions.Tags LIKE '%isis%';"},{"QuerySetId":448475,"Title":"Tags with excerpt but no wiki","Description":null,"QueryBody":"SELECT t.Id, t.Count, t.TagName, ep.Body, wp.Body FROM Tags AS t LEFT JOIN Posts AS ep ON ep.Id = t.ExcerptPostId LEFT JOIN Posts AS wp ON wp.Id = t.WikiPostId WHERE (NOT ep.Body IS NULL AND ep.Body <> '') AND (wp.Body IS NULL OR wp.Body = '') ORDER BY t.Count DESC, t.TagName","CreationDate":"2016-03-11 06:31:12","validated":false,"QueryBody_Original":"SELECT  t.Id, t.Count, t.TagName, ep.Body, wp.Body\nFROM Tags t\nLEFT JOIN Posts ep ON ep.Id = t.ExcerptPostId\nLEFT JOIN Posts wp ON wp.Id = t.WikiPostId\nWHERE \n(ep.Body IS NOT NULL AND ep.Body <> '')\nAND (wp.Body IS NULL OR wp.Body = '')\nORDER BY t.Count DESC, t.TagName"},{"QuerySetId":448494,"Title":"query add tag change from 2012 to 2016","Description":null,"QueryBody":"SELECT ot.postid, ot.creationdate, ot.text, te.creationdate, te.text, te.comment FROM PostHistory AS ot JOIN PostHistory AS te ON ot.PostId = te.PostId WHERE te.PostHistoryTypeId = 6 AND ot.PostHistoryTypeId = 3 AND YEAR(ot.creationDate) < 2016 AND YEAR(ot.creationDate) > 2012 AND te.comment LIKE '%added tag%' ORDER BY ot.postid","CreationDate":"2016-03-11 00:45:45","validated":false,"QueryBody_Original":"SELECT  ot.postid, ot.creationdate, ot.text, te.creationdate, te.text, te.comment\nfrom PostHistory ot\n     join PostHistory te on ot.PostId = te.PostId\nwhere te.PostHistoryTypeId = 6\n      and ot.PostHistoryTypeId = 3\n      and year(ot.creationDate) < 2016\n      and year(ot.creationDate) > 2012\n      and te.comment like '%added tag%'\n      \n order by ot.postid"},{"QuerySetId":448551,"Title":"How many downvotes have been cast by Jon Skeet?","Description":null,"QueryBody":"SELECT Id AS \"User\", Reputation, COUNT(UPVotes) AS TotalDownVotes FROM Users GROUP BY Id, Reputation ORDER BY Reputation DESC LIMIT 10","CreationDate":"2016-03-23 07:46:15","validated":false,"QueryBody_Original":"SELECT  Top 10 Id as [User], Reputation, count(UPVotes) as TotalDownVotes \nfrom Users \n--where Id=22656\ngroup by Id, Reputation\norder by Reputation desc"},{"QuerySetId":448757,"Title":"TOP 50 users from Vietnam","Description":"Lists the top 50 users (ranked by reputation) that are located in Calicut\/Kozhikode, Kerala, India according to their profile information.\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT Id, DisplayName, Age, Reputation, WebsiteUrl, Location, AboutMe, LastAccessDate, CreationDate FROM Users WHERE Location LIKE N'%Vietnam%' OR Location LIKE N'%HCM%' OR Location LIKE N'%Ho Chi Minh%' OR Location LIKE N'%Ha Noi%' OR Location LIKE N'%HaNoi%' OR Location LIKE N'%Viet Nam%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2016-03-11 11:58:18","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Age,\n   Reputation,\n   WebsiteUrl,\n   Location,\n   AboutMe,\n   LastAccessDate,\n   CreationDate\nFROM\n   Users\nWHERE\n   Location like N'%Vietnam%'\n   OR Location like N'%HCM%'\n   OR Location like N'%Ho Chi Minh%'\n   OR Location like N'%Ha Noi%'\n   OR Location like N'%HaNoi%'\n   OR Location like N'%Viet Nam%' \nORDER BY\n   reputation DESC"},{"QuerySetId":448780,"Title":"Top Stackoverflow users in Vietnam","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users ORDER BY Reputation DESC","CreationDate":"2020-09-30 12:50:11","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nORDER BY\n    Reputation DESC;"},{"QuerySetId":448809,"Title":"Top 1000 users in thailand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC) AS Rank, Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Thailand%' LIMIT 1000","CreationDate":"2016-03-11 14:48:45","validated":false,"QueryBody_Original":"SELECT \n   TOP 1000 ROW_NUMBER() OVER (Order by reputation DESC) as Rank,\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Thailand%'"},{"QuerySetId":449188,"Title":"Select top 50k posts by view count","Description":null,"QueryBody":"SELECT * FROM posts WHERE posts.ViewCount < 14329 ORDER BY posts.ViewCount DESC LIMIT 50000","CreationDate":"2016-03-12 16:00:42","validated":false,"QueryBody_Original":"SELECT  top(50000) * from posts where posts.ViewCount<14329 ORDER BY posts.ViewCount DESC"},{"QuerySetId":449291,"Title":"Star Trek questions missing the [star-trek] tag","Description":"Finds every Star Trek-related post on scifi.SE that is missing the [star-trek] tag. This relies on the question having at least one other Star Trek tag. Star Trek tags were identified using this query: http:\/\/data.stackexchange.com\/scifi\/query\/75877\/related-tags.","QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE PostTypeId = 1 AND NOT Tags LIKE '<star-trek>' AND (Tags LIKE '<star-trek-%>' OR Tags LIKE '<the-wrath-of-khan>' OR Tags LIKE '<the-search-for-spock>' OR Tags LIKE '<the-voyage-home>' OR Tags LIKE '<the-final-frontier>' OR Tags LIKE '<the-undiscovered-country>' OR Tags LIKE '<uss-enterprise>' OR Tags LIKE '<federation>' OR Tags LIKE '<vulcan>' OR Tags LIKE '<klingon%>' OR Tags LIKE '<romulan>' OR Tags LIKE '<borg>' OR Tags LIKE '<changeling>' OR Tags LIKE '<starfleet-%>' OR Tags LIKE '<praxis>') ORDER BY Tags, Title","CreationDate":"2016-03-12 20:26:52","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Tags from Posts\nwhere PostTypeId = 1 and Tags not like '<star-trek>' and\n(    Tags like '<star-trek-%>'\n  or Tags like '<the-wrath-of-khan>'\n  or Tags like '<the-search-for-spock>'\n  or Tags like '<the-voyage-home>'\n  or Tags like '<the-final-frontier>'\n  or Tags like '<the-undiscovered-country>'\n  or Tags like '<uss-enterprise>'\n  or Tags like '<federation>'\n  or Tags like '<vulcan>'\n  or Tags like '<klingon%>'\n  or Tags like '<romulan>'\n  or Tags like '<borg>'\n  or Tags like '<changeling>'\n  or Tags like '<starfleet-%>'\n  or Tags like '<praxis>'\n) order by Tags, Title"},{"QuerySetId":449471,"Title":"Answers containing search term for questions that don't","Description":null,"QueryBody":"SELECT answers.id AS \"Post Link\" FROM posts AS questions INNER JOIN posts AS answers ON answers.parentid = questions.id WHERE NOT (questions.body LIKE '%shaken%') AND answers.body LIKE '%shaken%'","CreationDate":"2016-03-13 13:37:22","validated":false,"QueryBody_Original":"SELECT  answers.id as [Post Link] from\nposts questions inner join\nposts answers on answers.parentid = questions.id\nwhere NOT(questions.body like '%shaken%') AND answers.body like '%shaken%'"},{"QuerySetId":450317,"Title":"Histogram of Answers for Questions older than 100 days","Description":null,"QueryBody":"SELECT AnswerCount, COUNT(AnswerCount) AS \"Occurences\" FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) > 100 GROUP BY AnswerCount ORDER BY AnswerCount LIMIT 100","CreationDate":"2020-01-28 15:30:58","validated":false,"QueryBody_Original":"SELECT  TOP 100 AnswerCount, Count(AnswerCount) AS [Occurences]\nFROM Posts\nWHERE PostTypeId = 1 and ClosedDate is null\nand DATEDIFF(DD, CreationDate, CURRENT_TIMESTAMP) > 100\nGROUP BY AnswerCount\nORDER BY AnswerCount ASC"},{"QuerySetId":450374,"Title":"Number of zero voted answers","Description":null,"QueryBody":"SELECT AVG(CASE WHEN Score > 0 THEN 1.0 ELSE 0.0 END) FROM Posts WHERE PostTypeId = 2","CreationDate":"2016-03-14 20:34:47","validated":false,"QueryBody_Original":"SELECT  AVG(CASE WHEN Score > 0 THEN 1.0 ELSE 0.0 END)\n  FROM Posts\n  WHERE PostTypeId = 2"},{"QuerySetId":450458,"Title":"SELECT * FROM Posts WHERE Id = 1","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 1500","CreationDate":"2016-03-14 22:13:56","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Id = 1500"},{"QuerySetId":451225,"Title":"UWP top all-time open questions by viewcount","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.title AS \"Title\", p.tags AS Tags, p.ViewCount AS \"Views\", p.score AS \"Score\", p.AnswerCount AS \"Answers\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS \"Age (days)\" FROM posts AS p WHERE p.AcceptedAnswerId IS NULL AND (p.tags LIKE '%<uwp>%' OR p.tags LIKE '%<windows-10-universal>%' OR (p.tags LIKE '%<xaml>%' AND p.tags LIKE '%<windows-10>%')) ORDER BY p.viewcount DESC","CreationDate":"2016-03-16 22:42:22","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  p.title as \"Title\",\n  p.tags as Tags,\n  p.ViewCount as \"Views\", \n  p.score as \"Score\", \n  p.AnswerCount as \"Answers\", \n  DATEDIFF(day,p.CreationDate,getdate()) as \"Age (days)\"\n\nfrom posts p\n\nwhere\n\n  p.AcceptedAnswerId is null and\n\n  (\n    p.tags like '%<uwp>%' or p.tags like '%<windows-10-universal>%'\n    or\n    (p.tags like '%<xaml>%' and p.tags like '%<windows-10>%')\n  )\n\n\norder by p.viewcount desc;"},{"QuerySetId":451259,"Title":"Prevent protecting questions under certain circumstances","Description":"http:\/\/meta.stackexchange.com\/questions\/274324\/prevent-protecting-questions-under-certain-circumstances","QueryBody":"SELECT p.id AS \"Post Link\" FROM posts AS p INNER JOIN posthistory AS ph ON ph.postid = p.id WHERE ph.posthistorytypeid = 19 \/* protect *\/ AND p.posttypeid = 1 \/* Q *\/ AND p.answercount = 0 AND NOT EXISTS(SELECT 1 FROM posthistory AS pu WHERE pu.postid = p.id AND pu.posthistorytypeid = 20 \/* unprotect *\/ AND pu.creationdate > ph.creationdate)","CreationDate":"2016-03-16 00:53:41","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link]\nfrom posts p\ninner join posthistory ph on ph.postid = p.id\nwhere ph.posthistorytypeid = 19 -- protect\nand p.posttypeid = 1 -- Q\nand p.answercount = 0 \nand not exists (SELECT 1 \n                from posthistory pu \n                where pu.postid = p.id\n                and pu.posthistorytypeid = 20 -- unprotect\n                and pu.creationdate > ph.creationdate)\n-- and pu.id is null -- if this is removed you'll find 16 questions"},{"QuerySetId":451287,"Title":"UWP top all-time questions by viewcount","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.tags AS Tags, p.ViewCount AS \"Views\", p.score AS \"Score\", p.AnswerCount AS \"Answers\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS \"Age (days)\", Answered = CASE ISNUMERIC(p.AcceptedAnswerId) WHEN 1 THEN 'Yes' ELSE 'No' END FROM posts AS p WHERE (p.tags LIKE '%<uwp>%' OR p.tags LIKE '%<windows-10-universal>%' OR (p.tags LIKE '%<xaml>%' AND p.tags LIKE '%<windows-10>%')) ORDER BY p.viewcount DESC","CreationDate":"2016-03-16 05:13:25","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  p.tags as Tags,\n  p.ViewCount as \"Views\", \n  p.score as \"Score\", \n  p.AnswerCount as \"Answers\", \n  --p.AcceptedAnswerId, ISNUMERIC(p.AcceptedAnswerId),\n  DATEDIFF(day,p.CreationDate,getdate()) as \"Age (days)\",\n  Answered = case ISNUMERIC(p.AcceptedAnswerId)\n    when 1 then 'Yes' else 'No'\n    end\n  \n\nfrom posts p\n\nwhere\n  (\n    p.tags like '%<uwp>%' or p.tags like '%<windows-10-universal>%'\n    or\n    (p.tags like '%<xaml>%' and p.tags like '%<windows-10>%')\n  )\n\n\norder by p.viewcount desc;"},{"QuerySetId":451292,"Title":"UWP top open questions since Jan1, 2016 by viewcount","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", title, p.tags AS Tags, p.ViewCount AS \"Views\", p.score AS \"Score\", p.AnswerCount AS \"Answers\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS \"Age (days)\", p.AcceptedAnswerId AS \"Answer Accepted?\" FROM posts AS p WHERE p.AcceptedAnswerId IS NULL AND p.CreationDate >= '20160101' AND (p.tags LIKE '%<uwp>%' OR p.tags LIKE '%<windows-10-universal>%' OR (p.tags LIKE '%<xaml>%' AND p.tags LIKE '%<windows-10>%')) ORDER BY p.viewcount DESC","CreationDate":"2016-05-09 20:23:04","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  title,\n  p.tags as Tags,\n  p.ViewCount as \"Views\", \n  p.score as \"Score\", \n  p.AnswerCount as \"Answers\", \n  DATEDIFF(day,p.CreationDate,getdate()) as \"Age (days)\",\n  p.AcceptedAnswerId as \"Answer Accepted?\"\n\nfrom posts p\n\nwhere\n\n  p.AcceptedAnswerId is null and\n  p.CreationDate >= '20160101' and\n\n  (\n    p.tags like '%<uwp>%' or p.tags like '%<windows-10-universal>%'\n    or\n    (p.tags like '%<xaml>%' and p.tags like '%<windows-10>%')\n  )\n\n\norder by p.viewcount desc;"},{"QuerySetId":451872,"Title":"Top 50 users from Warszawa","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%warszawa%' OR UPPER(Location) LIKE '%WARSZAWA%' OR Location LIKE 'Warszawa' OR LOWER(Location) LIKE '%warsaw%' OR UPPER(Location) LIKE '%WARSAW%' OR Location LIKE 'Warsaw' ORDER BY Reputation DESC LIMIT 5000","CreationDate":"2016-03-22 16:06:36","validated":false,"QueryBody_Original":"SELECT  TOP 5000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%warszawa%'\n    OR UPPER(Location) LIKE '%WARSZAWA%'\n    or Location like 'Warszawa'\n    or lower(Location) like '%warsaw%'\n    OR UPPER(Location) LIKE '%WARSAW%'\n    or Location like 'Warsaw'\n\nORDER BY\n    Reputation DESC;"},{"QuerySetId":452596,"Title":"Users Last Access by Country for current month","Description":null,"QueryBody":"SELECT COUNT(Users.Id) FROM Users WHERE Users.Reputation >= 3000 AND MONTH(Users.LastAccessDate) = MONTH(CURRENT_TIMESTAMP()) AND YEAR(Users.LastAccessDate) = YEAR(CURRENT_TIMESTAMP())","CreationDate":"2020-11-07 05:17:46","validated":false,"QueryBody_Original":"SELECT  count( Users.Id) FROM Users\nWHERE\nUsers.Reputation >= 3000 and\nMonth(Users.LastAccessDate) = Month(getdate()) AND\nYear(Users.LastAccessDate) = Year(getdate())"},{"QuerySetId":452930,"Title":"Get data from all recent posts","Description":null,"QueryBody":"SELECT Id, Score, ViewCount, AnswerCount FROM Posts WHERE PostTypeId = 2 AND YEAR(CreationDate) > 2015","CreationDate":"2016-03-20 00:47:16","validated":false,"QueryBody_Original":"SELECT  Id,Score,ViewCount,AnswerCount from Posts WHERE PostTypeId = 2 AND YEAR(CreationDate) > 2015"},{"QuerySetId":453245,"Title":"Top 100 users in bangalore","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Bangalore%' ORDER BY reputation DESC LIMIT 1000","CreationDate":"2016-03-20 19:55:04","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like N'%Bangalore%' \nORDER BY\n   reputation DESC"},{"QuerySetId":453806,"Title":"Users locations ordered by rep","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Reputation, Location FROM Users ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2016-03-21 17:19:26","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  Users.Id [User Link],\n  Reputation,\n  Location\nFROM Users\n--WHERE Location is not null\nORDER BY Reputation DESC"},{"QuerySetId":453923,"Title":"What question has the most cycles of Close\/Reopen?","Description":"http:\/\/meta.stackexchange.com\/questions\/277175\/what-question-has-the-most-cycles-of-close-reopen","QueryBody":"SELECT postid AS \"Post Link\", SUM(CASE WHEN posthistorytypeid = 10 THEN 1 ELSE 0 END) AS closed, SUM(CASE WHEN posthistorytypeid = 11 THEN 1 ELSE 0 END) AS reopened, SUM(CASE WHEN posthistorytypeid = 10 THEN 1 ELSE 0 END) - SUM(CASE WHEN posthistorytypeid = 11 THEN 1 ELSE 0 END) AS currentlyclosed FROM posthistory WHERE posthistorytypeid IN (10, 11) GROUP BY postid HAVING SUM(CASE WHEN posthistorytypeid = 10 THEN 1 ELSE 0 END) > 1 ORDER BY SUM(CASE WHEN posthistorytypeid = 10 THEN 1 ELSE 0 END) + SUM(CASE WHEN posthistorytypeid = 11 THEN 1 ELSE 0 END) DESC, SUM(CASE WHEN posthistorytypeid = 10 THEN 1 ELSE 0 END) DESC, SUM(CASE WHEN posthistorytypeid = 11 THEN 1 ELSE 0 END) DESC","CreationDate":"2016-03-22 01:40:20","validated":false,"QueryBody_Original":"SELECT  postid as [Post Link]\n     , sum(case when posthistorytypeid = 10 then 1 else 0 end) as closed\n     , sum(case when posthistorytypeid = 11 then 1 else 0 end) as reopened\n     , sum(case when posthistorytypeid = 10 then 1 else 0 end) \n     - sum(case when posthistorytypeid = 11 then 1 else 0 end) as currentlyclosed\nfrom posthistory\nwhere posthistorytypeid in (10,11)\ngroup by postid\nhaving sum(case when posthistorytypeid = 10 then 1 else 0 end) > 1\norder by sum(case when posthistorytypeid = 10 then 1 else 0 end) +\n         sum(case when posthistorytypeid = 11 then 1 else 0 end) desc,\n         sum(case when posthistorytypeid = 10 then 1 else 0 end) desc,\n         sum(case when posthistorytypeid = 11 then 1 else 0 end) desc"},{"QuerySetId":454614,"Title":"Top 10 Users by Reputation","Description":null,"QueryBody":"SELECT * FROM Users ORDER BY Reputation DESC LIMIT 10","CreationDate":"2016-03-22 20:30:06","validated":false,"QueryBody_Original":"SELECT  TOP 10 * from Users order by Reputation desc"},{"QuerySetId":455659,"Title":"Get Answers on User when others have been accepted","Description":null,"QueryBody":"SELECT Question.Id, Question.AcceptedAnswerId, Question.CreationDate, Question.Score AS QScore, Question.Body AS QBody, Question.Tags, Answer.Score AS AScore FROM Posts AS Question INNER JOIN (SELECT ParentId, Id, Score FROM Posts WHERE OwnerUserId = 5620297 AND PostTypeId = 2) AS Answer ON Question.Id = Answer.ParentId AND Question.AcceptedAnswerId <> Answer.Id AND Answer.Score < 1","CreationDate":"2016-04-13 23:15:45","validated":false,"QueryBody_Original":"SELECT \n    Question.Id,\n    Question.AcceptedAnswerId,\n    Question.CreationDate,\n    Question.Score AS QScore,\n    Question.Body AS QBody,\n    Question.Tags,\n    Answer.Score AS AScore\nFROM Posts Question\nINNER JOIN\n  (\n    SELECT ParentId, Id, Score FROM Posts\n      WHERE\n        OwnerUserId = 5620297\n          AND\n        PostTypeId = 2\n  ) Answer\n  ON\n    -- If Question is parent of answer\n    Question.Id = Answer.ParentId\n     AND\n    -- And the accepted answer is not my answer\n    Question.AcceptedAnswerId <> Answer.Id\n      AND\n    Answer.Score < 1;"},{"QuerySetId":458191,"Title":"Top 150 Users from Bangalore, India","Description":null,"QueryBody":"SELECT Id, DisplayName FROM Users WHERE Location LIKE N'%Bangalore%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2016-03-24 11:43:00","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName\nFROM\n   Users\nWHERE\n   Location like N'%Bangalore%'\n   --OR Location like N'%Kozhi%'\n   --OR Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":458667,"Title":"Locked posts without answers that haven't been migrated or merged","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE AnswerCount = 0 AND Id IN (SELECT DISTINCT PostHistory.PostId AS \"Post Link\" FROM PostHistory LEFT JOIN (SELECT DISTINCT PostId, CreationDate FROM PostHistory WHERE PostHistoryTypeId = 15) AS Unlocked ON PostHistory.PostId = Unlocked.PostId AND PostHistory.CreationDate < Unlocked.CreationDate WHERE PostHistory.PostHistoryTypeId = 14 AND Unlocked.PostId IS NULL) AND NOT EXISTS(SELECT * FROM PostHistory WHERE PostId = Posts.Id AND PostHistoryTypeId IN (35, 37))","CreationDate":"2016-03-25 12:13:21","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] \nFROM Posts\nWHERE AnswerCount = 0\n\tAND Id IN (SELECT DISTINCT PostHistory.PostId AS [Post Link] FROM PostHistory\n\t\tLEFT JOIN (SELECT DISTINCT PostId, CreationDate \n               FROM PostHistory \n               WHERE PostHistoryTypeId = 15) AS Unlocked\n   ON PostHistory.PostId = Unlocked.PostId \n     AND PostHistory.CreationDate < Unlocked.CreationDate\n   WHERE PostHistory.PostHistoryTypeId = 14\n     AND Unlocked.PostId IS NULL)\n\tAND NOT EXISTS (SELECT * FROM PostHistory WHERE PostId = Posts.Id AND PostHistoryTypeId IN (35,37))"},{"QuerySetId":458696,"Title":"(Possibly) suspended users with Supporter badge","Description":null,"QueryBody":"SELECT u.CreationDate, u.Id AS \"User Link\" FROM Users AS u INNER JOIN Badges AS b ON b.UserId = u.Id WHERE b.Name = 'Nice Question' AND u.Reputation <= 1 GROUP BY u.Id, u.CreationDate ORDER BY u.CreationDate","CreationDate":"2016-03-25 15:07:26","validated":false,"QueryBody_Original":"SELECT  u.CreationDate, u.Id as [User Link] from Users u\ninner join Badges b on b.UserId=u.Id\nwhere b.Name='Nice Question'\nand u.Reputation <= 1\ngroup by u.Id, u.CreationDate\norder by u.CreationDate asc"},{"QuerySetId":459494,"Title":"Top 50 SO Users from Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%iran' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-03-26 16:12:24","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%iran'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":460356,"Title":"select top(50) * from posts ORDER BY posts.ViewCount DESC","Description":null,"QueryBody":"SELECT Id, Score, ViewCount, OwnerUserId FROM posts WHERE posts.ViewCount < 14597 ORDER BY posts.ViewCount DESC LIMIT 50000","CreationDate":"2016-03-28 00:05:48","validated":false,"QueryBody_Original":"SELECT  top(50000) Id,Score,ViewCount,OwnerUserId from posts where posts.ViewCount < 14597 ORDER BY posts.ViewCount DESC"},{"QuerySetId":460411,"Title":"Crusader's crossbow: smite unanswered questions by finding worthy questions (by user)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE Id IN (SELECT ParentId FROM Posts WHERE ParentId IN (SELECT Q.Id FROM Posts AS Q INNER JOIN Posts AS A ON (A.ParentId = Q.Id) WHERE Q.PostTypeId = 1 AND A.PostTypeId = 2 AND Q.OwnerUserId = '##UserId##' AND A.Score <= 0 AND Q.AcceptedAnswerId IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), Q.CreationDate) >= 180 AND Q.ClosedDate IS NULL) GROUP BY ParentId HAVING MAX(Score) <= 0)","CreationDate":"2016-03-30 20:17:20","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link],Tags\nfrom Posts\nwhere Id in (\nSELECT ParentId\nfrom Posts\nwhere ParentId in \n(SELECT Q.Id from Posts as Q\ninner join Posts as A on (A.ParentId = Q.Id)\nwhere Q.PostTypeId = 1\nand A.PostTypeId = 2\nand Q.OwnerUserId = '##UserId##'\nand A.Score <= 0\nand Q.AcceptedAnswerId is null\nand DATEDIFF(day, Q.CreationDate, GETDATE()) >= 180\nand Q.ClosedDate is null)\ngroup by ParentId\nhaving max(Score) <= 0\n)\n;"},{"QuerySetId":460576,"Title":"Iranian Users of StackOverflow with website","Description":null,"QueryBody":"SELECT * FROM users WHERE NOT location LIKE '%lbania%' AND NOT WebsiteUrl IS NULL AND WebsiteUrl <> '' AND (location LIKE '%iran%' OR location LIKE '%Iran%' OR location LIKE '%tehran%') ORDER BY Reputation DESC","CreationDate":"2016-04-14 21:07:30","validated":false,"QueryBody_Original":"SELECT  * from users where location not like '%lbania%' and WebsiteUrl is not null and WebsiteUrl<>'' and (location like '%iran%' OR location like '%Iran%' or location like '%tehran%') order by Reputation desc"},{"QuerySetId":460671,"Title":"select top(50000) OwnerUserId, Body from posts ORDER BY posts.ViewCount DESC","Description":null,"QueryBody":"SELECT OwnerUserId, Body FROM posts ORDER BY posts.ViewCount DESC LIMIT 50000","CreationDate":"2016-03-28 16:09:15","validated":false,"QueryBody_Original":"SELECT  top(50000) OwnerUserId, Body from posts ORDER BY posts.ViewCount DESC"},{"QuerySetId":461396,"Title":"David vs Goliath(Screenmedia Team effort)","Description":"Conlisk!!!!","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE Id IN (15904, 1107580, 482835, 3891038) ORDER BY Reputation DESC","CreationDate":"2020-02-20 21:51:38","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    Id IN (15904, 1107580, 482835, 3891038)\nORDER BY\n    Reputation DESC;"},{"QuerySetId":461892,"Title":"Questions whose title starts with a question word","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, OwnerDisplayName, TIME_TO_STR(CreationDate, '%d') AS \"Day\", TIME_TO_STR(CreationDate, '%M') AS \"Month\", TIME_TO_STR(CreationDate, '%Y') AS \"Year\", Tags FROM Posts WHERE PostTypeId IN (1) AND Title LIKE 'S%' AND Tags LIKE '%java%' AND OwnerDisplayName LIKE 'user%' ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2017-02-28 20:27:14","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    Id AS [Post Link]\n       , Score, OwnerDisplayName,\n       DATEPART(dd,CreationDate) AS [Day],\nDATEPART(mm,CreationDate) AS [Month],\nDATEPART(yyyy,CreationDate) AS [Year], Tags\n    FROM Posts\n    WHERE\n        PostTypeId IN (1) AND Title LIKE 'S%' AND Tags like '%java%'\n        AND OwnerDisplayName LIKE 'user%'\n    ORDER BY CreationDate DESC"},{"QuerySetId":463080,"Title":"SnapComms Related Questions or Answers","Description":null,"QueryBody":"SELECT CreationMonth, SUM(SnapCommsPosts) AS SnapCommsPosts FROM (SELECT CAST(YEAR(CreationDate) AS TEXT) + '-' + RIGHT('00' + CAST(MONTH(CreationDate) AS TEXT), 2) AS CreationMonth, CASE WHEN Body LIKE '%snapcomms%' THEN 1 ELSE 0 END AS SnapCommsPosts, Tags FROM Posts WHERE YEAR(CreationDate) >= 2015) AS C GROUP BY CreationMonth ORDER BY CreationMonth","CreationDate":"2016-03-31 13:29:54","validated":false,"QueryBody_Original":"SELECT  \n  CreationMonth\n, SUM(SnapCommsPosts) AS SnapCommsPosts\nFROM\n(\n  SELECT\n    CAST(YEAR(CreationDate) AS VARCHAR) + '-' + RIGHT('00'+CAST(MONTH(CreationDate) AS VARCHAR) , 2) AS CreationMonth\n    , CASE WHEN Body LIKE '%snapcomms%' \n      THEN 1 ELSE 0 END AS SnapCommsPosts\n    , Tags\n  FROM Posts\n  WHERE YEAR(CreationDate) >= 2015\n    \/*AND PostTypeId = 1  Question *\/\n) AS C\nGROUP BY CreationMonth\nORDER BY CreationMonth"},{"QuerySetId":463104,"Title":"Getting Questions WITHOUT a Bounty attached in Data Explorer","Description":"http:\/\/meta.stackexchange.com\/questions\/277698\/getting-questions-without-a-bounty-attached-in-data-explorer","QueryBody":"SELECT q.id FROM posts AS q WHERE q.posttypeid = 1 \/* Q *\/ AND NOT q.id IN (SELECT p.id FROM posts AS p INNER JOIN votes AS v ON v.postid = p.id WHERE v.votetypeid = 8 \/* bounty started *\/) \/* bounty started *\/ \/* bounty started *\/","CreationDate":"2016-03-31 14:09:02","validated":false,"QueryBody_Original":"SELECT  q.id \nfrom posts q \nwhere q.posttypeid = 1 -- Q\nand q.id not in (\n   SELECT p.id\n   from posts p \n   inner join votes v on v.postid = p.id\n   where v.votetypeid = 8 -- bounty started\n)"},{"QuerySetId":463106,"Title":"How many users have a location in their profile","Description":null,"QueryBody":"SELECT HasLocation, COUNT(*) FROM (SELECT Id \/* TOP 2000 *\/ AS \"User Link\", CASE WHEN Location IS NULL THEN 'No' ELSE 'Yes' END AS HasLocation FROM Users) AS t GROUP BY HasLocation","CreationDate":"2016-03-31 14:35:45","validated":false,"QueryBody_Original":"SELECT  HasLocation, Count(*) FROM\n(\nSELECT \n--TOP 2000\nId AS [User Link],\nCASE \nWHEN Location IS NULL THEN 'No' ELSE 'Yes' \nEND AS HasLocation\nFROM Users\n) t\nGROUP BY HasLocation"},{"QuerySetId":464115,"Title":"Closed non-dup questions tagged [discussion], with + scoring answer(s), not accepted","Description":null,"QueryBody":"SELECT * FROM PostHistory AS ph WHERE ph.CreationDate = (SELECT MAX(CreationDate) FROM PostHistory AS phi WHERE phi.PostId = 251212 AND phi.PostHistoryTypeId IN (14, 15)) AND ph.PostId = 251212 AND ph.PostHistoryTypeId = 14","CreationDate":"2016-04-01 23:04:24","validated":false,"QueryBody_Original":"SELECT  * FROM PostHistory ph\nWHERE ph.CreationDate = (\n  SELECT MAX(CreationDate) FROM PostHistory phi\n  WHERE phi.PostId = 251212 AND phi.PostHistoryTypeId IN (14,15)\n)\nand ph.PostId = 251212 AND ph.PostHistoryTypeId  = 14;"},{"QuerySetId":465263,"Title":"Find users by website url","Description":null,"QueryBody":"SELECT Id AS \"User Link\", WebsiteUrl FROM Users WHERE WebsiteUrl LIKE '%##Website##%'","CreationDate":"2016-04-04 00:05:54","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], WebsiteUrl from Users where WebsiteUrl like '%##Website##%'"},{"QuerySetId":466619,"Title":"Users by location interacting with posts with tag","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE Id IN (SELECT PostHistory.UserId FROM PostHistory INNER JOIN Posts ON PostHistory.PostId = Posts.Id WHERE Posts.Tags LIKE '%##Tag##%') AND Location LIKE '%##Location##%' ORDER BY Reputation DESC","CreationDate":"2016-04-05 17:26:43","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location\nFROM Users\nWHERE \nId IN (\n        SELECT PostHistory.UserId FROM PostHistory \n        INNER JOIN Posts ON PostHistory.PostId = Posts.Id\n        WHERE Posts.Tags LIKE '%##Tag##%'\n      )\nAND Location LIKE '%##Location##%'\nORDER BY Reputation DESC"},{"QuerySetId":467297,"Title":"How do I find old questions asked by users who are still active?","Description":"http:\/\/meta.stackoverflow.com\/questions\/320494\/how-do-i-find-old-questions-asked-by-users-who-are-still-active\/320523#320523","QueryBody":"SELECT p.id AS \"Post Link\", p.creationdate, p.owneruserid AS \"User Link\" FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE \/* asked less then 60 days ago *\/ \/* users active less then a month ago *\/ p.posttypeid = 1 \/* Q *\/ AND \/* users active less then a month ago *\/ u.lastaccessdate > DATEADD(m, -1, GETDATE()) \/* users active less then a month ago *\/ AND \/* asked less then 60 days ago *\/ p.creationdate < DATEADD(d, -60, GETDATE()) \/* asked less then 60 days ago *\/ AND NOT p.closeddate IS NULL \/* not closed *\/ AND p.answercount = 0 \/* no answers *\/ AND p.score > 0 \/* postive score *\/ ORDER BY p.creationdate","CreationDate":"2016-04-06 21:10:03","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link]\n     , p.creationdate\n     , p.owneruserid as [User Link]\nfrom posts p\ninner join users u on u.id = p.owneruserid\nwhere p.posttypeid = 1 -- Q\nand u.lastaccessdate > dateadd(m, -1, getdate()) -- users active less then a month ago\nand p.creationdate < dateadd(d, -60, getdate()) -- asked less then 60 days ago\nand p.closeddate is not null -- not closed\nand p.answercount = 0  -- no answers\nand p.score > 0 -- postive score\norder by p.creationdate"},{"QuerySetId":467531,"Title":"Consulta Registros de Posts - Setembro 2016","Description":null,"QueryBody":"SELECT id, posttypeid, score, title, body, tags, ViewCount, AnswerCount, CommentCount, FavoriteCount, creationdate, DeletionDate, ClosedDate FROM posts WHERE creationdate BETWEEN '2016-09-30' AND '2016-10-20' AND tags LIKE '%java%' AND (tags LIKE '%maven%' OR tags LIKE '%ant%' OR tags LIKE '%jenkins%') AND viewcount > 50 AND answercount > 0","CreationDate":"2017-03-02 05:02:08","validated":false,"QueryBody_Original":"SELECT  id, \n                posttypeid, \n                score, \n                title, \n                body, \n                tags,\n                ViewCount,\n                AnswerCount,\n                CommentCount,\n                FavoriteCount,\n                creationdate,\n                DeletionDate,\n                ClosedDate\nfrom\n                posts\nwhere\n                creationdate between '2016-09-30' and '2016-10-20'\n                and tags like '%java%' \n                and (tags like '%maven%' or  tags like '%ant%' or  tags like '%jenkins%')\n                and viewcount > 50\n                and answercount > 0"},{"QuerySetId":467682,"Title":"Top 50 users from Bangladesh","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Bangladesh%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2016-04-07 15:35:57","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like '%Bangladesh%' \nORDER BY\n   reputation DESC"},{"QuerySetId":467713,"Title":"Users registered per month since start","Description":null,"QueryBody":"SELECT COUNT(id) AS \"Count\", YEAR(CreationDate) AS \"Year\", MONTH(CreationDate) AS \"Month\" FROM users GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2016-04-07 17:41:03","validated":false,"QueryBody_Original":"SELECT  \n  count(id) as 'Count',year(CreationDate) as 'Year' ,month(CreationDate) as 'Month'\nfrom \n  users\ngroup by \n  year(CreationDate),month(CreationDate)\norder by \n  year(CreationDate) ASC,month(CreationDate) ASC"},{"QuerySetId":467740,"Title":"Last access date per month ","Description":null,"QueryBody":"SELECT COUNT(*), YEAR(lastaccessdate), MONTH(lastaccessdate) FROM users GROUP BY YEAR(lastaccessdate), MONTH(lastaccessdate) ORDER BY YEAR(lastaccessdate), MONTH(lastaccessdate)","CreationDate":"2016-04-07 18:12:24","validated":false,"QueryBody_Original":"SELECT  count(*),Year(lastaccessdate),Month(lastaccessdate) \nfrom users\n--where lastaccessdate > Cast('01\/02\/2016' AS DATETIME)\ngroup by Year(lastaccessdate),Month(lastaccessdate) \norder by Year(lastaccessdate),Month(lastaccessdate)"},{"QuerySetId":467795,"Title":"Get number of users by location","Description":null,"QueryBody":"SELECT COUNT(1) FROM users WHERE LOWER(location) LIKE '%##LocationInLowercase##%'","CreationDate":"2016-04-07 20:48:20","validated":false,"QueryBody_Original":"SELECT  \n  count(1) \nfrom \n  users \nwhere \n  lower(location) like '%##LocationInLowercase##%'"},{"QuerySetId":467817,"Title":"Questions with answers which have earned more than one revival badge","Description":null,"QueryBody":"SELECT p.Id AS \"Post ID\" FROM Posts AS p JOIN Badges AS b ON p.Id = b.Id WHERE b.Name = 'Revival'","CreationDate":"2016-04-07 22:11:31","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post ID] from Posts as p\njoin Badges As b on p.Id = b.Id\nwhere b.Name = 'Revival'"},{"QuerySetId":467915,"Title":"Distribution of Posts with over 180K over years","Description":null,"QueryBody":"SELECT YEAR, SUM(X.Views) AS YEARVIEWS FROM (SELECT CAST(TIME_TO_STR(Posts.CreationDate, '%Y') AS INT) AS \"YEAR\", CAST(Posts.ViewCount AS FLOAT) AS \"Views\" FROM Posts WHERE Posts.PostTypeId = 1 AND Posts.ViewCount > 18000 AND Posts.ClosedDate IS NULL AND Posts.DeletionDate IS NULL) AS X GROUP BY \"Year\" ORDER BY \"Year\"","CreationDate":"2016-04-08 00:51:33","validated":false,"QueryBody_Original":"SELECT  YEAR, SUM(X.Views) AS YEARVIEWS FROM (\n  SELECT\n  cast (DATEPART(YYYY, Posts.CreationDate) as int)[YEAR], \n  cast (Posts.ViewCount as decimal)[Views]\n  FROM Posts\n  WHERE Posts.PostTypeId = 1 \n  AND Posts.ViewCount > 18000\n  AND Posts.ClosedDate IS NULL\n  AND Posts.DeletionDate IS NULL\n) AS X\nGROUP BY [Year]\nORDER BY [Year] ASC"},{"QuerySetId":467959,"Title":"Tag Wiki Excerpts that contain \"off-topic\"","Description":null,"QueryBody":"SELECT Tags.TagName, Posts.Body FROM Tags INNER JOIN Posts ON Tags.ExcerptPostId = Posts.Id WHERE LOWER(Posts.Body) LIKE '%off-topic%' OR LOWER(Posts.Body) LIKE '%don%t use%'","CreationDate":"2016-04-24 00:03:43","validated":false,"QueryBody_Original":"SELECT  Tags.TagName, Posts.Body\nFROM Tags INNER JOIN Posts ON Tags.ExcerptPostId = Posts.Id\nWHERE Lower(Posts.Body) LIKE '%off-topic%' OR Lower(Posts.Body) LIKE '%don%t use%'"},{"QuerySetId":470566,"Title":"Post with more than 5 answers using GROUP BY clause","Description":null,"QueryBody":"SELECT Id, AnswerCount FROM Posts GROUP BY Id, AnswerCount HAVING AnswerCount > 5 ORDER BY AnswerCount","CreationDate":"2016-04-12 18:52:00","validated":false,"QueryBody_Original":"SELECT  Id, AnswerCount \n  FROM Posts\n  GROUP BY Id, AnswerCount\n  HAVING AnswerCount > 5\n  ORDER BY AnswerCount"},{"QuerySetId":470870,"Title":"Top 20 users from Gurgaon, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%gurgaon%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2016-04-13 11:33:49","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%gurgaon%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":471001,"Title":"Number of users created \/ day","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), COUNT(*) AS Actual, MAX(Id) - MIN(Id) AS Expected, MIN(Id), MAX(Id) FROM Users GROUP BY CAST(CreationDate AS DATE) ORDER BY 1 DESC","CreationDate":"2016-04-13 17:11:04","validated":false,"QueryBody_Original":"SELECT  cast(CreationDate as date), count(*) As Actual, max(Id)-min(Id) As Expected, min(Id), max(Id)\nfrom Users \ngroup by cast(CreationDate as date)\norder by 1 desc"},{"QuerySetId":471011,"Title":"top 200 french users using nodejs","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users AS usrr JOIN (SELECT usr.id AS userId FROM Users AS usr JOIN Posts AS post ON usr.id = post.OwnerUserId WHERE usr.location LIKE '%India%' AND post.Tags LIKE '%node.js%' GROUP BY usr.Id) AS sub ON usrr.id = sub.userId ORDER BY usrr.reputation DESC LIMIT 200","CreationDate":"2017-02-02 00:39:13","validated":false,"QueryBody_Original":"SELECT  TOP 200\n   Id as [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location \nFROM Users usrr \nJOIN (\n  SELECT usr.id AS userId \n  FROM Users AS usr JOIN Posts AS post ON usr.id=post.OwnerUserId \n  WHERE usr.location LIKE '%India%' \n  AND post.Tags LIKE '%node.js%' \n  GROUP BY usr.Id) \nAS sub ON usrr.id=sub.userId \norder by usrr.reputation desc"},{"QuerySetId":471411,"Title":"Questions with bounties awarded in the past","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Votes.BountyAmount AS \"Bounty Amount\", Votes.CreationDate AS \"Bounty Creation Date\" FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id WHERE Votes.VoteTypeId = 8 \/* bounty start *\/ ORDER BY Votes.BountyAmount DESC, Votes.CreationDate DESC","CreationDate":"2016-04-14 12:55:41","validated":false,"QueryBody_Original":"SELECT \n  Posts.Id AS [Post Link],\n  Votes.BountyAmount AS 'Bounty Amount',\n  Votes.CreationDate AS 'Bounty Creation Date'\nFROM Posts\nINNER JOIN Votes\n        ON Votes.PostId=Posts.Id\nWHERE Votes.VoteTypeId=8 --bounty start\nORDER BY Votes.BountyAmount DESC, Votes.CreationDate DESC"},{"QuerySetId":471819,"Title":"Get all data from stack overflow with keyword JAVA","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Body LIKE '%java%' AND CreationDate LIKE '%2015%'","CreationDate":"2016-04-15 02:44:16","validated":false,"QueryBody_Original":"SELECT  * from Posts where Body like '%java%' and CreationDate like '%2015%'"},{"QuerySetId":472327,"Title":"Comments asking for a jurisdiction on a question","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Comments.Text FROM Comments, Posts WHERE Text LIKE '%which%jurisdiction%' AND Comments.PostId = Posts.Id AND Posts.PostTypeId = 1","CreationDate":"2016-04-16 03:48:53","validated":false,"QueryBody_Original":"SELECT  Posts.Id as [Post Link], Comments.Text\nFROM Comments, Posts\nWHERE Text LIKE '%which%jurisdiction%'\nAND Comments.PostId = Posts.Id\nAND Posts.PostTypeId = 1"},{"QuerySetId":472710,"Title":"Most Gold Badges (This one counts them all)","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) FROM Badges, Users WHERE Class = ('1') AND LOWER(Users.Location) LIKE LOWER('%##CountryName##%') GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 10","CreationDate":"2016-09-08 12:45:53","validated":false,"QueryBody_Original":"SELECT  TOP 10 UserId AS [User Link], COUNT(*)\nFROM Badges, Users\nWHERE Class = ('1')\nAND LOWER(Users.Location) LIKE LOWER('%##CountryName##%')\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":475647,"Title":"Top users in srilanka for c#","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY us.Reputation DESC) AS \"#\", us.id AS \"User Link\", us.DisplayName, us.Reputation FROM Users AS us WHERE LOWER(us.Location) LIKE '%lanka%' ORDER BY us.Reputation DESC","CreationDate":"2018-08-06 15:05:26","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY us.Reputation DESC) AS [#], us.id [User Link],\n       us.DisplayName,\n       us.Reputation\n       \nFROM Users us\n\nWHERE lower(us.Location) like '%lanka%'\nORDER BY us.Reputation DESC;"},{"QuerySetId":475854,"Title":"View and Answer count for Habib","Description":null,"QueryBody":"SELECT DISTINCT (p1.id) AS \"Answer Id\", p2.ViewCount FROM Posts AS p1 JOIN Posts AS p2 ON p1.ParentId = p2.Id WHERE p1.OwnerUserId = 961113 AND (p1.LastEditDate >= '2016-04-01' OR p1.CreationDate > '2016-04-01')","CreationDate":"2017-03-28 19:07:35","validated":false,"QueryBody_Original":"SELECT  DISTINCT(p1.id)as 'Answer Id' , p2.ViewCount \nFROM Posts as p1\nJOIN Posts p2 ON p1.ParentId = p2.Id\nwhere p1.OwnerUserId = 961113\nAND  (p1.LastEditDate >= '2016-04-01'  OR p1.CreationDate > '2016-04-01')"},{"QuerySetId":476020,"Title":"Top Users from Indian, Kolkata","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE LOWER(Location) LIKE '%kolkata%' OR LOWER(Location) LIKE '%india%' ORDER BY Reputation DESC LIMIT 300","CreationDate":"2016-04-21 02:10:23","validated":false,"QueryBody_Original":"SELECT  TOP 300\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kolkata%'\n    OR LOWER(Location) LIKE '%india%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":476420,"Title":"Highly upvoted questions with only one tag","Description":null,"QueryBody":"SELECT id AS \"Post Link\", tags FROM Posts WHERE score > 100 AND postTypeId = 1 AND closedDate IS NULL","CreationDate":"2016-04-22 00:15:53","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], tags\nfrom Posts\nwhere score > 100\nand postTypeId = 1\nand closedDate is null"},{"QuerySetId":476492,"Title":"Upvoted, open questions per day","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE) AS DateValue, (SELECT COUNT(Id) FROM Posts WHERE CAST(CreationDate AS DATE) = CAST(pOuter.CreationDate AS DATE) AND PostTypeId = 1 AND ClosedDate IS NULL AND DeletionDate IS NULL AND Score > 0) AS Questions FROM Posts AS pOuter GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE)","CreationDate":"2016-06-26 06:20:49","validated":false,"QueryBody_Original":"SELECT \n  CONVERT(DATE, CreationDate) AS DateValue,\n  (SELECT\n    COUNT(Id)\n    FROM Posts\n    WHERE\n      CONVERT(DATE, CreationDate) = CONVERT(DATE, pOuter.CreationDate)\n      AND PostTypeId = 1\n      AND ClosedDate IS NULL\n      AND DeletionDate IS NULL\n      AND Score > 0) AS Questions\nFROM\n  Posts pOuter\nGROUP BY CONVERT(DATE, CreationDate)\nORDER BY CONVERT(DATE, CreationDate)"},{"QuerySetId":476604,"Title":"Find all queries tagged as java spring","Description":null,"QueryBody":"SELECT posts.Id, posts.Title, posts.Body FROM Posts AS posts WHERE posts.Tags LIKE '%<java>%' AND posts.Tags LIKE '%<spring>%' AND posts.PostTypeId = 1 AND posts.CommentCount > 0","CreationDate":"2016-04-22 14:12:07","validated":false,"QueryBody_Original":"SELECT  posts.Id, posts.Title, posts.Body FROM\nPosts as posts\n  WHERE posts.Tags LIKE '%<java>%'\n  AND posts.Tags LIKE '%<spring>%'\n  AND posts.PostTypeId = 1\n  AND posts.CommentCount > 0"},{"QuerySetId":476650,"Title":"Number of comments under questions posts","Description":null,"QueryBody":"SELECT COUNT(*) FROM Comments JOIN Posts ON Comments.PostId = Posts.Id WHERE Posts.PostTypeId = 1","CreationDate":"2016-04-22 17:06:51","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Comments JOIN Posts ON Comments.PostId = Posts.Id Where Posts.PostTypeId = 1;"},{"QuerySetId":476655,"Title":"Number of users with more than 100 answers","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT COUNT(Id) AS c FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId HAVING COUNT(Id) > 100) AS temp","CreationDate":"2016-04-22 17:49:35","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM (SELECT COUNT(Id) as c FROM Posts\nWHERE PostTypeId = 2\nGROUP BY OwnerUserId\nHAVING Count(Id) > 100) as temp"},{"QuerySetId":476660,"Title":"List of users without any question and with more than 10 answers sorted by their reputation","Description":null,"QueryBody":"SELECT Users.Id, Users.Reputation FROM Users JOIN Posts ON Users.Id = Posts.OwnerUserId WHERE Posts.PostTypeId = 2 AND NOT EXISTS(SELECT * FROM Posts WHERE Posts.PostTypeId = 1 AND Posts.OwnerUserId = Users.id) GROUP BY Users.Id, Users.Reputation HAVING COUNT(Posts.Id) > 10 ORDER BY Users.Reputation DESC LIMIT 10","CreationDate":"2016-04-22 18:28:00","validated":false,"QueryBody_Original":"SELECT  TOP 10 Users.Id, Users.Reputation FROM\nUsers JOIN Posts ON Users.Id=Posts.OwnerUserId\nWHERE Posts.PostTypeId=2 AND NOT EXISTS\n(SELECT * FROM Posts WHERE Posts.PostTypeId=1 AND Posts.OwnerUserId=Users.id)\nGROUP BY Users.Id, Users.Reputation\nHAVING Count(Posts.Id)>10\nORDER BY Users.Reputation DESC"},{"QuerySetId":476680,"Title":"Users with highest average answer score ","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS UserId, AVG(1.0 * Posts.Score) AS AverageScore FROM Posts WHERE Posts.PostTypeId = 2 AND NOT Posts.OwnerUserId IS NULL GROUP BY Posts.OwnerUserId ORDER BY AverageScore DESC LIMIT 20","CreationDate":"2016-04-22 18:33:50","validated":false,"QueryBody_Original":"SELECT  TOP 20 Posts.OwnerUserId AS UserId, AVG(1.0 * Posts.Score) AS AverageScore\nFROM Posts\nWHERE Posts.PostTypeId=2 AND Posts.OwnerUserId IS NOT NULL\nGROUP BY Posts.OwnerUserId\nORDER BY AverageScore DESC"},{"QuerySetId":476983,"Title":"Average number of answers for questions","Description":null,"QueryBody":"SELECT AVG(1.0 * AnswerCount) FROM Posts WHERE PostTypeId = 1 AND Score > 0","CreationDate":"2016-10-04 04:28:34","validated":false,"QueryBody_Original":"SELECT  AVG(1.0 * AnswerCount) FROM\nPosts WHERE PostTypeId=1 AND Score > 0"},{"QuerySetId":477121,"Title":"looking for padrino or sinatra get parameter handling","Description":null,"QueryBody":"SELECT * FROM posts WHERE body LIKE '%sinatra%' AND body LIKE '%get%' AND body LIKE '%parameters%'","CreationDate":"2016-04-24 03:12:12","validated":false,"QueryBody_Original":"SELECT  * from posts where body like '%sinatra%' and body like '%get%' and body like '%parameters%';"},{"QuerySetId":477690,"Title":"Top 150 users from Bangladesh","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Bangladesh%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2016-04-25 14:15:18","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Bangladesh%'\n   --OR Location like N'%Kozhi%'\n   --OR Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":477815,"Title":"Average question score vs Average answer score","Description":null,"QueryBody":"SELECT questions.OwnerUserId, qs, qavg, \"as\", aavg, UpVotes - DownVotes AS deltavote FROM (SELECT OwnerUserId, COUNT(OwnerUserID) AS qs, AVG(score) AS qavg FROM posts WHERE PostTypeId = 1 GROUP BY OwnerUserId) AS questions INNER JOIN (SELECT OwnerUserId, COUNT(OwnerUserID) AS \"as\", AVG(score) AS aavg FROM posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS answers ON questions.OwnerUserId = answers.OwnerUserId INNER JOIN users ON users.Id = questions.OwnerUserId ORDER BY qavg DESC LIMIT 1000","CreationDate":"2016-04-25 18:35:48","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  questions.OwnerUserId, qs, qavg, \"as\", aavg, UpVotes-DownVotes AS deltavote\nFROM (\n  SELECT OwnerUserId, COUNT(OwnerUserID) AS qs, AVG(score) AS qavg\n  FROM posts\n  WHERE PostTypeId = 1\n  GROUP BY OwnerUserId\n  ) AS questions\nINNER JOIN (\n  SELECT OwnerUserId, COUNT(OwnerUserID) AS \"as\", AVG(score) AS aavg\n  FROM posts\n  WHERE PostTypeId = 2\n  GROUP BY OwnerUserId\n  ) AS answers ON questions.OwnerUserId = answers.OwnerUserId\nINNER JOIN users ON users.Id=questions.OwnerUserId \nORDER BY qavg DESC"},{"QuerySetId":477836,"Title":"Users with at least 100 bronze badges","Description":null,"QueryBody":"SELECT U.id AS \"User Link\", COUNT(B.id) AS \"Bronze Badges\" FROM Users AS U JOIN Badges AS B ON U.id = B.userId WHERE B.class = 3 GROUP BY U.id HAVING COUNT(B.id) >= 100 ORDER BY COUNT(B.id) DESC","CreationDate":"2016-04-25 18:50:05","validated":false,"QueryBody_Original":"SELECT  U.id as [User Link], count(B.id) as 'Bronze Badges'\nfrom Users U\njoin Badges B\non U.id = B.userId\nwhere B.class = 3\ngroup by U.id\nhaving count(B.id) >= 100\norder by count(B.id) desc;"},{"QuerySetId":478215,"Title":"Number of users active in last half hour","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE LastAccessDate > DATEADD(d, -1, GETDATE())","CreationDate":"2016-04-26 19:37:17","validated":false,"QueryBody_Original":"SELECT  DisplayName FROM Users WHERE LastAccessDate > dateadd(d, -1, getdate())"},{"QuerySetId":478553,"Title":"Top 50 Stack Overflow Users Of Nepal","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC), Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%nepal%' OR UPPER(Location) LIKE '%NP' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-04-27 19:03:21","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC), \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n      LOWER(Location) LIKE '%nepal%'\n      OR UPPER(Location) LIKE '%NP'\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":478851,"Title":"count of comments for questions","Description":null,"QueryBody":"SELECT UserId FROM Comments WHERE NOT UserId IS NULL GROUP BY UserId ORDER BY COUNT(*) DESC","CreationDate":"2016-04-28 15:57:06","validated":false,"QueryBody_Original":"SELECT  UserId\n  from Comments\n  where UserId  IS NOT NULL\n  group by UserId\n  order by count(*) desc"},{"QuerySetId":478926,"Title":"Top 100 users from Hyderbad India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE Location LIKE '%Hyderabad%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2016-04-28 16:01:15","validated":false,"QueryBody_Original":"SELECT  TOP  1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    Location LIKE '%Hyderabad%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":479290,"Title":"finding users which their answers is more than 1000","Description":null,"QueryBody":"SELECT x.OwnerUserId FROM (SELECT Posts.OwnerUserId, s.cnt FROM Posts INNER JOIN (SELECT Posts.OwnerUserId, COUNT(OwnerUserId) AS cnt FROM Posts WHERE PostTypeId = 2 GROUP BY Posts.OwnerUserId) AS s ON Posts.OwnerUserId = s.OwnerUserId) AS x WHERE x.cnt > 1000 GROUP BY x.OwnerUserId","CreationDate":"2016-04-29 15:34:56","validated":false,"QueryBody_Original":"SELECT  x.OwnerUserId\nfrom (SELECT Posts.OwnerUserId,s.cnt\n      from Posts inner join (SELECT Posts.OwnerUserId, count(OwnerUserId)as cnt\n                             FROM Posts\n                             WHERE PostTypeId = 2\n                             group by Posts.OwnerUserId) as s on Posts.OwnerUserId=s.OwnerUserId )as x\nwhere x.cnt>1000\ngroup by x.OwnerUserId"},{"QuerySetId":479630,"Title":"Habib comments from 2016 April onward","Description":null,"QueryBody":"SELECT Text, PostId AS \"Post Link\" FROM Comments WHERE UserId = 961113 AND CreationDate >= '2016-04-01' ORDER BY Score DESC","CreationDate":"2017-03-28 19:11:12","validated":false,"QueryBody_Original":"SELECT  \n    Text,\n    PostId [Post Link]\n  \nFROM \n    Comments\nWHERE \n    UserId = 961113\n    AND CreationDate >= '2016-04-01'\nORDER BY \n    Score DESC"},{"QuerySetId":480579,"Title":"\u0634\u0646\u0627\u0633\u0647 \u06a9\u0627\u0631\u0628\u0631\u06cc \u06a9\u0647 \u0628\u06cc\u0634\u062a\u0631\u06cc\u0646 \u062a\u0639\u062f\u0627\u062f \u06a9\u0627\u0645\u0646\u062a \u0631\u0627 \u06af\u0630\u0627\u0634\u062a\u0647 \u0627\u0633\u062a","Description":null,"QueryBody":"SELECT \"posttypeid\" AS q1 FROM \"posts\" WHERE \"posttypeid\" = 1","CreationDate":"2016-04-30 17:35:11","validated":false,"QueryBody_Original":"SELECT  [posttypeid] as q1 from [posts] where [posttypeid] = 1 ;"},{"QuerySetId":481722,"Title":"Top 200 SO Users from Pune","Description":"Top 200 SO Users from Pune, Maharashtra, India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%phoenix%' OR UPPER(Location) LIKE '%PHOENIX%' OR Location LIKE '%Phoenix%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 200","CreationDate":"2019-07-17 23:55:28","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%phoenix%'\n    OR UPPER(Location) LIKE '%PHOENIX%'\n    or Location like '%Phoenix%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":481723,"Title":"Top 2500 SO Users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%bangladesh' ORDER BY Reputation DESC LIMIT 2500","CreationDate":"2019-05-07 13:18:49","validated":false,"QueryBody_Original":"SELECT  TOP 2500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":481934,"Title":"unaccepted question rate, grouped by user","Description":"for each person who has asked a question on the site, display the userid and their unaccepted-question percentage (their Q's that have no accepted answer divided by their Q's; where Q's are further filtered to be 'not closed' and 'at least one answer')","QueryBody":"SELECT Users.Id AS \"User Link\", Posts.Id AS \"Post Link\" FROM Users JOIN Posts ON Posts.OwnerUserId = Users.Id WHERE Posts.ClosedDate IS NULL AND Posts.AnswerCount > 0 LIMIT 50","CreationDate":"2016-05-02 20:12:52","validated":false,"QueryBody_Original":"SELECT  TOP 50 Users.Id AS [User Link], Posts.Id AS [Post Link]\nfrom Users\njoin Posts on Posts.OwnerUserId = Users.Id\nwhere Posts.ClosedDate is NULL and Posts.AnswerCount > 0\n\n-- SELECT Id AS [Post Link], *\n-- from posts\n-- where posttypeid=1 and\n-- OwnerUserId IN (SELECT distinct owneruserid from posts where posttypeid=1)\n-- and acceptedanswerid is NULL\n-- and ClosedDate is NULL\n-- and AnswerCount > 0"},{"QuerySetId":482023,"Title":"Janitor: posts that contain 'kali' but are not tagged kali","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts WHERE NOT Tags LIKE '%kali-linux%' AND (Body LIKE '%kali%' COLLATE SQL_Latin1_General_Cp1_CI_AS OR Title LIKE '%kali%' COLLATE SQL_Latin1_General_Cp1_CI_AS) AND ClosedDate IS NULL ORDER BY CreationDate DESC","CreationDate":"2017-03-26 23:03:05","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], * from Posts \nwhere Tags NOT LIKE '%kali-linux%' and\n(Body LIKE '%kali%' COLLATE SQL_Latin1_General_Cp1_CI_AS OR Title LIKE '%kali%' COLLATE SQL_Latin1_General_Cp1_CI_AS)\nand ClosedDate IS NULL\nORDER BY CreationDate DESC"},{"QuerySetId":482165,"Title":"How many questions contain the word \"Basically\"","Description":null,"QueryBody":"SELECT COUNT(id) FROM posts WHERE posttypeid = 1","CreationDate":"2016-05-03 08:06:16","validated":false,"QueryBody_Original":"SELECT  count(id) from posts\nwhere posttypeid = 1;"},{"QuerySetId":482444,"Title":"Top 100 Users by Badge Count","Description":null,"QueryBody":"SELECT Badges.UserId AS \"User Link\", Users.Reputation, COUNT(*) AS BadgeCount FROM Badges INNER JOIN Users ON Badges.UserId = Users.Id GROUP BY Badges.UserId, Users.Reputation ORDER BY BadgeCount DESC LIMIT 100","CreationDate":"2016-05-04 04:09:01","validated":false,"QueryBody_Original":"SELECT  TOP 100 Badges.UserId AS [User Link], Users.Reputation, count(*) AS BadgeCount\n    FROM Badges\n    INNER JOIN Users on Badges.UserId=Users.Id\n    GROUP BY Badges.UserId, Users.Reputation\n    ORDER BY BadgeCount DESC"},{"QuerySetId":482445,"Title":"Youngest Users With More than 100 Reputation","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM (SELECT * FROM Users WHERE Age <> '' AND Age >= 13 AND Reputation > 100 ORDER BY Age LIMIT 100) AS users","CreationDate":"2016-05-04 03:40:24","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], * FROM(SELECT TOP 100 * FROM Users\n  WHERE Age<>'' AND Age >= 13\n  AND Reputation > 100\n  ORDER BY Age ASC) users"},{"QuerySetId":482449,"Title":"Youngest Users With More than 5000 Reputation","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM (SELECT * FROM Users WHERE Age <> '' AND Age >= 13 AND Reputation > 5000 ORDER BY Age LIMIT 100) AS users","CreationDate":"2016-05-04 03:40:10","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], * FROM(SELECT TOP 100 * FROM Users\n  WHERE Age<>'' AND Age >= 13\n  AND Reputation > 5000\n  ORDER BY Age ASC) users"},{"QuerySetId":482456,"Title":"Users By Last Access Date","Description":null,"QueryBody":"SELECT (YEAR(LastAccessDate) + (CAST(MONTH(LastAccessDate) AS FLOAT) \/ 12)) AS GraphPoint \/* For StackExchange Data's graph function *\/, COUNT(*) AS NumUsers FROM Users WHERE (YEAR(LastAccessDate) <> YEAR(CURRENT_TIMESTAMP()) OR MONTH(LastAccessDate) <> MONTH(CURRENT_TIMESTAMP())) GROUP BY YEAR(LastAccessDate), MONTH(LastAccessDate) ORDER BY YEAR(LastAccessDate), MONTH(LastAccessDate)","CreationDate":"2016-05-04 06:46:35","validated":false,"QueryBody_Original":"SELECT \n  (YEAR(LastAccessDate) + (CAST(MONTH(LastAccessDate) AS float)\/12)) AS GraphPoint, -- For StackExchange Data's graph function\n  -- YEAR(LastAccessDate) AS LastAccessYear, -- Commented out for graphing\n  -- MONTH(LastAccessDate) AS LastAccessMonth, -- Commented out for graphing\n  COUNT(*) AS NumUsers\n\nFROM Users\nWHERE (YEAR(LastAccessDate)<>YEAR(GETDATE()) OR MONTH(LastAccessDate)<>MONTH(GETDATE()))\n  \n  GROUP BY YEAR(LastAccessDate), MONTH(LastAccessDate)\n  ORDER BY YEAR(LastAccessDate), MONTH(LastAccessDate) ASC"},{"QuerySetId":482566,"Title":"All questions from the last n days","Description":null,"QueryBody":"SELECT * FROM Posts AS p WHERE p.PosttypeId = 1 AND p.AnswerCount > 0 AND p.CreationDate >= DATEADD(day, -5, GETDATE())","CreationDate":"2016-05-05 11:50:42","validated":false,"QueryBody_Original":"SELECT  * from Posts p\nwhere \np.PosttypeId=1 and p.AnswerCount>0\nand p.CreationDate >= dateadd(day, -5, getdate())"},{"QuerySetId":482816,"Title":"Users in Countries discussing \"Applications\"","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"User Rank\", DisplayName AS \"Name\", Id AS \"User\", Age, Reputation, LastAccessDate AS \"Last Used\" \/* , Posts *\/ FROM Users \/* , Posts *\/\/* and (body like '%pplicatio%') *\/  WHERE \/* and (body like '%pplicatio%') *\/ UPPER(Location) LIKE UPPER('%##CountryName##%') \/* and (body like '%pplicatio%') *\/ AND LOWER(Location) LIKE LOWER('%##CountryName##%') ORDER BY Reputation DESC","CreationDate":"2016-05-05 01:24:12","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [User Rank], \n    DisplayName AS [Name],\n    Id AS [User], \n    Age,\n    Reputation,\n    LastAccessDate AS [Last Used]\n\nFROM\n    Users--, Posts\nWHERE\nUPPER (Location) LIKE UPPER('%##CountryName##%') --and (body like '%pplicatio%')\nand LOWER (Location) LIKE LOWER('%##CountryName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":482831,"Title":"Top Users' Demographic and Information by Country","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"User Rank\", DisplayName AS \"Name\", Id AS \"User\", Age, Reputation, LastAccessDate AS \"Last Used\" \/* , Posts *\/ FROM Users \/* , Posts *\/\/* and (body like '%pplicatio%') *\/  WHERE \/* and (body like '%pplicatio%') *\/ UPPER(Location) LIKE UPPER('%##CountryName##%') \/* and (body like '%pplicatio%') *\/ AND LOWER(Location) LIKE LOWER('%##CountryName##%') ORDER BY Reputation DESC","CreationDate":"2016-05-05 01:32:44","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [User Rank], \n    DisplayName AS [Name],\n    Id AS [User], \n    Age,\n    Reputation,\n    LastAccessDate AS [Last Used]\n\nFROM\n    Users--, Posts\nWHERE\nUPPER (Location) LIKE UPPER('%##CountryName##%') --and (body like '%pplicatio%')\nand LOWER (Location) LIKE LOWER('%##CountryName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":482849,"Title":"Questions from top 20 by vote delta","Description":null,"QueryBody":"SELECT Posts.OwnerUserId, COUNT(OwnerUserId) FROM POSTS WHERE Posts.ParentId IS NULL AND OwnerUserId IN (SELECT Users.Id FROM Users WHERE Id <> -1 ORDER BY UpVotes - DownVotes LIMIT 20) GROUP BY OwnerUserId","CreationDate":"2016-05-05 06:22:18","validated":false,"QueryBody_Original":"SELECT  Posts.OwnerUserId, COUNT(OwnerUserId)\nFROM POSTS\nWHERE Posts.ParentId IS NULL\nAND OwnerUserId in (\n  SELECT TOP 20 Users.Id\n  FROM Users\n  WHERE Id != -1\n  Order By UpVotes-DownVotes\n)\nGROUP BY OwnerUserId"},{"QuerySetId":482851,"Title":"Votes Answers from top 20 by vote delta","Description":null,"QueryBody":"SELECT Posts.OwnerUserId, COUNT(OwnerUserId), SUM(Score) FROM POSTS WHERE Posts.ParentId IS NULL AND OwnerUserId IN (SELECT Users.Id FROM Users WHERE Id <> -1 ORDER BY UpVotes - DownVotes LIMIT 20) GROUP BY OwnerUserId","CreationDate":"2016-05-05 06:32:37","validated":false,"QueryBody_Original":"SELECT  Posts.OwnerUserId, COUNT(OwnerUserId), SUM(Score)\nFROM POSTS\nWHERE Posts.ParentId IS NULL\nAND OwnerUserId in (\n  SELECT TOP 20 Users.Id\n  FROM Users\n  WHERE Id != -1\n  Order By UpVotes-DownVotes\n)\nGROUP BY OwnerUserId"},{"QuerySetId":482874,"Title":"Get posts starting with \"-1\"","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE \"Body\" LIKE '<p>-1 %'","CreationDate":"2016-05-05 10:39:38","validated":false,"QueryBody_Original":"SELECT  Id As [Post Link]\nFrom Posts\nWhere [Body] Like '<p>-1 %'"},{"QuerySetId":483272,"Title":"Users By Location And Tag","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%##Location##%' ORDER BY Reputation DESC","CreationDate":"2016-05-06 21:56:55","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location\nFROM Users\nWHERE Location like '%##Location##%'\nORDER BY Reputation DESC"},{"QuerySetId":483485,"Title":"number of questions per day","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(creationdate, '%Y-%m-%d %H:%M:%S') AS TEXT(10)) AS date, COUNT(1) FROM posts WHERE posttypeid = 1 GROUP BY CAST(TIME_TO_STR(creationdate, '%Y-%m-%d %H:%M:%S') AS TEXT(10)) ORDER BY date","CreationDate":"2016-05-07 22:02:04","validated":false,"QueryBody_Original":"SELECT  convert(varchar(10),creationdate,120) as date, count(1) from posts \nwhere posttypeid=1\ngroup by convert(varchar(10),creationdate,120)\norder by date"},{"QuerySetId":483500,"Title":"Top 50 Users From Sri lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%sri lanka' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-05-07 17:00:02","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%sri lanka'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":483802,"Title":"Questions needing attention to avoid Roomba carnage - only me","Description":null,"QueryBody":"SELECT Posts.Title, Posts.CreationDate, Posts.OwnerUserId, Users.DisplayName, ViewCount, Posts.Id AS \"Post Link\", Tags FROM Posts, Users WHERE Users.Id = Posts.OwnerUserId AND Posts.PostTypeId = 1 AND Users.DisplayName = 'Franck Dernoncourt' ORDER BY Posts.CreationDate","CreationDate":"2016-05-09 06:56:47","validated":false,"QueryBody_Original":"SELECT  Posts.Title , Posts.CreationDate, Posts.OwnerUserId, Users.DisplayName, ViewCount, Posts.Id as [Post Link], Tags\nfrom Posts, Users\nwhere Users.Id = Posts.OwnerUserId \nand Posts.PostTypeId = 1\nand Users.DisplayName = 'Franck Dernoncourt'\norder by Posts.CreationDate asc"},{"QuerySetId":484041,"Title":"Top questions with zero answers since Jan 2016","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", title, p.tags AS Tags, p.ViewCount AS \"Views\", p.score AS \"Score\", p.AnswerCount AS \"Answers\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS \"Age (days)\", p.AcceptedAnswerId AS \"Answer Accepted?\" FROM posts AS p WHERE p.AcceptedAnswerId IS NULL AND p.CreationDate >= '20160101' AND p.AnswerCount = 0 AND (p.tags LIKE '%<uwp>%' OR p.tags LIKE '%<windows-10-universal>%' OR (p.tags LIKE '%<xaml>%' AND p.tags LIKE '%<windows-10>%')) ORDER BY p.viewcount DESC","CreationDate":"2016-05-09 21:33:59","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  title,\n  p.tags as Tags,\n  p.ViewCount as \"Views\", \n  p.score as \"Score\", \n  p.AnswerCount as \"Answers\", \n  DATEDIFF(day,p.CreationDate,getdate()) as \"Age (days)\",\n  p.AcceptedAnswerId as \"Answer Accepted?\"\n\nfrom posts p\n\nwhere\n\n  p.AcceptedAnswerId is null and\n  p.CreationDate >= '20160101' and\n  p.AnswerCount = 0 and\n\n  (\n    p.tags like '%<uwp>%' or p.tags like '%<windows-10-universal>%'\n    or\n    (p.tags like '%<xaml>%' and p.tags like '%<windows-10>%')\n  )\n\n\norder by p.viewcount desc;"},{"QuerySetId":484110,"Title":"Buscar Usuarios por Pa\u00eds y Reputaci\u00f3n","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##NombrePais##%') ORDER BY Reputation DESC","CreationDate":"2016-05-10 00:34:02","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##NombrePais##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":484193,"Title":"number of answers per day","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(creationdate, '%Y-%m-%d %H:%M:%S') AS TEXT(10)) AS date, COUNT(1) FROM posts WHERE posttypeid = 2 GROUP BY CAST(TIME_TO_STR(creationdate, '%Y-%m-%d %H:%M:%S') AS TEXT(10)) ORDER BY date","CreationDate":"2016-05-10 08:45:38","validated":false,"QueryBody_Original":"SELECT  convert(varchar(10),creationdate,120) as date, count(1) from posts \nwhere posttypeid=2\ngroup by convert(varchar(10),creationdate,120)\norder by date"},{"QuerySetId":484195,"Title":"number of questions per month","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(creationdate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) AS date, COUNT(1) AS questions FROM posts WHERE posttypeid = 1 GROUP BY CAST(TIME_TO_STR(creationdate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) ORDER BY date","CreationDate":"2016-05-10 09:15:16","validated":false,"QueryBody_Original":"SELECT  convert(varchar(7),creationdate,120) as date, count(1) as questions from posts \nwhere posttypeid=1\ngroup by convert(varchar(7),creationdate,120)\norder by date"},{"QuerySetId":484196,"Title":"number of answers per month","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(creationdate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) AS date, COUNT(1) AS answers FROM posts WHERE posttypeid = 2 GROUP BY CAST(TIME_TO_STR(creationdate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) ORDER BY date","CreationDate":"2016-08-02 15:03:33","validated":false,"QueryBody_Original":"SELECT  convert(varchar(7),creationdate,120) as date, count(1) as answers from posts \nwhere posttypeid=2\ngroup by convert(varchar(7),creationdate,120)\norder by date"},{"QuerySetId":484269,"Title":"Questions linked to JavaScript function expressions and function declarations","Description":null,"QueryBody":"SELECT Id, ViewCount, Title, Tags, AnswerCount, CommentCount, FavoriteCount FROM Posts WHERE Id IN (SELECT PostId FROM Posts JOIN PostLinks ON Posts.Id = PostLinks.RelatedPostId WHERE RelatedPostId = 336859)","CreationDate":"2016-05-10 14:40:32","validated":false,"QueryBody_Original":"SELECT  Id, ViewCount, Title, Tags, AnswerCount, CommentCount, FavoriteCount\nFROM Posts\nWHERE Id IN\n(\nSELECT PostId \nFROM Posts JOIN PostLinks ON Posts.Id = PostLinks.RelatedPostId\nWHERE RelatedPostId = 336859 \n)"},{"QuerySetId":484460,"Title":"Users from Poland by Reputation","Description":null,"QueryBody":"SELECT Reputation, DisplayName, Location FROM Users WHERE LOWER(Location) LIKE '%poland%' ORDER BY Reputation DESC","CreationDate":"2016-08-31 16:21:26","validated":false,"QueryBody_Original":"SELECT  Reputation, DisplayName, Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%poland%'\nORDER BY Reputation DESC"},{"QuerySetId":484525,"Title":"select * from Posts where Title like '%pandas%'","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Title LIKE '%pandas%'","CreationDate":"2016-05-10 23:35:07","validated":false,"QueryBody_Original":"SELECT  * from Posts where Title like '%pandas%'"},{"QuerySetId":484578,"Title":"Number of Users Who Can View Google Analytics Data for the Site","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Analytics Users\" FROM Users WHERE Reputation >= 25000","CreationDate":"2016-05-11 03:27:29","validated":false,"QueryBody_Original":"SELECT  COUNT(*) AS [Analytics Users] FROM Users WHERE Reputation >= 25000"},{"QuerySetId":484621,"Title":"Average Reputation Per User Per Day","Description":null,"QueryBody":"SELECT (Reputation \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS DailyAvg, COUNT(*) AS UserCount FROM Users WHERE (Reputation \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) > 0 GROUP BY (Reputation \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) ORDER BY (Reputation \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) DESC","CreationDate":"2016-05-11 05:44:17","validated":false,"QueryBody_Original":"SELECT \n(Reputation \/ DATEDIFF(DAY, CreationDate, GETDATE())) AS DailyAvg,\nCOUNT(*) AS UserCount\nFROM Users\nWHERE (Reputation \/ DATEDIFF(DAY, CreationDate, GETDATE()))>0\nGROUP BY (Reputation \/ DATEDIFF(DAY, CreationDate, GETDATE()))\nORDER BY (Reputation \/ DATEDIFF(DAY, CreationDate, GETDATE())) DESC"},{"QuerySetId":484643,"Title":"Average reputation of all users","Description":"Displays the average reputation of all users currently on the site","QueryBody":"SELECT COUNT(id) FROM Users WHERE reputation >= 200","CreationDate":"2016-05-11 08:57:54","validated":false,"QueryBody_Original":"SELECT  count(id)\nfrom Users where reputation >= 200"},{"QuerySetId":484745,"Title":"Users with > 10 rep","Description":null,"QueryBody":"SELECT Id, Reputation, DisplayName FROM Users WHERE Reputation > 10","CreationDate":"2016-05-11 14:57:40","validated":false,"QueryBody_Original":"SELECT  Id, Reputation, DisplayName FROM Users WHERE Reputation > 10"},{"QuerySetId":485312,"Title":"Unanswered questions from users with reputation >= 100","Description":null,"QueryBody":"SELECT u.DisplayName, u.LastAccessDate, p.title FROM users AS u JOIN posts AS p ON u.id = p.OwnerUserId AND u.reputation BETWEEN 50 AND 57 WHERE p.ViewCount BETWEEN 10000 AND 12000 ORDER BY 2 DESC","CreationDate":"2016-05-12 22:55:58","validated":false,"QueryBody_Original":"SELECT  u.DisplayName, u.LastAccessDate, p.title\nfrom users u\njoin posts p on u.id=p.OwnerUserId and u.reputation between 50 and 57\nwhere p.ViewCount between 10000 and 12000\n  order by 2 desc;"},{"QuerySetId":485366,"Title":"Evolution of the number of new users","Description":"Number of new users per days.","QueryBody":"SELECT CAST(STR(YEAR(CreationDate)) + '-' + STR(MONTH(CreationDate)) + '-' + STR(DAY(CreationDate)) AS DATE) AS FullDate, COUNT(*) AS Total FROM Users GROUP BY STR(YEAR(CreationDate)) + '-' + STR(MONTH(CreationDate)) + '-' + STR(DAY(CreationDate)) ORDER BY FullDate DESC","CreationDate":"2016-05-13 00:54:19","validated":false,"QueryBody_Original":"SELECT  \n  CAST(STR(year(CreationDate)) + '-' + STR(month(CreationDate)) + '-' + STR(day(CreationDate)) as date) as FullDate,\n  count(*) as Total\nFROM \n  Users\nGROUP BY STR(year(CreationDate)) + '-' + STR(month(CreationDate)) + '-' + STR(day(CreationDate))\nORDER BY FullDate DESC"},{"QuerySetId":485882,"Title":"Percentage of tags with wikis by site","Description":"See which sites are most conscientious about writing tag wikis.","QueryBody":"SELECT COUNT(t.Id) AS \"All tags\", COUNT(t2.Id) AS \"Tags with excerpt\", 100.0 * COUNT(t2.Id) \/ COUNT(t.Id) AS \"Percent\" FROM Tags AS t LEFT JOIN Tags AS t2 ON t.Id = t2.Id AND NOT t2.ExcerptPostId IS NULL","CreationDate":"2016-05-15 10:29:41","validated":false,"QueryBody_Original":"SELECT  count(t.Id) as [All tags],\n       count(t2.Id) as [Tags with excerpt],\n       100.0*count(t2.Id)\/count(t.Id) as [Percent]\nfrom Tags t\nleft join Tags t2 on t.Id = t2.Id and t2.ExcerptPostId is not null"},{"QuerySetId":485968,"Title":"Most favorited question in a given tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, FavoriteCount FROM Posts WHERE (PostTypeId = 1) AND (Tags LIKE '%##Name##%') ORDER BY FavoriteCount DESC LIMIT 1000","CreationDate":"2016-05-15 20:04:07","validated":false,"QueryBody_Original":"SELECT  TOP 1000\nId AS [Post Link], Title, FavoriteCount\nFROM Posts\nWHERE (PostTypeId=1) and (Tags like '%##Name##%')\nORDER BY FavoriteCount DESC"},{"QuerySetId":486158,"Title":"Top users from Bath, UK","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Bath%' OR UPPER(Location) LIKE '%BATH%' OR Location LIKE '%Bath%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2016-05-16 11:54:54","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Bath%'\n    OR UPPER(Location) LIKE '%BATH%'\n    or Location like '%Bath%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":486384,"Title":"Posts with negative score sorted by date","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score FROM Posts WHERE Score < 0 ORDER BY CreationDate","CreationDate":"2016-05-16 23:30:39","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Score FROM Posts WHERE Score < 0 ORDER BY CreationDate"},{"QuerySetId":486443,"Title":"How many distinct users have asked questions","Description":null,"QueryBody":"SELECT COUNT(DISTINCT p.AcceptedAnswerId), p2.OwnerUserId FROM Posts AS p, Posts AS p2 GROUP BY p2.OwnerUserId ORDER BY COUNT(DISTINCT p.AcceptedAnswerId) DESC","CreationDate":"2016-05-18 06:39:50","validated":false,"QueryBody_Original":"SELECT  Count(DISTINCT p.AcceptedAnswerId), p2.OwnerUserId\nFROM Posts p, Posts p2\nGROUP BY p2.OwnerUserId\nORDER BY Count(DISTINCT p.AcceptedAnswerId) DESC;"},{"QuerySetId":487616,"Title":"Get amount of users by location","Description":null,"QueryBody":"SELECT Location, COUNT(*) AS amount FROM Users GROUP BY Location","CreationDate":"2016-05-18 20:29:25","validated":false,"QueryBody_Original":"SELECT  Location, count(*) as amount\n\nfrom Users\n\ngroup by Location"},{"QuerySetId":487617,"Title":"Find questions that were closed as too broad and have body like \"I am looking for\"","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Body, q.ClosedDate FROM Posts AS q INNER JOIN PostHistory AS ph ON q.Id = ph.PostId WHERE q.PostTypeId = 1 AND NOT ClosedDate IS NULL AND ph.Comment = '104' AND q.body LIKE '%I am looking for%' ORDER BY q.CreationDate DESC","CreationDate":"2016-05-19 06:47:48","validated":false,"QueryBody_Original":"SELECT \n  q.Id [Post Link],\n  q.Body,\n  q.ClosedDate\nfrom Posts q\ninner join PostHistory ph on q.Id = ph.PostId\nwhere q.PostTypeId = 1\nand ClosedDate is not null\nand ph.Comment = '104'\nand q.body like '%I am looking for%'\n\norder by q.CreationDate desc"},{"QuerySetId":487701,"Title":"Posts where the Asker edited answers","Description":null,"QueryBody":"SELECT q.owneruserid AS \"User Link\", u.reputation, COUNT(ph.postid) OVER (PARTITION BY q.owneruserid) AS editCount, ph.text FROM posts AS q INNER JOIN posts AS a ON a.parentid = q.id INNER JOIN posthistory AS ph ON a.id = ph.postid AND a.owneruserid <> q.owneruserid \/* exclude self answers *\/ INNER JOIN Users AS u ON q.OwnerUserId = u.id WHERE q.owneruserid = ph.userid AND ph.posthistorytypeid = 5 \/* body edits *\/ ORDER BY COUNT(ph.postid) OVER (PARTITION BY q.owneruserid) DESC","CreationDate":"2016-05-18 23:30:35","validated":false,"QueryBody_Original":"SELECT  q.owneruserid    [User Link], \n       u.reputation, \n       Count(ph.postid) over (partition by q.owneruserid) editCount ,\n       ph.text\nFROM   posts q \n       INNER JOIN posts a \n               ON a.parentid = q.id \n       INNER JOIN posthistory ph \n               ON a.id = ph.postid \n                  AND a.owneruserid <> q.owneruserid --exclude self answers \n       INNER JOIN Users u\n               ON q.OwnerUserId = u.id\nWHERE  q.owneruserid = ph.userid \n       AND ph.posthistorytypeid = 5 --body edits \n\nORDER  BY Count(ph.postid) over (partition by q.owneruserid) DESC"},{"QuerySetId":487715,"Title":"What is the average question score per view?","Description":"http:\/\/meta.stackexchange.com\/questions\/279418\/what-is-the-average-question-score-per-view\/279421#279421","QueryBody":"SELECT SUM(CAST(scores AS INT)) AS sc, SUM(CAST(views AS INT)) AS vi, SUM(CAST(upvotes AS INT)) AS uv, SUM(CAST(downvotes AS INT)) AS dv FROM (SELECT p.id AS id, score AS scores, viewcount AS views, SUM(CASE WHEN v.votetypeid = 2 THEN 1 ELSE 0 END) AS upvotes, SUM(CASE WHEN v.votetypeid = 3 THEN 1 ELSE 0 END) AS downvotes FROM posts AS p INNER JOIN votes AS v ON v.postid = p.id\/* upmod \/downmod *\/  WHERE p.posttypeid = 1 \/* Q *\/ AND v.votetypeid IN (2, 3) GROUP BY p.id, score, viewcount) AS allposts","CreationDate":"2016-05-18 23:44:29","validated":false,"QueryBody_Original":"SELECT  sum(cast(scores as bigint)) as sc\n    ,  sum(cast(views as bigint)) as vi\n    ,  sum(cast(upvotes as bigint)) as uv\n    , sum(cast(downvotes as bigint)) as dv\nfrom (\nSELECT p.id as id\n     , score as scores\n     , viewcount as views\n     , sum( case when v.votetypeid = 2 then 1 else 0 end) as upvotes  \n     , sum( case when v.votetypeid = 3 then 1 else 0 end) as downvotes  \nfrom posts  p\ninner join votes v on v.postid = p.id\nwhere p.posttypeid = 1 -- Q\nand v.votetypeid in (2,3) -- upmod \/downmod\ngroup by p.id, score, viewcount\n) allposts"},{"QuerySetId":487765,"Title":"Find questions that were closed and have body like \"How do I get started\"","Description":null,"QueryBody":"SELECT COUNT(q.Id) FROM Posts AS q INNER JOIN PostHistory AS ph ON q.Id = ph.PostId WHERE q.PostTypeId = 1 AND NOT ClosedDate IS NULL AND q.body LIKE '%started%'","CreationDate":"2016-05-19 00:57:55","validated":false,"QueryBody_Original":"SELECT  count(q.Id)\nfrom Posts q\ninner join PostHistory ph on q.Id = ph.PostId\nwhere q.PostTypeId = 1\nand ClosedDate is not null\nand q.body like '%started%'"},{"QuerySetId":488127,"Title":"Unanswered questions by active users","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE LastAccessDate >= DATEDIFF(CURRENT_TIMESTAMP(), 2)","CreationDate":"2016-05-19 16:43:48","validated":false,"QueryBody_Original":"SELECT  DisplayName FROM Users WHERE LastAccessDate >= DATEDIFF(d, 2, GETDATE())"},{"QuerySetId":488172,"Title":"Questions favorited multiple times by the same users","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", UserId AS \"User Link\", COUNT(*) AS \"Duplication Level\", MIN(CreationDate) AS MinDate, MAX(CreationDate) AS MaxDate, DATEDIFF(MAX(CreationDate), MIN(CreationDate)) FROM Votes WHERE VoteTypeId = 5 GROUP BY PostId, UserId HAVING COUNT(*) > 1 AND DATEDIFF(MAX(CreationDate), MIN(CreationDate)) > 0 ORDER BY COUNT(*) DESC","CreationDate":"2016-05-19 18:24:09","validated":false,"QueryBody_Original":"SELECT \n  PostId AS [Post Link],\n  UserId AS [User Link],\n  COUNT(*) AS [Duplication Level],\n  MIN(CreationDate) AS MinDate,\n  MAX(CreationDate) AS MaxDate,\n  DATEDIFF(day,MIN(CreationDate),MAX(CreationDate))\nFROM Votes\nWHERE VoteTypeId = 5 \nGROUP BY PostId, UserId\nHAVING COUNT(*) > 1 AND DATEDIFF(day,MIN(CreationDate),MAX(CreationDate)) > 0\nORDER BY COUNT(*) DESC;"},{"QuerySetId":488417,"Title":"Top questions with zero answers since May 1, 2016","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", title, p.tags AS Tags, p.ViewCount AS \"Views\", p.score AS \"Score\", p.AnswerCount AS \"Answers\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS \"Age (days)\", p.AcceptedAnswerId AS \"Answer Accepted?\" FROM posts AS p\/* is null and *\/  WHERE p.AnswerCount = 0 AND p.CreationDate >= '20160401' ORDER BY p.viewcount DESC","CreationDate":"2018-06-23 21:42:22","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  title,\n  p.tags as Tags,\n  p.ViewCount as \"Views\", \n  p.score as \"Score\", \n  p.AnswerCount as \"Answers\", \n  DATEDIFF(day,p.CreationDate,getdate()) as \"Age (days)\",\n  p.AcceptedAnswerId as \"Answer Accepted?\"\n\nfrom posts p\n\nwhere\n\n  p.AnswerCount = 0 and -- is null and\n  p.CreationDate >= '20160401'\n\n\norder by p.viewcount desc;"},{"QuerySetId":488420,"Title":"UWP top open questions since May1, 2016 by viewcount","Description":null,"QueryBody":"SELECT COUNT(*), SUM(ViewCount) FROM posts AS p WHERE p.CreationDate >= '20160101' AND (p.tags LIKE '%azure%') GROUP BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2016-10-08 03:09:32","validated":false,"QueryBody_Original":"SELECT \ncount(*), sum(ViewCount)\n\nfrom posts p\n\nwhere\n\n  p.CreationDate >= '20160101' and\n\n  (\n    p.tags like '%azure%'\n  )\n  \n group by YEAR(CreationDate), MONTH(CreationDate)\n  \n\n\n--order by p.CreationDate desc;"},{"QuerySetId":488423,"Title":"UWP top questions since May1, 2016 by viewcount","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", title, p.tags AS Tags, p.ViewCount AS \"Views\", p.score AS \"Score\", p.AnswerCount AS \"Answers\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) AS \"Age (days)\", p.AcceptedAnswerId AS \"Answer Accepted?\" FROM posts AS p WHERE p.CreationDate >= '20160501' AND (p.tags LIKE '%<uwp>%' OR p.tags LIKE '%<windows-10-universal>%' OR (p.tags LIKE '%<xaml>%' AND p.tags LIKE '%<windows-10>%')) ORDER BY p.viewcount DESC","CreationDate":"2016-05-20 00:55:46","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  title,\n  p.tags as Tags,\n  p.ViewCount as \"Views\", \n  p.score as \"Score\", \n  p.AnswerCount as \"Answers\", \n  DATEDIFF(day,p.CreationDate,getdate()) as \"Age (days)\",\n  p.AcceptedAnswerId as \"Answer Accepted?\"\n\nfrom posts p\n\nwhere\n\n  \n  p.CreationDate >= '20160501' and\n\n  (\n    p.tags like '%<uwp>%' or p.tags like '%<windows-10-universal>%'\n    or\n    (p.tags like '%<xaml>%' and p.tags like '%<windows-10>%')\n  )\n\n\norder by p.viewcount desc;"},{"QuerySetId":488692,"Title":"MOSTRAR TODOS LOS USUARIOS MAYORES DE EDAD","Description":null,"QueryBody":"SELECT * FROM USERS","CreationDate":"2016-05-20 16:17:13","validated":false,"QueryBody_Original":"SELECT  * FROM USERS"},{"QuerySetId":489287,"Title":"Questions with titles containing $$","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE PostTypeId = 1 AND Title LIKE '%$$%' ORDER BY CreationDate","CreationDate":"2016-05-23 08:50:02","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link]\nFROM Posts\nWHERE PostTypeId = 1\n  AND Title LIKE '%$$%'\nORDER BY CreationDate;"},{"QuerySetId":489400,"Title":"Questions which have ever had $$ in their titles","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE PostHistoryTypeId IN (1, 4) AND Text LIKE '%$$%' COLLATE Latin1_General_BIN2 \/* more strict LIKE-ing *\/ GROUP BY PostId ORDER BY PostId DESC","CreationDate":"2016-05-23 11:57:44","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link]\n  from PostHistory \n  where PostHistoryTypeId in (1,4) -- 1 initial title; 4 edit title\n    and Text LIKE '%$$%' COLLATE Latin1_General_BIN2  -- more strict LIKE-ing\nGroup by PostId\nOrder by PostId Desc"},{"QuerySetId":490535,"Title":"Average reputation per post by user","Description":null,"QueryBody":"SELECT Users.AccountId AS Id, Users.Reputation AS rep, COUNT(Posts.Id) AS Answers, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId GROUP BY Users.AccountId, Users.Reputation ORDER BY \"Reputation\" DESC LIMIT 38000","CreationDate":"2016-06-09 07:22:25","validated":false,"QueryBody_Original":"SELECT  \n    TOP 38000\n    Users.AccountId as Id,\n    Users.Reputation as rep,\n    Count(Posts.Id) AS Answers,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Answer Score]\n    \nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\n    \nGROUP BY\n    Users.AccountId, Users.Reputation\n\nORDER BY\n    [Reputation] DESC"},{"QuerySetId":490618,"Title":"Comment Vote and Post count","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM VOTES) AS VoteCount, (SELECT COUNT(*) FROM POSTS) AS PostCount, (SELECT COUNT(*) FROM COMMENTS) AS CommentCount","CreationDate":"2016-05-25 18:59:26","validated":false,"QueryBody_Original":"SELECT  \n(SELECT COUNT(*)  FROM VOTES) as VoteCount,\n(SELECT COUNT(*) FROM POSTS) as PostCount,\n(SELECT COUNT(*) FROM COMMENTS) as CommentCount"},{"QuerySetId":490649,"Title":"Top 200 Users in Columbus, Oh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%san%fran%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2018-11-29 21:57:59","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) like '%san%fran%'   \nORDER BY\n    Reputation DESC;"},{"QuerySetId":490650,"Title":"Top 200 Users in Detroit, Mi","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%detroit%mi%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2016-05-25 21:08:25","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) like '%detroit%mi%'   \nORDER BY\n    Reputation DESC;"},{"QuerySetId":490669,"Title":"Top 200 Users in Ohio","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%oh%' OR LOWER(Location) LIKE '%ohio%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2016-05-25 21:55:59","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) like '%oh%'\n    OR LOWER(Location) like '%ohio%'   \nORDER BY\n    Reputation DESC;"},{"QuerySetId":491066,"Title":"Questions with titles containing given word","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE PostTypeId = 1 AND Title LIKE '%##word##%' ORDER BY CreationDate","CreationDate":"2016-05-26 17:57:38","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link]\nFROM Posts\nWHERE PostTypeId = 1\n  AND Title LIKE '%##word##%'\nORDER BY CreationDate;"},{"QuerySetId":491488,"Title":"Top Java Developers in South Africa","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%') AND LOWER(AboutMe) LIKE LOWER('%Java%') ORDER BY Reputation DESC","CreationDate":"2016-05-27 10:55:25","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\n    \nFROM\n    Users\nWHERE\nLOWER(Location) LIKE LOWER('%##CountryName##%') and Lower(AboutMe) LIKE LOWER('%Java%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":491695,"Title":"Find tag edits for a specific tag","Description":null,"QueryBody":"SELECT 'site:\/\/posts\/' + CAST(PostId AS TEXT) + '\/revisions|' + Posts.Title AS \"Post Revisions\", ph.Text AS Tags, (CASE WHEN NOT ph.UserId IS NULL THEN 'site:\/\/users\/' + CAST(ph.UserId AS TEXT) + '|' ELSE '' END) + COALESCE(ph.UserDisplayName, Users.DisplayName) AS \"User Link\", ph.CreationDate FROM PostHistory AS ph LEFT JOIN Posts ON ph.PostId = Posts.Id LEFT JOIN Users ON ph.UserId = Users.Id WHERE PostHistoryTypeId IN (3, 6) AND Text LIKE '%<##TagName##>%' ORDER BY ph.Id DESC","CreationDate":"2016-06-03 00:01:05","validated":false,"QueryBody_Original":"SELECT  'site:\/\/posts\/' + cast(PostId as nvarchar) + '\/revisions|'\n    + Posts.Title as [Post Revisions],\n    ph.Text as Tags,\n    (case when ph.UserId is not null then\n     'site:\/\/users\/' + cast(ph.UserId as nvarchar) + '|' else '' end) +\n     coalesce(ph.UserDisplayName, Users.DisplayName) as [User Link],\n    ph.CreationDate\nfrom PostHistory ph\nleft join Posts on ph.PostId = Posts.Id\nleft join Users on ph.UserId = Users.Id\nwhere PostHistoryTypeId in (3, 6) -- initial tags, edit tags\nand Text like '%<##TagName##>%'\norder by ph.Id desc"},{"QuerySetId":491868,"Title":"High rep through prolific bad answers","Description":"A list of the 100 above-30k users with the lowest average answer score excluding\r\ncommunity wiki \/ closed posts or users with less than 100 answers\r\n","QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation AS Reputation, COUNT(Posts.Id) AS Answers, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND Users.Reputation > 5000 GROUP BY Users.Id, DisplayName, Users.Reputation HAVING COUNT(Posts.Id) > 50 ORDER BY \"Average Answer Score\" LIMIT 100","CreationDate":"2016-07-19 12:22:42","validated":false,"QueryBody_Original":"SELECT  \n    TOP 100\n    Users.Id as [User Link],\n    Users.Reputation as Reputation,\n    Count(Posts.Id) AS Answers,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Answer Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null and Users.Reputation > 5000\nGROUP BY\n    Users.Id, DisplayName, Users.Reputation\nHAVING\n    Count(Posts.Id) > 50\nORDER BY\n    [Average Answer Score] ASC"},{"QuerySetId":493472,"Title":"the question count for each tag","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Tags LIKE '%python%'","CreationDate":"2019-02-26 12:49:08","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts where Tags LIKE '%python%'"},{"QuerySetId":493529,"Title":"Top 10 developers from Morgantown, WV","Description":null,"QueryBody":"SELECT * FROM Users ORDER BY Reputation DESC LIMIT 10","CreationDate":"2018-03-19 21:52:36","validated":false,"QueryBody_Original":"SELECT  TOP 10 * from Users \nORDER BY Reputation DESC;"},{"QuerySetId":493725,"Title":"TOP 10 Users in Brazil","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%brazil%' OR LOWER(Location) LIKE '%brasil%' OR UPPER(Location) LIKE '%BR' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2019-09-27 19:23:32","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%brazil%' OR\n    LOWER(Location) LIKE '%brasil%' OR\n    UPPER(Location) LIKE '%BR'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":494026,"Title":"Top 35 users from Ahmedabad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%kochi%' OR UPPER(Location) LIKE '%KOCHI%' OR Location LIKE '%kochi%' ORDER BY Reputation DESC LIMIT 35","CreationDate":"2019-06-17 08:56:49","validated":false,"QueryBody_Original":"SELECT  TOP 35\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%kochi%'\n    OR UPPER(Location) LIKE '%KOCHI%'\n    or Location like '%kochi%'\n   ORDER BY\n    Reputation DESC;"},{"QuerySetId":494068,"Title":"Top 500 users from Pakistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PAK' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2016-06-02 15:09:08","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PAK'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":495581,"Title":"Get My Reputation and Location Data","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE Id = 1042848","CreationDate":"2016-06-03 15:18:34","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    Id = 1042848"},{"QuerySetId":496281,"Title":"which posts where ever featured on meta","Description":null,"QueryBody":"SELECT userid AS \"User Link\", COUNT(postid) AS \"Number of Posts\" FROM posthistory WHERE posthistorytypeid IN (3, 6) AND text LIKE '%<featured>%' GROUP BY userid ORDER BY COUNT(postid) DESC","CreationDate":"2017-02-25 04:16:22","validated":false,"QueryBody_Original":"SELECT  userid as [User Link]\n     , count(postid) as [Number of Posts]\nfrom posthistory\nwhere posthistorytypeid in (3,6)\nand   text like '%<featured>%'\ngroup by userid\norder by count(postid) desc"},{"QuerySetId":496472,"Title":"Prevalence of Database, Database Schema","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE (Tags LIKE '%database%' OR Tags LIKE '%database schema%' OR Tags LIKE '%schema%')","CreationDate":"2016-06-06 21:45:12","validated":false,"QueryBody_Original":"SELECT \nCount(Id)\nfrom Posts \nwhere \n(Tags like '%database%'\nor Tags like '%database schema%'\nor Tags like '%schema%')"},{"QuerySetId":496473,"Title":"Prevalence of SQL, Schema, IC","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE (Tags LIKE '%sql%' OR Tags LIKE '%schema%' OR Tags LIKE '%integrity constraint%')","CreationDate":"2016-08-10 00:38:57","validated":false,"QueryBody_Original":"SELECT \nCount(Id)\nfrom Posts \nwhere \n(Tags like '%sql%'\nor Tags like '%schema%'\nor Tags like '%integrity constraint%')"},{"QuerySetId":497233,"Title":"Downvoted, closed or deleted questions","Description":null,"QueryBody":"SELECT * FROM posts WHERE PostTypeId = 1 AND (score < -1 OR NOT closeddate IS NULL OR NOT deletiondate IS NULL)","CreationDate":"2016-06-08 03:26:45","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE\n  PostTypeId=1 AND\n    (score < -1 OR\n    closeddate is not null OR\n    deletiondate is not null)"},{"QuerySetId":497326,"Title":"duplicate of a given question","Description":null,"QueryBody":"SELECT COUNT(*) FROM postlinks WHERE linktypeid = 3 \/* duplicate *\/ AND relatedPostid = 218384","CreationDate":"2018-03-11 04:20:49","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom postlinks\nwhere linktypeid = 3 -- duplicate\nAND relatedPostid = 218384"},{"QuerySetId":497551,"Title":"Porcentaje de preguntas con respuesta","Description":null,"QueryBody":"SELECT COUNT(q.id) AS \"Total Preguntas\", COUNT(q2.id) AS \"Total Preguntas con Respuesta\", ROUND(COUNT(q2.id) * 100.0 \/ COUNT(q.id), 2) AS \"Porcentaje Preguntas con Respuesta\" FROM Posts AS q LEFT JOIN Posts AS q2 ON q2.id = q.id AND q2.AnswerCount > 0 \/* tienen al menos 1 respuesta *\/ AND q2.ClosedDate IS NULL \/* no est\u00e1n cerradas *\/ AND q2.DeletionDate IS NULL \/* no est\u00e1n eliminadas *\/ \/*    AND q.acceptedanswerid IS NOT NULL -- tienen 1 respuesta aceptada, descomentar para ver resultado *\/ WHERE q.PostTypeId = 1","CreationDate":"2016-06-08 20:40:36","validated":false,"QueryBody_Original":"SELECT \n  COUNT(q.id) AS 'Total Preguntas',\n  COUNT(q2.id) AS 'Total Preguntas con Respuesta',\n  ROUND(COUNT(q2.id) * 100.0 \/ COUNT(q.id), 2) AS 'Porcentaje Preguntas con Respuesta'\nFROM Posts q\n  LEFT JOIN Posts q2 ON q2.id = q.id\n    AND q2.AnswerCount > 0 -- tienen al menos 1 respuesta\n    AND q2.ClosedDate IS NULL -- no est\u00e1n cerradas\n    AND q2.DeletionDate IS NULL -- no est\u00e1n eliminadas\n--    AND q.acceptedanswerid IS NOT NULL -- tienen 1 respuesta aceptada, descomentar para ver resultado\nWHERE q.PostTypeId = 1"},{"QuerySetId":497977,"Title":"List of Users Comments ","Description":null,"QueryBody":"SELECT Score, PostId, Text FROM Comments WHERE UserId = 1873567 AND Score > 0 ORDER BY Score DESC","CreationDate":"2016-06-14 20:07:17","validated":false,"QueryBody_Original":"SELECT  \n    Score,\n    PostId,\n    Text\nFROM \n    Comments\nWHERE \n    UserId = 1873567 and Score > 0\nORDER BY \n    Score DESC"},{"QuerySetId":498561,"Title":" Top 250 Reputation Holder From India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Pakistan%' OR UPPER(Location) LIKE '%Pak' ORDER BY Reputation DESC LIMIT 250","CreationDate":"2016-06-16 00:13:05","validated":false,"QueryBody_Original":"SELECT  TOP 250\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Pakistan%'\n    OR UPPER(Location) LIKE '%Pak'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":498754,"Title":"Janitor: unanswered, commented, abandoned Qs, v2","Description":"VTC or clarify or answer","QueryBody":"SELECT posts.id AS \"Post Link\", users.LastAccessDate, posts.creationdate, DATEDIFF(users.LastAccessDate, posts.creationdate) AS timediff, * FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.posttypeid = 1 \/* question *\/ AND posts.AnswerCount = 0 \/* unanswered *\/ AND posts.ClosedDate IS NULL \/* not closed *\/ AND commentcount < 2 AND DATEDIFF(users.LastAccessDate, posts.creationdate) < 1000 AND DATEDIFF(CURRENT_TIMESTAMP(), posts.lastactivitydate) > 14 ORDER BY timediff, users.LastAccessDate","CreationDate":"2016-06-16 15:19:19","validated":false,"QueryBody_Original":"SELECT  posts.id AS [Post Link], \n  users.LastAccessDate, posts.creationdate, \n  DATEDIFF(SECOND, posts.creationdate, users.LastAccessDate) as timediff,\n  *\nFROM posts\nJOIN users ON posts.owneruserid = users.id\nWHERE posts.posttypeid = 1 -- question\nand posts.AnswerCount = 0 -- unanswered\nand posts.ClosedDate is NULL -- not closed\nand commentcount <2\nand DATEDIFF(SECOND, posts.creationdate, users.LastAccessDate) < 1000\nand DATEDIFF(DAY, posts.lastactivitydate, SYSDATETIME()) > 14\nORDER BY timediff, users.LastAccessDate ASC"},{"QuerySetId":499104,"Title":"JavaScript (and not ES6) related","Description":null,"QueryBody":"SELECT *, COUNT(*) AS count, DAY(LAST_DATE_OF_MONTH(month)) AS DaysInMonth FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATE) AS month FROM posts WHERE tags LIKE '%javascript%' AND NOT tags LIKE '%ecmascript-6%' AND NOT tags LIKE '%ecmascript-2015%' AND NOT tags LIKE '%ecmascript-harmony%' AND NOT tags LIKE '%es6%' AND CreationDate >= '20110401') AS X GROUP BY month ORDER BY month","CreationDate":"2016-07-07 02:01:02","validated":false,"QueryBody_Original":"SELECT  *, \n  count(*) as count, \n  DAY(EOMONTH(month)) AS DaysInMonth \nfrom (\n  SELECT cast(\n    cast(DATEPART(YYYY, CreationDate) as varchar) \n    + '-' \n    + cast(DATEPART(MM, CreationDate) as varchar) \n    + '-01' \n    as date) \n  as month\n  from posts\n  where tags like '%javascript%' \n    AND NOT tags like '%ecmascript-6%'\n    AND NOT tags like '%ecmascript-2015%'\n    AND NOT tags like '%ecmascript-harmony%'\n    AND NOT tags like '%es6%'\n    AND CreationDate >= '20110401'\n) as X\ngroup by month\norder by month"},{"QuerySetId":499107,"Title":"Top 100 User of Bhubaneswar","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Bhubaneswar%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2016-07-22 08:43:27","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like N'%Bhubaneswar%' \nORDER BY\n   reputation DESC"},{"QuerySetId":499294,"Title":"ES6 and JS related questions - monthly stats","Description":null,"QueryBody":"SELECT js.m, js_count, COALESCE(es6_count, 0) AS es6_count, DaysInMonth FROM (SELECT m, COUNT(*) AS js_count, DAY(LAST_DATE_OF_MONTH(m)) AS DaysInMonth FROM (SELECT DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 15) AS m FROM posts WHERE tags LIKE '%javascript%' AND NOT tags LIKE '%es6%' AND NOT tags LIKE '%ecmascript-6%' AND NOT tags LIKE '%ecmascript-2015%' AND NOT tags LIKE '%ecmascript-harmony%') AS X GROUP BY m) AS js LEFT JOIN (SELECT m, COUNT(*) AS es6_count FROM (SELECT DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 15) AS m FROM posts WHERE tags LIKE '%es6%' OR tags LIKE '%ecmascript-6%' OR tags LIKE '%ecmascript-2015%' OR tags LIKE '%ecmascript-harmony%') AS X GROUP BY m) AS es ON js.m = es.m ORDER BY js.m","CreationDate":"2016-07-18 18:40:37","validated":false,"QueryBody_Original":"SELECT  js.m, js_count, ISNULL(es6_count,0) es6_count, DaysInMonth \nFROM (\n  SELECT m, COUNT(*) js_count, DAY(EOMONTH(m)) DaysInMonth \n  FROM (\n    SELECT DATEFROMPARTS(YEAR(CreationDate),MONTH(CreationDate),15) m\n    FROM posts\n    WHERE tags like '%javascript%' \n      AND NOT tags like '%es6%'\n      AND NOT tags like '%ecmascript-6%'\n      AND NOT tags like '%ecmascript-2015%'\n      AND NOT tags like '%ecmascript-harmony%'\n  ) X\n  GROUP BY m) js\nLEFT JOIN (\n  SELECT m, COUNT(*) es6_count\n  FROM (\n    SELECT DATEFROMPARTS(YEAR(CreationDate),MONTH(CreationDate),15) m\n    FROM posts\n    WHERE tags LIKE '%es6%' \n      OR tags LIKE '%ecmascript-6%'\n      OR tags LIKE '%ecmascript-2015%'\n      OR tags LIKE '%ecmascript-harmony%'\n      ) X\n  GROUP BY m) es\nON js.m=es.m\nORDER BY js.m"},{"QuerySetId":499340,"Title":"Downvoters Hall of Shame (by percentage)","Description":"The top 100 downvoters by percentage","QueryBody":"SELECT Id AS \"User Link\", UpVotes, DownVotes, (DownVotes) * 100 \/ (DownVotes + UpVotes) AS DownVotesPCT FROM Users WHERE DownVotes > 100 \/* Suppress lower vote counts; *\/ AND Id <> -1 \/* these are habitual downvoters. *\/ ORDER BY DownVotesPCT DESC LIMIT 100","CreationDate":"2016-07-10 14:39:26","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    Id as [User Link],\n    UpVotes,\n    DownVotes,\n    (DownVotes)*100\/(DownVotes+UpVotes) as DownVotesPCT\nFROM Users\nWHERE  DownVotes > 100     -- Suppress lower vote counts; \n AND Id <> -1 -- these are habitual downvoters.\nORDER BY DownVotesPCT DESC"},{"QuerySetId":499363,"Title":"Ratio Answers Accepted Withtin 30 Minutes Over Questions With Accepted Answers","Description":null,"QueryBody":"SELECT (SELECT COUNT(Posts.Id) FROM Posts INNER JOIN Posts AS Ans ON Ans.Id = Posts.AcceptedAnswerId WHERE DATEDIFF_BIG(minute, Posts.CreationDate, Ans.CreationDate) < 30), (SELECT COUNT(Posts.Id) FROM Posts INNER JOIN Posts AS Ans ON Ans.Id = Posts.AcceptedAnswerId WHERE DATEDIFF_BIG(minute, Posts.CreationDate, Ans.CreationDate) < 120), (SELECT COUNT(Posts.Id) FROM Posts INNER JOIN Posts AS Ans ON Ans.Id = Posts.AcceptedAnswerId WHERE DATEDIFF_BIG(minute, Posts.CreationDate, Ans.CreationDate) < 1500), (SELECT COUNT(Posts.Id) FROM Posts INNER JOIN Posts AS Ans ON Ans.Id = Posts.AcceptedAnswerId)","CreationDate":"2016-06-13 18:01:20","validated":false,"QueryBody_Original":"SELECT  \n(\n  SELECT\n    COUNT(Posts.Id)\n  FROM Posts\n  INNER JOIN Posts as Ans\n  on Ans.Id = Posts.AcceptedAnswerId\n  WHERE DATEDIFF_BIG(minute,Posts.CreationDate,Ans.CreationDate) < 30\n), \n(\n  SELECT\n    COUNT(Posts.Id)\n  FROM Posts\n  INNER JOIN Posts as Ans\n  on Ans.Id = Posts.AcceptedAnswerId\n  WHERE DATEDIFF_BIG(minute,Posts.CreationDate,Ans.CreationDate) < 120\n),  \n(\n  SELECT\n    COUNT(Posts.Id)\n  FROM Posts\n  INNER JOIN Posts as Ans\n  on Ans.Id = Posts.AcceptedAnswerId\n  WHERE DATEDIFF_BIG(minute,Posts.CreationDate,Ans.CreationDate) < 1500\n), \n(\n  SELECT\n    COUNT(Posts.Id)\n  FROM Posts\n  INNER JOIN Posts as Ans\n  on Ans.Id = Posts.AcceptedAnswerId\n)"},{"QuerySetId":499835,"Title":"Number of questions where Accepted Answer < Top voted answer and Accepted Answer > 3","Description":null,"QueryBody":"SELECT COUNT(p.Id) FROM Posts AS p, Posts AS a WHERE p.PostTypeId = 1 AND NOT p.AcceptedAnswerId IS NULL AND a.Id = p.AcceptedAnswerId AND (SELECT MAX(Score) FROM Posts AS q WHERE q.ParentId = p.Id) > a.Score AND a.Score > 3","CreationDate":"2016-06-16 04:15:06","validated":false,"QueryBody_Original":"SELECT  COUNT(p.Id) FROM Posts AS p, Posts AS a\n  WHERE p.PostTypeId = 1 AND\n        p.AcceptedAnswerId IS NOT NULL AND\n        a.Id = p.AcceptedAnswerId AND\n        (SELECT MAX(Score) FROM Posts as q\n        WHERE q.ParentId = p.Id) > a.Score AND\n        a.Score > 3;"},{"QuerySetId":499838,"Title":"Some questions where Accepted Answer < Top voted answer and Accepted Answer < 3","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, a.Score, (SELECT MAX(Score) FROM Posts AS q WHERE q.ParentId = p.Id) FROM Posts AS p, Posts AS a \/*    WHERE p.PostTypeId = 1 AND *\/ \/*        p.AcceptedAnswerId IS NOT NULL AND *\/ \/*        a.Id = p.AcceptedAnswerId AND a.Score > 3 AND p.Title Like '%RGB%' AND p.Id = 24132665; *\/ WHERE p.PostTypeId = 1 AND NOT p.AcceptedAnswerId IS NULL AND a.Id = p.AcceptedAnswerId AND (SELECT MAX(Score) FROM Posts AS q WHERE q.ParentId = p.Id) > a.Score AND a.Score > 3 AND p.Title LIKE '%RGB%'","CreationDate":"2016-06-16 04:12:22","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], p.Score, a.Score, (SELECT MAX(Score) FROM Posts as q\n        WHERE q.ParentId = p.Id)\n    FROM Posts AS p, Posts AS a\n--    WHERE p.PostTypeId = 1 AND\n--        p.AcceptedAnswerId IS NOT NULL AND\n--        a.Id = p.AcceptedAnswerId AND a.Score > 3 AND p.Title Like '%RGB%' AND p.Id = 24132665;\n  WHERE p.PostTypeId = 1 AND\n        p.AcceptedAnswerId IS NOT NULL AND\n        a.Id = p.AcceptedAnswerId AND\n        (SELECT MAX(Score) FROM Posts as q\n        WHERE q.ParentId = p.Id) > a.Score AND\n        a.Score > 3 AND p.Title Like '%RGB%';"},{"QuerySetId":501148,"Title":"TOP 110 users from INDIA","Description":"Lists the top 50 users (ranked by reputation) that are located in Calicut\/Kozhikode, Kerala, India according to their profile information.\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Nepal%' ORDER BY reputation DESC LIMIT 110","CreationDate":"2020-06-04 15:51:01","validated":false,"QueryBody_Original":"SELECT  TOP 110\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Nepal%'\n   --OR Location like N'%Kozhi%'\n   --OR Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":501178,"Title":"get all posts and users","Description":null,"QueryBody":"SELECT * FROM Posts WHERE OwnerDisplayName = 'praba230890'","CreationDate":"2016-06-17 15:14:25","validated":false,"QueryBody_Original":"SELECT  * FROM Posts where OwnerDisplayName = 'praba230890'"},{"QuerySetId":501241,"Title":"Tag names with names starting with a, ending with n and containing a p before a c","Description":null,"QueryBody":"SELECT TagName FROM Tags WHERE TagName LIKE 'a%p%c%n' AND NOT TagName LIKE 'a%c%p%n'","CreationDate":"2016-06-16 20:07:40","validated":false,"QueryBody_Original":"SELECT  TagName FROM Tags \nWHERE TagName like 'a%p%c%n' AND NOT TagName like 'a%c%p%n'"},{"QuerySetId":501501,"Title":"Procurar Merchandising Feito pelo Daniel","Description":null,"QueryBody":"SELECT Comments.PostId, Comments.Text AS \"Coment\u00e1rio\" FROM Comments WHERE Comments.UserId = 4816","CreationDate":"2016-06-17 01:17:55","validated":false,"QueryBody_Original":"SELECT  Comments.PostId, Comments.Text AS 'Coment\u00e1rio'\nFROM Comments\nWHERE\nComments.UserId = 4816\n--AND\n--Comments.Text LIKE '%impacta%'"},{"QuerySetId":501707,"Title":"Top users from Barcelona, Spain","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%barcelona%' OR LOWER(Location) LIKE '%bcn%') ORDER BY Reputation DESC","CreationDate":"2018-03-29 10:21:28","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%barcelona%' OR LOWER(Location) LIKE '%bcn%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":501925,"Title":"Questions with images with users <10 reputation","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.Body LIKE '%<img%' AND u.reputation < 10 AND p.PostTypeId = 1 ORDER BY p.CreationDate DESC","CreationDate":"2016-06-18 03:28:43","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link]\nfrom Posts p\ninner join Users u on u.Id = p.OwnerUserId  \nwhere p.Body LIKE '%<img%' and u.reputation<10 and p.PostTypeId = 1\norder by p.CreationDate desc"},{"QuerySetId":501979,"Title":"Which Tags are most popular in Posts","Description":null,"QueryBody":"SELECT t.Tagname, t.count FROM Tags AS t ORDER BY t.count DESC","CreationDate":"2016-06-18 11:48:26","validated":false,"QueryBody_Original":"SELECT  t.Tagname, t.count\nfrom Tags t\norder by t.count desc"},{"QuerySetId":501983,"Title":"What happens when a tag is removed?","Description":"http:\/\/meta.stackoverflow.com\/questions\/326422\/what-happens-when-a-tag-is-removed\/326425#326425","QueryBody":"SELECT id AS \"Post Link\", creationdate, \"text\" FROM posthistory WHERE posthistorytypeid IN (3, 6)","CreationDate":"2016-06-18 12:08:22","validated":false,"QueryBody_Original":"SELECT  id as [Post Link]\n     , creationdate\n     , [text] \nfrom posthistory\nwhere posthistorytypeid in (3,6)"},{"QuerySetId":502199,"Title":"select * from Posts where Title like '%deeplearning%'","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Title LIKE '%learn%'","CreationDate":"2016-12-15 21:28:11","validated":false,"QueryBody_Original":"SELECT  * from Posts where Title like '%learn%'"},{"QuerySetId":502422,"Title":"Top 450 SO Users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%kerala' ORDER BY Reputation DESC LIMIT 450","CreationDate":"2016-07-14 12:55:17","validated":false,"QueryBody_Original":"SELECT  TOP 450\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%kerala'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":502471,"Title":"Questions with negative score asked in the last month","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, p.Score, p.ViewCount, p.ClosedDate FROM Posts AS p WHERE p.PostTypeId = 1 AND MONTH(p.CreationDate) = MONTH(CURRENT_TIMESTAMP()) - 1 AND YEAR(p.CreationDate) = YEAR(CURRENT_TIMESTAMP()) AND p.Score < 0 ORDER BY p.Score DESC","CreationDate":"2016-06-20 02:47:10","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link]\n  , p.CreationDate\n  , p.Score\n  , p.ViewCount\n  , p.ClosedDate\nfrom Posts p\nwhere p.PostTypeId = 1\n  and Month(p.CreationDate) = Month(getdate())-1\n  and Year(p.CreationDate) = Year(getDate())\n  and p.Score < 0\norder by p.Score desc"},{"QuerySetId":502473,"Title":"Questions asked in the past month with negative score","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, p.Score, p.ViewCount, p.ClosedDate FROM Posts AS p WHERE p.PostTypeId = 1 AND MONTH(p.CreationDate) = MONTH(CURRENT_TIMESTAMP()) - 1 AND YEAR(p.CreationDate) = YEAR(CURRENT_TIMESTAMP()) AND p.Score < 0 ORDER BY p.Score DESC","CreationDate":"2016-06-20 02:49:26","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link]\n  , p.CreationDate\n  , p.Score\n  , p.ViewCount\n  , p.ClosedDate\nfrom Posts p\nwhere p.PostTypeId = 1\n  and Month(p.CreationDate) = Month(getdate())-1\n  and Year(p.CreationDate) = Year(getDate())\n  and p.Score < 0\norder by p.Score desc"},{"QuerySetId":502765,"Title":"Badges by type and user","Description":null,"QueryBody":"SELECT \"User Link\", total, ROUND(CAST(gold AS FLOAT) \/ total, 2) AS goldfrac, ROUND(CAST(silver AS FLOAT) \/ total, 2) AS silverfrac, ROUND(CAST(bronze AS FLOAT) \/ total, 2) AS bronzefrac FROM (SELECT userid AS \"User Link\", COUNT(CASE Class WHEN 1 THEN 1 ELSE NULL END) AS gold, COUNT(CASE Class WHEN 2 THEN 1 ELSE NULL END) AS silver, COUNT(CASE Class WHEN 3 THEN 1 ELSE NULL END) AS bronze, COUNT(*) AS total FROM badges GROUP BY userid) AS badgecounts WHERE total >= 10 ORDER BY total DESC","CreationDate":"2016-06-21 07:05:55","validated":false,"QueryBody_Original":"SELECT  [User Link],\ntotal,\nround(cast(gold as float)\/total, 2) as goldfrac,\nround(cast(silver as float)\/total, 2) as silverfrac,\nround(cast(bronze as float)\/total, 2) as bronzefrac\nfrom (SELECT\nuserid as [User Link],\ncount(case Class when 1 then 1 else null end) as gold,\ncount(case Class when 2 then 1 else null end) as silver,\ncount(case Class when 3 then 1 else null end) as bronze,\ncount(*) as total\nfrom badges group by userid) as badgecounts\nwhere total >= 10\norder by total desc"},{"QuerySetId":502793,"Title":"Posts with the most revisions","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COUNT(*) FROM posthistory WHERE posthistorytypeid IN (4, 5, 6, 24) GROUP BY PostId HAVING COUNT(*) > 100 ORDER BY COUNT(*) DESC","CreationDate":"2016-06-21 09:45:49","validated":false,"QueryBody_Original":"SELECT  PostId [Post Link]\n,      count(*)\nfrom   posthistory\nwhere  posthistorytypeid in (4,5,6,24)\ngroup\nby     PostId\nhaving count(*) > 100\norder\nby     count(*) desc"},{"QuerySetId":503035,"Title":"Questions with lots of answers, but none upvoted","Description":"Shows questions that have no upvoted answers, sorted by the number of answers.","QueryBody":"SELECT q.Id AS \"Post Link\", COUNT(a.Id) AS Answers FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE NOT EXISTS(SELECT Id FROM Posts AS a WHERE a.ParentId = q.Id AND a.Score > 0) GROUP BY q.Id ORDER BY COUNT(a.Id) DESC, q.Id","CreationDate":"2016-06-22 03:00:45","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], count(a.Id) as Answers\nfrom Posts q\ninner join Posts a on a.ParentId = q.Id\nwhere not exists (SELECT Id from Posts a where a.ParentId = q.Id and a.Score > 0)\ngroup by q.Id\norder by count(a.Id) desc, q.Id"},{"QuerySetId":503133,"Title":"Which question titles could be improved?","Description":"Find question titles that do not contain the Five Ws (Who, What, When, Where and why), interrogative words, and question marks.\r\n\r\n\r\nUsed to maintain high quality standards on Aviation.stackexchange.com \r\n\r\n\r\n\r\nThis query MAY be useful for identifying titles that aren't phrased as a question or low quality questions.\r\n\r\n\r\nSpecial thanks: Ambo100 & s.tk\/users\/398665","QueryBody":"SELECT Id AS \"Post Link\", CreationDate AS \"Date\", Score AS \"Score\", AnswerCount AS \"Answers\" FROM Posts WHERE NOT Title LIKE '%Who%?' AND NOT Title LIKE '%[Ww]hat%?' AND NOT Title LIKE '%When%?' AND NOT Title LIKE '%Where%?' AND NOT Title LIKE '%Why%?' AND NOT Title LIKE '%Would%' AND NOT Title LIKE '%Could%?' AND NOT Title LIKE '%Should%?' AND NOT Title LIKE '%How%?' AND NOT Title LIKE '%Can%?' AND NOT Title LIKE '%Is%?' AND NOT Title LIKE '%May%?' AND NOT Title LIKE '%If%?' AND NOT Title LIKE '%Which%?' AND NOT Title LIKE '%Was%?' AND NOT Title LIKE '%Are%?' AND NOT Title LIKE '%Has%?' AND NOT Title LIKE '%Will%?' AND NOT Title LIKE '%Have%?' AND NOT Title LIKE '%Do%?' AND NOT Title LIKE '%[Tt]o what extent%' AND ClosedDate IS NULL ORDER BY CreationDate DESC","CreationDate":"2016-08-01 12:14:17","validated":false,"QueryBody_Original":"SELECT  Id\nas [Post Link], CreationDate as [Date], Score as [Score], AnswerCount as [Answers]\nfrom Posts \nwhere Title not like '%Who%?'\nAND Title not like '%[Ww]hat%?'\nAND Title not like '%When%?'\nAND Title not like '%Where%?'\nAND Title not like '%Why%?'\nAND Title not like '%Would%'\nAND Title not like '%Could%?'\nAND Title not like '%Should%?'\nAND Title not like '%How%?'\nAND Title not like '%Can%?'\nAND Title not like '%Is%?'\nAND Title not like '%May%?'\nAND Title not like '%If%?'\nAND Title not like '%Which%?'\nAND Title not like '%Was%?'\nAND Title not like '%Are%?'\nAND Title not like '%Has%?'\nAND Title not like '%Will%?'\nAND Title not like '%Have%?'\nAND Title not like '%Do%?'\nAND Title not like '%[Tt]o what extent%'\nAND ClosedDate is null \norder by CreationDate desc"},{"QuerySetId":503239,"Title":"Top 20 User from Bhubaneswar","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location, LastAccessDate FROM Users WHERE Location LIKE N'%Bhubaneswar%' ORDER BY reputation DESC LIMIT 20","CreationDate":"2016-06-22 18:08:16","validated":false,"QueryBody_Original":"SELECT  TOP 20\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location,\n   LastAccessDate\nFROM\n   Users\nWHERE\n    Location like N'%Bhubaneswar%' \nORDER BY\n   reputation DESC"},{"QuerySetId":503477,"Title":"select posts with a link to a site","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE Body LIKE '%qbox%'","CreationDate":"2016-06-23 17:03:18","validated":false,"QueryBody_Original":"SELECT  Body from Posts where Body like '%qbox%'"},{"QuerySetId":503593,"Title":"Learning T-SQL: SELECT * FROM Tags;","Description":"Gimme all the tags. This is the first step in understanding the query to render this page:\r\n\r\nhttp:\/\/stackoverflow.com\/tags","QueryBody":"SELECT * FROM Tags","CreationDate":"2019-06-05 00:37:32","validated":false,"QueryBody_Original":"SELECT  * FROM Tags;\nSELECT * from dbo.tags;"},{"QuerySetId":503705,"Title":"sum data between 2 dates in one column","Description":null,"QueryBody":"SELECT t.clientID, fromdate, SUM(sales) FROM (SELECT clientID, orderq, fromdate = orderdate, todate = DATEADD(dd, -1, LEAD(orderdate, 1, CAST('2100-01-01' AS DATE)) OVER (PARTITION BY clientID ORDER BY orderdate)) FROM (VALUES (01, 100, CAST('2016-02-01' AS DATE)), (01, 350, CAST('2016-05-03' AS DATE))) AS orders(clientID, orderq, orderdate)) AS t JOIN (VALUES (01, 50, CAST('2016-02-03' AS DATE)), (01, 50, CAST('2016-02-10' AS DATE)), (01, 300, CAST('2016-05-04' AS DATE)), (01, 50, CAST('2016-05-15' AS DATE))) AS sales(clientID, sales, salesdate) ON sales.salesdate BETWEEN fromdate AND todate GROUP BY t.clientID, fromdate","CreationDate":"2016-06-24 17:06:24","validated":false,"QueryBody_Original":"SELECT  t.clientID, fromdate, sum(sales) \nfrom (\n    SELECT clientID,orderq\n        , fromdate = orderdate\n        , todate = dateadd(dd, -1, lead(orderdate,1,cast('2100-01-01' as date)) over(partition by clientID order by orderdate))\n    from(\n            values\n            (01,100,cast('2016-02-01' as date)),\n            (01,350,cast('2016-05-03' as date))\n        ) orders(clientID,orderq,orderdate)\n    ) t\njoin( \n        values  \n        (01,50  ,cast('2016-02-03' as date)),\n        (01,50  ,cast('2016-02-10' as date)),\n        (01,300 ,cast('2016-05-04' as date)),\n        (01,50  ,cast('2016-05-15' as date))\n    ) sales(clientID, sales,salesdate)\n    on sales.salesdate between fromdate and todate\ngroup by t.clientID, fromdate"},{"QuerySetId":503724,"Title":"Edits containing a comment starting with \"Relevance\"","Description":null,"QueryBody":"SELECT 'site:\/\/posts\/' + CAST(PostId AS TEXT) + '\/revisions|' + 'Revision History for Post ' + CAST(PostId AS TEXT) AS \"Revision Link\" FROM PostHistory WHERE Comment LIKE 'Relevance%'","CreationDate":"2016-06-24 13:54:50","validated":false,"QueryBody_Original":"SELECT  \n  'site:\/\/posts\/' + CAST(PostId AS nvarchar) + '\/revisions|' + \n  'Revision History for Post ' +  CAST(PostId AS nvarchar) AS [Revision Link]\nFROM\n  PostHistory\nWHERE\n  Comment LIKE 'Relevance%'"},{"QuerySetId":504626,"Title":"10k users without Marshal badge","Description":null,"QueryBody":"SELECT * FROM users AS u LEFT JOIN badges AS b ON u.id = b.userid AND b.name = 'Strunk & White' WHERE b.name IS NULL AND u.reputation >= 10000 ORDER BY u.reputation DESC","CreationDate":"2016-06-26 13:17:50","validated":false,"QueryBody_Original":"SELECT  * \nfrom users u\nleft join badges b on u.id = b.userid and b.name='Strunk & White'\nwhere b.name is null\nand u.reputation >= 10000\norder by u.reputation desc"},{"QuerySetId":504890,"Title":"Distribution of Votes on Answers (Log Counts)","Description":"Note the graph in particular.\r\n\r\nSee also http:\/\/data.stackexchange.com\/physics\/query\/504896\/distribution-of-votes-on-answers-log-log","QueryBody":"SELECT Score, LOG10(COUNT(Score)) FROM Posts WHERE PostTypeId = 2 GROUP BY Score ORDER BY Score","CreationDate":"2016-06-27 00:02:41","validated":false,"QueryBody_Original":"SELECT \n  Score,\n  LOG10(COUNT(Score))\nFROM Posts\nWHERE\n  PostTypeId = 2\nGROUP BY Score\nORDER BY Score"},{"QuerySetId":504896,"Title":"Distribution of Votes on Answers (Log-Log)","Description":"Note the graph in particular.\r\n\r\nSee also http:\/\/data.stackexchange.com\/physics\/query\/504890\/distribution-of-votes-on-answers-log-counts","QueryBody":"SELECT LOG10(Score), LOG10(COUNT(Score)) FROM Posts WHERE PostTypeId = 2 AND SCORE > 0 GROUP BY Score ORDER BY Score","CreationDate":"2016-06-27 00:01:52","validated":false,"QueryBody_Original":"SELECT \n  LOG10(Score),\n  LOG10(COUNT(Score))\nFROM Posts\nWHERE\n  PostTypeId = 2\n  AND SCORE > 0\nGROUP BY Score\nORDER BY Score"},{"QuerySetId":504980,"Title":"Top 50 users from Surat","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%rajkot%' OR UPPER(Location) LIKE '%RAJKOT' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2020-10-09 12:45:35","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%rajkot%'\n    OR UPPER(Location) LIKE '%RAJKOT'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":505025,"Title":"select Id , Reputation, DisplayName, Location from Users","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location, Age, WebsiteUrl FROM Users WHERE Location LIKE '%Iran%' AND Reputation > '24' AND Reputation < '125' AND WebsiteUrl <> '' ORDER BY Reputation DESC","CreationDate":"2016-06-27 13:54:52","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location, Age, WebsiteUrl\nfrom Users where Location like '%Iran%'\nand Reputation > '24' and Reputation < '125' and WebsiteUrl<>''\norder by Reputation desc"},{"QuerySetId":505063,"Title":"WHERE with LIKE and percent signs","Description":null,"QueryBody":"SELECT * FROM dbo.Tags WHERE TagName LIKE '%sql%'","CreationDate":"2016-06-27 16:22:57","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Tags WHERE TagName LIKE '%sql%'"},{"QuerySetId":505068,"Title":"WHERE filtering by count range","Description":null,"QueryBody":"SELECT * FROM dbo.Tags WHERE Count > 100000","CreationDate":"2016-06-27 16:52:12","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Tags WHERE Count > 100000;"},{"QuerySetId":505070,"Title":"WHERE with number comparison between fields","Description":null,"QueryBody":"SELECT * FROM dbo.Tags WHERE Id > Count","CreationDate":"2016-06-27 16:55:19","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Tags WHERE Id > Count;"},{"QuerySetId":505083,"Title":"WHERE filtering with dates and BETWEEN","Description":null,"QueryBody":"SELECT * FROM dbo.Users WHERE CreationDate BETWEEN '2016\/01\/01' AND '2016\/12\/31'","CreationDate":"2016-06-27 17:47:27","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Users WHERE CreationDate BETWEEN '2016\/01\/01' AND '2016\/12\/31';"},{"QuerySetId":505084,"Title":"WHERE filtering with dates and not times","Description":null,"QueryBody":"SELECT * FROM dbo.Users WHERE CreationDate = '2016\/04\/01'","CreationDate":"2016-06-27 17:49:50","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Users WHERE CreationDate = '2016\/04\/01';"},{"QuerySetId":505085,"Title":"WHERE filtering with dates and a little bit of time","Description":null,"QueryBody":"SELECT * FROM dbo.Posts WHERE CreationDate >= '2018\/12\/01'","CreationDate":"2018-12-04 15:01:21","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Posts WHERE CreationDate >= '2018\/12\/01';"},{"QuerySetId":505182,"Title":"WHERE filtering with CONVERT on dates","Description":null,"QueryBody":"SELECT * FROM dbo.Users WHERE CAST(CreationDate AS DATE) = '2016\/04\/01'","CreationDate":"2016-06-27 22:21:21","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Users WHERE CONVERT(DATE, CreationDate) = '2016\/04\/01';"},{"QuerySetId":505189,"Title":"ORDER BY - most recent Posts by CreationDate","Description":null,"QueryBody":"SELECT * FROM dbo.Users WHERE TIME_TO_STR(CreationDate, '%-HOUR') = 0","CreationDate":"2016-08-31 22:33:36","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Users WHERE DATEPART(HOUR, CreationDate) = 0;\n\nSELECT * FROM dbo.Users WHERE YEAR(CreationDate) = 2008;\n\nSELECT TOP 10 Id, CreationDate, Title, Body\nFROM dbo.Posts\nORDER BY CreationDate DESC;\n\nSELECT * FROM dbo.Users WHERE DATEPART(HOUR, CreationDate) = 0;\n\nSELECT * FROM dbo.Users WHERE YEAR(CreationDate) = 2008;\n\nSELECT YEAR(CreationDate) AS CreationDateYear, *\nFROM dbo.Posts\nWHERE OwnerUserId = 22656;\n\n\nSELECT YEAR(CreationDate) AS CreationDateYear, COUNT(*) AS PostsThisYear\n  FROM dbo.Posts\n  WHERE OwnerUserId = 22656\n   group by YEAR (CreationDate)\n   ORDER BY YEAR(CreationDate);"},{"QuerySetId":505190,"Title":"ORDER BY - first posts by CreationDate","Description":null,"QueryBody":"SELECT Id, CreationDate, Title, Body FROM dbo.Posts ORDER BY CreationDate LIMIT 10","CreationDate":"2016-06-27 23:09:26","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id, CreationDate, Title, Body\n  FROM dbo.Posts\n  ORDER BY CreationDate ASC;"},{"QuerySetId":505244,"Title":"How many Stack Exchange Members are there? ","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"total users\", SUM(u.UpVotes) AS \"total upvotes\", SUM(u.DownVotes) AS \"total downvotes\" FROM Users AS u","CreationDate":"2016-06-28 01:44:11","validated":false,"QueryBody_Original":"SELECT  count(u.Id) as \"total users\", sum(u.UpVotes) as \"total upvotes\", sum(u.DownVotes) as \"total downvotes\" FROM Users u"},{"QuerySetId":505337,"Title":"Users with the name matching a pattern","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation FROM Users AS u WHERE u.DisplayName LIKE '##pattern##' ORDER BY u.Reputation","CreationDate":"2016-06-28 09:45:16","validated":false,"QueryBody_Original":"SELECT  u.Id as [User Link], u.Reputation\nfrom Users u\nwhere u.DisplayName like '##pattern##'\norder by u.Reputation asc"},{"QuerySetId":506223,"Title":"Highest upvote of question, answer - MSE","Description":null,"QueryBody":"SELECT * FROM Votes LIMIT 10","CreationDate":"2016-06-29 22:52:24","validated":false,"QueryBody_Original":"SELECT  TOP 10 * FROM Votes;"},{"QuerySetId":506336,"Title":"Scores on answers by specific user","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", Q.Score AS \"D\", A.Score AS \"R\", Q.*, A.* FROM Posts AS Q, Posts AS A WHERE Q.OwnerUserId = 976 AND A.OwnerUserId = 1359 AND Q.PostTypeId = 2 AND A.PostTypeId = 2 AND Q.ParentId = A.ParentId","CreationDate":"2016-07-01 03:59:32","validated":false,"QueryBody_Original":"SELECT  Q.Id as [Post Link], Q.Score as \"D\", A. Score as \"R\",Q.*, A.* \nfrom Posts as Q, Posts as A\nwhere Q.OwnerUserId = 976\nand A.OwnerUserId = 1359\nand Q.PostTypeId = 2\nand A.PostTypeId = 2\nand Q.ParentId=A.ParentId"},{"QuerySetId":506472,"Title":"Questions with multiple bounties by the same user","Description":null,"QueryBody":"SELECT questions.Id AS \"Post Link\", votes.UserId AS \"User Link\", 'site:\/\/posts\/' + CAST(questions.Id AS TEXT) + '\/timeline|timeline' AS \"Timeline link\", COUNT(*) AS \"Number of bounties\" FROM Posts AS questions LEFT JOIN Votes AS votes ON votes.PostId = questions.Id WHERE Votes.VoteTypeId = 8 GROUP BY questions.Id, votes.UserId HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC","CreationDate":"2016-06-30 17:36:45","validated":false,"QueryBody_Original":"SELECT \n  questions.Id AS [Post Link],\n  votes.UserId AS [User Link],\n  'site:\/\/posts\/'+CAST(questions.Id AS varchar)+'\/timeline|timeline' AS 'Timeline link',\n  COUNT(*) AS 'Number of bounties'\nFROM Posts questions\nLEFT JOIN Votes votes\n  ON votes.PostId = questions.Id\nWHERE Votes.VoteTypeId = 8\nGROUP BY questions.Id, votes.UserId\nHAVING COUNT(*)>1\nORDER BY COUNT(*) DESC"},{"QuerySetId":506940,"Title":"Top 500 reputation at vietnam","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%vietnam%' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2016-07-01 10:35:19","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%vietnam%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":507019,"Title":"Top 1420 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%gurgaon%' OR UPPER(Location) LIKE '%Gurgaon%' OR Location LIKE '%Gurgaon%' ORDER BY Reputation DESC LIMIT 1420","CreationDate":"2016-07-01 14:44:30","validated":false,"QueryBody_Original":"SELECT  TOP 1420\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n   LOWER(Location) LIKE '%gurgaon%'\n    OR UPPER(Location) LIKE '%Gurgaon%'\n    or Location like '%Gurgaon%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":507217,"Title":"Longest gaps between answer posting and acceptance","Description":null,"QueryBody":"SELECT V.PostId AS \"Post Link\", V.CreationDate AS \"Accept Date\", A.CreationDate AS \"Question Date\", DATEDIFF(V.CreationDate, A.CreationDate) AS \"Difference\" FROM Votes AS V INNER JOIN Posts AS A ON (V.PostId = A.Id AND A.PostTypeId = 2) WHERE V.VoteTypeId = 1 ORDER BY \"Difference\" DESC LIMIT 100","CreationDate":"2016-07-02 08:35:52","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  V.PostId AS [Post Link],\n  V.CreationDate AS [Accept Date],\n  A.CreationDate AS [Question Date],\n  DATEDIFF(second, A.CreationDate, V.CreationDate) AS [Difference]\nFROM Votes V\nINNER JOIN Posts A ON (V.PostId=A.Id AND A.PostTypeId=2)\nWHERE V.VoteTypeId = 1\nORDER BY [Difference] DESC"},{"QuerySetId":507221,"Title":"Longest gap between question posting and answer acceptance","Description":null,"QueryBody":"SELECT V.PostId AS \"Post Link\", V.CreationDate AS \"Accept Date\", Q.CreationDate AS \"Question Date\", DATEDIFF(V.CreationDate, Q.CreationDate) AS \"Difference\" FROM Votes AS V INNER JOIN Posts AS A ON (V.PostId = A.Id AND A.PostTypeId = 2) INNER JOIN Posts AS Q ON (Q.AcceptedAnswerId = A.Id) WHERE V.VoteTypeId = 1 ORDER BY \"Difference\" DESC LIMIT 100","CreationDate":"2016-07-02 08:47:06","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  V.PostId AS [Post Link],\n  V.CreationDate AS [Accept Date],\n  Q.CreationDate AS [Question Date],\n  DATEDIFF(second, Q.CreationDate, V.CreationDate) AS [Difference]\nFROM Votes V\nINNER JOIN Posts A ON (V.PostId=A.Id AND A.PostTypeId=2)\nINNER JOIN Posts Q ON (Q.AcceptedAnswerId=A.Id)\nWHERE V.VoteTypeId = 1\nORDER BY [Difference] DESC"},{"QuerySetId":507291,"Title":"Dump top 1000 answers with score <= -3","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Posts.PostTypeId = 2 AND Posts.Score <= -3 AND DeletionDate IS NULL LIMIT 1000","CreationDate":"2016-07-02 20:42:03","validated":false,"QueryBody_Original":"SELECT  TOP 1000 * FROM Posts\nWHERE Posts.PostTypeId = 2 AND Posts.Score <= -3 AND DeletionDate is null"},{"QuerySetId":507301,"Title":"TIO Languages by Popularity [BROKEN]","Description":null,"QueryBody":"SELECT SUBSTRING(Body, PATINDEX('%http:\/\/*.tryitonline.net', Body) + 7, STR_POSITION(Body, '.', PATINDEX('%http:\/\/*.tryitonline.net', Body)) - PATINDEX('%http:\/\/*.tryitonline.net', Body) + 6) AS Language, COUNT(*) AS Frequency FROM Posts WHERE PostTypeId = 2 GROUP BY SUBSTRING(Body, PATINDEX('%http:\/\/*.tryitonline.net', Body) + 7, STR_POSITION(Body, '.', PATINDEX('%http:\/\/*.tryitonline.net', Body)) - PATINDEX('%http:\/\/*.tryitonline.net', Body) + 6)","CreationDate":"2016-07-02 22:03:05","validated":false,"QueryBody_Original":"SELECT  SUBSTRING(Body, PATINDEX('%http:\/\/*.tryitonline.net', Body) + 7, CHARINDEX('.', Body, PATINDEX('%http:\/\/*.tryitonline.net', Body)) - PATINDEX('%http:\/\/*.tryitonline.net', Body) + 6) AS Language, COUNT(*) AS Frequency FROM Posts\nWHERE PostTypeId = 2\nGROUP BY SUBSTRING(Body, PATINDEX('%http:\/\/*.tryitonline.net', Body) + 7, CHARINDEX('.', Body, PATINDEX('%http:\/\/*.tryitonline.net', Body)) - PATINDEX('%http:\/\/*.tryitonline.net', Body) + 6);"},{"QuerySetId":507688,"Title":"Poor quality titles per month","Description":null,"QueryBody":"SELECT YEAR(CreationDate), MONTH(CreationDate) AS \"Month\", COUNT(*) AS \"Count\" FROM Posts WHERE NOT Title LIKE '%Who%' AND NOT Title LIKE '%What%' AND NOT Title LIKE '%When%' AND NOT Title LIKE '%Where%' AND NOT Title LIKE '%Why%' AND NOT Title LIKE '%How%' AND NOT Title LIKE '%Can%' AND NOT Title LIKE '%Is%' AND NOT Title LIKE '%Which%' AND NOT Title LIKE '%Was%' AND NOT Title LIKE '%Are%' AND NOT Title LIKE '%Has%' AND NOT Title LIKE '%Will%' AND NOT Title LIKE '%Do%' AND NOT Title LIKE '%?%' AND ClosedDate IS NULL GROUP BY YEAR(creationdate), MONTH(CreationDate)","CreationDate":"2016-07-04 17:02:05","validated":false,"QueryBody_Original":"SELECT  Year(CreationDate), Month(CreationDate) as [Month],  count(*) as [Count]\nfrom Posts \nwhere Title not like '%Who%'\nAND Title not like '%What%'\nAND Title not like '%When%'\nAND Title not like '%Where%'\nAND Title not like '%Why%'\nAND Title not like '%How%'\nAND Title not like '%Can%'\nAND Title not like '%Is%'\nAND Title not like '%Which%'\nAND Title not like '%Was%'\nAND Title not like '%Are%'\nAND Title not like '%Has%'\nAND Title not like '%Will%'\nAND Title not like '%Do%'\nAND Title not like '%?%'\nAND ClosedDate is null \n\ngroup by year(creationdate), month(CreationDate)"},{"QuerySetId":507823,"Title":"Users with the most controversial posts","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", COUNT(*) AS ContACnt FROM (SELECT PostId, up = SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END), down = SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) FROM Votes AS v JOIN Posts AS p ON p.Id = v.PostId WHERE VoteTypeId IN (2, 3) AND PostTypeId = 2 GROUP BY PostId) AS ContA JOIN posts AS p ON ContA.PostId = p.Id WHERE down > (up \/ 2) AND p.Score > 0 GROUP BY p.OwnerUserId HAVING OwnerUserId > 0 ORDER BY ContACnt DESC","CreationDate":"2016-07-05 04:28:56","validated":false,"QueryBody_Original":"SELECT  p.OwnerUserId as [User Link], count(*) as ContACnt from (\n  SELECT\n    PostId,\n    up = sum(case when VoteTypeId = 2 then 1 else 0 end),\n    down = sum(case when VoteTypeId = 3 then 1 else 0 end)\n  from Votes v join Posts p on p.Id = v.PostId\n  where VoteTypeId in (2,3) and PostTypeId = 2\n  group by PostId\n) as ContA\njoin posts p on ContA.PostId = p.Id\nwhere down > (up \/ 2) and p.Score > 0\ngroup by p.OwnerUserId having OwnerUserId > 0\norder by ContACnt desc"},{"QuerySetId":508337,"Title":"All-uppercase Stack Overflow questions asked in the last three days","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", 'http:\/\/stackoverflow.com\/posts\/' + CAST(p.Id AS TEXT(100)) + '\/revisions', Text FROM PostHistory AS ph JOIN Posts AS p ON p.Id = ph.PostId WHERE PostHistoryTypeId = 2 AND Text = UPPER(Text) COLLATE SQL_Latin1_General_CP1_CS_AS AND ph.CreationDate > (SELECT CreationDate FROM Posts WHERE Id = (SELECT MAX(Id) FROM Posts)) - 30 AND p.PostTypeId = 1","CreationDate":"2016-07-06 05:42:54","validated":false,"QueryBody_Original":"SELECT  PostId AS [Post Link],\n       'http:\/\/stackoverflow.com\/posts\/' + cast(p.Id AS varchar(100)) + '\/revisions', Text\nFROM PostHistory ph\nJOIN Posts p ON p.Id = ph.PostId\nWHERE PostHistoryTypeId = 2\n    AND Text = upper(Text) COLLATE SQL_Latin1_General_CP1_CS_AS\n    AND ph.CreationDate >\n        (SELECT CreationDate\n         FROM Posts\n         WHERE Id =\n                 (SELECT max(Id)\n                  FROM Posts)) - 30\n    AND p.PostTypeId = 1"},{"QuerySetId":509107,"Title":"Top 50 users from india","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%delhi%' OR UPPER(Location) LIKE '%Delhi%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-07-07 22:14:48","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%delhi%'\n    OR UPPER(Location) LIKE '%Delhi%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":509180,"Title":"Voting Bonanza: Votes by User","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", u.UpVotes + u.DownVotes AS NumVotes FROM Users AS u WHERE u.id = 9551 ORDER BY u.id","CreationDate":"2016-07-21 22:38:09","validated":false,"QueryBody_Original":"SELECT \n  u.id as [User Link],\n  -- u.UpVotes, \n  -- u.DownVotes, \n  u.UpVotes + u.DownVotes as NumVotes\nfrom Users u\nwhere u.id = 9551\norder by u.id"},{"QuerySetId":509261,"Title":"Top 50 users from Dehradun","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%dehradun%' OR UPPER(Location) LIKE '%DEHRADUN' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-07-08 10:40:40","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%dehradun%'\n    OR UPPER(Location) LIKE '%DEHRADUN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":509888,"Title":"Yearly average questions per day","Description":null,"QueryBody":"SELECT YEAR(CreationDate) * 12 + MONTH(CreationDate) AS MonthNumber, CAST(COUNT(*) AS FLOAT) \/ 30 AS \"Approximate Questions Per Day\" FROM Posts WHERE PostTypeId = 1 GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate) DESC, MONTH(CreationDate) DESC","CreationDate":"2016-07-10 16:16:47","validated":false,"QueryBody_Original":"SELECT \nYEAR(CreationDate)*12+MONTH(CreationDate) AS MonthNumber,\nCAST(COUNT(*) AS FLOAT)\/30 AS \"Approximate Questions Per Day\"\nFROM Posts\nWHERE PostTypeId=1\nGROUP BY YEAR(CreationDate),MONTH(CreationDate)\nORDER BY YEAR(CreationDate) DESC,MONTH(CreationDate) DESC"},{"QuerySetId":509995,"Title":"Number of people of each age","Description":null,"QueryBody":"SELECT Age, COUNT(*) AS UserCount FROM Users WHERE NOT Age IS NULL AND Age > 0 GROUP BY Age ORDER BY Age","CreationDate":"2016-07-11 00:25:41","validated":false,"QueryBody_Original":"SELECT  Age, COUNT(*) as UserCount\nFROM Users\nWHERE Age is not null AND Age > 0\nGROUP BY Age\nORDER BY Age ASC"},{"QuerySetId":510147,"Title":"worst score answers that are accepted","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score FROM Posts AS p WHERE p.Score < -10 ORDER BY p.Score","CreationDate":"2016-07-11 10:54:16","validated":false,"QueryBody_Original":"SELECT \n    p.Id AS [Post Link],\n    p.Score\nFROM\n    Posts AS p\nWHERE\n    p.Score < -10\nORDER BY\n    p.Score ASC"},{"QuerySetId":511231,"Title":"Questions and answers by a group of users over time","Description":null,"QueryBody":"SELECT * FROM Posts \/* LEFT JOIN PostFeedback on Posts.Id = PostFeedback.PostId *\/ WHERE Id = 62097022 \/* downvoted *\/ OR Id = 62094078 \/* double duplicaet *\/ OR Id = 62093813 \/* closed as opinionated *\/","CreationDate":"2020-06-01 01:24:05","validated":false,"QueryBody_Original":"SELECT  *\nFROM Posts\n--LEFT JOIN PostFeedback on Posts.Id = PostFeedback.PostId\nWHERE Id = 62097022 -- downvoted\n   OR Id = 62094078 -- double duplicaet\n   OR Id = 62093813 -- closed as opinionated\n;\n\nSELECT *\nFROM PendingFlags\nWHERE PostId = 62097022 -- downvoted\n   OR PostId = 62094078 -- double duplicaet\n   OR PostId = 62093813 -- closed as opinionated\n;\nSELECT * FROM FlagTypes;"},{"QuerySetId":511268,"Title":"Select Top 100 *From Posts","Description":null,"QueryBody":"SELECT * FROM Users LIMIT 100","CreationDate":"2016-07-13 01:29:01","validated":false,"QueryBody_Original":"SELECT  Top 100 *From Users"},{"QuerySetId":511564,"Title":"Top 50 users in Bloemfontein","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%south africa%' OR UPPER(Location) LIKE '%South Africa' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-07-13 16:06:18","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%south africa%'\n    OR UPPER(Location) LIKE '%South Africa'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":511687,"Title":"Why is bounty start\/close timing data removed from the data explorer?","Description":"http:\/\/meta.stackexchange.com\/questions\/281217\/why-is-bounty-start-close-timing-data-removed-from-the-data-explorer","QueryBody":"SELECT v.postid \/*  as [Post Link] *\/, v.creationdate, ph.creationdate, ph.text, ph.comment, v.bountyamount \/*  v.userid as [User Link] *\/ FROM votes AS v INNER JOIN posthistory AS ph ON ph.postid = v.postid WHERE (v.votetypeid = 8 \/* bounty start *\/ AND ph.posthistorytypeid = 33 \/* post notice added *\/)","CreationDate":"2016-07-13 22:17:07","validated":false,"QueryBody_Original":"SELECT  v.postid --  as [Post Link]\n     , v.creationdate\n     , ph.creationdate\n     , ph.text\n     , ph.comment\n     , v.bountyamount\n     --  v.userid as [User Link]\nfrom votes v \ninner join posthistory ph on ph.postid = v.postid\nwhere \n(   v.votetypeid = 8 -- bounty start\nand ph.posthistorytypeid = 33 -- post notice added\n)\n\/*OR \n(   v.votetypeid = 9 -- bounty start\nand ph.posthistorytypeid = 34 -- post notice removed\n) *\/"},{"QuerySetId":511804,"Title":"How much rep have I \"lost\" to the cap?","Description":"By Joel Coehoorn in this answer:  http:\/\/meta.stackoverflow.com\/questions\/42121\/is-there-a-script-tool-to-calculate-the-rep-as-if-there-were-no-cap\r\nEdited to use a specified User ID.\r\n","QueryBody":"SELECT Users.Id AS \"User Link\", SUM(CASE WHEN VoteTypeID = 1 THEN 15 WHEN VoteTypeID = 2 THEN 10 WHEN VoteTypeID = 3 THEN -2 WHEN VoteTypeID = 9 THEN BountyAmount ELSE 0 END) - Reputation AS LostRep, 100.0 - (Reputation * 100.0 \/ SUM(CASE WHEN VoteTypeID = 1 THEN 15 WHEN VoteTypeID = 2 THEN 10 WHEN VoteTypeID = 3 THEN -2 WHEN VoteTypeID = 9 THEN BountyAmount ELSE 0 END)) AS \"LostRep%\" FROM Votes AS v INNER JOIN Posts AS p ON p.ID = v.PostID INNER JOIN Users ON Users.ID = p.owneruserid INNER JOIN Badges ON Badges.UserId = Users.Id WHERE p.CommunityOwnedDate IS NULL AND Badges.Name = 'Mortarboard' GROUP BY Reputation, Users.Id ORDER BY 3 DESC","CreationDate":"2016-07-14 08:41:22","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link], SUM(Case When VoteTypeID = 1 Then 15 WHEN VoteTypeID=2 THEN 10 WHEN VoteTypeID=3 THEN -2 WHEN VoteTypeID=9 THEN BountyAmount ELSE 0 END) - Reputation as LostRep,\n100.0 - (Reputation * 100.0 \/ SUM(Case When VoteTypeID = 1 Then 15 WHEN VoteTypeID=2 THEN 10 WHEN VoteTypeID=3 THEN -2 WHEN VoteTypeID=9 THEN BountyAmount ELSE 0 END)) as [LostRep%]\nFROM Votes v\nINNER JOIN Posts p ON p.ID = v.PostID INNER JOIN\nUsers ON Users.ID = p.owneruserid INNER JOIN\nBadges ON Badges.UserId = Users.Id\nWHERE p.CommunityOwnedDate IS NULL AND Badges.Name = 'Mortarboard'\nGROUP BY Reputation, Users.Id\nORDER BY 3 DESC"},{"QuerySetId":512001,"Title":"Remaining posts with default alt-text - for markdown","Description":null,"QueryBody":"\/* Padding *\/ SELECT \/* Padding *\/ '    http:\/\/mi.yodeya.com\/q\/' + LTRIM(STR(p.Id, 7)) + REPEAT('&#2007;', 8 - LENGTH(p.Id)) \/* Padding *\/ + CAST(TIME_TO_STR(p.CreationDate, '%Y.%m.%d') AS TEXT(10)) + '&#2007;&#2007;&#2007;' + CAST(TIME_TO_STR(p.LastActivityDate, '%Y.%m.%d') AS TEXT(10)) + '&#2007;&#2007;&#2007;' + STR(p.score, 5) + STR((CASE WHEN p.posttypeid = 1 THEN p.viewcount ELSE pparent.viewcount END), 7) AS FormattedForMarkdown FROM Posts AS p LEFT OUTER JOIN Posts AS pparent ON pparent.Id = p.ParentId WHERE (p.Body LIKE '%alt text%' OR p.Body LIKE '%enter image description here%') AND (p.Title IS NULL OR NOT p.Title LIKE '%alt text%' \/* Exclude meta post discussing alt texts *\/) ORDER BY p.id","CreationDate":"2016-07-18 18:30:06","validated":false,"QueryBody_Original":"SELECT  \n      '    http:\/\/mi.yodeya.com\/q\/' + ltrim(str(p.Id, 7))\n     + REPLICATE('&#2007;', 8 - LEN(p.Id)) -- Padding\n     + convert(varchar(10), p.CreationDate, 102) + '&#2007;&#2007;&#2007;'\n     + convert(varchar(10), p.LastActivityDate, 102) + '&#2007;&#2007;&#2007;'\n     + str(p.score, 5)\n     + str((case when p.posttypeid = 1 then p.viewcount else pparent.viewcount end), 7)\n     as FormattedForMarkdown\nFROM Posts p\nLEFT OUTER JOIN Posts pparent\nON pparent.Id = p.ParentId\nWHERE \n      (\n          p.Body LIKE '%alt text%'\n       OR p.Body LIKE '%enter image description here%'\n      )\n  AND \n      (\n          p.Title IS NULL\n       OR p.Title NOT LIKE '%alt text%' -- Exclude meta post discussing alt texts\n      )\nORDER BY p.id asc"},{"QuerySetId":512199,"Title":"How often is the selected answer also the most upvoted (WIP)?","Description":null,"QueryBody":"SELECT a.Id AS \"Answer Id\", a.Score AS \"Score\", a.ParentId AS \"ParentId\", q.AcceptedAnswerId AS \"AcceptedAnswerId\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id","CreationDate":"2016-07-15 04:04:29","validated":false,"QueryBody_Original":"SELECT \na.Id as [Answer Id],\na.Score as [Score],\na.ParentId as [ParentId],\nq.AcceptedAnswerId as [AcceptedAnswerId]\nfrom\n    Posts q\n  inner join\n    Posts a\n  on a.ParentId = q.Id\n--  on aa.Id = q.AcceptedAnswerId\n\n\n--UNION"},{"QuerySetId":512694,"Title":"High views per day questions with few answers","Description":null,"QueryBody":"SELECT Question.ViewCount, DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), CAST(Question.CreationDate AS DATE)) AS Days, Question.Id AS \"Post Link\", (Question.ViewCount \/ DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), CAST(Question.CreationDate AS DATE))) AS ViewsPerDay, Question.AnswerCount, (SELECT MAX(Answers.Score) FROM POSTS AS \"Answers\" WHERE Answers.ParentId = Question.Id AND Answers.PostTypeId = 2) AS \"Highest Answer Score\", Question.Tags FROM POSTS AS \"Question\" WHERE Question.PostTypeId = 1 AND Question.acceptedanswerid IS NULL AND DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), CAST(Question.CreationDate AS DATE)) > 10 ORDER BY AnswerCount, ViewsPerDay DESC LIMIT 500","CreationDate":"2016-07-16 02:32:48","validated":false,"QueryBody_Original":"SELECT  \n    TOP 500\n    Question.ViewCount,\n    DATEDIFF(dd, convert(date,Question.CreationDate), convert(date, GETDATE()) ) as Days ,    \n    Question.Id as [Post Link],\n    (Question.ViewCount \/ DATEDIFF(dd, convert(date,Question.CreationDate), convert(date, GETDATE()) )) as ViewsPerDay,\n    Question.AnswerCount,\n    (SELECT MAX (Answers.Score )\n     FROM POSTS \"Answers\"\n     WHERE Answers.ParentId = Question.Id\n     AND   Answers.PostTypeId = 2) \"Highest Answer Score\",\n    Question.Tags\n FROM\n    POSTS \"Question\"\nwhere Question.PostTypeId = 1 \nAND   Question.acceptedanswerid is null\nAND   DATEDIFF(dd, convert(date,Question.CreationDate), convert(date, GETDATE()) ) > 10\nORDER BY\n    AnswerCount asc,\n    ViewsPerDay desc"},{"QuerySetId":512920,"Title":"SELECT a string plus a number","Description":null,"QueryBody":"SELECT 'Brent' + '100'","CreationDate":"2017-08-11 20:48:43","validated":false,"QueryBody_Original":"SELECT  'Brent' + '100';"},{"QuerySetId":512933,"Title":"WHERE filtering with multiple fields","Description":null,"QueryBody":"SELECT * FROM dbo.Users WHERE CreationDate >= '2016\/01\/01' AND DisplayName LIKE '%Brent%' ORDER BY creationdate DESC","CreationDate":"2020-05-14 01:50:52","validated":false,"QueryBody_Original":"SELECT  * \n  FROM dbo.Users\n  WHERE CreationDate >= '2016\/01\/01'\n    AND DisplayName LIKE '%Brent%'\norder by creationdate desc;"},{"QuerySetId":512934,"Title":"WHERE with AND\/OR and parenthesis","Description":null,"QueryBody":"SELECT * FROM dbo.Users WHERE CreationDate >= '2016\/01\/01' AND (DisplayName = '%Brent%' OR DisplayName LIKE '%Grimes%')","CreationDate":"2020-02-19 04:29:33","validated":false,"QueryBody_Original":"SELECT  * \n  FROM dbo.Users\n  WHERE CreationDate >= '2016\/01\/01'\n    AND (DisplayName = '%Brent%' OR DisplayName LIKE '%Grimes%');"},{"QuerySetId":512964,"Title":"GROUP BY - Most popular user locations","Description":null,"QueryBody":"SELECT Location, COUNT(*) AS Population FROM dbo.Users GROUP BY Location ORDER BY Population DESC","CreationDate":"2018-12-08 00:46:32","validated":false,"QueryBody_Original":"SELECT  Location, COUNT(*) AS Population\nFROM dbo.Users\nGROUP BY Location\nORDER BY \nPopulation desc"},{"QuerySetId":512971,"Title":"GROUP BY - Jon Skeet's posts by year","Description":null,"QueryBody":"SELECT MONTH(CreationDate) AS CreationDateMonth, COUNT(*) AS PostsThisMonth FROM dbo.Users GROUP BY MONTH(CreationDate) ORDER BY MONTH(CreationDate)","CreationDate":"2018-12-04 20:15:14","validated":false,"QueryBody_Original":"SELECT  MONTH(CreationDate) AS CreationDateMonth, COUNT(*) AS PostsThisMonth\n  FROM dbo.Users\n  GROUP BY MONTH(CreationDate)\n  ORDER BY MONTH(CreationDate);"},{"QuerySetId":512975,"Title":"GROUP BY - Jon Skeet's posts with FavoriteCount statistics","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS CreationDateYear, COUNT(*) AS PostsThisYear, SUM(FavoriteCount) AS FavoriteCountSum, AVG(FavoriteCount) AS FavoriteCountAvg, MIN(FavoriteCount) AS FavoriteCountMin, MAX(FavoriteCount) AS FavoriteCountMax FROM dbo.Posts WHERE OwnerUserId = 22656 GROUP BY YEAR(CreationDate) ORDER BY YEAR(CreationDate)","CreationDate":"2016-07-16 19:45:09","validated":false,"QueryBody_Original":"SELECT  YEAR(CreationDate) AS CreationDateYear, \n    COUNT(*) AS PostsThisYear,\n    SUM(FavoriteCount) AS FavoriteCountSum,\n    AVG(FavoriteCount) AS FavoriteCountAvg,\n    MIN(FavoriteCount) AS FavoriteCountMin,\n    MAX(FavoriteCount) AS FavoriteCountMax\n  FROM dbo.Posts\n  WHERE OwnerUserId = 22656\n  GROUP BY YEAR(CreationDate)\n  ORDER BY YEAR(CreationDate);"},{"QuerySetId":513372,"Title":"List of users by  reputation from answers (not working properly)","Description":"Ranks users by total reputation from questions (estimated by using the post score). ","QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation AS \"Total Rep\", SUM(Posts.Score) * 10 + COUNT(Posts.AcceptedAnswerId) * 15 AS \"Answer Rep\" FROM Users INNER JOIN Posts ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 AND Posts.CommunityOwnedDate IS NULL GROUP BY Users.Reputation, Users.Id ORDER BY \"Answer Rep\" DESC LIMIT 500","CreationDate":"2016-07-17 22:54:39","validated":false,"QueryBody_Original":"SELECT \n    TOP 500\n    Users.Id AS [User Link],\n    Users.Reputation AS [Total Rep],\n    SUM(Posts.Score)*10 + COUNT(Posts.AcceptedAnswerId)*15  AS [Answer Rep]\nFROM\n    Users\n  INNER JOIN\n    Posts ON Posts.OwnerUserId = Users.Id\nWHERE\n   Posts.PostTypeId = 2 AND\n   Posts.CommunityOwnedDate IS NULL\nGroup By\n    Users.Reputation, Users.Id\nOrder By\n    [Answer Rep] DESC"},{"QuerySetId":513736,"Title":"First users to cast close votes on a closed post","Description":"Returns the user Id of the first user to cast a close vote on recently closed questions, ordered by closure timestamp.","QueryBody":"SELECT PostHistory.PostId AS \"Post Link\", PostHistory.CreationDate AS PostClosureDate, PostHistory.UserId AS \"User Link\", PostHistory.Comment AS PostClosureComment, CAST(SUBSTRING(PostHistory.Text, STR_POSITION(PostHistory.Text, 'Voters') + 15, STR_POSITION(PostHistory.Text, 'Display') - STR_POSITION(PostHistory.Text, 'Voters') - 17) AS INT) AS \"User Link\", PostHistory.Text AS PostClosureText FROM PostHistory WHERE PostHistoryTypeId = 10 ORDER BY PostHistory.CreationDate DESC LIMIT 200","CreationDate":"2019-04-27 21:48:52","validated":false,"QueryBody_Original":"SELECT  TOP 200\n  PostHistory.PostId AS [Post Link],\n  PostHistory.CreationDate AS PostClosureDate,\n  PostHistory.UserId AS [User Link],\n  PostHistory.Comment AS PostClosureComment,\n  CAST(SUBSTRING(\n     PostHistory.Text, \n     CHARINDEX('Voters',PostHistory.Text)+15,\n     CHARINDEX('Display',  PostHistory.Text)\n       -CHARINDEX('Voters',PostHistory.Text)-17\n     ) AS INT) AS [User Link],\n  PostHistory.Text AS PostClosureText\nFROM PostHistory\nWHERE PostHistoryTypeId = 10\nORDER BY PostHistory.CreationDate DESC"},{"QuerySetId":513929,"Title":"SELECT * FROM Posts WHERE SCORE >0","Description":null,"QueryBody":"SELECT * FROM Posts WHERE SCORE > 0","CreationDate":"2016-07-18 21:26:08","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE SCORE >0"},{"QuerySetId":514034,"Title":"Number of users who got a badge","Description":null,"QueryBody":"SELECT COUNT(DISTINCT UserId) AS \"Number of Users\" FROM Badges WHERE Name = '##name##'","CreationDate":"2016-07-18 23:54:52","validated":false,"QueryBody_Original":"SELECT  count(distinct UserId) as [Number of Users] from Badges\nwhere Name = '##name##'"},{"QuerySetId":514035,"Title":"number of users who have each badge","Description":null,"QueryBody":"SELECT Name AS \"bdgnam\", Class AS \"bdgcls\", COUNT(DISTINCT \"UserId\") AS \"cntusr\", (SELECT COUNT(*) FROM \"Badges\" AS \"i\" WHERE \"i\".\"Name\" = \"o\".\"Name\" AND \"i\".\"Class\" = \"o\".\"Class\" AND \"i\".\"UserId\" = 4918) AS \"selmul\" FROM \"Badges\" AS \"o\" GROUP BY \"Name\", \"Class\" ORDER BY \"cntusr\"","CreationDate":"2016-07-19 00:11:07","validated":false,"QueryBody_Original":"SELECT  Name as \"bdgnam\", Class as \"bdgcls\", \ncount(distinct \"UserId\") as \"cntusr\",\n(SELECT count(*) from \"Badges\" as \"i\" where \n\"i\".\"Name\" = \"o\".\"Name\" and \"i\".\"Class\" = \"o\".\"Class\" and \"i\".\"UserId\" = 4918) \nas \"selmul\"\nfrom \"Badges\" as \"o\"\ngroup by \"Name\", \"Class\" order by \"cntusr\";"},{"QuerySetId":514068,"Title":"How many times has Jorge Castro been wrong?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id WHERE (v.VoteTypeId = 6) AND p.OwnerUserID = 235","CreationDate":"2017-01-31 00:47:02","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\n    FROM Votes v\n    INNER JOIN Posts p ON v.PostId = p.Id\n    WHERE (\n           v.VoteTypeId = 6)\n      AND p.OwnerUserID = 235"},{"QuerySetId":514333,"Title":"Zero Voted Questions Oldest first","Description":null,"QueryBody":"SELECT DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), CAST(Question.CreationDate AS DATE)) AS \"Days old\", Question.Id AS \"Post Link\", Question.Score, Question.ViewCount AS \"Views\", Question.AnswerCount, Question.Tags, Question.AcceptedAnswerId FROM POSTS AS \"Question\" WHERE Question.PostTypeId = 1 AND Question.Score > 0 AND Question.AnswerCount = 0 AND DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), CAST(Question.CreationDate AS DATE)) > 10 AND Question.AcceptedAnswerId IS NULL AND closeddate IS NULL ORDER BY \"Views\" DESC LIMIT 1000","CreationDate":"2020-03-08 01:28:46","validated":false,"QueryBody_Original":"SELECT  \n      TOP 1000\n      DATEDIFF(dd, CONVERT(date,Question.CreationDate), CONVERT(date, GETDATE()) ) [Days old],\n      Question.Id AS [Post Link],\n      Question.Score,\n      Question.ViewCount AS [Views],\n      Question.AnswerCount,\n      Question.Tags,\n      Question.AcceptedAnswerId\n FROM\n      POSTS \"Question\"\nWHERE Question.PostTypeId = 1\nAND   Question.Score > 0\nAND   Question.AnswerCount = 0\nAND   DATEDIFF(dd, CONVERT(date,Question.CreationDate), CONVERT(date, GETDATE()) ) > 10\nand Question.AcceptedAnswerId is null\nand closeddate is null\nORDER BY\n      [Views] desc"},{"QuerySetId":514370,"Title":"Top Karaj, Iran users in StackOverFlow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%alborz%' OR UPPER(Location) LIKE '%ALBORZ%' OR LOWER(Location) LIKE '%karaj%' OR UPPER(Location) LIKE '%KARAJ%' ORDER BY Reputation DESC","CreationDate":"2016-07-19 17:51:31","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%alborz%'\n    OR UPPER(Location) LIKE '%ALBORZ%'\n    OR LOWER(Location) LIKE '%karaj%'\n    OR UPPER(Location) LIKE '%KARAJ%' \nORDER BY\n    Reputation DESC;"},{"QuerySetId":515183,"Title":"Ability To Filter Posts Based On User's Last Seen Status","Description":"http:\/\/meta.stackoverflow.com\/questions\/328374\/ability-to-filter-posts-based-on-users-last-seen-status","QueryBody":"SELECT p.id AS \"Post Link\", u.lastaccessdate, u.id AS \"User Link\" FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE \/* one year ago *\/ p.posttypeid = 1 \/* Q *\/ AND \/* one year ago *\/ u.lastaccessdate < DATEADD(yy, -1, GETDATE()) \/* one year ago *\/ AND p.tags LIKE '%<haskell>%' \/* tag *\/ AND NOT closeddate IS NULL \/* not closed *\/ ORDER BY u.lastaccessdate DESC","CreationDate":"2016-07-21 01:22:22","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link]\n     , u.lastaccessdate \n     , u.id as [User Link] \nfrom posts p \ninner join users u on u.id = p.owneruserid\nwhere p.posttypeid = 1 --Q\nand u.lastaccessdate < dateadd(yy , -1, getdate()) -- one year ago\nand p.tags like '%<haskell>%'  -- tag\nand closeddate is not null -- not closed\norder by u.lastaccessdate  desc"},{"QuerySetId":515802,"Title":"Users that related to tag","Description":null,"QueryBody":"SELECT DISTINCT u.Id AS \"User Link\", p.Tags FROM Users AS u, Posts AS p WHERE Location LIKE '%israel%' AND u.id = p.OwnerUserId AND p.Tags LIKE '%cpp%'","CreationDate":"2016-07-22 01:55:17","validated":false,"QueryBody_Original":"SELECT  DISTINCT u.Id [User Link], p.Tags\nfrom Users u, Posts p\nwhere Location like '%israel%' and u.id = p.OwnerUserId and p.Tags like '%cpp%'"},{"QuerySetId":516000,"Title":"top 500 stackoverflow users thailand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC) AS Rank, Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Thailand%' LIMIT 500","CreationDate":"2016-07-22 18:21:54","validated":false,"QueryBody_Original":"SELECT \n   TOP 500 ROW_NUMBER() OVER (Order by reputation DESC) as Rank,\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Thailand%'\n--ORDER BY\n--   reputation DESC"},{"QuerySetId":516286,"Title":"select Id from Posts ","Description":null,"QueryBody":"SELECT Id FROM Posts","CreationDate":"2016-07-23 15:32:25","validated":false,"QueryBody_Original":"SELECT  Id from Posts"},{"QuerySetId":516495,"Title":"Search for edit summaries containing a string","Description":null,"QueryBody":"SELECT a.Comment AS \"Ridiculous Comment\", a.PostId AS \"id\" FROM PostHistory AS a WHERE a.PostHistoryTypeId IN (4, 5, 6) AND a.UserId = 85695 AND a.Comment LIKE '%tag%' GROUP BY a.Comment, a.PostId LIMIT 50","CreationDate":"2016-07-24 17:36:44","validated":false,"QueryBody_Original":"SELECT  TOP 50 \n  a.Comment AS [Ridiculous Comment], a.PostId AS [id]\nFROM PostHistory a\nWHERE\n  a.PostHistoryTypeId IN (4,5,6) \n  AND a.UserId = 85695\n  AND a.Comment LIKE '%tag%'\nGROUP BY a.Comment, a.PostId"},{"QuerySetId":516516,"Title":"select PostTypeId,FavoriteCount from Ports where Score>=30 ","Description":null,"QueryBody":"SELECT PostTypeId, FavoriteCount FROM Posts WHERE Score >= 30","CreationDate":"2016-07-24 21:03:12","validated":false,"QueryBody_Original":"SELECT  PostTypeId,FavoriteCount from Posts where Score>=30"},{"QuerySetId":516530,"Title":"Top 10 Users From Kolkata, India","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Kolkata%' ORDER BY reputation DESC LIMIT 10","CreationDate":"2016-09-05 21:10:24","validated":false,"QueryBody_Original":"SELECT  TOP 10\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like '%Kolkata%' \nORDER BY\n   reputation DESC"},{"QuerySetId":516602,"Title":"Tags with only one question","Description":null,"QueryBody":"SELECT * FROM Tags WHERE Count = 1","CreationDate":"2016-07-25 03:38:06","validated":false,"QueryBody_Original":"SELECT  * from Tags where Count = 1"},{"QuerySetId":517136,"Title":"All members from Sweden sorted by reputation","Description":null,"QueryBody":"SELECT DisplayName, Reputation, Location FROM USERS WHERE Reputation > 1000 ORDER BY Reputation DESC","CreationDate":"2016-07-26 16:59:02","validated":false,"QueryBody_Original":"SELECT  DisplayName, Reputation, Location from USERS\n  WHERE Reputation > 1000\n  ORDER BY Reputation DESC;"},{"QuerySetId":517244,"Title":"Who says they are \"new to\" a technology?","Description":null,"QueryBody":"SELECT Id, Tags, Body FROM Posts WHERE PostTypeId = 1 AND Body LIKE '%new to%'","CreationDate":"2016-07-26 23:28:54","validated":false,"QueryBody_Original":"SELECT  Id, Tags, Body from Posts\n  where PostTypeId = 1 and\n  Body like '%new to%'"},{"QuerySetId":517256,"Title":"How many users can vote (not just flag) to close questions?","Description":null,"QueryBody":"SELECT DisplayName, Id, Reputation FROM Users WHERE Reputation > 2999","CreationDate":"2016-07-26 23:38:20","validated":false,"QueryBody_Original":"SELECT  DisplayName, Id, Reputation FROM Users WHERE Reputation > 2999"},{"QuerySetId":518524,"Title":"Top 50 Trujillo - Peru","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%trujillo%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-11-15 23:11:51","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%trujillo%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":518546,"Title":"Questions with score more than 100","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Score > 100","CreationDate":"2016-07-28 17:40:03","validated":false,"QueryBody_Original":"SELECT  * from Posts where Score > 100"},{"QuerySetId":519110,"Title":"Average post score by month","Description":null,"QueryBody":"SELECT AVG(score) AS Average, DATEPART(month, CreationDate) AS Month, DATEPART(year, CreationDate) AS Year FROM Posts WHERE CreationDate > DATEADD(year, -2, GETDATE()) GROUP BY DATEPART(month, CreationDate), DATEPART(year, CreationDate) ORDER BY DATEPART(year, CreationDate) DESC, DATEPART(month, CreationDate) DESC","CreationDate":"2016-07-29 10:24:27","validated":false,"QueryBody_Original":"SELECT  avg(score) as Average, datepart(month, CreationDate) as Month, datepart(year, CreationDate) as Year\nfrom Posts\nwhere CreationDate > dateadd(year, -2, getdate())\ngroup by datepart(month, CreationDate), datepart(year, CreationDate)\norder by datepart(year, CreationDate) desc, datepart(month, CreationDate) desc;"},{"QuerySetId":519234,"Title":"Top user from Tiruchirappalli, Tamil Nadu","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Malaysia%' ORDER BY reputation DESC LIMIT 10","CreationDate":"2016-09-09 09:29:04","validated":false,"QueryBody_Original":"SELECT  TOP 10\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like '%Malaysia%' \nORDER BY\n   reputation DESC"},{"QuerySetId":519438,"Title":"Top 5000 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%INDIA' ORDER BY Reputation DESC LIMIT 5000","CreationDate":"2016-07-30 09:38:08","validated":false,"QueryBody_Original":"SELECT  TOP 5000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%INDIA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":519473,"Title":"TOP 100 users from SAMARA","Description":"The top 100 users from Samara (ranked by reputation). Thanks to http:\/\/data.stackexchange.com\/stackoverflow\/query\/60933\/top-50-users-from-india","QueryBody":"SELECT Id, CAST(TIME_TO_STR(CreationDate, '%d %b %Y') AS TEXT(11)) AS \"Member since\", DisplayName, Reputation, WebsiteUrl FROM Users WHERE Location LIKE N'%Samara%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2016-08-01 17:24:38","validated":false,"QueryBody_Original":"SELECT  TOP 100       \n   Id,\n   CONVERT(VARCHAR(11), CreationDate, 106) as 'Member since',\n   DisplayName,      \n   Reputation,\n   WebsiteUrl\nFROM\n   Users\nWHERE\n   Location like N'%Samara%'\nORDER BY\n   reputation DESC"},{"QuerySetId":519771,"Title":"Never content: What is the most changed post? per db","Description":"http:\/\/meta.stackexchange.com\/questions\/280469\/never-content-what-is-the-most-changed-post\/281898#281898\r\n\r\nper db query","QueryBody":"SELECT postid \/* , q.title *\/, (SELECT (CASE WHEN q.title IS NULL AND NOT q.parentid IS NULL THEN (SELECT title FROM posts AS mq WHERE mq.id = q.parentid) ELSE title END) AS qtitle FROM posts AS q WHERE id = postid) AS nqtitle, COUNT(*) FROM (SELECT postid, revisionguid FROM posthistory WHERE posthistorytypeid < 10 GROUP BY postid, revisionguid) AS revs GROUP BY postid HAVING COUNT(*) > 300","CreationDate":"2016-08-01 12:39:16","validated":false,"QueryBody_Original":"SELECT  postid\n     --, q.title\n     , (SELECT (case when q.title is null and q.parentid is not null then \n                  ( SELECT title \n                   from posts mq \n                   where mq.id = q.parentid)\n               else title\n               end) as qtitle\n        from posts q\n        where id = postid ) as nqtitle\n     , count(*)\nfrom\n(\n  SELECT postid\n       , revisionguid\n  from posthistory\n  where posthistorytypeid < 10\n  -- revisionguid's groups several events in one\n  group by postid, revisionguid\n) revs\n-- inner join posts p on p.id = revs.postid\n-- inner join posts q on q.id = coalesce(p.parentid, p.id)\ngroup by postid\n -- , q.title\nhaving count(*)> 300"},{"QuerySetId":519936,"Title":"how many posts are there in total?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts","CreationDate":"2016-08-01 16:07:10","validated":false,"QueryBody_Original":"SELECT \n    COUNT(*) \nFROM Posts"},{"QuerySetId":520077,"Title":"Potential voters in mod election","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE Reputation >= 150","CreationDate":"2016-08-02 04:02:12","validated":false,"QueryBody_Original":"SELECT  count(Id) from Users where Reputation >= 150"},{"QuerySetId":520469,"Title":"Russian SO Users w\/ Usefully Complete Profiles","Description":null,"QueryBody":"SELECT * FROM Users WHERE (LENGTH(WebsiteUrl) > 0 OR LENGTH(AboutMe) > 0) AND ID < 250000 ORDER BY ID","CreationDate":"2016-09-15 15:33:06","validated":false,"QueryBody_Original":"SELECT  * \nFROM Users\nWHERE (LEN(WebsiteUrl)>0 OR LEN(AboutMe)>0) AND ID<250000\nORDER BY ID"},{"QuerySetId":520562,"Title":"extreme mismatch on revision count and number of edit events","Description":null,"QueryBody":"SELECT postid \/* , q.title *\/, (SELECT (CASE WHEN q.title IS NULL AND NOT q.parentid IS NULL THEN (SELECT title FROM posts AS mq WHERE mq.id = q.parentid) ELSE title END) AS qtitle FROM posts AS q WHERE id = postid) AS nqtitle, COUNT(*) FROM (SELECT postid, revisionguid FROM posthistory WHERE posthistorytypeid < 10 GROUP BY postid, revisionguid) AS revs GROUP BY postid HAVING COUNT(*) > 300","CreationDate":"2016-08-03 11:08:40","validated":false,"QueryBody_Original":"SELECT  postid\n     --, q.title\n     , (SELECT (case when q.title is null and q.parentid is not null then \n                  ( SELECT title \n                   from posts mq \n                   where mq.id = q.parentid)\n               else title\n               end) as qtitle\n        from posts q\n        where id = postid ) as nqtitle\n     , count(*)\nfrom\n(\n  SELECT postid\n       , revisionguid\n  from posthistory\n  where posthistorytypeid < 10\n  -- revisionguid's groups several events in one\n  group by postid, revisionguid\n) revs\n-- inner join posts p on p.id = revs.postid\n-- inner join posts q on q.id = coalesce(p.parentid, p.id)\ngroup by postid\n -- , q.title\nhaving count(*)> 300"},{"QuerySetId":520710,"Title":"Find Questions Containing a Single Tag","Description":"A query to look for questions that contain a SINGLE tag - something that can't be achieved with the native search tools on the Stack Overflow site.\r\n\r\nThis example returns the top 10 questions, sorted by the last activity date.","QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE Tags = '<' + '%##Tag##%' + '>' AND PostTypeId = 1 ORDER BY LastActivityDate DESC","CreationDate":"2016-08-12 19:09:20","validated":false,"QueryBody_Original":"SELECT  Id [Post Link], Tags\nFROM Posts\nWHERE Tags = '<' + '%##Tag##%' + '>' AND PostTypeId = 1\nORDER BY LastActivityDate Desc"},{"QuerySetId":521952,"Title":"the Popularity (on Stack Overflow) of Derby, H2, and HSQLDB","Description":null,"QueryBody":"SELECT d, SUM(h2) OVER (ORDER BY d) AS h2, SUM(hsqldb) OVER (ORDER BY d) AS hsqldb, SUM(derby) OVER (ORDER BY d) AS derby, SUM(mysql) OVER (ORDER BY d) AS mysql, SUM(pgsql) OVER (ORDER BY d) AS pgsql FROM (SELECT CAST(CreationDate AS DATE) AS d, COUNT(CASE WHEN Tags LIKE '%<h2>%' THEN 1 END) AS h2, COUNT(CASE WHEN Tags LIKE '%<hsqldb>%' THEN 1 END) AS hsqldb, COUNT(CASE WHEN Tags LIKE '%<derby>%' THEN 1 END) AS derby, COUNT(CASE WHEN Tags LIKE '%<mysql>%' THEN 1 END) AS mysql, COUNT(CASE WHEN Tags LIKE '%<postgresql>%' THEN 1 END) AS pgsql FROM Posts GROUP BY CAST(CreationDate AS DATE)) AS DailyPosts ORDER BY d","CreationDate":"2016-08-07 20:47:29","validated":false,"QueryBody_Original":"SELECT \n  d,\n  SUM(h2)     OVER (ORDER BY d) AS h2,\n  SUM(hsqldb) OVER (ORDER BY d) AS hsqldb,\n  SUM(derby)  OVER (ORDER BY d) AS derby,\n  SUM(mysql)  OVER (ORDER BY d) AS mysql,\n  SUM(pgsql)  OVER (ORDER BY d) AS pgsql\nFROM (\n  SELECT\n    CAST(CreationDate AS DATE) AS d, \n    COUNT(CASE WHEN Tags LIKE '%<h2>%'     THEN 1 END) AS h2,\n    COUNT(CASE WHEN Tags LIKE '%<hsqldb>%' THEN 1 END) AS hsqldb,\n    COUNT(CASE WHEN Tags LIKE '%<derby>%'  THEN 1 END) AS derby,\n    COUNT(CASE WHEN Tags LIKE '%<mysql>%'  THEN 1 END) AS mysql,\n    COUNT(CASE WHEN Tags LIKE '%<postgresql>%'  THEN 1 END) AS pgsql\n  FROM Posts\n  GROUP BY CAST(CreationDate AS DATE)\n) AS DailyPosts\nORDER BY d ASC"},{"QuerySetId":522075,"Title":"Top users from Yekaterinburg, Russia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ekaterinburg%' OR UPPER(Location) LIKE '%EKATERINBURG%' OR Location LIKE '%ekaterinburg%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2016-11-16 22:37:05","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ekaterinburg%'\n    OR UPPER(Location) LIKE '%EKATERINBURG%'\n    or Location like '%ekaterinburg%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":522140,"Title":"Top 30 users from Chandigarh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%siddhapur%' OR UPPER(Location) LIKE '%SIDDHAPUR' ORDER BY Reputation DESC LIMIT 30","CreationDate":"2019-03-26 11:15:57","validated":false,"QueryBody_Original":"SELECT  TOP 30\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%siddhapur%'\n    OR UPPER(Location) LIKE '%SIDDHAPUR'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":523017,"Title":"Top users from Azerbaijan or Baku","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%azerbaijan%' OR UPPER(Location) LIKE '%BAKU%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-08-10 15:16:15","validated":false,"QueryBody_Original":"SELECT \nTOP (100) ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%azerbaijan%'\n    OR UPPER(Location) LIKE '%BAKU%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":523208,"Title":"GroupBy vs Distinct Query Plan","Description":null,"QueryBody":"SELECT DISTINCT AGE FROM USERS","CreationDate":"2016-09-02 04:05:23","validated":false,"QueryBody_Original":"SELECT  DISTINCT AGE FROM USERS;\n\n\nSELECT AGE FROM USERS GROUP BY AGE;"},{"QuerySetId":523650,"Title":"Search for URL in answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Title FROM Posts WHERE Body LIKE '%##URL##%' AND CreationDate >= '2016-08-01' ORDER BY Score DESC","CreationDate":"2016-08-12 19:22:40","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Score, Title \nfrom Posts\nwhere Body like '%##URL##%' and\nCreationDate >= '2016-08-01'\norder by Score desc"},{"QuerySetId":523796,"Title":"Writing SQL with SQL example INPUT.","Description":null,"QueryBody":"SELECT 'SELECT CAST(''' + BADGES.NAME + '''AS VARCHAR(50)), COUNT(1) FROM BADGES WHERE BADGES.NAME = ''' + BADGES.NAME + ''' UNION ALL' FROM BADGES GROUP BY BADGES.NAME","CreationDate":"2016-09-02 04:03:30","validated":false,"QueryBody_Original":"SELECT  'SELECT CAST(''' + BADGES.NAME + '''AS VARCHAR(50)), COUNT(1) FROM BADGES WHERE BADGES.NAME = ''' + BADGES.NAME + ''' UNION ALL' FROM BADGES GROUP BY BADGES.NAME;"},{"QuerySetId":524157,"Title":"Total reputation against number of questions per user","Description":"List of users with their total reputation now and the total number of non-deleted questions. Users who haven't asked any question are omitted.","QueryBody":"SELECT u.Id AS \"User Link\", MAX(u.Reputation) AS \"Reputation\", COUNT(*) AS \"Questions\", 1.0 * MAX(u.Reputation) \/ COUNT(*) AS \"Rep\/Q\" FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.PostTypeId = 1 AND p.ClosedDate IS NULL AND DeletionDate IS NULL GROUP BY u.Id ORDER BY 1.0 * MAX(u.Reputation) \/ COUNT(*)","CreationDate":"2016-08-14 18:13:06","validated":false,"QueryBody_Original":"SELECT \n  u.Id as [User Link],\n  max(u.Reputation) as [Reputation],\n  Count(*) as [Questions],\n  1.0 * max(u.Reputation) \/ Count(*) as [Rep\/Q]\nfrom Posts p\ninner join Users u on u.Id = p.OwnerUserId\nwhere p.PostTypeId = 1 and p.ClosedDate IS NULL and DeletionDate IS NULL\ngroup by u.Id\norder by 1.0 * max(u.Reputation) \/ Count(*)"},{"QuerySetId":524246,"Title":"Top users by the number of times they earned 200\/day","Description":"This query finds the top users by the number of times they've earned 200\/day, and gives indication about the progress towards Epic and Legendary badges.\r\nThink of it as the number of times Mortarboard badge could have been earned","QueryBody":"SELECT Id AS \"User Link\", (SELECT COUNT(TotalRep) FROM (SELECT SUM(CASE votes.votetypeid WHEN 1 THEN 15 WHEN 2 THEN 10 WHEN 9 THEN BountyAmount END) AS TotalRep, Votes.CreationDate AS CreationDate FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id WHERE Posts.OwnerUserId = U.Id AND Posts.CommunityOwnedDate IS NULL GROUP BY Votes.CreationDate) AS t WHERE TotalRep >= 200) FROM Users AS U WHERE U.Reputation >= 200 ORDER BY 2 DESC","CreationDate":"2020-10-23 00:03:47","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], (\n\tSELECT Count (TotalRep)\n\t  FROM (\n\t\t\t   SELECT \n\t\t\t\t\tSUM(case votes.votetypeid \n\t\t\t\t\t\t\tWHEN 1 THEN 15\n\t\t\t\t\t\t\tWHEN 2 THEN 10\n\t\t\t\t\t\t\tWHEN 9 THEN BountyAmount\n\t\t\t\t\t END) as TotalRep,\n\t\t\t\t\t Votes.CreationDate AS CreationDate\n\t\t\t  FROM   Posts\n\t\t\t\t\t INNER JOIN Votes\n\t\t\t\t\t   ON Votes.PostId = Posts.Id\n\t\t\t\t\t\t  \n\t\t\t  WHERE  Posts.OwnerUserId = U.Id\n\t\t\t\t\t AND Posts.CommunityOwnedDate IS NULL\n\t\t\t  GROUP  BY Votes.CreationDate\n\t  ) t\n\t  WHERE TotalRep>=200)\nFROM Users U where U.Reputation >= 200\nORDER BY 2 DESC"},{"QuerySetId":524247,"Title":"Tomcat Related Posts with Tags of Security or Performance","Description":null,"QueryBody":"SELECT Id, Title + REPLACE(REPLACE(Tags, '<', ' '), '>', ' ') + REPLACE(REPLACE(body, CHAR(13), ''), CHAR(10), '') AS txt FROM POSTS WHERE creationdate > '2000-01-01' AND (title LIKE '%java%' OR body LIKE '%java%' OR tags LIKE '%java%') AND (body LIKE '%performance%' OR body LIKE '%better%' OR body LIKE '%efficient%' OR body LIKE '%faster%') AND (NOT tags LIKE '%performance%') AND (NOT tags LIKE '%seurity%') LIMIT 1000","CreationDate":"2016-08-14 21:30:20","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Id, \n       Title+replace(replace(Tags,'<',' '),'>',' ')+REPLACE(REPLACE(body, CHAR(13), ''), CHAR(10), '') as txt\nfrom   POSTS\nwhere creationdate > '2000-01-01'\nand (title like '%java%'\nor body like '%java%' or tags like '%java%')\nand (body like '%performance%' or body like '%better%' or body like '%efficient%' or body  like '%faster%' )\nand (tags not like '%performance%')\nand (tags not like '%seurity%')"},{"QuerySetId":524594,"Title":"where did i put that comment","Description":null,"QueryBody":"SELECT * FROM Comments WHERE UserId = '3604745' AND text LIKE '%example%'","CreationDate":"2016-08-15 15:30:16","validated":false,"QueryBody_Original":"SELECT  * from Comments where UserId = '3604745' and text like '%example%'"},{"QuerySetId":524663,"Title":"Comment text search, with related post link ","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\" FROM Comments AS c WHERE c.Text LIKE '%Thank you' AND LENGTH(c.Text) < 20","CreationDate":"2016-08-17 13:02:47","validated":false,"QueryBody_Original":"SELECT \n    c.Id AS [Comment Link]\nFROM\n    Comments c\nWHERE\n    c.Text LIKE '%Thank you'\n    AND LEN(c.Text) < 20"},{"QuerySetId":525021,"Title":"Top Pozna\u0144, Poland SO Users (over 1000 rep)","Description":"SO users from Pozna\u0144 with reputation over 1000","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE (LOWER(Location) LIKE '%pakistan%' OR Location LIKE '%pakistan%') AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-08-13 15:23:15","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%pakistan%'\n    or Location like '%pakistan%')\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":525305,"Title":"Most repeated comments on Super User","Description":null,"QueryBody":"SELECT COUNT(*) AS Number, Text, AVG(CAST(score AS FLOAT(6, 2))) AS AvgScore FROM comments GROUP BY Text HAVING COUNT(*) >= 5 ORDER BY Number DESC, AvgScore DESC LIMIT 1000","CreationDate":"2020-01-01 05:41:25","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  count(*) AS Number,\n  Text,\n  avg(CAST (score AS DECIMAL(6,2))) AS AvgScore\nFROM\n  comments\nGROUP BY\n  Text\nHAVING\n  count(*) >= 5\nORDER BY\n  Number DESC,\n  AvgScore DESC"},{"QuerySetId":525622,"Title":"Average Number of Tags per Post","Description":null,"QueryBody":"SELECT MIN(Posts.Tags) AS \"Minimum # of Answers\", AVG(CAST(Posts.AnswerCount AS FLOAT)) AS \"Average # of Answers\", MAX(Posts.AnswerCount) AS \"Maximum # of Answers\" FROM Posts WHERE Posts.PostTypeId = 1","CreationDate":"2016-08-17 18:35:20","validated":false,"QueryBody_Original":"SELECT \n  min(Posts.Tags) as [Minimum # of Answers],\n  avg(cast(Posts.AnswerCount as decimal)) as [Average # of Answers],\n  max(Posts.AnswerCount) as [Maximum # of Answers]\nfrom Posts\nwhere Posts.PostTypeId=1"},{"QuerySetId":525889,"Title":"High-Rep Users With No Recent Activity","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, LastAccessDate, DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) AS \"Seen\" FROM \"Users\" WHERE Reputation > 101 AND DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) < 90","CreationDate":"2016-08-18 16:28:37","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link],\n       Reputation,\n       LastAccessDate,\n       DATEDIFF(dd, LastAccessDate, GETDATE()) AS [Seen]\nFROM [Users]\nWHERE Reputation > 101\nAND DATEDIFF(dd, LastAccessDate, GETDATE()) < 90"},{"QuerySetId":526573,"Title":"Top 40 users from banglad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%dhaka%' OR UPPER(Location) LIKE 'BD' ORDER BY Reputation DESC LIMIT 40","CreationDate":"2016-08-19 20:33:41","validated":false,"QueryBody_Original":"SELECT  TOP 40\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR LOWER(Location) LIKE '%dhaka%'\n    OR UPPER(Location) LIKE 'BD'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":526585,"Title":"Top 40 users from Bangladesh","Description":"\"dhaka\" also included in the query. ","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%dhaka%' OR UPPER(Location) LIKE 'BD' ORDER BY Reputation DESC LIMIT 40","CreationDate":"2016-08-19 20:39:11","validated":false,"QueryBody_Original":"SELECT  TOP 40\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR LOWER(Location) LIKE '%dhaka%'\n    OR UPPER(Location) LIKE 'BD'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":526936,"Title":"Top Contributors in SharePoint SE","Description":null,"QueryBody":"SELECT * FROM Users","CreationDate":"2017-08-10 13:32:34","validated":false,"QueryBody_Original":"SELECT \n    *\nFROM\n    Users"},{"QuerySetId":527054,"Title":"top 50 developer in ahmedabad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ahmedabad%' OR UPPER(Location) LIKE '%AHMEDABAD' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-08-21 16:56:18","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ahmedabad%'\n    OR UPPER(Location) LIKE '%AHMEDABAD'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":527070,"Title":"Top 60 ahmedabad developer in stackoverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ahmedabad%' OR UPPER(Location) LIKE '%AHMEDABAD' ORDER BY Reputation DESC LIMIT 60","CreationDate":"2016-08-23 21:08:06","validated":false,"QueryBody_Original":"SELECT  TOP 60\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ahmedabad%'\n    OR UPPER(Location) LIKE '%AHMEDABAD'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":527708,"Title":"JavaScript snippet tags that probably shouldn't be there","Description":null,"QueryBody":"SELECT Title, Tags, Id AS \"Post Link\", Score, ViewCount FROM Posts WHERE PostTypeId = 1 AND Score = 0 AND NOT Tags LIKE '%javascript%' AND Body LIKE '%begin snippet: js hide: false%'","CreationDate":"2016-08-23 15:38:34","validated":false,"QueryBody_Original":"SELECT  Title, Tags, Id AS [Post Link], Score, ViewCount\nFROM Posts\nWHERE\n      PostTypeId = 1\n  AND Score = 0\n  AND Tags NOT LIKE '%javascript%'\n  AND Body LIKE '%begin snippet: js hide: false%'"},{"QuerySetId":527821,"Title":"Comment extraction - ask ubuntu","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName LIKE '%puppet%'","CreationDate":"2016-08-23 20:04:12","validated":false,"QueryBody_Original":"SELECT  * FROM Tags WHERE TagName LIKE '%puppet%';\n-- SELECT Id FROM Posts WHERE Tags LIKE '%puppet%'; \n-- SELECT Id, Text FROM Comments WHERE \n--                PostId IN ( SELECT Id FROM Posts WHERE Tags LIKE '%puppet%');\nSELECT Id, Text FROM Comments WHERE \n                PostId IN ( SELECT Id FROM Posts WHERE Tags LIKE '%puppet%')\n                AND Text LIKE '%complex%';"},{"QuerySetId":528992,"Title":"Users with most 'Famous Questions'","Description":null,"QueryBody":"SELECT RANK() OVER (ORDER BY COUNT(Users.Id) DESC) AS \"Rank\", COUNT(Users.Id) AS \"Famous Questions\", Users.id AS \"User Link\", 'http:\/\/scifi.stackexchange.com\/help\/badges\/37\/famous-question?userid=' + CAST(Users.Id AS TEXT) AS \"Questions\" FROM Users INNER JOIN Badges ON Users.Id = Badges.UserId WHERE Badges.Name = 'Famous Question' GROUP BY Users.DisplayName, Badges.Name, Users.Id ORDER BY COUNT(Badges.UserId) DESC","CreationDate":"2016-09-28 15:24:45","validated":false,"QueryBody_Original":"SELECT \n  RANK() OVER(ORDER BY COUNT(Users.Id) DESC) AS [Rank],\n  COUNT(Users.Id) AS [Famous Questions],\n  Users.id AS [User Link],\n  'http:\/\/scifi.stackexchange.com\/help\/badges\/37\/famous-question?userid=' + Cast(Users.Id AS VARCHAR) AS [Questions]\nFROM Users\n  INNER JOIN Badges\n    ON Users.Id = Badges.UserId\nWHERE Badges.Name = 'Famous Question'\nGROUP BY Users.DisplayName, Badges.Name, Users.Id\nORDER BY COUNT(Badges.UserId) DESC"},{"QuerySetId":529248,"Title":"Top 50 users from Sri Lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Sri Lanka%' OR UPPER(Location) LIKE '%SRI LANKA' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-08-26 17:11:48","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Sri Lanka%'\n    OR UPPER(Location) LIKE '%SRI LANKA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":529250,"Title":"Top 20 users from Sri Lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Sri Lanka%' OR UPPER(Location) LIKE '%SRI LANKA' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2016-08-26 17:13:13","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Sri Lanka%'\n    OR UPPER(Location) LIKE '%SRI LANKA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":529401,"Title":"Short WHYT comments, Id only","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\" FROM Comments WHERE LOWER(Text) LIKE 'what have you tried%' AND LENGTH(Text) < 75 ORDER BY LENGTH(Text), Id","CreationDate":"2017-04-19 23:54:41","validated":false,"QueryBody_Original":"SELECT  Id as [Comment Link]\nfrom Comments\nwhere lower(Text) like 'what have you tried%' and len(Text) < 75 \norder by len(Text), Id asc"},{"QuerySetId":529431,"Title":"Which country wins the Stack Overflow Olympics?","Description":null,"QueryBody":"SELECT DownVotes, Id, AccountId FROM Users ORDER BY DownVotes DESC","CreationDate":"2016-08-27 05:16:06","validated":false,"QueryBody_Original":"SELECT  DownVotes, Id, AccountId\nfrom Users\norder by DownVotes desc"},{"QuerySetId":529674,"Title":"Top 100 users from Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR UPPER(Location) LIKE '%BANGLADESH%' OR LOWER(Location) LIKE '%dhaka' OR UPPER(Location) LIKE '%DHAKA%' OR LOWER(Location) LIKE '%khulna' OR UPPER(Location) LIKE '%KHULNA%' OR LOWER(Location) LIKE '%buet' OR UPPER(Location) LIKE '%BUET%' OR LOWER(Location) LIKE '%kuet' OR UPPER(Location) LIKE '%KUET%' OR LOWER(Location) LIKE '%cuet' OR UPPER(Location) LIKE '%CUET%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2016-08-27 10:59:57","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR UPPER(Location) LIKE '%BANGLADESH%'\n    OR LOWER (Location) LIKE '%dhaka'\n    OR UPPER(Location) LIKE '%DHAKA%'\n    OR LOWER (Location) LIKE '%khulna'\n    OR UPPER(Location) LIKE '%KHULNA%'\n    OR LOWER (Location) LIKE '%buet'\n    OR UPPER(Location) LIKE '%BUET%'\n    OR LOWER (Location) LIKE '%kuet'\n    OR UPPER(Location) LIKE '%KUET%'\n    OR LOWER (Location) LIKE '%cuet'\n    OR UPPER(Location) LIKE '%CUET%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":529694,"Title":"Moderator History (SO en espa\u00f1ol)","Description":null,"QueryBody":"SELECT * FROM users WHERE aboutme LIKE '%Valued Associate%' OR aboutme LIKE '%Stack Exchange%' OR websiteurl LIKE '%\/\/stackexchange.com' OR websiteurl LIKE '%\/\/stackexchange.com\/'","CreationDate":"2016-08-27 11:06:07","validated":false,"QueryBody_Original":"SELECT  *\nfrom   users\nwhere  aboutme like '%Valued Associate%'\nor     aboutme like '%Stack Exchange%'\nor     websiteurl like '%\/\/stackexchange.com'\nor     websiteurl like '%\/\/stackexchange.com\/'"},{"QuerySetId":529765,"Title":"SOru - Number of active posts last month per mod","Description":null,"QueryBody":"SELECT COUNT(*) AS PostsLastMonth, 3 AS Moderators, (COUNT(*) \/ 3) AS PostsLastMonthPerMod FROM Posts WHERE LastActivityDate >= DATEADD(month, -1, (SELECT MAX(LastActivityDate) FROM Posts))","CreationDate":"2016-08-27 12:38:53","validated":false,"QueryBody_Original":"SELECT  \n  count(*) PostsLastMonth, \n  3 Moderators, \n  (count(*) \/ 3) PostsLastMonthPerMod\n\nfrom Posts\n\nwhere LastActivityDate >= DATEADD(month, -1, \n                                  (SELECT max(LastActivityDate) from Posts)\n                                )"},{"QuerySetId":529871,"Title":"Most controversial posts of the site","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", CASE WHEN Posts.PostTypeId = 1 THEN 'Question' ELSE 'Answer' END AS Type, CASE WHEN COALESCE(U.Up, 0) > COALESCE(D.Down, 0) THEN COALESCE(D.Down, 0) ELSE COALESCE(U.Up, 0) END AS Controversity, U.Up, D.Down, U.Up - D.Down AS Score FROM Posts LEFT JOIN (SELECT * FROM (SELECT PostId, COUNT(*) AS Up FROM Votes WHERE VoteTypeId = 2 GROUP BY PostId) AS U1) AS U ON U.PostId = Posts.Id LEFT JOIN (SELECT * FROM (SELECT PostId, COUNT(*) AS Down FROM Votes WHERE VoteTypeId = 3 GROUP BY PostId) AS D1) AS D ON D.PostId = Posts.Id ORDER BY Controversity DESC, Posts.Id LIMIT 100","CreationDate":"2016-09-07 13:49:05","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Posts.Id AS [Post Link],\n  Posts.OwnerUserId AS [User Link],\n  CASE\n  WHEN Posts.PostTypeId = 1 THEN 'Question'\n  ELSE 'Answer'\n  END Type,\n  CASE\n  WHEN COALESCE(U.Up, 0) > COALESCE(D.Down, 0)\n  THEN COALESCE(D.Down, 0)\n  ELSE COALESCE(U.Up, 0)\n  END Controversity,\n  U.Up,\n  D.Down,\n  U.Up - D.Down AS Score\n\nFROM Posts\n\nLEFT JOIN (\n\n  SELECT * FROM (\n  \n    SELECT PostId, COUNT(*) AS Up\n    FROM Votes\n    WHERE VoteTypeId = 2\n    GROUP BY PostId) U1\n    \n) U ON U.PostId = Posts.Id\n\nLEFT JOIN (\n\n  SELECT * FROM (\n  \n    SELECT PostId, COUNT(*) AS Down\n    FROM Votes\n    WHERE VoteTypeId = 3\n    GROUP BY PostId) D1\n    \n) D ON D.PostId = Posts.Id\n\nORDER BY Controversity DESC, Posts.Id"},{"QuerySetId":530330,"Title":"Question sorted after score per view","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount, FavoriteCount, CAST(FavoriteCount AS FLOAT) \/ CAST(ViewCount AS FLOAT) AS ScorePerView FROM Posts WHERE PostTypeId = 1 ORDER BY ScorePerView DESC LIMIT 100","CreationDate":"2016-08-30 04:47:21","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], ViewCount, FavoriteCount, \n  cast(FavoriteCount AS FLOAT)\/cast(ViewCount AS FLOAT) AS ScorePerView\nFROM Posts WHERE PostTypeId = 1 \nORDER BY ScorePerView DESC"},{"QuerySetId":530586,"Title":"Highest question-score to comment-score ratios","Description":null,"QueryBody":"SELECT Comments.Id AS \"Comment Link\", Posts.Score AS \"Post Score\", Comments.Score AS \"Comment Score\", Comments.Score \/ Posts.Score AS \"Score Ratio\" FROM Comments JOIN Posts ON Comments.PostId = Posts.Id WHERE Posts.Score <> 0 AND Posts.PostTypeId = 1 ORDER BY \"Score Ratio\" DESC LIMIT 100","CreationDate":"2016-08-30 01:31:30","validated":false,"QueryBody_Original":"SELECT  TOP 100 Comments.Id AS [Comment Link], Posts.Score AS [Post Score], Comments.Score AS [Comment Score], Comments.Score \/ Posts.Score AS [Score Ratio] FROM Comments\nJOIN Posts ON Comments.PostId = Posts.Id\nWHERE Posts.Score <> 0 AND Posts.PostTypeId = 1\nORDER BY [Score Ratio] DESC;"},{"QuerySetId":530587,"Title":"Lowest question-score to comment-score ratios","Description":null,"QueryBody":"SELECT Comments.Id AS \"Comment Link\", Posts.Score AS \"Post Score\", Comments.Score AS \"Comment Score\", Comments.Score \/ Posts.Score AS \"Score Ratio\" FROM Comments JOIN Posts ON Comments.PostId = Posts.Id WHERE Posts.Score <> 0 AND Posts.PostTypeId = 1 ORDER BY \"Score Ratio\" LIMIT 100","CreationDate":"2016-08-30 01:41:57","validated":false,"QueryBody_Original":"SELECT  TOP 100 Comments.Id AS [Comment Link], Posts.Score AS [Post Score], Comments.Score AS [Comment Score], Comments.Score \/ Posts.Score AS [Score Ratio] FROM Comments\nJOIN Posts ON Comments.PostId = Posts.Id\nWHERE Posts.Score <> 0 AND Posts.PostTypeId = 1\nORDER BY [Score Ratio];"},{"QuerySetId":530619,"Title":"Java data from Stack overflow","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags WHERE TagName = 'java'","CreationDate":"2016-08-30 02:57:26","validated":false,"QueryBody_Original":"SELECT  TagName, Count from Tags where TagName = 'java';"},{"QuerySetId":530793,"Title":"Tag Edits per Membership Month","Description":null,"QueryBody":"SELECT DATEDIFF(CURRENT_TIMESTAMP(), u.creationdate) AS months, id AS \"User Link\", \"tag edits\", ROUND(CAST(\"tag edits\" AS FLOAT) \/ DATEDIFF(CURRENT_TIMESTAMP(), u.creationdate), 2) AS \"edits per month\" FROM users AS u INNER JOIN (SELECT UserId, COUNT(Id) AS \"tag edits\" FROM PostHistory WHERE PostHistoryTypeId = 6 \/* Edit tags *\/ GROUP BY UserId) AS t ON u.id = t.userid AND DATEDIFF(CURRENT_TIMESTAMP(), u.creationdate) > 0 ORDER BY \"edits per month\" DESC","CreationDate":"2016-08-30 18:36:36","validated":false,"QueryBody_Original":"SELECT  datediff (m, u.creationdate, getdate()) as months, \nid as [User Link], [tag edits], \nround(convert(float,[tag edits])\/datediff (m, u.creationdate, getdate()),2) as [edits per month]\nfrom users u inner join\n(SELECT \n  UserId,\n  COUNT(Id) as [tag edits]\nFROM PostHistory\nWHERE PostHistoryTypeId=6 --Edit tags\nGROUP BY UserId) t\non u.id = t.userid and datediff (m, u.creationdate, getdate()) > 0\nORDER BY\n[edits per month] desc"},{"QuerySetId":530848,"Title":"Top SO users from Istanbul, Turkey","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE Reputation >= 1000 AND (LOWER(Location) LIKE '%istanbul%' OR UPPER(Location) LIKE '%ISTANBUL%' OR Location LIKE '%Istanbul%' OR LOWER(Location) LIKE '%rkiye%' OR LOWER(Location) LIKE '%turkey%' OR LOWER(Location) LIKE '%ankara%') ORDER BY Reputation DESC","CreationDate":"2016-09-01 23:49:12","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    Reputation >= 1000\n    AND\n    (LOWER(Location) LIKE '%istanbul%'\n    OR UPPER(Location) LIKE '%ISTANBUL%'\n    OR Location like '%Istanbul%'\n    OR LOWER(Location) LIKE '%rkiye%'\n    OR LOWER(Location) LIKE '%turkey%'\n    OR LOWER(Location) LIKE '%ankara%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":530912,"Title":"Average wait time for question being answered based on hour of asking","Description":null,"QueryBody":"SELECT TIME_TO_STR(QuestionWithT.CDate, '%-HOUR') AS AskingHour, AVG(QuestionWithT.T) AS AvgWaitTimeForFirstResponse FROM (SELECT Question.Id AS Id, MIN(Question.CreationDate) AS CDate \/* Why do i need a reduction here? There is only 1 CreationDate for 1 Question *\/, MIN(DATEDIFF(Answer.CreationDate, Question.CreationDate)) \/ (24.0 * 60) AS T FROM Posts AS Question, Posts AS Answer WHERE Answer.ParentId = Question.Id AND Question.PostTypeId = 1 AND Answer.PostTypeId = 2 GROUP BY Question.Id) AS QuestionWithT GROUP BY TIME_TO_STR(QuestionWithT.CDate, '%-HOUR')","CreationDate":"2016-08-31 11:42:21","validated":false,"QueryBody_Original":"SELECT  \n  DATEPART(HOUR, QuestionWithT.CDate) AS AskingHour,\n  AVG(QuestionWithT.T) AS AvgWaitTimeForFirstResponse\nFROM (\n  SELECT Question.Id as Id,\n    MIN(Question.CreationDate) as CDate, -- Why do i need a reduction here? There is only 1 CreationDate for 1 Question\n    MIN(DATEDIFF(MINUTE, Question.CreationDate, Answer.CreationDate)) \/ (24.0 * 60) AS T\n  FROM Posts as Question, Posts as Answer\n  WHERE Answer.ParentId = Question.Id AND Question.PostTypeId = 1 AND Answer.PostTypeId = 2\n  GROUP BY Question.Id\n) as QuestionWithT\nGROUP BY DATEPART(HOUR, QuestionWithT.CDate)"},{"QuerySetId":531536,"Title":"Average wait time for first response based on hour of asking","Description":null,"QueryBody":"SELECT TIME_TO_STR(QuestionWithT.CDate, '%-HOUR') AS AskingHour, AVG(QuestionWithT.T) AS AvgWaitTimeForFirstResponse FROM (SELECT Question.Id AS Id, MIN(Question.CreationDate) AS CDate \/* Why do i need a reduction here? There is only 1 CreationDate for 1 Question *\/, MIN(DATEDIFF(Answer.CreationDate, Question.CreationDate)) \/ (24.0 * 60) AS T FROM Posts AS Question, Posts AS Answer WHERE Answer.ParentId = Question.Id AND Question.PostTypeId = 1 AND Answer.PostTypeId = 2 GROUP BY Question.Id) AS QuestionWithT GROUP BY TIME_TO_STR(QuestionWithT.CDate, '%-HOUR')","CreationDate":"2016-08-31 11:46:10","validated":false,"QueryBody_Original":"SELECT  \n  DATEPART(HOUR, QuestionWithT.CDate) AS AskingHour,\n  AVG(QuestionWithT.T) AS AvgWaitTimeForFirstResponse\nFROM (\n  SELECT Question.Id as Id,\n    MIN(Question.CreationDate) as CDate, -- Why do i need a reduction here? There is only 1 CreationDate for 1 Question\n    MIN(DATEDIFF(MINUTE, Question.CreationDate, Answer.CreationDate)) \/ (24.0 * 60) AS T\n  FROM Posts as Question, Posts as Answer\n  WHERE Answer.ParentId = Question.Id AND Question.PostTypeId = 1 AND Answer.PostTypeId = 2\n  GROUP BY Question.Id\n) as QuestionWithT\nGROUP BY DATEPART(HOUR, QuestionWithT.CDate)"},{"QuerySetId":531598,"Title":"Comment Search (ordered by newest first)","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", UserId AS \"User Link\", Score, CreationDate FROM Comments WHERE Text LIKE '%##searchString##%' ORDER BY CreationDate DESC","CreationDate":"2016-08-31 13:45:13","validated":false,"QueryBody_Original":"SELECT  Id as [Comment Link], UserId as [User Link], Score, CreationDate\nFrom Comments\nWhere Text Like '%##searchString##%'\nOrder by CreationDate Desc"},{"QuerySetId":531788,"Title":"Retrieve current time \/ date","Description":null,"QueryBody":"SELECT CURRENT_TIMESTAMP()","CreationDate":"2016-08-31 16:14:21","validated":false,"QueryBody_Original":"SELECT  getdate();"},{"QuerySetId":532226,"Title":"Who Asked the Most questions","Description":null,"QueryBody":"SELECT Users.DisplayName, Users.Reputation, COUNT(*) FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE PostTypeId = 2 GROUP BY Users.DisplayName, Users.Reputation, OwnerUserId ORDER BY COUNT(*) DESC, Users.DisplayName, Users.Reputation LIMIT 1000","CreationDate":"2020-07-01 17:59:20","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Users.DisplayName, Users.Reputation, count(*) \nfrom Posts inner join Users on Posts.OwnerUserId = Users.Id\nwhere PostTypeId = 2 \ngroup by Users.DisplayName, Users.Reputation, OwnerUserId \norder by count(*) desc, Users.DisplayName, Users.Reputation;"},{"QuerySetId":532249,"Title":"Upvotes and downvotes over time","Description":null,"QueryBody":"SELECT CONCAT(YEAR(CreationDate), '-', MONTH(CreationDate)) AS \"Month\", COUNT(PostId) AS \"Posts\", SUM(CASE VoteTypeId WHEN 2 THEN 1 ELSE 0 END) AS \"Upvotes\", SUM(CASE VoteTypeId WHEN 3 THEN 1 ELSE 0 END) AS \"Downvotes\" FROM Votes GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2016-08-31 23:38:25","validated":false,"QueryBody_Original":"SELECT \nCONCAT(Year(CreationDate), '-', Month(CreationDate)) As 'Month',\nCount(PostId) As 'Posts',\nSum(Case VoteTypeId When 2 Then 1 Else 0 End) As 'Upvotes',\nSum(Case VoteTypeId When 3 Then 1 Else 0 End) As 'Downvotes'\nFrom Votes\nGROUP BY Year(CreationDate), Month(CreationDate)\nORDER BY Year(CreationDate), Month(CreationDate)"},{"QuerySetId":532684,"Title":"select count(*)  from Users","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2016-09-01 19:15:49","validated":false,"QueryBody_Original":"SELECT  count(*)  from Users"},{"QuerySetId":532690,"Title":"Top 10 Users from ","Description":null,"QueryBody":"SELECT id, DisplayName, Reputation FROM users ORDER BY reputation DESC LIMIT 10","CreationDate":"2016-09-01 19:26:12","validated":false,"QueryBody_Original":"SELECT  TOP 10 id, DisplayName, Reputation\nFROM users\nORDER BY reputation DESC;"},{"QuerySetId":533000,"Title":"Row_Number | Find the first occurrence in a series","Description":null,"QueryBody":"SELECT U.DISPLAYNAME, COALESCE(P.TITLE, 'Unknown') AS \"TITLE\", CASE WHEN (ROW_NUMBER() OVER (PARTITION BY U.ID ORDER BY P.CREATIONDATE DESC)) = 1 THEN 'Y' ELSE 'N' END AS \"FIRST POST?\", p.creationdate FROM POSTS AS P INNER JOIN USERS AS U ON P.OWNERUSERID = U.ID AND P.OWNERUSERID IN (610455, 174910)","CreationDate":"2016-09-02 04:35:17","validated":false,"QueryBody_Original":"SELECT \n  U.DISPLAYNAME\n ,COALESCE(P.TITLE, 'Unknown') AS 'TITLE'\n ,CASE WHEN(ROW_NUMBER() OVER(PARTITION BY U.ID ORDER BY P.CREATIONDATE desc)) = 1\n       THEN 'Y'\n       ELSE 'N'\n  END AS 'FIRST POST?'\n  ,p.creationdate\nFROM POSTS AS P\n  INNER JOIN USERS AS U\n    ON P.OWNERUSERID = U.ID\n    AND P.OWNERUSERID IN (610455, 174910);"},{"QuerySetId":533369,"Title":"select id from posts where ViewCount>100000","Description":null,"QueryBody":"SELECT id, title FROM posts WHERE ViewCount > 100000","CreationDate":"2016-09-02 21:38:00","validated":false,"QueryBody_Original":"SELECT  id,title from posts where ViewCount>100000"},{"QuerySetId":534107,"Title":"Searching for community wiki answers with multiple editors","Description":"http:\/\/meta.stackexchange.com\/questions\/257018\/searching-for-community-wiki-answers-with-multiple-editors","QueryBody":"SELECT p.id AS \"Post Link\", ph.userid AS \"User Link\", u.reputation, ph.creationdate FROM posts AS p INNER JOIN posthistory AS ph ON ph.postid = p.id INNER JOIN users AS u ON ph.userid = u.id WHERE NOT communityowneddate IS NULL AND ph.posthistorytypeid IN (4, 5, 6) AND u.reputation < 2000 AND ph.userid > -1 \/* no community please *\/ AND ph.id = (SELECT MAX(phm.id) FROM posthistory AS phm WHERE phm.posthistorytypeid IN (4, 5, 6) AND phm.postid = ph.postid) AND EXISTS(SELECT 1 FROM posthistory AS phm WHERE phm.posthistorytypeid IN (4, 5, 6) AND phm.postid = ph.postid GROUP BY phm.userid HAVING COUNT(*) > 1) ORDER BY ph.creationdate DESC","CreationDate":"2016-09-04 16:51:45","validated":false,"QueryBody_Original":"SELECT  p.id  as [Post Link]\n     , ph.userid as [User Link]\n     , u.reputation\n     , ph.creationdate\nfrom posts p\ninner join posthistory ph on ph.postid = p.id\ninner join users u on ph.userid = u.id\nwhere communityowneddate is not null\nand ph.posthistorytypeid in (4,5,6)\nand u.reputation < 2000\nand ph.userid > -1 -- no community please\nand ph.id = (SELECT max(phm.id) \n             from posthistory phm\n             where phm.posthistorytypeid in (4,5,6)\n             and phm.postid = ph.postid)\nand exists (SELECT 1 \n            from posthistory phm\n            where phm.posthistorytypeid in (4,5,6)\n            and phm.postid = ph.postid\n            group by phm.userid\n            having count(*)>1)\norder by ph.creationdate desc"},{"QuerySetId":534174,"Title":"Top 100 users by location","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%##location##%' AND Reputation >= 100 ORDER BY Reputation DESC LIMIT 100","CreationDate":"2017-09-28 13:10:13","validated":false,"QueryBody_Original":"SELECT  TOP 100 * FROM Users WHERE Location LIKE '%##location##%' AND Reputation>=100 ORDER BY Reputation DESC;"},{"QuerySetId":535058,"Title":"Top 10 Tags on SO by count","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags ORDER BY Count DESC LIMIT 10","CreationDate":"2016-09-06 20:02:13","validated":false,"QueryBody_Original":"SELECT  TOP 10 TagName, Count\nFROM Tags\nORDER BY Count DESC;"},{"QuerySetId":535244,"Title":"Significantly Downvoted Posts of New Users","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Score AS PostScore, Posts.CreationDate, Users.Id, Users.Reputation AS UserRep FROM Posts LEFT JOIN Users ON Users.Id = Posts.OwnerUserId LEFT JOIN Comments ON Comments.PostId = Posts.Id WHERE PostTypeId = 1 AND Posts.Score < -3 AND Users.Reputation < 10 GROUP BY Posts.Id, Posts.Score, Posts.CreationDate, Users.Id, Users.Reputation HAVING COUNT(Comments.Id) = 0 ORDER BY Posts.CreationDate DESC","CreationDate":"2016-09-07 01:10:25","validated":false,"QueryBody_Original":"SELECT   Posts.Id AS [Post Link]\n    ,   Posts.Score AS PostScore\n    ,   Posts.CreationDate\n    ,   Users.Id\n    ,   Users.Reputation AS UserRep\nFROM    Posts\nLEFT JOIN Users\n    ON  Users.Id = Posts.OwnerUserId\nLEFT JOIN Comments\n    ON  Comments.PostId = Posts.Id\nWHERE   PostTypeId = 1\n    AND Posts.Score < -3\n    AND Users.Reputation < 10\nGROUP BY Posts.Id\n    ,   Posts.Score\n    ,   Posts.CreationDate\n    ,   Users.Id\n    ,   Users.Reputation\n    HAVING  COUNT(Comments.Id) = 0\nORDER BY Posts.CreationDate DESC"},{"QuerySetId":535637,"Title":"Top 200 mathSE users by number of badges","Description":null,"QueryBody":"SELECT * FROM (SELECT Users.Id AS \"User Link\", COUNT(*) AS \"NumBadges\" FROM Users INNER JOIN Badges ON Users.Id = Badges.UserId GROUP BY Users.Id) AS UsersWithBadgeCount ORDER BY NumBadges DESC LIMIT 200","CreationDate":"2019-05-20 22:33:28","validated":false,"QueryBody_Original":"SELECT  TOP 200\n  *\nFROM (\n  SELECT\n    Users.Id as [User Link],\n    COUNT(*) as [NumBadges]\n  FROM\n    Users INNER JOIN Badges\n    ON Users.Id = Badges.UserId\n  GROUP BY\n    Users.Id\n) as UsersWithBadgeCount\nORDER BY\n  NumBadges DESC"},{"QuerySetId":535639,"Title":"Graphable (log) version of count of users by total reputation segment (more granular than Leagues)","Description":"Shows count of users as per the Leagues segments, but adding segments for the 95% of users who are below 200. Namely 100, 50 (can comment) and 15 (can up-vote)","QueryBody":"SELECT COUNT(*) AS c FROM users WHERE reputation >= 100000","CreationDate":"2016-09-07 21:47:55","validated":false,"QueryBody_Original":"SELECT  count(*) c from users where reputation >= 100000"},{"QuerySetId":535649,"Title":"Top 20 StackOverflow Users from Silicon Valley","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%silicon valley%' OR UPPER(Location) LIKE '%SILICON VALLEY%' OR Location LIKE '%Silicon Valley%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2016-09-08 02:08:32","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%silicon valley%'\n    OR UPPER(Location) LIKE '%SILICON VALLEY%'\n    OR Location like '%Silicon Valley%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":535856,"Title":"users about to cross 9001 rep","Description":null,"QueryBody":"SELECT DisplayName, Location, Reputation FROM Users WHERE REPUTATION < 9001 ORDER BY Reputation DESC LIMIT 10","CreationDate":"2016-09-08 07:32:32","validated":false,"QueryBody_Original":"SELECT  TOP 10 DisplayName, Location, Reputation\nFROM Users\nWHERE REPUTATION < 9001\nORDER BY Reputation desc;"},{"QuerySetId":536033,"Title":"Top 100 users with most gold badges for a Country","Description":null,"QueryBody":"SELECT u.location, u.id, u.displayname, bd.NumTagBadges FROM (SELECT UserId, COUNT(*) AS NumTagBadges FROM Badges WHERE Name IN (SELECT TagName FROM Tags WHERE COALESCE(TagName, '') <> '') GROUP BY UserId LIMIT 100) AS bd JOIN users AS u ON u.id = bd.UserId WHERE u.location LIKE ('%##CountryName##%')","CreationDate":"2019-12-23 18:32:15","validated":false,"QueryBody_Original":"SELECT  u.location, u.id, u.displayname, bd.NumTagBadges\nfrom\n(SELECT Top 100 UserId,\n    Count(*) As NumTagBadges\nFrom Badges\nWhere Name In (SELECT TagName from Tags Where IsNull(TagName,'')<>'')      \nGroup By UserId) as bd\njoin users u on u.id = bd.UserId\nwhere u.location LIKE ('%##CountryName##%')\n--Order By NumTagBadges Desc"},{"QuerySetId":536200,"Title":"Average Age of Users with Pic and Python","Description":null,"QueryBody":"SELECT AVG(Age) FROM users WHERE (AboutMe LIKE '%python%' OR AboutMe LIKE '%Python%') AND NOT ProfileImageURL IS NULL","CreationDate":"2016-09-08 20:50:44","validated":false,"QueryBody_Original":"SELECT  AVG(Age)\nFROM users\nWHERE \n  (AboutMe LIKE '%python%'OR AboutMe LIKE '%Python%')\n  AND ProfileImageURL IS NOT NULL;"},{"QuerySetId":536204,"Title":"Most Common Names with Jon","Description":null,"QueryBody":"SELECT DisplayName, COUNT(*) AS total FROM users WHERE DisplayName LIKE 'Jon %' GROUP BY DisplayName ORDER BY DisplayName DESC LIMIT 10","CreationDate":"2016-09-08 20:52:52","validated":false,"QueryBody_Original":"SELECT  TOP 10 DisplayName, COUNT(*) AS total\nFROM users\nWHERE DisplayName Like 'Jon %'\nGROUP BY DisplayName\nORDER BY DisplayName DESC;"},{"QuerySetId":536228,"Title":"Another Join Example Outer Join","Description":null,"QueryBody":"SELECT v.Id AS \"VoteID\", u.Id AS \"UserId\", p.Id AS \"PostId\" FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id JOIN Users AS u ON v.UserId = u.Id ORDER BY u.Id DESC LIMIT 10","CreationDate":"2016-09-08 19:36:35","validated":false,"QueryBody_Original":"SELECT  TOP 10 \n  v.Id AS 'VoteID',\n  u.Id AS 'UserId',\n  p.Id AS 'PostId'\nFROM Votes AS v\nJOIN Posts AS p\n  ON v.PostId = p.Id\nJOIN Users AS u\n  ON v.UserId = u.Id\nORDER BY u.Id DESC;"},{"QuerySetId":536242,"Title":"Top 10 tags on SO by Count","Description":null,"QueryBody":"SELECT * FROM Tags ORDER BY Count DESC LIMIT 10","CreationDate":"2016-09-08 19:56:51","validated":false,"QueryBody_Original":"SELECT  TOP 10 *\nFROM Tags \nORDER BY Count DESC;"},{"QuerySetId":536251,"Title":"FAIL! 10 most common names on Stack Overflow are where the first name is \u201cJon\u201d","Description":null,"QueryBody":"SELECT DisplayName, COUNT(*) FROM Users WHERE DisplayName LIKE 'Jon %' GROUP BY DisplayName ORDER BY COUNT(*) DESC LIMIT 10","CreationDate":"2016-09-08 20:53:57","validated":false,"QueryBody_Original":"SELECT  TOP 10 DisplayName, COUNT(*)\nFROM Users\n  WHERE DisplayName LIKE 'Jon %'\n  GROUP BY DisplayName\n  ORDER BY COUNT(*) DESC;"},{"QuerySetId":536591,"Title":"Top 50 users from Mars","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%noida' OR UPPER(Location) LIKE '%NOIDA' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2016-10-14 15:35:45","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%noida'\n    OR UPPER(Location) LIKE '%NOIDA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":536780,"Title":"Long question with short answer","Description":null,"QueryBody":"SELECT Q.Id, Q.Title, (1.0 * LENGTH(A.Body)) \/ (1.0 * LENGTH(Q.Body)) AS r, A.Score FROM posts AS Q INNER JOIN posts AS A ON Q.AcceptedAnswerId = A.Id WHERE Q.PostTypeId = 1 AND A.PostTypeId = 2 AND LENGTH(Q.Body) > 20000 ORDER BY r","CreationDate":"2016-09-09 18:36:59","validated":false,"QueryBody_Original":"SELECT  \n  Q.Id, Q.Title, (1.0*len( A.Body)) \/ (1.0*len( Q.Body)) as r, A.Score\nfrom posts as Q\n inner join posts as A on Q.AcceptedAnswerId = A.Id\n where \n Q.PostTypeId = 1       AND\n A.PostTypeId = 2       AND\n len( Q.Body) > 20000\n-- A.ownerUserId = 842935\n-- A.OwnerDisplayName='danihp'\norder by r"},{"QuerySetId":536904,"Title":"select Id,DisplayName,Reputation,Views,UpVotes,DownVotes from Users where DisplayName like %Jon%;","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, Views, UpVotes, DownVotes FROM Users ORDER BY Reputation DESC","CreationDate":"2016-09-09 22:02:06","validated":false,"QueryBody_Original":"SELECT  Id,DisplayName,Reputation,Views,UpVotes,DownVotes from Users order by Reputation DESC"},{"QuerySetId":538657,"Title":"Other Sources - Server fault - DevOps in SO","Description":null,"QueryBody":"SELECT Id FROM Tags WHERE TagName LIKE '%docker%'","CreationDate":"2016-09-13 07:17:45","validated":false,"QueryBody_Original":"SELECT  Id FROM Tags WHERE TagName LIKE '%docker%' ; \n-- SELECT PostId FROM PostTags WHERE TagId IN (SELECT Id FROM Tags WHERE TagName LIKE '%docker%');\n\nSELECT * FROM Posts WHERE Id IN (SELECT PostId FROM PostTags WHERE TagId IN (SELECT Id FROM Tags WHERE TagName LIKE '%opsworks%'))\nORDER BY CreationDate DESC;"},{"QuerySetId":538776,"Title":"search the number of aurelia questions","Description":null,"QueryBody":"SELECT COUNT(id) FROM posts WHERE Tags LIKE '%angular%'","CreationDate":"2016-09-13 17:56:29","validated":false,"QueryBody_Original":"SELECT  count(id) from posts where Tags like '%angular%'\n\n;"},{"QuerySetId":538973,"Title":"Eligible to vote on controversial Docs edit","Description":null,"QueryBody":"SELECT b.name, SUM(CASE WHEN b.class = 1 THEN 1 ELSE 0 END) AS Gold, SUM(CASE WHEN b.class = 2 AND u.reputation > 5000 THEN 1 ELSE 0 END) AS \"Silver + 5k\", SUM(CASE WHEN b.class = 3 AND u.reputation > 10000 THEN 1 ELSE 0 END) AS \"Bronze + 10k\", 1 AS \"Jon Skeet\" FROM (SELECT UserId, Name, MIN(class) AS class FROM Badges WHERE tagbased = 'true' GROUP BY UserId, Name) AS b LEFT JOIN Users AS u ON u.Id = b.UserId GROUP BY b.name ORDER BY Gold, \"Silver + 5k\", \"Bronze + 10k\"","CreationDate":"2016-09-14 00:36:36","validated":false,"QueryBody_Original":"SELECT  b.name,\n    sum(case when b.class=1 then 1 else 0 end) as Gold,\n    sum(case when b.class=2 and u.reputation>5000 then 1 else 0 end) as \"Silver + 5k\",\n    sum(case when b.class=3 and u.reputation>10000 then 1 else 0 end) as \"Bronze + 10k\",\n    1 as \"Jon Skeet\"\nfrom (SELECT UserId, Name, min(class) class from Badges where tagbased='true' group by UserId, Name) b\nleft join  Users u on u.Id=b.UserId\ngroup by b.name\norder by Gold,\"Silver + 5k\",\"Bronze + 10k\""},{"QuerySetId":539324,"Title":"Top 10 tags and associated tags","Description":null,"QueryBody":"SELECT TagName FROM Tags GROUP BY TagName LIMIT 10","CreationDate":"2016-09-14 18:42:31","validated":false,"QueryBody_Original":"SELECT  TOP 10 TagName\nFROM Tags\nGROUP BY TagName"},{"QuerySetId":539547,"Title":"# of posts on Stack Overflow","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts","CreationDate":"2016-09-15 01:18:49","validated":false,"QueryBody_Original":"SELECT  count(*) FROM posts;"},{"QuerySetId":539575,"Title":"Duplicate questions asked by someone who answered the original","Description":null,"QueryBody":"SELECT orgs.Id AS \"Post Link\", orgs.Id, orgs.Title AS \"Titulo Original\", dupes.Id AS \"Post Link\", dupes.Id, dupes.Title AS \"Titulo Duplicado\" FROM Posts AS orgs JOIN PostLinks AS links ON (orgs.Id = links.RelatedPostId AND LinkTypeId = 3) JOIN Posts AS dupes ON (dupes.Id = links.PostId AND dupes.PostTypeId = 1) WHERE orgs.CreationDate > '2016-09-01 00:00:00'","CreationDate":"2016-09-15 02:13:07","validated":false,"QueryBody_Original":"SELECT \n  orgs.Id as [Post Link],\n  orgs.Id,\n  orgs.Title as [Titulo Original],\n  dupes.Id as [Post Link],\n  dupes.Id,\n  dupes.Title as [Titulo Duplicado]\nFROM Posts orgs\nJOIN PostLinks links ON (orgs.Id = links.RelatedPostId AND LinkTypeId = 3)\nJOIN Posts dupes ON (dupes.Id = links.PostId and dupes.PostTypeId = 1)\n\nWHERE orgs.CreationDate > '2016-09-01 00:00:00'"},{"QuerySetId":540031,"Title":"Top 10 Questions by view","Description":null,"QueryBody":"SELECT Id, Body, Title, OwnerDisplayName, ViewCount FROM Posts ORDER BY ViewCount DESC LIMIT 10","CreationDate":"2016-09-15 20:03:01","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id, Body, Title, OwnerDisplayName, ViewCount\nFROM Posts\nOrder by ViewCount DESC;"},{"QuerySetId":540207,"Title":"Questions where I have a better answer thank Jon Skeet","Description":"And yes, that does happen!","QueryBody":"SELECT q.id AS \"Post Link\", aJS.score AS \"JS score\", aJS.id AS \"Post Link\", aEL.score AS \"EL score\", aEL.id AS \"Post Link\" FROM posts AS q JOIN posts AS aJS ON aJS.parentId = q.id AND aJS.ownerUserId = 22656 AND aJS.postTypeId = 2 JOIN posts AS aEL ON aEL.parentId = q.id AND aEL.ownerUserId = 88656 AND aEL.postTypeId = 2 WHERE q.postTypeId = 1 AND aJS.score < aEL.score","CreationDate":"2016-11-20 00:02:00","validated":false,"QueryBody_Original":"SELECT \n    q.id as [Post Link],\n    aJS.score \"JS score\",\n    aJS.id as [Post Link],\n    aEL.score \"EL score\",\n    aEL.id as [Post Link]\nFROM\n    posts q\n    join posts aJS on aJS.parentId=q.id and aJS.ownerUserId=22656 and aJS.postTypeId=2\n    join posts aEL on aEL.parentId=q.id and aEL.ownerUserId=88656 and aEL.postTypeId=2\nWHERE\n    q.postTypeId=1\n    AND aJS.score < aEL.score"},{"QuerySetId":540315,"Title":"Users who have answered the most distinct questions","Description":null,"QueryBody":"SELECT A.OwnerUserId AS \"User Link\", COUNT(DISTINCT A.ParentId) AS \"Distinct Questions Answered\" FROM Posts AS A WHERE A.PostTypeId = 2 AND A.OwnerUserId > 0 GROUP BY A.OwnerUserId ORDER BY \"Distinct Questions Answered\" DESC","CreationDate":"2016-09-16 18:03:22","validated":false,"QueryBody_Original":"SELECT \n  A.OwnerUserId AS [User Link],\n  COUNT(DISTINCT A.ParentId) AS [Distinct Questions Answered]\nFROM Posts A\nWHERE\n  A.PostTypeId = 2\n  AND A.OwnerUserId > 0\nGROUP BY A.OwnerUserId\nORDER BY [Distinct Questions Answered] DESC"},{"QuerySetId":540349,"Title":"Number of answered questions per day per user","Description":null,"QueryBody":"SELECT DISTINCT u.Id, u.Reputation, u.DisplayName FROM posts AS p, users AS u WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 1 GROUP BY CAST(p.CreationDate AS DATE), u.Id, u.DisplayName, u.Location, u.Reputation ORDER BY u.Id","CreationDate":"2016-12-26 20:24:38","validated":false,"QueryBody_Original":"SELECT  distinct  u.Id,u.Reputation,u.DisplayName\nfrom posts p, users u\n  where p.OwnerUserId = u.Id \n  And p.PostTypeId=1\n--  and p.ClosedDate is null -- Not closed\n  group by CAST(p.CreationDate as Date), u.Id,u.DisplayName, \n  u.Location,u.Reputation\n--  HAVING count(p.Id)>20\norder by u.Id ASC"},{"QuerySetId":540853,"Title":"Top users in Tel Aviv","Description":null,"QueryBody":"SELECT Id, AccountId, DisplayName, Reputation, AboutMe, WebsiteUrl FROM Users WHERE LOWER(AboutMe) LIKE 'ruby' ORDER BY Reputation DESC","CreationDate":"2018-08-29 16:07:06","validated":false,"QueryBody_Original":"SELECT  Id, AccountId, DisplayName, Reputation, AboutMe, WebsiteUrl\nfrom Users\nWhere Lower(AboutMe) Like 'ruby'\nOrder by Reputation desc"},{"QuerySetId":540872,"Title":"Test Query for Hardware Recommendations Early Close Policy","Description":null,"QueryBody":"SELECT CreationDate, LastEditDate FROM Posts WHERE NOT ClosedDate IS NULL AND AcceptedAnswerId IS NULL","CreationDate":"2016-09-18 06:33:11","validated":false,"QueryBody_Original":"SELECT  CreationDate, LastEditDate \nFROM Posts \nWHERE ClosedDate IS NOT NULL\nAND AcceptedAnswerId IS NULL"},{"QuerySetId":540976,"Title":"Find new user welcome comments","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", PostId AS \"Post Link\" FROM Comments WHERE TEXT LIKE '%##terms##%'","CreationDate":"2016-09-18 13:16:51","validated":false,"QueryBody_Original":"SELECT  Id as [Comment Link], PostId as [Post Link]\nFROM Comments\nWHERE TEXT LIKE '%##terms##%'"},{"QuerySetId":541050,"Title":"Closed question with an accepted self-answer is not deleted automatically","Description":"http:\/\/meta.stackoverflow.com\/questions\/334763\/closed-question-with-an-accepted-self-answer-is-not-deleted-automatically","QueryBody":"SELECT q.id AS \"Post Link\", q.score, a.score FROM posts AS q INNER JOIN posts AS a ON a.id = q.acceptedanswerid \/* accepted *\/\/* not closed as a duplicate *\/ \/* no answers with a score > 0 *\/ \/* score 0 or less *\/  WHERE q.owneruserid = a.owneruserid \/* self answered *\/ AND NOT q.closeddate IS NULL \/* closed *\/ AND q.score < 1 AND a.score < 1 AND NOT EXISTS(SELECT 1 FROM posts AS pc WHERE pc.parentid = q.id AND score > 0) AND NOT EXISTS(SELECT 1 FROM posthistory AS ph WHERE ph.postid = q.id AND ph.posthistorytypeid = 10 AND comment IN ('101', '1'))","CreationDate":"2019-07-07 13:46:25","validated":false,"QueryBody_Original":"SELECT  q.id [Post Link]\n     , q.score\n     , a.score\nfrom posts q \ninner join posts a on a.id = q.acceptedanswerid -- accepted\nwhere q.owneruserid = a.owneruserid -- self answered\nand q.closeddate is not null -- closed\n--score 0 or less\nand q.score < 1  \nand a.score < 1\n-- no answers with a score > 0\nand not exists (SELECT 1 from posts pc where pc.parentid = q.id and score > 0) \n-- not closed as a duplicate\nand not exists (SELECT 1 \n                from posthistory ph \n                where ph.postid = q.id \n                and ph.posthistorytypeid = 10\n                and comment in ('101','1'))"},{"QuerySetId":541260,"Title":"Meta answers with the highest score","Description":null,"QueryBody":"SELECT r.Score AS rRep, q.Score AS qRep \/* ,q.id AS qId\n,r.id AS rId *\/, 'http:\/\/meta.scifi.stackexchange.com\/a\/' + CAST(r.id AS TEXT) + '\/4918|' + q.Title AS link, q.Tags AS tags, r.LastEditDate AS rDate FROM posts AS r, posts AS q WHERE q.Id = r.ParentId AND r.PostTypeId = 2 AND r.Score >= 30 ORDER BY rRep DESC","CreationDate":"2016-09-19 00:36:37","validated":false,"QueryBody_Original":"SELECT  \nr.Score AS rRep\n,q.Score AS qRep\n\/*,q.id AS qId\n,r.id AS rId*\/\n,'http:\/\/meta.scifi.stackexchange.com\/a\/' + CAST(r.id AS NVARCHAR) + '\/4918|' + q.Title AS link\n,q.Tags AS tags\n,r.LastEditDate AS rDate\nFROM posts AS r, posts AS q\nWHERE q.Id = r.ParentId AND r.PostTypeId = 2 \nAND r.Score >= 30 \nORDER BY rRep DESC;"},{"QuerySetId":541265,"Title":"High score answers on low score questions","Description":null,"QueryBody":"SELECT r.Score AS rRep, q.Score AS qRep \/* ,q.id AS qId\n,r.id AS rId *\/, 'http:\/\/scifi.stackexchange.com\/a\/' + CAST(r.id AS TEXT) + '\/4918|' + q.Title AS link, q.Tags AS tags, COALESCE(r.LastEditDate, r.CreationDate) AS rDate FROM posts AS r, posts AS q WHERE q.Id = r.ParentId AND r.PostTypeId = 2 AND r.Score >= 38 AND r.Score >= q.Score + 30 AND r.Score >= 6 * q.Score - 6 ORDER BY qRep","CreationDate":"2016-09-19 02:06:55","validated":false,"QueryBody_Original":"SELECT  \nr.Score AS rRep\n,q.Score AS qRep\n\/*,q.id AS qId\n,r.id AS rId*\/\n,'http:\/\/scifi.stackexchange.com\/a\/' + CAST(r.id AS NVARCHAR) + '\/4918|' + q.Title AS link\n,q.Tags AS tags\n,COALESCE(r.LastEditDate, r.CreationDate) AS rDate\nFROM posts AS r, posts AS q\nWHERE q.Id = r.ParentId AND r.PostTypeId = 2 \nAND r.Score >= 38 AND r.Score >= q.Score + 30 AND r.Score >= 6 * q.Score - 6\nORDER BY qRep ASC;"},{"QuerySetId":541310,"Title":"All questions tagged Firebase Authentication","Description":null,"QueryBody":"SELECT ID, Title, CreationDate, LastActivityDate, Score, ViewCount, Body, AnswerCount, Tags FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%<firebase-authentication>%'","CreationDate":"2016-09-19 02:40:52","validated":false,"QueryBody_Original":"SELECT  ID, Title, CreationDate, LastActivityDate, Score, ViewCount, Body, AnswerCount, Tags\nFROM Posts \nWHERE PostTypeId = 1 AND Tags LIKE '%<firebase-authentication>%'"},{"QuerySetId":541315,"Title":"All questions tagged with Firebase","Description":null,"QueryBody":"SELECT ID, Title, CreationDate, LastActivityDate, Score, ViewCount, Body, AnswerCount, Tags FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%firebase%'","CreationDate":"2016-09-19 02:49:43","validated":false,"QueryBody_Original":"SELECT  ID, Title, CreationDate, LastActivityDate, Score, ViewCount, Body, AnswerCount, Tags\nFROM Posts \nWHERE PostTypeId = 1 AND Tags LIKE '%firebase%'"},{"QuerySetId":541492,"Title":"Get user profile with user id","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM users WHERE id = 548225 ORDER BY Reputation DESC","CreationDate":"2017-06-09 14:59:35","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    users\nWHERE\n    id = 548225\nORDER BY\n    Reputation DESC;"},{"QuerySetId":541545,"Title":"Ljudi iz bosne na SO","Description":null,"QueryBody":"SELECT u.DisplayName, u.Location FROM Users AS u WHERE u.Location LIKE '%Bosnia%' ORDER BY u.Location","CreationDate":"2016-09-19 14:32:30","validated":false,"QueryBody_Original":"SELECT  u.DisplayName, u.Location\nFROM Users u\nWHERE u.Location like '%Bosnia%'\nORDER BY u.Location"},{"QuerySetId":541735,"Title":"Questions with more than one answer","Description":null,"QueryBody":"SELECT COUNT(*) \/ CAST((SELECT COUNT(*) FROM Posts) AS FLOAT) FROM Posts AS question WHERE question.AnswerCount > 1","CreationDate":"2016-09-19 23:47:36","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\/CAST((SELECT COUNT(*) FROM Posts) AS FLOAT) FROM Posts as question WHERE question.AnswerCount > 1"},{"QuerySetId":541760,"Title":"Proportion of community with more than X answers","Description":null,"QueryBody":"SELECT COUNT(questions.Id) \/ CAST((SELECT COUNT(*) FROM Users) AS FLOAT) FROM Users AS users INNER JOIN Posts AS questions ON questions.OwnerUserId = users.id WHERE questions.PostTypeId = 2 GROUP BY users.id","CreationDate":"2016-09-20 00:40:46","validated":false,"QueryBody_Original":"SELECT \n    count(questions.Id) \/ CAST((SELECT COUNT(*) FROM Users) AS FLOAT)\n  FROM Users as users\n  INNER JOIN Posts as questions ON questions.OwnerUserId = users.id\n  WHERE questions.PostTypeId = 2\n  GROUP BY users.id"},{"QuerySetId":541879,"Title":"Prevalence of Tags Related to Responsive Web Design","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE (Tags LIKE '%bootstrap%' OR Tags LIKE '%mobile%' OR Tags LIKE '%css3%' OR Tags LIKE '%html5%' OR Tags LIKE '%css%' OR Tags LIKE '%html%')","CreationDate":"2020-04-05 21:57:20","validated":false,"QueryBody_Original":"SELECT \nCount(Id)\nfrom Posts \nwhere \n(Tags like '%bootstrap%'\nor Tags like '%mobile%'\nor Tags like '%css3%'\nor Tags like '%html5%'\nor Tags like '%css%'\nor Tags like '%html%'\n)"},{"QuerySetId":542194,"Title":"percentage questions by month for select DB techs","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) AS Month, COUNT(*) AS Count FROM Posts WHERE PostTypeId = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) ORDER BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0)","CreationDate":"2016-09-21 01:22:34","validated":false,"QueryBody_Original":"SELECT  dateadd(month, datediff(month, 0, CreationDate), 0) AS Month, \n  Count(*) AS Count\nFROM Posts\nWHERE PostTypeId = 1\nGROUP BY dateadd(month, datediff(month, 0, CreationDate), 0)\nORDER BY dateadd(month, datediff(month, 0, CreationDate), 0)"},{"QuerySetId":542457,"Title":"First 10 uses of a tag","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", UserId AS \"User Link\", CreationDate, RevisionGUID AS \"Revision Link\" FROM PostHistory WHERE PostHistoryTypeId IN (3, 6, 9) AND Text LIKE '%<##tagName##>%' ORDER BY CreationDate LIMIT 10","CreationDate":"2016-09-21 14:37:26","validated":false,"QueryBody_Original":"SELECT  Top 10\nPostId as [Post Link], UserId as [User Link], CreationDate, RevisionGUID as [Revision Link]\nFrom PostHistory\nwhere PostHistoryTypeId in (3,6,9) and Text Like '%<##tagName##>%'\nOrder By CreationDate"},{"QuerySetId":542831,"Title":"Most common tags with missing wiki and excerpt","Description":"Lists the most commonly used tags with empty\/missing tag wikis (wiki AND excerpt).","QueryBody":"SELECT Count, ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName, ExcerptPostId AS \"Post Link\", WikiPostId AS \"Post Link\" FROM Tags AS t LEFT JOIN Posts AS pe ON pe.Id = t.ExcerptPostId LEFT JOIN Posts AS pw ON pw.Id = t.WikiPostId WHERE ExcerptPostId IS NULL \/* no excerpt post *\/ AND WikiPostId IS NULL \/* no wiki post *\/ OR LENGTH(pe.Body) = 0 \/* excerpt empty *\/ OR LENGTH(pw.Body) = 0 \/* wiki empty *\/ ORDER BY Count DESC","CreationDate":"2016-10-10 03:12:04","validated":false,"QueryBody_Original":"SELECT  Count,\n       ('site:\/\/tags\/' + TagName + '|' + TagName) AS TagName,\n       ExcerptPostId                              AS [Post Link],\n       WikiPostId                                 AS [Post Link]\nFROM   Tags t\n       LEFT JOIN Posts pe\n         ON pe.Id = t.ExcerptPostId\n       LEFT JOIN Posts pw\n         ON pw.Id = t.WikiPostId\nWHERE  ExcerptPostId IS NULL -- no excerpt post\n       AND WikiPostId IS NULL -- no wiki post\n       OR LEN(pe.Body) = 0   -- excerpt empty\n       OR LEN(pw.Body) = 0   -- wiki empty\nORDER  BY Count DESC"},{"QuerySetId":542979,"Title":"Pulling all data from Posts Table","Description":null,"QueryBody":"SELECT * FROM Posts INNER JOIN Users ON Posts.Id = Users.Id","CreationDate":"2016-09-22 18:02:09","validated":false,"QueryBody_Original":"SELECT *\nfrom Posts\ninner join\nUsers\non Posts.Id = Users.Id"},{"QuerySetId":543050,"Title":"The top 100 worst posts.","Description":null,"QueryBody":"SELECT ID AS \"Post Link\", score, body FROM Posts ORDER BY Score LIMIT 100","CreationDate":"2016-09-22 19:38:34","validated":false,"QueryBody_Original":"SELECT  TOP 100 ID as [Post Link], score, body FROM Posts ORDER BY Score"},{"QuerySetId":543475,"Title":"Top 150 users from nepal","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Nepal%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2016-09-23 11:45:29","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Nepal%'\n\nORDER BY\n   reputation DESC"},{"QuerySetId":543927,"Title":"Is downvoting questions more popular than upvoting?","Description":"http:\/\/meta.stackoverflow.com\/questions\/335180\/is-downvoting-questions-more-popular-than-upvoting","QueryBody":"SELECT SUM(CASE WHEN votetypeid = 2 THEN 1 ELSE 0 END) AS upmod, SUM(CASE WHEN votetypeid = 3 THEN 1 ELSE 0 END) AS downmod, COUNT(*) AS total FROM votes WHERE votetypeid IN (2, 3)","CreationDate":"2016-09-24 17:12:18","validated":false,"QueryBody_Original":"SELECT  sum(case when votetypeid = 2 then 1 else 0 end) as upmod\n     , sum(case when votetypeid = 3 then 1 else 0 end) as downmod\n     , count(*) as total\nfrom votes\nwhere votetypeid in (2,3)"},{"QuerySetId":543928,"Title":"Count within a case statment","Description":null,"QueryBody":"SELECT OwnerUserId, MAX(OwnerDisplayName), MAX(SCORE), SUM(CASE WHEN NOT AcceptedAnswerId IS NULL AND ViewCount > 10 THEN 1 ELSE 0 END) AS Foo FROM Posts GROUP BY OwnerUserId","CreationDate":"2016-09-24 17:07:19","validated":false,"QueryBody_Original":"SELECT \n   OwnerUserId\n  ,MAX(OwnerDisplayName)\n  ,MAX(SCORE)\n  ,SUM(CASE\n        WHEN AcceptedAnswerId IS NOT NULL\n        AND ViewCount > 10\n        THEN 1\n        ELSE 0\n       END) AS Foo\nFROM Posts\nGROUP BY OwnerUserId;"},{"QuerySetId":543986,"Title":"Number of Responses Per Post","Description":null,"QueryBody":"SELECT p.ParentId, COUNT(*) FROM Posts AS p WHERE NOT p.ParentId IS NULL GROUP BY p.ParentId ORDER BY ParentId, NEWID()","CreationDate":"2016-09-24 22:13:43","validated":false,"QueryBody_Original":"SELECT  p.ParentId, count(*)\nfrom Posts p\nwhere p.ParentId is not null\ngroup by p.ParentId\norder by ParentId, newid();"},{"QuerySetId":543996,"Title":"Number of Votes per Post","Description":null,"QueryBody":"SELECT PostId, COUNT(*) FROM Votes WHERE NOT PostId IS NULL GROUP BY PostId ORDER BY PostId, NEWID()","CreationDate":"2016-09-24 22:13:48","validated":false,"QueryBody_Original":"SELECT  PostId, count(*)\nfrom Votes\nwhere PostId is not null\ngroup by PostId\norder by PostId, newid();"},{"QuerySetId":544002,"Title":"Number of Edits per Posts","Description":null,"QueryBody":"SELECT PostId, COUNT(*) FROM PostHistory WHERE NOT PostId IS NULL GROUP BY PostId ORDER BY PostId, NEWID()","CreationDate":"2016-09-24 22:12:56","validated":false,"QueryBody_Original":"SELECT  PostId, count(*)\nfrom PostHistory\nwhere PostId is not null\ngroup by PostId\norder by PostId, newid();"},{"QuerySetId":544123,"Title":"Gold badges earned on or after specified date","Description":null,"QueryBody":"SELECT name, UserId AS \"User Link\", UserId FROM Badges WHERE Class = 1 AND Date >= '##afterDate##' ORDER BY name, Date","CreationDate":"2016-09-25 09:50:46","validated":false,"QueryBody_Original":"SELECT  name, UserId as [User Link], UserId\nFrom Badges\nWhere Class = 1 and Date >= '##afterDate##'\nOrder by name, Date"},{"QuerySetId":544361,"Title":"Average question score by user (above 5 qs)","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", AVG(Score) AS qAvg, COUNT(Id) AS qCount FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId HAVING COUNT(Id) > 15 ORDER BY qAvg DESC","CreationDate":"2019-08-07 19:25:37","validated":false,"QueryBody_Original":"SELECT  OwnerUserId as [User Link], AVG(Score) as qAvg, COUNT(Id) as qCount\nfrom Posts\nwhere PostTypeId = 1\ngroup by OwnerUserId\nhaving COUNT(Id) > 15\norder by qAvg desc"},{"QuerySetId":544914,"Title":"Average question score by reputation (including deleted posts)","Description":"Doesn't actually work. Deleted posts in the data dump don't include user ids. See https:\/\/data.stackexchange.com\/stackoverflow\/query\/544929\/ instead.","QueryBody":"SELECT AVG(CAST(ROUND(Reputation, -(FLOOR(LOG(Reputation, 10)) - 1)) AS INT)) AS UserReputation, AVG(CAST(Posts.Score AS FLOAT)) AS AverageQuestionScore FROM Posts INNER JOIN Users ON (Users.Id = Posts.OwnerUserId) WHERE PostTypeId = 1 AND Reputation < 10000 GROUP BY ROUND(Reputation, -(FLOOR(LOG(Reputation, 10)) - 1)) ORDER BY UserReputation","CreationDate":"2016-09-26 22:02:38","validated":false,"QueryBody_Original":"SELECT \n  AVG(CAST(ROUND(Reputation, -(FLOOR(LOG(Reputation, 10))-1)) AS BigInt)) AS UserReputation,\n  AVG(CAST(Posts.Score AS Float)) AS AverageQuestionScore\nFROM\n  Posts\nINNER JOIN\n  Users ON (Users.Id = Posts.OwnerUserId)\nWHERE\n  PostTypeId = 1 AND Reputation < 10000\nGROUP BY\n ROUND(Reputation, -(FLOOR(LOG(Reputation, 10))-1))\nORDER BY\n  UserReputation"},{"QuerySetId":544935,"Title":"Overall Closed Status of All Questions","Description":"What percentage of questions are open vs closed? (Excludes deleted posts.)","QueryBody":"SELECT COUNT(Id) AS \"All\", SUM(CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END) AS \"Open\", SUM(CASE WHEN NOT ClosedDate IS NULL THEN 1 ELSE 0 END) AS \"Closed\", SUM(CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END) \/ CAST(COUNT(Id) AS FLOAT) AS \"PercentOpen\" FROM Posts WHERE PostTypeId = 1","CreationDate":"2016-09-26 22:39:35","validated":false,"QueryBody_Original":"SELECT \n  count(Id) AS 'All',\n  sum(CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END) AS 'Open',\n  sum(CASE WHEN ClosedDate IS NOT NULL THEN 1 ELSE 0 END) AS 'Closed',\n  sum(CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END) \/ CAST(count(Id) AS float) AS 'PercentOpen'\nFROM Posts\nWHERE PostTypeId = 1;"},{"QuerySetId":544938,"Title":"Closed Status of All Questions by Reputation","Description":"A graph what percentage of questions are closed, grouped by the reputation of the users who asked them.","QueryBody":"SELECT AVG(ROUND(Reputation, -1)) AS UserReputation, SUM(CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END) \/ CAST(COUNT(Posts.Id) AS FLOAT) AS \"PercentOpen\" FROM Posts INNER JOIN Users ON (Users.Id = Posts.OwnerUserId) WHERE PostTypeId = 1 AND Reputation \/* Graph is essentially flat beyond this point. Data for low rep users is *\/ \/* more interesting. *\/ \/* See https:\/\/data.stackexchange.com\/stackoverflow\/query\/544946\/ *\/ < 1000 GROUP BY ROUND(Reputation, -1) ORDER BY UserReputation","CreationDate":"2016-09-26 22:35:44","validated":false,"QueryBody_Original":"SELECT \n  AVG(ROUND(Reputation, -1)) AS UserReputation,\n  SUM(CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END) \/ CAST(count(Posts.Id) AS float) AS 'PercentOpen'\nFROM Posts\nINNER JOIN\n  Users ON (Users.Id = Posts.OwnerUserId)\nWHERE\n  PostTypeId = 1 AND\n  -- Graph is essentially flat beyond this point. Data for low rep users is\n  -- more interesting.\n  --\n  -- See https:\/\/data.stackexchange.com\/stackoverflow\/query\/544946\/\n  Reputation < 1000\nGROUP BY\n ROUND(Reputation, -1)\nORDER BY\n  UserReputation;"},{"QuerySetId":544946,"Title":"Closed Status of All Questions by Reputation (including high-rep users)","Description":"A graph what percentage of questions are closed, grouped by the reputation of the users who asked them. This graph includes high-rep users. For a zoomed in view of lower rep users (more interesting IMO) see https:\/\/data.stackexchange.com\/stackoverflow\/query\/544938\/","QueryBody":"SELECT AVG(CAST(ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) AS INT)) AS UserReputation, SUM(CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END) \/ CAST(COUNT(Posts.Id) AS FLOAT) AS \"PercentOpen\" FROM Posts INNER JOIN Users ON (Users.Id = Posts.OwnerUserId) WHERE PostTypeId = 1 GROUP BY ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) ORDER BY UserReputation","CreationDate":"2016-09-26 22:37:46","validated":false,"QueryBody_Original":"SELECT \n  AVG(CAST(ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) AS BigInt)) AS UserReputation,\n  SUM(CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END) \/ CAST(count(Posts.Id) AS float) AS 'PercentOpen'\nFROM Posts\nINNER JOIN\n  Users ON (Users.Id = Posts.OwnerUserId)\nWHERE\n  PostTypeId = 1\nGROUP BY\n ROUND(Reputation, -FLOOR(LOG(Reputation, 10)))\nORDER BY\n  UserReputation;"},{"QuerySetId":544952,"Title":"Average answer score by reputation","Description":"A graph the average score of answers, grouped by the reputation of the users who posted them.\r\n\r\nExclude high-rep users: https:\/\/data.stackexchange.com\/stackoverflow\/query\/544954\/\r\nOnly low-rep users: https:\/\/data.stackexchange.com\/stackoverflow\/query\/544955\/","QueryBody":"SELECT AVG(CAST(ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) AS INT)) AS UserReputation, AVG(CAST(Posts.Score AS FLOAT)) AS AverageAnswerScore FROM Posts INNER JOIN Users ON (Users.Id = Posts.OwnerUserId) WHERE PostTypeId = 2 GROUP BY ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) ORDER BY UserReputation","CreationDate":"2016-09-26 22:51:25","validated":false,"QueryBody_Original":"SELECT \n  AVG(CAST(ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) AS BigInt)) AS UserReputation,\n  AVG(CAST(Posts.Score AS Float)) AS AverageAnswerScore\nFROM\n  Posts\nINNER JOIN\n  Users ON (Users.Id = Posts.OwnerUserId)\nWHERE\n  PostTypeId = 2\nGROUP BY\n ROUND(Reputation, -FLOOR(LOG(Reputation, 10)))\nORDER BY\n  UserReputation"},{"QuerySetId":544954,"Title":"Average answer score by reputation (mid-tier rep)","Description":"A graph the average score of answers, grouped by the reputation of the users who posted them. (\"Zoomed in\" to exclude high-rep users.)\r\n\r\nFull dataset: https:\/\/data.stackexchange.com\/stackoverflow\/query\/544952\/\r\nLower-rep users: https:\/\/data.stackexchange.com\/stackoverflow\/query\/544955\/","QueryBody":"SELECT AVG(CAST(ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) AS INT)) AS UserReputation, AVG(CAST(Posts.Score AS FLOAT)) AS AverageAnswerScore FROM Posts INNER JOIN Users ON (Users.Id = Posts.OwnerUserId) WHERE PostTypeId = 2 AND Reputation < 10000 GROUP BY ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) ORDER BY UserReputation","CreationDate":"2016-09-26 22:51:29","validated":false,"QueryBody_Original":"SELECT \n  AVG(CAST(ROUND(Reputation, -FLOOR(LOG(Reputation, 10))) AS BigInt)) AS UserReputation,\n  AVG(CAST(Posts.Score AS Float)) AS AverageAnswerScore\nFROM\n  Posts\nINNER JOIN\n  Users ON (Users.Id = Posts.OwnerUserId)\nWHERE\n  PostTypeId = 2 AND Reputation < 10000\nGROUP BY\n ROUND(Reputation, -FLOOR(LOG(Reputation, 10)))\nORDER BY\n  UserReputation"},{"QuerySetId":544955,"Title":"Average answer score by reputation (lower rep)","Description":"A graph the average score of answers, grouped by the reputation of the users who posted them. (\"Zoomed in\" to only include lower-rep users.)\r\n\r\nFull dataset: https:\/\/data.stackexchange.com\/stackoverflow\/query\/544952\/","QueryBody":"SELECT AVG(CAST(ROUND(Reputation, -1) AS INT)) AS UserReputation, AVG(CAST(Posts.Score AS FLOAT)) AS AverageAnswerScore FROM Posts INNER JOIN Users ON (Users.Id = Posts.OwnerUserId) WHERE PostTypeId = 2 AND Reputation < 1000 GROUP BY ROUND(Reputation, -1) ORDER BY UserReputation","CreationDate":"2016-09-26 22:51:31","validated":false,"QueryBody_Original":"SELECT \n  AVG(CAST(ROUND(Reputation, -1) AS BigInt)) AS UserReputation,\n  AVG(CAST(Posts.Score AS Float)) AS AverageAnswerScore\nFROM\n  Posts\nINNER JOIN\n  Users ON (Users.Id = Posts.OwnerUserId)\nWHERE\n  PostTypeId = 2 AND Reputation < 1000\nGROUP BY\n ROUND(Reputation, -1)\nORDER BY\n  UserReputation"},{"QuerySetId":545353,"Title":"Top developer in Tabriz ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", * FROM Users WHERE LOWER(Location) LIKE LOWER('%tehran%') ORDER BY Reputation DESC","CreationDate":"2018-05-24 23:14:36","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],* \nFROM\n    Users \n    where LOWER(Location) like LOWER('%tehran%')\norder by Reputation desc"},{"QuerySetId":545380,"Title":"Top 1000 stackoverflow reputation holders from india","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Id) LIKE '%kiran%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2016-09-27 21:14:23","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Id) LIKE '%kiran%'\n    \n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":545444,"Title":"Total Questions and Answers per Month","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') * 100 + TIME_TO_STR(CreationDate, '%m') AS YearMonth, SUM(CASE WHEN ParentID IS NULL THEN 1 ELSE 0 END) AS TotalQuestions, SUM(CASE WHEN NOT ParentID IS NULL THEN 1 ELSE 0 END) AS TotalAnswers FROM Posts GROUP BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m') ORDER BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m')","CreationDate":"2016-09-28 01:06:30","validated":false,"QueryBody_Original":"SELECT    DatePart(year, CreationDate) * 100\n         + DatePart(month, CreationDate) YearMonth\n       , sum(case when ParentID is null then 1 else 0 end) TotalQuestions\n       , sum(case when ParentID is not null then 1 else 0 end) TotalAnswers\n  from Posts\n group by DatePart(year, CreationDate) \n       ,  DatePart(month, CreationDate)\n order by DatePart(year, CreationDate) \n       ,  DatePart(month, CreationDate)"},{"QuerySetId":545450,"Title":"Total questions and answers per calendar month","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') * 100 + TIME_TO_STR(CreationDate, '%m') AS YearMonth, SUM(CASE WHEN ParentID IS NULL THEN 1 ELSE 0 END) AS TotalQuestions, SUM(CASE WHEN NOT ParentID IS NULL THEN 1 ELSE 0 END) AS TotalAnswers FROM Posts GROUP BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m') ORDER BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m')","CreationDate":"2016-09-28 01:09:51","validated":false,"QueryBody_Original":"SELECT    DatePart(year, CreationDate) * 100\n         + DatePart(month, CreationDate) YearMonth\n       , sum(case when ParentID is null then 1 else 0 end) TotalQuestions\n       , sum(case when ParentID is not null then 1 else 0 end) TotalAnswers\n  from Posts\n group by DatePart(year, CreationDate) \n       ,  DatePart(month, CreationDate)\n order by DatePart(year, CreationDate) \n       ,  DatePart(month, CreationDate)"},{"QuerySetId":546502,"Title":"Top 100 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%INDIA' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-09-29 18:13:05","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%INDIA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":546657,"Title":"Top Users from Porto Alegre, Brazil","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%porto alegre%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2016-09-30 00:00:42","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%porto alegre%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":548131,"Title":"Most answers in one day","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Location, u.Reputation, CAST(p.CreationDate AS DATE) AS PostDate, COUNT(p.Id) AS Posts FROM posts AS p, users AS u WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 2 GROUP BY CAST(p.CreationDate AS DATE), u.Id, u.DisplayName, u.Location, u.Reputation HAVING COUNT(p.Id) > 20 ORDER BY COUNT(p.Id) DESC, u.Id LIMIT 500","CreationDate":"2016-10-02 13:14:27","validated":false,"QueryBody_Original":"SELECT  TOP 500 u.Id,u.DisplayName, u.Location,u.Reputation,\nCAST(p.CreationDate as Date) as PostDate, \ncount(p.Id) as Posts\nfrom posts p, users u\n  where p.OwnerUserId = u.Id \n  And p.PostTypeId=2\n  group by CAST(p.CreationDate as Date), u.Id,u.DisplayName, \n  u.Location,u.Reputation\n  HAVING count(p.Id)>20\norder by count(p.Id) DESC , u.Id ASC"},{"QuerySetId":549041,"Title":"Top users from Bangladesh based on descending order of reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", U.Id AS \"User Link\", U.* FROM Users AS U WHERE LOWER(Location) LIKE '%bangladesh%' OR UPPER(Location) LIKE '%bd' ORDER BY Reputation DESC","CreationDate":"2016-10-03 09:24:53","validated":false,"QueryBody_Original":"SELECT  \nROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \nU.Id AS [User Link], \nU.*\nFROM Users U\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR UPPER(Location) LIKE '%bd'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":550058,"Title":"Average number of answers for questions with score > 0","Description":null,"QueryBody":"SELECT AVG(1.0 * AnswerCount) FROM Posts WHERE PostTypeId = 1 AND Score > 0","CreationDate":"2016-10-04 04:29:10","validated":false,"QueryBody_Original":"SELECT  AVG(1.0 * AnswerCount) FROM\nPosts WHERE PostTypeId=1 AND Score > 0"},{"QuerySetId":550302,"Title":"Get number of non-empty adjacency matrix cells for each tag","Description":null,"QueryBody":"SELECT t.Id FROM Tags AS t","CreationDate":"2016-10-04 17:49:04","validated":false,"QueryBody_Original":"SELECT  \n  t.Id\nFROM \n  Tags t"},{"QuerySetId":550875,"Title":"Find posts with the most comments","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", COUNT(c.Id) AS NumComments FROM Posts AS p JOIN Comments AS c ON p.Id = c.PostId WHERE YEAR(p.CreationDate) >= 2017 GROUP BY p.Id ORDER BY -COUNT(c.Id) LIMIT 50","CreationDate":"2017-03-06 18:16:46","validated":false,"QueryBody_Original":"SELECT  TOP 50 p.Id AS [Post Link], COUNT(c.Id) AS NumComments\nFROM Posts p\nJOIN Comments c ON p.Id = c.PostId\nWHERE YEAR(p.CreationDate) >= 2017\nGROUP BY p.Id\nORDER BY -COUNT(c.Id)"},{"QuerySetId":550999,"Title":"Q's from users with 10k+ reputation without an accepted answer","Description":null,"QueryBody":"SELECT * FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE PostTypeId = 1 AND AcceptedAnswerId IS NULL AND u.Reputation > 10000 LIMIT 1000","CreationDate":"2016-10-05 14:27:29","validated":false,"QueryBody_Original":"SELECT  TOP 1000 *\nFROM Posts p\nJOIN Users u\nON p.OwnerUserId = u.Id\nWHERE PostTypeId = 1 AND AcceptedAnswerId IS NULL\nAND u.Reputation > 10000"},{"QuerySetId":551081,"Title":"Hidden gems: Highest question score per thousand views","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE Score > 0 AND PostTypeId = 1 ORDER BY Score * 1000 \/ ViewCount DESC LIMIT 1000","CreationDate":"2016-10-05 19:17:10","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE Score > 0 AND PostTypeId = 1\nORDER BY Score*1000\/ViewCount DESC"},{"QuerySetId":551082,"Title":"Dropping fast: Lowest question score per thousand views among questions with score -5 or worse","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE Score <= -5 AND PostTypeId = 1 ORDER BY Score * 1000 \/ ViewCount LIMIT 1000","CreationDate":"2016-10-10 15:04:58","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE Score <= -5 AND PostTypeId = 1\nORDER BY Score*1000\/ViewCount ASC"},{"QuerySetId":551083,"Title":"Dropping fast: Lowest question score per thousand views among questions with score -20 or worse","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE Score <= -20 AND PostTypeId = 1 ORDER BY Score * 1000 \/ ViewCount LIMIT 1000","CreationDate":"2016-10-10 15:06:13","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE Score <= -20 AND PostTypeId = 1\nORDER BY Score*1000\/ViewCount ASC"},{"QuerySetId":551085,"Title":"Hidden gems: Lowest viewed questions with score 100 or higher","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE Score > 100 AND PostTypeId = 1 ORDER BY ViewCount LIMIT 1000","CreationDate":"2019-08-10 04:40:08","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE Score > 100 AND PostTypeId = 1\nORDER BY ViewCount ASC"},{"QuerySetId":551086,"Title":"Hidden gems: Lowest viewed questions with score 50 or higher","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE Score >= 50 AND PostTypeId = 1 ORDER BY ViewCount LIMIT 1000","CreationDate":"2016-10-05 19:11:03","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE Score >= 50 AND PostTypeId = 1\nORDER BY ViewCount ASC"},{"QuerySetId":551087,"Title":"Hidden gems: Highest score for questions with less than 100 views","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE ViewCount < 100 AND PostTypeId = 1 ORDER BY Score DESC LIMIT 1000","CreationDate":"2016-10-05 19:12:16","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE ViewCount < 100 AND PostTypeId = 1\nORDER BY Score DESC"},{"QuerySetId":551088,"Title":"Hidden gems: Highest score for questions with less than 1,000 views","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE ViewCount < 1000 AND PostTypeId = 1 ORDER BY Score DESC LIMIT 1000","CreationDate":"2016-10-10 13:10:17","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE ViewCount < 1000 AND PostTypeId = 1\nORDER BY Score DESC"},{"QuerySetId":551089,"Title":"Hidden gems: Lowest viewed questions with score 5 or higher","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE Score >= 5 AND PostTypeId = 1 ORDER BY ViewCount LIMIT 1000","CreationDate":"2016-10-05 19:14:37","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE Score >= 5 AND PostTypeId = 1\nORDER BY ViewCount ASC"},{"QuerySetId":551102,"Title":"Initial votes vs time in an election","Description":null,"QueryBody":"SELECT b.Date, COUNT(b.Date) FROM badges AS b WHERE b.Name = 'Constituent' AND b.Date BETWEEN '##ElectionYear##-01-01' AND '##ElectionYear##-12-31' GROUP BY b.Date ORDER BY b.Date","CreationDate":"2016-10-05 20:13:42","validated":false,"QueryBody_Original":"SELECT  b.Date, COUNT(b.Date) FROM badges AS b WHERE b.Name = 'Constituent' AND b.Date BETWEEN '##ElectionYear##-01-01' AND '##ElectionYear##-12-31' GROUP BY b.Date ORDER BY b.Date;"},{"QuerySetId":551211,"Title":"score for questions per user","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY a.questionScore DESC) AS rank, a.id AS \"User Link\", a.questionScore, a.questionScore * 5 AS questionRep, a.reputation AS totalRep, ((a.questionScore * 5.0) \/ (1.0 * a.reputation)) * 100.0 AS percentQuestions FROM (SELECT u.id, SUM(p.score) AS questionScore, u.reputation FROM users AS u JOIN posts AS p ON p.owneruserid = u.id WHERE p.posttypeid = 1 \/* questions *\/ GROUP BY u.id, u.reputation) AS a LIMIT 100","CreationDate":"2016-10-06 00:00:19","validated":false,"QueryBody_Original":"SELECT  top(100)\n       ROW_NUMBER() OVER(ORDER BY a.questionScore DESC) as rank, \n       a.id as [User Link], \n       a.questionScore,\n       a.questionScore *5 as questionRep,\n       a.reputation as totalRep,\n       ((a.questionScore *5.0)\/(1.0 * a.reputation))*100.0 as percentQuestions\nfrom(\nSELECT u.id, sum(p.score) as questionScore, u.reputation\nfrom users u\njoin posts p\non p.owneruserid = u.id\nwhere p.posttypeid = 1 -- questions\ngroup by u.id, u.reputation ) a"},{"QuerySetId":551529,"Title":"Date Distribution of Answer Votes Grouped by Date","Description":null,"QueryBody":"SELECT Votes.CreationDate, COUNT(Votes.CreationDate) FROM Votes INNER JOIN Posts ON Votes.PostId = Posts.Id WHERE Votes.PostId = 47089 GROUP BY Votes.CreationDate","CreationDate":"2016-10-06 20:08:34","validated":false,"QueryBody_Original":"SELECT  Votes.CreationDate, COUNT(Votes.CreationDate)\nFROM Votes\nINNER JOIN Posts ON Votes.PostId = Posts.Id \nWHERE Votes.PostId = 47089\nGroup By Votes.CreationDate\n--PostTypes.Id=2"},{"QuerySetId":552118,"Title":"Percentage of questions with at least one answer per day of year","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%j'), CAST(SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(Posts.Id) AS Ratio FROM Posts WHERE PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%j') ORDER BY TIME_TO_STR(CreationDate, '%j')","CreationDate":"2016-10-07 20:28:32","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(dayofyear,CreationDate),\n  CAST(SUM(CASE when AnswerCount > 0 then 1 else 0 END) as float)\/COUNT(Posts.Id) as Ratio\nFROM Posts\nWHERE PostTypeId=1\nGROUP BY DATEPART(dayofyear,CreationDate)\nORDER BY DATEPART(dayofyear,CreationDate) ASC"},{"QuerySetId":552123,"Title":"Percentage of questions with at least one answer (restrict dates)","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%j'), CAST(SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(Posts.Id) AS Ratio FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY TIME_TO_STR(CreationDate, '%j') ORDER BY TIME_TO_STR(CreationDate, '%j')","CreationDate":"2016-10-07 21:02:01","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(dayofyear,CreationDate),\n  CAST(SUM(CASE when AnswerCount > 0 then 1 else 0 END) as float)\/COUNT(Posts.Id) as Ratio\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY DATEPART(dayofyear,CreationDate)\nORDER BY DATEPART(dayofyear,CreationDate) ASC"},{"QuerySetId":552239,"Title":"Answered questions vs. all questions per week","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W'), SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS Answered, COUNT(Posts.Id) AS Total, CAST(SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(Posts.Id) AS Ratio FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY TIME_TO_STR(CreationDate, '%W') ORDER BY TIME_TO_STR(CreationDate, '%W')","CreationDate":"2016-10-08 02:28:10","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(week,CreationDate),\n  SUM(CASE when AnswerCount > 0 then 1 else 0 END) as Answered,\n  COUNT(Posts.Id) as Total,\n  CAST(SUM(CASE when AnswerCount > 0 then 1 else 0 END) as float)\/COUNT(Posts.Id) as Ratio\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY DATEPART(week,CreationDate)\nORDER BY DATEPART(week,CreationDate) ASC"},{"QuerySetId":552453,"Title":"Is there any way to search closed questions with reasons of \u201cprimarily opinion-based\u201d or \u201ctoo broad\u201d","Description":"http:\/\/meta.stackexchange.com\/questions\/285499\/is-there-any-way-to-search-closed-questions-with-reasons-of-primarily-opinion-b","QueryBody":"SELECT * FROM posts AS p INNER JOIN posthistory AS ph ON ph.postid = p.id WHERE ph.posthistorytypeid = 10 AND NOT p.closeddate IS NULL AND p.posttypeid = 1 \/* Q *\/","CreationDate":"2016-10-08 16:56:31","validated":false,"QueryBody_Original":"SELECT  *\nfrom posts p \ninner join posthistory ph on ph.postid = p.id\nwhere ph.posthistorytypeid = 10\nand p.closeddate is not null\nand p.posttypeid = 1 --Q"},{"QuerySetId":553820,"Title":"Hidden gems: Highest question score per thousand views (minimum 1,000 views)","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE Score > 0 AND ViewCount >= 1000 AND PostTypeId = 1 ORDER BY Score * 1000 \/ ViewCount DESC LIMIT 1000","CreationDate":"2016-10-10 13:10:36","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE Score > 0 AND ViewCount >= 1000 AND PostTypeId = 1\nORDER BY Score*1000\/ViewCount DESC"},{"QuerySetId":553975,"Title":"CASE Statement in WHERE clause renders query non-sargable?","Description":null,"QueryBody":"SELECT ID FROM POSTS WHERE 1 = CASE WHEN ID = 4 THEN 1 WHEN ID = 6 THEN 1 ELSE 0 END","CreationDate":"2016-10-10 20:42:45","validated":false,"QueryBody_Original":"SELECT  ID\nFROM POSTS\nWHERE 1 = CASE\n            WHEN ID = 4\n              THEN 1\n            WHEN ID = 6\n              THEN 1\n            ELSE 0\n        END"},{"QuerySetId":554526,"Title":"Count Robot Framework Question (Tags)","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE Tags LIKE '%robotframework%'","CreationDate":"2016-10-13 10:35:19","validated":false,"QueryBody_Original":"SELECT  Count(Id) From Posts WHERE Tags LIKE '%robotframework%'"},{"QuerySetId":554543,"Title":"Count Selenium Question (Tags) by year","Description":null,"QueryBody":"SELECT YEAR(CreationDate), COUNT(Id) FROM Posts WHERE Tags LIKE '%selenium%' OR Title LIKE '%selenium%' GROUP BY YEAR(CreationDate)","CreationDate":"2016-10-12 11:27:44","validated":false,"QueryBody_Original":"SELECT  Year(CreationDate), Count(Id) From Posts WHERE Tags LIKE '%selenium%' OR Title LIKE '%selenium%' GROUP BY Year(CreationDate)"},{"QuerySetId":555466,"Title":"Exploring Posts and their features","Description":null,"QueryBody":"SELECT id, posttypeid FROM Posts","CreationDate":"2016-10-12 21:23:19","validated":false,"QueryBody_Original":"SELECT  id, posttypeid\nfrom Posts;"},{"QuerySetId":555509,"Title":"Number of sitecore questions, past 2 weeks","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%sitecore%' AND CreationDate > '2016-10-01'","CreationDate":"2016-10-12 22:14:42","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE Tags like '%sitecore%' \nAND CreationDate > '2016-10-01'"},{"QuerySetId":556714,"Title":"Comments containing given keyword between two dates","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text FROM Comments WHERE Text LIKE '%##Word##%' AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##'","CreationDate":"2016-10-14 16:46:27","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text\nFROM Comments\nWHERE Text LIKE '%##Word##%'\nAND CreationDate >= '##Date1##'\nAND CreationDate <= '##Date2##'"},{"QuerySetId":556762,"Title":"Top 2500 SO Users from Germany","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%deutschland%' OR LOWER(Location) LIKE '%germany%' ORDER BY Reputation DESC LIMIT 2500","CreationDate":"2016-12-12 18:22:37","validated":false,"QueryBody_Original":"SELECT  TOP 2500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n   lower(Location) LIKE '%deutschland%' or\n   lower(Location) LIKE '%germany%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":556790,"Title":"Comments containing given keyword between two dates (with text and author)","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%##Word##%' AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##' ORDER BY CreationDate","CreationDate":"2016-10-14 17:09:17","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%##Word##%'\nAND CreationDate >= '##Date1##'\nAND CreationDate <= '##Date2##'\nORDER BY CreationDate"},{"QuerySetId":557629,"Title":"statistics on user displaynames per reputation","Description":"shows number of users per reputation group (logarithm) that kept their default username or changed it.","QueryBody":"SELECT *, ROUND(CAST(\"default\" AS FLOAT) \/ \"total\" * 100, 1) AS percentage FROM (SELECT SUM(CASE WHEN displayname = N'user' + CAST(id AS TEXT) THEN 1 ELSE 0 END) AS \"default\", SUM(CASE WHEN displayname LIKE 'user%' AND NOT displayname = N'user' + CAST(id AS TEXT) THEN 1 ELSE 0 END) AS \"merged?\", SUM(CASE WHEN NOT displayname LIKE 'user%' THEN 1 ELSE 0 END) AS \"custom\", COUNT(*) AS total, ROUND(LOG(reputation), 0) AS \"log(reputation)\" FROM users GROUP BY ROUND(LOG(reputation), 0)) AS data ORDER BY 5","CreationDate":"2016-10-16 12:14:09","validated":false,"QueryBody_Original":"SELECT  *\n     , round(cast([default] as decimal)\/[total] * 100,1) as percentage\nfrom (\nSELECT sum( case \n            when  displayname = N'user' + cast(id as nvarchar) \n            then 1 \n            else 0 \n            end ) as [default]\n     , sum( case \n            when displayname like 'user%' \n                 and not displayname = N'user' + cast(id as nvarchar) \n            then 1 \n            else 0 \n            end ) as [merged?]\n     , sum( case \n            when  displayname not like 'user%' \n            then 1 \n            else \n            0 end ) as [custom]\n     , count(*) as total\n     , round(log(reputation),0) as [log(reputation)]\nfrom users\ngroup by round(log(reputation),0)\n) data\norder by 5"},{"QuerySetId":557742,"Title":"List of edits where edit summary contains given keyword","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Comment, UserId AS \"User Link\", CreationDate FROM PostHistory WHERE UserId = '##userid##' AND Comment LIKE '%##keyword##%' ORDER BY CreationDate","CreationDate":"2016-10-16 18:16:20","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], Comment, UserId as [User Link], CreationDate\nFrom PostHistory\nwhere UserId='##userid##' and Comment Like '%##keyword##%'\nOrder By CreationDate"},{"QuerySetId":558280,"Title":"Top 20 users from Noida","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%noida' OR UPPER(Location) LIKE '%NOIDA' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2016-10-17 09:21:44","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%noida'\n    OR UPPER(Location) LIKE '%NOIDA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":558778,"Title":"Seattle Java Users sorted by Reputation","Description":null,"QueryBody":"SELECT * FROM users WHERE ((LOWER(aboutme) LIKE '%java%' AND NOT LOWER(aboutme) LIKE '%javascript%') OR LOWER(aboutme) LIKE '%redshift%' OR LOWER(aboutme) LIKE '%hadoop%' OR LOWER(aboutme) LIKE '%emr%') AND LOWER(location) LIKE '%seattle%' ORDER BY reputation DESC","CreationDate":"2016-10-19 23:07:32","validated":false,"QueryBody_Original":"SELECT  * from users \nwhere ((lower(aboutme) like '%java%' \n       and lower(aboutme) not like '%javascript%')\n       or lower(aboutme) like '%redshift%'\n       or lower(aboutme) like '%hadoop%'\n       or lower(aboutme) like '%emr%')\nand lower(location) like '%seattle%'\norder by reputation desc"},{"QuerySetId":559297,"Title":"Users with their own Bronze Tag Badges","Description":null,"QueryBody":"SELECT B.Name, B.UserId AS \"User Link\" FROM Badges AS B WHERE Class = 3 AND TagBased = 1 AND (SELECT COUNT(B2.Name) FROM Badges AS B2 WHERE B2.Name = B.Name AND B2.Class = 3 AND B2.TagBased = 1) = 1 GROUP BY B.Name, B.UserId ORDER BY B.Name","CreationDate":"2016-10-18 18:36:53","validated":false,"QueryBody_Original":"SELECT  B.Name, B.UserId AS [User Link]\nFROM Badges B\nWHERE Class = 3\nAND TagBased = 1\nAND (\n    SELECT COUNT(B2.Name) FROM Badges B2\n    WHERE B2.Name = B.Name\n    AND B2.Class = 3\n    AND B2.TagBased = 1\n    ) = 1\nGROUP BY B.Name, B.UserId\nORDER BY B.Name"},{"QuerySetId":559379,"Title":"Get users by location and interest","Description":null,"QueryBody":"SELECT DISTINCT u.Id, Reputation, DisplayName, WebsiteUrl, AboutMe, Views FROM Users AS u INNER JOIN Comments AS c ON c.UserId = u.Id WHERE u.Location LIKE '%london%' AND c.Text LIKE '%scala%'","CreationDate":"2016-10-26 15:47:07","validated":false,"QueryBody_Original":"SELECT   distinct u.Id , \nReputation, \nDisplayName, \nWebsiteUrl, \nAboutMe, \nViews \nfrom Users u inner join Comments c on c.UserId = u.Id \nwhere u.Location like '%london%' and c.Text like '%scala%'"},{"QuerySetId":559601,"Title":"Top Polish users in StackOverFlow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%australia%' OR UPPER(Location) LIKE '%australia%' ORDER BY Reputation DESC","CreationDate":"2020-04-06 18:30:20","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%australia%'\n    OR UPPER(Location) LIKE '%australia%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":560550,"Title":"First User to get a Gold Tag-Based Badge","Description":null,"QueryBody":"SELECT B.Name, B.UserId AS \"User Link\" FROM Badges AS B WHERE Class = 1 AND TagBased = 1 AND Id = (SELECT MIN(B2.Id) FROM Badges AS B2 WHERE B2.Name = B.Name AND B2.Class = 1 AND B2.TagBased = 1) GROUP BY B.Name, B.UserId ORDER BY B.Name","CreationDate":"2016-10-20 23:33:00","validated":false,"QueryBody_Original":"SELECT  B.Name, B.UserId AS [User Link]\nFROM Badges B\nWHERE Class = 1\nAND TagBased = 1\nAND Id = (\n         SELECT MIN(B2.Id) FROM Badges B2\n         WHERE B2.Name = B.Name\n         AND B2.Class = 1\n         AND B2.TagBased = 1\n         )\nGROUP BY B.Name, B.UserId\nORDER BY B.Name"},{"QuerySetId":560551,"Title":"First User to get a Silver Tag-Based Badge","Description":null,"QueryBody":"SELECT B.Name, B.UserId AS \"User Link\" FROM Badges AS B WHERE Class = 2 AND TagBased = 1 AND Id = (SELECT MIN(B2.Id) FROM Badges AS B2 WHERE B2.Name = B.Name AND B2.Class = 2 AND B2.TagBased = 1) GROUP BY B.Name, B.UserId ORDER BY B.Name","CreationDate":"2016-10-20 23:18:55","validated":false,"QueryBody_Original":"SELECT  B.Name, B.UserId AS [User Link]\nFROM Badges B\nWHERE Class = 2\nAND TagBased = 1\nAND Id = (\n         SELECT MIN(B2.Id) FROM Badges B2\n         WHERE B2.Name = B.Name\n         AND B2.Class = 2\n         AND B2.TagBased = 1\n         )\nGROUP BY B.Name, B.UserId\nORDER BY B.Name"},{"QuerySetId":560552,"Title":"First User to get a Bronze Tag-Based Badge","Description":null,"QueryBody":"SELECT B.Name, B.UserId AS \"User Link\" FROM Badges AS B WHERE Class = 3 AND TagBased = 1 AND Id = (SELECT MIN(B2.Id) FROM Badges AS B2 WHERE B2.Name = B.Name AND B2.Class = 3 AND B2.TagBased = 1) GROUP BY B.Name, B.UserId ORDER BY B.Name","CreationDate":"2016-10-20 23:19:34","validated":false,"QueryBody_Original":"SELECT  B.Name, B.UserId AS [User Link]\nFROM Badges B\nWHERE Class = 3\nAND TagBased = 1\nAND Id = (\n         SELECT MIN(B2.Id) FROM Badges B2\n         WHERE B2.Name = B.Name\n         AND B2.Class = 3\n         AND B2.TagBased = 1\n         )\nGROUP BY B.Name, B.UserId\nORDER BY B.Name"},{"QuerySetId":561010,"Title":"Highest ranked questions for a given date range","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, CreationDate FROM Posts WHERE PostTypeId = 1 AND CreationDate >= CAST('##StartDate##' AS DATETIME) AND CreationDate <= CAST('##EndDate##' AS DATETIME) ORDER BY -Score","CreationDate":"2017-02-20 15:20:57","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Score, ViewCount, CreationDate\nfrom Posts\nwhere PostTypeId=1\n AND\nCreationDate >= CONVERT(datetime, '##StartDate##')\n AND\nCreationDate <= CONVERT(datetime, '##EndDate##')\n\norder by -Score"},{"QuerySetId":561583,"Title":"Count awarded badges and users","Description":null,"QueryBody":"SELECT COUNT(*) OVER (PARTITION BY b.name, b.class) AS awarded, b.name, b.class, u.displayname FROM badges AS b JOIN users AS u ON u.id = b.userid","CreationDate":"2016-10-24 14:42:43","validated":false,"QueryBody_Original":"SELECT  count(*) over (partition by b.name, b.class) as awarded,\n       b.name, b.class, u.displayname\nfrom badges b\njoin users u on u.id = b.userid"},{"QuerySetId":564767,"Title":"select * from Posts where Tags LIKE '%unit testing%';","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%unit-testing%'","CreationDate":"2016-10-27 00:05:38","validated":false,"QueryBody_Original":"SELECT  * from Posts where Tags LIKE '%unit-testing%';"},{"QuerySetId":565195,"Title":"Top 100 StackOverflow users from Cameroon","Description":"Displays a list of the the 100 StackOverflow users in South Africa\r\n","QueryBody":"SELECT Id, DisplayName AS \"Display Name\", Reputation, WebsiteUrl AS Website, Location FROM Users WHERE Location LIKE N'%Cameroon%' ORDER BY reputation DESC LIMIT 1000","CreationDate":"2020-04-23 06:00:25","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   Id,\n   DisplayName as [Display Name],\n   Reputation,\n   WebsiteUrl as Website,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Cameroon%'\nORDER BY\n   reputation DESC"},{"QuerySetId":565202,"Title":"Top 100 StackOverflow users from Europe","Description":null,"QueryBody":"SELECT Id, DisplayName AS \"Display Name\", Reputation, WebsiteUrl AS Website, Location FROM Users WHERE Location LIKE N'%Germany%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2016-10-27 15:21:45","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName as [Display Name],\n   Reputation,\n   WebsiteUrl as Website,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Germany%'\nORDER BY\n   reputation DESC"},{"QuerySetId":565570,"Title":"What percentage of posts are accepted","Description":null,"QueryBody":"SELECT (CAST(COUNT(a.Id) AS FLOAT) \/ (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 2) * 100) AS AcceptedPercentage FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id WHERE a.PostTypeId = 2","CreationDate":"2016-10-28 03:02:40","validated":false,"QueryBody_Original":"SELECT  \n    (CAST(Count(a.Id) AS float) \/ (SELECT Count(*) FROM Posts WHERE PostTypeId = 2) * 100) AS AcceptedPercentage\nFROM\n    Posts q\n  INNER JOIN\n    Posts a ON q.AcceptedAnswerId = a.Id\nWHERE\n    a.PostTypeId = 2"},{"QuerySetId":565937,"Title":"Not so hidden gems: Highest score for questions with less than 10,000 views","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE ViewCount < 10000 AND PostTypeId = 1 ORDER BY Score DESC LIMIT 1000","CreationDate":"2016-10-28 19:24:38","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE ViewCount < 10000 AND PostTypeId = 1\nORDER BY Score DESC"},{"QuerySetId":565941,"Title":"Hidden gems: Highest score for questions with less than 10 views","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Score, ViewCount, Score * 1000 \/ ViewCount AS \"Score per Thousand Views\" FROM Posts WHERE ViewCount < 10 AND PostTypeId = 1 ORDER BY Score DESC LIMIT 1000","CreationDate":"2016-10-28 19:22:32","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Posts.Id AS [Post Link], Posts.OwnerUserId as [User Link], Score, ViewCount, Score*1000\/ViewCount as \"Score per Thousand Views\"\nFROM Posts\nWHERE ViewCount < 10 AND PostTypeId = 1\nORDER BY Score DESC"},{"QuerySetId":567390,"Title":"Number of Users with Reputation == N","Description":"For each unique reputation value N, this query retrieves the number of uses with reputation == N.\r\n\r\nClick the graph tab for interesting pictures.","QueryBody":"SELECT Reputation, COUNT(1) AS UserCount FROM Users GROUP BY Reputation ORDER BY Reputation","CreationDate":"2017-12-05 18:12:51","validated":false,"QueryBody_Original":"SELECT  \n  Reputation, \n  COUNT(1) AS UserCount\nFROM \n  Users\nGROUP BY Reputation\nORDER BY Reputation"},{"QuerySetId":567613,"Title":"Comments that Mention Software Engineering Stack Exchange","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", CreationDate FROM Comments WHERE (DATEDIFF('2016-10-21', CreationDate) < 0) AND (Text LIKE '%software%engineering%' OR Text LIKE '%programmers%') ORDER BY CreationDate DESC","CreationDate":"2016-11-01 04:12:40","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], CreationDate\nFROM   Comments\nWHERE  (datediff(dd, CreationDate, '2016-10-21') < 0) AND\n       (Text LIKE '%software%engineering%' OR\n       Text Like '%programmers%')\nORDER BY CreationDate DESC"},{"QuerySetId":567873,"Title":"Creating a post through SEDE","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 28231","CreationDate":"2016-10-31 19:34:26","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id=28231"},{"QuerySetId":567903,"Title":"Competing answers: user's answer score compared to max answer score","Description":null,"QueryBody":"SELECT users.id AS \"User Link\", users.reputation, userScoreMetrics.avgScoreDeficit FROM (SELECT owneruserid, AVG(CAST(maxScore - score AS FLOAT)) AS avgScoreDeficit FROM (SELECT rawUserScores.parentid, maxScore, score, owneruserid FROM (SELECT score, owneruserid, parentid FROM posts WHERE posttypeid = 2) AS rawUserScores JOIN (SELECT parentid, MAX(score) AS maxScore FROM posts WHERE posttypeid = 2 GROUP BY parentid HAVING COUNT(score) > 1) AS maxScores ON rawUserScores.parentid = maxScores.parentid) AS userScores GROUP BY owneruserid) AS userScoreMetrics JOIN users ON userScoreMetrics.owneruserid = users.id ORDER BY users.reputation DESC","CreationDate":"2016-10-31 20:14:26","validated":false,"QueryBody_Original":"SELECT  users.id as [User Link],users.reputation,userScoreMetrics.avgScoreDeficit from\n\n(SELECT owneruserid,avg(cast(maxScore-score as float)) as avgScoreDeficit\n\nfrom\n\n(SELECT rawUserScores.parentid, maxScore,score,owneruserid from\n\n(SELECT score,owneruserid,parentid from posts where posttypeid = 2) as rawUserScores\n\njoin\n\n(SELECT parentid,max(score) as maxScore\nfrom posts where posttypeid = 2\ngroup by parentid having count(score) > 1) as maxScores\non rawUserScores.parentid = maxScores.parentid) as userScores group by owneruserid)\nas userScoreMetrics\n\njoin users on userScoreMetrics.owneruserid = users.id\norder by users.reputation desc"},{"QuerySetId":568677,"Title":"Low rep users using tag","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM posts, users AS u WHERE tags LIKE '%<##tag##>%' AND owneruserid = u.id AND u.reputation < 300) AS \"below 300 rep\", (SELECT COUNT(*) FROM posts, users AS u WHERE tags LIKE '%<##tag##>%' AND owneruserid = u.id) AS \"total\"","CreationDate":"2016-11-01 20:54:36","validated":false,"QueryBody_Original":"SELECT  (SELECT count(*) from posts, users u where tags like '%<##tag##>%'\nand owneruserid = u.id\nand u.reputation < 300) as 'below 300 rep',\n(SELECT count(*) from posts, users u where tags like '%<##tag##>%'\nand owneruserid = u.id) as 'total'"},{"QuerySetId":569652,"Title":"Users owning both Epic and Generalist badges","Description":null,"QueryBody":"SELECT DISTINCT u.* FROM badges AS g JOIN badges AS e ON e.userid = g.userid JOIN users AS u ON u.id = e.userid WHERE g.name IN ('Epic', 'Generalist') AND e.name IN ('Epic', 'Generalist') AND g.id <> e.id ORDER BY u.displayname","CreationDate":"2016-11-03 01:52:48","validated":false,"QueryBody_Original":"SELECT  distinct u.*\nfrom badges g\njoin badges e on e.userid = g.userid\njoin users u on u.id = e.userid\nwhere g.name in ('Epic', 'Generalist') and e.name in ('Epic', 'Generalist')\nand g.id <> e.id\norder by u.displayname;"},{"QuerySetId":569681,"Title":"High view count for unanswered questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount, Tags FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL AND AnswerCount = 0 AND NOT Id IN (SELECT PostId FROM PostHistory WHERE (PostHistoryTypeId IN (17, 18, 35, 37, 38))) ORDER BY ViewCount DESC LIMIT 100","CreationDate":"2016-11-03 02:34:48","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id as [Post Link], ViewCount, Tags FROM Posts \nWHERE PostTypeId = 1  \n       AND ClosedDate IS NULL \n       AND AnswerCount = 0\n       AND Id NOT IN (SELECT PostId \n                      FROM   PostHistory \n                      WHERE  (PostHistoryTypeId in (17,18,35,37,38)))\nORDER BY ViewCount DESC"},{"QuerySetId":569723,"Title":"Locations of users asked about MongoDB","Description":null,"QueryBody":"SELECT Users.Location, COUNT(1) FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.Tags LIKE '%docker%' AND NOT Users.Location IS NULL AND RTRIM(Users.Location) > '' GROUP BY Users.Location ORDER BY 2 DESC","CreationDate":"2020-04-02 18:38:45","validated":false,"QueryBody_Original":"SELECT  Users.Location, count(1)\nFROM Posts\nINNER JOIN Users\nON Posts.OwnerUserId = Users.Id\nWHERE Posts.Tags LIKE '%docker%'\nAND Users.Location IS NOT NULL\nAND RTrim(Users.Location) > ''\ngroup by Users.Location\nORDER BY 2 DESC;"},{"QuerySetId":571269,"Title":"Total number of unresolved questions with answer","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS q WHERE ClosedDate IS NULL AND q.ParentId IS NULL AND PostTypeId = 1 AND AcceptedAnswerId IS NULL AND AnswerCount > 1","CreationDate":"2017-12-09 12:43:07","validated":false,"QueryBody_Original":"SELECT  count(*)  from Posts q\nwhere ClosedDate is null  and q.ParentId is null and  PostTypeId = 1 \nand AcceptedAnswerId is null and AnswerCount > 1"},{"QuerySetId":571271,"Title":"Total number of unresolved questions without answers","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS q WHERE ClosedDate IS NULL AND q.ParentId IS NULL AND PostTypeId = 1 AND AcceptedAnswerId IS NULL AND AnswerCount = 0 AND YEAR(CreationDate) = 2016","CreationDate":"2019-04-01 18:26:57","validated":false,"QueryBody_Original":"SELECT  count(*)  from Posts q\nwhere ClosedDate is null  and q.ParentId is null and  PostTypeId = 1 \nand AcceptedAnswerId is null and AnswerCount = 0\nand year(CreationDate)=2016"},{"QuerySetId":571280,"Title":"Total number of  questions","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1","CreationDate":"2016-11-04 17:03:54","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts \nwhere PostTypeId = 1"},{"QuerySetId":571282,"Title":"Total number of resolved questions","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND AnswerCount > 0 AND NOT AcceptedAnswerId IS NULL","CreationDate":"2016-11-04 17:05:12","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts \nwhere PostTypeId = 1 and AnswerCount > 0\nand AcceptedAnswerId is not null"},{"QuerySetId":571288,"Title":"Total number of unresolved questions","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND AcceptedAnswerId IS NULL","CreationDate":"2017-10-30 18:39:30","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts \nwhere PostTypeId = 1 and AcceptedAnswerId is null"},{"QuerySetId":571616,"Title":"Comments from users with over 10k rep that contains \"what have you tried\"","Description":null,"QueryBody":"SELECT * FROM Comments JOIN Users ON Comments.UserId = Users.Id WHERE Text LIKE '%what have you tried%' AND YEAR(Comments.CreationDate) = 2016 AND Users.Reputation > 1000 LIMIT 2500","CreationDate":"2016-11-05 00:32:52","validated":false,"QueryBody_Original":"SELECT  TOP 2500 * \nFROM \n  Comments\nJOIN Users\n  ON Comments.UserId = Users.Id\nWHERE \n  Text LIKE '%what have you tried%'\nAND\n  YEAR(Comments.CreationDate) = 2016\nAND\n  Users.Reputation > 1000"},{"QuerySetId":573270,"Title":"Num of Score Buckets for High Score Questions where last edit user is in >200 bucket and original us","Description":null,"QueryBody":"SELECT COUNT(DISTINCT score) FROM Posts AS p JOIN (SELECT DISTINCT PostId FROM PostHistory WHERE PostHistoryTypeId IN (4, 5, 6)) AS ph ON postid = p.id JOIN Users AS u ON p.OwnerUserId = u.Id JOIN Users AS lu ON p.LastEditorUserId = lu.id WHERE p.posttypeid = 1 AND u.Reputation < 200 AND p.OwnerUserId <> p.LastEditorUserId AND p.DeletionDate IS NULL AND p.CommunityOwnedDate IS NULL AND p.ClosedDate IS NULL AND lu.Reputation >= 200 AND p.Score >= 10","CreationDate":"2016-11-07 07:27:46","validated":false,"QueryBody_Original":"SELECT  count(distinct score) \nfrom Posts p\nJoin \n  (SELECT distinct \n  PostId \n  from PostHistory \n  where PostHistoryTypeId in (4,5,6)) ph \n  on postid=p.id\nJoin Users u on p.OwnerUserId=u.Id\nJoin Users lu on p.LastEditorUserId=lu.id \nwhere p.posttypeid=1 \nand u.Reputation < 200 \nand p.OwnerUserId!=p.LastEditorUserId\nand p.DeletionDate is null\nand p.CommunityOwnedDate is null\nand p.ClosedDate is null \nand lu.Reputation>=200 \nand p.Score>=10;"},{"QuerySetId":573390,"Title":"Top 2.5k From The Netherlands","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%netherlands' ORDER BY Reputation DESC LIMIT 2500","CreationDate":"2016-11-07 14:54:11","validated":false,"QueryBody_Original":"SELECT  TOP 2500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%netherlands'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":574384,"Title":"Stack Overflow Users By Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Position, DisplayName, Reputation, WebsiteUrl, AboutMe, 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT(10)) AS ProfileUrl FROM Users ORDER BY Reputation DESC","CreationDate":"2018-12-18 03:50:57","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Position\n  ,DisplayName\n  ,Reputation\n  ,WebsiteUrl\n  ,AboutMe\n  ,'http:\/\/stackoverflow.com\/users\/' + CONVERT(VARCHAR(10), Id) AS ProfileUrl\nFROM\n  Users\nORDER BY\n  Reputation\nDESC;"},{"QuerySetId":574745,"Title":"Check for Greater Seattle ","Description":null,"QueryBody":"SELECT DISTINCT reputation, location, websiteUrl FROM users WHERE LOWER(location) LIKE '%seattle%' AND LOWER(AboutMe) LIKE '%microsoft%'","CreationDate":"2016-11-09 05:59:32","validated":false,"QueryBody_Original":"SELECT  distinct reputation,location,websiteUrl\nfrom users \nwhere lower (location) like '%seattle%'\nAND lower(AboutMe) like '%microsoft%'"},{"QuerySetId":575957,"Title":"Score to post length ratio","Description":null,"QueryBody":"SELECT id AS \"Post Link\", Score, LENGTH(body) AS Length, CAST(score AS FLOAT) \/ LENGTH(body) AS Ratio, OwnerUserId AS \"User Link\" FROM posts WHERE body <> '' AND score > 100 ORDER BY CAST(score AS FLOAT) \/ LENGTH(body) DESC","CreationDate":"2016-11-11 05:48:04","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], Score, len(body) as Length, cast(score as float) \/ len(body) as Ratio, OwnerUserId as [User Link]\nfrom posts\nwhere body <> ''\nand score > 100\norder by cast(score as float) \/ len(body) desc"},{"QuerySetId":576534,"Title":"Find new questions with no answers","Description":null,"QueryBody":"SELECT Posts.CreationDate, Posts.Id, Posts.Title, Posts.Tags, Posts.ViewCount, Posts.Body, Posts.OwnerUserId, Posts.OwnerDisplayName, Posts.Score, Posts.FavoriteCount, Posts.PostTypeId, Posts.LastEditDate, Posts.LastActivityDate, Posts.FavoriteCount, Posts.ClosedDate, Users.Reputation, Users.UpVotes, Users.DownVotes, Users.Age, Users.CreationDate, Users.WebsiteUrl, Users.Location FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.AnswerCount = 0 ORDER BY Posts.CreationDate DESC LIMIT 10000","CreationDate":"2016-11-11 23:49:32","validated":false,"QueryBody_Original":"SELECT  TOP 10000\n  Posts.CreationDate\n, Posts.Id\n, Posts.Title\n, Posts.Tags\n, Posts.ViewCount\n, Posts.Body\n, Posts.OwnerUserId\n, Posts.OwnerDisplayName\n, Posts.Score\n, Posts.FavoriteCount\n, Posts.PostTypeId\n, Posts.LastEditDate\n, Posts.LastActivityDate\n, Posts.FavoriteCount\n, Posts.ClosedDate\n, Users.Reputation\n, Users.UpVotes\n, Users.DownVotes\n, Users.Age\n, Users.CreationDate\n, Users.WebsiteUrl\n, Users.Location\nFROM\n  Posts JOIN Users ON Posts.OwnerUserId = Users.Id\nWHERE\n  Posts.AnswerCount = 0\nORDER BY\n  Posts.CreationDate DESC"},{"QuerySetId":576856,"Title":"Top 200 Comments Containing 'Accept' or 'Upvote'","Description":null,"QueryBody":"SELECT Id, Text, Id AS \"Comment Link\" FROM Comments WHERE LENGTH(Text) < 20 AND Text LIKE '%accept my answer%' OR Text LIKE '%please accept%' OR Text LIKE '%upvote please%' ORDER BY Id DESC LIMIT 200","CreationDate":"2016-11-13 05:33:35","validated":false,"QueryBody_Original":"SELECT  TOP 200 Id, Text, Id as [Comment Link]\nFrom Comments\nWhere LEN(Text) < 20 AND Text like '%accept my answer%'\nOR Text like '%please accept%' OR Text like '%upvote please%'\nORDER BY Id DESC"},{"QuerySetId":576896,"Title":"Allan Gray Technical Test SQL Assignment 1","Description":null,"QueryBody":"SELECT SUBSTRING(COMMENTS.Text, 1, 50) AS Comment, COMMENTS.CreationDate AS LatestDate FROM COMMENTS WHERE COMMENTS.CreationDate = (SELECT MAX(COMMENTS.CreationDate) FROM COMMENTS WHERE COMMENTS.UserId = (SELECT Id FROM USERS WHERE Users.DisplayName = 'Mat Mannion')) GROUP BY COMMENTS.Text, COMMENTS.CreationDate","CreationDate":"2016-11-13 13:36:39","validated":false,"QueryBody_Original":"SELECT  SUBSTRING(COMMENTS.Text, 1, 50) AS Comment, COMMENTS.CreationDate AS LatestDate\nFROM COMMENTS  \nWHERE COMMENTS.CreationDate = (  \nSELECT MAX(COMMENTS.CreationDate)\nFROM COMMENTS\nWHERE COMMENTS.UserId = (\nSELECT Id FROM USERS\nWHERE Users.DisplayName = 'Mat Mannion'))\nGROUP BY COMMENTS.Text, COMMENTS.CreationDate;"},{"QuerySetId":577437,"Title":"Top 50 users from Gujarat","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%maharashtra%' OR UPPER(Location) LIKE '%MAHARASHTRA%' ORDER BY Reputation DESC LIMIT 5000","CreationDate":"2019-10-02 15:14:25","validated":false,"QueryBody_Original":"SELECT  TOP 5000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%maharashtra%'\n    OR UPPER(Location) LIKE '%MAHARASHTRA%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":577603,"Title":"SELECT TOP 10 * FROM Posts","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE YEAR(CreationDate) < 2010","CreationDate":"2016-11-14 18:31:28","validated":false,"QueryBody_Original":"SELECT  DisplayName FROM Users where year(CreationDate)<2010"},{"QuerySetId":578503,"Title":"Highest Voted Comments on SFF","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Score, Text FROM Comments ORDER BY Score DESC LIMIT 250","CreationDate":"2016-11-15 14:47:59","validated":false,"QueryBody_Original":"SELECT  TOP 250\n    PostId AS [Post Link],\n    Score,\n    Text\nFROM Comments\nORDER BY Score DESC"},{"QuerySetId":579254,"Title":"Gold Tag Badges by Country","Description":"Find people with a tag-based gold badge in a certain country.\r\nUseful to search experts on a given subject.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE LOWER(Users.Location) LIKE LOWER('%##CountryName##%') AND Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 AND LOWER(Badges.name) = LOWER('##TagName##') ORDER BY Reputation DESC","CreationDate":"2017-11-07 02:08:33","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    LOWER(Users.Location) LIKE LOWER('%##CountryName##%')\n    AND Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    AND LOWER(Badges.name) = LOWER('##TagName##')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":579259,"Title":"Silver Tag Badges by Country","Description":"Find people with a tag-based silver badge in a certain country.\r\nUseful to search experts on a given subject.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE LOWER(Users.Location) LIKE LOWER('%##CountryName##%') AND Users.Id = Badges.UserId AND Badges.Class = 2 AND Badges.TagBased = 1 AND LOWER(Badges.name) = LOWER('##TagName##') ORDER BY Reputation DESC","CreationDate":"2016-11-16 19:27:32","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    LOWER(Users.Location) LIKE LOWER('%##CountryName##%')\n    AND Users.Id = Badges.UserId\n    AND Badges.Class = 2\n    AND Badges.TagBased = 1\n    AND LOWER(Badges.name) = LOWER('##TagName##')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":579271,"Title":"Gold Badges for JavaScript Worldwide","Description":"Find worldwide experts on JavaScript","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 1 AND Badges.TagBased = 1 AND Badges.name = 'javascript' ORDER BY Reputation DESC","CreationDate":"2016-11-16 19:41:39","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 1\n    AND Badges.TagBased = 1\n    AND Badges.name = 'javascript'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":579274,"Title":"Bronze Badges for Node.js Worldwide","Description":"Find worldwide experts on Node.js","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 AND Badges.name = 'node.js' ORDER BY Reputation DESC","CreationDate":"2016-11-16 19:43:06","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    AND Badges.name = 'node.js'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":579280,"Title":"Bronze Badges for Node.js in Poland","Description":"Find experts on Node.js in Poland","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 AND Badges.name = 'node.js' AND LOWER(Users.Location) LIKE LOWER('%Norway%') ORDER BY Reputation DESC","CreationDate":"2016-12-07 10:47:22","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    AND Badges.name = 'node.js'\n    AND LOWER(Users.Location) LIKE LOWER('%Norway%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":579321,"Title":"Count Stack Overflow Users per Country","Description":null,"QueryBody":"SELECT COUNT(1) FROM Users WHERE LOWER(Users.Location) LIKE LOWER('%Poland%')","CreationDate":"2017-03-07 18:43:50","validated":false,"QueryBody_Original":"SELECT  count(1) from Users where lower(Users.Location) like lower('%Poland%');"},{"QuerySetId":579655,"Title":"details of top users from india and japan","Description":null,"QueryBody":"SELECT * FROM Users WHERE UPPER(Location) LIKE '%IND' OR UPPER(Location) LIKE '%JPN' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2016-11-17 17:44:49","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    *\nFROM\n    Users\nWHERE\n    UPPER(Location) LIKE '%IND'\n    OR UPPER(Location) LIKE '%JPN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":580295,"Title":"select * from Users where id = <975271>","Description":null,"QueryBody":"SELECT * FROM Users WHERE id = 975271","CreationDate":"2016-11-18 19:56:11","validated":false,"QueryBody_Original":"SELECT  * from Users where id = 975271"},{"QuerySetId":580985,"Title":"Schema of Stack Exchange data dump","Description":"http:\/\/meta.stackexchange.com\/questions\/287120\/schema-of-stack-exchange-data-dump","QueryBody":"SELECT * FROM posts WHERE posttypeid = 6 \/* nominations *\/ AND creationdate BETWEEN '2014-02-10' AND '2014-02-25'","CreationDate":"2020-10-30 14:56:48","validated":false,"QueryBody_Original":"SELECT  *\nfrom posts\nwhere posttypeid = 6 -- nominations\nand creationdate between '2014-02-10' \n                 and '2014-02-25'"},{"QuerySetId":582017,"Title":"Top 2000 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 2000","CreationDate":"2016-11-22 22:31:44","validated":false,"QueryBody_Original":"SELECT  TOP 2000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":582313,"Title":"Which tag has the most posts?","Description":null,"QueryBody":"SELECT id, tagname, \"count\" FROM tags ORDER BY \"count\" DESC","CreationDate":"2016-11-23 12:04:16","validated":false,"QueryBody_Original":"SELECT  id,tagname,[count] from tags\norder by [count] desc"},{"QuerySetId":582318,"Title":"select count (*) from Posts","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts","CreationDate":"2016-11-23 12:35:33","validated":false,"QueryBody_Original":"SELECT  count (*) from Posts"},{"QuerySetId":582764,"Title":"Users with more than 1 rep","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE Reputation > 1","CreationDate":"2016-11-24 01:32:15","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFrom Users\nWhere Reputation>1"},{"QuerySetId":582938,"Title":"top 100 users from japan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%japan%' OR UPPER(Location) LIKE '%JP' OR UPPER(Location) LIKE '%JPN' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-11-24 06:01:37","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%japan%'\n    OR UPPER(Location) LIKE '%JP'\n    OR UPPER(Location) LIKE '%JPN'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":582940,"Title":"CW posts edited by their original posters after becoming CW without enough rep to edit CW now","Description":null,"QueryBody":"SELECT postid AS \"Post Link\", userid AS \"User Link\", pho.creationdate FROM posthistory AS pho INNER JOIN users ON userid = users.id INNER JOIN posts ON owneruserid = users.id AND posts.id = postid WHERE posthistorytypeid BETWEEN 4 \/* edit title *\/ AND 9 \/* rollback tags *\/ AND pho.creationdate > posts.communityowneddate AND users.reputation < 100 \/* CW editing (as of now, not the time of editing) *\/","CreationDate":"2016-11-24 06:18:12","validated":false,"QueryBody_Original":"SELECT  postid as [Post Link], userid as [User Link], pho.creationdate\nfrom posthistory pho\ninner join users on userid = users.id\ninner join posts on owneruserid = users.id and posts.id = postid\nwhere posthistorytypeid between 4  -- edit title\n  and 9                            -- rollback tags\n  and pho.creationdate > posts.communityowneddate\n  and users.reputation < 100     -- CW editing (as of now, not the time of editing)"},{"QuerySetId":583560,"Title":"Stackoverflow Kerala top users ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation) AS \"#\", Id AS \"User Link\", Reputation, Age, CreationDate, Location FROM Users WHERE UPPER(Location) LIKE '%KERALA%' OR UPPER(Location) LIKE '%KANNUR%' OR UPPER(Location) LIKE '%COCHIN%' OR UPPER(Location) LIKE '%TRIVANDRUM%' OR UPPER(Location) LIKE '%THIRUVANANTHAPURAM%' OR UPPER(Location) LIKE '%KOCHI%' OR UPPER(Location) LIKE '%ERNAKULAM%' OR UPPER(Location) LIKE '%PALAKKAD%' OR UPPER(Location) LIKE '%KOZHIKODE%' OR UPPER(Location) LIKE '%IDUKKI%' OR UPPER(Location) LIKE '%THRISSUR%' OR UPPER(Location) LIKE '%MALAPPURAM%' OR UPPER(Location) LIKE '%KOTTAYAM%' OR UPPER(Location) LIKE '%KOLLAM%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-11-25 09:30:57","validated":false,"QueryBody_Original":"SELECT \nTOP (100) ROW_NUMBER() OVER(ORDER BY Reputation ASC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Age,\n    CreationDate,\n    Location\nFROM\n    Users\nWHERE\n    UPPER(Location) LIKE '%KERALA%'\n    OR UPPER(Location) LIKE '%KANNUR%'\n    OR UPPER(Location) LIKE '%COCHIN%'\n    OR UPPER(Location) LIKE '%TRIVANDRUM%'\n    OR UPPER(Location) LIKE '%THIRUVANANTHAPURAM%'\n    OR UPPER(Location) like '%KOCHI%'\n    OR UPPER(Location) like '%ERNAKULAM%'\n    OR UPPER(Location) like '%PALAKKAD%'\n    OR UPPER(Location) like '%KOZHIKODE%'\n    OR UPPER(Location) like '%IDUKKI%'\n    OR UPPER(Location) like '%THRISSUR%'\n    OR UPPER(Location) like '%MALAPPURAM%'\n    OR UPPER(Location) like '%KOTTAYAM%'\n    OR UPPER(Location) like '%KOLLAM%'\nORDER BY\n    Reputation DESC\n    ;"},{"QuerySetId":584196,"Title":" Number of badges developer android","Description":null,"QueryBody":"SELECT Title, AnswerCount FROM Posts WHERE UPPER(Tags) LIKE '%ANDROID%' ORDER BY AnswerCount DESC","CreationDate":"2016-11-26 02:17:28","validated":false,"QueryBody_Original":"SELECT  Title, AnswerCount\nFROM Posts\nWHERE UPPER(Tags) LIKE '%ANDROID%'\nORDER BY AnswerCount DESC"},{"QuerySetId":584333,"Title":"Usuarios con poder de voto a favor","Description":null,"QueryBody":"SELECT COUNT(*) AS Votantes FROM Users WHERE Reputation >= 15","CreationDate":"2016-11-26 10:04:09","validated":false,"QueryBody_Original":"SELECT  count(*) as Votantes FROM Users WHERE Reputation >= 15;"},{"QuerySetId":585131,"Title":"SELECT * FROM TAGS ORDER BY Count","Description":null,"QueryBody":"SELECT * FROM TAGS ORDER BY Count DESC","CreationDate":"2016-11-28 02:20:59","validated":false,"QueryBody_Original":"SELECT  * FROM TAGS ORDER BY Count DESC"},{"QuerySetId":585244,"Title":"select Tags from  Posts","Description":null,"QueryBody":"SELECT Tags FROM Posts WHERE NOT Tags IS NULL","CreationDate":"2016-11-28 14:09:51","validated":false,"QueryBody_Original":"SELECT  Tags from Posts where Tags is not null"},{"QuerySetId":585298,"Title":"Top 30 Users from Milan, Italy","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%toulouse%' ORDER BY Reputation DESC LIMIT 30","CreationDate":"2016-11-28 16:58:17","validated":false,"QueryBody_Original":"SELECT  TOP 30\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%toulouse%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":585549,"Title":"select title from posts where viewcount > 100000","Description":null,"QueryBody":"SELECT title FROM posts WHERE viewcount > 100000","CreationDate":"2016-11-28 19:39:35","validated":false,"QueryBody_Original":"SELECT  title from posts where viewcount > 100000"},{"QuerySetId":586108,"Title":"SELECT TOP 10 Text FROM Comments WHERE Text LIKE \"%XY %\"","Description":null,"QueryBody":"SELECT Text FROM Comments WHERE Text LIKE '%XY %' LIMIT 10","CreationDate":"2019-10-09 16:45:38","validated":false,"QueryBody_Original":"SELECT  TOP 10 Text FROM Comments WHERE Text LIKE '%XY %'"},{"QuerySetId":586409,"Title":"users who have answered a question","Description":null,"QueryBody":"SELECT COUNT(DISTINCT users.id) FROM users JOIN posts ON users.id = OwnerUserId WHERE posts.posttypeid = 2","CreationDate":"2016-11-29 23:15:20","validated":false,"QueryBody_Original":"SELECT  count(distinct users.id)\nfrom users\njoin posts on users.id=OwnerUserId\nwhere posts.posttypeid=2"},{"QuerySetId":588814,"Title":"Top 10 users from Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, age FROM Users WHERE LOWER(Location) LIKE '%iran%' OR UPPER(Location) LIKE '%ir' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2016-12-02 10:59:32","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    age\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%iran%'\n    OR UPPER(Location) LIKE '%ir'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":589319,"Title":"TOP 50 users from Sweden","Description":"Lists the top 50 users (ranked by reputation) that are located in Calicut\/Kozhikode, Kerala, India according to their profile information.\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Sweden%' ORDER BY reputation DESC LIMIT 50","CreationDate":"2016-12-03 15:38:33","validated":false,"QueryBody_Original":"SELECT  TOP 50\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Sweden%'\nORDER BY\n   reputation DESC"},{"QuerySetId":589905,"Title":"short thanks finder with 0 votes","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Score, Text, CreationDate, PostId FROM Comments WHERE LENGTH(Text) < 40 AND Text LIKE '%fix%' ORDER BY PostId","CreationDate":"2016-12-04 08:24:34","validated":false,"QueryBody_Original":"SELECT \n  PostId AS [Post Link],\n  Score,\n  Text,\n  CreationDate,\n  PostId\nFROM Comments\nWHERE LEN(Text) < 40 AND\nText LIKE '%fix%'\nORDER BY\n  PostId ASC"},{"QuerySetId":590327,"Title":"Get Comments on all the posts created on or after Jan 1 2016","Description":null,"QueryBody":"SELECT Comments.Id, Comments.PostId, Posts.PostTypeId, Comments.Score, Comments.Text, Comments.CreationDate, Posts.CreationDate, Posts.AnswerCount, Posts.CommentCount, Users.Id, Users.Reputation, Users.Views, Users.UpVotes, Users.DownVotes FROM Comments, Users, Posts WHERE Comments.UserId = Users.Id AND Posts.Id = Comments.PostId AND Posts.id IN (SELECT Posts.id FROM Posts WHERE Posts.PostTypeid = 1 AND Posts.CommentCount > 0 AND Posts.CreationDate > '2016-01-01 00:00:00' UNION SELECT P2.id FROM Posts AS P2 WHERE P2.posttypeid = 2 AND P2.CommentCount > 2 AND P2.parentid IN (SELECT P1.id FROM Posts AS P1 WHERE P2.CreationDate > '2016-01-01 00:00:00')) ORDER BY Comments.id","CreationDate":"2016-12-05 03:24:31","validated":false,"QueryBody_Original":"SELECT  Comments.Id, Comments.PostId, Posts.PostTypeId, Comments.Score, \nComments.Text, Comments.CreationDate, Posts.CreationDate, \nPosts.AnswerCount, Posts.CommentCount, Users.Id, Users.Reputation, \nUsers.Views, Users.UpVotes, Users.DownVotes \nfrom Comments, Users, Posts \nwhere Comments.UserId = Users.Id \nand Posts.Id = Comments.PostId \nand Posts.id \nin\n(SELECT Posts.id from Posts \n    where Posts.PostTypeid = 1 \n    and Posts.CommentCount>0 \n    and Posts.CreationDate > '2016-01-01 00:00:00'\nUNION\nSELECT P2.id \n  from Posts P2 \n  where P2.posttypeid = 2 \n  and P2.CommentCount>2 \n  and P2.parentid \n  in \n  (SELECT P1.id \n      from Posts P1 \n      where P2.CreationDate > '2016-01-01 00:00:00'))\norder by Comments.id"},{"QuerySetId":591307,"Title":"Is there a way of determining how many and which users were active on a given day?","Description":"http:\/\/meta.hinduism.stackexchange.com\/questions\/693\/is-there-a-way-of-determining-how-many-and-which-users-were-active-on-a-given-da\/697#697","QueryBody":"SELECT activedate, COUNT(*) AS \"# users\" FROM (SELECT DISTINCT CAST(creationdate AS DATE) AS \"activedate\", owneruserid FROM (SELECT creationdate, owneruserid FROM posts UNION SELECT lasteditdate, lasteditoruserid FROM posts UNION SELECT creationdate, userid FROM comments) AS data) AS uniquerows GROUP BY activedate ORDER BY activedate","CreationDate":"2016-12-06 17:01:03","validated":false,"QueryBody_Original":"SELECT  activedate\n     , count(*) [# users]\nfrom\n(\nSELECT distinct cast(creationdate as date) as [activedate]\n     , owneruserid\nfrom\n(\nSELECT creationdate \n     , owneruserid \nfrom posts\nunion \nSELECT lasteditdate \n     , lasteditoruserid\nfrom posts \nunion\nSELECT creationdate\n     , userid\nfrom comments\n) data\n) uniquerows\ngroup by activedate\norder by activedate"},{"QuerySetId":591353,"Title":"random's edit summaries are legendary","Description":null,"QueryBody":"SELECT DISTINCT PostId AS \"Post Link\", \"Comment\" FROM PostHistory WHERE UserId = 9314 AND LENGTH(\"Comment\") > 5 AND STR_POSITION(\"Comment\", 'edited') <> 1 AND STR_POSITION(\"Comment\", 'added') <> 1 AND STR_POSITION(\"Comment\", 'Rollback') <> 1","CreationDate":"2016-12-06 20:40:42","validated":false,"QueryBody_Original":"SELECT  Distinct PostId As [Post Link], [Comment]\nFrom PostHistory\nWhere UserId=9314 And Len([Comment])>5 \n  And CharIndex('edited', [Comment])<>1\n  And CharIndex('added', [Comment])<>1\n  And CharIndex('Rollback', [Comment])<>1"},{"QuerySetId":591765,"Title":"Rough Average Number of Characters in an Answer","Description":null,"QueryBody":"SELECT AVG(LENGTH(ph.text)) FROM posts AS p LEFT JOIN posthistory AS ph ON p.id = ph.postid WHERE p.posttypeid = 1 AND ph.posthistorytypeid IN (2, 5)","CreationDate":"2016-12-07 06:16:17","validated":false,"QueryBody_Original":"SELECT  avg(len(ph.text))\nfrom posts p\nleft join posthistory ph on p.id = ph.postid\nwhere p.posttypeid = 1\nand ph.posthistorytypeid in (2, 5)"},{"QuerySetId":592336,"Title":"List of posts with pending delete votes","Description":null,"QueryBody":"SELECT p.Id, COUNT(*) AS DelVote, p.Score AS Score, p.Id AS \"Post Link\", CASE WHEN p.PostTypeId = 1 THEN 'Q' WHEN p.PostTypeId = 2 THEN 'A' ELSE '?' END AS Type, p.DeletionDate FROM Posts AS p JOIN Votes AS V ON v.PostId = p.Id WHERE VoteTypeId = 11 AND NOT p.DeletionDate IS NULL GROUP BY p.Id, p.PostTypeId, p.Score, p.DeletionDate ORDER BY DelVote DESC","CreationDate":"2017-03-02 15:47:35","validated":false,"QueryBody_Original":"SELECT \n  p.Id,\n  COUNT(*) AS DelVote,\n  p.Score AS Score,\n  p.Id AS [Post Link],\n  CASE\n    WHEN p.PostTypeId = 1 THEN 'Q'\n    WHEN p.PostTypeId = 2 THEN 'A'\n    ELSE '?'\n  END AS Type,\n  p.DeletionDate\nFROM\n  Posts p JOIN\n  Votes V ON v.PostId = p.Id\nWHERE VoteTypeId = 11 AND p.DeletionDate IS NOT NULL\nGROUP BY p.Id, p.PostTypeId, p.Score, p.DeletionDate\nORDER BY DelVote DESC"},{"QuerySetId":592393,"Title":"Top 20 highest upvoted Questions regarding Amazon Appstore","Description":null,"QueryBody":"SELECT p.Title, p.Body, COUNT(v.PostID), v.PostID AS \"Post Link\", p.Tags FROM Posts AS P JOIN Votes AS V ON p.Id = v.Postid WHERE PostTypeId = 1 AND VoteTypeId = 2 AND p.Tags LIKE '%amazon-appstore%' GROUP BY p.Title, p.Body, v.PostID, p.Tags ORDER BY COUNT(v.PostID) LIMIT 20","CreationDate":"2016-12-07 20:39:49","validated":false,"QueryBody_Original":"SELECT  TOP 20 p.Title, p.Body, COUNT(v.PostID), v.PostID AS [Post Link], p.Tags\nFROM Posts P\nJOIN Votes V on p.Id=v.Postid\nWHERE PostTypeId = 1 \nAND VoteTypeId=2 \nAND p.Tags LIKE '%amazon-appstore%'\nGROUP BY p.Title, p.Body, v.PostID, p.Tags\nORDER BY COUNT(v.PostID) ASC"},{"QuerySetId":592406,"Title":"Top 20 highest upvoted questions regarding Porting and Android","Description":null,"QueryBody":"SELECT p.Title, p.Body, COUNT(v.PostID), v.PostID AS \"Post Link\", p.Tags FROM Posts AS P JOIN Votes AS V ON p.Id = v.Postid WHERE PostTypeId = 1 AND VoteTypeId = 2 AND p.Tags LIKE '%android%' AND p.Tags LIKE '%port%' AND p.Tags LIKE '%porting%' GROUP BY p.Title, p.Body, v.PostID, p.Tags ORDER BY COUNT(v.PostID) LIMIT 20","CreationDate":"2016-12-07 20:53:06","validated":false,"QueryBody_Original":"SELECT  TOP 20 p.Title, p.Body, COUNT(v.PostID), v.PostID AS [Post Link], p.Tags\nFROM Posts P\nJOIN Votes V on p.Id=v.Postid\nWHERE PostTypeId = 1 \nAND VoteTypeId=2 \nAND p.Tags LIKE '%android%'\nAND p.Tags LIKE '%port%'\nAND p.Tags LIKE '%porting%'\nGROUP BY p.Title, p.Body, v.PostID, p.Tags\nORDER BY COUNT(v.PostID) ASC"},{"QuerySetId":592813,"Title":"Amazon Appstore questions asked in 2015","Description":null,"QueryBody":"SELECT p.Title, p.Body, TIME_TO_STR(p.CreationDate, '%Year'), v.PostID AS \"Post Link\", p.Tags FROM Posts AS P JOIN Votes AS V ON p.Id = v.Postid WHERE PostTypeId = 1 AND VoteTypeId = 2 AND p.Tags LIKE '%amazon-appstore%' AND TIME_TO_STR(p.CreationDate, '%Year') = 2015 GROUP BY p.Title, p.Body, v.PostID, p.Tags, p.CreationDate LIMIT 20","CreationDate":"2016-12-08 18:11:26","validated":false,"QueryBody_Original":"SELECT  TOP 20 p.Title, p.Body, DATEPART(Year, p.CreationDate), v.PostID AS [Post Link], p.Tags\nFROM Posts P\nJOIN Votes V on p.Id=v.Postid\nWHERE PostTypeId = 1 \nAND VoteTypeId=2 \nAND p.Tags LIKE '%amazon-appstore%'\nAND DATEPART(Year, p.CreationDate) = 2015\nGROUP BY p.Title, p.Body, v.PostID, p.Tags, p.CreationDate"},{"QuerySetId":592871,"Title":"Titre des posts qui ont \u00e9t\u00e9 cr\u00e9\u00e9s par un utilisateur qui ne s\u2019est jamais connect\u00e9 depuis la cr\u00e9ation","Description":null,"QueryBody":"SELECT OwnerUserId, DAY(ClosedDate - CreationDate) AS NbOuverts FROM Posts WHERE NOT ClosedDate IS NULL AND DAY(ClosedDate - CreationDate) < 21","CreationDate":"2016-12-08 23:35:25","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, Day(ClosedDate - CreationDate) as NbOuverts\nFROM Posts\nWHERE ClosedDate IS NOT NULL\nAND Day(ClosedDate - CreationDate) < 21"},{"QuerySetId":593058,"Title":"Le nombre de commentaire moyen d\u2019un utilisateur par post.","Description":null,"QueryBody":"SELECT Users.Id, Comments.PostId, COUNT(*) FROM Users JOIN Comments ON Users.Id = Comments.UserId GROUP BY Users.Id, Comments.PostId ORDER BY Users.Id","CreationDate":"2016-12-09 02:18:02","validated":false,"QueryBody_Original":"SELECT  Users.Id, Comments.PostId, Count(*)\nFROM Users\nJOIN Comments\nON Users.Id = Comments.UserId\nGROUP BY Users.Id, Comments.PostId\nORDER BY Users.Id"},{"QuerySetId":593969,"Title":"Who contributed answers to my questions?","Description":null,"QueryBody":"SELECT * FROM Posts WHERE OwnerUserId = 119890 AND PostTypeId = 1","CreationDate":"2016-12-09 23:54:23","validated":false,"QueryBody_Original":"SELECT  *\nFrom Posts\nWhere OwnerUserId = 119890 And\n      PostTypeId  = 1;"},{"QuerySetId":595800,"Title":"question and answers for the last 1 year","Description":null,"QueryBody":"SELECT Posts.Body FROM Posts WHERE CreationDate >= '2016-12-01 00:00:01'","CreationDate":"2016-12-12 09:49:50","validated":false,"QueryBody_Original":"SELECT  Posts.Body\nFROM Posts\nwhere CreationDate >= '2016-12-01 00:00:01'"},{"QuerySetId":596342,"Title":"Top 12 Upvoted amazon-appstore questions","Description":null,"QueryBody":"SELECT COUNT(v.PostID), v.PostID AS \"Post Link\", p.Tags, TIME_TO_STR(p.CreationDate, '%Year') FROM Posts AS P JOIN Votes AS V ON p.Id = v.Postid WHERE PostTypeId = 1 AND VoteTypeId = 2 AND p.Tags LIKE '%amazon-appstore%' GROUP BY p.Title, p.Body, v.PostID, p.Tags, TIME_TO_STR(p.CreationDate, '%Year') ORDER BY COUNT(v.PostID) DESC LIMIT 12","CreationDate":"2016-12-13 20:52:54","validated":false,"QueryBody_Original":"SELECT  TOP 12 COUNT(v.PostID), v.PostID AS [Post Link], p.Tags, DATEPART(Year,p.CreationDate)\nFROM Posts P\nJOIN Votes V on p.Id=v.Postid\nWHERE PostTypeId = 1 \nAND VoteTypeId=2 \nAND p.Tags LIKE '%amazon-appstore%'\nGROUP BY p.Title, p.Body, v.PostID, p.Tags, DATEPART(Year,p.CreationDate)\nORDER BY COUNT(v.PostID) DESC"},{"QuerySetId":596690,"Title":"Questions with no programming language tags","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate AS \"Date\", Tags FROM Posts WHERE ClosedDate IS NULL AND NOT Tags LIKE '%c%' AND NOT Tags LIKE '%c++%' AND NOT Tags LIKE '%java%' AND NOT Tags LIKE '%c#%' AND NOT Tags LIKE '%javascript%' ORDER BY CreationDate LIMIT 500","CreationDate":"2016-12-13 05:09:31","validated":false,"QueryBody_Original":"SELECT  TOP 500 Id AS [Post Link]\n             , CreationDate AS [Date]\n             , Tags\nFROM Posts\nWHERE ClosedDate IS NULL\n    AND Tags NOT LIKE '%c%'\n    AND Tags NOT LIKE '%c++%'\n    AND Tags NOT LIKE '%java%'\n    AND Tags NOT LIKE '%c#%'\n    AND Tags NOT LIKE '%javascript%'\nORDER BY CreationDate"},{"QuerySetId":599207,"Title":"Links to the viXra alias rxiv.org","Description":"Kill them with fire! (i.e. the alias rxiv.org is misleading and deceptive - the links are OK, but they should be changed to vixra.org, or otherwise clearly labelled.)","QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE Body LIKE '%[^aA\"bio\"]rxiv%' ORDER BY CreationDate DESC","CreationDate":"2016-12-15 13:46:08","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  Body\nFROM Posts\nWHERE Body LIKE '%[^aA\"bio\"]rxiv%'\nORDER BY CreationDate DESC"},{"QuerySetId":599258,"Title":"Questions with accepted answer ","Description":null,"QueryBody":"SELECT COUNT(Questions.Id) FROM Posts AS Questions WHERE Questions.CreationDate BETWEEN '2016-11-14' AND '2016-12-14'","CreationDate":"2016-12-15 16:42:21","validated":false,"QueryBody_Original":"SELECT  count(Questions.Id) from Posts as Questions where \nQuestions.CreationDate BETWEEN '2016-11-14'AND '2016-12-14';"},{"QuerySetId":601135,"Title":"Recent unanswered questions by users with at least 100 reputation","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Score, u.Reputation, a.Tags, a.AnswerCount, a.CreationDate FROM Posts AS a INNER JOIN Users AS u ON u.Id = a.OwnerUserId WHERE a.ParentId IS NULL AND a.AcceptedAnswerId IS NULL AND u.Reputation > 100 AND (a.Tags LIKE '%python%' OR a.Tags LIKE '%c++%') ORDER BY a.CreationDate DESC LIMIT 100","CreationDate":"2016-12-20 21:46:48","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  a.Id as [Post Link],\n  a.Score,\n  u.Reputation,\n  a.Tags,\n  a.AnswerCount,\n  a.CreationDate\nFROM Posts a\nINNER JOIN Users u ON u.Id = a.OwnerUserId\nWHERE a.ParentId is null\n  AND a.AcceptedAnswerId is null\n  AND u.Reputation > 100\n  AND (a.Tags LIKE '%python%' OR a.Tags LIKE '%c++%')\nORDER BY a.CreationDate DESC"},{"QuerySetId":601817,"Title":"Most Viewed Questions on Salesforce StackExchange","Description":null,"QueryBody":"SELECT Questions.Id AS \"Post Link\", Questions.Title, Questions.ViewCount FROM Posts AS Questions GROUP BY Questions.Id, Questions.Title, Questions.ViewCount ORDER BY ViewCount DESC LIMIT 20","CreationDate":"2016-12-17 06:39:46","validated":false,"QueryBody_Original":"SELECT  TOP 20\n  Questions.Id AS [Post Link],\n  Questions.Title, \n  Questions.ViewCount\nFROM Posts  AS Questions \nGROUP BY\n  Questions.Id,\n  Questions.Title, \n  Questions.ViewCount\nORDER BY ViewCount DESC"},{"QuerySetId":603365,"Title":"number of users by tag","Description":null,"QueryBody":"SELECT Location, COUNT(*) FROM Users WHERE Location LIKE '%portugal%' OR Location LIKE '%lisbon%' OR Location LIKE '%lisboa%' GROUP BY Location","CreationDate":"2016-12-18 16:14:16","validated":false,"QueryBody_Original":"SELECT  Location, COUNT(*) FROM Users\n  WHERE Location LIKE '%portugal%' OR Location LIKE '%lisbon%' OR Location LIKE '%lisboa%'\n  GROUP BY Location;"},{"QuerySetId":603438,"Title":"User count by city in Estonia","Description":null,"QueryBody":"SELECT Location, COUNT(*) FROM Users WHERE LOWER(Location) LIKE '%berlin%' OR LOWER(Location) LIKE '%stockholm%' OR LOWER(Location) LIKE '%helsinki%' OR LOWER(Location) LIKE '%london%' GROUP BY Location","CreationDate":"2016-12-18 17:02:39","validated":false,"QueryBody_Original":"SELECT  Location, COUNT(*) FROM Users\nWHERE\n  LOWER(Location) LIKE '%berlin%' OR\n  LOWER(Location) LIKE '%stockholm%' OR\n  LOWER(Location) LIKE '%helsinki%' OR\n  LOWER(Location) LIKE '%london%'\n  GROUP BY Location;"},{"QuerySetId":603473,"Title":"User counts by city in Italy","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE LOWER(Location) LIKE '%switzerland%' OR LOWER(Location) LIKE '%schweiz%' OR LOWER(Location) LIKE '%suisse%'","CreationDate":"2016-12-18 18:51:38","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Users WHERE LOWER(Location) LIKE '%switzerland%' OR LOWER(Location) LIKE '%schweiz%'  OR LOWER(Location) LIKE '%suisse%';"},{"QuerySetId":604191,"Title":"Quels utilisateurs ont tous leurs posts ferm\u00e9s en moins de 3 semaines ?","Description":null,"QueryBody":"SELECT * FROM Users WHERE NOT Id IN (SELECT OwnerUserId FROM Posts WHERE ClosedDate IS NULL OR (NOT ClosedDate IS NULL AND DATEDIFF(ClosedDate, CreationDate) > 3))","CreationDate":"2016-12-19 02:14:32","validated":false,"QueryBody_Original":"SELECT  * \nFROM Users\nWHERE Id NOT IN (SELECT OwnerUserId\n                FROM Posts\n                WHERE ClosedDate IS NULL\n                OR ( ClosedDate IS NOT NULL\n                AND DATEDIFF(week, CreationDate, ClosedDate) > 3))"},{"QuerySetId":604614,"Title":"List of all tags SE network wide","Description":null,"QueryBody":"SELECT COUNT(*) FROM Tags AS t LEFT JOIN Posts AS p1 ON p1.Id = t.ExcerptPostId LEFT JOIN Posts AS p2 ON p2.Id = t.WikiPostId","CreationDate":"2017-09-29 16:35:11","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Tags t\nleft join Posts p1 on p1.Id = t.ExcerptPostId\nleft join Posts p2 on p2.Id = t.WikiPostId"},{"QuerySetId":605166,"Title":"Percent of questions titles ending with a question mark","Description":null,"QueryBody":"SELECT (COUNT(CASE WHEN title LIKE '%?' THEN 1 END) * 1.0 \/ COUNT(*)) * 100 AS percent_question_marked, 100.0 * COUNT(CASE WHEN LOWER(LEFT(title, 2)) = 'wh' THEN 1 END) \/ COUNT(*) AS percent_begin_wh, 100.0 * COUNT(CASE WHEN LOWER(LEFT(title, 2)) = 'wh' AND title LIKE '%?' THEN 1 END) \/ COUNT(*) AS percent_both FROM posts WHERE posttypeid = 1","CreationDate":"2016-12-20 01:53:14","validated":false,"QueryBody_Original":"SELECT \n(\ncount(case when title like '%?' then 1 end)* 1.0 \/\ncount(*)\n) * 100 as percent_question_marked\n, 100.0*count(case when lower(left(title,2))='wh' then 1 end)\/count(*) percent_begin_wh,\n100.0*count(case when lower(left(title,2))='wh' and title like '%?'  then 1 end)\/count(*) percent_both\n\nfrom  posts\nwhere posttypeid = 1"},{"QuerySetId":605422,"Title":"User average score after final post","Description":null,"QueryBody":"SELECT Score, Title FROM Posts WHERE OwnerUserId = 251299","CreationDate":"2016-12-20 01:51:44","validated":false,"QueryBody_Original":"SELECT \n  Score, Title from Posts\nwhere\n  OwnerUserId = 251299"},{"QuerySetId":606368,"Title":"Who is having highest Hats","Description":null,"QueryBody":"SELECT Users.DisplayName FROM Users WHERE Users.id = '456778'","CreationDate":"2016-12-21 13:28:30","validated":false,"QueryBody_Original":"SELECT  Users.DisplayName from Users where Users.id='456778'"},{"QuerySetId":606782,"Title":"Doubst Mobile Android + All Testing","Description":null,"QueryBody":"SELECT P.title, P.Tags, P.ViewCount, P.Score, P.AnswerCount, P.CreationDate FROM Posts AS P WHERE (P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%' AND P.Tags LIKE '%test%') OR (P.Tags LIKE '%androidviewclient%' AND P.Tags LIKE '%test%') OR (P.Tags LIKE '%monkeyrunner%' AND P.Tags LIKE '%test%') OR (P.Tags LIKE '%android-espresso%' AND P.Tags LIKE '%test%') OR (P.Tags LIKE '%android-emulator%' AND P.Tags LIKE '%test%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%') ORDER BY P.score DESC","CreationDate":"2017-01-31 22:18:46","validated":false,"QueryBody_Original":"SELECT  P.title, P.Tags, P.ViewCount,P.Score,P.AnswerCount,P.CreationDate\nFROM Posts P\nWHERE\n(P.Tags LIKE '%android-testing%') OR\n(P.Tags LIKE '%robotium%' AND P.Tags LIKE '%test%') OR\n(P.Tags LIKE '%androidviewclient%' AND P.Tags LIKE '%test%') OR\n(P.Tags LIKE '%monkeyrunner%' AND P.Tags LIKE '%test%') OR\n(P.Tags LIKE '%android-espresso%' AND P.Tags LIKE '%test%') OR\n(P.Tags LIKE '%android-emulator%'AND P.Tags LIKE '%test%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\nORDER BY P.score desc"},{"QuerySetId":607115,"Title":"All info Mobile Android Testing without EMulator","Description":null,"QueryBody":"SELECT P.title, P.Tags, P.ViewCount, P.Score, P.AnswerCount, P.CreationDate FROM Posts AS P WHERE (P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%' AND P.Tags LIKE '%test%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%') ORDER BY P.score DESC","CreationDate":"2017-01-30 23:29:55","validated":false,"QueryBody_Original":"SELECT  P.title, P.Tags, P.ViewCount,P.Score,P.AnswerCount,P.CreationDate\nFROM Posts P\nWHERE\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%'AND P.Tags LIKE '%test%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\nORDER BY P.score desc"},{"QuerySetId":607149,"Title":"Select titkes with Like and Not Like","Description":null,"QueryBody":"SELECT P.title FROM Posts AS P WHERE P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%' AND NOT P.Tags LIKE '%test%' AND NOT P.Tags LIKE '%android-testing%' AND NOT P.Tags LIKE '%robotium%' AND NOT P.Tags LIKE '%appium%' AND NOT P.Tags LIKE '%android-espresso%' AND NOT P.Tags LIKE '%android-emulator%' AND NOT P.Tags LIKE '%monkeyrunner%' AND NOT P.Tags LIKE '%androidviewclient%' ORDER BY P.score DESC","CreationDate":"2017-01-25 04:09:40","validated":false,"QueryBody_Original":"SELECT  P.title\nFROM Posts P\nWHERE \nP.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%' \nAND P.Tags NOT LIKE '%test%'\nAND P.Tags NOT LIKE '%android-testing%'\nAND P.Tags NOT LIKE '%robotium%' \nAND P.Tags NOT LIKE '%appium%' \nAND P.Tags NOT LIKE '%android-espresso%'\nAND P.Tags NOT LIKE '%android-emulator%'\nAND P.Tags NOT LIKE '%monkeyrunner%'\nAND P.Tags NOT LIKE '%androidviewclient%'\nORDER BY P.score desc"},{"QuerySetId":607251,"Title":"All Info About Mobile Android Testing","Description":null,"QueryBody":"SELECT P.OwnerUserId, P.title, P.Tags, P.ViewCount, P.Score, P.AnswerCount, P.CreationDate FROM Posts AS P WHERE (P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%') ORDER BY P.score DESC","CreationDate":"2017-02-10 03:57:30","validated":false,"QueryBody_Original":"SELECT  P.OwnerUserId, P.title, P.Tags, P.ViewCount,P.Score,P.AnswerCount,P.CreationDate\nFROM Posts P\nWHERE\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\nORDER BY P.score desc"},{"QuerySetId":607290,"Title":"All questions matching given tags","Description":null,"QueryBody":"SELECT Id, Title, CreationDate, Tags, ClosedDate, ViewCount, Score, FavoriteCount FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%##TagName1##%' AND Tags LIKE '%##TagName2##%' AND NOT Tags LIKE '%##ExcludedTag##%' ORDER BY ViewCount DESC, Score DESC, FavoriteCount DESC","CreationDate":"2016-12-23 12:17:08","validated":false,"QueryBody_Original":"SELECT  Id,Title,CreationDate,Tags,ClosedDate,ViewCount, Score, FavoriteCount\nFROM Posts \nWHERE PostTypeId = 1 \nAND Tags LIKE '%##TagName1##%' \nAND Tags LIKE '%##TagName2##%' \nAND Tags NOT LIKE '%##ExcludedTag##%'\nORDER BY ViewCount DESC, Score DESC, FavoriteCount DESC"},{"QuerySetId":607488,"Title":"Select by  (one) Tags","Description":null,"QueryBody":"SELECT COUNT(Votes.PostId) AS \"DownVote Count\", Votes.PostId AS \"Post Link\" FROM Votes INNER JOIN Posts ON Posts.Id = Votes.PostId WHERE PostTypeId = 1 \/* Question *\/ AND Posts.Tags LIKE '%ruby%' AND VoteTypeId = 3 \/* DownVote *\/ GROUP BY PostId ORDER BY \"DownVote Count\" DESC LIMIT 5","CreationDate":"2017-01-31 05:34:43","validated":false,"QueryBody_Original":"SELECT  TOP 5 COUNT (Votes.PostId) AS [DownVote Count],\nVotes.PostId AS [Post Link]\nFROM Votes INNER JOIN Posts ON Posts.Id = Votes.PostId\nWHERE PostTypeId = 1 -- Question\nAND Posts.Tags LIKE '%ruby%'\nAND VoteTypeId = 3 -- DownVote\nGROUP BY PostId ORDER BY [DownVote Count] DESC"},{"QuerySetId":607646,"Title":"Question score average for site","Description":null,"QueryBody":"SELECT COUNT(p.id) AS number_of_questions, ROUND((0.1 * SUM(score)) \/ (0.1 * COUNT(p.id)), 1) AS average_question_score FROM posts AS p WHERE PostTypeId = 1","CreationDate":"2016-12-24 18:45:25","validated":false,"QueryBody_Original":"SELECT  \ncount(p.id) number_of_questions,\nround((0.1*sum(score))\/(0.1*count(p.id)),1) average_question_score\nfrom posts p\nwhere PostTypeId = 1 \n\n-- group by owneruserid\n-- order by number_of_questions desc"},{"QuerySetId":607908,"Title":"Average answer score for users with more than 5 answers","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", AVG(Score) AS aAvg, COUNT(Id) AS aCount FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId HAVING COUNT(Id) > 5 ORDER BY aAvg DESC","CreationDate":"2016-12-25 18:16:55","validated":false,"QueryBody_Original":"SELECT  OwnerUserId as [User Link], AVG(Score) as aAvg, COUNT(Id) as aCount\nfrom Posts\nwhere PostTypeId = 2\ngroup by OwnerUserId\nhaving COUNT(Id) > 5\norder by aAvg desc"},{"QuerySetId":608068,"Title":"timeline for linear algebra ","Description":null,"QueryBody":"SELECT YEAR(p.LastActivityDate) AS \"recent\", p.Title, YEAR(p.CreationDate) AS \"initial\" FROM Posts AS p WHERE p.Tags LIKE '<linear-algebra>' AND p.Score > 0","CreationDate":"2016-12-26 10:00:41","validated":false,"QueryBody_Original":"SELECT  year(p.LastActivityDate) as 'recent', p.Title,\nyear(p.CreationDate) as 'initial' from Posts p \nwhere p.Tags like '<linear-algebra>' and p.Score > 0;"},{"QuerySetId":608172,"Title":"Past bounties with no answers between two dates","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.OwnerUserId AS \"User Link\", p.tags FROM Posts AS p INNER JOIN Votes AS v ON p.Id = v.PostId WHERE v.VoteTypeId = 8 AND p.AnswerCount = 0 AND (v.CreationDate >= '##Date1?2016-01-01##') AND (v.CreationDate <= '##Date2?2016-06-01##') ORDER BY p.CreationDate","CreationDate":"2016-12-26 12:53:33","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], p.Score, p.OwnerUserId as [User Link], p.tags from Posts p\ninner join Votes v\non p.Id = v.PostId\nwhere v.VoteTypeId = 8\nand p.AnswerCount=0 \nand (v.CreationDate >= '##Date1?2016-01-01##')\nand (v.CreationDate <= '##Date2?2016-06-01##')\norder by p.CreationDate asc"},{"QuerySetId":609249,"Title":"users votes per day ratio","Description":null,"QueryBody":"SELECT id AS \"User Link\", (1 + DATEDIFF(CURRENT_TIMESTAMP(), creationdate)) AS \"Days\", (upvotes + downvotes) AS \"Votes\", ROUND(CAST(NULLIF((upvotes + downvotes), 0) AS FLOAT) \/ (1 + DATEDIFF(CURRENT_TIMESTAMP(), creationdate)), 4) AS \"Votes\/Day Ratio\" FROM users ORDER BY \"Votes\/Day Ratio\" DESC LIMIT 200","CreationDate":"2017-01-08 19:47:21","validated":false,"QueryBody_Original":"SELECT  TOP 200\n     id [User Link]\n     , (1+datediff(dd, creationdate, GETDATE())) \"Days\"\n     ,(upvotes+downvotes) \"Votes\"\n     , round(\n         cast(nullif((upvotes+downvotes), 0) as float) \/ \n         (1+datediff(dd, creationdate, GETDATE())), \n         4\n         )  \"Votes\/Day Ratio\"\nFROM users\nORDER BY \"Votes\/Day Ratio\" DESC"},{"QuerySetId":609283,"Title":"How many users want to be deleted?","Description":null,"QueryBody":"SELECT * FROM Users WHERE DisplayName LIKE 'Nirav D'","CreationDate":"2016-12-30 22:40:29","validated":false,"QueryBody_Original":"SELECT  * from Users where DisplayName like 'Nirav D'"},{"QuerySetId":609573,"Title":"SELECT      TOP 500     Users.Id as [User Link],     Count(Posts.Id) AS Answers,     CAST(AVG(CAST(S","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.Id) > 10 ORDER BY \"Average Answer Score\" DESC LIMIT 500","CreationDate":"2016-12-29 15:46:49","validated":false,"QueryBody_Original":"SELECT  \n    TOP 500\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Answers,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Answer Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(Posts.Id) > 10\nORDER BY\n    [Average Answer Score] DESC"},{"QuerySetId":609934,"Title":"TensorFlow: number of questions over time","Description":null,"QueryBody":"SELECT COUNT(posts.id) FROM Posts WHERE Tags LIKE '%<snowflake-data-warehouse>%' AND creationdate >= '2019-10-07' AND creationdate <= '2019-10-07'","CreationDate":"2020-01-14 06:49:26","validated":false,"QueryBody_Original":"SELECT  count(posts.id)\nFROM Posts\nWHERE Tags LIKE '%<snowflake-data-warehouse>%'\nand creationdate >= '2019-10-07'\nand creationdate <= '2019-10-07'"},{"QuerySetId":609935,"Title":"TensorFlow: number of answers over time","Description":null,"QueryBody":"SELECT a.CreationDate AS CreationDate, ROW_NUMBER() OVER (ORDER BY a.CreationDate) AS AnswerCount FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.Tags LIKE '%<tensorflow>%' ORDER BY a.CreationDate","CreationDate":"2016-12-30 05:03:43","validated":false,"QueryBody_Original":"SELECT  a.CreationDate AS CreationDate, ROW_NUMBER() OVER(ORDER BY a.CreationDate ASC) AS AnswerCount\nFROM Posts q INNER JOIN Posts a ON a.ParentId = q.Id\nWHERE q.Tags LIKE '%<tensorflow>%'\nORDER BY a.CreationDate ASC"},{"QuerySetId":609936,"Title":"TensorFlow: number of askers over time","Description":null,"QueryBody":"SELECT OwnerUserId, MIN(CreationDate), ROW_NUMBER() OVER (ORDER BY MIN(CreationDate)) AS AskerCount FROM Posts WHERE Tags LIKE '%<tensorflow>%' GROUP BY OwnerUserId ORDER BY MIN(CreationDate)","CreationDate":"2016-12-30 05:13:20","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, MIN(CreationDate), ROW_NUMBER() OVER(ORDER BY MIN(CreationDate) ASC) AS AskerCount\nFROM Posts\nWHERE Tags LIKE '%<tensorflow>%'\nGROUP BY OwnerUserId\nORDER BY MIN(CreationDate) ASC"},{"QuerySetId":610451,"Title":"obtain all closed questions with score < -3","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", AcceptedAnswerId, CreationDate, Score, ViewCount, AnswerCount, LastActivityDate FROM POSTS AS q WHERE NOT CLOSEDDATE IS NULL AND DeletionDate IS NULL AND SCORE <= -3 AND AnswerCount > 0 ORDER BY LastActivityDate DESC","CreationDate":"2017-01-02 08:36:14","validated":false,"QueryBody_Original":"SELECT  \n  Id AS [Post Link], \n  AcceptedAnswerId, \n  CreationDate, \n  Score, \n  ViewCount, \n  AnswerCount, \n  LastActivityDate\nFROM \n  POSTS AS q\n  \nWHERE \n  CLOSEDDATE IS NOT NULL\n  AND DeletionDate IS NULL\n  AND SCORE <= -3\n  AND AnswerCount > 0\nORDER BY LastActivityDate DESC"},{"QuerySetId":611425,"Title":"Tags with excerpt but no wiki, or reverse (Sci Fi SE)","Description":null,"QueryBody":"SELECT t.Count, t.TagName, x.Body AS ExcerptText, d.Body AS WikiText FROM (Tags AS t LEFT JOIN Posts AS x ON t.ExcerptPostId = x.Id) LEFT JOIN Posts AS d ON t.WikiPostId = d.Id WHERE 0 = LENGTH(d.Body) AND 0 < LENGTH(x.Body) OR 0 = LENGTH(x.Body) AND 0 < LENGTH(d.Body) ORDER BY t.Count DESC","CreationDate":"2017-01-05 15:24:32","validated":false,"QueryBody_Original":"SELECT  \nt.Count, t.TagName, \nx.Body AS ExcerptText, d.Body AS WikiText\nFROM (Tags AS t \nLEFT JOIN Posts AS x ON t.ExcerptPostId = x.Id)\nLEFT JOIN Posts AS d ON t.WikiPostId = d.Id\nWHERE 0 = LEN(d.Body) AND 0 < LEN(x.Body) OR 0 = LEN(x.Body) AND 0 < LEN(d.Body)\nORDER BY t.Count DESC;"},{"QuerySetId":611594,"Title":"An extremely noisy query for finding users who hate SO","Description":null,"QueryBody":"SELECT * FROM Users WHERE (AboutMe LIKE '%rude%' OR AboutMe LIKE '%belittle%') AND (AboutMe LIKE '%Stack Overflow%' OR AboutMe LIKE '%StackOverflow%' OR AboutMe LIKE '%stack overflow%' OR AboutMe LIKE '%stackoverflow%')","CreationDate":"2017-03-30 17:43:49","validated":false,"QueryBody_Original":"SELECT  * from Users where (AboutMe like '%rude%' or AboutMe like '%belittle%') and (AboutMe like '%Stack Overflow%' or AboutMe like '%StackOverflow%' or AboutMe like '%stack overflow%' or AboutMe like '%stackoverflow%')"},{"QuerySetId":611605,"Title":"How many comments support totally dropping that and trying jQuery?","Description":null,"QueryBody":"SELECT * FROM Comments WHERE Text LIKE '%You should totally drop that and try jQuery%'","CreationDate":"2017-01-05 06:55:46","validated":false,"QueryBody_Original":"SELECT  * from Comments where Text like '%You should totally drop that and try jQuery%'"},{"QuerySetId":612177,"Title":"RPG.SE Beta Users Still Active In Last Month","Description":null,"QueryBody":"SELECT displayname, reputation FROM users WHERE creationdate < '2012\/04\/11' AND lastaccessdate > DATEADD(m, -1, GETDATE()) ORDER BY reputation DESC","CreationDate":"2017-01-06 21:25:29","validated":false,"QueryBody_Original":"SELECT  displayname, reputation from users where creationdate < '2012\/04\/11' \nand lastaccessdate > DATEADD(m, -1, getdate()) order by reputation desc"},{"QuerySetId":612207,"Title":"What are the top 10 tags on Stack Overflow by count?","Description":null,"QueryBody":"SELECT COUNT(tags) FROM Posts LIMIT 10","CreationDate":"2017-01-06 23:20:55","validated":false,"QueryBody_Original":"SELECT  Top 10 count(tags)\nFrom Posts"},{"QuerySetId":612418,"Title":"Average number of users who mention Python in About Me and have a picture","Description":null,"QueryBody":"SELECT COUNT(DISTINCT id) FROM Users WHERE UPPER(Aboutme) LIKE '%PYTHON%' AND NOT ProfileImageUrl IS NULL","CreationDate":"2017-01-07 16:38:06","validated":false,"QueryBody_Original":"SELECT  count(distinct id)\nFrom Users\nWhere upper(Aboutme)LIKE'%PYTHON%'\nAnd ProfileImageUrl is NOT NULL"},{"QuerySetId":612438,"Title":"Top 10 names on Stack Overflow beginning by 'Jon'","Description":null,"QueryBody":"SELECT COUNT(displayname), displayname FROM Users WHERE UPPER(displayname) LIKE 'JON%' GROUP BY displayname ORDER BY COUNT(displayname) DESC LIMIT 10","CreationDate":"2017-01-07 16:44:23","validated":false,"QueryBody_Original":"SELECT  Top 10 count(displayname), displayname\nFrom Users\nWhere upper(displayname) like 'JON%'\nGroup by displayname\nOrder by count(displayname) desc"},{"QuerySetId":612465,"Title":"Find a certain deleted post 1257021","Description":null,"QueryBody":"SELECT * FROM PostHistory WHERE PostId = 1257021","CreationDate":"2017-01-07 18:26:49","validated":false,"QueryBody_Original":"SELECT  * from PostHistory where PostId = 1257021"},{"QuerySetId":612526,"Title":"VERIFY number of answers per user-week","Description":null,"QueryBody":"SELECT id, posttypeid, creationdate FROM posts WHERE creationdate >= '2015-04-26' AND creationdate <= '2015-05-02' AND owneruserid = 7586 AND posttypeid = 2","CreationDate":"2017-03-29 00:24:30","validated":false,"QueryBody_Original":"SELECT  id, posttypeid, creationdate\nfrom posts\nwhere creationdate >= '2015-04-26'\nand creationdate <= '2015-05-02'\nand owneruserid = 7586\nand posttypeid = 2"},{"QuerySetId":613284,"Title":"How many usernames contain the word \"Downvoter\"?","Description":null,"QueryBody":"SELECT * FROM Users WHERE DisplayName LIKE '%Downvoter%'","CreationDate":"2017-01-10 05:18:54","validated":false,"QueryBody_Original":"SELECT  * from Users where DisplayName like '%Downvoter%'"},{"QuerySetId":613489,"Title":" Answers with the lowest score","Description":null,"QueryBody":"SELECT r.Score AS rRep, q.Score AS qRep \/* ,q.id AS qId\n,r.id AS rId *\/, 'http:\/\/scifi.stackexchange.com\/a\/' + CAST(r.id AS TEXT) + '\/4918|' + q.Title AS link, q.Tags AS tags, COALESCE(r.LastEditDate, r.CreationDate) AS rDate FROM posts AS r, posts AS q WHERE q.Id = r.ParentId AND r.PostTypeId = 2 AND r.Score < -10 ORDER BY rRep","CreationDate":"2017-01-10 15:49:45","validated":false,"QueryBody_Original":"SELECT  \nr.Score AS rRep\n,q.Score AS qRep\n\/*,q.id AS qId\n,r.id AS rId*\/\n,'http:\/\/scifi.stackexchange.com\/a\/' + CAST(r.id AS NVARCHAR) + '\/4918|' + q.Title AS link\n,q.Tags AS tags\n,COALESCE(r.LastEditDate, r.CreationDate) AS rDate\nFROM posts AS r, posts AS q\nWHERE q.Id = r.ParentId AND r.PostTypeId = 2 \nAND r.Score < -10 \nORDER BY rRep ASC;"},{"QuerySetId":613860,"Title":"Total number of upvotes from all users","Description":"A list of questions with a high score and low view count\r\n","QueryBody":"SELECT SUM(UpVotes) AS upv, SUM(DownVotes) AS downv FROM Users","CreationDate":"2017-04-30 13:36:52","validated":false,"QueryBody_Original":"SELECT \n  sum(UpVotes) as upv,\n  sum(DownVotes) as downv\nFROM Users;"},{"QuerySetId":613869,"Title":"Top asp.net users from Pakistan","Description":null,"QueryBody":"SELECT * FROM Users AS us WHERE us.DisplayName LIKE '%haider%' AND location LIKE '%islamabad%'","CreationDate":"2017-03-14 15:10:39","validated":false,"QueryBody_Original":"SELECT  *\n       \nFROM Users us\nwhere us.DisplayName like '%haider%'\nand location like '%islamabad%'"},{"QuerySetId":614188,"Title":"Silver Badges for Node.js in Poland","Description":null,"QueryBody":"SELECT * FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 2 AND Badges.TagBased = 1 AND Badges.name = 'node.js' AND LOWER(Users.Location) LIKE LOWER('%Poland%') ORDER BY Reputation DESC","CreationDate":"2017-03-13 00:25:03","validated":false,"QueryBody_Original":"SELECT \n    *\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 2\n    AND Badges.TagBased = 1\n    AND Badges.name = 'node.js'\n    AND LOWER(Users.Location) LIKE LOWER('%Poland%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":614433,"Title":"- nombre de upvotes de Jon Skeet","Description":null,"QueryBody":"SELECT SUM(Upvotes) FROM Users WHERE DisplayName = 'Jon Skeet'","CreationDate":"2017-01-11 19:57:05","validated":false,"QueryBody_Original":"SELECT  SUM (Upvotes) \nFROM Users\nWHERE DisplayName = 'Jon Skeet' ;"},{"QuerySetId":614483,"Title":"- liste des d\u00e9veloppeurs int\u00e9ress\u00e9s par le javascript sur Grenoble","Description":null,"QueryBody":"SELECT * FROM Users WHERE Users.Location = 'Grenoble'","CreationDate":"2017-01-11 20:12:13","validated":false,"QueryBody_Original":"SELECT  * FROM Users \nWHERE Users.Location = 'Grenoble' ;"},{"QuerySetId":614563,"Title":"Number of questions per month for a tag","Description":null,"QueryBody":"SELECT STR_TO_TIME(caffe.month + '-01 13:37:00', '%Y-%m-%d %H:%M:%S') AS \"month\", caffe.count AS \"Caffe\", tf.count AS \"TensorFlow\" FROM (SELECT CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) AS \"month\", COUNT(*) AS \"count\" FROM \"StackOverflow\".dbo.Posts AS p WHERE p.PostTypeId = 1 AND p.Tags LIKE '%<caffe>%' GROUP BY CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7))) AS caffe FULL OUTER JOIN (SELECT CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) AS \"month\", COUNT(*) AS \"count\" FROM \"StackOverflow\".dbo.Posts AS p WHERE p.PostTypeId = 1 AND p.Tags LIKE '%<tf>%' GROUP BY CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7))) AS tf ON tf.month = caffe.month ORDER BY caffe.month","CreationDate":"2017-01-11 21:06:16","validated":false,"QueryBody_Original":"SELECT \n  convert(datetime, caffe.month + '-01 13:37:00', 120) as [month],\n  caffe.count as [Caffe],\n  tf.count as [TensorFlow]\nfrom (\n  SELECT\n    convert(char(7), CreationDate, 20) as [month],\n    count(*) as [count]\n  from [StackOverflow].dbo.Posts p\n  where p.PostTypeId = 1\n    and p.Tags like '%<caffe>%' \n  group by convert(char(7), CreationDate, 20)\n) as caffe full outer join (\n  SELECT\n    convert(char(7), CreationDate, 20) as [month],\n    count(*) as [count]\n  from [StackOverflow].dbo.Posts p\n  where p.PostTypeId = 1\n    and p.Tags like '%<tf>%' \n  group by convert(char(7), CreationDate, 20)\n) as tf on tf.month = caffe.month \norder by caffe.month asc"},{"QuerySetId":614627,"Title":"Number of upvotes per month","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), COUNT(*) FROM Votes WHERE VoteTypeId = 3 \/* upvotes *\/ AND CreationDate >= '2016-01-01' AND CreationDate < DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) ORDER BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)","CreationDate":"2017-01-13 03:19:03","validated":false,"QueryBody_Original":"SELECT  DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), COUNT(*)\n  FROM Votes\n  WHERE VoteTypeId = 3 -- upvotes\n    AND CreationDate >= '2016-01-01'\n    AND CreationDate < DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0)\n  GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n  ORDER BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)"},{"QuerySetId":614653,"Title":"TOP 10 USERS FOR COUNTRY","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%') ORDER BY Reputation DESC LIMIT 10","CreationDate":"2017-01-12 00:55:05","validated":false,"QueryBody_Original":"SELECT \n    TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##CountryName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":614657,"Title":"get count of users between 21 and 29","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%') AND AGE BETWEEN 21 AND 29","CreationDate":"2017-01-12 01:14:12","validated":false,"QueryBody_Original":"SELECT     \ncount(*)\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##CountryName##%')\n    AND AGE BETWEEN 21 AND 29"},{"QuerySetId":614674,"Title":"Comments with image links in them","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Text, CreationDate FROM Comments WHERE Text LIKE '%i.stack.imgur.com%'","CreationDate":"2017-01-12 02:12:30","validated":false,"QueryBody_Original":"SELECT \n  PostId As [Post Link],\n  Text,\n  CreationDate\nFrom Comments\nWhere Text Like '%i.stack.imgur.com%';"},{"QuerySetId":615594,"Title":"questions closed by mods vs community","Description":null,"QueryBody":"SELECT userid, userid AS \"User Link\", COUNT(postid) FROM posthistory WHERE posthistorytypeid = 10 GROUP BY userid","CreationDate":"2020-05-27 18:04:40","validated":false,"QueryBody_Original":"SELECT  userid,userid as [User Link], count(postid)\nfrom posthistory\nwhere\nposthistorytypeid = 10\ngroup by userid"},{"QuerySetId":615896,"Title":"votes per active day (days with posts)","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", u.reputation, u.upvotes, u.downvotes, up.activedays, ROUND(CAST(u.upvotes + u.downvotes AS FLOAT) \/ up.activedays, 2) AS votesPerDay FROM (SELECT owneruserid, COUNT(DISTINCT CAST(creationdate AS DATE)) AS activedays FROM posts WHERE (posttypeid = 1 OR posttypeid = 2) AND deletiondate IS NULL AND closeddate IS NULL GROUP BY owneruserid) AS up JOIN users AS u ON u.id = up.owneruserid WHERE u.reputation > 101 AND YEAR(u.LastAccessDate) >= 2016 AND up.activedays > 10 ORDER BY activedays DESC","CreationDate":"2017-01-15 02:11:23","validated":false,"QueryBody_Original":"SELECT \nu.id as [User Link],u.reputation,u.upvotes,u.downvotes,up.activedays,\nround(cast(u.upvotes + u.downvotes as float)\/up.activedays,2) as votesPerDay\nfrom\n(SELECT\nowneruserid, count(distinct convert(date, creationdate)) as activedays\nfrom posts\nwhere (posttypeid = 1 or posttypeid = 2)\nand deletiondate is null and closeddate is null\ngroup by owneruserid) as up\njoin users u\non u.id = up.owneruserid\nwhere\nu.reputation > 101\nand year(u.LastAccessDate) >= 2016\nand up.activedays > 10\norder by activedays desc"},{"QuerySetId":615980,"Title":"votes per active day (days with comments)","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", u.reputation, u.upvotes, u.downvotes, uc.activedays AS allActiveDays, ucr.activedays AS recentActiveDays, ROUND(CAST(u.upvotes + u.downvotes AS FLOAT) \/ uc.activedays, 2) AS votesPerAllActiveDays FROM (SELECT userid AS id, COUNT(DISTINCT CAST(creationdate AS DATE)) AS activedays FROM comments GROUP BY userid) AS uc JOIN (SELECT userid AS id, COUNT(DISTINCT CAST(creationdate AS DATE)) AS activedays FROM comments WHERE YEAR(creationdate) >= 2016 GROUP BY userid) AS ucr ON uc.id = ucr.id JOIN users AS u ON u.id = uc.id WHERE u.reputation > 101 AND YEAR(u.LastAccessDate) >= 2016 AND ucr.activedays > 10 ORDER BY uc.activedays DESC","CreationDate":"2017-01-15 11:35:52","validated":false,"QueryBody_Original":"SELECT \nu.id as [User Link],u.reputation,u.upvotes,u.downvotes,\nuc.activedays as allActiveDays,\nucr.activedays as recentActiveDays,\nround(cast(u.upvotes + u.downvotes as float)\/uc.activedays,2) as votesPerAllActiveDays\nfrom\n(SELECT\nuserid as id, count(distinct convert(date, creationdate)) as activedays\nfrom comments\ngroup by userid) as uc\njoin\n(SELECT\nuserid as id, count(distinct convert(date, creationdate)) as activedays\nfrom comments\nwhere\nyear(creationdate) >= 2016\ngroup by userid) as ucr\non uc.id = ucr.id\njoin users u\non u.id = uc.id\nwhere\nu.reputation > 101\nand year(u.LastAccessDate) >= 2016\nand ucr.activedays > 10\norder by uc.activedays desc"},{"QuerySetId":616107,"Title":"Users with gold Tag badges Based","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", MAX(b.Name) AS \"One of the gold badges they have\", COUNT(*) AS \"Number of gold badges\" FROM Users AS u INNER JOIN Badges AS b ON b.UserId = u.Id WHERE b.Class = 1 AND TagBased = 1 GROUP BY u.Id ORDER BY 'Number of gold badges' DESC","CreationDate":"2017-01-16 04:35:06","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link],\n  MAX(b.Name) AS 'One of the gold badges they have',\n  COUNT(*) AS 'Number of gold badges'\n  FROM Users AS u\n  INNER JOIN Badges AS b\n    ON b.UserId = u.Id\n  WHERE b.Class = 1 AND TagBased = 1\n  GROUP BY u.Id\n  ORDER BY 'Number of gold badges' DESC"},{"QuerySetId":616318,"Title":"SELECT * FROM (SELECT * FROM Users WHERE Views = 10)","Description":null,"QueryBody":"SELECT * FROM Users WHERE Views = 10 AND Reputation > 1000 LIMIT 1","CreationDate":"2017-01-16 19:28:38","validated":false,"QueryBody_Original":"SELECT  TOP 1 * FROM Users WHERE Views = 10 AND Reputation > 1000"},{"QuerySetId":617028,"Title":"Questions by users with  rep>1000","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Posts.Title, 'http:\/\/english.stackexchange.com\/questions\/' + CAST(posts.id AS TEXT) AS Hyperlink, Posts.LastEditDate, posts.creationdate, posts.closeddate, posts.acceptedanswerid FROM Users INNER JOIN Posts ON Users.Id = OwnerUserId WHERE Reputation >= 1000 AND Title <> '' AND posts.creationdate > CURRENT_TIMESTAMP() - 365 AND closeddate IS NULL AND posts.acceptedanswerid IS NULL ORDER BY \"LastEditDate\" DESC","CreationDate":"2017-01-18 20:08:23","validated":false,"QueryBody_Original":"SELECT  \n    \n    Users.Id as [User Link],\n    Posts.Title,\n    'http:\/\/english.stackexchange.com\/questions\/'+ cast(posts.id as nvarchar) as Hyperlink,\n    Posts.LastEditDate,\n    posts.creationdate,\n    posts.closeddate,\n    posts.acceptedanswerid\n\n    FROM\n    Users\n  INNER JOIN\n    Posts ON Users.Id = OwnerUserId\nWHERE \nReputation >= 1000 AND Title != '' and posts.creationdate>getdate()-365 and closeddate is null and posts.acceptedanswerid is null\nORDER BY\n    [LastEditDate] DESC"},{"QuerySetId":617218,"Title":"TOP 10 tags user per user per reputation","Description":null,"QueryBody":"SELECT A.TagName, COUNT(A.TagName), B.Reputation, B.DisplayName, B.Location FROM Tags AS A JOIN Users AS B ON A.ID = B.Id GROUP BY A.TagName, B.Reputation, B.DisplayName, B.Location ORDER BY COUNT(A.TagName) DESC LIMIT 10","CreationDate":"2017-01-18 19:31:48","validated":false,"QueryBody_Original":"SELECT  TOP 10 A. TagName, count(A.TagName), B.Reputation, B.DisplayName, B.Location\nFrom Tags A\nJOIN Users B ON A.ID=B.Id\nGroup by A.TagName, B.Reputation, B.DisplayName, B.Location\nOrder by count(A.TagName) desc"},{"QuerySetId":617370,"Title":"Comparison of ID requests for books vs films","Description":null,"QueryBody":"SELECT 'Books' AS id_type, ROUND(AVG(CAST(Score AS FLOAT)), 2) AS score FROM Posts AS p WHERE p.tags LIKE '%identification%' AND (p.tags + p.body LIKE '%book%' OR p.tags + p.body LIKE '%story%') UNION SELECT 'Films' AS id_type, ROUND(AVG(CAST(Score AS FLOAT)), 2) AS score FROM Posts AS p WHERE p.tags LIKE '%identification%' AND (p.tags + p.body LIKE '%film%' OR p.tags + p.body LIKE '%movie%')","CreationDate":"2017-01-19 02:07:55","validated":false,"QueryBody_Original":"SELECT \n  'Books' AS id_type,\n  ROUND(AVG(CAST(Score AS FLOAT)), 2) AS score\nFROM Posts p\nWHERE p.tags LIKE '%identification%'\n  AND (p.tags + p.body LIKE '%book%' OR p.tags + p.body LIKE '%story%')\nUNION\nSELECT\n  'Films' AS id_type,\n  ROUND(AVG(CAST(Score AS FLOAT)), 2) AS score\nFROM Posts p\nWHERE p.tags LIKE '%identification%'\n  AND (p.tags + p.body LIKE '%film%' OR p.tags + p.body LIKE '%movie%')"},{"QuerySetId":617470,"Title":"count of questions with an accepted answer which is outvoted and not authored by the OP","Description":null,"QueryBody":"SELECT COUNT(q.id) FROM posts AS q INNER JOIN posts AS a ON q.AcceptedAnswerId = a.id WHERE q.PostTypeId = 1 AND q.Score > 10 AND (SELECT MAX(score) FROM posts AS q2 WHERE q.id = q2.parentid) > a.score AND q.OwnerUserId <> a.OwnerUserId","CreationDate":"2017-04-07 17:21:04","validated":false,"QueryBody_Original":"SELECT  count (q.id) from posts q inner join posts a on q.AcceptedAnswerId = a.id\nwhere q.PostTypeId = 1 and q.Score > 10 and\n(SELECT max(score) from posts q2 where q.id = q2.parentid) > a.score and \nq.OwnerUserId != a.OwnerUserId"},{"QuerySetId":617652,"Title":"Top 100 programmers in Marrakesh, Morocco","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE '%marrakesh%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2017-01-20 01:04:54","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], Location,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%marrakesh%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":618263,"Title":"SO Users with Gold Badges Related to a Given Tag","Description":"Does what it says on the tin. Enter a valid Tag, and if there is anyone with a Gold badge for that tag, get all the available info for them. Change:\r\n\r\nWHERE UPPER(b.name) LIKE UPPER('%' + ##Tag:string## + '%') AND b.TagBased = 1 AND b.Class = 1\r\n\r\nto\r\n\r\nWHERE UPPER(b.name) LIKE UPPER('%' + ##Tag:string## + '%') AND b.TagBased = 1 AND b.Class = 2\r\n\r\nFor Silver, and b.Class = 3 for Bronze, if you like.\r\n","QueryBody":"SELECT * FROM Badges WHERE TagBased = 1","CreationDate":"2017-01-20 21:13:52","validated":false,"QueryBody_Original":"SELECT  * FROM Badges WHERE TagBased = 1"},{"QuerySetId":618265,"Title":"SELECT TOP 100    Id,    DisplayName,    Reputation,    WebsiteUrl,    Location FROM    Users WHERE ","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Kerala%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2017-01-20 21:42:41","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":618308,"Title":"All Git-related tags (no GUIs, hosting services, etc.)","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName LIKE 'git%' AND NOT TagName LIKE 'github%' AND NOT TagName LIKE 'gitlab%' AND NOT TagName IN ('git-bash', 'gitblit', 'gitbook', 'gitbox', 'gitbucket', 'giter8', 'gitg', 'gitk', 'gitkit', 'gitkraken', 'gitlist', 'gitnub', 'gitolite', 'gitorious', 'gitosis', 'gitpitch', 'gitpython', 'gitsharp', 'gitstack', 'gitswarm', 'gitversion', 'gitweb', 'gitx', 'gitzilla') ORDER BY TagName","CreationDate":"2017-01-21 03:32:43","validated":false,"QueryBody_Original":"SELECT  * FROM Tags\nWHERE TagName LIKE 'git%'\nAND TagName NOT LIKE 'github%'\nAND TagName NOT LIKE 'gitlab%'\nAND TagName NOT IN (\n'git-bash',\n'gitblit',\n'gitbook',\n'gitbox',\n'gitbucket',\n'giter8',\n'gitg',\n'gitk',\n'gitkit',\n'gitkraken',\n'gitlist',\n'gitnub',\n'gitolite',\n'gitorious',\n'gitosis',\n'gitpitch',\n'gitpython',\n'gitsharp',\n'gitstack',\n'gitswarm',\n'gitversion',\n'gitweb',\n'gitx',\n'gitzilla'\n)\nORDER BY TagName ASC"},{"QuerySetId":618383,"Title":"Nepal users rank with reputation","Description":null,"QueryBody":"SELECT Ranking = ROW_NUMBER() OVER (ORDER BY Reputation DESC), * FROM Users WHERE Location LIKE '%Dubai%' OR Location LIKE '%dubai%' ORDER BY Reputation DESC","CreationDate":"2017-01-22 12:09:54","validated":false,"QueryBody_Original":"SELECT  Ranking = ROW_NUMBER() OVER(ORDER BY Reputation DESC), * from Users where Location like '%Dubai%' or Location like '%dubai%' order by Reputation desc;"},{"QuerySetId":618513,"Title":"Dubai users rank with reputation","Description":null,"QueryBody":"SELECT Ranking = ROW_NUMBER() OVER (ORDER BY Reputation DESC), * FROM Users WHERE Location LIKE '%Dubai%' OR Location LIKE '%dubai%' ORDER BY Reputation DESC","CreationDate":"2017-01-22 12:11:36","validated":false,"QueryBody_Original":"SELECT  Ranking = ROW_NUMBER() OVER(ORDER BY Reputation DESC), * from Users where Location like '%Dubai%' or Location like '%dubai%' order by Reputation desc;"},{"QuerySetId":618746,"Title":"New comments on old questions","Description":null,"QueryBody":"SELECT Comments.Id AS \"Comment Link\", Comments.Score, Comments.CreationDate AS CommentDate, Posts.CreationDate AS PostDate, DATEDIFF(Comments.CreationDate, Posts.CreationDate) AS Diff, Comments.Text FROM Comments JOIN Posts ON Comments.PostId = Posts.Id WHERE DATEDIFF(Comments.CreationDate, Posts.CreationDate) > 365 ORDER BY Comments.CreationDate","CreationDate":"2017-01-23 16:14:04","validated":false,"QueryBody_Original":"SELECT \n  Comments.Id as [Comment Link],\n  Comments.Score,\n  Comments.CreationDate as CommentDate,\n  Posts.CreationDate as PostDate,\n  datediff(day, Posts.CreationDate, Comments.CreationDate) as Diff,\n  Comments.Text\nfrom Comments\njoin Posts on Comments.PostId = Posts.Id\nwhere datediff(day, Posts.CreationDate, Comments.CreationDate) > 365\norder by Comments.CreationDate asc"},{"QuerySetId":618937,"Title":"Obtaining closed questions on Worldbuilding Meta","Description":null,"QueryBody":"SELECT * FROM POSTS WHERE NOT CLOSEDDATE IS NULL","CreationDate":"2017-01-23 21:54:48","validated":false,"QueryBody_Original":"SELECT  *\nFROM POSTS\nWHERE CLOSEDDATE IS NOT NULL"},{"QuerySetId":619483,"Title":"Distribution of User Activity Per Hour","Description":"Per hour distribution of posts and comments of a user.\r\n","QueryBody":"SELECT h.hours AS \"Hour\", COUNT(counter) AS AmountOfActivity FROM (SELECT TIME_TO_STR(creationdate, '%h') AS active, 1 AS counter FROM posts WHERE owneruserid = 21216 UNION ALL SELECT TIME_TO_STR(creationdate, '%h') AS active, 1 AS counter FROM comments WHERE userid = 21216) AS a RIGHT JOIN (SELECT DISTINCT TIME_TO_STR(CreationDate, '%h') AS hours FROM posts) AS h ON a.active = h.hours GROUP BY h.hours ORDER BY h.hours","CreationDate":"2018-08-17 00:46:01","validated":false,"QueryBody_Original":"SELECT  h.hours as [Hour], count(counter) as AmountOfActivity\nfrom\n(\nSELECT datepart(hour, creationdate) as active, 1 as counter from posts where owneruserid = 21216\nunion all\nSELECT datepart(hour, creationdate) as active, 1 as counter from comments where userid = 21216\n) as a\nright join\n(\nSELECT distinct datepart(hour, CreationDate) as hours from posts\n) as h on a.active = h.hours\n\ngroup by h.hours\norder by h.hours"},{"QuerySetId":619848,"Title":"Number of posts for users last seen X months ago","Description":null,"QueryBody":"SELECT Months AS \"Months since user last seen\", Posts AS \"Posts at exactly\", SUM(Posts) OVER (ORDER BY Months DESC) AS \"Posts at or before\" FROM (SELECT DATEDIFF(CURRENT_TIMESTAMP(), Users.LastAccessDate) AS \"Months\", COUNT(*) AS \"Posts\" FROM Users INNER JOIN Posts ON Posts.OwnerUserId = Users.Id GROUP BY DATEDIFF(CURRENT_TIMESTAMP(), Users.LastAccessDate)) AS preliminary ORDER BY Months","CreationDate":"2017-01-25 20:35:38","validated":false,"QueryBody_Original":"SELECT \n  Months AS 'Months since user last seen', \n  Posts AS 'Posts at exactly',\n  SUM(Posts) OVER (ORDER BY Months DESC) AS 'Posts at or before'\nFROM (\nSELECT\n  DATEDIFF(mm,Users.LastAccessDate,GETDATE()) AS 'Months',\n  COUNT(*) AS 'Posts'\nFROM Users\nINNER JOIN Posts ON Posts.OwnerUserId = Users.Id\nGROUP BY DATEDIFF(mm,Users.LastAccessDate,GETDATE())\n--ORDER BY DATEDIFF(mm,Users.LastAccessDate,GETDATE())\n\n) preliminary\nORDER BY Months"},{"QuerySetId":620234,"Title":"Questions which had given word in their titles","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE PostHistoryTypeId IN (1, 4) AND Text LIKE '%##keyword##%' GROUP BY PostId ORDER BY PostId DESC","CreationDate":"2017-01-26 14:54:36","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link]\n  from PostHistory \n  where PostHistoryTypeId in (1,4) -- 1 initial title; 4 edit title\n    and Text LIKE '%##keyword##%' \nGroup by PostId\nOrder by PostId Desc"},{"QuerySetId":620235,"Title":"Questions with the given keyword in the title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM posts WHERE (PostTypeId = 1) AND (Title LIKE '%##keyword##%') ORDER BY CreationDate DESC","CreationDate":"2017-01-26 14:58:59","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link]\nFROM posts\nWHERE (PostTypeId=1) AND (Title LIKE '%##keyword##%')\nORDER BY CreationDate DESC"},{"QuerySetId":620254,"Title":"Users with a silver badge but not a bronze badge","Description":null,"QueryBody":"SELECT DISTINCT (u.Id) AS \"User Link\" FROM Users AS u INNER JOIN Badges AS sb ON sb.UserId = u.Id AND sb.Class = 2 LEFT JOIN Badges AS bb ON bb.UserId = u.Id AND bb.Class = 3 WHERE bb.Id IS NULL","CreationDate":"2017-01-26 15:35:42","validated":false,"QueryBody_Original":"SELECT  DISTINCT(u.Id) AS [User Link]\n  FROM Users AS u\n  INNER JOIN Badges AS sb ON sb.UserId = u.Id AND sb.Class = 2\n  LEFT JOIN Badges AS bb ON bb.UserId = u.Id AND bb.Class = 3\n  WHERE bb.Id IS NULL"},{"QuerySetId":620257,"Title":"Users with a gold badge but not a bronze badge","Description":null,"QueryBody":"SELECT DISTINCT (u.Id) AS \"User Link\" FROM Users AS u INNER JOIN Badges AS gb ON gb.UserId = u.Id AND gb.Class = 1 LEFT JOIN Badges AS sb ON sb.UserId = u.Id AND sb.Class = 2 WHERE sb.Id IS NULL","CreationDate":"2017-01-26 20:51:21","validated":false,"QueryBody_Original":"SELECT  DISTINCT(u.Id) AS [User Link]\n  FROM Users AS u\n  INNER JOIN Badges AS gb ON gb.UserId = u.Id AND gb.Class = 1\n  LEFT JOIN Badges AS sb ON sb.UserId = u.Id AND sb.Class = 2\n  WHERE sb.Id IS NULL"},{"QuerySetId":620292,"Title":"Top stackoverflow users from Lebanon","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC), Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE '%Lubnan%' ORDER BY reputation DESC","CreationDate":"2017-05-24 15:26:38","validated":false,"QueryBody_Original":"SELECT \n   ROW_NUMBER() OVER (order by Reputation DESC),\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like '%Lubnan%'\nORDER BY\n   reputation DESC"},{"QuerySetId":620340,"Title":"Get Display Name of Question Asker on Top 10","Description":null,"QueryBody":"SELECT ViewCount, Id, OwnerUserId, OwnerDisplayName FROM posts LIMIT 10","CreationDate":"2017-01-27 20:08:52","validated":false,"QueryBody_Original":"SELECT \n  TOP 10 ViewCount, Id, OwnerUserId, OwnerDisplayName\nFROM\n  posts"},{"QuerySetId":620376,"Title":"Users w\/ More than X Rep","Description":null,"QueryBody":"SELECT * FROM Users WHERE Reputation >= 3000 AND Location LIKE '%OH%'","CreationDate":"2017-01-27 03:02:57","validated":false,"QueryBody_Original":"SELECT  * FROM Users WhERE Reputation >= 3000 AND Location LIKE '%OH%'"},{"QuerySetId":620602,"Title":"Posts with highest count of duplicates","Description":null,"QueryBody":"SELECT COUNT(*) AS number_of_duplicates, p.title FROM postlinks AS pl JOIN posts AS p ON p.id = pl.relatedpostid WHERE 1 = 1 AND pl.linktypeid = 3 \/* duplicate *\/ GROUP BY p.title HAVING COUNT(*) > 1000 ORDER BY number_of_duplicates DESC","CreationDate":"2017-01-27 17:08:59","validated":false,"QueryBody_Original":"SELECT  count(*) number_of_duplicates\n,      p.title\nfrom   postlinks pl\njoin   posts p\non     p.id = pl.relatedpostid\nwhere  1=1\nand    pl.linktypeid = 3  -- duplicate\ngroup\nby     p.title\nhaving count(*) > 1000\norder\nby     number_of_duplicates desc"},{"QuerySetId":620671,"Title":"QUESTIONS - Top 1000 Join the Users table with the Posts table to get Display Name with Location","Description":null,"QueryBody":"SELECT Posts.Id, PostTypeId, AcceptedAnswerId, OwnerUserId, DisplayName, Location, ParentID FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE PostTypeId = 1 LIMIT 1000","CreationDate":"2017-02-18 00:12:56","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  Posts.Id, PostTypeId, AcceptedAnswerId, OwnerUserId, DisplayName, Location, ParentID\nFROM\n  Posts\nJOIN\n  Users\nON \n  Posts.OwnerUserId = Users.Id\nWHERE\n  PostTypeId = 1"},{"QuerySetId":620703,"Title":"ANSWERS - Top 1000 Join the Users table with the Posts table to get Display Name with Location","Description":null,"QueryBody":"SELECT Posts.Id, PostTypeId, ParentId, OwnerUserId, DisplayName, Location FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE PostTypeId = 2 LIMIT 1000","CreationDate":"2017-02-18 00:13:17","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  Posts.Id, PostTypeId, ParentId, OwnerUserId, DisplayName, Location\nFROM\n  Posts\nJOIN\n  Users\nON \n  Posts.OwnerUserId = Users.Id\nWHERE\n  PostTypeId = 2"},{"QuerySetId":620848,"Title":"Number of LaTeX-only questions over time","Description":null,"QueryBody":"SELECT STR_TO_TIME(latex.month + '-01 13:37:00', '%Y-%m-%d %H:%M:%S') AS \"month\", latex.count AS \"LaTeXOnly\" FROM (SELECT CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) AS \"month\", COUNT(*) AS \"count\" FROM \"StackOverflow\".dbo.Posts AS p WHERE p.PostTypeId = 1 AND p.Tags LIKE '<latex>' GROUP BY CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7))) AS latex ORDER BY latex.month","CreationDate":"2017-01-28 08:50:38","validated":false,"QueryBody_Original":"SELECT \n  convert(datetime, latex.month + '-01 13:37:00', 120) as [month],\n  latex.count as [LaTeXOnly]\nfrom (\n  SELECT\n    convert(char(7), CreationDate, 20) as [month],\n    count(*) as [count]\n  from [StackOverflow].dbo.Posts p\n  where p.PostTypeId = 1\n    and p.Tags like '<latex>' \n  group by convert(char(7), CreationDate, 20)\n) as latex\norder by latex.month asc"},{"QuerySetId":621037,"Title":"accept answer under accepted answer","Description":null,"QueryBody":"SELECT c.Id, c.Id AS \"Comment Link\", c.CreationDate FROM Comments AS c INNER JOIN Posts AS q ON q.AcceptedAnswerId = c.PostId WHERE LENGTH(c.Text) <= 75 AND c.Score < 5 AND LOWER(c.Text) LIKE '%answer%' AND LOWER(c.Text) LIKE '%accept%' ORDER BY c.CreationDate DESC","CreationDate":"2017-03-26 18:37:58","validated":false,"QueryBody_Original":"SELECT  c.Id, c.Id as [Comment Link], c.CreationDate\nfrom Comments c\ninner join Posts q on \nq.AcceptedAnswerId = c.PostId \nwhere len(c.Text) <= 75\nand c.Score < 5 \nand lower(c.Text) like '%answer%' \nand lower(c.Text) like '%accept%' \norder by c.CreationDate desc"},{"QuerySetId":621038,"Title":"accept answer under question with accepted answer","Description":null,"QueryBody":"SELECT c.Id, c.Id AS \"Comment Link\", c.CreationDate FROM Comments AS c INNER JOIN Posts AS q ON q.Id = c.PostId AND q.PostTypeid = 1 AND LENGTH(c.Text) <= 75 AND LOWER(c.Text) LIKE '%forget%accept%' ORDER BY c.CreationDate DESC","CreationDate":"2019-06-29 09:53:15","validated":false,"QueryBody_Original":"SELECT  c.Id, c.Id as [Comment Link], c.CreationDate\nfrom Comments c\ninner join Posts q on \nq.Id = c.PostId \nand q.PostTypeid = 1\nand len(c.Text) <= 75 \nand lower(c.Text) like '%forget%accept%' \norder by c.CreationDate desc"},{"QuerySetId":621089,"Title":"Top user from Punjab, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%rajasthan, india%' OR UPPER(Location) LIKE '%Rajasthan, India%' OR Location LIKE '%rajasthan, india%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 25","CreationDate":"2018-11-23 01:20:54","validated":false,"QueryBody_Original":"SELECT  TOP 25\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%rajasthan, india%'\n    OR UPPER(Location) LIKE '%Rajasthan, India%'\n    or Location like '%rajasthan, india%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":621236,"Title":"Posts with a score of 9","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\" FROM Posts WHERE Score = 9 AND TIME_TO_STR(CreationDate, '%YEAR') = 2016 ORDER BY CreationDate DESC","CreationDate":"2017-02-17 11:59:44","validated":false,"QueryBody_Original":"SELECT  Score,Id As [Post Link]\nFROM Posts where Score=9 AND DATEPART(YEAR, CreationDate) = 2016\nORDER BY CreationDate DESC"},{"QuerySetId":621340,"Title":"Shortest answers with score > 1","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE PostTypeId = 2 AND LENGTH(Body) < 100 AND Score < 0 ORDER BY LENGTH(Body) DESC","CreationDate":"2017-03-08 19:18:13","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body\nFROM Posts WHERE PostTypeId = 2 AND len(Body) < 100 AND Score < 0\nORDER BY LEN(Body) DESC"},{"QuerySetId":621886,"Title":"Questions and Views for Compile-to-JS languages","Description":null,"QueryBody":"SELECT Tag, STR(Year) + '-' + REPLACE(STR(Month, 2), SPACE(1), '0') AS Month, COUNT(*) AS Questions, SUM(ViewCount) AS Views FROM (SELECT ViewCount, MONTH(CreationDate) AS Month, YEAR(CreationDate) AS Year, CASE WHEN Tags LIKE '%<c#>%' THEN 'C#' ELSE 'Other' END AS Tag FROM Posts WHERE PostTypeId = 1 \/* Question *\/ AND (Tags LIKE '%<c#>%')) AS SubQry GROUP BY Month, Year, Tag ORDER BY Month DESC, Tag","CreationDate":"2017-02-02 01:42:03","validated":false,"QueryBody_Original":"SELECT \n  Tag,\n  STR(Year) + '-' + REPLACE(STR(Month, 2), SPACE(1), '0') AS Month,\n  COUNT(*) AS Questions,\n  SUM(ViewCount) AS Views\nFROM (\n  SELECT\n    ViewCount,\n    Month(CreationDate) AS Month,\n    Year(CreationDate) AS Year,\n    IIF(Tags like '%<c#>%', 'C#',\n    'Other') AS Tag\n  FROM\n    Posts\n  WHERE\n      PostTypeId = 1 -- Question\n      AND (\n      Tags like '%<c#>%'\n      )\n  ) AS SubQry\n  GROUP BY\n    Month,\n    Year,\n    Tag\nORDER BY Month DESC, Tag"},{"QuerySetId":622052,"Title":"Android Mobile Testing: test in Title AND All other tags","Description":null,"QueryBody":"SELECT P.title, P.Tags, P.ViewCount, P.Score, P.AnswerCount, P.CreationDate FROM Posts AS P WHERE (P.title LIKE '%test%') AND ((P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')) ORDER BY P.ViewCount DESC LIMIT 10","CreationDate":"2017-02-02 23:52:51","validated":false,"QueryBody_Original":"SELECT  TOP (10) P.title, P.Tags, P.ViewCount,P.Score,P.AnswerCount,P.CreationDate\nFROM Posts P\nWHERE\n(P.title LIKE '%test%') \nAND\n(\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\n)\nORDER BY P.ViewCount desc"},{"QuerySetId":622672,"Title":"Top 10 Zero score questions with highest view count","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount FROM posts AS p WHERE Score = 0 ORDER BY ViewCount DESC LIMIT 10","CreationDate":"2017-02-02 16:26:15","validated":false,"QueryBody_Original":"SELECT  TOP 10\nId AS [Post Link],\nViewCount\nFROM posts p\nWHERE\nScore = 0\nORDER BY ViewCount DESC;"},{"QuerySetId":622675,"Title":"Top 25 Zero score questions with highest view count","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, AnswerCount, CASE WHEN AcceptedAnswerId > 0 THEN 'Yes' ELSE 'No' END AS AcceptedAnswer FROM posts AS p WHERE Score = 0 AND AnswerCount > 0 AND ClosedDate IS NULL AND DeletionDate IS NULL ORDER BY ViewCount DESC LIMIT 25","CreationDate":"2017-02-02 20:13:08","validated":false,"QueryBody_Original":"SELECT  TOP 25\nId AS [Post Link],\nScore,\nViewCount,\nAnswerCount,\nCASE WHEN AcceptedAnswerId > 0 THEN 'Yes' ELSE 'No' END AS AcceptedAnswer\nFROM posts p\nWHERE Score = 0 AND AnswerCount > 0\nAND ClosedDate IS NULL AND DeletionDate IS NULL\nORDER BY ViewCount DESC;"},{"QuerySetId":622709,"Title":"SELECT DATEFROMPARTS ( DATEPART(yyyy, GETDATE()) -1, 1, 1 )","Description":null,"QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(CURRENT_TIMESTAMP(), '%Y'), 1, 1)","CreationDate":"2017-02-02 18:10:38","validated":false,"QueryBody_Original":"SELECT  DATEFROMPARTS ( DATEPART(yyyy, GETDATE()), 1, 1 )"},{"QuerySetId":622781,"Title":"Count How Questions and Titles","Description":null,"QueryBody":"SELECT P.title, P.Tags, P.ViewCount, P.Score, P.AnswerCount, P.CreationDate FROM Posts AS P WHERE (P.title LIKE '%devices%') AND ((P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%' AND P.Tags LIKE '%test%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')) ORDER BY P.ViewCount DESC","CreationDate":"2017-02-03 00:17:35","validated":false,"QueryBody_Original":"SELECT  P.title, P.Tags, P.ViewCount, P.Score, P.AnswerCount, P.CreationDate\nFROM Posts P\nWHERE\n(P.title LIKE '%devices%') \nAND\n(\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%' AND P.Tags LIKE '%test%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\n)\nORDER BY P.ViewCount desc"},{"QuerySetId":622808,"Title":"unaccepted id questions by creationdate, score","Description":null,"QueryBody":"SELECT p.id, score, title, 'http:\/\/travel.stackexchange.com\/questions\/' + CAST(p.id AS TEXT(10)) AS link FROM posts AS p WHERE deletiondate IS NULL AND closeddate IS NULL AND tags LIKE '%identify%' AND acceptedanswerid IS NULL AND score <= 2 AND creationdate <= DATEADD(mm, -2, GETDATE()) ORDER BY creationdate, score","CreationDate":"2017-04-05 19:42:57","validated":false,"QueryBody_Original":"SELECT \np.id,\nscore,\ntitle,\n'http:\/\/travel.stackexchange.com\/questions\/' + cast(p.id as varchar(10)) as link\nfrom posts p\nwhere deletiondate is null\nand closeddate is null\nand tags like '%identify%'\nand acceptedanswerid is null\nand score <= 2\nand creationdate <= dateadd(mm, -2, getdate())\norder by creationdate, score"},{"QuerySetId":622979,"Title":"Tags with names less than five characters","Description":null,"QueryBody":"SELECT * FROM Tags WHERE LENGTH(TagName) BETWEEN 3 AND 4 AND Count BETWEEN 100 AND 3000 ORDER BY Count","CreationDate":"2017-02-03 09:54:32","validated":false,"QueryBody_Original":"SELECT  \n    * \nFROM \n    Tags \nWHERE \n    LEN(TagName) BETWEEN 3 AND 4 \n    AND \n    Count BETWEEN 100 AND 3000\nORDER BY \n    Count ASC;"},{"QuerySetId":623164,"Title":"Gold Badges for Node.js Worldwide","Description":null,"QueryBody":"SELECT * FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 1 AND Badges.TagBased = 1 AND Badges.name = 'node.js' ORDER BY Reputation DESC","CreationDate":"2017-03-12 13:30:04","validated":false,"QueryBody_Original":"SELECT \n    *\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 1\n    AND Badges.TagBased = 1\n    AND Badges.name = 'node.js'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":623198,"Title":"Number of comments and post by users organised by total UpVotes","Description":null,"QueryBody":"SELECT DisplayName, UpVotes, DownVotes, posts, comments, comments \/ posts FROM users INNER JOIN (SELECT OwnerUserId, COUNT(OwnerUserId) AS posts FROM posts GROUP BY OwnerUserId) AS numposts ON users.Id = numposts.OwnerUserId INNER JOIN (SELECT UserId, COUNT(UserId) AS comments FROM comments GROUP BY UserId) AS numcomments ON users.Id = numcomments.UserId WHERE posts > 10 ORDER BY comments \/ posts DESC LIMIT 1000","CreationDate":"2017-04-21 17:32:05","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  DisplayName, UpVotes, DownVotes, posts, comments, comments\/posts\nFROM users\nINNER JOIN (\n  SELECT OwnerUserId, COUNT(OwnerUserId) AS posts\n  FROM posts\n  GROUP BY OwnerUserId ) AS numposts \n  ON users.Id=numposts.OwnerUserId\nINNER JOIN (\n  SELECT UserId, COUNT(UserId) AS comments\n  FROM comments\n  GROUP BY UserId ) AS numcomments\n  ON users.Id=numcomments.UserId\nWHERE posts > 10\nORDER BY comments\/posts DESC"},{"QuerySetId":623515,"Title":"SELECT * FROM posts LIMIT 10","Description":null,"QueryBody":"SELECT * FROM posts LIMIT 10","CreationDate":"2017-02-04 06:59:48","validated":false,"QueryBody_Original":"SELECT  TOP 10 * FROM posts"},{"QuerySetId":623651,"Title":"Most contentious (most often closed) questions","Description":null,"QueryBody":"SELECT p.Id FROM Posts AS p INNER JOIN Votes AS v ON v.PostId = p.Id","CreationDate":"2017-02-05 02:21:30","validated":false,"QueryBody_Original":"SELECT  p.Id from Posts p\ninner join Votes v on v.PostId = p.Id"},{"QuerySetId":623877,"Title":"select id, score from posts order by score desc;","Description":null,"QueryBody":"SELECT id, score FROM posts ORDER BY score DESC","CreationDate":"2017-02-05 20:22:29","validated":false,"QueryBody_Original":"SELECT  id, score from posts order by score desc;"},{"QuerySetId":624314,"Title":"Top 10 Iranian GameDeveloper In Stackoverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, age FROM Users WHERE LOWER(Location) LIKE '%iran%' OR UPPER(Location) LIKE '%ir' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2017-02-06 16:08:31","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    age\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%iran%'\n    OR UPPER(Location) LIKE '%ir'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":624366,"Title":"M\u00e9dia de reputa\u00e7\u00e3o por usu\u00e1rios","Description":null,"QueryBody":"SELECT AVG(reputation) FROM users","CreationDate":"2017-02-06 18:36:03","validated":false,"QueryBody_Original":"SELECT  Avg(reputation) From users"},{"QuerySetId":624608,"Title":"Unsolved high quality ID questions","Description":null,"QueryBody":"SELECT p.id, score, title, 'http:\/\/movies.stackexchange.com\/questions\/' + CAST(p.id AS TEXT(10)) AS link, creationdate FROM posts AS p WHERE deletiondate IS NULL AND closeddate IS NULL AND tags LIKE '%identify%' AND acceptedanswerid IS NULL AND score > 2 ORDER BY score DESC","CreationDate":"2017-02-16 19:59:36","validated":false,"QueryBody_Original":"SELECT \np.id,\nscore,\ntitle,\n'http:\/\/movies.stackexchange.com\/questions\/' + cast(p.id as varchar(10)) as link,\ncreationdate\n\nfrom posts p\nwhere deletiondate is null\nand closeddate is null\nand tags like '%identify%'\nand acceptedanswerid is null\nand score > 2\norder by score desc"},{"QuerySetId":624939,"Title":"Top users with gold js badge","Description":null,"QueryBody":"SELECT ('http:\/\/stackoverflow.com\/users\/') + CAST(Users.Id AS TEXT(50)) AS \"User Link\", Users.WebsiteUrl AS Website, Users.DisplayName AS Name, Users.Location AS Location, Users.Reputation AS Rep FROM Users, Badges WHERE Badges.UserId = Users.Id AND (Badges.Name = 'javascript' OR Badges.Name = 'jquery' OR Badges.Name = 'node.js' OR Badges.Name = 'reactjs' OR Badges.Name = 'angularjs') AND (Badges.Class = 2 OR Badges.Class = 1) GROUP BY ('http:\/\/stackoverflow.com\/users\/') + CAST(Users.Id AS TEXT(50)), Users.WebsiteUrl, Users.DisplayName, Users.Location, Users.Reputation, Users.Age ORDER BY Reputation DESC","CreationDate":"2017-02-08 16:10:45","validated":false,"QueryBody_Original":"SELECT \n('http:\/\/stackoverflow.com\/users\/') + CAST(Users.Id As VARCHAR(50)) As 'User Link',\n  Users.WebsiteUrl As Website,\n  Users.DisplayName As Name, \n  Users.Location As Location, \n  Users.Reputation As Rep\n\nFROM \n  Users, Badges\n\nWHERE\n  \n  -- Badge control\n  Badges.UserId = Users.Id AND \n  (Badges.Name = 'javascript' OR\n   Badges.Name = 'jquery' OR\n   Badges.Name = 'node.js' OR\n   Badges.Name = 'reactjs' OR\n   Badges.Name = 'angularjs') AND\n  (Badges.Class = 2 OR Badges.Class = 1)\n  \n  -- Reputation\n  --Users.Reputation > 5000 AND\n  \n  -- Age\n  --Users.Age < 35 AND Users.Age > 19\n  \nGROUP BY\n  ('http:\/\/stackoverflow.com\/users\/') + CAST(Users.Id As VARCHAR(50)),\n  Users.WebsiteUrl, Users.DisplayName, Users.Location, Users.Reputation, Users.Age\nORDER BY \n  Reputation DESC"},{"QuerySetId":625094,"Title":"Histogram of time to first answer","Description":null,"QueryBody":"SELECT hours_to_first_answer, COUNT(*) AS answer_count FROM (SELECT qId, MIN(hours_to_answer) AS hours_to_first_answer FROM (SELECT questions.Id AS qId, questions.CreationDate AS qCreationDate, answers.Id AS aId, answers.CreationDate AS aCreationDate, DATEDIFF(answers.CreationDate, questions.CreationDate) AS hours_to_answer FROM Posts AS questions INNER JOIN Posts AS answers ON questions.Id = answers.ParentId) AS qa GROUP BY qId) AS latency WHERE hours_to_first_answer >= 0 AND hours_to_first_answer < 168 GROUP BY hours_to_first_answer ORDER BY hours_to_first_answer","CreationDate":"2017-02-09 03:16:20","validated":false,"QueryBody_Original":"SELECT  hours_to_first_answer, count(*) as answer_count from\n(\nSELECT qId, min(hours_to_answer) as hours_to_first_answer from \n(SELECT questions.Id as qId, questions.CreationDate as qCreationDate, answers.Id as aId, answers.CreationDate as aCreationDate, DATEDIFF(hour, questions.CreationDate, answers.CreationDate) as hours_to_answer\nfrom Posts questions\ninner join Posts answers\non questions.Id = answers.ParentId) qa group by qId\n) latency\nwhere hours_to_first_answer >= 0 and hours_to_first_answer < 168\ngroup by hours_to_first_answer\norder by hours_to_first_answer"},{"QuerySetId":625244,"Title":"Top 50 users from Auckland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%auckland%' OR UPPER(Location) LIKE '%AUCKLAND' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2017-02-08 13:44:59","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%auckland%'\n    OR UPPER(Location) LIKE '%AUCKLAND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":625341,"Title":"Duplicate Questions (Title, Body) - MRA","Description":null,"QueryBody":"SELECT p.Id AS postid, p.Title AS posttitle, p.Body AS posttext, p.tags AS posttags, dupes.Id AS dupid, dupes.Title AS duptitle, dupes.Body AS duptext, dupes.tags AS duptags FROM Posts AS p JOIN PostLinks AS links ON (p.Id = links.RelatedPostId AND LinkTypeId = 3) JOIN Posts AS dupes ON (dupes.Id = links.PostId AND dupes.PostTypeId = 1) WHERE p.CreationDate > '2016-01-01 00:00:00'","CreationDate":"2017-05-07 09:29:49","validated":false,"QueryBody_Original":"SELECT \n  p.Id as postid,\n  p.Title as posttitle,\n  p.Body as posttext,\n  p.tags as posttags,\n  dupes.Id as dupid,\n  dupes.Title as duptitle,\n  dupes.Body as duptext,\n  dupes.tags as duptags\nFROM Posts p\nJOIN PostLinks links ON (p.Id = links.RelatedPostId AND LinkTypeId = 3)\nJOIN Posts dupes ON (dupes.Id = links.PostId and dupes.PostTypeId = 1)\n\nWHERE p.CreationDate > '2016-01-01 00:00:00'"},{"QuerySetId":626125,"Title":"Top 1000 people from Serbia","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Belgrade%' OR Location LIKE N'%Beograd%' OR Location LIKE N'%Sr' OR Location LIKE N'%Serbia%' OR Location LIKE N'%Novi Sad%' OR Location LIKE N'%Srbija%' OR Location LIKE N'%Ni\u0161%' ORDER BY reputation DESC LIMIT 1000","CreationDate":"2017-02-09 19:46:14","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Belgrade%'\n   OR Location like N'%Beograd%'\n   OR Location like N'%Sr'\n   OR Location like N'%Serbia%'\n   OR Location like N'%Novi Sad%'\n   OR Location like N'%Srbija%'\n   OR Location like N'%Ni\u0161%'\nORDER BY\n   reputation DESC"},{"QuerySetId":626344,"Title":"Questions by unique users about Mobile testing","Description":null,"QueryBody":"SELECT P.OwnerUserId, COUNT(P.Title) FROM Posts AS P WHERE (P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%') GROUP BY P.OwnerUserId","CreationDate":"2017-02-10 04:35:28","validated":false,"QueryBody_Original":"SELECT  P.OwnerUserId, count(P.Title)\nFROM Posts P\nWHERE\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\nGROUP BY P.OwnerUserId"},{"QuerySetId":626556,"Title":"Top 1000 questions by tag name","Description":null,"QueryBody":"SELECT id AS \"Post Link\", Title, Score, Tags, Body, ViewCount, CreationDate, AnswerCount, AcceptedAnswerId, PostTypeId, ClosedDate FROM Posts AS P WHERE P.Tags LIKE '%##TagName1##%' OR P.Tags LIKE '%##TagName2##%' OR P.Tags LIKE '%##TagName3##%' OR P.Tags LIKE '%##TagName4##%' ORDER BY Score DESC LIMIT 10000","CreationDate":"2017-02-17 21:54:21","validated":false,"QueryBody_Original":"SELECT  TOP 10000 id as [Post Link], Title, Score, Tags, Body, ViewCount, CreationDate, AnswerCount, AcceptedAnswerId, PostTypeId, ClosedDate  \nFROM Posts P\nWHERE P.Tags like '%##TagName1##%' \nOR P.Tags like '%##TagName2##%'\nOR P.Tags like '%##TagName3##%'\nOR P.Tags like '%##TagName4##%'\nORDER BY Score Desc"},{"QuerySetId":627313,"Title":"UpVotes - DownVotes over time","Description":null,"QueryBody":"SELECT CONCAT(YEAR(CreationDate), '-', MONTH(CreationDate)) AS \"Month\", COUNT(PostId) AS \"Posts\", SUM(CASE VoteTypeId WHEN 2 THEN 1 ELSE 0 END) AS \"upvotes\", SUM(CASE VoteTypeId WHEN 3 THEN 1 ELSE 0 END) AS \"downvotes\" FROM Votes GROUP BY YEAR(CreationDate), MONTH(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2017-03-16 04:39:39","validated":false,"QueryBody_Original":"SELECT \n    CONCAT(YEAR(CreationDate), '-', MONTH(CreationDate)) As 'Month',\n    COUNT(PostId) As 'Posts',\n    SUM(CASE VoteTypeId WHEN 2 THEN 1 ELSE 0 END) AS 'upvotes',\n    SUM(CASE VoteTypeId WHEN 3 THEN 1 ELSE 0 END) AS 'downvotes'\nFROM Votes\n    GROUP BY YEAR(CreationDate), MONTH(CreationDate)\n    ORDER BY YEAR(CreationDate), MONTH(CreationDate)"},{"QuerySetId":627398,"Title":"Posts that link to DOIs or the arXiv","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE Body LIKE '%doi.org%' OR Body LIKE '%arxiv.org\/abs\/%' ORDER BY CreationDate DESC","CreationDate":"2017-02-13 05:21:36","validated":false,"QueryBody_Original":"SELECT  \nId AS [Post Link],\nCreationDate\nFROM Posts\nWHERE Body LIKE '%doi.org%' OR Body LIKE '%arxiv.org\/abs\/%'\nORDER BY CreationDate DESC"},{"QuerySetId":627425,"Title":"All posts in early January 2017","Description":null,"QueryBody":"SELECT * FROM Posts WHERE MONTH(CreationDate) = 1 AND YEAR(CreationDate) = 2017","CreationDate":"2017-02-13 06:33:18","validated":false,"QueryBody_Original":"SELECT  *\nFROM Posts\nWHERE \n  MONTH(CreationDate)=1\n  AND YEAR(CreationDate)=2017"},{"QuerySetId":627484,"Title":"Top users : Sri Lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Age, Users.Location, Users.Reputation, Users.UpVotes FROM Users WHERE LOWER(Location) LIKE LOWER('%India%') OR LOWER(Location) LIKE '%Mumbai%' OR LOWER(Location) LIKE '%Trivandrum%' ORDER BY Reputation DESC LIMIT 4000","CreationDate":"2017-10-25 14:48:12","validated":false,"QueryBody_Original":"SELECT  TOP 4000 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Users.Age,\n    Users.Location,\n    Users.Reputation,\n    Users.UpVotes\n    \nFROM\n    Users\nWHERE\n  LOWER(Location) LIKE  LOWER('%India%')\n  OR LOWER(Location) LIKE '%Mumbai%'\n    OR LOWER(Location) LIKE '%Trivandrum%'\n  \n\nORDER BY\n    Reputation DESC;"},{"QuerySetId":627639,"Title":"Changes in technologies in UK","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE) AS \"Date\", COUNT(*) FROM Posts WHERE PostTypeId = 1 AND (Tags LIKE '%<java>%' AND Tags LIKE '%<.net>%' AND Tags LIKE '%<node.js>%' AND Tags LIKE '%<php>%' AND Tags LIKE '%<python>%' AND Tags LIKE '%<ruby>%' AND Tags LIKE '%<wordpress>%') GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE)","CreationDate":"2017-02-13 19:54:29","validated":false,"QueryBody_Original":"SELECT  CAST(CreationDate AS DATE) AS [Date], \n       COUNT(*)\nFROM Posts\nWHERE PostTypeId = 1 \nAND \n   (\n    Tags LIKE '%<java>%'\n    AND Tags LIKE '%<.net>%'\n    AND Tags LIKE '%<node.js>%'\n    AND Tags LIKE '%<php>%'\n    AND Tags LIKE '%<python>%'\n    AND Tags LIKE '%<ruby>%'\n    AND Tags LIKE '%<wordpress>%'\n   )\n--AND \n --  (\n   -- CAST(CreationDate AS DATE) LIKE '%<2014>%'\n --   AND CAST(CreationDate AS DATE) LIKE '%<2015>%'\n   -- AND CAST(CreationDate AS DATE) LIKE '%<2016>%'\n  -- )\nGROUP BY CAST(CreationDate AS DATE)\nORDER BY CAST(CreationDate AS DATE)"},{"QuerySetId":629143,"Title":"Count all  questions with two tag names","Description":null,"QueryBody":"SELECT COUNT(100) FROM Posts AS P WHERE P.Tags LIKE '%##TagName1##%' AND NOT P.Tags LIKE '%##TagName2##%'","CreationDate":"2017-05-04 19:14:18","validated":false,"QueryBody_Original":"SELECT  COUNT(100)\nFROM Posts P\nWHERE P.Tags like '%##TagName1##%' AND NOT P.Tags like '%##TagName2##%'"},{"QuerySetId":629473,"Title":"Count number of total answers by tag name","Description":null,"QueryBody":"SELECT COUNT(question.Id) \/* as [Post Link], answer.Id as [answer Link], answer.body, question.tags *\/ FROM Posts AS question INNER JOIN Posts AS answer ON question.Id = answer.ParentId AND question.Tags LIKE '%##TagName1##%' \/* AND P.Tags like '%##TagName2##%' *\/","CreationDate":"2017-02-18 00:16:24","validated":false,"QueryBody_Original":"SELECT  COUNT(question.Id) -- as [Post Link], answer.Id as [answer Link], answer.body, question.tags\nFROM Posts question\nINNER JOIN Posts answer\nON question.Id = answer.ParentId\n--AND question.AcceptedAnswerId = answer.Id\nAND question.Tags like '%##TagName1##%' --AND P.Tags like '%##TagName2##%'\n--ORDER BY question.Score Desc\n--AND answer.Score < ##maxanswerscore##\n--AND poster.Reputation < ##maxreputation:int##"},{"QuerySetId":629474,"Title":"Count Questions with accepted answer by tag name","Description":null,"QueryBody":"SELECT COUNT(question.Id) \/* TOP 10 question.Id as [Post Link], answer.Id as [answer Link], answer.body, question.tags *\/ FROM Posts AS question INNER JOIN Posts AS answer ON question.Id = answer.ParentId AND question.AcceptedAnswerId = answer.Id AND question.Tags LIKE '%##TagName1##%' \/* AND P.Tags like '%##TagName2##%' *\/","CreationDate":"2017-02-18 00:20:26","validated":false,"QueryBody_Original":"SELECT  COUNT (question.Id)--TOP 10 question.Id as [Post Link], answer.Id as [answer Link], answer.body, question.tags\nFROM Posts question\nINNER JOIN Posts answer\nON question.Id = answer.ParentId\nAND question.AcceptedAnswerId = answer.Id\nAND question.Tags like '%##TagName1##%' --AND P.Tags like '%##TagName2##%'"},{"QuerySetId":629475,"Title":"Count total number of occurance of a particular tag","Description":null,"QueryBody":"SELECT COUNT(*) FROM Tags","CreationDate":"2017-02-17 18:49:32","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Tags;"},{"QuerySetId":629485,"Title":"Posts made CW after their creation","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", a.Score FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE a.CreationDate <> a.CommunityOwnedDate AND q.CommunityOwnedDate IS NULL AND NOT a.CommunityOwnedDate IS NULL AND q.PostTypeId = 1 AND a.PostTypeID = 2 ORDER BY a.Score","CreationDate":"2017-02-17 17:50:37","validated":false,"QueryBody_Original":"SELECT  a.Id as [Post Link],a.Score\n  from Posts q INNER JOIN Posts a ON a.ParentId=q.Id\n  WHERE\n    a.CreationDate != a.CommunityOwnedDate AND\n    q.CommunityOwnedDate IS NULL AND\n    a.CommunityOwnedDate IS NOT NULL AND\n    q.PostTypeId=1 AND\n    a.PostTypeID=2\n  ORDER BY a.Score"},{"QuerySetId":629632,"Title":"Top Questions with accepted answer by tag order by score ","Description":null,"QueryBody":"SELECT question.Id AS \"Post Link\", question.Title AS \"Question Title\", answer.Id AS \"answer Link\", question.Score AS \"Question Score\", answer.body, question.tags FROM Posts AS question INNER JOIN Posts AS answer ON question.Id = answer.ParentId AND question.AcceptedAnswerId = answer.Id AND question.Tags LIKE '%##TagName1##%' AND NOT question.Tags LIKE '%##TagName2##%' AND NOT question.Tags LIKE '%##TagName3##%' ORDER BY question.Score DESC LIMIT 30000","CreationDate":"2017-02-18 11:21:24","validated":false,"QueryBody_Original":"SELECT  TOP 30000 question.Id as [Post Link],question.Title as [Question Title], answer.Id as [answer Link], question.Score as [Question Score], answer.body, question.tags\nFROM Posts question\nINNER JOIN Posts answer\nON question.Id = answer.ParentId\nAND question.AcceptedAnswerId = answer.Id\nAND question.Tags like '%##TagName1##%' \nAND NOT question.Tags like '%##TagName2##%'\nAND NOT question.Tags like '%##TagName3##%'\nORDER BY question.Score Desc\n--AND answer.Score < ##maxanswerscore##\n--AND poster.Reputation < ##maxreputation:int##"},{"QuerySetId":629646,"Title":"Get all posts by tag","Description":null,"QueryBody":"SELECT Body FROM Posts","CreationDate":"2017-02-18 00:32:40","validated":false,"QueryBody_Original":"SELECT  Body from Posts"},{"QuerySetId":629829,"Title":"posts, users, badges merging ","Description":null,"QueryBody":"SELECT a.Reputation, a.DisplayName, a.AboutMe, a.Id, c.Score, c.Tags FROM Users AS a JOIN Posts AS c ON c.OwnerUserId = a.Id JOIN Badges AS b ON b.UserId = a.Id","CreationDate":"2017-02-18 22:41:12","validated":false,"QueryBody_Original":"SELECT  a.Reputation, a.DisplayName, a.AboutMe, a.Id, c.Score,c.Tags\nfrom Users a JOIN Posts c \non c.OwnerUserId=a.Id \nJOIN Badges b on b.UserId=a.Id"},{"QuerySetId":629853,"Title":"My posts sorted by length","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, Body, CreationDate, LENGTH(body) FROM Posts WHERE OwnerUserId = '810077' AND YEAR(CreationDate) >= 2008 ORDER BY LENGTH(body) DESC","CreationDate":"2017-02-18 22:58:14","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Score, Body, CreationDate, len(body)\n  FROM Posts \n WHERE OwnerUserId = '810077'\n AND YEAR(CreationDate)>=2008\n ORDER BY len(body) DESC"},{"QuerySetId":630021,"Title":"Dupe posts untouched by high-rep users","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.ViewCount, p.Score FROM Posts AS p LEFT JOIN PostLinks AS pl ON pl.PostId = p.Id WHERE NOT ClosedDate IS NULL AND pl.LinkTypeId = 3 AND Score < 5 AND NOT p.ID IN (SELECT DISTINCT PostId FROM PostHistory AS ph INNER JOIN Users AS u ON u.Id = ph.UserId WHERE u.Reputation > 5000) GROUP BY p.Id, p.ViewCount, p.Score ORDER BY p.ViewCount DESC LIMIT 100","CreationDate":"2017-02-19 17:46:35","validated":false,"QueryBody_Original":"SELECT  TOP 100 p.Id as [Post Link], p.ViewCount, p.Score FROM Posts p\nLEFT JOIN PostLinks pl ON pl.PostId = p.Id\nWHERE ClosedDate IS NOT NULL AND pl.LinkTypeId = 3 AND Score < 5\nAND p.ID NOT IN\n(SELECT DISTINCT PostId FROM PostHistory ph INNER JOIN Users u ON u.Id = ph.UserId WHERE u.Reputation > 5000)\nGROUP BY p.Id, p.ViewCount, p.Score\nORDER BY p.ViewCount DESC"},{"QuerySetId":630030,"Title":"Posts starting with a small letter","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ViewCount, Score FROM Posts WHERE LEFT(Title, 1) = LOWER(LEFT(Title, 1)) COLLATE SQL_Latin1_General_CP1_CS_AS AND LEFT(Title, 1) LIKE '[A-Za-z]%' ORDER BY ViewCount DESC LIMIT 100","CreationDate":"2017-02-25 12:36:13","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id as [Post Link], ViewCount, Score FROM Posts \nWHERE LEFT(Title, 1) = LOWER(LEFT(Title, 1)) COLLATE SQL_Latin1_General_CP1_CS_AS\nAND LEFT(Title, 1) LIKE '[A-Za-z]%'\nORDER BY ViewCount DESC"},{"QuerySetId":630155,"Title":"Top 300 SO Users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users ORDER BY Reputation DESC LIMIT 300","CreationDate":"2018-03-21 08:58:37","validated":false,"QueryBody_Original":"SELECT  TOP 300\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\n\nORDER BY\n    Reputation DESC;"},{"QuerySetId":630880,"Title":"Protected Questions on Sci Fi SE","Description":null,"QueryBody":"SELECT Hist.PostId AS \"Post Link\", P.ViewCount, P.Score, P.AnswerCount, P.LastActivityDate FROM PostHistory AS Hist INNER JOIN Posts AS P ON P.id = Hist.PostId WHERE PostHistoryTypeId = 19 AND P.PostTypeId = 1 ORDER BY P.AnswerCount DESC","CreationDate":"2017-04-08 12:15:22","validated":false,"QueryBody_Original":"SELECT  Hist.PostId AS [Post Link], P.ViewCount, P.Score, P.AnswerCount, P.LastActivityDate\nFROM PostHistory as Hist\nINNER JOIN Posts as P\nON P.id = Hist.PostId\nWHERE PostHistoryTypeId  = 19  and\n      P.PostTypeId = 1\nOrder By P.AnswerCount DESC"},{"QuerySetId":631078,"Title":"Total questions and answers on site during time period","Description":null,"QueryBody":"SELECT SUM(PostTypeId) FROM Posts WHERE PostTypeId IN (1, 2) GROUP BY PostTypeId","CreationDate":"2017-11-19 23:41:20","validated":false,"QueryBody_Original":"SELECT \nSUM (PostTypeId)\nFROM Posts\nWHERE PostTypeId in (1,2) \nGROUP BY PostTypeId"},{"QuerySetId":631980,"Title":"Users with ongoing temporal suspension","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE Users.Reputation = 1 AND Users.Id > 1 AND (DownVotes > 0 OR Id IN (SELECT UserId FROM Badges WHERE Name = 'Explainer')) ORDER BY Users.DisplayName","CreationDate":"2017-09-08 22:16:26","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], *\nFROM Users\nWHERE\n  Users.Reputation = 1\n  AND\n  Users.Id > 1\n  AND\n  (\n    DownVotes > 0\n    OR\n    Id IN (\n      SELECT UserId FROM Badges WHERE Name='Explainer'\n    )\n  )\nORDER BY Users.DisplayName;"},{"QuerySetId":632322,"Title":"Find Developers with Open Source projects in City","Description":null,"QueryBody":"SELECT DISTINCT u.Id AS \"User Link\", u.Reputation FROM Users AS u INNER JOIN Badges AS b ON b.UserId = u.Id WHERE LOWER(Location) LIKE LOWER('%##CityOrSuburbName##%') AND LOWER(AboutMe) LIKE '%github%' OR LOWER(AboutMe) LIKE '%bitbucket%' OR LOWER(AboutMe) LIKE '%sourceforge%' OR LOWER(AboutMe) LIKE '%cloudforge%' ORDER BY Reputation DESC","CreationDate":"2017-02-24 12:31:36","validated":false,"QueryBody_Original":"SELECT  DISTINCT  \n    u.Id AS [User Link], \n    u.Reputation\nFROM\n    Users u\nINNER JOIN Badges b ON b.UserId = u.Id\nWHERE\nLOWER(Location) LIKE LOWER('%##CityOrSuburbName##%') AND\n    LOWER(AboutMe) LIKE '%github%' OR\n    LOWER(AboutMe) LIKE '%bitbucket%' OR\n    LOWER(AboutMe) LIKE '%sourceforge%' OR\n    LOWER(AboutMe) LIKE '%cloudforge%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":632425,"Title":"Tell me about my question!","Description":null,"QueryBody":"SELECT * FROM Posts","CreationDate":"2017-02-24 15:00:44","validated":false,"QueryBody_Original":"SELECT  *\nfrom Posts"},{"QuerySetId":632477,"Title":"Select all tags from Posts under a certain Id","Description":null,"QueryBody":"SELECT tags FROM Posts WHERE id < 10000","CreationDate":"2017-02-24 16:54:01","validated":false,"QueryBody_Original":"SELECT  tags from Posts where id< 10000;"},{"QuerySetId":632897,"Title":"[Getting Feet Wet]Find the most common tags [greatest-least]","Description":null,"QueryBody":"SELECT * FROM Tags AS t WHERE t.Count > 100 AND NOT TagName IN ('compiler-errors', 'compiler-warnings') ORDER BY t.Count DESC","CreationDate":"2017-02-26 19:01:29","validated":false,"QueryBody_Original":"SELECT  *\nfrom Tags as t\nWhere t.Count >100\nand TagName NOT in ('compiler-errors', 'compiler-warnings')\norder by t.Count desc;\n\n\/*\nSELECT *\nfrom Tags as t\nWhere t.Count >100\norder by t.Count desc;\n-- Returns 2046\n*\/\n\/*\nSELECT *\nfrom Tags as t\nWhere TagName like '%compiler-error%';\n--id= 4087 tag name= compiler-errors count=11332\n*\/\n\n\/*\nSELECT *\nfrom Tags as t\nWhere TagName = 'compiler-warnings';\n-- 1633 with the tag <compiler-warnings>\n--id= 18348\n*\/\n\/*\nSELECT *\nfrom Tags as t\nWhere TagName = 'compiler-errors';\n-- 11332 posts with the tag <compiler-errors>\n*\/\n\n\n\/*SELECT Count(*)\nfrom Tags\n--48214 tags available\n*\/"},{"QuerySetId":632985,"Title":"Questions and Accepted Answer: Search the set","Description":null,"QueryBody":"SELECT p1.\"Id\" AS \"Post Link\", p1.*, p2.\"Id\" AS \"Post Link\", p2.\"Id\" AS \"Post Link\", p2.\"Score\" AS \"p2Score\", p2.\"Body\" AS \"p2Body\", p2.\"OwnerUserId\" AS \"p2UserId\", p2.\"OwnerDisplayName\" AS \"p2OwnerDisplayName\", p2.\"CommentCount\" AS \"p2CommentCount\" FROM posts AS p1, posts AS p2 WHERE p1.\"ParentId\" IS NULL AND NOT p1.\"AcceptedAnswerId\" IS NULL AND p1.\"AcceptedAnswerId\" = p2.\"Id\" AND (p1.Tags LIKE '%compiler-errors%' OR p1.Tags LIKE '%compiler-warnings%') AND p1.\"Body\" LIKE '%reason:%' ORDER BY p1.\"Score\" DESC","CreationDate":"2017-05-13 04:52:11","validated":false,"QueryBody_Original":"SELECT \n  p1.\"Id\" as [Post Link],\n  p1.*, \n  p2.\"Id\" as [Post Link],\n  p2.\"Id\" as [Post Link],\n  p2.\"Score\" as \"p2Score\",\n  p2.\"Body\" as \"p2Body\",\n  p2.\"OwnerUserId\" as \"p2UserId\",\n  p2.\"OwnerDisplayName\" as \"p2OwnerDisplayName\",\n  p2.\"CommentCount\" as \"p2CommentCount\"\nFROM \n   posts p1,\n   posts p2\nWHERE \n   p1.\"ParentId\" IS NULL AND p1.\"AcceptedAnswerId\" IS NOT NULL\n   AND p1.\"AcceptedAnswerId\" = p2.\"Id\"\nAND (p1.Tags LIKE '%compiler-errors%' OR p1.Tags LIKE '%compiler-warnings%')\nAND p1.\"Body\" LIKE '%reason:%'\nORDER BY p1.\"Score\" DESC"},{"QuerySetId":633147,"Title":"extract the top posts from the stackoverflow data","Description":null,"QueryBody":"SELECT Title, Tags FROM Posts WHERE NOT Posts.Title IS NULL LIMIT 100","CreationDate":"2017-02-26 13:14:19","validated":false,"QueryBody_Original":"SELECT  TOP 100 Title, Tags\nFROM Posts\nWHERE Posts.Title is not NULL;"},{"QuerySetId":633267,"Title":"Find the top 1000 posts from the stackoverflow dataset","Description":null,"QueryBody":"SELECT Title, Tags FROM Posts WHERE NOT Title IS NULL LIMIT 1000","CreationDate":"2017-02-26 20:09:59","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Title,Tags\nfrom Posts\nwhere Title is not null;"},{"QuerySetId":633301,"Title":"All my posts from 2016","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Posts.OwnerUserId = 263693 AND TIME_TO_STR(CreationDate, '%YEAR') = 2016","CreationDate":"2017-02-26 23:12:54","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts\nWHERE Posts.OwnerUserId = 263693\nAND DATEPART(YEAR, CreationDate) = 2016"},{"QuerySetId":633462,"Title":"Top 20 users from Ajman","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%dubai%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2017-08-19 15:04:54","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%dubai%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":633885,"Title":"Get users that upvoted the most from specific location and skill","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", WebsiteUrl, AboutMe, Views FROM Users WHERE location LIKE 'Monterrey%' ORDER BY Views DESC","CreationDate":"2017-03-01 23:38:15","validated":false,"QueryBody_Original":"SELECT  Users.Id AS [User Link], WebsiteUrl, AboutMe, Views\nfrom Users\nwhere location like 'Monterrey%' \norder by Views DESC"},{"QuerySetId":633964,"Title":"Select Posts.Id, Posts.Title, Posts.AcceptedAnswerID, Comments.PostId, Comments.Text, Comments.Creat","Description":null,"QueryBody":"SELECT Posts.Id, Posts.Title, Posts.AcceptedAnswerID, Comments.PostId, Comments.Text, Comments.CreationDate FROM Posts RIGHT JOIN Comments ON Posts.AcceptedAnswerId = Comments.PostId","CreationDate":"2017-02-28 17:16:16","validated":false,"QueryBody_Original":"SELECT  Posts.Id, Posts.Title, Posts.AcceptedAnswerID, Comments.PostId, Comments.Text, Comments.CreationDate from Posts Right Join Comments on Posts.AcceptedAnswerId=Comments.PostId;"},{"QuerySetId":634255,"Title":"Short comments with a string","Description":null,"QueryBody":"SELECT Id, Id AS \"Comment Link\" FROM Comments WHERE LOWER(Text) LIKE '%.....' AND LENGTH(REPLACE(Text, '.', '')) <= 15 ORDER BY LENGTH(Text), Id","CreationDate":"2017-04-11 05:23:08","validated":false,"QueryBody_Original":"SELECT  Id, Id as [Comment Link]\nfrom Comments\nwhere lower(Text) like '%.....' and len(replace(Text, '.', '')) <= 15 \norder by len(Text), Id asc"},{"QuerySetId":634520,"Title":"London based Angular Bronze Badge","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 AND Badges.name = 'angularjs' AND LOWER(Users.Location) LIKE LOWER('%London%') ORDER BY Reputation DESC","CreationDate":"2017-03-01 15:21:11","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    AND Badges.name = 'angularjs'\n    AND LOWER(Users.Location) LIKE LOWER('%London%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":634706,"Title":"Number of posts per year","Description":null,"QueryBody":"SELECT YEAR(CreationDate), COUNT(id) FROM Posts WHERE answerCount > 1 GROUP BY YEAR(CreationDate)","CreationDate":"2020-05-28 10:05:16","validated":false,"QueryBody_Original":"SELECT  year(CreationDate), count(id)\n  from Posts\n  where answerCount > 1\n  \n  group by year(CreationDate)\n  --having count(ViewCount) > 100"},{"QuerySetId":634780,"Title":"Number of Users by Country","Description":null,"QueryBody":"SELECT COUNT(*) AS total FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%')","CreationDate":"2017-03-02 04:26:03","validated":false,"QueryBody_Original":"SELECT  \nCOUNT(*) AS total\nFROM\n  Users\nWHERE\n  LOWER(Location) LIKE LOWER('%##CountryName##%')"},{"QuerySetId":635071,"Title":"Ratio vote per user by age","Description":null,"QueryBody":"SELECT Age, (SUM(UpVotes + DownVotes) \/ COUNT(Age)) AS \"Ratio vote per user\", (SUM(UpVotes) \/ COUNT(Age)) AS \"Ratio upvote per user\", (SUM(DownVotes) \/ COUNT(Age)) AS \"Ratio downvote per user\" FROM Users WHERE DATEDIFF(CURRENT_TIMESTAMP(), -12) < LastAccessDate AND Age <> 0 AND AccountId <> -1 GROUP BY Age ORDER BY Age","CreationDate":"2017-03-02 20:42:01","validated":false,"QueryBody_Original":"SELECT  Age,\n  (SUM(UpVotes + DownVotes)\/COUNT(Age)) AS [Ratio vote per user],\n  (SUM(UpVotes)\/COUNT(Age)) AS [Ratio upvote per user],\n  (SUM(DownVotes)\/COUNT(Age)) AS [Ratio downvote per user]\n  FROM Users\nWHERE DateDiff(month, -12, GetDate()) < LastAccessDate\nAND Age <> 0\nAND AccountId <> -1\nGroup By Age Order By Age"},{"QuerySetId":635081,"Title":"Users with most reputation from single post","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", u.Reputation FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id GROUP BY p.OwnerUserId, u.Reputation HAVING COUNT(p.Id) = 1 ORDER BY u.Reputation DESC LIMIT 100","CreationDate":"2017-03-02 21:18:40","validated":false,"QueryBody_Original":"SELECT  Top 100 p.OwnerUserId As [User Link], u.Reputation\nFrom Posts p Inner Join Users u On p.OwnerUserId=u.Id\nGroup By p.OwnerUserId, u.Reputation\nHaving Count(p.Id)=1\nOrder By u.Reputation Desc"},{"QuerySetId":635644,"Title":"Question I answered without upvoting","Description":null,"QueryBody":"SELECT * FROM Posts WHERE postTypeId = 2","CreationDate":"2017-03-03 21:02:13","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE postTypeId = 2"},{"QuerySetId":636339,"Title":"self-accepted answer with negative score to a well received question","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score AS QuestionScore, a.Score AS AnswerScore FROM Posts AS p, Posts AS a WHERE p.PostTypeId = 1 AND NOT p.AcceptedAnswerId IS NULL AND a.Id = p.AcceptedAnswerId AND a.Score < 0 AND p.Score > 0 AND p.OwnerUserId = a.OwnerUserId ORDER BY p.Score - a.Score DESC","CreationDate":"2017-03-06 17:16:15","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link],\np.Score as QuestionScore,\na.Score as AnswerScore\nFROM Posts AS p, Posts AS a\n  WHERE p.PostTypeId = 1 AND\n        p.AcceptedAnswerId IS NOT NULL AND\n        a.Id = p.AcceptedAnswerId AND\n        a.Score < 0 And\n        p.Score > 0 And\n        p.OwnerUserId = a.OwnerUserId\n  ORDER by\n     p.Score - a.Score DESC\n ;"},{"QuerySetId":636526,"Title":"Active Users -- Posted Questions Each Day of a Week","Description":null,"QueryBody":"SELECT UserId, UserName, PostYear, PostWeek, COUNT(*) AS ActiveDaysPerWeek FROM (SELECT u.Id AS UserId, u.DisplayName AS UserName, TIME_TO_STR(p.CreationDate, '%Y') AS PostYear, TIME_TO_STR(p.CreationDate, '%W') AS PostWeek, TIME_TO_STR(p.CreationDate, '%W') AS PostWeekday, COUNT(*) AS PostsPerDay FROM Users AS u INNER JOIN Posts AS p ON (u.Id = p.OwnerUserId) WHERE p.PostTypeId = 1 GROUP BY u.Id, u.DisplayName, TIME_TO_STR(p.CreationDate, '%Y'), TIME_TO_STR(p.CreationDate, '%W'), TIME_TO_STR(p.CreationDate, '%W')) AS rv GROUP BY UserId, UserName, PostYear, PostWeek HAVING COUNT(*) = 7 ORDER BY UserId, PostYear, PostWeek","CreationDate":"2017-03-08 02:47:24","validated":false,"QueryBody_Original":"SELECT  UserId,\n  UserName,\n  PostYear,\n  PostWeek,\n  COUNT(*) as ActiveDaysPerWeek\nFROM (SELECT u.Id as UserId,\n         u.DisplayName as UserName,\n         DATEPART(year, p.CreationDate) as PostYear,\n         DATEPART(week, p.CreationDate) as PostWeek,\n         DATEPART(weekday, p.CreationDate) as PostWeekday,\n         COUNT(*) as PostsPerDay\n      FROM Users u\n        INNER JOIN Posts p ON(u.Id = p.OwnerUserId)\n      WHERE p.PostTypeId = 1\n      GROUP BY u.Id,\n        u.DisplayName,\n        DATEPART(year, p.CreationDate),\n        DATEPART(week, p.CreationDate),\n        DATEPART(weekday, p.CreationDate)) rv\nGROUP BY UserId,\n  UserName,\n  PostYear,\n  PostWeek\nHAVING COUNT(*) = 7\nORDER BY UserId, PostYear, PostWeek"},{"QuerySetId":636531,"Title":"Total number of users grouped by location","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE Location = 'India'","CreationDate":"2017-03-07 01:29:49","validated":false,"QueryBody_Original":"SELECT  count(Id)\nfrom Users\nwhere\nLocation = 'India'"},{"QuerySetId":637098,"Title":"How many users have 30k+?","Description":null,"QueryBody":"SELECT COUNT(*) AS users FROM Users WHERE Reputation >= 30000","CreationDate":"2017-03-07 23:34:43","validated":false,"QueryBody_Original":"SELECT  count(*) users\nfrom Users\nwhere Reputation >= 30000"},{"QuerySetId":637150,"Title":"The earliest post posted by a user","Description":null,"QueryBody":"SELECT r.UserId, r.UserName, r.Reputation, p.CreationDate, r.CreationRank, p.Title FROM Posts AS p INNER JOIN (SELECT u.Id AS UserId, u.DisplayName AS UserName, u.Reputation AS Reputation, p.Id AS PostId, RANK() OVER (PARTITION BY u.Id ORDER BY p.CreationDate) AS CreationRank FROM Users AS u INNER JOIN Posts AS p ON (u.Id = p.OwnerUserId) WHERE u.AboutMe LIKE '%at Facebook%' AND p.PostTypeId = 1) AS r ON (p.Id = r.PostId) WHERE r.CreationRank = 1 ORDER BY r.Reputation DESC LIMIT 10","CreationDate":"2017-03-08 00:57:49","validated":false,"QueryBody_Original":"SELECT  TOP 10\n  r.UserId, \n  r.UserName, \n  r.Reputation, \n  p.CreationDate, \n  r.CreationRank,\n  p.Title\nFROM Posts p\n  INNER JOIN (SELECT u.Id as UserId,\n                     u.DisplayName as UserName,\n                     u.Reputation as Reputation,\n                     p.Id as PostId,\n                     RANK() OVER (PARTITION BY u.Id ORDER BY p.CreationDate) as CreationRank\n              FROM Users u\n                   INNER JOIN Posts p ON (u.Id = p.OwnerUserId)\n              WHERE u.AboutMe LIKE '%at Facebook%' AND\n                    p.PostTypeId = 1) r ON (p.Id = r.PostId)\nWHERE r.CreationRank = 1\nORDER BY r.Reputation DESC"},{"QuerySetId":637165,"Title":"Find HTTP images by active date","Description":null,"QueryBody":"SELECT Score, Id AS \"Post Link\" FROM Posts WHERE Body LIKE '% src=\"http:%' ORDER BY LastActivityDate","CreationDate":"2017-03-08 01:15:12","validated":false,"QueryBody_Original":"SELECT  Score,\n       Id AS [Post Link]\nFROM   Posts\nWHERE  Body LIKE '% src=\"http:%'\nORDER  BY LastActivityDate ASC"},{"QuerySetId":637177,"Title":"User Activity -- Number of Questions Clustered within Interval","Description":null,"QueryBody":"SELECT rv.UserId, rv.UserName, rv.Reputation, COUNT(*) AS Periods FROM (SELECT u.Id AS UserId, u.DisplayName AS UserName, u.Reputation AS Reputation, p.CreationDate AS PostDate, LAG(p.CreationDate, 1, 0) OVER (PARTITION BY u.Id ORDER BY p.CreationDate) AS PrevPostDate FROM Users AS u INNER JOIN Posts AS p ON (u.Id = p.OwnerUserId) WHERE u.AboutMe LIKE '%at Facebook%' AND p.PostTypeId = 1) AS rv WHERE DATEDIFF(rv.PostDate, rv.PrevPostDate) >= 5 GROUP BY rv.UserId, rv.UserName, rv.Reputation ORDER BY Periods DESC LIMIT 100","CreationDate":"2017-03-08 01:54:58","validated":false,"QueryBody_Original":"SELECT  TOP 100 \n  rv.UserId,\n  rv.UserName,\n  rv.Reputation,\n  COUNT(*) as Periods\nFROM (SELECT\n        u.Id as UserId,\n        u.DisplayName as UserName,\n        u.Reputation as Reputation,\n        p.CreationDate as PostDate,\n        LAG(p.CreationDate, 1, 0) \n          OVER(PARTITION BY u.Id ORDER BY p.CreationDate) as PrevPostDate\n      FROM Users u\n            INNER JOIN Posts p ON(u.Id = p.OwnerUserId)\n      WHERE u.AboutMe LIKE '%at Facebook%' AND\n            p.PostTypeId = 1) rv\nWHERE DATEDIFF(dd, rv.PrevPostDate, rv.PostDate) >= 5\nGROUP BY rv.UserId, rv.UserName, rv.Reputation \nORDER BY Periods DESC"},{"QuerySetId":637387,"Title":"Top 50 users from UAE","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%united arab emirates%' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2018-12-16 16:10:40","validated":false,"QueryBody_Original":"SELECT  TOP 150\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%united arab emirates%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":637434,"Title":"Which posts have included citations?","Description":null,"QueryBody":"SELECT DISTINCT PostId AS \"Post Link\" \/* count(*) posts_with_citations *\/ FROM PostHistory WHERE PostHistoryTypeId IN (2, 5) AND Text LIKE '%zbMATH%'","CreationDate":"2017-04-19 17:50:17","validated":false,"QueryBody_Original":"SELECT  distinct PostId as [Post Link] --count(*) posts_with_citations\nfrom PostHistory\nwhere PostHistoryTypeId in (2,5)\n      and Text like '%zbMATH%'"},{"QuerySetId":637799,"Title":"PostIds of posts upvoted by British and Irish devs in the last three months","Description":null,"QueryBody":"SELECT P.Id FROM Posts AS P JOIN Votes AS V ON V.PostId = P.Id JOIN Users AS U ON U.Id = V.UserId WHERE (U.Location LIKE '%United Kingdom%' OR U.Location LIKE '%UKI' OR U.Location LIKE '%UK' OR U.Location LIKE '%U.K' OR U.Location LIKE '%Great Britain%' OR U.Location LIKE '%GB' OR U.Location LIKE '%G.B' OR U.Location LIKE '%England%' OR U.Location LIKE '%Wales%' OR U.Location LIKE '%Ireland%' OR U.Location LIKE '%Northern Ireland%' OR U.Location LIKE '%N. Ireland%' OR U.Location LIKE '%N.Ireland%') AND V.CreationDate > DATEADD(MONTH, -3, GETDATE())","CreationDate":"2017-03-08 22:11:34","validated":false,"QueryBody_Original":"SELECT  P.Id \nFROM Posts P\nJOIN Votes V ON V.PostId=P.Id\nJOIN Users U ON U.Id=V.UserId\nWHERE (\n   U.Location LIKE '%United Kingdom%' OR \n   U.Location LIKE '%UKI' OR\n   U.Location LIKE '%UK' OR\n   U.Location LIKE '%U.K' OR\n   U.Location LIKE '%Great Britain%' OR\n   U.Location LIKE '%GB' OR\n   U.Location LIKE '%G.B' OR\n   U.Location LIKE '%England%' OR\n   U.Location LIKE '%Wales%' OR\n   U.Location LIKE '%Ireland%' OR\n   U.Location LIKE '%Northern Ireland%' OR\n   U.Location LIKE '%N. Ireland%' OR\n   U.Location LIKE '%N.Ireland%'\n  )\nAND V.CreationDate > DATEADD(MONTH, -3, GETDATE())"},{"QuerySetId":637874,"Title":"select * from Posts where Id = 8708216;","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 8708216","CreationDate":"2017-03-09 01:47:49","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id = 8708216;"},{"QuerySetId":638009,"Title":"Top 100 users with most profile views","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Views, Reputation, CreationDate AS JoiningDate, Location FROM Users ORDER BY Users.Views DESC LIMIT 100","CreationDate":"2017-03-09 15:35:36","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id as [User Link], Views, Reputation, CreationDate as JoiningDate, Location FROM Users ORDER By Users.Views DESC;"},{"QuerySetId":638067,"Title":"Top 10 Users From India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE Reputation >= 20 AND (LOWER(Location) LIKE '%INDIA%' OR LOWER(Location) LIKE '%india%') ORDER BY Reputation LIMIT 100","CreationDate":"2019-10-29 14:42:59","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    Reputation>=20 and\n    (LOWER(Location) LIKE '%INDIA%'\n    OR LOWER(Location) LIKE '%india%')\nORDER BY\n    Reputation;"},{"QuerySetId":638271,"Title":"Bronze badges for Ruby in London","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 AND Badges.name = 'ruby' AND LOWER(Users.Location) LIKE LOWER('%London%') ORDER BY Reputation DESC","CreationDate":"2017-03-09 20:19:53","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    AND Badges.name = 'ruby'\n    AND LOWER(Users.Location) LIKE LOWER('%London%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":638314,"Title":"top 10 posts by score","Description":null,"QueryBody":"SELECT * FROM posts ORDER BY posts.Score DESC LIMIT 10","CreationDate":"2017-03-09 21:01:03","validated":false,"QueryBody_Original":"SELECT  TOP 10 * FROM posts ORDER BY posts.Score DESC"},{"QuerySetId":638326,"Title":"top 200,000 posts by viewcount","Description":null,"QueryBody":"SELECT * FROM posts ORDER BY posts.ViewCount DESC LIMIT 200000","CreationDate":"2017-03-09 21:04:53","validated":false,"QueryBody_Original":"SELECT  TOP 200000 * FROM posts ORDER BY posts.ViewCount DESC"},{"QuerySetId":638332,"Title":"number of distinct users, who used the word \u2018hadoop\u2019 in one of their posts","Description":null,"QueryBody":"SELECT * FROM posts WHERE UPPER(posts.Body) LIKE UPPER('%hadoop%') OR posts.Title LIKE ('%hadoop%')","CreationDate":"2017-03-14 04:02:09","validated":false,"QueryBody_Original":"SELECT  *  FROM posts WHERE Upper(posts.Body) LIKE Upper('%hadoop%')\nor posts.Title Like ('%hadoop%')"},{"QuerySetId":638934,"Title":"500 newest posts with \"java\" tags","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Title, Tags, Body, AcceptedAnswerId FROM posts WHERE (Tags LIKE '%java%') OR (Body LIKE '%java%') LIMIT 500","CreationDate":"2017-03-11 13:46:50","validated":false,"QueryBody_Original":"SELECT \n   TOP 500\n   Id AS [Post Link], \n   CreationDate,\n   Title, \n   Tags, \n   Body,\n   AcceptedAnswerId\nFROM posts\nWHERE (Tags like '%java%') \n  OR (Body like '%java%');"},{"QuerySetId":639159,"Title":"Who is also on twitter","Description":null,"QueryBody":"SELECT us.id AS \"User Link\", us.DisplayName, us.WebsiteUrl, us.AboutMe, Reputation FROM Users AS us WHERE us.WebsiteUrl LIKE '%twitter%' OR us.AboutMe LIKE '%twitter%'","CreationDate":"2019-03-24 15:27:21","validated":false,"QueryBody_Original":"SELECT  \n      us.id [User Link],\n       us.DisplayName,\n       us.WebsiteUrl,\n       us.AboutMe,\n       Reputation\nFROM Users us\nWHERE \nus.WebsiteUrl like '%twitter%'\nor \nus.AboutMe like '%twitter%';"},{"QuerySetId":639445,"Title":"Vote to Close, Edit to Improve, etc Zombies","Description":"Zombies that may need improvement via editing, or they may need an upvoted answer, or they may need to be closed.","QueryBody":"SELECT id AS \"Post Link\", Tags FROM Posts WHERE PostTypeId = 1 AND AnswerCount < 2 AND DeletionDate IS NULL AND ClosedDate IS NULL AND Score < 0 ORDER BY Score, Tags","CreationDate":"2017-03-12 18:26:49","validated":false,"QueryBody_Original":"SELECT  \n    id AS [Post Link],\n    Tags\nFROM Posts \nWHERE \n    PostTypeId = 1\n    AND AnswerCount < 2\n    AND DeletionDate IS NULL \n    AND ClosedDate IS NULL \n    AND Score < 0\nORDER BY \n    Score,\n    Tags"},{"QuerySetId":639457,"Title":"Top 1000 Users from Pakistan by Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2017-03-12 20:21:31","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":639514,"Title":"Top 250 Users In Pakistan by Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' OR UPPER(Location) LIKE '%PK%' ORDER BY Reputation DESC LIMIT 250","CreationDate":"2017-03-12 20:23:10","validated":false,"QueryBody_Original":"SELECT  TOP 250\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\n    OR UPPER(Location) LIKE '%PK%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":639580,"Title":"posts with more image markdown than html images","Description":null,"QueryBody":"SELECT postid AS \"Post Link\", mdi.numimages AS numMarkdownImages, hi.numimages AS NumHtmlImages, hi.viewcount AS ViewCount, hi.score AS Score, hi.creationdate AS CreationDate FROM (SELECT postid, LENGTH(markdown) - LENGTH(REPLACE(markdown, '![', 'X')) AS numimages FROM (SELECT ph.text AS markdown, ph.postid AS postid FROM posthistory AS ph JOIN (SELECT MAX(id) AS id FROM posthistory WHERE (posthistorytypeid = 2 OR posthistorytypeid = 5 OR posthistorytypeid = 8) GROUP BY postid) AS latestid ON latestid.id = ph.id) AS md) AS mdi JOIN (SELECT id, creationdate, score, viewcount, LENGTH(body) - LENGTH(REPLACE(body, '<img src', '<img sr')) AS numimages FROM posts) AS hi ON mdi.postid = hi.id WHERE mdi.numimages > 0 AND mdi.numimages > hi.numimages","CreationDate":"2017-03-12 22:24:46","validated":false,"QueryBody_Original":"SELECT  postid as [Post Link],\nmdi.numimages as numMarkdownImages,\nhi.numimages as NumHtmlImages,\nhi.viewcount as ViewCount,\nhi.score as Score,\nhi.creationdate as CreationDate\nfrom\n\n\n(SELECT postid,len(markdown) - len(replace(markdown, '![', 'X')) as numimages\nfrom\n(SELECT ph.text as markdown,ph.postid as postid from\nposthistory as ph\njoin \n(SELECT max(id) as id from posthistory where\n(posthistorytypeid = 2 or posthistorytypeid = 5 or posthistorytypeid = 8) \ngroup by postid) as latestid\non latestid.id = ph.id) as md) as mdi\n\njoin\n\n(\nSELECT id,creationdate,score,viewcount,len(body) - len(replace(body, '<img src', '<img sr')) as numimages\nfrom posts\n) as hi\non mdi.postid = hi.id\n\nwhere mdi.numimages > 0 and mdi.numimages > hi.numimages"},{"QuerySetId":639980,"Title":"Top 50 users from Dubai","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%united arab emirates%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2019-11-19 02:27:07","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%united arab emirates%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":640274,"Title":"The most-viewed unanswered questions for a tag","Description":null,"QueryBody":"SELECT DISTINCT q.Id AS \"Post Link\", q.ViewCount, q.CreationDate AS QuestionDate, AnswerCount FROM Posts AS q WHERE (SELECT COUNT(*) FROM Posts AS a WHERE a.ParentId = q.Id AND a.Score > 0) = 0 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND q.ParentId IS NULL AND AcceptedAnswerId IS NULL AND AnswerCount > 0 ORDER BY q.AnswerCount DESC LIMIT 1000","CreationDate":"2017-03-13 19:23:20","validated":false,"QueryBody_Original":"SELECT  DISTINCT TOP 1000 q.Id as [Post Link],  q.ViewCount, q.CreationDate AS QuestionDate,\n  AnswerCount\n  from Posts q\nwhere (SELECT count(*) from Posts a where a.ParentId = q.Id and a.Score > 0) = 0\nand CommunityOwnedDate is null and ClosedDate is null and q.ParentId is null \nand AcceptedAnswerId is null\nand AnswerCount > 0\nORDER BY q.AnswerCount DESC"},{"QuerySetId":641167,"Title":"Look at all badges for a person","Description":null,"QueryBody":"SELECT b.* FROM Badges AS b, Posts AS p WHERE b.UserId = 19799 AND p.Id = 1961962 AND b.Date > p.CreationDate","CreationDate":"2017-03-23 03:48:00","validated":false,"QueryBody_Original":"SELECT  \n  b.*\nFROM\n  Badges as b, Posts as p\nWHERE\n  b.UserId = 19799 and\n  p.Id = 1961962 and\n  b.Date > p.CreationDate;\n  \nSELECT COUNT (b.Id)\nFROM\n  Badges as b, Posts as p\nWHERE\n  b.UserId = 915865 and\n  p.Id = 11527418 and\n  b.Date <= p.CreationDate;"},{"QuerySetId":642048,"Title":"current state of record polymorphism","Description":null,"QueryBody":"SELECT Id, ViewCount, Title FROM Posts WHERE CreationDate > '2017-03-10'","CreationDate":"2017-03-16 14:58:23","validated":false,"QueryBody_Original":"SELECT  Id, ViewCount, Title from Posts where CreationDate > '2017-03-10'"},{"QuerySetId":644782,"Title":"Count - iOS questions that contain <code>","Description":null,"QueryBody":"SELECT COUNT(Title) FROM Posts AS Question WHERE Question.Body LIKE '%<code>%' AND Question.Tags LIKE '%windows-phone%'","CreationDate":"2017-04-03 21:04:21","validated":false,"QueryBody_Original":"SELECT  COUNT(Title) FROM \n  Posts AS Question \n  where    \n  Question.Body LIKE '%<code>%' and\n  Question.Tags like '%windows-phone%'"},{"QuerySetId":644795,"Title":"10000 ios questions more commented","Description":null,"QueryBody":"SELECT Id, Tags, CommentCount, AnswerCount, ViewCount, FavoriteCount, Score FROM Posts AS Question WHERE Question.Tags LIKE '%<ios%' ORDER BY CommentCount DESC LIMIT 10000","CreationDate":"2019-01-18 02:36:48","validated":false,"QueryBody_Original":"SELECT  TOP 10000 Id, Tags, CommentCount, \nAnswerCount, ViewCount, FavoriteCount, Score FROM \n  Posts AS Question \n  where    \n  Question.Tags like '%<ios%' \n  order by CommentCount DESC"},{"QuerySetId":645132,"Title":"Number of users created per month","Description":null,"QueryBody":"SELECT * FROM USERS LIMIT 10","CreationDate":"2017-03-21 09:54:16","validated":false,"QueryBody_Original":"SELECT  TOP 10 * FROM USERS;"},{"QuerySetId":645133,"Title":"Finding usages of MathJax '\\color' &c. commands","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate AS \"Creation Date\", STR_POSITION(p.Body, '\\color') AS \"'\\color' Index\", STR_POSITION(p.Body, '\\fcolorbox') AS \"'\\fcolor' Index\", STR_POSITION(p.Body, '\\colorbox') AS \"'\\colorbox' Index\" FROM Posts AS p WHERE STR_POSITION(p.Body, '\\color') > 0 OR STR_POSITION(p.Body, '\\fcolor') > 0","CreationDate":"2017-03-21 08:37:40","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link],\n   p.CreationDate as \"Creation Date\",\n   CHARINDEX('\\color', p.Body) AS \"'\\color' Index\",\n   CHARINDEX('\\fcolorbox', p.Body) AS \"'\\fcolor' Index\",\n   CHARINDEX('\\colorbox', p.Body) AS \"'\\colorbox' Index\"\n\nFROM Posts p\n\nWHERE CHARINDEX('\\color', p.Body) > 0\n   OR CHARINDEX('\\fcolor', p.Body) > 0"},{"QuerySetId":645165,"Title":"Top SO users from germany","Description":null,"QueryBody":"SELECT DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%germany%' OR Location LIKE N'%Germany%' OR Location LIKE N'%DE%' OR Location LIKE N'%de%' OR Location LIKE N'%deutschland%' ORDER BY reputation DESC LIMIT 3000","CreationDate":"2017-03-21 09:56:51","validated":false,"QueryBody_Original":"SELECT  TOP 3000\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%germany%'\n   OR Location like N'%Germany%'\n   OR Location like N'%DE%'\n   OR Location like N'%de%'\n   OR Location like N'%deutschland%' \nORDER BY\n   reputation DESC"},{"QuerySetId":645692,"Title":"Top 100 users from Vancouver, BC","Description":"Lists the top 100 users (ranked by reputation) that are located in Vancouver according to their profile information. Tries to filter out those in Vancouver, Washington.\r\n\r\nBased on http:\/\/data.stackexchange.com\/stackoverflow\/s\/1166\/top-100-users-from-vancouver\r\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC), Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Vancouver%' AND NOT Location LIKE N'%[ ,]WA%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2017-03-21 23:15:47","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   ROW_NUMBER() OVER(ORDER BY reputation DESC),\n   Id AS [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Vancouver%' AND Location NOT like N'%[ ,]WA%'\nORDER BY\n   reputation DESC"},{"QuerySetId":646252,"Title":"Android - Questions by Year","Description":null,"QueryBody":"SELECT Id, CreationDate, Score, ViewCount, Body, OwnerUserId, Title, Tags, AnswerCount FROM Posts WHERE Tags LIKE '%<android%' AND PostTypeId = 1 AND CreationDate BETWEEN '2010-01-01' AND '2010-12-31' ORDER BY CreationDate","CreationDate":"2017-03-22 22:00:53","validated":false,"QueryBody_Original":"SELECT  Id, CreationDate, Score, ViewCount, Body, OwnerUserId, Title, Tags, AnswerCount\nFROM Posts\nWHERE Tags like '%<android%'\nand PostTypeId = 1 \nand CreationDate between '2010-01-01' and '2010-12-31'\nORDER BY CreationDate ASC"},{"QuerySetId":646259,"Title":"Titles with Answers > 0","Description":null,"QueryBody":"SELECT P.Title, P.AcceptedAnswerId, P.AnswerCount, YEAR(P.CreationDate) FROM Posts AS P WHERE P.Title LIKE '%appium%' AND P.AnswerCount > 0 AND ((P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%robolectric%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%'))","CreationDate":"2017-04-19 00:15:40","validated":false,"QueryBody_Original":"SELECT  P.Title, P.AcceptedAnswerId, P.AnswerCount, YEAR(P.CreationDate)\nFROM Posts P\nWHERE P.Title like '%appium%' and\nP.AnswerCount > 0 and\n(\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%robolectric%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\n)"},{"QuerySetId":648466,"Title":"Users who have contributed accepted answers, located in Singapore","Description":null,"QueryBody":"SELECT owneruserid AS userid, MAX(users.displayname) AS displayname, MAX(users.reputation) AS reputation, MAX(users.aboutme) AS aboutme, MAX(users.location) AS location, COUNT(posts.id) AS numanswers FROM posts, users WHERE posts.id IN (SELECT acceptedanswerid FROM posts WHERE posttypeid = 1 AND tags LIKE '%devops%') AND users.id = posts.owneruserid AND location LIKE '%ingapore%' GROUP BY owneruserid ORDER BY numanswers DESC","CreationDate":"2017-05-22 05:07:20","validated":false,"QueryBody_Original":"SELECT \n  owneruserid as userid,\n  max(users.displayname) as displayname,\n  max(users.reputation) as reputation,\n  max(users.aboutme) as aboutme,\n  max(users.location) as location,\n  count(posts.id) as numanswers\nfrom\n  posts, users\nwhere\n  posts.id in (\n    SELECT\n      acceptedanswerid\n    from \n      posts\n    where\n      posttypeid=1\n      and tags like '%devops%'\n      -- and acceptedanswerid is not null\n  )\n  and users.id = posts.owneruserid\n  and location like '%ingapore%'\ngroup by\n  owneruserid\norder by\n  numanswers desc"},{"QuerySetId":649238,"Title":"Users by minimal reputation on (PSE, SF, SU, SO)","Description":null,"QueryBody":"SELECT SFU.Id AS \"User Link\", CASE WHEN SOU.Reputation < SFU.Reputation AND SOU.Reputation < SUU.Reputation THEN SOU.Reputation WHEN SFU.Reputation < SUU.Reputation AND SFU.Reputation < SOU.Reputation THEN SFU.Reputation ELSE SUU.Reputation END AS minrep, * FROM stackoverflow.dbo.users AS SOU, serverfault.dbo.users AS SFU, superuser.dbo.users AS SUU WHERE SOU.AccountId = SFU.AccountId AND SOU.AccountId = SUU.AccountId ORDER BY minrep DESC LIMIT 100","CreationDate":"2017-03-28 02:03:07","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  SFU.Id AS [User Link], \n  CASE\n    WHEN\n      SOU.Reputation < SFU.Reputation\n        AND SOU.Reputation < SUU.Reputation\n    THEN SOU.Reputation\n    \n    WHEN\n      SFU.Reputation < SUU.Reputation\n        AND SFU.Reputation < SOU.Reputation\n    THEN SFU.Reputation\n\n    ELSE SUU.Reputation\n  END AS minrep,\n  *\nFROM stackoverflow.dbo.users AS SOU,\n  serverfault.dbo.users AS SFU,\n  superuser.dbo.users AS SUU\nWHERE\n  SOU.AccountId = SFU.AccountId\n  AND SOU.AccountId = SUU.AccountId\nORDER BY minrep DESC"},{"QuerySetId":649371,"Title":"Unanswered Questions with Comments about answering","Description":null,"QueryBody":"SELECT Question.Id AS \"Post Link\", Question.Tags, Comments.Text FROM Posts AS Question INNER JOIN Comments ON Comments.PostId = Question.Id\/* six months old *\/ \/* open *\/ \/* question *\/  WHERE Question.PostTypeId = 1 AND Question.ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), Question.CreationDate) > 6 AND Question.AcceptedAnswerId IS NULL AND Question.Score >= 0 AND Comments.Text LIKE '%answer%' LIMIT 100","CreationDate":"2017-03-29 17:35:50","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Question.Id AS [Post Link],\n   Question.Tags,\n   Comments.Text\nFROM\n  Posts Question INNER JOIN\n  Comments ON Comments.PostId = Question.Id\nWHERE\n  Question.PostTypeId = 1  AND               -- question\n  Question.ClosedDate IS NULL AND          -- open\n  DATEDIFF(MONTH, Question.CreationDate, GETDATE()) > 6 AND-- six months old\n  Question.AcceptedAnswerId IS NULL AND\n  Question.Score >= 0 AND\n  Comments.Text LIKE '%answer%'"},{"QuerySetId":649484,"Title":"Consecutive days created a post","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", CreationDate, DATEDIFF(CreationDate, LAG(CreationDate) OVER (ORDER BY OwnerUserId, CreationDate)) AS days_between_posts FROM (SELECT OwnerUserId, CAST(CreationDate AS DATE) AS CreationDate FROM Posts AS p GROUP BY OwnerUserId, CAST(CreationDate AS DATE)) AS p WHERE 1 = 1 AND OwnerUserId > 1 GROUP BY OwnerUserId, CreationDate","CreationDate":"2017-03-28 14:19:27","validated":false,"QueryBody_Original":"SELECT  OwnerUserId [User Link]\n,      CreationDate\n,      datediff(d, lag(CreationDate) over (order by OwnerUserId, CreationDate), CreationDate) days_between_posts\nfrom   ( SELECT OwnerUserId\n         ,      cast(CreationDate as date) CreationDate\n         from   Posts p\n         group\n         by    OwnerUserId\n         ,     cast(CreationDate as date)\n       ) p\nwhere  1=1\nand    OwnerUserId > 1\ngroup\nby     OwnerUserId\n,      CreationDate"},{"QuerySetId":649955,"Title":"Users don't like to accept","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS N FROM Posts WHERE PostTypeId = 1 AND AcceptedAnswerId IS NULL AND NOT OwnerUserId IS NULL AND NOT ClosedDate IS NULL AND Posts.Id IN (SELECT DISTINCT ParentId FROM Posts) GROUP BY OwnerUserId ORDER BY N DESC LIMIT 100","CreationDate":"2017-03-28 23:50:20","validated":false,"QueryBody_Original":"SELECT  TOP 100 OwnerUserId AS [User Link], COUNT(*) AS N\nFROM Posts\nWHERE\n  PostTypeId = 1\n  AND AcceptedAnswerId IS NULL\n  AND OwnerUserId IS NOT NULL\n  AND ClosedDate IS NOT NULL\n  AND Posts.Id IN (SELECT DISTINCT ParentId FROM Posts)\nGROUP BY OwnerUserId\nORDER BY N DESC"},{"QuerySetId":649965,"Title":"Best Score\/ViewCount ratios per question","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, CAST(Score AS FLOAT) \/ CAST(ViewCount AS FLOAT) AS Factor FROM Posts WHERE PostTypeId = 1 AND Score > 0 AND ViewCount > 100 ORDER BY Factor DESC LIMIT 100","CreationDate":"2017-03-29 00:02:47","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], Score, ViewCount,\n  CAST(Score AS FLOAT)\/CAST(ViewCount AS FLOAT) AS Factor\nFROM Posts\nWHERE PostTypeId = 1 AND Score > 0 AND ViewCount > 100\nORDER BY Factor DESC"},{"QuerySetId":650008,"Title":"Logarithmic diagram of vote delay after post","Description":null,"QueryBody":"SELECT LOG(10) \/ LOG(2)","CreationDate":"2017-03-29 00:18:55","validated":false,"QueryBody_Original":"SELECT  LOG(10)\/LOG(2)"},{"QuerySetId":650150,"Title":"User profiles with ##Tag## badge of Gold","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Location, u.Reputation, u.websiteurl, u.AboutMe FROM Users AS u, Badges AS B WHERE (u.location LIKE ('%tasmania%')) AND (b.Name = '##Tag##') AND (b.Class = 1) AND b.UserId = u.Id GROUP BY u.Id, u.Reputation, u.Location, u.websiteurl, u.AboutMe ORDER BY u.Reputation DESC","CreationDate":"2017-03-30 18:34:10","validated":false,"QueryBody_Original":"SELECT  u.Id as [User Link], u.Location, u.Reputation, u.websiteurl, u.AboutMe\n\nfrom Users u, Badges B\n\nwhere  \n\n( u.location like ('%tasmania%') )\nAND\n\n(b.Name = '##Tag##')\n\nAND \n\n(b.Class = 1) \n\nAND b.UserId = u.Id\n\nGroup By\nu.Id, u.Reputation, u.Location, u.websiteurl, u.AboutMe\nOrder By u.Reputation desc"},{"QuerySetId":650331,"Title":"Comments that might be Answers ","Description":"Finds question posts that are open, unanswered, at least six months old, and with comments saying the word \"answer\". The goal is to find questions that have answers hiding in the comments.","QueryBody":"SELECT Question.Id AS \"Post Link\", Question.Tags, Comments.Text FROM Posts AS Question INNER JOIN Comments ON Comments.PostId = Question.Id LEFT OUTER JOIN Posts AS Answers ON Answers.ParentId = Question.Id AND Answers.PostTypeId = 2 INNER JOIN Users ON Question.OwnerUserId = Users.Id\/* No answer AND *\/ \/* six months old *\/ \/* open *\/ \/* question *\/  WHERE Question.PostTypeId = 1 AND Question.ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), Question.CreationDate) > 6 AND Question.AcceptedAnswerId IS NULL AND Question.Score >= 0 AND Comments.Text LIKE '%as an answer%' AND Answers.Id IS NULL AND Users.Reputation > 1 \/* Avoid guys who asked a question and left. *\/ LIMIT 100","CreationDate":"2017-03-30 15:03:05","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Question.Id AS [Post Link],\n   Question.Tags,\n   Comments.Text\nFROM\n  Posts Question INNER JOIN\n  Comments ON Comments.PostId = Question.Id LEFT OUTER JOIN\n  Posts Answers ON Answers.ParentId = Question.Id AND Answers.PostTypeId = 2 INNER JOIN\n  Users ON Question.OwnerUserId = Users.Id\nWHERE\n  Question.PostTypeId = 1  AND               -- question\n  Question.ClosedDate IS NULL AND          -- open\n  DATEDIFF(MONTH, Question.CreationDate, GETDATE()) > 6 AND-- six months old\n  Question.AcceptedAnswerId IS NULL AND\n  Question.Score >= 0 AND\n  Comments.Text LIKE '%as an answer%' AND\n  Answers.Id IS NULL AND     -- No answer AND\n  Users.Reputation > 1       --Avoid guys who asked a question and left."},{"QuerySetId":650511,"Title":"SELECT DisplayName, Id, Location, Reputation FROM Users","Description":null,"QueryBody":"SELECT DisplayName, Id, Location, Reputation FROM Users","CreationDate":"2017-03-29 20:51:54","validated":false,"QueryBody_Original":"SELECT  DisplayName, Id, Location, Reputation FROM Users"},{"QuerySetId":650838,"Title":"Gathering data to test some grep-like app I hacked together in half an hour or something","Description":"Yes, I couldn't find anything better than a nice and large CSV file to test a grep-like app on.","QueryBody":"SELECT Reputation, DisplayName FROM Users WHERE NOT DisplayName LIKE '%,%'","CreationDate":"2017-03-30 05:30:46","validated":false,"QueryBody_Original":"SELECT  Reputation, DisplayName from Users where DisplayName not like '%,%'\n-- The \"not like '%,%'\" part is for avoiding usernames that can make the resulting CSV\n-- very hard to process with regexes by containing commas. What I wanna do is to\n-- make sure my app can process files properly, not to test my regex-fu"},{"QuerySetId":650960,"Title":"Top 100 users by average score","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation, COUNT(Posts.Id) AS Questions, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 1 \/* Questions only *\/ GROUP BY Users.Id, displayname, Users.Reputation HAVING COUNT(Posts.Id) > 1 ORDER BY \"Average Score\" DESC LIMIT 100","CreationDate":"2017-09-06 20:45:40","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Users.Id AS [User Link],\n  Users.Reputation,\n  COUNT(Posts.Id) AS Questions,\n  CAST(AVG(CAST(Score AS FLOAT)) AS NUMERIC(6,2)) AS [Average Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE PostTypeId = 1 --Questions only\nGROUP BY Users.Id, displayname, Users.Reputation\nHAVING Count(Posts.Id) > 1\nORDER BY [Average Score] DESC"},{"QuerySetId":651012,"Title":"My ranking in the philippines","Description":null,"QueryBody":"SELECT t.RANK, t.\"USER\", t.Location, t.Reputation FROM (SELECT Id, ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"Rank\", DisplayName AS \"User\", \"Location\", \"Reputation\" FROM Users WHERE LOWER(Location) LIKE '%phil%') AS t WHERE t.Id = 2155668","CreationDate":"2019-02-13 00:16:29","validated":false,"QueryBody_Original":"SELECT  t.RANK, t.[USER], t.Location, t.Reputation FROM\n(\n    SELECT \n        Id,\n        ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [Rank], \n        DisplayName AS [User], \n        [Location],\n        [Reputation]\n    FROM\n        Users\n    WHERE\n        LOWER(Location) LIKE '%phil%'\n)as t\nwhere t.Id=2155668"},{"QuerySetId":651036,"Title":"The top one in the philippines","Description":null,"QueryBody":"SELECT t.RANK, t.\"USER\", t.Location, t.Reputation FROM (SELECT Id, ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"Rank\", DisplayName AS \"User\", \"Location\", \"Reputation\" FROM Users WHERE LOWER(Location) LIKE '%philippines%') AS t ORDER BY t.Reputation DESC","CreationDate":"2017-05-04 04:02:13","validated":false,"QueryBody_Original":"SELECT  t.RANK, t.[USER], t.Location, t.Reputation FROM\n(\n    SELECT \n        Id,\n        ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [Rank], \n        DisplayName AS [User], \n        [Location],\n        [Reputation]\n    FROM\n        Users\n    WHERE\n        LOWER(Location) LIKE '%philippines%'\n)as t order by t.Reputation desc"},{"QuerySetId":651537,"Title":"Bounties whose question was deleted","Description":null,"QueryBody":"SELECT 'site:\/\/q\/' \/*  Votes.PostId AS [Post Link], *\/ + CAST(Votes.PostId AS TEXT(10)) + '|link' AS Link, 'site:\/\/posts\/' + CAST(Votes.PostId AS TEXT(10)) + '\/timeline|timeline' AS Timeline, Votes.CreationDate FROM Votes LEFT JOIN Posts ON Posts.Id = Votes.PostId WHERE Votes.VoteTypeId = 9 \/* BountyStart *\/ AND Posts.Id IS NULL AND Votes.BountyAmount IS NULL ORDER BY Votes.CreationDate DESC LIMIT 20","CreationDate":"2017-03-30 22:20:29","validated":false,"QueryBody_Original":"SELECT  TOP 20\n--  Votes.PostId AS [Post Link],\n  'site:\/\/q\/'+CAST(Votes.PostId AS varchar(10))+'|link' AS Link,\n  'site:\/\/posts\/'+CAST(Votes.PostId AS varchar(10))+'\/timeline|timeline' AS Timeline,\n  Votes.CreationDate\nFROM Votes\nLEFT JOIN Posts ON Posts.Id = Votes.PostId\nWHERE Votes.VoteTypeId = 9 --BountyStart\n  AND Posts.Id IS NULL\n  AND Votes.BountyAmount IS NULL\nORDER BY Votes.CreationDate DESC"},{"QuerySetId":652371,"Title":"Activity by hour of day","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%h'), 'Questions', COUNT(*) FROM Posts WHERE PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%h') UNION SELECT TIME_TO_STR(CreationDate, '%h'), 'Answers', COUNT(*) FROM Posts WHERE PostTypeId = 2 GROUP BY TIME_TO_STR(CreationDate, '%h') UNION SELECT TIME_TO_STR(CreationDate, '%h'), 'Comments\/3', COUNT(*) \/ 3 FROM Comments GROUP BY TIME_TO_STR(CreationDate, '%h') UNION SELECT TIME_TO_STR(CreationDate, '%h'), 'Post Events\/5', COUNT(*) \/ 5 FROM PostHistory GROUP BY TIME_TO_STR(CreationDate, '%h')","CreationDate":"2017-04-02 08:19:07","validated":false,"QueryBody_Original":"SELECT  DATEPART(hour, CreationDate), 'Questions', COUNT(*)\n  FROM Posts WHERE PostTypeId = 1\n  GROUP BY DATEPART(hour, CreationDate)\nUNION SELECT DATEPART(hour, CreationDate), 'Answers', COUNT(*)\n  FROM Posts WHERE PostTypeId = 2\n  GROUP BY DATEPART(hour, CreationDate)\nUNION SELECT DATEPART(hour, CreationDate), 'Comments\/3', COUNT(*)\/3\n  FROM Comments GROUP BY DATEPART(hour, CreationDate)\nUNION SELECT DATEPART(hour, CreationDate), 'Post Events\/5', COUNT(*)\/5\n  FROM PostHistory GROUP BY DATEPART(hour, CreationDate)"},{"QuerySetId":653066,"Title":"Sum - Number of Answer - Android","Description":null,"QueryBody":"SELECT COUNT(P.ViewCount) FROM Posts AS P WHERE NOT P.Tags LIKE '%android%'","CreationDate":"2017-04-04 01:05:24","validated":false,"QueryBody_Original":"SELECT  count(P.ViewCount)\nFROM Posts P\nWHERE P.Tags NOT LIKE '%android%'"},{"QuerySetId":654271,"Title":"Bad questions, based on vote score and closure and the like_title ","Description":null,"QueryBody":"SELECT Score, CASE WHEN NOT ClosedDate IS NULL THEN 'N' ELSE 'Er' END AS \"Closed?\", Title AS \"Post Link\" FROM Posts WHERE PostTypeId \/* It's a question *\/ = 1 AND (NOT ClosedDate \/* Closed *\/ IS NULL OR Score \/* Very negative score *\/ < -3) ORDER BY Score LIMIT 500","CreationDate":"2017-04-06 11:08:18","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    Score\n  , CASE\n      WHEN ClosedDate IS NOT NULL THEN 'N'\n      ELSE 'Er'\n    END AS [Closed?]\n  , Title AS [Post Link] FROM Posts\nWHERE\n  -- It's a question\n  PostTypeId = 1\n  AND (\n    -- Closed\n    ClosedDate IS NOT NULL\n    OR\n    -- Very negative score\n    Score < -3\n  )\nORDER BY Score ASC;"},{"QuerySetId":654403,"Title":"Questions (possibly) with MathJax in the title","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score AS \"Score\", p.Tags AS \"Tags\", LENGTH(p.Title) - LENGTH(REPLACE(p.Title, '$', '')) AS \"$ Count\" FROM Posts AS p WHERE p.PostTypeId = 1 AND LENGTH(p.Title) - LENGTH(REPLACE(p.Title, '$', '')) >= 1 ORDER BY LENGTH(p.Title) - LENGTH(REPLACE(p.Title, '$', '')) DESC","CreationDate":"2017-04-06 18:23:13","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], p.Score AS 'Score', p.Tags AS 'Tags',\n  LEN(p.Title) - LEN(REPLACE(p.Title, '$', '')) AS '$ Count'\n\nFROM Posts p\n\nWHERE p.PostTypeId = 1 AND\n    LEN(p.Title) - LEN(REPLACE(p.Title, '$', '')) >= 1\n    \nORDER BY LEN(p.Title) - LEN(REPLACE(p.Title, '$', '')) DESC"},{"QuerySetId":654458,"Title":"Get question information given answer IDs","Description":null,"QueryBody":"SELECT MyAnswers.Id AS AnswerID, p.Id AS QuestionID, p.CreationDate, p.ViewCount, p.Tags FROM Posts AS p INNER JOIN (SELECT Id, ParentId FROM Posts WHERE Id IN (25210096, 25222542, 25240280, 25233555, 25307353, 25310175)) AS MyAnswers ON p.Id = MyAnswers.ParentId","CreationDate":"2017-04-07 00:24:40","validated":false,"QueryBody_Original":"SELECT  MyAnswers.Id AS AnswerID\n     , p.Id AS QuestionID\n     , p.CreationDate\n     , p.ViewCount\n     , p.Tags\nFROM Posts p\nINNER JOIN \n(\n  SELECT Id, ParentId\n  FROM Posts\n  WHERE Id IN (25210096, 25222542, 25240280, 25233555, 25307353, 25310175)\n) MyAnswers \nON p.Id = MyAnswers.ParentId;"},{"QuerySetId":654566,"Title":"Number of questions asked per week where post text like '...'","Description":null,"QueryBody":"SELECT COUNT(Id), WeekStart FROM (SELECT Id, DATEADD(week, DATEDIFF(day, '20000109', CreationDate) \/ 7, '20000109') AS WeekStart FROM Posts WHERE CreationDate > '2016-01-01 00:00:00' AND UPPER(Body) LIKE UPPER('%##PostText##%')) AS RelevantQuestionsByWeek GROUP BY WeekStart","CreationDate":"2017-04-07 01:00:15","validated":false,"QueryBody_Original":"SELECT \n  COUNT(Id), WeekStart\nFROM \n(\n  SELECT\n    Id, \n    dateadd(week, datediff(day, '20000109', CreationDate) \/ 7, '20000109') AS WeekStart\n  FROM Posts\n  WHERE\n    CreationDate > '2016-01-01 00:00:00'\n  AND  \n    UPPER(Body) LIKE UPPER('%##PostText##%')\n) RelevantQuestionsByWeek\nGROUP BY WeekStart;"},{"QuerySetId":654873,"Title":"Questions that have comment answers","Description":"Questions that don't have an answer, but the OP appears to have been satisfied by another users comment.\r\n\r\nNeed to add something that checks comments pointing to duplicates and the 'without answers' doesnt seem to work.","QueryBody":"SELECT Question.Id AS \"Post Link\", Question.Tags, OpComments.Text, Question.CreationDate FROM Posts AS Question INNER JOIN Comments AS OpComments ON OpComments.PostId = Question.Id AND OpComments.UserId = Question.OwnerUserId\/* 1 months old *\/ \/* open *\/ \/* question *\/  WHERE Question.PostTypeId = 1 AND Question.ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), Question.CreationDate) > 1 AND DATEDIFF(CURRENT_TIMESTAMP(), Question.CreationDate) < 13 AND Question.Score >= 0 AND (OpComments.Text LIKE '%works%' OR OpComments.Text LIKE '%thank%') AND (NOT OpComments.Text LIKE '%duplicate%' OR NOT OpComments.Text LIKE '%t solve%') AND Question.AnswerCount = 0 LIMIT 1000","CreationDate":"2017-04-17 21:58:22","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   Question.Id AS [Post Link],\n   Question.Tags,\n   OpComments.Text,\n   Question.CreationDate\nFROM\n  Posts Question INNER JOIN\n  Comments OpComments ON OpComments.PostId = Question.Id AND OpComments.UserId = Question.OwnerUserId\nWHERE\n  Question.PostTypeId = 1  AND             -- question\n  Question.ClosedDate IS NULL AND          -- open\n  DATEDIFF(MONTH, Question.CreationDate, GETDATE()) > 1  AND-- 1 months old\n  DATEDIFF(MONTH, Question.CreationDate, GETDATE()) < 13 AND\n  Question.Score >= 0 AND\n  (\n    OpComments.Text LIKE '%works%' OR\n    OpComments.Text LIKE '%thank%'\n  )AND\n  (\n    OpComments.Text NOT LIKE '%duplicate%' OR\n    OpComments.Text NOT LIKE '%t solve%'  \n  )AND\n  Question.AnswerCount = 0"},{"QuerySetId":654929,"Title":"count of popular questions with an accepted answer which is outvoted and not authored by the OP","Description":null,"QueryBody":"SELECT COUNT(q.id) FROM posts AS q INNER JOIN posts AS a ON q.AcceptedAnswerId = a.id WHERE q.PostTypeId = 1 AND q.ViewCount > 100000 AND (SELECT MAX(score) FROM posts AS q2 WHERE q.id = q2.parentid) > a.score AND q.OwnerUserId <> a.OwnerUserId","CreationDate":"2017-04-07 17:43:08","validated":false,"QueryBody_Original":"SELECT  count (q.id) from posts q inner join posts a on q.AcceptedAnswerId = a.id\nwhere q.PostTypeId = 1 and q.ViewCount > 100000 and\n(SELECT max(score) from posts q2 where q.id = q2.parentid) > a.score and \nq.OwnerUserId != a.OwnerUserId"},{"QuerySetId":655316,"Title":"Users who declare their college education information","Description":null,"QueryBody":"SELECT AboutMe FROM Users WHERE AboutMe LIKE '%UAM%'","CreationDate":"2017-09-01 01:08:18","validated":false,"QueryBody_Original":"SELECT  AboutMe FROM Users WHERE AboutMe LIKE '%UAM%'"},{"QuerySetId":655357,"Title":"List of all question links","Description":null,"QueryBody":"SELECT 'http:\/\/chemistry.stackexchange.com\/q\/' + CAST(q.Id AS TEXT(10)) FROM Posts AS q WHERE q.PostTypeId = 1 ORDER BY q.Id","CreationDate":"2017-04-09 02:57:08","validated":false,"QueryBody_Original":"SELECT  'http:\/\/chemistry.stackexchange.com\/q\/' + CAST(q.Id AS nvarchar(10))\n\nFROM Posts q\n\nWHERE q.PostTypeId = 1 \n\nORDER BY q.Id ASC"},{"QuerySetId":655781,"Title":"Bumped by Community User (more than 5 times)","Description":null,"QueryBody":"SELECT P.ID AS \"Post Link\", B.BumpCount, P.Score, P.CreationDate, P.Title FROM Posts AS P JOIN (SELECT PostID, COUNT(*) AS BumpCount FROM PostHistory WHERE PostHistoryTypeID = 50 GROUP BY PostID HAVING COUNT(*) > 5) AS B ON P.ID = B.PostID ORDER BY B.BumpCount DESC, PostID","CreationDate":"2018-02-01 08:35:26","validated":false,"QueryBody_Original":"SELECT  P.ID AS [Post Link], B.BumpCount, P.Score, P.CreationDate, P.Title\n  FROM Posts AS P\n  JOIN (SELECT PostID, COUNT(*) AS BumpCount\n          FROM PostHistory\n         WHERE PostHistoryTypeID  = 50\n         GROUP BY PostID\n        HAVING COUNT(*) > 5) AS B\n     ON P.ID = B.PostID\n  ORDER BY B.BumpCount DESC, PostID"},{"QuerySetId":656416,"Title":"First & Last Date for Posts Bumped N Times by Community User","Description":null,"QueryBody":"SELECT P.ID, B.BumpCount, B.FirstBump, B.LastBump, P.Title FROM Posts AS P JOIN (SELECT PostID, COUNT(*) AS BumpCount, MIN(CreationDate) AS FirstBump, MAX(CreationDate) AS LastBump FROM PostHistory WHERE PostHistoryTypeID = 50 GROUP BY PostID HAVING COUNT(*) > 2) AS B ON P.ID = B.PostID ORDER BY B.BumpCount, P.ID","CreationDate":"2017-04-11 04:05:08","validated":false,"QueryBody_Original":"SELECT  P.ID, B.BumpCount, B.FirstBump, B.LastBump, P.Title\n  FROM Posts AS P\n  JOIN (SELECT PostID, COUNT(*) AS BumpCount,\n               MIN(CreationDate) AS FirstBump,\n                MAX(CreationDate) AS LastBump\n          FROM PostHistory\n         WHERE PostHistoryTypeID  = 50\n         GROUP BY PostID\n        HAVING COUNT(*) > 2) AS B\n     ON P.ID = B.PostID\n ORDER BY B.BumpCount, P.ID;"},{"QuerySetId":656445,"Title":"Number of Questions Bumped N Times by Community User","Description":null,"QueryBody":"SELECT BumpCount, COUNT(*) AS NumberOfQuestionsBumped FROM (SELECT P.ID, B.BumpCount FROM Posts AS P JOIN (SELECT PostID, COUNT(*) AS BumpCount FROM PostHistory WHERE PostHistoryTypeID = 50 GROUP BY PostID HAVING COUNT(*) > 2) AS B ON P.ID = B.PostID) AS RawBumpCounts GROUP BY BumpCount ORDER BY BumpCount","CreationDate":"2018-09-09 20:08:54","validated":false,"QueryBody_Original":"SELECT  BumpCount, COUNT(*) AS NumberOfQuestionsBumped\n  FROM (SELECT P.ID, B.BumpCount\n          FROM Posts AS P\n          JOIN (SELECT PostID, COUNT(*) AS BumpCount\n                  FROM PostHistory\n                 WHERE PostHistoryTypeID  = 50\n                 GROUP BY PostID\n                HAVING COUNT(*) > 2) AS B\n                ON P.ID = B.PostID\n       ) AS RawBumpCounts\n GROUP BY BumpCount\n ORDER BY BumpCount;"},{"QuerySetId":656527,"Title":"How many accepts have I gotten in a day?","Description":null,"QueryBody":"SELECT \"User Link\", MAX(accepts) AS Highest_accepts_in_a_day FROM (SELECT users.id AS \"User Link\", votes.creationdate, COUNT(votes.id) AS accepts FROM users INNER JOIN posts ON posts.owneruserid = users.id INNER JOIN votes ON posts.id = votes.postid AND votes.votetypeid = 1 GROUP BY users.id, votes.creationdate) AS sq GROUP BY \"User Link\" ORDER BY 2 DESC","CreationDate":"2017-04-11 10:13:10","validated":false,"QueryBody_Original":"SELECT  [User Link], max(accepts) as Highest_accepts_in_a_day\nfrom (SELECT users.id as [User Link], votes.creationdate, count(votes.id) as accepts\nfrom users inner join\nposts on posts.owneruserid = users.id inner join\nvotes on posts.id = votes.postid and votes.votetypeid = 1\ngroup by users.id, votes.creationdate) sq\ngroup by [User Link]\norder by 2 desc"},{"QuerySetId":656966,"Title":"Top StackOverflow Users in Bhubaneswar, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%bhubaneswar%' OR LOWER(Location) LIKE '%bhubaneshwar%') AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2017-04-17 13:52:26","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (\n        LOWER(Location) LIKE '%bhubaneswar%'\n        OR LOWER(Location) like '%bhubaneshwar%'\n    )\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":656970,"Title":"Top 20 users from Munich","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%munich%' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2017-04-11 18:24:50","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%munich%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":657436,"Title":"To get the age distribution of users","Description":null,"QueryBody":"SELECT Age, COUNT(*) AS freq FROM Users GROUP BY Age ORDER BY freq","CreationDate":"2018-01-26 08:47:24","validated":false,"QueryBody_Original":"SELECT  Age, COUNT(*) as freq\nFROM Users\nGROUP BY Age\nORDER BY freq;"},{"QuerySetId":658705,"Title":"Questions by FavouriteCount minus Score","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, FavoriteCount FROM Posts WHERE PostTypeId = 1 \/* questions *\/ AND ClosedDate IS NULL AND CommunityOwnedDate IS NULL ORDER BY FavoriteCount - Score DESC LIMIT 100","CreationDate":"2017-04-15 00:20:01","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Id AS [Post Link],\n  Score,\n  FavoriteCount\nFROM Posts\nWHERE PostTypeId = 1 --questions\n  AND ClosedDate IS NULL\n  AND CommunityOwnedDate IS NULL\nORDER BY FavoriteCount-Score DESC"},{"QuerySetId":658710,"Title":"Negative-score questions with lots of favourites","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, FavoriteCount, Score - FavoriteCount AS \"diff\" FROM Posts WHERE PostTypeId = 1 \/* questions *\/ AND ClosedDate IS NULL AND CommunityOwnedDate IS NULL AND Score < 0 ORDER BY FavoriteCount - Score DESC LIMIT 100","CreationDate":"2017-04-15 00:24:24","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Id AS [Post Link],\n  Score,\n  FavoriteCount,\n  Score-FavoriteCount AS 'diff'\nFROM Posts\nWHERE PostTypeId = 1 --questions\n  AND ClosedDate IS NULL\n  AND CommunityOwnedDate IS NULL\n  AND Score < 0\nORDER BY FavoriteCount-Score DESC"},{"QuerySetId":659567,"Title":"ID questions accepted but closed by score","Description":null,"QueryBody":"SELECT p.id, 'http:\/\/movies.stackexchange.com\/questions\/' + CAST(p.id AS TEXT(20)) AS Link, p.Title, p.score FROM Posts AS p LEFT OUTER JOIN (SELECT postid, ROW_NUMBER() OVER (PARTITION BY PostID ORDER BY creationdate DESC) AS rn FROM PostHistory AS ph WHERE posthistorytypeid = 10 AND comment = '101') AS cdph ON p.id = cdph.postid AND cdph.rn = 1 WHERE p.PostTypeID = 1 AND p.tags LIKE '%identify%' AND NOT p.closeddate IS NULL AND NOT p.acceptedanswerid IS NULL AND cdph.postid IS NULL ORDER BY score DESC","CreationDate":"2017-04-17 21:56:01","validated":false,"QueryBody_Original":"SELECT  \n  p.id,\n  'http:\/\/movies.stackexchange.com\/questions\/' + cast(p.id as varchar(20)) \n    as Link,\n  p.Title,  \n  p.score\nfrom Posts p\nleft outer join\n(\n  SELECT\n    postid,\n    row_number() over (partition by PostID order by creationdate desc) as rn\n  from PostHistory ph\n  where posthistorytypeid = 10\n    and comment = '101'\n) cdph\n  on p.id = cdph.postid\n    and cdph.rn = 1\nwhere p.PostTypeID = 1\nand p.tags like '%identify%'\nand p.closeddate is not null\nand p.acceptedanswerid is not null\nand cdph.postid is null\norder by score desc"},{"QuerySetId":659601,"Title":"ID questions to nominate for deletion","Description":null,"QueryBody":"SELECT p.id, 'http:\/\/movies.stackexchange.com\/questions\/' + CAST(p.id AS TEXT(20)) AS Link, p.Title, p.score FROM Posts AS p LEFT OUTER JOIN (SELECT postid, ROW_NUMBER() OVER (PARTITION BY PostID ORDER BY creationdate DESC) AS rn FROM PostHistory AS ph WHERE posthistorytypeid = 10 AND comment = '101') AS cdph ON p.id = cdph.postid AND cdph.rn = 1 WHERE p.PostTypeID = 1 AND p.tags LIKE '%identify%' AND cdph.postid IS NULL AND creationdate <= DATEADD(yy, -1, GETDATE()) ORDER BY score","CreationDate":"2017-04-17 22:10:30","validated":false,"QueryBody_Original":"SELECT  \n  p.id,\n  'http:\/\/movies.stackexchange.com\/questions\/' + cast(p.id as varchar(20)) \n    as Link,\n  p.Title,  \n  p.score\nfrom Posts p\nleft outer join\n(\n  SELECT\n    postid,\n    row_number() over (partition by PostID order by creationdate desc) as rn\n  from PostHistory ph\n  where posthistorytypeid = 10\n    and comment = '101'\n) cdph\n  on p.id = cdph.postid\n    and cdph.rn = 1\nwhere p.PostTypeID = 1\nand p.tags like '%identify%'\nand cdph.postid is null\nand creationdate <= dateadd(yy, -1, getdate())\norder by score"},{"QuerySetId":659695,"Title":"Count SO questions by Year","Description":null,"QueryBody":"SELECT COUNT(P.Id) AS Posts, YEAR(P.CreationDate) AS Year_Data FROM Posts AS P WHERE P.PostTypeId = 1 GROUP BY YEAR(P.CreationDate)","CreationDate":"2017-04-18 01:16:10","validated":false,"QueryBody_Original":"SELECT  count(P.Id) as Posts, YEAR(P.CreationDate) as Year_Data\nFROM Posts P\nWHERE P.PostTypeId =1\nGROUP BY YEAR(P.CreationDate)"},{"QuerySetId":659801,"Title":"Count Questions Freq by Year per Title","Description":null,"QueryBody":"SELECT COUNT(P.Id) AS Posts, YEAR(P.CreationDate) AS Year_Data FROM Posts AS P WHERE P.Title LIKE '%mockito%' AND ((P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%robolectric%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')) GROUP BY YEAR(P.CreationDate)","CreationDate":"2017-04-23 00:27:49","validated":false,"QueryBody_Original":"SELECT  count(P.Id) as Posts, YEAR(P.CreationDate) as Year_Data\nFROM Posts P\nWHERE P.Title like '%mockito%' and\n(\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%robolectric%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\n)\nGROUP BY YEAR(P.CreationDate)"},{"QuerySetId":660241,"Title":"Count Accepted Questions by Year - Title","Description":null,"QueryBody":"SELECT COUNT(P.Id) AS Accepted, YEAR(P.CreationDate) AS Year_Data FROM Posts AS P WHERE P.Title LIKE '%mockito%' AND P.AcceptedAnswerId > 0 AND ((P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%robolectric%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')) GROUP BY YEAR(P.CreationDate)","CreationDate":"2017-04-23 00:37:42","validated":false,"QueryBody_Original":"SELECT  count(P.Id) as Accepted, YEAR(P.CreationDate) as Year_Data\nFROM Posts P\nWHERE P.Title like '%mockito%' and\nP.AcceptedAnswerId > 0 and\n(\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%robolectric%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\n)\nGROUP BY YEAR(P.CreationDate)"},{"QuerySetId":660338,"Title":"most common names, ignoring case","Description":null,"QueryBody":"SELECT LOWER(DisplayName), COUNT(*) FROM users GROUP BY LOWER(DisplayName) ORDER BY COUNT(*) DESC LIMIT 1000","CreationDate":"2017-04-19 00:01:08","validated":false,"QueryBody_Original":"SELECT  TOP 1000 lower(DisplayName), count(*)\nFROM users\ngroup by lower(DisplayName)\norder by count(*) desc"},{"QuerySetId":660339,"Title":"Sum Accepted Questions by Year - Title","Description":null,"QueryBody":"SELECT SUM(AnswerCount) AS SumaAnswers, YEAR(P.CreationDate) AS Year_Data FROM Posts AS P WHERE P.Title LIKE '%mockito%' AND ((P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%robolectric%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android-emulator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')) GROUP BY YEAR(P.CreationDate)","CreationDate":"2017-04-23 00:36:28","validated":false,"QueryBody_Original":"SELECT  sum(AnswerCount) as SumaAnswers, YEAR(P.CreationDate) as Year_Data\nFROM Posts P\nWHERE P.Title like '%mockito%' and\n(\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%robolectric%') OR\n(P.Tags LIKE '%android-espresso%') OR\n(P.Tags LIKE '%android-emulator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\n)\nGROUP BY YEAR(P.CreationDate)"},{"QuerySetId":660675,"Title":"Get user id and rep by name","Description":null,"QueryBody":"SELECT Id, Reputation FROM Users WHERE DisplayName = 'HyperNeutrino' LIMIT 1","CreationDate":"2017-04-19 17:15:02","validated":false,"QueryBody_Original":"SELECT  TOP 1 Id, Reputation from Users where DisplayName = 'HyperNeutrino'"},{"QuerySetId":660879,"Title":"New More visualizated Android Testing TOP 10","Description":null,"QueryBody":"SELECT P.Title, YEAR(P.CreationDate) AS Ano, P.Score, P.ViewCount, P.AnswerCount, P.AcceptedAnswerId, P.Tags FROM Posts AS P WHERE (NOT P.Tags LIKE '%android-emulator%') AND ((P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%robotium%') OR (P.Tags LIKE '%androidviewclient%') OR (P.Tags LIKE '%monkeyrunner%') OR (P.Tags LIKE '%robolectric%') OR (P.Tags LIKE '%android-espresso%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')) ORDER BY P.Score DESC LIMIT 10","CreationDate":"2017-04-22 19:37:10","validated":false,"QueryBody_Original":"SELECT  TOP 10 P.Title, YEAR(P.CreationDate) as Ano, P.Score, P.ViewCount, P.AnswerCount, P.AcceptedAnswerId, P.Tags\nFROM Posts P\nWHERE\n(P.Tags NOT LIKE '%android-emulator%') AND\n(\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%robotium%' ) OR\n(P.Tags LIKE '%androidviewclient%') OR\n(P.Tags LIKE '%monkeyrunner%') OR\n(P.Tags LIKE '%robolectric%') OR\n(P.Tags LIKE '%android-espresso%') OR\n\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%uiautomator%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%appium%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%calabash%') OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\n)\nORDER BY P.Score desc"},{"QuerySetId":660880,"Title":"Edits on other peoples' posts over time","Description":null,"QueryBody":"SELECT * FROM posthistory LEFT JOIN posts ON posts.id = posthistory.postid WHERE posthistory.userid <> posts.owneruserid","CreationDate":"2017-04-20 02:05:59","validated":false,"QueryBody_Original":"SELECT  * from posthistory\nleft join posts on posts.id = posthistory.postid\nwhere posthistory.userid != posts.owneruserid"},{"QuerySetId":660997,"Title":"User's answers and rep per day","Description":null,"QueryBody":"SELECT users.id AS \"User Link\", (1 + DATEDIFF(CURRENT_TIMESTAMP(), users.creationdate)) AS \"Days\", COUNT(Posts.Id) AS \"Posts\", ROUND(CAST(NULLIF((users.reputation), 0) AS FLOAT) \/ (1 + DATEDIFF(CURRENT_TIMESTAMP(), users.creationdate)), 4) AS \"Reputation\/Day Ratio\", ROUND(CAST(NULLIF(COUNT(Posts.Id), 0) AS FLOAT) \/ (1 + DATEDIFF(CURRENT_TIMESTAMP(), users.creationdate)), 4) AS \"Posts\/Day Ratio\", ROUND(CAST(NULLIF((users.reputation), 0) AS FLOAT) \/ COUNT(Posts.Id), 4) AS \"Reputation\/Post Ratio\" FROM users INNER JOIN posts ON users.id = posts.OwnerUserId WHERE posts.CommunityOwnedDate IS NULL GROUP BY users.id, users.creationdate, users.reputation ORDER BY \"Reputation\/Day Ratio\" DESC LIMIT 500","CreationDate":"2017-04-21 13:44:57","validated":false,"QueryBody_Original":"SELECT  \nTOP 500 \nusers.id [User Link]\n  , (1+datediff(dd, users.creationdate, GETDATE())) \"Days\"\n  , Count(Posts.Id) \"Posts\"\n  , round(\n         cast(nullif((users.reputation), 0) as float) \/ \n           (1+datediff(dd, users.creationdate, GETDATE())), \n         4) \"Reputation\/Day Ratio\"\n  , round(cast(nullif(Count(Posts.Id),0) as float) \/ \n         (1+datediff(dd, users.creationdate, GETDATE())),\n         4) \"Posts\/Day Ratio\"\n  , round(cast(nullif((users.reputation), 0) as float) \/ \n         Count(Posts.Id),\n         4) \"Reputation\/Post Ratio\"\nFROM users\nINNER JOIN posts ON users.id = posts.OwnerUserId\nWHERE \n-- not cwiki\nposts.CommunityOwnedDate IS NULL\nGROUP BY users.id, users.creationdate, users.reputation\nORDER BY \"Reputation\/Day Ratio\" DESC"},{"QuerySetId":661077,"Title":"Top 50 Users with the Most Answers","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation, SUM(a.Score) AS TotalAnswers FROM Users AS u INNER JOIN Posts AS a ON a.OwnerUserId = u.Id WHERE a.PostTypeId = 2 \/* answers *\/ GROUP BY u.Id, u.Reputation ORDER BY SUM(a.Score) DESC LIMIT 50","CreationDate":"2017-12-16 07:10:40","validated":false,"QueryBody_Original":"SELECT  TOP 50\n\tu.Id AS [User Link],\n    u.Reputation,\n\tSUM(a.Score) AS TotalAnswers\nFROM Users u\nINNER JOIN Posts a ON a.OwnerUserId = u.Id\nWHERE a.PostTypeId = 2 -- answers\nGROUP BY u.Id,u.Reputation\nORDER BY SUM(a.Score) DESC"},{"QuerySetId":661161,"Title":"ID quality vs Rest of site","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, q.CreationDate), 0) AS Mnth, AVG(LEN(a.body)) AS AvgAnswerLength, CASE WHEN SUM(CASE WHEN q.Tags LIKE '%identify%' THEN LEN(a.body) ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN q.Tags LIKE '%identify%' THEN LEN(a.body) ELSE 0 END) * 1.0 \/ SUM(CASE WHEN q.Tags LIKE '%identify%' THEN 1 ELSE 0 END) END AS IDAvgAnswerLength FROM posts AS q LEFT OUTER JOIN posts AS a ON q.id = a.parentid AND a.posttypeid = 2 AND a.deletiondate IS NULL WHERE q.posttypeid = 1 AND q.deletiondate IS NULL AND q.closeddate IS NULL GROUP BY DATEADD(month, DATEDIFF(month, 0, q.CreationDate), 0) ORDER BY DATEADD(month, DATEDIFF(month, 0, q.CreationDate), 0)","CreationDate":"2017-04-21 20:20:37","validated":false,"QueryBody_Original":"SELECT \n  dateadd(month, datediff(month, 0, q.CreationDate), 0) as Mnth,\n  avg(len(a.body)) as AvgAnswerLength,\n  case when sum(case when q.Tags like '%identify%' then len(a.body) else 0 end) = 0 then 0\n    else sum(case when q.Tags like '%identify%' then len(a.body) else 0 end) * 1.0 \/ sum(case when q.Tags like '%identify%' then 1 else 0 end)\n    end as IDAvgAnswerLength\nfrom posts as q\n  left outer join posts as a\n    on q.id = a.parentid\n      and a.posttypeid = 2\n      and a.deletiondate is null\nwhere q.posttypeid = 1\n  and q.deletiondate is null\n  and q.closeddate is null\ngroup by dateadd(month, datediff(month, 0, q.CreationDate), 0)\norder by dateadd(month, datediff(month, 0, q.CreationDate), 0)"},{"QuerySetId":661259,"Title":"Top users by reputation in Copenhagen","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%copenhagen%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2017-04-21 11:47:52","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%copenhagen%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":661260,"Title":"Top users by reputation in Denmark","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%denmark%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2017-04-21 11:49:35","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%denmark%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":661263,"Title":"Developers in Krakow with more than 400 reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank, Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%krak%' AND Reputation > 400 ORDER BY Reputation DESC","CreationDate":"2017-04-21 11:57:54","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Rank,\n  Id AS [User Link], Reputation\nFROM Users\nWHERE LOWER(Location) LIKE '%krak%' AND Reputation > 400\nORDER BY Reputation DESC;"},{"QuerySetId":661294,"Title":"User's posts and rep per day","Description":null,"QueryBody":"SELECT users.id AS \"User Link\", (1 + DATEDIFF(CURRENT_TIMESTAMP(), users.creationdate)) AS \"Days\", COUNT(Posts.Id) AS \"Posts\", ROUND(CAST(NULLIF((users.reputation), 0) AS FLOAT) \/ (1 + DATEDIFF(CURRENT_TIMESTAMP(), users.creationdate)), 4) AS \"Reputation\/Day Ratio\", ROUND(CAST(NULLIF(COUNT(Posts.Id), 0) AS FLOAT) \/ (1 + DATEDIFF(CURRENT_TIMESTAMP(), users.creationdate)), 4) AS \"Posts\/Day Ratio\", ROUND(CAST(NULLIF((users.reputation), 0) AS FLOAT) \/ COUNT(Posts.Id), 4) AS \"Reputation\/Post Ratio\" FROM users INNER JOIN posts ON users.id = posts.OwnerUserId WHERE posts.CommunityOwnedDate IS NULL GROUP BY users.id, users.creationdate, users.reputation ORDER BY \"Reputation\/Day Ratio\" DESC LIMIT 500","CreationDate":"2017-09-26 00:56:45","validated":false,"QueryBody_Original":"SELECT  \nTOP 500 \nusers.id [User Link]\n  , (1+datediff(dd, users.creationdate, GETDATE())) \"Days\"\n  , Count(Posts.Id) \"Posts\"\n  , round(\n         cast(nullif((users.reputation), 0) as float) \/ \n           (1+datediff(dd, users.creationdate, GETDATE())), \n         4) \"Reputation\/Day Ratio\"\n  , round(cast(nullif(Count(Posts.Id),0) as float) \/ \n         (1+datediff(dd, users.creationdate, GETDATE())),\n         4) \"Posts\/Day Ratio\"\n  , round(cast(nullif((users.reputation), 0) as float) \/ \n         Count(Posts.Id),\n         4) \"Reputation\/Post Ratio\"\nFROM users\nINNER JOIN posts ON users.id = posts.OwnerUserId\nWHERE \n-- not cwiki\nposts.CommunityOwnedDate IS NULL\nGROUP BY users.id, users.creationdate, users.reputation\nORDER BY \"Reputation\/Day Ratio\" DESC"},{"QuerySetId":661378,"Title":"Users by total number of favorites on their posts","Description":null,"QueryBody":"SELECT RANK() OVER (ORDER BY SUM(Posts.FavoriteCount) DESC) AS \"no.\", Posts.OwnerUserId AS \"User Link\", Users.Reputation, SUM(Posts.FavoriteCount) AS \"TotalFavorites\", COUNT(*) AS \"Posts with favorites\" FROM Posts JOIN Users ON Users.Id = Posts.OwnerUserId WHERE NOT Posts.OwnerUserId IS NULL AND Posts.FavoriteCount > 0 AND Posts.CommunityOwnedDate IS NULL GROUP BY Posts.OwnerUserId, Users.Reputation ORDER BY TotalFavorites DESC","CreationDate":"2017-04-21 16:56:40","validated":false,"QueryBody_Original":"SELECT \n  RANK() OVER(ORDER BY SUM(Posts.FavoriteCount) DESC) AS 'no.',\n  Posts.OwnerUserId AS [User Link],\n  Users.Reputation,\n  SUM(Posts.FavoriteCount) AS 'TotalFavorites',\n  COUNT(*) AS 'Posts with favorites'\nFROM Posts\nJOIN Users ON Users.Id = Posts.OwnerUserId\nWHERE Posts.OwnerUserId IS NOT NULL\n  AND Posts.FavoriteCount>0\n  AND Posts.CommunityOwnedDate IS NULL\nGROUP BY Posts.OwnerUserId, Users.Reputation\nORDER BY TotalFavorites DESC"},{"QuerySetId":661469,"Title":"Get new users that has closed answers","Description":null,"QueryBody":"SELECT * FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.id WHERE p.AnswerCount = 0 AND u.Reputation = 1 AND p.ClosedDate <> ''","CreationDate":"2017-04-22 00:25:16","validated":false,"QueryBody_Original":"SELECT  *\nFROM Users AS u\nINNER JOIN Posts AS p ON p.OwnerUserId = u.id\nWHERE p.AnswerCount = 0\n AND u.Reputation = 1\n AND p.ClosedDate != ''"},{"QuerySetId":661524,"Title":"Percentage of users with a location","Description":null,"QueryBody":"SELECT SUM(CASE WHEN location IS NULL THEN 0 ELSE 1 END) * 1.0 \/ SUM(1) AS percentage_with_location FROM users WHERE NOT aboutme IS NULL","CreationDate":"2017-04-24 04:03:20","validated":false,"QueryBody_Original":"SELECT  sum(case when location IS NULL THEN 0 ELSE 1 end) *1.0 \/ sum (1) as percentage_with_location \nfrom users\nwhere aboutme IS NOT NULL"},{"QuerySetId":661686,"Title":"Bronze Badges for React in London, UK","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location, Name FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.TagBased = 1 AND Users.Location LIKE '%United%' AND Badges.name = 'knockout.js' AND Badges.name = 'reactjs' ORDER BY Reputation DESC","CreationDate":"2017-08-10 22:59:53","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location,\n    Name\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.TagBased = 1\n    AND Users.Location like '%United%'\n    AND Badges.name = 'knockout.js'\n    AND Badges.name = 'reactjs'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":661713,"Title":"Self-answered questions with no other answers","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.creationdate, q.Score FROM ((SELECT Posts.* FROM Posts WHERE posttypeid = 1 AND answercount = 1 AND CommunityOwnedDate IS NULL) AS q JOIN (SELECT Posts.* FROM Posts WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL) AS a ON q.Id = a.ParentId) WHERE q.OwnerUserId = a.OwnerUserId AND q.AnswerCount = 1 AND q.DeletionDate IS NULL AND q.ClosedDate IS NULL ORDER BY creationdate DESC","CreationDate":"2017-10-18 15:07:01","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.creationdate, q.Score\n  from (\n    (SELECT Posts.* from Posts where posttypeid = 1 and answercount = 1 and CommunityOwnedDate IS NULL) as q\n    join\n    (SELECT Posts.* from Posts where PostTypeId = 2 and CommunityOwnedDate IS NULL) as a\n      on q.Id = a.ParentId)\n  where q.OwnerUserId = a.OwnerUserId\n  and q.AnswerCount = 1\n  and q.DeletionDate IS NULL\n  and q.ClosedDate IS NULL\n  order by creationdate DESC"},{"QuerySetId":662185,"Title":"Number of >=3 score posts per month","Description":"Android questions per day in 2011\r\n","QueryBody":"SELECT YEAR(CreationDate) AS Year, MONTH(CreationDate) AS Month, COUNT(CreationDate) AS Count FROM Posts WHERE Score >= 3 GROUP BY MONTH(CreationDate), YEAR(CreationDate) ORDER BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2017-04-24 06:06:10","validated":false,"QueryBody_Original":"SELECT \n    YEAR(CreationDate) as Year,\n    MONTH(CreationDate) as Month,\n    COUNT(CreationDate) as Count\nFROM Posts WHERE Score>=3\nGROUP BY MONTH(CreationDate), YEAR(CreationDate)\nORDER BY YEAR(CreationDate) ASC, MONTH(CreationDate) ASC;"},{"QuerySetId":662394,"Title":"Users with 101 rep. vs \"normal\" users","Description":null,"QueryBody":"SELECT COUNT(*), 'Legit users according to Centaurus' FROM Users WHERE Reputation > 101 UNION SELECT COUNT(*), 'Mischievous foreigners' FROM Users WHERE Reputation = 101 UNION SELECT COUNT(*), 'Peasants' FROM Users WHERE Reputation < 101","CreationDate":"2017-04-24 19:06:29","validated":false,"QueryBody_Original":"SELECT  count(*), 'Legit users according to Centaurus' from Users where Reputation > 101\nunion\nSELECT count(*), 'Mischievous foreigners' from Users where Reputation = 101\nunion\nSELECT count(*), 'Peasants' from Users where Reputation < 101\n;"},{"QuerySetId":662771,"Title":"Facebook Tags and Unanswered Questions","Description":null,"QueryBody":"SELECT SUM(CASE WHEN AnswerCount = 0 THEN 1 ELSE 0 END) AS Unanswered, SUM(CASE WHEN AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) AS NoAcceptedAnswer, COUNT(*) AS Total FROM Posts WHERE Tags LIKE '%facebook%' AND ClosedDate IS NULL GROUP BY DATEADD(dd, 0, DATEDIFF(dd, 0, CreationDate))","CreationDate":"2017-07-10 21:03:23","validated":false,"QueryBody_Original":"SELECT \n  SUM(CASE WHEN AnswerCount = 0 THEN 1 ELSE 0 END) AS Unanswered,\n  SUM(CASE WHEN AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) AS NoAcceptedAnswer,\n  COUNT(*) AS Total\nFROM\n  Posts\nWHERE\n  Tags LIKE '%facebook%' AND\n  ClosedDate IS NULL\nGROUP BY\n  DATEADD(dd, 0, DATEDIFF(dd, 0, CreationDate))\n;"},{"QuerySetId":663071,"Title":"Interesting questions, per comments on them","Description":null,"QueryBody":"SELECT id AS \"Comment Link\" FROM Comments WHERE (LOWER(Text) LIKE 'interesting question%' OR LOWER(Text) LIKE 'an interesting question%') AND LENGTH(Text) <= 25 ORDER BY CreationDate DESC","CreationDate":"2017-04-26 00:21:40","validated":false,"QueryBody_Original":"SELECT  id as [Comment Link] from Comments \nwhere (lower(Text) like 'interesting question%' or \n       lower(Text) like 'an interesting question%') and \n       len(Text) <= 25\norder by CreationDate desc"},{"QuerySetId":663332,"Title":"Write a query that will return the Website URL for the User called Mat Mannion.","Description":null,"QueryBody":"SELECT b.Text, b.CreationDate FROM Users AS a INNER JOIN Comments AS b ON a.Id = b.UserId WHERE a.DisplayName = 'Mat Mannion' ORDER BY b.CreationDate DESC","CreationDate":"2017-04-26 14:29:49","validated":false,"QueryBody_Original":"SELECT  b.Text , b.CreationDate\nfrom Users a\ninner join Comments b on a.Id = b.UserId\nwhere a.DisplayName = 'Mat Mannion'\norder by b.CreationDate desc\n--group by b.Comments , b.CreationDate;"},{"QuerySetId":663389,"Title":"Write a query that will return the Website URL for the User called Mat Mannion","Description":null,"QueryBody":"SELECT WebsiteUrl FROM Users WHERE DisplayName = 'Mat Mannion'","CreationDate":"2017-04-26 16:59:19","validated":false,"QueryBody_Original":"SELECT  WebsiteUrl\nfrom Users\nwhere DisplayName='Mat Mannion'"},{"QuerySetId":663835,"Title":"Top users SO from Bangalore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%Bangalore%' OR UPPER(Location) LIKE '%BANGALORE%' OR Location LIKE '%BANGALORE%') AND Reputation >= 100000 ORDER BY Reputation DESC","CreationDate":"2017-04-27 11:14:35","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%Bangalore%'\n    OR UPPER(Location) LIKE '%BANGALORE%'\n    or Location like '%BANGALORE%')\n    AND Reputation >= 100000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":664018,"Title":"questions to edit or close","Description":null,"QueryBody":"SELECT 'https:\/\/movies.stackexchange.com\/questions\/' + CAST(id AS TEXT(50)) AS link, score FROM posts WHERE posttypeid = 1 AND deletiondate IS NULL AND closeddate IS NULL AND creationdate <= DATEADD(mm, -2, GETDATE()) AND lasteditdate <= DATEADD(mm, -2, GETDATE()) ORDER BY score","CreationDate":"2017-05-06 01:30:45","validated":false,"QueryBody_Original":"SELECT  \n'https:\/\/movies.stackexchange.com\/questions\/' + cast(id as varchar(50)) as link,\nscore\nfrom posts\nwhere posttypeid = 1\nand deletiondate is null\nand closeddate is null\nand creationdate <= dateadd(mm, -2, getdate())\nand lasteditdate <= dateadd(mm, -2, getdate())\norder by score"},{"QuerySetId":664040,"Title":"c++ gold badge in poland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation, Location FROM Users, Badges WHERE Users.Id = Badges.UserId AND Badges.Class = 2 AND Badges.TagBased = 1 AND Badges.name = 'c++' AND LOWER(Users.Location) LIKE LOWER('%Poland%') ORDER BY Reputation DESC","CreationDate":"2017-04-27 20:49:26","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation,\n    Location\nFROM\n    Users, Badges\nWHERE\n    Users.Id = Badges.UserId\n    AND Badges.Class = 2\n    AND Badges.TagBased = 1\n    AND Badges.name = 'c++'\n    AND LOWER(Users.Location) LIKE LOWER('%Poland%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":664041,"Title":"Short Favorited Commented Questions with no Answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE LENGTH(Body) < 100 AND PostTypeId = 1 AND ClosedDate IS NULL AND DeletionDate IS NULL AND CommunityOwnedDate IS NULL AND AnswerCount = 0 AND CommentCount > 0 AND FavoriteCount > 0","CreationDate":"2017-04-27 21:03:38","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Tags\nFROM Posts\nWHERE LEN(Body) < 100\nAND PostTypeId = 1\nAND ClosedDate IS NULL\nAND DeletionDate IS NULL\nAND CommunityOwnedDate IS NULL\nAND AnswerCount = 0\nAND CommentCount > 0\nAND FavoriteCount > 0"},{"QuerySetId":664338,"Title":"Questions that have ever contained this tag","Description":null,"QueryBody":"SELECT posts.id AS \"Post Link\", tags FROM posts INNER JOIN posthistory ON posts.id = posthistory.postid WHERE (PostHistoryTypeId = 3 \/* initial tags *\/ OR PostHistoryTypeId = 6) \/* tag edit *\/ AND posthistory.text LIKE '%##Tag##%' GROUP BY posts.id, tags","CreationDate":"2017-04-28 09:47:51","validated":false,"QueryBody_Original":"SELECT  posts.id as [Post Link], tags\nfrom posts inner join posthistory on posts.id = posthistory.postid\nwhere (PostHistoryTypeId = 3 -- initial tags\n   or PostHistoryTypeId = 6) -- tag edit\n   and posthistory.text like '%##Tag##%'\ngroup by posts.id, tags"},{"QuerySetId":664612,"Title":"give me  all data","Description":null,"QueryBody":"SELECT * FROM Comments, Users, Posts WHERE Posts.Id = Comments.PostId AND Comments.UserId = Users.Id AND Posts.Tags LIKE '%gov%'","CreationDate":"2017-04-28 22:49:25","validated":false,"QueryBody_Original":"SELECT  * from Comments, Users, Posts\nwhere Posts.Id = Comments.PostId and Comments.UserId = Users.Id and Posts.Tags LIKE '%gov%';"},{"QuerySetId":665074,"Title":"Number of 10+ score posts per month","Description":"Android questions per day in 2011\r\n","QueryBody":"SELECT YEAR(q.CreationDate) + MONTH(q.CreationDate) \/ 12.0 AS \"QDate\", COUNT(CreationDate) AS Count FROM Posts AS q WHERE SCORE >= 10 AND q.CreationDate > 2014 GROUP BY YEAR(q.CreationDate) + MONTH(q.CreationDate) \/ 12.0 ORDER BY YEAR(q.CreationDate) + MONTH(q.CreationDate) \/ 12.0","CreationDate":"2017-05-06 11:06:39","validated":false,"QueryBody_Original":"SELECT \n    year(q.CreationDate)+month(q.CreationDate)\/12.0 as 'QDate',\n    COUNT(CreationDate) as Count\nFROM Posts q\nWHERE SCORE>=10 and q.CreationDate > 2014\nGROUP BY year(q.CreationDate)+month(q.CreationDate)\/12.0\nORDER BY year(q.CreationDate)+month(q.CreationDate)\/12.0 asc;"},{"QuerySetId":665141,"Title":"Number of upvotes per month in one year","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) AS Month, COUNT(*) FROM Votes WHERE VoteTypeId = 2 \/* upvotes *\/ AND CreationDate >= '2016-01-01' GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) UNION ALL SELECT NULL, 0 ORDER BY Month","CreationDate":"2017-04-30 13:41:06","validated":false,"QueryBody_Original":"SELECT  DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) AS Month, COUNT(*)\n  FROM Votes\n  WHERE VoteTypeId = 2 -- upvotes\n    AND CreationDate >= '2016-01-01'\n  GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n  UNION ALL\n  SELECT NULL, 0\n  ORDER BY Month"},{"QuerySetId":665166,"Title":"What is the average number of comments on my posts, by post score?","Description":"For all posts with a given score, this query shows the average number of comments.\r\n","QueryBody":"SELECT t.Score, AVG(t.commentCount) AS \"Average # of comments\" FROM (SELECT COUNT(c.Id) * 1.0 AS commentCount, p.Score FROM Comments AS c JOIN Posts AS p ON c.PostId = p.Id GROUP BY p.Score, p.Id) AS t GROUP BY Score ORDER BY Score DESC","CreationDate":"2017-04-30 16:43:09","validated":false,"QueryBody_Original":"SELECT \n  t.Score, Avg(t.commentCount) AS [Average # of comments]\nFROM\n  (SELECT\n    COUNT(c.Id) * 1.0 AS commentCount,\n    p.Score\n  FROM\n      Comments AS c\n    JOIN \n      Posts AS p ON c.PostId=p.Id\n  GROUP BY p.Score, p.Id\n  ) AS t\nGROUP BY Score\nORDER BY Score DESC"},{"QuerySetId":665236,"Title":"% of upvotes as function of question length","Description":null,"QueryBody":"SELECT LENGTH(p.Body) AS \"Answer length\", SUM(CASE v.VoteTypeId WHEN 2 THEN 1 ELSE 0 END) \/ COUNT(*) AS \"Relative upvotes\" FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id\/* up\/downvotes *\/  WHERE p.PostTypeId = 2 \/* answers *\/ AND v.VoteTypeId IN (2, 3) AND p.CreationDate >= '2017-04-01' GROUP BY LENGTH(p.Body) ORDER BY LENGTH(p.Body)","CreationDate":"2017-04-30 19:32:59","validated":false,"QueryBody_Original":"SELECT  LEN(p.Body) AS 'Answer length',\n  SUM(CASE v.VoteTypeId WHEN 2 THEN 1 ELSE 0 END) \/ COUNT(*) AS 'Relative upvotes'\n  FROM Votes AS v\n  INNER JOIN Posts AS p\n    ON v.PostId = p.Id\n  WHERE p.PostTypeId = 2 -- answers\n    AND v.VoteTypeId IN (2, 3) -- up\/downvotes\n    AND p.CreationDate >= '2017-04-01'\n  GROUP BY LEN(p.Body)\n  ORDER BY LEN(p.Body)"},{"QuerySetId":665357,"Title":"Answers with the highest score per question view","Description":null,"QueryBody":"SELECT CAST(a.score AS FLOAT) \/ q.viewCount AS ScorePerQuestionView, a.id AS \"Post Link\", a.score, q.viewCount, a.Body AS AnswerBody, a.OwnerUserId AS \"User Link\", a.CreationDate AS AnswerCreationDate, q.Body AS QuestionBody, q.CreationDate AS QuestionCreationDate, q.tags, q.AnswerCount \/* , * -- To see everything in Posts table *\/ FROM Posts AS a INNER JOIN Posts AS q ON a.parentId = q.Id WHERE a.PostTypeId = 2 \/* Answer *\/ AND q.viewCount > 1000 ORDER BY ScorePerQuestionView DESC LIMIT 141","CreationDate":"2017-05-01 03:35:53","validated":false,"QueryBody_Original":"SELECT  TOP 141\n CAST(a.score AS FLOAT)\/q.viewCount as ScorePerQuestionView\n , a.id AS [Post Link]\n , a.score\n , q.viewCount\n , a.Body AS AnswerBody\n , a.OwnerUserId AS [User Link]\n , a.CreationDate AS AnswerCreationDate\n , q.Body AS QuestionBody\n , q.CreationDate AS QuestionCreationDate\n , q.tags\n , q.AnswerCount\n -- , * -- To see everything in Posts table\nFROM \n  Posts a\n  INNER JOIN Posts q\n  ON a.parentId = q.Id\nWHERE a.PostTypeId = 2 -- Answer\n      AND q.viewCount > 1000\nORDER BY ScorePerQuestionView DESC;"},{"QuerySetId":665980,"Title":"Popular answers with most viewed questions","Description":null,"QueryBody":"SELECT q.Title, q.Score AS QuestionScore, q.ViewCount, q.Tags, q.Id AS \"Post Link\", ans.Score AS AnswerScore, ans.Id AS AnswerId FROM Posts AS ans JOIN Posts AS q ON ans.ParentId = q.Id WHERE q.ViewCount > 5000 AND ans.Score > 20 AND ans.OwnerUserId = 7586 ORDER BY q.ViewCount DESC","CreationDate":"2017-07-04 19:32:24","validated":false,"QueryBody_Original":"SELECT  q.Title, q.Score as QuestionScore, q.ViewCount, q.Tags, q.Id as [Post Link],\nans.Score as AnswerScore, ans.Id as AnswerId\nfrom Posts ans\njoin Posts q on ans.ParentId = q.Id\nwhere q.ViewCount > 5000\nand ans.Score > 20\nand ans.OwnerUserId = 7586\norder by q.ViewCount desc"},{"QuerySetId":666277,"Title":"Questions that I haven't voted on","Description":null,"QueryBody":"SELECT Posts.Id FROM Posts JOIN Votes ON Posts.Id = Votes.PostId WHERE Votes.UserId = 3169","CreationDate":"2017-05-03 06:21:48","validated":false,"QueryBody_Original":"SELECT  Posts.Id\nFROM Posts\n  JOIN Votes\n  ON Posts.Id = Votes.PostId\nWHERE Votes.UserId = 3169"},{"QuerySetId":666281,"Title":"Questions I Haven't Voted On","Description":null,"QueryBody":"SELECT Posts.Id FROM Posts JOIN Votes ON Posts.Id = Votes.PostId WHERE Votes.UserId = 3379 AND Posts.PostTypeId = 1","CreationDate":"2018-09-29 20:01:42","validated":false,"QueryBody_Original":"SELECT  Posts.Id\nFROM Posts\n  JOIN Votes\n  ON Posts.Id = Votes.PostId\nWHERE Votes.UserId = 3379\n  AND Posts.PostTypeId = 1"},{"QuerySetId":667048,"Title":"How many comments about Islamic State?","Description":null,"QueryBody":"SELECT TEXT FROM COMMENTS WHERE LOWER(TEXT) LIKE '%islamic state%'","CreationDate":"2017-05-04 18:39:15","validated":false,"QueryBody_Original":"SELECT  TEXT FROM COMMENTS WHERE lower(TEXT) LIKE '%islamic state%';"},{"QuerySetId":667267,"Title":"Questions that are self answered","Description":"http:\/\/meta.stackexchange.com\/questions\/234635\/is-there-a-way-to-search-for-answer-your-own-question-questions","QueryBody":"SELECT q.id AS \"Post Link\", q.owneruserid AS \"User Link\", q.creationdate AS \"Asked on\", a.creationdate AS \"Answered On\" FROM posts AS q INNER JOIN posts AS a ON a.owneruserid = q.owneruserid WHERE q.posttypeid = 1 \/* Q *\/ AND a.posttypeid = 2 \/* A *\/ AND DATEDIFF(q.creationdate, a.creationdate) <= 1 ORDER BY q.creationdate","CreationDate":"2017-05-05 03:32:32","validated":false,"QueryBody_Original":"SELECT  q.id as [Post Link]\n     , q.owneruserid as [User Link]\n     , q.creationdate as [Asked on]\n     , a.creationdate as [Answered On] \nfrom posts q \ninner join posts a on a.owneruserid = q.owneruserid\nwhere q.posttypeid = 1 -- Q\nand a.posttypeid = 2 -- A\nand DATEDIFF(day, a.creationdate, q.creationdate) <= 1\norder by q.creationdate"},{"QuerySetId":667639,"Title":"JanitorTags: tagged linux and with a Linux distro - research","Description":null,"QueryBody":"SELECT * FROM tags JOIN posts ON posts.id = tags.wikipostid OR posts.id = tags.excerptpostid WHERE tags.tagname LIKE '%linux%' OR posts.body LIKE '%linux%'","CreationDate":"2017-05-06 03:40:24","validated":false,"QueryBody_Original":"SELECT  * FROM tags\nJOIN posts\nON posts.id = tags.wikipostid OR posts.id = tags.excerptpostid\nWHERE tags.tagname LIKE '%linux%' OR posts.body LIKE '%linux%'"},{"QuerySetId":668599,"Title":"Posts w\/imgur links, optionally excluding those favorited by Flagston sock or with CACTUS links","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.CreationDate FROM Posts AS p WHERE STR_POSITION(p.Body, 'stack.imgur') > 0 ORDER BY p.CreationDate","CreationDate":"2017-05-09 22:23:49","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], p.Score, p.CreationDate\n\nFROM Posts p\n\nWHERE CHARINDEX('stack.imgur', p.Body) > 0\n\nORDER BY p.CreationDate ASC"},{"QuerySetId":668651,"Title":"Last 100, as offtopic closed questions","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.* FROM PostHistory LEFT JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistoryTypeId = 10 AND Comment = 102 ORDER BY PostHistory.CreationDate DESC LIMIT 100","CreationDate":"2017-05-10 04:01:29","validated":false,"QueryBody_Original":"SELECT  TOP 100 Posts.Id AS [Post Link], Posts.*\nFROM PostHistory\nLEFT JOIN Posts ON PostHistory.PostId = Posts.Id\nWHERE PostHistoryTypeId = 10 AND Comment = 102\nORDER BY PostHistory.CreationDate DESC;"},{"QuerySetId":669320,"Title":"Functional illiteracy detector, most upvoted historical posts","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts WHERE PostTypeId IN (2, 3) AND (Body LIKE '% i % i %' OR (NOT Body LIKE '%.%' AND NOT Body LIKE '%?%' AND NOT Body LIKE '%!%') OR Body LIKE '% u %') ORDER BY Score DESC, LastActivityDate DESC LIMIT 100","CreationDate":"2017-05-18 21:02:50","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Id AS [Post Link], *\nFROM Posts\nWHERE\n  PostTypeId IN (2, 3)\n  AND\n  (\n    Body LIKE '% i % i %'\n    OR\n    (NOT Body LIKE '%.%' AND NOT Body LIKE '%?%' AND NOT Body LIKE '%!%')\n    OR\n    Body like '% u %'\n  )\nORDER BY Score DESC, LastActivityDate DESC;"},{"QuerySetId":669704,"Title":"Easiest Challenges (most answers) with no Answer Containing...","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", MAX(p.AnswerCount) AS \"Answer Count\", COUNT(p.Id) FROM Posts AS p JOIN Posts AS q ON p.Id = q.ParentId WHERE p.PostTypeId = 1 AND NOT q.Body COLLATE SQL_Latin1_General_CP1_CI_AI LIKE '%Brain-Flak%' AND p.ClosedDate IS NULL GROUP BY p.Id ORDER BY 'Answer Count' DESC","CreationDate":"2017-05-12 23:59:10","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], MAX(p.AnswerCount) AS 'Answer Count', count(p.Id)\nFROM Posts p JOIN Posts q ON p.Id = q.ParentId\nWHERE p.PostTypeId = 1\n  AND q.Body COLLATE SQL_Latin1_General_CP1_CI_AI NOT LIKE '%Brain-Flak%'\n  AND p.ClosedDate is NULL\nGROUP BY p.Id\nORDER BY 'Answer Count' DESC"},{"QuerySetId":670792,"Title":"Unanswered questions that have at least one zero-score answer","Description":"Questions that can be marked as answered by upvoting one of the available zero-score answers.","QueryBody":"SELECT q.Id AS \"Post Link\" FROM Posts AS q\/* the question does not have an accepted answer *\/ \/* the question is not closed *\/ \/* has a 0-score answer *\/ \/* no 1+ score answers *\/  WHERE q.PostTypeId = 1 AND (SELECT COUNT(*) FROM Posts AS a WHERE a.PostTypeId = 2 AND a.ParentId = q.Id AND a.Score > 0) = 0 AND (SELECT COUNT(*) FROM Posts AS a WHERE a.PostTypeId = 2 AND a.ParentId = q.Id AND a.Score = 0) > 0 AND ClosedDate IS NULL AND AcceptedAnswerId IS NULL ORDER BY q.LastActivityDate","CreationDate":"2017-05-13 08:32:40","validated":false,"QueryBody_Original":"SELECT  q.Id AS [Post Link]\nFROM Posts q\nWHERE\n q.PostTypeId = 1\n \n -- no 1+ score answers\n and (SELECT count(*) from Posts a where a.PostTypeId = 2 and a.ParentId = q.Id and a.Score > 0) = 0\n \n -- has a 0-score answer\n and (SELECT count(*) from Posts a where a.PostTypeId = 2 and a.ParentId = q.Id and a.Score = 0) > 0\n \n -- the question is not closed\n and ClosedDate is null\n \n -- the question does not have an accepted answer\n and AcceptedAnswerId is null\n \nORDER BY q.LastActivityDate ASC"},{"QuerySetId":670977,"Title":"Retrieve duplicate questions - quora format","Description":null,"QueryBody":"SELECT NEWID() AS id, p.Id AS qid1, p.Body AS question1, dupes.Id AS qid2, dupes.Body AS question2, 1 AS isDuplicate FROM Posts AS p JOIN PostLinks AS links ON (p.Id = links.RelatedPostId AND LinkTypeId = 3) JOIN Posts AS dupes ON (dupes.Id = links.PostId AND dupes.PostTypeId = 1) WHERE p.tags LIKE '%java%' AND p.tags LIKE '%string%'","CreationDate":"2017-07-01 20:16:09","validated":false,"QueryBody_Original":"SELECT  \nnewId() as id, \n  p.Id as qid1,\n  p.Body as question1,\n  dupes.Id as qid2,\n  dupes.Body as question2,\n  1 as isDuplicate\nFROM Posts p\nJOIN PostLinks links ON (p.Id = links.RelatedPostId AND LinkTypeId = 3)\nJOIN Posts dupes ON (dupes.Id = links.PostId and dupes.PostTypeId = 1)\nWHERE p.tags like '%java%' and p.tags like '%string%'"},{"QuerySetId":671056,"Title":"Days between Question Asked and Answer Accepted","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate AS QuestionAsked, p.AnswerCount AS NumberOfAnswers, v.CreationDate AS AnswerAccepted, DATEDIFF(v.CreationDate, p.CreationDate) AS DiffDate FROM Posts AS p INNER JOIN Posts AS a ON a.Id = p.AcceptedAnswerId INNER JOIN Votes AS v ON a.Id = v.PostId WHERE p.PostTypeId = 1 AND NOT p.AcceptedAnswerID IS NULL AND v.VoteTypeId = 1 ORDER BY DATEDIFF(v.CreationDate, p.CreationDate) DESC","CreationDate":"2017-05-14 21:56:40","validated":false,"QueryBody_Original":"SELECT \n  p.Id as [Post Link],\n  p.CreationDate AS QuestionAsked,\n  p.AnswerCount AS NumberOfAnswers,\n  v.CreationDate AS AnswerAccepted,\n  DATEDIFF(day, p.CreationDate, v.CreationDate) AS DiffDate\nFROM\n  Posts p INNER JOIN \n  Posts a on a.Id = p.AcceptedAnswerId INNER JOIN\n  Votes v on a.Id = v.PostId\nWHERE\n  p.PostTypeId = 1 AND\n  p.AcceptedAnswerID IS NOT NULL AND\n  v.VoteTypeId = 1\nORDER BY\n  DATEDIFF(day, p.CreationDate, v.CreationDate) desc"},{"QuerySetId":671512,"Title":"Questions which are closed and favorited","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", FavoriteCount, Score, CreationDate FROM Posts WHERE (PostTypeId = 1) AND (NOT ClosedDate IS NULL) AND (FavoriteCount > 0) ORDER BY CreationDate DESC","CreationDate":"2017-05-16 14:56:41","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], FavoriteCount, Score, CreationDate\nFROM Posts\nWHERE (PostTypeId = 1) AND\n    (ClosedDate IS NOT NULL) AND\n    (FavoriteCount > 0)\nORDER BY CreationDate DESC;"},{"QuerySetId":671513,"Title":"Closed question with negative score which are favorited","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", FavoriteCount, Score, CreationDate FROM Posts WHERE (PostTypeId = 1) AND (NOT ClosedDate IS NULL) AND (FavoriteCount > 0) AND (Score < 0) ORDER BY CreationDate DESC","CreationDate":"2017-05-16 14:58:16","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], FavoriteCount, Score, CreationDate\nFROM Posts\nWHERE (PostTypeId = 1) AND\n    (ClosedDate IS NOT NULL) AND\n    (FavoriteCount > 0) AND\n    (Score < 0)\nORDER BY CreationDate DESC;"},{"QuerySetId":671526,"Title":"Questions favorited only by the OP","Description":null,"QueryBody":"SELECT posts.id AS \"Post Link\", posts.FavoriteCount, posts.Score, posts.CreationDate, votes.userid AS \"User Link\" FROM votes JOIN posts ON (posts.id = votes.postid) WHERE posts.FavoriteCount = 1 AND votetypeid = 5 AND posts.PostTypeId = 1 AND posts.OwnerUserId = votes.UserId ORDER BY posts.CreationDate DESC","CreationDate":"2017-05-16 16:06:39","validated":false,"QueryBody_Original":"SELECT  posts.id as [Post Link], posts.FavoriteCount, posts.Score, posts.CreationDate, votes.userid as [User Link]\nfrom votes\njoin posts on (posts.id = votes.postid) \nwhere\n  posts.FavoriteCount = 1 and\n  votetypeid=5 and\n  posts.PostTypeId = 1 and\n  posts.OwnerUserId = votes.UserId\n  order by posts.CreationDate desc"},{"QuerySetId":671530,"Title":"Closed questions with negative score favorited only by the OP","Description":null,"QueryBody":"SELECT posts.id AS \"Post Link\", posts.FavoriteCount, posts.Score, posts.CreationDate, votes.userid AS \"User Link\" FROM votes JOIN posts ON (posts.id = votes.postid) WHERE posts.FavoriteCount = 1 AND posts.Score < 0 AND NOT posts.ClosedDate IS NULL AND votetypeid = 5 AND posts.PostTypeId = 1 AND posts.OwnerUserId = votes.UserId ORDER BY posts.CreationDate DESC","CreationDate":"2017-05-16 16:11:26","validated":false,"QueryBody_Original":"SELECT  posts.id as [Post Link], posts.FavoriteCount, posts.Score, posts.CreationDate, votes.userid as [User Link]\nfrom votes\njoin posts on (posts.id = votes.postid) \nwhere\n  posts.FavoriteCount = 1 and\n  posts.Score < 0 and\n  posts.ClosedDate IS NOT NULL and\n  votetypeid=5 and\n  posts.PostTypeId = 1 and\n  posts.OwnerUserId = votes.UserId\n  order by posts.CreationDate desc"},{"QuerySetId":671603,"Title":"Unix and Linux Tag List","Description":null,"QueryBody":"SELECT TagName FROM Tags","CreationDate":"2017-05-16 20:48:33","validated":false,"QueryBody_Original":"SELECT  TagName From Tags;"},{"QuerySetId":671803,"Title":"Questions with negative score which are favorited","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", FavoriteCount, Score, CreationDate FROM Posts WHERE (PostTypeId = 1) AND (FavoriteCount > 0) AND (Score < 0) ORDER BY CreationDate DESC","CreationDate":"2017-05-17 08:22:18","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], FavoriteCount, Score, CreationDate\nFROM Posts\nWHERE (PostTypeId = 1) AND\n    (FavoriteCount > 0) AND\n    (Score < 0)\nORDER BY CreationDate DESC;"},{"QuerySetId":671833,"Title":"Top Reputation in the Netherlands","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC), Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Netherlands%' ORDER BY reputation DESC","CreationDate":"2017-05-17 10:09:17","validated":false,"QueryBody_Original":"SELECT \n   ROW_NUMBER() OVER (order by Reputation DESC),\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    Location like N'%Netherlands%' \nORDER BY\n   reputation DESC"},{"QuerySetId":671925,"Title":"Top 300 bangladeshi Stackoverfollow user ranking","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS PositionNumber, Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Bangladesh%' ORDER BY reputation DESC LIMIT 300","CreationDate":"2017-05-17 15:56:08","validated":false,"QueryBody_Original":"SELECT  TOP 300\nROW_NUMBER() OVER (ORDER BY Reputation Desc) as PositionNumber,\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Bangladesh%'\n   --OR Location like N'%Dhaka%'\nORDER BY\n   reputation DESC"},{"QuerySetId":672548,"Title":"Top Users by Bounty won","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS UserLink, COUNT(*) AS BountiesWon FROM Votes INNER JOIN Posts ON Votes.PostId = Posts.Id WHERE VoteTypeId = 9 GROUP BY Posts.OwnerUserId ORDER BY BountiesWon DESC LIMIT 50","CreationDate":"2018-12-15 17:48:10","validated":false,"QueryBody_Original":"SELECT  Top 50\n  Posts.OwnerUserId as UserLink,\n  COUNT(*) as BountiesWon\nFROM Votes\n  INNER JOIN Posts ON Votes.PostId = Posts.Id\nWHERE\n  VoteTypeId=9\nGROUP BY\n  Posts.OwnerUserId\nORDER BY\n  BountiesWon DESC"},{"QuerySetId":672834,"Title":"Questions that survived the great [identification-request] cleanup of 2016","Description":"See https:\/\/anime.meta.stackexchange.com\/q\/3994\/","QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE PostHistoryTypeId = 14 AND CreationDate BETWEEN '2016-06-09' AND '2016-06-10'","CreationDate":"2017-05-19 02:39:26","validated":false,"QueryBody_Original":"SELECT  PostId AS [Post Link]\nFROM PostHistory\nWHERE PostHistoryTypeId = 14 AND CreationDate BETWEEN '2016-06-09' AND '2016-06-10'"},{"QuerySetId":673227,"Title":"query all Post mentioned webrtc","Description":null,"QueryBody":"SELECT Title, Tags FROM Posts WHERE Title LIKE 'WebRTC'","CreationDate":"2017-05-20 19:31:31","validated":false,"QueryBody_Original":"SELECT  Title, Tags from Posts where Title like 'WebRTC';"},{"QuerySetId":673495,"Title":"My answers and their questions","Description":null,"QueryBody":"SELECT b.body AS question, a.body AS answer, b.tags FROM posts AS a, posts AS b WHERE a.owneruserid = 4288101 AND b.id = a.parentId AND b.tags LIKE '%vba%'","CreationDate":"2017-05-23 05:49:04","validated":false,"QueryBody_Original":"SELECT  b.body as question, a.body as answer, b.tags \nfrom posts as a, posts as b  \nwhere a.owneruserid=4288101 and b.id = a.parentId and b.tags LIKE '%vba%'"},{"QuerySetId":673777,"Title":"select  tagname as skillname,'programming' category, count as popularity from tags order by id;","Description":null,"QueryBody":"SELECT tagname AS skillname, 'programming' AS category, count AS popularity FROM tags ORDER BY id","CreationDate":"2017-05-22 16:49:50","validated":false,"QueryBody_Original":"SELECT   tagname as skillname,'programming' category, count as popularity from tags\norder by id;"},{"QuerySetId":674290,"Title":"Average score of questions with an accepted answer","Description":null,"QueryBody":"SELECT AVG(score + 0.000001) FROM Posts WHERE PostTypeId = 1 AND NOT AcceptedAnswerId IS NULL","CreationDate":"2017-05-22 23:26:38","validated":false,"QueryBody_Original":"SELECT  avg(score+0.000001) from Posts \nwhere PostTypeId = 1 and AcceptedAnswerId is not null"},{"QuerySetId":674321,"Title":"Average number of answers to questions without accepted answer","Description":null,"QueryBody":"SELECT AVG(answercount + 0.000001) FROM Posts WHERE PostTypeId = 1 AND AcceptedAnswerId IS NULL","CreationDate":"2017-05-22 23:32:02","validated":false,"QueryBody_Original":"SELECT  avg(answercount+0.000001) from Posts\nwhere PostTypeId = 1 and AcceptedAnswerId is null"},{"QuerySetId":674362,"Title":"Number of unique answerers per month","Description":null,"QueryBody":"SELECT YR_MONTH, COUNT(*) AS NumAnswerers FROM (SELECT (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%m') - 1) \/ 12.0) AS YR_MONTH, u.id AS UID, COUNT(*) AS NumAnswers FROM users AS u INNER JOIN posts AS p ON p.owneruserid = u.id AND p.posttypeid = 2 GROUP BY (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%m') - 1) \/ 12.0), u.id) AS AnsPerUPerWk WHERE NumAnswers > 0 GROUP BY YR_MONTH ORDER BY YR_MONTH","CreationDate":"2017-05-22 23:58:06","validated":false,"QueryBody_Original":"SELECT  YR_MONTH, count(*) as NumAnswerers\nfrom\n(\n  SELECT\n      (datepart(yy, p.creationdate) + (datepart(month, p.creationdate)-1) \/ 12.0) as YR_MONTH\n    , u.id as UID\n    , count (*) as NumAnswers\n  from users u\n  inner join posts p on\n        p.owneruserid = u.id\n    and p.posttypeid = 2\n  group by \n     (datepart(yy, p.creationdate) + (datepart(month, p.creationdate)-1) \/ 12.0)\n    , u.id\n) AnsPerUPerWk\nwhere NumAnswers > 0\ngroup by YR_MONTH\norder by YR_MONTH asc"},{"QuerySetId":674763,"Title":"Top 20 users from Karur, Tamilnadu, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%karur%' OR UPPER(Location) LIKE '%karur' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2017-05-23 10:49:28","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%karur%'\n    OR UPPER(Location) LIKE '%karur'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":674792,"Title":"My answers order by view count","Description":null,"QueryBody":"SELECT SUM(q.viewcount) FROM Posts AS a, Posts AS q WHERE a.OwnerUserId = 132438 AND a.parentId = q.Id AND a.PostTypeId = 2 AND q.PostTypeId = 1","CreationDate":"2018-03-13 12:40:47","validated":false,"QueryBody_Original":"SELECT  sum( q.viewcount)\nfrom Posts a, Posts q\nwhere a.OwnerUserId = 132438 and a.parentId = q.Id\nand a.PostTypeId = 2 and q.PostTypeId = 1"},{"QuerySetId":674922,"Title":"Highest comment scores Including Post Link","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.Score, c.UserId AS \"User Link\", c.CreationDate FROM Comments AS c WHERE Score > 100 ORDER BY Score DESC LIMIT 100","CreationDate":"2020-10-23 00:51:41","validated":false,"QueryBody_Original":"SELECT  TOP 100\nc.Id AS [Comment Link], \nc.Score, \nc.UserId AS [User Link],\nc.CreationDate\nFROM Comments c\nWHERE Score > 100\nORDER BY Score Desc"},{"QuerySetId":675294,"Title":"Network-wide stats for user account creation after post migration","Description":null,"QueryBody":"SELECT DB_NAME() AS Site, COUNT(*) AS TotalMigrated, COUNT(p.OwnerUserId) AS HaveAccount, SUM(CASE WHEN p.OwnerUserId IS NULL THEN 1 ELSE 0 END) AS NoAccount, SUM(CASE WHEN u.CreationDate > p.CreationDate THEN 1 ELSE 0 END) AS AccountAfterPost, SUM(CASE WHEN u.CreationDate > h.CreationDate THEN 1 ELSE 0 END) AS AccountAfterMigrate FROM PostHistory AS h INNER JOIN Posts AS p ON p.Id = h.PostId LEFT OUTER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE h.PostHistoryTypeId = 36 AND p.PostTypeId = 1","CreationDate":"2017-05-24 14:51:24","validated":false,"QueryBody_Original":"SELECT \n  DB_NAME() Site,\n  COUNT(*) TotalMigrated,\n  COUNT(p.OwnerUserId) HaveAccount,\n  SUM(IIF(p.OwnerUserId IS NULL, 1, 0)) NoAccount,\n  SUM(IIF(u.CreationDate > p.CreationDate, 1, 0)) AccountAfterPost,\n  SUM(IIF(u.CreationDate > h.CreationDate, 1, 0)) AccountAfterMigrate\nFROM\n  PostHistory h\n  INNER JOIN Posts p ON p.Id = h.PostId\n  LEFT OUTER JOIN Users u ON u.Id = p.OwnerUserId\nWHERE\n  h.PostHistoryTypeId = 36\n  AND p.PostTypeId = 1"},{"QuerySetId":675814,"Title":"Number of users who can vote","Description":null,"QueryBody":"SELECT canUpvote, canDownvote, COUNT(*) AS numUsers FROM (SELECT id, CASE WHEN reputation < 15 THEN 'N' ELSE 'Y' END AS canUpvote, CASE WHEN reputation < 125 THEN 'N' ELSE 'Y' END AS canDownvote FROM Users) AS tmp GROUP BY canUpvote, canDownvote","CreationDate":"2017-05-25 22:24:51","validated":false,"QueryBody_Original":"SELECT  canUpvote, canDownvote, count(*) as numUsers\n\nfrom (\n  SELECT id,\n    case \n      when reputation < 15 then 'N'\n      else 'Y'\n    end as canUpvote,  \n    case \n      when reputation < 125 then 'N'\n      else 'Y'\n    end as canDownvote    \n  from Users    \n) as tmp\ngroup by canUpvote, canDownvote"},{"QuerySetId":676140,"Title":"select title from posts where id< 100","Description":null,"QueryBody":"SELECT id, title, tags FROM Posts WHERE (title LIKE '%wh%' OR title LIKE '%how%') AND tags LIKE '%vulnerability%' AND id < 10000","CreationDate":"2017-05-26 14:31:58","validated":false,"QueryBody_Original":"SELECT  id , title , tags\nFROM Posts\nWHERE (title LIKE '%wh%'  OR title LIKE '%how%')\nAND tags LIKE '%vulnerability%'\nAND id < 10000;"},{"QuerySetId":676513,"Title":"Percent of answered questions for sabre","Description":null,"QueryBody":"SELECT SUM(CASE WHEN AnswerCount = 0 THEN 0.0 ELSE 1.0 END) \/ COUNT(*) FROM Posts WHERE PostTypeId = 1 AND DeletionDate IS NULL AND ClosedDate IS NULL AND CreationDate >= '2016-05-01' AND CreationDate < '2017-05-01' AND Tags LIKE '%sabre|%'","CreationDate":"2017-05-27 11:29:22","validated":false,"QueryBody_Original":"SELECT  SUM(case when AnswerCount = 0 then 0.0 else 1.0 end) \/ COUNT(*)\n  FROM Posts\n  WHERE\n  PostTypeId = 1 AND\n  DeletionDate is null AND\n  ClosedDate is null AND\n  CreationDate >= '2016-05-01' AND\n  CreationDate < '2017-05-01' AND\n  Tags like '%sabre|%'"},{"QuerySetId":676842,"Title":"Top 50 users from Kanpur","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kanpur%' OR UPPER(Location) LIKE '%KANPUR' ORDER BY Reputation DESC LIMIT 5000","CreationDate":"2017-05-28 19:48:43","validated":false,"QueryBody_Original":"SELECT  TOP 5000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kanpur%'\n    OR UPPER(Location) LIKE '%KANPUR'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":677151,"Title":"Monthly Contest for Answers to Old Questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM posts WHERE posttypeid = 2 AND CreationDate > CAST('5-1-2017' AS DATETIME)","CreationDate":"2017-06-29 22:54:21","validated":false,"QueryBody_Original":"SELECT \n    Id as [Post Link]\nfrom posts\nwhere posttypeid = 2 and CreationDate > convert(datetime, '5-1-2017')"},{"QuerySetId":677585,"Title":"Got all 6 steward badges, in chronological order","Description":"It works correctly only on the sites where exactly 6 review queues are existing","QueryBody":"SELECT MIN(Users.Id) AS \"User Link\", MAX(Badges.Date) FROM Badges LEFT JOIN Users ON Badges.UserId = Users.Id WHERE Badges.Name = 'Steward' GROUP BY Badges.UserId HAVING COUNT(*) = 6 ORDER BY MAX(Badges.Date)","CreationDate":"2017-05-29 20:58:20","validated":false,"QueryBody_Original":"SELECT  MIN(Users.Id) AS [User Link], MAX(Badges.Date)\nFROM Badges\nLEFT JOIN Users ON Badges.UserId = Users.Id\nWHERE Badges.Name='Steward'\nGROUP BY Badges.UserId\nHAVING COUNT(*) = 6\nORDER BY MAX(Badges.Date);"},{"QuerySetId":677794,"Title":"How many JavaScript questions are there","Description":null,"QueryBody":"SELECT * FROM posts WHERE posts.tags LIKE '%javascript%'","CreationDate":"2017-05-30 15:41:57","validated":false,"QueryBody_Original":"SELECT  *\nFROM posts\nWHERE\n  posts.tags like '%javascript%'"},{"QuerySetId":678686,"Title":"Top 50 question askers in MSE","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS QuestionsCount FROM Posts WHERE NOT OwnerUserId IS NULL AND OwnerUserId <> -1 GROUP BY OwnerUserId ORDER BY COUNT(*) DESC LIMIT 50","CreationDate":"2019-05-25 11:23:19","validated":false,"QueryBody_Original":"SELECT  TOP 50 \n    OwnerUserId AS [User Link], \n    COUNT(*) AS QuestionsCount\nFROM Posts\nWHERE OwnerUserId IS NOT NULL AND OwnerUserId <> -1\nGROUP BY OwnerUserId\nORDER BY COUNT(*) DESC;"},{"QuerySetId":679307,"Title":"Top 50 DownVotes and UpVotes by User","Description":null,"QueryBody":"SELECT U.DisplayName, U.DownVotes, U.UpVotes, ROUND(U.DownVotes \/ (U.UpVotes + 0.00001), 4) AS \"DV\/UV Ratio\", U.DownVotes * 100 \/ (SELECT SUM(U2.DownVotes) FROM Users AS U2) AS \"% All Downvotes\", U.UpVotes * 100 \/ (SELECT SUM(U3.UpVotes) FROM Users AS U3) AS \"% All Upvotes\" FROM Users AS U ORDER BY UpVotes DESC LIMIT 500","CreationDate":"2017-08-25 09:07:35","validated":false,"QueryBody_Original":"SELECT  TOP (500) U.DisplayName, U.DownVotes, U.UpVotes, ROUND(U.DownVotes\/(U.UpVotes+0.00001),4) AS [DV\/UV Ratio], U.DownVotes*100\/(SELECT SUM(U2.DownVotes) FROM Users As U2) AS [% All Downvotes],U.UpVotes*100\/(SELECT SUM(U3.UpVotes) FROM Users AS U3) AS [% All Upvotes]\nFROM Users As U\nORDER BY UpVotes DESC"},{"QuerySetId":679330,"Title":"2017 questions with a score of 5 or more","Description":null,"QueryBody":"SELECT q.Score, q.ID AS \"Post Link\", q.title FROM Posts AS q WHERE q.Score >= 5 AND q.PostTypeId = 1 AND YEAR(q.CreationDate) = 2017 ORDER BY q.Score DESC","CreationDate":"2017-06-01 09:58:40","validated":false,"QueryBody_Original":"SELECT  q.Score, q.ID as [Post Link], q.title\nfrom Posts q\nwhere q.Score >= 5 and q.PostTypeId = 1 and year(q.CreationDate) = 2017\norder by q.Score desc"},{"QuerySetId":679604,"Title":"Search User by their Display Name","Description":"Filter users by their Display Name, and Country Name","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, WebsiteUrl FROM Users WHERE LOWER(Location) LIKE LOWER('%##CityName##%') AND LOWER(DisplayName) LIKE LOWER('%##UserName##%') ORDER BY Reputation DESC","CreationDate":"2017-06-02 14:58:41","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    WebsiteUrl\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##CityName##%')\n    AND LOWER(DisplayName) LIKE LOWER('%##UserName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":680407,"Title":"Average Reputation of SO Users n Manchester, United Kingdom","Description":null,"QueryBody":"SELECT AVG(reputation) AS \"Average Reputation\", COUNT(Id) AS \"Total Users\" FROM Users WHERE LOWER(Location) LIKE '%manchester, united kingdom' AND reputation > 1","CreationDate":"2017-06-03 21:55:52","validated":false,"QueryBody_Original":"SELECT  \nAVG(reputation) as [Average Reputation],\nCOUNT(Id) as [Total Users]\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%manchester, united kingdom' and reputation > 1"},{"QuerySetId":680411,"Title":"Average Reputation of SO Users in Manchester, United Kingdom with reputation more than 1","Description":null,"QueryBody":"SELECT AVG(reputation) AS \"Average Reputation\", COUNT(Id) AS \"Total Users\" FROM Users WHERE LOWER(Location) LIKE '%manchester, united kingdom' AND reputation > 1","CreationDate":"2017-06-03 22:02:35","validated":false,"QueryBody_Original":"SELECT  \nAVG(reputation) as [Average Reputation],\nCOUNT(Id) as [Total Users]\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%manchester, united kingdom' and reputation > 1"},{"QuerySetId":680413,"Title":"Average Reputation of SO user in United Kingdom with reputation equal or more than 15","Description":null,"QueryBody":"SELECT AVG(reputation) AS \"Average Reputation\", COUNT(Id) AS \"Total Users\" FROM Users WHERE LOWER(Location) LIKE '%united kingdom' AND reputation >= 15","CreationDate":"2017-06-03 22:01:40","validated":false,"QueryBody_Original":"SELECT  \nAVG(reputation) as [Average Reputation],\nCOUNT(Id) as [Total Users]\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%united kingdom' and reputation >= 15"},{"QuerySetId":681503,"Title":"Top 100 perfis mais visitados","Description":null,"QueryBody":"SELECT ID AS \"User Link\", Views FROM USERS LIMIT 100","CreationDate":"2017-06-06 00:43:14","validated":false,"QueryBody_Original":"SELECT  TOP 100 \n       ID AS [User Link], Views\nFROM USERS"},{"QuerySetId":681821,"Title":"Questions that had the RAW tag at start but not any longer","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Tags, PostInits.Text AS \"Initial Tags\" FROM Posts INNER JOIN (SELECT PostId, Text FROM PostHistory WHERE PostHistoryTypeId = 3 AND Text LIKE '%rules-as-written%') AS PostInits ON Posts.Id = PostInits.PostId WHERE NOT Posts.Tags LIKE '%rules-as-written%'","CreationDate":"2017-06-07 03:26:51","validated":false,"QueryBody_Original":"SELECT  Posts.Id as [Post Link], Posts.Tags, PostInits.Text as [Initial Tags]\nfrom Posts\ninner join (\n  SELECT PostId, Text\n  from PostHistory\n  where PostHistoryTypeId = 3\n  and Text like '%rules-as-written%'\n) as PostInits on Posts.Id = PostInits.PostId\nwhere Posts.Tags not like '%rules-as-written%'"},{"QuerySetId":681871,"Title":"Number of posts with images uploaded using SEUploader","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE (Body LIKE '%alt=\"Mathematica graphics\"%')","CreationDate":"2017-06-07 05:23:50","validated":false,"QueryBody_Original":"SELECT  COUNT(Id)\nFROM Posts \nWHERE (Body LIKE '%alt=\"Mathematica graphics\"%')"},{"QuerySetId":682004,"Title":"RAW answer score rankings (to match All Time rankings in Top Users)","Description":null,"QueryBody":"SELECT Users.DisplayName, SUM(Answers.Score) AS \"RAW-3.5\" FROM Posts AS Answers INNER JOIN Users ON Answers.OwnerUserId = Users.Id INNER JOIN (SELECT Posts.Id AS \"Id\" FROM Posts WHERE PostTypeId = 1 \/* questions *\/ AND NOT Tags LIKE '%rules-as-written%' AND Tags LIKE '%dnd-5e%') AS Questions ON Answers.ParentId = Questions.Id WHERE Answers.PostTypeId = 2 \/* answers *\/ GROUP BY users.displayname ORDER BY 2 DESC","CreationDate":"2017-06-07 16:24:54","validated":false,"QueryBody_Original":"SELECT \n  Users.DisplayName,\n  sum(Answers.Score) as [RAW-3.5]\nfrom Posts as Answers\ninner join Users\n  on Answers.OwnerUserId = Users.Id\ninner join (\n  SELECT Posts.Id as [Id]\n  from Posts\n  where PostTypeId = 1 -- questions\n    and Tags not like '%rules-as-written%'\n    and Tags like '%dnd-5e%'\n  ) as Questions\n  on Answers.ParentId = Questions.Id\nwhere Answers.PostTypeId = 2 -- answers\ngroup by users.displayname\norder by 2 desc"},{"QuerySetId":682032,"Title":"RAW vs non-RAW ranking comparison","Description":null,"QueryBody":"SELECT Answers.OwnerUserId AS \"User Link\", SUM(Answers.Score) AS \"Total score\" FROM Posts AS Answers INNER JOIN Users ON Answers.OwnerUserId = Users.Id INNER JOIN (SELECT Posts.Id AS \"Id\" FROM Posts WHERE PostTypeId = 1 \/* questions *\/ AND Tags LIKE '%rules-as-written%' AND Tags LIKE '%dnd-3.5e%') AS Questions ON Answers.ParentId = Questions.Id WHERE Answers.PostTypeId = 2 \/* answers *\/ GROUP BY Answers.OwnerUserId ORDER BY \"Total score\" DESC","CreationDate":"2017-06-07 15:39:03","validated":false,"QueryBody_Original":"SELECT \n  Answers.OwnerUserId as [User Link],\n  sum(Answers.Score) as [Total score]\nfrom Posts as Answers\ninner join Users\n  on Answers.OwnerUserId = Users.Id\ninner join (\n  SELECT Posts.Id as [Id]\n  from Posts\n  where PostTypeId = 1 -- questions\n    and Tags like '%rules-as-written%'\n    and Tags like '%dnd-3.5e%'\n  ) as Questions\n  on Answers.ParentId = Questions.Id\nwhere Answers.PostTypeId = 2 -- answers\ngroup by Answers.OwnerUserId\norder by [Total score] desc"},{"QuerySetId":682092,"Title":"Android Developers (Android posts) and the tags from all the other posts they own","Description":null,"QueryBody":"SELECT Users.Id, Users.Reputation, Users.Location, Users.WebsiteUrl, Posts.Tags FROM Users INNER JOIN Posts ON Users.Id = Posts.OwnerUserId AND Users.AboutMe LIKE '%girl%' WHERE Posts.Tags LIKE '%ios%' ORDER BY Users.Reputation DESC","CreationDate":"2018-03-23 23:32:25","validated":false,"QueryBody_Original":"SELECT  \n  Users.Id, \n  Users.Reputation, \n  Users.Location,\n  Users.WebsiteUrl,\n  Posts.Tags \n  \nFROM Users\n  INNER JOIN Posts ON Users.Id = Posts.OwnerUserId and Users.AboutMe like '%girl%'\n  \nWHERE \n  Posts.Tags LIKE '%ios%'\n  -- Users.AboutMe LIKE '%_@_%_.__%' -- AboutMe contains something that looks like an email id\n  -- Users.AboutMe LIKE '%linkedin%' -- AboutMe contains something that looks like a linkedin link\n  -- Users.WebsiteUrl > '' -- WebsiteUrl is not blank\n  \nORDER BY \n  Users.Reputation DESC;"},{"QuerySetId":682112,"Title":"iOS Developers (\"About me\" contains '%iOS%')","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, Location, WebsiteUrl, REPLACE(REPLACE(AboutMe, CHAR(13), ''), CHAR(10), '') AS AboutMe FROM Users WHERE AboutMe LIKE '%iOS%' ORDER BY Reputation DESC","CreationDate":"2018-01-16 02:37:56","validated":false,"QueryBody_Original":"SELECT  \n  Id, \n  DisplayName,\n  Reputation, \n  Location,\n  WebsiteUrl,\n  REPLACE(REPLACE(AboutMe, CHAR(13), ''), CHAR(10), '') as AboutMe\n\nFROM \n  Users\n  \nWHERE \n  AboutMe LIKE '%iOS%' \n  -- AboutMe LIKE '%_@_%_.__%' -- AboutMe contains something that looks like an email id\n  -- AboutMe LIKE '%linkedin%' -- AboutMe contains something that looks like a linkedin link\n  -- WebsiteUrl > '' -- WebsiteUrl is not blank\n  \nORDER BY \n  Reputation DESC;"},{"QuerySetId":682122,"Title":"Questions with an accepted answer but without an accepted answer ","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.AcceptedAnswerId FROM Posts AS q WHERE NOT q.AcceptedAnswerId IS NULL AND NOT EXISTS(SELECT a.Id FROM Posts AS a WHERE a.Id = q.AcceptedAnswerId)","CreationDate":"2017-06-07 18:40:24","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.AcceptedAnswerId from Posts q\nwhere q.AcceptedAnswerId is not null \nand not exists (SELECT a.Id from Posts a where a.Id=q.AcceptedAnswerId)"},{"QuerySetId":682138,"Title":"Kinda newcomers with reputation and more than one post","Description":null,"QueryBody":"SELECT owneruserid AS \"User ID\", COUNT(owneruserid) AS \"Number of Posts\" FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE reputation < 1000 AND NOT reputation IN (1, 101)) GROUP BY owneruserid HAVING COUNT(owneruserid) > 1","CreationDate":"2017-06-07 18:53:11","validated":false,"QueryBody_Original":"SELECT  owneruserid as [User ID], count(owneruserid) as [Number of Posts] from posts \nWHERE owneruserid IN\n(SELECT id from users where reputation < 1000 and reputation not in (1, 101) ) \ngroup by owneruserid HAVING count(owneruserid) > 1"},{"QuerySetId":682206,"Title":"Post Scores since May '17","Description":null,"QueryBody":"SELECT creationdate, score FROM posts WHERE creationdate > '04.01.2017' AND score > 9 ORDER BY creationdate","CreationDate":"2017-06-07 22:03:05","validated":false,"QueryBody_Original":"SELECT  creationdate, score from posts where creationdate > '04.01.2017' \nand score > 9\norder by creationdate ASC"},{"QuerySetId":682550,"Title":"Amount of users with Reputation above 30000 by Location","Description":null,"QueryBody":"SELECT Location, COUNT(Id) AS Users FROM Users WHERE Reputation > 30000 GROUP BY Location ORDER BY COUNT(Id) DESC","CreationDate":"2018-01-16 02:40:47","validated":false,"QueryBody_Original":"SELECT  \n  Location, \n  COUNT(Id) as Users\n  \nFROM \n  Users  \n\nWHERE \n  Reputation > 30000\n\nGROUP BY \n  Location   \n\nORDER BY \n  COUNT(Id) DESC\n  \n;"},{"QuerySetId":682818,"Title":"Sandboxed posts that have a positive score and no activity for a month","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(MONTH, -1, GETDATE()) AND Score > 1","CreationDate":"2017-06-09 16:05:32","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(MONTH, -1, GETDATE()) AND Score > 1"},{"QuerySetId":683031,"Title":"Sandboxed posts that have a score > 1 and no activity for a month and no comments","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(MONTH, -1, GETDATE()) AND Score > 1 AND CommentCount = 0","CreationDate":"2017-06-09 16:06:29","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(MONTH, -1, GETDATE()) AND Score > 1 And CommentCount = 0"},{"QuerySetId":683047,"Title":"Sandboxed posts that have a score < -1 and no activity for a month","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE ParentId = 2140 AND Score < -5 ORDER BY Score DESC","CreationDate":"2017-06-09 17:18:37","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE ParentId = 2140 AND Score < -5 ORDER BY Score DESC"},{"QuerySetId":683051,"Title":"Sandboxed posts that have a score < 0 and no activity for a year","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(YEAR, -1, GETDATE()) AND Score < 0","CreationDate":"2017-06-09 17:20:10","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(YEAR, -1, GETDATE()) AND Score < 0"},{"QuerySetId":683052,"Title":"Sandboxed posts that have a score < 1 and no activity for two years","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(YEAR, -2, GETDATE()) AND Score < 1","CreationDate":"2017-06-09 17:30:55","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(YEAR, -2, GETDATE()) AND Score < 1"},{"QuerySetId":683059,"Title":"Sandboxed posts that have a score < 2 and no activity for three years","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(YEAR, -2, GETDATE()) AND Score < 2","CreationDate":"2017-06-09 18:17:07","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link] FROM Posts WHERE ParentId = 2140 AND LastActivityDate < DATEADD(YEAR, -2, GETDATE()) AND Score < 2"},{"QuerySetId":683067,"Title":"Sandbox: Inactive > 1 month && Score > 1","Description":null,"QueryBody":"SELECT SUM(CASE WHEN LastActivityDate < DATEADD(mm, -1, GETDATE()) AND Score > 1 THEN 1 ELSE 0 END) FROM Posts WHERE ParentId = 2140","CreationDate":"2017-06-09 19:35:01","validated":false,"QueryBody_Original":"SELECT  \n   sum(case when \n       LastActivityDate < DATEADD(mm, -1, GETDATE())\n       and Score>1 \n       then 1 else 0 end\n   )\nFrom Posts\nWhere ParentId = 2140"},{"QuerySetId":683072,"Title":"Sandbox: Inactive > 2 years && Score < 1","Description":null,"QueryBody":"SELECT SUM(CASE WHEN LastActivityDate < DATEADD(mm, -12, GETDATE()) AND Score < 0 THEN 1 ELSE 0 END) FROM Posts WHERE ParentId = 2140","CreationDate":"2017-06-09 19:37:22","validated":false,"QueryBody_Original":"SELECT  \n   sum(case when \n       LastActivityDate < DATEADD(mm, -12, GETDATE())\n       and Score < 0 \n       then 1 else 0 end\n   )\nFrom Posts\nWhere ParentId = 2140"},{"QuerySetId":683073,"Title":"Sandbox: Inactive >3 years && Score < 2","Description":null,"QueryBody":"SELECT SUM(CASE WHEN LastActivityDate < DATEADD(mm, -36, GETDATE()) AND Score < 2 THEN 1 ELSE 0 END) FROM Posts WHERE ParentId = 2140","CreationDate":"2017-06-09 19:42:05","validated":false,"QueryBody_Original":"SELECT  \n   sum(case when \n       LastActivityDate < DATEADD(mm, -36, GETDATE())\n       and Score < 2 \n       then 1 else 0 end\n   )\nFrom Posts\nWhere ParentId = 2140"},{"QuerySetId":683075,"Title":"Sandbox: Inactive > 1 month && Score < 0","Description":null,"QueryBody":"SELECT SUM(CASE WHEN LastActivityDate < DATEADD(mm, -1, GETDATE()) AND Score < 0 THEN 1 ELSE 0 END) FROM Posts WHERE ParentId = 2140","CreationDate":"2017-06-09 19:45:05","validated":false,"QueryBody_Original":"SELECT  \n   sum(case when \n       LastActivityDate < DATEADD(mm, -1, GETDATE())\n       and Score < 0 \n       then 1 else 0 end\n   )\nFrom Posts\nWhere ParentId = 2140"},{"QuerySetId":683383,"Title":"TeX.SX \\\\ corruption (grouped by id)","Description":null,"QueryBody":"SELECT COUNT(q.body), q.OwnerUserId, q.OwnerDisplayName FROM posts AS q WHERE (REPLACE(REPLACE(q.body, '\\\\', ''), ' ', 'X') LIKE '%\\XXXX%') AND q.OwnerUserId IN (SELECT p.OwnerUserId FROM posts AS p WHERE (REPLACE(REPLACE(p.body, '\\\\', ''), ' ', 'X') LIKE '%\\XXXX%') AND q.AcceptedAnswerId <> q.Id GROUP BY p.OwnerUserId, p.OwnerDisplayName HAVING COUNT(p.body) < 75) GROUP BY q.OwnerUserId, q.OwnerDisplayName ORDER BY COUNT(q.body) DESC","CreationDate":"2017-06-12 22:37:41","validated":false,"QueryBody_Original":"SELECT  count(q.body),q.OwnerUserId,q.OwnerDisplayName\nfrom posts q \nwhere (replace(replace(q.body,'\\\\',''), ' ','X')  like '%\\XXXX%') \nand q.OwnerUserId in(\nSELECT p.OwnerUserId\nfrom posts p\nwhere (replace(replace(p.body,'\\\\',''), ' ','X')  like '%\\XXXX%') \nand q.AcceptedAnswerId<>q.Id\ngroup by p.OwnerUserId,p.OwnerDisplayName\nhaving count(p.body)<75)\ngroup by q.OwnerUserId,q.OwnerDisplayName\norder by count(q.body) desc;"},{"QuerySetId":683822,"Title":"Top 20 Users from Bengaluru, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ahmedabad%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2017-06-12 19:18:57","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ahmedabad%' \n    --LOWER(Location) LIKE '%bengalore%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":684187,"Title":"Average Reputation Of SO Users where reputation > 1","Description":null,"QueryBody":"SELECT AVG(reputation) AS AVG_REP, COUNT(Id) AS \"Total Users\" FROM users WHERE LOWER(Location) LIKE '%manchester, united kingdom' AND reputation > 1","CreationDate":"2017-08-29 03:16:25","validated":false,"QueryBody_Original":"SELECT  Avg(reputation) AS AVG_REP, COUNT(Id) AS [Total Users] From users\nWHERE\n    LOWER(Location) LIKE '%manchester, united kingdom' and reputation > 1"},{"QuerySetId":684190,"Title":"Average Reputation Of SO Users where reputation > 15","Description":null,"QueryBody":"SELECT AVG(reputation) AS AVG_REP, COUNT(Id) AS \"Total Users\" FROM users WHERE LOWER(Location) LIKE '%manchester, united kingdom' AND reputation > 15","CreationDate":"2017-08-29 03:14:50","validated":false,"QueryBody_Original":"SELECT  Avg(reputation) AS AVG_REP,COUNT(Id) as [Total Users] From users\nWHERE\n    LOWER(Location) LIKE '%manchester, united kingdom' and reputation > 15"},{"QuerySetId":684191,"Title":"Average Reputation Of SO Users where reputation > 200","Description":null,"QueryBody":"SELECT AVG(reputation) AS AVG_REP, COUNT(Id) AS \"Total Users\" FROM users WHERE reputation > 200","CreationDate":"2018-09-07 03:40:56","validated":false,"QueryBody_Original":"SELECT  Avg(reputation) as AVG_REP,COUNT(Id) as [Total Users] From users\nWHERE reputation > 200"},{"QuerySetId":684287,"Title":"TeX.SX \\\\ corruption (tabs) with edit link ","Description":null,"QueryBody":"SELECT p.ID AS \"Post Link\", 'site:\/\/posts\/' + CAST(p.Id AS TEXT) + '\/edit|' + 'Edit' AS \"Edit Link\", p.CreationDate FROM posts AS p WHERE ((REPLACE(REPLACE(p.body, '\\\\', ''), CHAR(9), 'X') LIKE '%\\X%')) ORDER BY p.CreationDate DESC","CreationDate":"2017-06-14 10:36:08","validated":false,"QueryBody_Original":"SELECT \n p.ID AS [Post Link],\n     'site:\/\/posts\/' + CAST(p.Id AS nvarchar) + '\/edit|' + \n  'Edit'  AS [Edit Link],\n   p.CreationDate\nfrom posts p\nwhere (\n      (replace(replace(p.body,'\\\\',''), char(9),'X')  like '%\\X%') \n    )\norder by p.CreationDate desc;"},{"QuerySetId":684366,"Title":"Total # questions and # closed\/deleted questions posted by 1-rep accounts","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(q.Id) AS \"Number of questions\" FROM Users AS u LEFT JOIN Posts AS q ON q.PostTypeId = 1 AND q.OwnerUserId = u.Id WHERE u.Reputation = 1 GROUP BY u.Id ORDER BY COUNT(q.Id)","CreationDate":"2017-06-14 08:11:19","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link],\n      COUNT(q.Id) AS 'Number of questions'\n\n\n\nFROM Users u\nLEFT JOIN Posts q ON q.PostTypeId = 1 AND q.OwnerUserId = u.Id\n\n\nWHERE u.Reputation = 1\n\nGROUP BY u.Id\n\nORDER BY COUNT(q.Id) ASC"},{"QuerySetId":684371,"Title":"Which mods closed questions most unanimously?","Description":null,"QueryBody":"SELECT h.*, (CASE WHEN STR_POSITION(h.Text, '\"id\":41,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":1067,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":449,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":6005,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":14356,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":7035,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":25798,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":1992,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":59676,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":44179,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":10616,') > 1 THEN 1 ELSE 0 END + CASE WHEN STR_POSITION(h.Text, '\"id\":85695,') > 1 THEN 1 ELSE 0 END) AS \"ModVotes\" FROM PostHistory AS h WHERE h.PostHistoryTypeId = 10 ORDER BY ModVotes DESC","CreationDate":"2017-06-14 10:25:44","validated":false,"QueryBody_Original":"SELECT  h.*,\n  (IIF(CHARINDEX('\"id\":41,', h.Text)>1, 1, 0) +\n  IIF(CHARINDEX('\"id\":1067,', h.Text)>1, 1, 0) +\n  IIF(CHARINDEX('\"id\":449,', h.Text)>1, 1, 0) + \n  IIF(CHARINDEX('\"id\":6005,', h.Text)>1, 1, 0) +\n  IIF(CHARINDEX('\"id\":14356,', h.Text)>1, 1, 0) +\n  IIF(CHARINDEX('\"id\":7035,', h.Text)>1, 1, 0) + \n  IIF(CHARINDEX('\"id\":25798,', h.Text)>1, 1, 0) + \n  IIF(CHARINDEX('\"id\":1992,', h.Text)>1, 1, 0) +\n  IIF(CHARINDEX('\"id\":59676,', h.Text)>1, 1, 0) + \n  IIF(CHARINDEX('\"id\":44179,', h.Text)>1, 1, 0) +\n  IIF(CHARINDEX('\"id\":10616,', h.Text)>1, 1, 0) +\n  IIF(CHARINDEX('\"id\":85695,', h.Text)>1, 1, 0)) as 'ModVotes'\nFROM PostHistory h\nWHERE h.PostHistoryTypeId = 10\nORDER BY ModVotes DESC"},{"QuerySetId":684566,"Title":"mine old date and time","Description":null,"QueryBody":"SELECT Id, Score FROM Posts WHERE Score >= 10 AND (Title LIKE '%date%' OR Title LIKE '%Date%' OR Title LIKE '%time%' OR Title LIKE '%Time%') AND Tags LIKE '%python%' ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2017-06-14 20:11:47","validated":false,"QueryBody_Original":"SELECT  Top 100 Id, Score \nfrom Posts\nwhere Score>=10\nand (Title like '%date%' or Title like '%Date%' or Title like '%time%' or Title like '%Time%')\nand Tags like '%python%'\norder by CreationDate desc"},{"QuerySetId":684764,"Title":"N\u00famero de usuarios registrados por a\u00f1o","Description":null,"QueryBody":"SELECT COUNT(u.id) FROM Users AS u","CreationDate":"2020-11-30 21:25:52","validated":false,"QueryBody_Original":"SELECT  count(u.id)\nfrom Users u"},{"QuerySetId":684789,"Title":"DBA.SE posts with >= 4 tags","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE LENGTH(tags) - LENGTH(REPLACE(tags, '<', '')) >= 4","CreationDate":"2017-06-15 01:29:32","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \nfrom posts\nwhere len(tags) - len(replace(tags, '<', '')) >= 4;\nGO"},{"QuerySetId":684836,"Title":"Posts that have ever had [game-systems]","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Tags, PostHistory.CreationDate FROM Posts, PostHistory WHERE Posts.Id = PostHistory.PostId AND PostHistory.Text LIKE '%<game-systems>%' ORDER BY Posts.Id DESC, PostHistory.CreationDate","CreationDate":"2017-08-24 09:03:34","validated":false,"QueryBody_Original":"SELECT  Posts.Id as [Post Link], Posts.Tags, PostHistory.CreationDate\nfrom Posts, PostHistory\nwhere Posts.Id = PostHistory.PostId\nand PostHistory.Text like '%<game-systems>%'\norder by Posts.Id DESC, PostHistory.CreationDate ASC;"},{"QuerySetId":685440,"Title":"open questions with \"possible duplicate of ... unix.stackexchange\" comment","Description":"questions that aren't closed but have comments with the phrase \"possible duplicate of\"","QueryBody":"SELECT comments.text, posts.Id AS \"Post Link\", posts.* FROM posts JOIN comments ON comments.PostId = posts.Id WHERE comments.text LIKE 'possible duplicate of %unix.stackexchange.com\/questions\/%' AND posts.ClosedDate IS NULL","CreationDate":"2017-06-18 20:49:29","validated":false,"QueryBody_Original":"SELECT   comments.text, posts.Id as [Post Link], posts.* FROM posts\nJOIN comments\nON comments.PostId = posts.Id\nWHERE comments.text LIKE 'possible duplicate of %unix.stackexchange.com\/questions\/%'\nAND posts.ClosedDate IS NULL"},{"QuerySetId":685592,"Title":"Popular answers votes per day","Description":null,"QueryBody":"SELECT CAST(v.CreationDate AS DATE) AS VotedAnswerDate, COUNT(*) AS Votes FROM Posts AS ans JOIN Posts AS q ON ans.ParentId = q.Id JOIN Votes AS v ON v.PostId = ans.Id WHERE v.CreationDate > '2015-06-01' AND v.VoteTypeId = 2 \/* 2: UpMod *\/ AND q.ViewCount > 5000 AND ans.Score > 20 AND ans.OwnerUserId = 7586 GROUP BY CAST(v.CreationDate AS DATE) ORDER BY VotedAnswerDate","CreationDate":"2017-06-18 09:12:28","validated":false,"QueryBody_Original":"SELECT  \n--q.Title, q.Score as QuestionScore, q.ViewCount, q.Tags, q.Id as QuestionId,\n--ans.Score as AnswerScore, ans.Id as AnswerId\nCONVERT(DATE, v.CreationDate) as VotedAnswerDate,\nCount(*) as Votes\nfrom Posts ans\njoin Posts q on ans.ParentId = q.Id\njoin Votes v on v.PostId = ans.Id\nwhere \nv.CreationDate > '2015-06-01'\nand v.VoteTypeId = 2 -- 2: UpMod\nand q.ViewCount > 5000\nand ans.Score > 20\nand ans.OwnerUserId = 7586\ngroup by CONVERT(DATE, v.CreationDate)\norder by VotedAnswerDate asc"},{"QuerySetId":685662,"Title":"Rep Curve, rounded to the nearest 100","Description":null,"QueryBody":"SELECT ROUND(reputation \/ 100, 0) * 100 AS rep, COUNT(*) AS number_of_users FROM (SELECT * FROM Users WHERE reputation <> 1 AND reputation <> 101) AS a GROUP BY ROUND(reputation \/ 100, 0) * 100 ORDER BY ROUND(reputation \/ 100, 0) * 100","CreationDate":"2017-06-18 16:17:00","validated":false,"QueryBody_Original":"SELECT  ROUND(reputation\/100, 0)*100 as rep, count(*) as number_of_users FROM\n(SELECT * FROM Users WHERE reputation != 1 AND reputation != 101) a\nGROUP BY ROUND(reputation\/100, 0)*100\nORDER BY ROUND(reputation\/100, 0)*100"},{"QuerySetId":685784,"Title":"Questions with comments but no answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, CreationDate AS \"Posted On\", CommentCount AS \"Number of Comments\" FROM Posts AS p WHERE AnswerCount = 0 AND CommentCount > 0 AND ClosedDate IS NULL ORDER BY CommentCount DESC","CreationDate":"2017-06-18 22:46:52","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  Score,\n  CreationDate AS [Posted On],\n  CommentCount AS [Number of Comments]\nFROM Posts p\nWHERE\n  AnswerCount = 0\n  and CommentCount > 0\n  and ClosedDate is NULL\nORDER BY CommentCount DESC"},{"QuerySetId":685875,"Title":"Top 100 italian users on StackOverflow","Description":null,"QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Ital%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2018-03-27 11:47:19","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id as [User Link],\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Ital%' \nORDER BY\n   reputation DESC"},{"QuerySetId":685999,"Title":"Total Rep and Rep Distribution","Description":null,"QueryBody":"SELECT Reputation FROM Users ORDER BY Reputation DESC","CreationDate":"2017-06-19 17:48:37","validated":false,"QueryBody_Original":"SELECT  Reputation FROM Users ORDER BY Reputation DESC"},{"QuerySetId":686023,"Title":"Users With Gold Badges Related to a Given Tag","Description":null,"QueryBody":"SELECT DISTINCT u.Id, U.DisplayName, u.Reputation, u.Location, u.WebsiteUrl, u.AboutMe FROM Users AS u WHERE u.AboutMe LIKE '%automation%' AND u.WebsiteUrl LIKE '%github%' ORDER BY u.Reputation DESC","CreationDate":"2018-01-16 02:29:01","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  u.Id, \n  U.DisplayName,\n  u.Reputation, \n  u.Location,\n  u.WebsiteUrl,\n  u.AboutMe\n\nFROM Users u\n  \nWHERE \n  u.AboutMe LIKE '%automation%' \n  AND u.WebsiteUrl LIKE '%github%' \n  \nORDER BY \n  u.Reputation DESC;"},{"QuerySetId":686028,"Title":"List of Tags with frequency","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags ORDER BY Count DESC","CreationDate":"2018-01-16 02:41:10","validated":false,"QueryBody_Original":"SELECT  \n  TagName, \n  Count\n\nFROM \n  Tags\n\nORDER BY \n  Count desc"},{"QuerySetId":686320,"Title":"Tag wikis with HTTP links","Description":null,"QueryBody":"SELECT t.TagName, p.LastEditDate, 'site:\/\/edit-tag-wiki\/' + CAST(t.Id AS TEXT) AS \"Link\" FROM Posts AS p INNER JOIN Tags AS t ON p.Id = t.WikiPostId WHERE p.Body LIKE '%http:\/\/apple.stackexchange.com\/%' ORDER BY p.LastEditDate","CreationDate":"2017-07-02 21:26:19","validated":false,"QueryBody_Original":"SELECT  t.TagName, p.LastEditDate,\n  'site:\/\/edit-tag-wiki\/' + CAST(t.Id AS nvarchar) AS 'Link'\n  FROM Posts AS p\n  INNER JOIN Tags AS t\n    ON p.Id = t.WikiPostId\n  WHERE p.Body LIKE '%http:\/\/apple.stackexchange.com\/%'\n  ORDER BY p.LastEditDate ASC"},{"QuerySetId":686566,"Title":"New Search Android + Test","Description":null,"QueryBody":"SELECT P.title, P.body, P.Tags, P.ViewCount, P.Score, P.AnswerCount, P.CreationDate FROM Posts AS P WHERE (P.Tags LIKE '%android-testing%') OR (P.Tags LIKE '%android%' AND P.Tags LIKE '%test%') ORDER BY YEAR(P.CreationDate)","CreationDate":"2017-06-21 02:49:27","validated":false,"QueryBody_Original":"SELECT  P.title, P.body, P.Tags, P.ViewCount,P.Score,P.AnswerCount,P.CreationDate\nFROM Posts P\nWHERE\n(P.Tags LIKE '%android-testing%' ) OR\n(P.Tags LIKE '%android%' AND P.Tags LIKE '%test%')\nORDER by year(P.CreationDate)"},{"QuerySetId":686851,"Title":"South African Users by Location","Description":null,"QueryBody":"SELECT location, COUNT(*) AS number FROM users WHERE location LIKE '%South Africa%' OR location LIKE '%Cape Town%' OR location LIKE '%Capetown%' OR location LIKE '%Joburg%' OR location LIKE '%Johannesburg%' OR location LIKE '%JHB%' OR location LIKE '%Gauteng%' OR location LIKE '%Pretoria%' OR location LIKE '%Western Cape%' OR location LIKE '%Stellenbosch%' OR location LIKE '%Durban%' OR location LIKE '%KZN%' OR location LIKE '%Port Elizabeth%' OR location LIKE '%Midrand%' OR location LIKE '%Sandton%' OR location LIKE '%Randburg%' OR location LIKE '%Limpopo%' OR location LIKE '%Mpumalanga%' OR location LIKE 'ZA' GROUP BY location ORDER BY number DESC","CreationDate":"2017-06-21 17:02:35","validated":false,"QueryBody_Original":"SELECT  location, count(*) as number\nfrom users\nwhere \n  location like '%South Africa%' \n  or location like '%Cape Town%' \n  or location like '%Capetown%'\n  or location like '%Joburg%'\n  or location like '%Johannesburg%'\n  or location like '%JHB%'\n  or location like '%Gauteng%'\n  or location like '%Pretoria%'\n  or location like '%Western Cape%'\n  or location like '%Stellenbosch%'\n  or location like '%Durban%'\n  or location like '%KZN%'\n  or location like '%Port Elizabeth%'\n  or location like '%Midrand%'\n  or location like '%Sandton%'\n  or location like '%Randburg%'\n  or location like '%Limpopo%'\n  or location like '%Mpumalanga%'\n  or location like 'ZA'\ngroup by location\norder by number desc"},{"QuerySetId":687103,"Title":"Questions tagged %backbase% over time","Description":null,"QueryBody":"SELECT p.CreationDate, COUNT(ID) AS NumberOfQuestions FROM Posts AS p WHERE LOWER(Title) LIKE '%python%' OR LOWER(Tags) LIKE '%python%' GROUP BY p.CreationDate ORDER BY p.CreationDate","CreationDate":"2017-06-22 20:29:46","validated":false,"QueryBody_Original":"SELECT  p.CreationDate, count(ID) as NumberOfQuestions\nfrom Posts p\nwhere LOWER(Title) like '%python%' or \nLOWER(Tags) like '%python%'\ngroup by p.CreationDate\norder by p.CreationDate;\n\n\nSELECT year(p.CreationDate) as Year, DatePart(quarter, p.CreationDate) as Quarter, count(ID) as NumberOfQuestions\nfrom Posts p\nwhere LOWER(Title) like '%python%' or \nLOWER(Tags) like '%python%'\ngroup by year(p.CreationDate), DatePart(quarter, p.CreationDate)\norder by year(p.CreationDate), DatePart(quarter, p.CreationDate);"},{"QuerySetId":687152,"Title":"Average down-vote done by millennial","Description":null,"QueryBody":"SELECT AVG(DownVotes) FROM Users WHERE Age < 37 AND Age > 17","CreationDate":"2017-06-22 16:11:47","validated":false,"QueryBody_Original":"SELECT  Avg(DownVotes) from Users where Age < 37 AND Age > 17"},{"QuerySetId":687700,"Title":"Rep for all, for temporal analysis","Description":null,"QueryBody":"SELECT Id, Reputation, LastAccessDate, CreationDate, Location FROM Users ORDER BY LastAccessDate","CreationDate":"2017-06-23 13:42:45","validated":false,"QueryBody_Original":"SELECT  Id, Reputation, LastAccessDate, CreationDate,Location\nFROM Users\n-- WHERE Reputation >  101\n        ORDER by LastAccessDate"},{"QuerySetId":688101,"Title":"Total number of questions asked, including deleted questions","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1","CreationDate":"2017-06-24 14:36:37","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts WHERE PostTypeId = 1"},{"QuerySetId":688164,"Title":"Post and Accepted Answer by language","Description":null,"QueryBody":"SELECT p.Id, p.AcceptedAnswerId, p.CreationDate, p.OwnerUserId, p.Tags, p.Title, p.Body AS Question, a.Body AS Answer FROM POSTS AS p INNER JOIN POSTS AS a ON p.AcceptedAnswerId = a.Id WHERE p.Tags LIKE '%pega%' AND p.PostTypeId = 1 AND a.PostTypeId = 2 AND NOT p.AcceptedAnswerId IS NULL AND p.DeletionDate IS NULL","CreationDate":"2018-12-29 05:11:08","validated":false,"QueryBody_Original":"SELECT  \n  p.Id,\n  p.AcceptedAnswerId,\n  p.CreationDate,\n  p.OwnerUserId,\n  p.Tags,\n  p.Title,\n  p.Body AS Question,\n  a.Body AS Answer\n  FROM POSTS p INNER JOIN POSTS a ON p.AcceptedAnswerId = a.Id\n  WHERE \n  p.Tags LIKE '%pega%'\n  AND p.PostTypeId = 1 \n  AND a.PostTypeId = 2\n  AND p.AcceptedAnswerId IS NOT NULL\n  AND p.DeletionDate IS NULL;"},{"QuerySetId":688198,"Title":" What question has the most cycles of Close\/Reopen?","Description":"https:\/\/meta.stackexchange.com\/questions\/277175\/what-question-has-the-most-cycles-of-close-reopen","QueryBody":"SELECT postid, title, \"closed\", \"re-opened\", \"closed\" + \"re-opened\" AS \"cycles\", CASE WHEN \"closed\" > \"re-opened\" THEN 'closed' ELSE 'open' END AS \"current\" FROM (SELECT postid, p.title, SUM(CASE WHEN posthistorytypeid = 10 THEN 1 ELSE 0 END) AS \"closed\", SUM(CASE WHEN posthistorytypeid = 11 THEN 1 ELSE 0 END) AS \"re-opened\" FROM posthistory INNER JOIN posts AS p ON p.id = postid \/* close\/reopen *\/ WHERE posthistorytypeid IN (10, 11) GROUP BY postid, title) AS data ORDER BY \"closed\" + \"re-opened\" DESC","CreationDate":"2017-06-25 15:21:49","validated":false,"QueryBody_Original":"SELECT  postid\n     , title\n     , [closed]\n     , [re-opened]\n     , [closed] + [re-opened] as [cycles]\n     , case when [closed] > [re-opened] then 'closed' else 'open' end as [current]\nfrom (\nSELECT postid\n     , p.title\n     , sum(case when posthistorytypeid = 10 then 1 else 0 end) as [closed]\n     , sum(case when posthistorytypeid = 11 then 1 else 0 end) as [re-opened]\nfrom posthistory\ninner join posts p on p.id = postid\nwhere posthistorytypeid in (10,11) --close\/reopen\ngroup by postid, title\n)  data\norder by [closed] + [re-opened] desc"},{"QuerySetId":688262,"Title":"SELECT * from Users where id = (SELECT max(Id) from Users);","Description":null,"QueryBody":"SELECT * FROM Users WHERE id = (SELECT MAX(Id) FROM Users)","CreationDate":"2017-06-26 11:12:49","validated":false,"QueryBody_Original":"SELECT  * from Users where id = (SELECT max(Id) from Users);"},{"QuerySetId":688450,"Title":"Users with 2K rep who visited in the last 30 days","Description":null,"QueryBody":"SELECT Id AS \"User Link\", DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) AS DaysSinceLastVisit FROM Users WHERE Reputation >= 2000 AND DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) < 30 ORDER BY DaysSinceLastVisit","CreationDate":"2017-06-26 22:35:39","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], datediff(day, LastAccessDate, GetDate()) as DaysSinceLastVisit \nfrom Users\nwhere Reputation >= 2000 and datediff(day, LastAccessDate, GetDate()) < 30\norder by DaysSinceLastVisit asc"},{"QuerySetId":688453,"Title":"Top 1000 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Age FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2017-06-26 23:52:15","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Age\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":688523,"Title":"Q per day for CSE","Description":null,"QueryBody":"SELECT CAST((CAST(TIME_TO_STR(CreationDate, '%d %b %Y') AS TEXT(11))) AS DATE) AS \"In Day\", COUNT(Id) AS \"questions in day\" FROM Posts WHERE PostTypeId = 1 GROUP BY CAST(TIME_TO_STR(CreationDate, '%d %b %Y') AS TEXT(11)) ORDER BY (CAST(TIME_TO_STR(CreationDate, '%d %b %Y') AS TEXT(11)) - CURRENT_TIMESTAMP()) DESC","CreationDate":"2017-06-27 12:31:00","validated":false,"QueryBody_Original":"SELECT  cast((convert(varchar(11),CreationDate,106)) as date) as 'In Day', COUNT(Id) AS 'questions in day'\nFrom Posts\nwhere PostTypeId = 1\ngroup by convert(varchar(11),CreationDate,106)\nOrder by (convert(varchar(11),CreationDate,106)-getDate()) desc"},{"QuerySetId":689027,"Title":"\u041b\u0443\u0447\u0448\u0438\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u0432 \u0434\u0435\u043d\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438","Description":null,"QueryBody":"SELECT p.Score, p.CreationDate, p.Id AS \"Post Link\" FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE PostTypeId = 1 AND CAST(FLOOR(CAST(p.CreationDate AS FLOAT)) AS DATETIME) = CAST(FLOOR(CAST(u.CreationDate AS FLOAT)) AS DATETIME) AND p.CreationDate BETWEEN '08.26.2017' AND '09.01.2017' ORDER BY p.Score DESC, p.CreationDate","CreationDate":"2017-09-04 16:11:47","validated":false,"QueryBody_Original":"SELECT  p.Score, p.CreationDate, p.Id as [Post Link]\nFROM Posts p JOIN Users u ON u.Id = p.OwnerUserId\nWHERE PostTypeId = 1 \n    AND CAST(FLOOR(CAST(p.CreationDate as float)) as datetime) = CAST(FLOOR(CAST(u.CreationDate as float)) as datetime)\n    AND p.CreationDate BETWEEN '08.26.2017' AND '09.01.2017'\nORDER BY\n    p.Score DESC,\n    p.CreationDate;"},{"QuerySetId":689043,"Title":"Comments containing given keyword (with text and author)","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", NULL AS \"Post Link\", Text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%nizkor%' UNION SELECT NULL AS \"Comment Link\", Id AS \"Post Link\", Body AS Text, OwnerUserId AS \"User Link\", CreationDate FROM Posts WHERE Body LIKE '%nizkor%' ORDER BY CreationDate","CreationDate":"2017-06-28 18:14:06","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], NULL As [Post Link], Text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%nizkor%'\nUNION\nSELECT NULL AS [Comment Link], Id As [Post Link], Body as Text, OwnerUserId AS [User Link], CreationDate\nFROM Posts\nWHERE Body LIKE '%nizkor%'\n\nORDER BY CreationDate"},{"QuerySetId":690509,"Title":"Post table top 20 rows","Description":null,"QueryBody":"SELECT AnswerCount, ViewCount, Title AS \"Post Title\" FROM Posts LIMIT 20","CreationDate":"2017-07-03 02:08:35","validated":false,"QueryBody_Original":"SELECT  Top 20 AnswerCount,ViewCount,Title as [Post Title] from Posts"},{"QuerySetId":690619,"Title":"Gold Javascript Badge Ranking in Morocco","Description":null,"QueryBody":"SELECT b.UserId, MAX(b.Date) AS DateReceived, u.DisplayName FROM Users AS u, Badges AS b WHERE b.name = 'javascript' AND u.Id = b.UserId AND u.Location LIKE '%Morocco%' GROUP BY b.UserId, u.DisplayName HAVING COUNT(*) > 2 ORDER BY DateReceived","CreationDate":"2017-07-03 13:00:43","validated":false,"QueryBody_Original":"SELECT  b.UserId, max(b.Date) DateReceived, u.DisplayName\nFROM Users u, Badges b\nWHERE b.name='javascript'\nand u.Id=b.UserId\nand u.Location like '%Morocco%'\nGROUP BY b.UserId, u.DisplayName\nHAVING COUNT(*)>2\nORDER BY DateReceived"},{"QuerySetId":690990,"Title":"Highest voted answers that have no competition","Description":null,"QueryBody":"SELECT id AS \"Post Link\", score FROM posts WHERE posttypeid = 2 AND parentid IN (SELECT id FROM posts WHERE answercount = 1) ORDER BY score DESC","CreationDate":"2017-07-04 01:37:56","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], score  from posts where posttypeid = 2 and parentid in \n(SELECT id from posts where answercount = 1) order by score desc"},{"QuerySetId":691803,"Title":"The Tag ordered by count","Description":"Enter Query Description\r\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY count DESC) AS rn, count, tagName FROM tags ORDER BY count DESC","CreationDate":"2017-07-05 15:03:28","validated":false,"QueryBody_Original":"SELECT  row_number() over (order by count desc) rn,\ncount,\ntagName\n\n\nfrom tags\norder by count desc"},{"QuerySetId":691871,"Title":"Ages of History SE Users","Description":null,"QueryBody":"SELECT Age, COUNT(Age) AS \"count\" FROM Users GROUP BY Age ORDER BY Age","CreationDate":"2017-07-05 17:42:45","validated":false,"QueryBody_Original":"SELECT  Age, count(Age) [count]\nfrom Users\ngroup by Age\norder by Age asc"},{"QuerySetId":691872,"Title":"Ages of Politics SE Users","Description":null,"QueryBody":"SELECT Age, COUNT(Age) AS \"count\" FROM Users GROUP BY Age ORDER BY Age","CreationDate":"2017-07-05 17:43:55","validated":false,"QueryBody_Original":"SELECT  Age, count(Age) [count]\nfrom Users\ngroup by Age\norder by Age asc"},{"QuerySetId":692176,"Title":"Titles from last 6 months","Description":null,"QueryBody":"SELECT (Title) FROM Posts WHERE CreationDate > '2016-11-05 14:29:36'","CreationDate":"2017-07-06 06:51:39","validated":false,"QueryBody_Original":"SELECT  (Title) from Posts where CreationDate > '2016-11-05 14:29:36'"},{"QuerySetId":692855,"Title":"top sudanese developers in stackoverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, CreationDate, LastAccessDate, Views FROM Users WHERE LOWER(Location) LIKE '%sudan%' ORDER BY Reputation DESC","CreationDate":"2017-07-08 03:48:55","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    CreationDate,\n    LastAccessDate,\n    Views\nFROM\n    Users\nWHERE\n    LOWER(Location) like '%sudan%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":693010,"Title":"Top users with gold Angular badges","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS c FROM Badges WHERE Name IN ('angular') AND Class = 1 GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2017-07-08 22:37:08","validated":false,"QueryBody_Original":"SELECT  TOP 100 UserId AS [User Link], COUNT(*) as c\nFROM Badges\nWHERE Name IN ('angular') AND Class = 1\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":694326,"Title":"Highest rated unanimously upvoted posts","Description":null,"QueryBody":"SELECT v.PostId AS postId, COUNT(v.Id) AS Upvotes FROM Votes AS v WHERE v.VoteTypeId = 2 GROUP BY v.PostId ORDER BY COUNT(v.Id)","CreationDate":"2017-07-12 02:16:27","validated":false,"QueryBody_Original":"SELECT \n  v.PostId AS postId,\n  COUNT(v.Id) AS Upvotes\nFROM\n  Votes v\nWHERE\n  v.VoteTypeId = 2\nGROUP BY\n  v.PostId\nORDER BY\n  COUNT(v.Id)"},{"QuerySetId":694557,"Title":"Top 20 users from Coimbatore, Tamilnadu, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%coimbatore%' OR UPPER(Location) LIKE '%coimbatore%' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2017-07-12 13:57:12","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%coimbatore%'\n    OR UPPER(Location) LIKE '%coimbatore%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":694867,"Title":"Top SO users from NYC","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY u.Reputation DESC) AS \"#\", u.Id AS \"User Link\", u.Reputation, u.Location \/* denormalize the Users with their Badges, i.e., flatten into a single table. *\/ FROM Users AS u JOIN Badges AS b ON u.Id = b.UserId WHERE b.name = N'javascript' AND b.class = 3 \/* 1 is gold, 2: silver, 3: bronze *\/ AND u.Reputation >= 1000 AND (LOWER(u.Location) LIKE '%nyc%' OR UPPER(Location) LIKE '%NY, NY%' OR LOWER(Location) LIKE '%staten%' OR LOWER(Location) LIKE '%bronx%' OR LOWER(Location) LIKE '%queens%' OR LOWER(Location) LIKE '%new york, ny%' OR LOWER(Location) LIKE '%manhattan%' OR LOWER(Location) LIKE '%brooklyn%') ORDER BY u.Reputation DESC","CreationDate":"2017-07-12 21:44:31","validated":false,"QueryBody_Original":"SELECT \n    row_number() over(order by u.Reputation desc) as [#], \n    u.Id as [User Link], \n    u.Reputation,\n    u.Location \nfrom -- denormalize the Users with their Badges, i.e., flatten into a single table.\n    Users u\n  join \n    Badges b\n  on\n    u.Id = b.UserId\nwhere\n    b.name = N'javascript'\n  and\n    b.class = 3 -- 1 is gold, 2: silver, 3: bronze\n  and\n    u.Reputation >= 1000 \n  and \n    (\n      lower(u.Location) like '%nyc%'\n      or upper(Location) like '%NY, NY%'\n      or lower(Location) like '%staten%'\n      or lower(Location) like '%bronx%'\n      or lower(Location) like '%queens%'\n      or lower(Location) like '%new york, ny%'\n      or lower(Location) like '%manhattan%'\n      or lower(Location) like '%brooklyn%'\n    )\norder by\n    u.Reputation desc;"},{"QuerySetId":695037,"Title":"\\\\ bug query on markdown","Description":"with bits stolen from http:\/\/data.stackexchange.com\/stackoverflow\/query\/494264\/longest-answers-by-markdown","QueryBody":"SELECT p.Id AS \"Post Link\", 'site:\/\/posts\/' + CAST(p.Id AS TEXT) + '\/edit|' + 'Edit' AS \"Edit Link\", p.OwnerUserId AS \"User Link\", p.CreationDate FROM Posts AS p, PostHistory AS ph\/* initial body, edit body, rollback body *\/  WHERE ph.PostId = p.Id \/* getting history for the right post *\/ AND ph.PostHistoryTypeId IN (2, 5, 8) AND NOT EXISTS(SELECT * FROM PostHistory AS phtwo WHERE phtwo.PostId = p.Id AND phtwo.PostHistoryTypeId IN (2, 5, 8) AND phtwo.CreationDate > ph.CreationDate) AND YEAR(p.CreationDate) < 2014 AND (REPLACE(REPLACE(ph.Text, '\\\\', ''), ' ', 'X') LIKE '%\\XXXX%') ORDER BY p.OwnerUserId DESC","CreationDate":"2017-07-15 11:12:30","validated":false,"QueryBody_Original":"SELECT  \n      p.Id AS [Post Link], \n          'site:\/\/posts\/' + CAST(p.Id AS nvarchar) + '\/edit|' + \n  'Edit'  AS [Edit Link],\n      p.OwnerUserId as [User Link],\n      p.CreationDate\nFrom Posts p, PostHistory ph\nWhere \n       ph.PostId = p.Id                 -- getting history for the right post\n      and ph.PostHistoryTypeId in (2,5,8)  -- initial body, edit body, rollback body\n      and not exists (                     -- no later revisions of the body\n        SELECT * from PostHistory phtwo\n        Where phtwo.PostId = p.Id\n          and phtwo.PostHistoryTypeId in (2,5,8)\n          and phtwo.CreationDate > ph.CreationDate\n      )\n      and year(p.CreationDate) < 2014 \n      and  (replace(replace(ph.Text,'\\\\',''), ' ','X')  like '%\\XXXX%') \nOrder By p.OwnerUserId Desc"},{"QuerySetId":695214,"Title":"Users with Tag-based Gold Badges by Country","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Reputation FROM Users, Badges WHERE LOWER(Users.Location) LIKE LOWER('%##CountryName##%') AND Users.Id = Badges.UserId AND Badges.Class = 3 AND Badges.TagBased = 1 GROUP BY Users.Id, Users.reputation ORDER BY Reputation DESC","CreationDate":"2017-07-13 18:59:34","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Users.Id AS [User Link],\n    Reputation\nFROM\n    Users, Badges\nWHERE\n    LOWER(Users.Location) LIKE LOWER('%##CountryName##%')\n    AND Users.Id = Badges.UserId\n    AND Badges.Class = 3\n    AND Badges.TagBased = 1\n    \nGROUP BY Users.Id, Users.reputation\nORDER BY\n    Reputation DESC;"},{"QuerySetId":695231,"Title":"select * from Users where displayName like 'Radacina'","Description":null,"QueryBody":"SELECT * \/* where displayName like 'Rada%' *\/ FROM Users \/* where displayName like 'Rada%' *\/","CreationDate":"2017-07-13 19:28:42","validated":false,"QueryBody_Original":"SELECT  * from Users --where displayName like 'Rada%'"},{"QuerySetId":695414,"Title":"Top user in Tiruchirappalli, Tamil Nadu, India","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE LOWER(Location) LIKE '%chennai%' OR LOWER(Location) LIKE '%chennai%' ORDER BY reputation DESC LIMIT 10","CreationDate":"2020-01-27 20:46:14","validated":false,"QueryBody_Original":"SELECT  TOP 10\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\nLOWER(Location) like '%chennai%' OR\nLOWER(Location) like '%chennai%'\nORDER BY\n   reputation DESC"},{"QuerySetId":695483,"Title":"Answers that took way too long to accept","Description":"Answers that took the longest from being posted to being accepted, with a minimum of 1 year. Only answers that are currently accepted are counted.","QueryBody":"SELECT Posts.Id AS \"Post Link\", DATEDIFF(Votes.CreationDate, Posts.CreationDate) AS \"Months Taken to Accept\" FROM Posts JOIN Votes ON Posts.Id = Votes.PostId WHERE Votes.VoteTypeId = 1 AND DATEDIFF(Votes.CreationDate, Posts.CreationDate) > 365 ORDER BY DATEDIFF(Votes.CreationDate, Posts.CreationDate) DESC","CreationDate":"2017-07-14 11:33:30","validated":false,"QueryBody_Original":"SELECT  Posts.Id AS [Post Link],\nDATEDIFF(month, Posts.CreationDate, Votes.CreationDate) AS [Months Taken to Accept]\nFROM Posts\nJOIN Votes ON Posts.Id = Votes.PostId\nWHERE Votes.VoteTypeId = 1\nAND DATEDIFF(day, Posts.CreationDate, Votes.CreationDate) > 365\nORDER BY DATEDIFF(day, Posts.CreationDate, Votes.CreationDate) DESC"},{"QuerySetId":695584,"Title":"Top 50 Users from Hyderabad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%hyderabad%' OR UPPER(Location) LIKE '%HYDERABAD' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2017-07-14 13:56:23","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%hyderabad%'\n    OR UPPER(Location) LIKE '%HYDERABAD'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":695628,"Title":"posts probably affected by \\\\","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.OwnerUserId AS \"User Link\", p.CreationDate FROM Posts AS p, PostHistory AS ph WHERE ph.PostId = p.Id \/* getting history for the right post *\/ AND ph.PostHistoryTypeId = 2 \/* initial body *\/ AND YEAR(p.CreationDate) < 2014 AND (REPLACE(REPLACE(REPLACE(REPLACE(ph.text, '\\\\', 'Y'), 'X', 'Y'), CHAR(9), 'XXXX'), ' ', 'X') LIKE '%\\XXXX%') ORDER BY p.CreationDate DESC","CreationDate":"2017-07-18 15:19:42","validated":false,"QueryBody_Original":"SELECT  \n      p.Id AS [Post Link], \n      p.OwnerUserId as [User Link],\n      p.CreationDate\nFrom Posts p, PostHistory ph\nWhere \n       ph.PostId = p.Id                 -- getting history for the right post\n      and ph.PostHistoryTypeId = 2 -- initial body\n     \n      and year(p.CreationDate) < 2014 \n      and   (replace(replace(replace(replace(ph.text,'\\\\','Y'),'X','Y'), char(9),'XXXX'),' ','X')  like '%\\XXXX%') \nOrder By p.CreationDate Desc"},{"QuerySetId":695958,"Title":"find duplicates that have their targets as duplicates","Description":null,"QueryBody":"SELECT MONTH(CURRENT_TIMESTAMP())","CreationDate":"2017-07-15 00:22:44","validated":false,"QueryBody_Original":"SELECT   MONTH(getdate())"},{"QuerySetId":695981,"Title":"List of all users in SOF who are Kuwaitis","Description":null,"QueryBody":"SELECT * FROM Users WHERE LOWER(location) LIKE '%kuwait%'","CreationDate":"2017-07-15 03:55:30","validated":false,"QueryBody_Original":"SELECT  * from Users where lower(location) like '%kuwait%'"},{"QuerySetId":696468,"Title":"Find popular stackoverflow question with java tag with code segment ","Description":null,"QueryBody":"SELECT p1.id FROM posts AS p1 JOIN posts AS p2 ON p1.id = p2.parentid WHERE p1.posttypeid = 1 AND p1.score > 10 AND p1.body LIKE '%<code>%' AND p1.tags LIKE '%<java>%' AND p2.posttypeid = 2 AND p2.score > 10 AND p2.body LIKE '%<code>%'","CreationDate":"2017-07-16 18:23:10","validated":false,"QueryBody_Original":"SELECT  p1.id from posts as p1\njoin posts as p2\non p1.id = p2.parentid \nwhere p1.posttypeid = 1 and p1.score > 10 and p1.body like '%<code>%' \nand p1.tags like '%<java>%'\nand p2.posttypeid = 2 and p2.score > 10 and p2.body like '%<code>%'"},{"QuerySetId":696615,"Title":"Top 30 Stack Overflow Armenian users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE LOWER(Location) LIKE LOWER('%Armenia%') ORDER BY Reputation DESC LIMIT 30","CreationDate":"2017-07-17 12:55:00","validated":false,"QueryBody_Original":"SELECT  TOP 30\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%Armenia%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":696821,"Title":"all questions with tag like 'marvel%'","Description":null,"QueryBody":"SELECT p.body FROM Posts AS p WHERE p.tags LIKE '%marvel%'","CreationDate":"2017-07-17 23:19:41","validated":false,"QueryBody_Original":"SELECT  p.body FROM Posts p\nWHERE p.tags LIKE '%marvel%'"},{"QuerySetId":698418,"Title":"Top SO users From Tanur","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%mumbai%' OR UPPER(Location) LIKE '%mumbai%' OR Location LIKE '%mumbai%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-02-01 03:58:16","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%mumbai%'\n    OR UPPER(Location) LIKE '%mumbai%'\n    or Location like '%mumbai%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":698666,"Title":"Compare MS Access to modern languages","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags WHERE TagName = 'ms-access' OR TagName = '.net' OR TagName = 'javascript' OR TagName = 'node.js' ORDER BY Count DESC","CreationDate":"2017-07-19 23:25:52","validated":false,"QueryBody_Original":"SELECT  TagName, Count from Tags\nwhere TagName = 'ms-access' or\nTagName = '.net' or\nTagName = 'javascript' or\nTagName = 'node.js'\norder by Count desc"},{"QuerySetId":698759,"Title":"Fallacy questions vs. all questions","Description":null,"QueryBody":"SELECT MIN(CreationDate) AS \"date\", COUNT(*) AS \"all_posts\", (SELECT COUNT(*) FROM Posts WHERE YEAR(CreationDate) = YEAR(allPosts.CreationDate) AND MONTH(CreationDate) \/ 3 = MONTH(allPosts.CreationDate) \/ 3 AND (Tags LIKE '%fallacies%' OR Title LIKE '%fallac%')) * 20 AS \"fallacy_posts (* 20)\" FROM Posts AS allPosts WHERE NOT Tags IS NULL GROUP BY YEAR(CreationDate), MONTH(CreationDate) \/ 3 ORDER BY YEAR(CreationDate), MONTH(CreationDate) \/ 3","CreationDate":"2017-07-20 12:09:31","validated":false,"QueryBody_Original":"SELECT \n  min(CreationDate) as 'date',\n  count(*) as 'all_posts',\n  (SELECT count(*)\n    from Posts \n    where\n      year(CreationDate) = year(allPosts.CreationDate) and\n      month(CreationDate) \/ 3 = month(allPosts.CreationDate) \/ 3 and\n      (Tags like '%fallacies%' or Title like '%fallac%')\n  ) * 20 as 'fallacy_posts (* 20)'\nfrom\n  Posts allPosts\nwhere\n  Tags is not null\ngroup by\n  year(CreationDate),\n  month(CreationDate) \/ 3\norder by\n  year(CreationDate) asc,\n  month(CreationDate) \/ 3 asc"},{"QuerySetId":698977,"Title":"Top 10k Users by Reputation per Post","Description":null,"QueryBody":"SELECT (u.Reputation \/ COUNT(p.OwnerUserId)) AS \"Rep Per Post\", u.DisplayName, COUNT(p.OwnerUserId) AS \"Posts\", u.Reputation FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE u.Reputation >= 10000 GROUP BY u.Reputation, u.DisplayName ORDER BY (u.Reputation \/ COUNT(p.OwnerUserId)) DESC","CreationDate":"2017-07-20 20:21:00","validated":false,"QueryBody_Original":"SELECT  (u.Reputation \/ COUNT(p.OwnerUserId)) AS 'Rep Per Post', u.DisplayName, COUNT(p.OwnerUserId) AS 'Posts', u.Reputation\nFROM Users u \nINNER JOIN Posts p ON u.Id = p.OwnerUserId\nWHERE u.Reputation >= 10000\nGROUP BY u.Reputation, u.DisplayName\nORDER BY  (u.Reputation \/ COUNT(p.OwnerUserId)) DESC"},{"QuerySetId":698979,"Title":"Top 5k Users by Reputation per Post","Description":null,"QueryBody":"SELECT (u.Reputation \/ COUNT(p.OwnerUserId)) AS \"Rep Per Post\", u.DisplayName, COUNT(p.OwnerUserId) AS \"Posts\", u.Reputation FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE u.Reputation >= 5000 GROUP BY u.Reputation, u.DisplayName ORDER BY (u.Reputation \/ COUNT(p.OwnerUserId)) DESC","CreationDate":"2017-07-20 23:24:28","validated":false,"QueryBody_Original":"SELECT  (u.Reputation \/ COUNT(p.OwnerUserId)) AS 'Rep Per Post', u.DisplayName, COUNT(p.OwnerUserId) AS 'Posts', u.Reputation\nFROM Users u \nINNER JOIN Posts p ON u.Id = p.OwnerUserId\nWHERE u.Reputation >= 5000\nGROUP BY u.Reputation, u.DisplayName\nORDER BY  (u.Reputation \/ COUNT(p.OwnerUserId)) DESC"},{"QuerySetId":699768,"Title":"Edits that removed the mathematical-physics tag","Description":null,"QueryBody":"SELECT edits.PostId AS \"Post Link\", edits.CreationDate, edits.Text AS \"Edited tags\", originalTags.Text AS \"Original tags\" FROM PostHistory AS edits JOIN PostHistory AS originalTags ON originalTags.PostId = edits.PostId WHERE edits.PostHistoryTypeId = 6 \/* edited tags *\/ AND originalTags.PostHistoryTypeId = 3 \/* original tags *\/ AND originalTags.Text LIKE '%mathematical-physics%' AND NOT edits.Text LIKE '%mathematical-physics%' ORDER BY edits.CreationDate DESC","CreationDate":"2017-07-22 02:07:28","validated":false,"QueryBody_Original":"SELECT  \n  edits.PostId AS [Post Link],\n  edits.CreationDate,\n  --edits.Comment,\n  edits.Text AS 'Edited tags',\n  originalTags.Text AS 'Original tags'\nFROM PostHistory edits\nJOIN PostHistory originalTags ON originalTags.PostId = edits.PostId\nWHERE edits.PostHistoryTypeId=6 --edited tags\n  AND originalTags.PostHistoryTypeId=3 --original tags\n  AND originalTags.Text LIKE '%mathematical-physics%'\n  AND edits.Text NOT LIKE '%mathematical-physics%'\nORDER BY edits.CreationDate DESC"},{"QuerySetId":699877,"Title":"Attempt at getting dupe\/original combinations","Description":null,"QueryBody":"SELECT RelatedPostId AS \"Original\", q.id AS \"Dupe\" FROM PostLinks JOIN Posts AS q ON q.Id = RelatedPostId WHERE LinkTypeId = 3","CreationDate":"2017-07-22 06:55:13","validated":false,"QueryBody_Original":"SELECT  \n   RelatedPostId as 'Original',\n   q.id as 'Dupe'\n   \n  from PostLinks\n   join Posts q on q.Id=RelatedPostId\n\n  where LinkTypeId=3"},{"QuerySetId":700432,"Title":"Posts whose only tag is <general-physics+>","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags, CreationDate, ClosedDate FROM Posts WHERE Tags LIKE '<general-physics+>'","CreationDate":"2017-07-23 18:07:10","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  Tags,\n  CreationDate,\n  ClosedDate\nFROM Posts\nWHERE Tags LIKE '<general-physics+>'"},{"QuerySetId":700904,"Title":"Top Users by Country and Tag","Description":null,"QueryBody":"SELECT DISTINCT u.Id AS \"User Link\", u.AccountId, u.DisplayName, u.Reputation, u.Location, u.WebsiteUrl, u.AboutMe FROM Users AS u WHERE u.AboutMe LIKE '%python%' AND u.AboutMe LIKE '%network%' AND u.WebsiteUrl > '' ORDER BY u.Reputation DESC","CreationDate":"2017-07-24 17:15:03","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  u.Id [User Link], \n  u.AccountId,\n  u.DisplayName,\n  u.Reputation, \n  u.Location,\n  u.WebsiteUrl,\n  u.AboutMe\n\nFROM Users u\n  \nWHERE \n  u.AboutMe LIKE '%python%' \n  AND u.AboutMe LIKE '%network%' \n  AND u.WebsiteUrl > '' \n  -- WHERE u.AboutMe REGEXP '[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$'\n  -- AND u.AboutMe LIKE '%@%'\n  -- AND u.AboutMe LIKE '%email%'\n  -- AND u.AboutMe LIKE '%.com%'\n  \nORDER BY \n  u.Reputation DESC;"},{"QuerySetId":701951,"Title":"Number of questions per tag per year","Description":null,"QueryBody":"SELECT *, YEAR(Posts.CreationDate) AS \"Year\" FROM Posts WHERE PostTypeId = 1 AND DeletionDate IS NULL LIMIT 10","CreationDate":"2017-08-04 14:47:32","validated":false,"QueryBody_Original":"SELECT  TOP 10 *,\n  YEAR(Posts.CreationDate) as [Year]\n    from Posts\n    where PostTypeId = 1 and\n    DeletionDate is null"},{"QuerySetId":702544,"Title":"Questions sorted by view count","Description":null,"QueryBody":"SELECT ViewCount, Score, Id AS \"Post Link\" FROM Posts WHERE PostTypeId = 1 ORDER BY ViewCount DESC","CreationDate":"2017-07-28 16:02:33","validated":false,"QueryBody_Original":"SELECT  ViewCount, Score, Id AS [Post Link] FROM Posts\nWHERE PostTypeId = 1\nORDER BY ViewCount DESC"},{"QuerySetId":702548,"Title":"Votes by type on questions","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COUNT(Votes.Id) AS \"Vote count\", VoteTypeId FROM Votes INNER JOIN Posts ON Posts.ID = PostId WHERE PostTypeId = 1 AND (VoteTypeId = 2 OR VoteTypeId = 3) GROUP BY PostId, VoteTypeId","CreationDate":"2017-07-28 16:07:27","validated":false,"QueryBody_Original":"SELECT  PostId AS [Post Link], COUNT(Votes.Id) AS 'Vote count', VoteTypeId \nFROM Votes\nINNER JOIN Posts ON Posts.ID = PostId\nWHERE PostTypeId = 1 AND (VoteTypeId = 2 OR VoteTypeId = 3)\nGROUP BY PostId, VoteTypeId"},{"QuerySetId":702884,"Title":"Tags containing special characters (Stack Overflow)","Description":"Adapted from answer by hvd (https:\/\/stackoverflow.com\/a\/45380894\/3357935)","QueryBody":"SELECT * FROM tags WHERE tagname LIKE '%[^-+a-z0-9.]%'","CreationDate":"2017-07-31 20:45:16","validated":false,"QueryBody_Original":"SELECT  *\nFROM tags\nWHERE tagname LIKE '%[^-+a-z0-9.]%'"},{"QuerySetId":703092,"Title":" Top SO users From Tanur","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ahmedabad%' OR UPPER(Location) LIKE '%AHMEDABAD%' OR Location LIKE '%ahmedabad%' AND Reputation >= 500 ORDER BY Reputation DESC","CreationDate":"2017-07-29 13:21:52","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ahmedabad%'\n    OR UPPER(Location) LIKE '%AHMEDABAD%'\n    or Location like '%ahmedabad%'\n    AND Reputation >= 500\nORDER BY\n    Reputation DESC;"},{"QuerySetId":703178,"Title":"Total number of  questions 2017","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE YEAR(CreationDate) = 2017","CreationDate":"2018-02-28 16:49:25","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts \nwhere year(CreationDate)=2017"},{"QuerySetId":703210,"Title":"SELECT TOP 20 * FROM Users","Description":null,"QueryBody":"SELECT Title, ViewCount, 1.197 * ViewCount, ROUND(1.197 * ViewCount, 0), FLOOR(1.197 * ViewCount), CEIL(1.197 * ViewCount) FROM Posts LIMIT 20","CreationDate":"2017-07-31 14:23:54","validated":false,"QueryBody_Original":"SELECT  TOP 20 Title, ViewCount, 1.197*ViewCount, ROUND(1.197*ViewCount,0), FLOOR(1.197*ViewCount), CEILING(1.197*ViewCount)\nFROM Posts"},{"QuerySetId":703287,"Title":"Total count based on location","Description":null,"QueryBody":"SELECT Location, COUNT(*) AS \"Count\" FROM Users GROUP BY Location ORDER BY Count DESC","CreationDate":"2017-07-30 13:38:36","validated":false,"QueryBody_Original":"SELECT   Location, COUNT(*) \"Count\"\nFROM\n    Users\n\nGROUP BY\n    Location\nORDER BY\n    Count DESC"},{"QuerySetId":703357,"Title":"view all questions by topic","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId = 1 AND Posts.CreationDate >= '2014-01-01' LIMIT 100000","CreationDate":"2017-08-01 17:17:09","validated":false,"QueryBody_Original":"SELECT  TOP (100000) *\nfrom Posts\nwhere PostTypeId = 1\nand Posts.CreationDate >= '2014-01-01'"},{"QuerySetId":703393,"Title":"Find questions with a lower-case first character in the title","Description":null,"QueryBody":"SELECT Title, CONCAT('https:\/\/electronics.stackexchange.com\/questions\/', CAST(Id AS TEXT), '\/') AS URL FROM Posts WHERE PostTypeId = 1 AND LEFT(Title, 1) = LOWER(LEFT(Title, 1)) ORDER BY CreationDate DESC","CreationDate":"2017-07-31 04:40:30","validated":false,"QueryBody_Original":"SELECT  Title,\nConcat('https:\/\/electronics.stackexchange.com\/questions\/', Cast(Id as varchar), '\/') AS URL\nFROM Posts\nWHERE PostTypeId = 1 AND Left(Title, 1) = Lower(Left(Title, 1))\nORDER BY CreationDate DESC"},{"QuerySetId":703842,"Title":"Active Users able to vote and active since first day of primary election","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users WHERE LastAccessDate > '2017-07-24 00:00:01' AND Reputation > 150","CreationDate":"2017-07-31 23:32:16","validated":false,"QueryBody_Original":"SELECT  count(Id) from Users where LastAccessDate > '2017-07-24 00:00:01' and Reputation > 150"},{"QuerySetId":704508,"Title":"Users of Tags per country","Description":null,"QueryBody":"SELECT (CASE WHEN Users.Location LIKE ('%Singapore%') THEN 'Singapore' WHEN Users.Location LIKE ('%Indonesia%') THEN 'Indonesia' WHEN Users.Location LIKE ('%Korea%') THEN 'Korea' WHEN Users.Location LIKE ('%Japan%') THEN 'Japan' END) AS UserLocation, COUNT(DISTINCT (Users.DisplayName)) FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id AND Posts.Tags LIKE LOWER('%ios%') WHERE LOWER(Users.Location) LIKE (LOWER('%Singapore%')) OR LOWER(Users.Location) LIKE (LOWER('%Indonesia%')) GROUP BY Users.Location","CreationDate":"2017-08-05 04:59:15","validated":false,"QueryBody_Original":"SELECT  (CASE\n  WHEN Users.Location LIKE ('%Singapore%') THEN 'Singapore'\n  WHEN Users.Location LIKE ('%Indonesia%') THEN 'Indonesia'\n  WHEN Users.Location LIKE ('%Korea%') THEN 'Korea'\n  WHEN Users.Location LIKE ('%Japan%') THEN 'Japan'\n        END) AS UserLocation,\n        Count(DISTINCT(Users.DisplayName))\n        \nFROM Posts\nJOIN Users ON Posts.OwnerUserId=Users.Id\nAND Posts.Tags LIKE LOWER('%ios%')\n\nWHERE LOWER(Users.Location) LIKE (LOWER('%Singapore%'))\nOR LOWER(Users.Location) LIKE (LOWER('%Indonesia%'))\n\nGROUP BY Users.Location"},{"QuerySetId":704527,"Title":"Voting makeup in regards to IDs","Description":null,"QueryBody":"SELECT YEAR(p.creationdate) AS Yr, MONTH(p.creationdate) AS Mnth, COUNT(DISTINCT p.id) AS QuestionCount, COUNT(DISTINCT CASE WHEN p.tags LIKE '%identify%' THEN p.id ELSE NULL END) AS QuestionCountID, COUNT(v.id) AS VoteCount, SUM(CASE WHEN p.tags LIKE '%identify%' AND NOT v.id IS NULL THEN 1 ELSE 0 END) AS VoteCountID FROM posts AS p LEFT OUTER JOIN votes AS v ON v.postid = p.id AND v.votetypeid IN (4, 6, 7, 10, 11, 12, 15, 16) WHERE p.posttypeid = 1 GROUP BY YEAR(p.creationdate), MONTH(p.creationdate)","CreationDate":"2017-08-02 01:43:01","validated":false,"QueryBody_Original":"SELECT  \n    year(p.creationdate) as Yr,\n    month(p.creationdate) as Mnth,\n    count(distinct p.id) as QuestionCount,\n    count(distinct case when p.tags like '%identify%' then p.id else null end) as QuestionCountID,\n    count(v.id) as VoteCount,\n    sum(case when p.tags like '%identify%' and v.id is not null then 1 else 0 end) as VoteCountID\nfrom posts p\n  left outer join votes v\n    on v.postid = p.id\n        and v.votetypeid in\n        (\n            4, 6, 7, 10, 11, 12, 15, 16\n        )\nwhere p.posttypeid = 1\ngroup by year(p.creationdate),\n    month(p.creationdate)"},{"QuerySetId":704536,"Title":"Users with CSS gold badge","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY u.DisplayName), b.UserId, u.DisplayName AS Name FROM Users AS u, Badges AS b, Badges AS html, Badges AS js WHERE b.name = 'css' AND b.class = 1 AND html.name = 'html' AND html.class = 1 AND js.name = 'javascript' AND js.class = 1 AND u.Id = b.UserId AND u.Id = html.UserId AND u.Id = js.UserId GROUP BY b.Date, b.UserId, u.DisplayName","CreationDate":"2017-08-02 01:46:54","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY u.DisplayName ASC), b.UserId, u.DisplayName Name\nFROM Users u, Badges b, Badges html, Badges js\nWHERE b.name='css' and b.class=1\nand html.name='html' and html.class=1\nand js.name='javascript' and js.class=1\nand u.Id=b.UserId\nand u.Id=html.UserId\nand u.Id=js.UserId\nGROUP BY b.Date, b.UserId, u.DisplayName"},{"QuerySetId":704564,"Title":"Users with all three web technology gold badges (CSS, JS and HTML)","Description":null,"QueryBody":"SELECT * FROM Badges","CreationDate":"2017-08-03 01:40:54","validated":false,"QueryBody_Original":"SELECT  * from Badges;"},{"QuerySetId":704816,"Title":"questions tagged with rsa rsa-archer or rsa-archer-grc","Description":null,"QueryBody":"SELECT Id, Title, Body, AcceptedAnswerId, Score, ViewCount, Tags, AnswerCount, FavoriteCount, ClosedDate FROM Posts WHERE Tags LIKE '%rsa%' OR Tags LIKE '%rsa-archer%' OR Tags LIKE '%rsa-archer-grc%' OR Tags LIKE '%archer%'","CreationDate":"2017-08-02 09:52:51","validated":false,"QueryBody_Original":"SELECT  Id\n  ,Title\n  ,Body\n  ,AcceptedAnswerId\n  ,Score\n  ,ViewCount\n  ,Tags\n  ,AnswerCount\n  ,FavoriteCount\n  ,ClosedDate \nfrom Posts \nwhere Tags like '%rsa%' \n  or Tags like '%rsa-archer%' \n  or Tags like '%rsa-archer-grc%' \n  or Tags like '%archer%';"},{"QuerySetId":707156,"Title":"Ten users with most gold badges","Description":null,"QueryBody":"SELECT * FROM posts WHERE posttypeId = 2 LIMIT 10","CreationDate":"2020-05-17 00:59:05","validated":false,"QueryBody_Original":"SELECT  top (10) * from posts where posttypeId=2"},{"QuerySetId":707296,"Title":"Questions with 10 points or more and 7 answers or less","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE Score > 10 AND AnswerCount < 7","CreationDate":"2017-08-06 01:59:17","validated":false,"QueryBody_Original":"SELECT  Id from Posts where Score>10and AnswerCount<7"},{"QuerySetId":707395,"Title":"Questions with title length greater than 150","Description":null,"QueryBody":"SELECT id AS \"Post Link\", * FROM posts WHERE LENGTH(title) > 150","CreationDate":"2017-08-06 21:35:10","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], * from posts where len(title)>150"},{"QuerySetId":707436,"Title":"Finding posts (possibly) with code block formatting","Description":"Looks for questions or answers with more than one line with the leading four spaces indicating code block formatting. Some false positives, e.g. here: https:\/\/chemistry.stackexchange.com\/questions\/31358\/born-oppenheimer-adiabaticity\/31367#31367","QueryBody":"SELECT p.Id AS \"Post Link\", 'https:\/\/chemistry.stackexchange.com\/q\/' + CAST(p.Id AS TEXT(10)) AS \"Link\" FROM Posts AS p WHERE STR_POSITION(p.Body, CHAR(10) + '    ') > 0 AND STR_POSITION(p.Body, CHAR(10) + '    ', STR_POSITION(p.Body, CHAR(10) + '    ') + 1) > 0 AND (p.PostTypeId = 1 OR p.PostTypeId = 2) ORDER BY p.Id","CreationDate":"2017-08-06 16:33:47","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], 'https:\/\/chemistry.stackexchange.com\/q\/' + CAST(p.Id AS nvarchar(10)) AS 'Link'\n\n\nFROM Posts p\n\nWHERE CHARINDEX(CHAR(10) + '    ', p.Body) > 0\n    AND CHARINDEX(CHAR(10) + '    ', p.Body, CHARINDEX(CHAR(10) + '    ', p.Body) + 1) > 0\n    AND (p.PostTypeId = 1 OR p.PostTypeId = 2)\n\nORDER BY p.Id ASC"},{"QuerySetId":707713,"Title":"Find users with most questions","Description":null,"QueryBody":"SELECT A.OwnerUserID, U.DisplayName, A.POSTCOUNT, U.Location, U.Reputation, U.LastAccessDate FROM (SELECT OwnerUserID, OwnerDisplayName, COUNT(*) AS POSTCOUNT FROM Posts AS p WHERE POSTTYPEID = 1 GROUP BY OwnerUserID, OwnerDisplayName) AS A INNER JOIN Users AS U ON U.Id = A.OwnerUserID ORDER BY POSTCOUNT DESC LIMIT 260","CreationDate":"2017-08-07 22:46:16","validated":false,"QueryBody_Original":"SELECT  TOP 260  A.OwnerUserID,U.DisplayName, A.POSTCOUNT,  U.Location,U.Reputation, U.LastAccessDate\nFROM \n(  \n  SELECT OwnerUserID,OwnerDisplayName, COUNT(*) as POSTCOUNT\n  FROM Posts p\n  WHERE POSTTYPEID = 1 \n  GROUP BY OwnerUserID, OwnerDisplayName\n)A\nINNER JOIN Users U\n  ON U.Id = A.OwnerUserID\nORDER BY POSTCOUNT DESC"},{"QuerySetId":707905,"Title":"Questions without accept (answered by me)","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", a.CreationDate FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE a.OwnerUserId = 1531124 AND q.AcceptedAnswerId IS NULL","CreationDate":"2017-08-09 23:09:43","validated":false,"QueryBody_Original":"SELECT  q.Id AS [Post Link], a.CreationDate\n  FROM Posts AS q\n  INNER JOIN Posts AS a ON a.ParentId = q.Id\n  WHERE a.OwnerUserId = 1531124    \n    AND q.AcceptedAnswerId IS NULL"},{"QuerySetId":707980,"Title":" Top Developers on @StackOverflow from Moroccan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, CreationDate, LastAccessDate, Views FROM Users WHERE LOWER(Location) LIKE '%morocco%' AND LOWER(Location) LIKE '%maroc%' ORDER BY Reputation DESC","CreationDate":"2017-11-12 03:38:14","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    CreationDate,\n    LastAccessDate,\n    Views\nFROM\n    Users\nWHERE\n    LOWER(Location) like '%morocco%'\nAND\n    LOWER(Location) like '%maroc%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":708035,"Title":"Total and average number of votes per question and answer","Description":null,"QueryBody":"SELECT CASE p.PostTypeId WHEN 1 THEN 'Questions' ELSE 'Answers' END, CASE v.VoteTypeId WHEN 2 THEN 'Up' ELSE 'Down' END, COUNT(*) FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id WHERE v.VoteTypeId IN (2, 3) GROUP BY p.PostTypeId, v.VoteTypeId","CreationDate":"2017-08-08 16:57:33","validated":false,"QueryBody_Original":"SELECT  CASE p.PostTypeId WHEN 1 THEN 'Questions' ELSE 'Answers' END,\n       CASE v.VoteTypeId WHEN 2 THEN 'Up' ELSE 'Down' END,\n  COUNT(*)\n  FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id\n  WHERE v.VoteTypeId IN (2, 3)\n  GROUP BY p.PostTypeId, v.VoteTypeId"},{"QuerySetId":708180,"Title":"Questions I have answered without accept (and links)","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", 'https:\/\/stackoverflow.com\/questions\/' + CAST(q.Id AS TEXT) AS \"Link\", a.CreationDate FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE a.OwnerUserId = 1531124 AND q.AcceptedAnswerId IS NULL","CreationDate":"2017-08-09 10:40:54","validated":false,"QueryBody_Original":"SELECT  q.Id AS [Post Link],\n  'https:\/\/stackoverflow.com\/questions\/' + CAST(q.Id AS VARCHAR) AS 'Link',\n  a.CreationDate\n  FROM Posts AS q\n  INNER JOIN Posts AS a ON a.ParentId = q.Id\n  WHERE a.OwnerUserId = 1531124\n    AND q.AcceptedAnswerId IS NULL"},{"QuerySetId":708188,"Title":"Data Dump Accepted Answer with wrong ParentId","Description":"https:\/\/meta.stackexchange.com\/questions\/141101\/data-dump-accepted-answer-with-wrong-parentid","QueryBody":"SELECT q.id AS \"Post Link\", q.creationdate, a.id AS \"Post Link\", a.creationdate FROM posts AS q INNER JOIN posts AS a ON a.id = q.acceptedanswerid WHERE q.id <> a.parentid","CreationDate":"2017-08-08 22:24:34","validated":false,"QueryBody_Original":"SELECT  q.id as [Post Link]\n     , q.creationdate\n     , a.id as [Post Link]\n     , a.creationdate\nfrom posts q\ninner join posts a on a.id = q.acceptedanswerid\nwhere q.id <> a.parentid"},{"QuerySetId":708344,"Title":"Top 1000 users of india and pakistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LOWER(Location) AS CNTRY FROM Users WHERE LOWER(Location) IN ('india', 'pakistan') ORDER BY Reputation DESC LIMIT 10000","CreationDate":"2017-08-09 14:06:52","validated":false,"QueryBody_Original":"SELECT   TOP 10000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LOWER(Location) CNTRY\nFROM\n    Users\nWHERE\n    LOWER(Location) IN ('india', 'pakistan')\nORDER BY\n    Reputation DESC"},{"QuerySetId":708358,"Title":"Top 100 stackoverflow users in Tunisia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%tunisia%' OR LOWER(Location) LIKE '%tunisie%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2017-08-09 14:44:06","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%tunisia%' OR LOWER(Location) LIKE '%tunisie%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":708475,"Title":"Tags that might benefit from increased tag length","Description":null,"QueryBody":"SELECT TagName FROM Tags WHERE LENGTH(TagName) >= 16 AND LENGTH(TagName) <= 25 ORDER BY LENGTH(TagName) DESC","CreationDate":"2017-08-09 21:01:20","validated":false,"QueryBody_Original":"SELECT  TagName FROM Tags\nWHERE LEN(TagName) >= 16\nAND LEN(TagName) <= 25\nORDER BY LEN(TagName) DESC"},{"QuerySetId":708505,"Title":"First users of the site","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users ORDER BY Id LIMIT 100","CreationDate":"2017-08-09 22:54:23","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [User Link], * FROM Users ORDER BY Id"},{"QuerySetId":708552,"Title":"Python gold badgers ordered by rep","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY u.Reputation DESC), b.UserId AS \"User Link\", b.Date AS \"Gold Python badge awarded\", u.Reputation AS \"Current user rep\" FROM Users AS u, Badges AS b WHERE b.name = 'python' AND b.class = 1 AND u.Id = b.UserId GROUP BY b.Date, b.UserId, u.Reputation","CreationDate":"2020-05-22 00:08:28","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY u.Reputation DESC), b.UserId AS [User Link], b.Date as \"Gold Python badge awarded\", u.Reputation \"Current user rep\"\nFROM Users u, Badges b\nWHERE b.name='python' and b.class=1 and u.Id=b.UserId\nGROUP BY b.Date, b.UserId, u.Reputation"},{"QuerySetId":708804,"Title":"Script to identify upvote bursts in short times","Description":null,"QueryBody":"SELECT vdt.User_ID AS \"User Link\", u.Reputation AS \"User Reputation\", vdt.Upvote_Count AS \"Upvote Count\", vdt.Upvoting_Occured AS \"Date of Votes\" FROM (SELECT u.Id AS User_Id, COUNT(v.Id) AS Upvote_Count, MAX(v.CreationDate) AS Upvoting_Occured FROM Votes AS v INNER JOIN Users AS u ON v.UserId = u.Id GROUP BY u.Id, v.CreationDate) AS vdt INNER JOIN Users AS u ON vdt.User_Id = u.Id WHERE (vdt.Upvote_Count >= 20) AND (u.Reputation < 2000) ORDER BY vdt.Upvoting_Occured DESC","CreationDate":"2017-08-10 16:18:10","validated":false,"QueryBody_Original":"SELECT  \nvdt.User_ID AS [User Link],\nu.Reputation AS [User Reputation],\nvdt.Upvote_Count AS [Upvote Count], \nvdt.Upvoting_Occured AS [Date of Votes]\n\nFROM\n\n(\nSELECT \nu.Id AS User_Id, \nCOUNT(v.Id) AS Upvote_Count,\nMAX(v.CreationDate) AS Upvoting_Occured\n\nFROM Votes AS v\nINNER JOIN Users AS u ON v.UserId = u.Id\n\nGROUP BY \nu.Id,\nv.CreationDate\n\n) AS vdt\n\nINNER JOIN Users AS u ON vdt.User_Id = u.Id\n\n\nWHERE ( vdt.Upvote_Count >= 20 ) AND ( u.Reputation < 2000 )\n\nORDER BY vdt.Upvoting_Occured DESC"},{"QuerySetId":708836,"Title":"Script to identify Unsual vote activity","Description":null,"QueryBody":"SELECT vdt.User_ID AS \"User Link\", u.Reputation AS \"User Reputation\", vdt.Upvote_Count AS \"Upvote Count\", vdt.Upvoting_Occured AS \"Date of Votes\", vdt.Post_Count AS \"Number of Posts\" FROM (SELECT u.Id AS User_Id, COUNT(v.Id) AS Upvote_Count, MAX(v.CreationDate) AS Upvoting_Occured, COUNT(DISTINCT p.Id) AS Post_Count FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE v.VoteTypeId = 2 GROUP BY u.Id, v.CreationDate) AS vdt INNER JOIN Users AS u ON vdt.User_Id = u.Id WHERE (vdt.Upvote_Count >= 20) AND (u.Reputation < 2000) AND (vdt.Post_Count >= 10) AND (u.Reputation <> 1) ORDER BY vdt.Upvoting_Occured DESC","CreationDate":"2017-08-10 16:51:52","validated":false,"QueryBody_Original":"SELECT  \nvdt.User_ID AS [User Link],\nu.Reputation AS [User Reputation],\nvdt.Upvote_Count AS [Upvote Count], \nvdt.Upvoting_Occured AS [Date of Votes],\nvdt.Post_Count AS [Number of Posts]\n\nFROM\n\n(\nSELECT \nu.Id AS User_Id, \nCOUNT(v.Id) AS Upvote_Count,\nMAX(v.CreationDate) AS Upvoting_Occured,\nCOUNT(DISTINCT p.Id) AS Post_Count\n\nFROM Votes AS v\nINNER JOIN Posts AS p ON v.PostId = p.Id\nINNER JOIN Users AS u ON p.OwnerUserId = u.Id\n\nWHERE v.VoteTypeId = 2\n\nGROUP BY \nu.Id,\nv.CreationDate\n\n) AS vdt\n\nINNER JOIN Users AS u ON vdt.User_Id = u.Id\n\n\nWHERE \n( vdt.Upvote_Count >= 20 ) \nAND ( u.Reputation < 2000 ) \nAND ( vdt.Post_Count >= 10 )\nAND ( u.Reputation != 1 )\n\nORDER BY vdt.Upvoting_Occured DESC"},{"QuerySetId":709395,"Title":"Number of formerly active users","Description":"with reputation > 500 and last active more than one year ago","QueryBody":"SELECT Displayname, Reputation FROM Users WHERE Reputation > 500 AND DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) > 365 ORDER BY Reputation DESC","CreationDate":"2017-08-11 17:34:43","validated":false,"QueryBody_Original":"SELECT  \n  Displayname, Reputation\n  FROM Users\n  WHERE \n    Reputation > 500 AND\n    DATEDIFF(day,LastAccessDate, GETDATE()) > 365\n  ORDER BY Reputation DESC"},{"QuerySetId":709834,"Title":"Get user ages count in Brazil","Description":null,"QueryBody":"SELECT age, COUNT(*) FROM Users WHERE Location LIKE 'Brazil' GROUP BY age ORDER BY 1","CreationDate":"2017-08-13 15:08:15","validated":false,"QueryBody_Original":"SELECT  age, count(*) \nfrom Users \nwhere Location like 'Brazil'\ngroup by age\norder by 1"},{"QuerySetId":709933,"Title":"Top 100 questions that are inactive for last six months","Description":"Top 100 questions that are inactive for last six months and still unanswered.\r\nThis query helpful to achieve 'Archaeologist' badge in stack overflow.","QueryBody":"SELECT * FROM Posts WHERE LastActivityDate < (CURRENT_TIMESTAMP() - 180) AND AcceptedAnswerId IS NULL AND Tags LIKE '%<java>%' ORDER BY LastActivityDate DESC LIMIT 100","CreationDate":"2017-08-16 07:37:02","validated":false,"QueryBody_Original":"SELECT  TOP 100 * \nFROM Posts \nWHERE LastActivityDate < (GETDATE() - 180) \n      AND AcceptedAnswerId IS NULL\n      AND Tags LIKE '%<java>%'\nORDER BY LastActivityDate DESC"},{"QuerySetId":710029,"Title":"Top users asking by city","Description":null,"QueryBody":"SELECT users.DisplayName, COUNT(posts.id) FROM users JOIN posts ON posts.OwnerUserId = users.id WHERE posts.PostTypeId = 1 AND LOWER(users.location) LIKE '%juiz de fora%' GROUP BY users.DisplayName ORDER BY 2 DESC","CreationDate":"2017-08-15 02:15:00","validated":false,"QueryBody_Original":"SELECT  users.DisplayName, count(posts.id)\n\nfrom users\njoin posts on posts.OwnerUserId  = users.id\nwhere posts.PostTypeId =1 and lower(users.location) like '%juiz de fora%'\ngroup by users.DisplayName\norder by 2 desc"},{"QuerySetId":710493,"Title":"Top users by City (Juiz de Fora)","Description":null,"QueryBody":"SELECT Id, Reputation, DisplayName, Location FROM Users WHERE UPPER(Location) LIKE '%BARDUFOSS, NORGE%' ORDER BY Reputation DESC","CreationDate":"2017-09-28 12:48:43","validated":false,"QueryBody_Original":"SELECT  Id, Reputation, DisplayName, Location\nfrom Users\nwhere upper(Location) like '%BARDUFOSS, NORGE%'\norder by Reputation desc"},{"QuerySetId":710538,"Title":"All questions tagged HTML and CSS (and nothing else)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags, CreationDate FROM Posts WHERE PostTypeId = 1 AND Tags = '<css><html>' ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2017-08-15 10:21:02","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], Tags, CreationDate\n  FROM Posts\n  WHERE PostTypeId = 1\n    AND Tags = '<css><html>'\n  ORDER BY CreationDate DESC"},{"QuerySetId":710546,"Title":"All questions tagged CSS and HTML (in this order; and nothing else)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags, CreationDate FROM Posts WHERE PostTypeId = 1 AND Tags = '<css><html>' ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2017-08-15 10:22:25","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], Tags, CreationDate\n  FROM Posts\n  WHERE PostTypeId = 1\n    AND Tags = '<css><html>'\n  ORDER BY CreationDate DESC"},{"QuerySetId":710565,"Title":"Top 50 Users with the Most Communiy Wiki Answers","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation, COUNT(a.Score) AS TotalCount, SUM(a.Score) AS TotalScore FROM Users AS u INNER JOIN Posts AS a ON a.OwnerUserId = u.Id WHERE a.PostTypeId = 2 \/* answers *\/ AND a.CommunityOwnedDate >= '20110101' GROUP BY u.Id, u.Reputation ORDER BY TotalCount DESC LIMIT 50","CreationDate":"2017-08-15 11:13:01","validated":false,"QueryBody_Original":"SELECT  TOP 50\n\tu.Id AS [User Link],\n    u.Reputation,\n    COUNT(a.Score) As TotalCount,\n\tSUM(a.Score) AS TotalScore\nFROM Users u\nINNER JOIN Posts a ON a.OwnerUserId = u.Id\nWHERE a.PostTypeId = 2 -- answers\n  AND a.CommunityOwnedDate  >= '20110101'\nGROUP BY u.Id,u.Reputation\nORDER BY TotalCount DESC"},{"QuerySetId":710737,"Title":"Top question of the site","Description":null,"QueryBody":"SELECT Id, Title, Score, OwnerDisplayName, OwnerUserId FROM Posts WHERE PostTypeId = 1 ORDER BY Score DESC","CreationDate":"2017-08-16 00:17:49","validated":false,"QueryBody_Original":"SELECT  Id, Title, Score, OwnerDisplayName, OwnerUserId FROM Posts WHERE PostTypeId = 1 ORDER BY Score DESC"},{"QuerySetId":710789,"Title":"Top 100 java questions that are inactive for last six months","Description":"Top 100 java questions that are inactive for last six months and still unanswered.\r\nThis query helpful to achieve 'Archaeologist' badge in stack overflow.","QueryBody":"SELECT * FROM Posts WHERE LastActivityDate < (CURRENT_TIMESTAMP() - 180) AND AcceptedAnswerId IS NULL AND Tags LIKE '%<python>%' AND ClosedDate IS NULL AND AnswerCount = 0 ORDER BY LastActivityDate DESC LIMIT 1000","CreationDate":"2017-08-16 18:32:29","validated":false,"QueryBody_Original":"SELECT  TOP 1000 * \nFROM Posts \nWHERE LastActivityDate < (GETDATE() - 180) \n      AND AcceptedAnswerId IS NULL\n      AND Tags LIKE '%<python>%'\n      AND ClosedDate IS NULL\n      AND AnswerCount = 0\nORDER BY LastActivityDate DESC"},{"QuerySetId":711245,"Title":"TOP 100 Mejor promedio en respuestas","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY (SUM(P.Score) * 1.0) \/ COUNT(P.Id) DESC) AS \"Ranking\", U.Id AS \"User Link\", SUM(P.Score) AS \"Puntaje total en respuestas\", COUNT(P.Id) AS \"N\u00famero de respuestas\", ROUND((SUM(P.Score) * 1.0) \/ COUNT(P.Id), 4) AS \"Promedio\" FROM Posts AS P INNER JOIN Users AS U ON P.OwnerUserId = U.Id WHERE PostTypeId = 2 GROUP BY U.Id HAVING COUNT(P.Id) >= 10 ORDER BY \"Promedio\" DESC LIMIT 100","CreationDate":"2017-08-17 03:51:46","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  ROW_NUMBER() OVER(ORDER BY (SUM(P.Score) * 1.0) \/ COUNT(P.Id) DESC) AS [Ranking],\n  U.Id As [User Link],\n  SUM(P.Score) AS [Puntaje total en respuestas],\n  COUNT(P.Id) AS [N\u00famero de respuestas],\n  ROUND((SUM(P.Score) * 1.0) \/ COUNT(P.Id), 4) AS [Promedio] \nFROM\n  Posts P\n  INNER JOIN Users U ON P.OwnerUserId = U.Id\nWHERE\n  PostTypeId = 2\nGROUP BY\n  U.Id\nHAVING\n  COUNT(P.Id) >= 10\nORDER BY\n  [Promedio] DESC"},{"QuerySetId":711417,"Title":"thanks comments on accepted answers","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\" FROM Comments WHERE (Text LIKE '%thank you%' COLLATE SQL_Latin1_General_CP1_CI_AS OR Text LIKE '%thanks%' COLLATE SQL_Latin1_General_CP1_CI_AS OR Text LIKE '%gracias%' COLLATE SQL_Latin1_General_CP1_CI_AS OR Text LIKE '%edit%' COLLATE SQL_Latin1_General_CP1_CI_AS) AND LENGTH(Text) <= 20 AND EXISTS(SELECT * FROM Votes WHERE PostId = Comments.PostId)","CreationDate":"2017-08-24 17:55:16","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Comment Link]\nFROM\n  Comments\nWHERE\n(\n  Text LIKE '%thank you%' COLLATE SQL_Latin1_General_CP1_CI_AS\n  OR\n  Text LIKE '%thanks%' COLLATE SQL_Latin1_General_CP1_CI_AS\n  OR\n  Text LIKE '%gracias%' COLLATE SQL_Latin1_General_CP1_CI_AS\n  OR\n  Text LIKE '%edit%' COLLATE SQL_Latin1_General_CP1_CI_AS\n)\nand\n  LEN(Text) <= 20\nand\n  EXISTS(SELECT * FROM Votes WHERE PostId = Comments.PostId)"},{"QuerySetId":711525,"Title":"Counting how many users the database has","Description":null,"QueryBody":"SELECT COUNT(*) FROM users AS countNumOfUsers","CreationDate":"2017-08-17 18:50:41","validated":false,"QueryBody_Original":"SELECT  count(*) from users as countNumOfUsers"},{"QuerySetId":711805,"Title":"Top users from Minsk, Belarus","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%minsk%' OR UPPER(Location) LIKE '%MINSK%' OR Location LIKE '%Minsk%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2017-08-18 13:30:42","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%minsk%'\n    OR UPPER(Location) LIKE '%MINSK%'\n    or Location like '%Minsk%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":711820,"Title":"SELECT Id, DisplayName, WebsiteUrl, Location, AccountId FROM Users;","Description":null,"QueryBody":"SELECT Id, DisplayName, WebsiteUrl, Location, AccountId FROM Users","CreationDate":"2017-08-18 14:17:01","validated":false,"QueryBody_Original":"SELECT  Id, DisplayName, WebsiteUrl, Location, AccountId FROM Users ;"},{"QuerySetId":712180,"Title":"Unanswered, uncommented and unclosed questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Score, ViewCount FROM Posts WHERE PostTypeId = 1 \/* questions *\/ AND AnswerCount = 0 AND CommentCount = 0 AND ClosedDate IS NULL ORDER BY ViewCount","CreationDate":"2017-08-19 12:37:46","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate, Score, ViewCount\n  FROM Posts\n  WHERE PostTypeId = 1 -- questions\n    AND AnswerCount = 0\n    AND CommentCount = 0\n    AND ClosedDate IS NULL\n  ORDER BY ViewCount"},{"QuerySetId":712760,"Title":"Get \"+1\" comments with little text excluding locked posts","Description":null,"QueryBody":"SELECT RAR.* FROM (SELECT c.Id AS \"Comment Link\", c.\"Text\" FROM Comments AS c INNER JOIN Posts AS p ON c.PostId = p.Id INNER JOIN Posts AS p1 ON p.ParentId = p1.Id WHERE (Text LIKE '%fuck%') AND LENGTH(Text) < 500 AND \"p1\".\"ClosedDate\" IS NULL ORDER BY LENGTH(Text) DESC LIMIT 3420) AS RAR ORDER BY LENGTH(Text)","CreationDate":"2019-11-07 09:11:04","validated":false,"QueryBody_Original":"SELECT  RAR.* FROM\n(\n  SELECT TOP 3420\n  c.Id as [Comment Link],\n  c.[Text]\n  FROM Comments c\n  INNER JOIN Posts p ON c.PostId = p.Id\n  INNER JOIN Posts p1 on p.ParentId = p1.Id\n  WHERE\n  (Text LIKE '%fuck%') AND\n    LEN(Text)<500 AND\n    [p1].[ClosedDate] IS NULL\n  ORDER BY LEN(Text) DESC\n) RAR\nORDER BY LEN(Text) ASC"},{"QuerySetId":712867,"Title":"Reopen stats for top dup-hammer users","Description":null,"QueryBody":"SELECT hc.UserId AS \"User Link\", hc.PostId AS \"Post Link\", hc.CreationDate FROM PostHistory AS hc LEFT JOIN PostHistory AS hr ON hr.PostId = hc.PostId AND hr.CreationDate < hc.CreationDate AND hr.PostHistoryTypeId = 10 WHERE hc.PostHistoryTypeId = 11 AND hc.UserId = 2285236 AND hc.Text LIKE '%BindingReason\":{\"GoldTagBadge%' AND hc.CreationDate > CURRENT_TIMESTAMP() - 365","CreationDate":"2017-08-21 23:28:52","validated":false,"QueryBody_Original":"SELECT  hc.UserId [User Link], hc.PostId [Post Link], hc.CreationDate\nfrom PostHistory hc\nleft join PostHistory hr on hr.PostId=hc.PostId and hr.CreationDate < hc.CreationDate and hr.PostHistoryTypeId=10\nwhere hc.PostHistoryTypeId=11\nand hc.UserId=2285236\nand hc.Text like '%BindingReason\":{\"GoldTagBadge%'\nand hc.CreationDate > getdate()-365"},{"QuerySetId":712965,"Title":"Showing posts that contain apt-cache in the body","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE BODY LIKE '%apt-cache%' ORDER BY CreationDate DESC","CreationDate":"2017-08-22 00:35:57","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate\nFROM Posts\nWHERE BODY like '%apt-cache%'\nORDER BY CreationDate DESC"},{"QuerySetId":713348,"Title":"Showing posts that contain sdnalloh","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE BODY LIKE '%sdnalloh%' ORDER BY CreationDate DESC","CreationDate":"2017-10-19 09:55:19","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate\nFROM Posts\nWHERE BODY like '%sdnalloh%'\nORDER BY CreationDate DESC"},{"QuerySetId":713689,"Title":"Questions I've answered and closed","Description":"Questions that a user has both answered and successfully voted to close.","QueryBody":"SELECT DISTINCT Answer.ParentId AS \"Post Link\" FROM Posts AS Answer JOIN Votes AS CloseVote ON CloseVote.PostId = Answer.ParentId\/* and Answer.OwnerUserId = ##UserId## *\/  WHERE Answer.PostTypeId = 2 AND CloseVote.VoteTypeId = 6 AND CloseVote.UserId = Answer.OwnerUserId","CreationDate":"2017-08-23 17:09:22","validated":false,"QueryBody_Original":"SELECT  distinct Answer.ParentId as [Post Link]\nfrom Posts as Answer\njoin Votes as CloseVote on CloseVote.PostId = Answer.ParentId \nwhere Answer.PostTypeId = 2\n  -- and Answer.OwnerUserId = ##UserId##\n  and CloseVote.VoteTypeId = 6\n  and CloseVote.UserId = Answer.OwnerUserId"},{"QuerySetId":713724,"Title":"Accepted with a positive score and at least one answer provided","Description":null,"QueryBody":"SELECT 'https:\/\/stackoverflow.com\/questions\/', p.id, p.* FROM posts AS p\/* at least 2 answers provided  *\/  WHERE acceptedanswerid IN (SELECT id FROM posts AS q WHERE q.owneruserid = 8200937 AND score > 1) AND answercount > 1 ORDER BY p.creationdate DESC","CreationDate":"2017-08-24 12:09:25","validated":false,"QueryBody_Original":"SELECT  'https:\/\/stackoverflow.com\/questions\/', p.id, p.*\nfrom posts p \nwhere acceptedanswerid in (\n  -- all my answers having a positive score\n  SELECT id  \n  from posts q \n  where q.owneruserid = 8200937\n  and score > 1)\n-- at least 2 answers provided  \nand answercount > 1\norder by p.creationdate desc"},{"QuerySetId":713782,"Title":"Query answers by PostTypeId, Score and keyword","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE PostTypeId = 2 AND Score >= 25 AND Body LIKE ('%##param##%')","CreationDate":"2017-08-23 22:21:03","validated":false,"QueryBody_Original":"SELECT  Body \nFROM Posts \nWHERE \nPostTypeId = 2 AND\nScore >= 25 AND\nBody LIKE ('%##param##%')"},{"QuerySetId":714212,"Title":"Query answers by PostTypeId, Score and Subject Areas","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId = 1 AND Score >= 25 AND tags LIKE ('%##param##%')","CreationDate":"2017-08-24 15:11:50","validated":false,"QueryBody_Original":"SELECT  * \nFROM Posts \nWHERE \nPostTypeId = 1 AND\nScore >= 25 AND\ntags LIKE ('%##param##%')"},{"QuerySetId":714258,"Title":"Top users who answered and voted to close (excluding dupes)","Description":null,"QueryBody":"SELECT Voter.Id AS \"User Link\", COUNT(DISTINCT Question.Id) AS \"Questions Closed\", SUM(Answer.Score) AS \"Total Answer Score\" FROM Users AS Voter JOIN Posts AS Answer ON Answer.OwnerUserId = Voter.Id JOIN Posts AS Question ON Question.Id = Answer.ParentId JOIN PostHistory AS CloseEvent ON CloseEvent.PostId = Question.Id\/* posthistory json hack from https:\/\/meta.stackexchange.com\/a\/234057 *\/  WHERE Answer.PostTypeId = 2 AND CloseEvent.PostHistoryTypeId = 10 AND NOT CloseEvent.Comment IN ('1', '101') \/* not a dupe *\/ AND CloseEvent.CreationDate = Question.ClosedDate AND CloseEvent.Text LIKE '%\"Id\":' + CAST(Voter.Id AS TEXT) + ',%' GROUP BY Voter.Id ORDER BY \"Questions Closed\" DESC","CreationDate":"2017-08-24 17:02:58","validated":false,"QueryBody_Original":"SELECT \n  Voter.Id as [User Link],\n  count(distinct Question.Id) as [Questions Closed],\n  sum(Answer.Score) as [Total Answer Score]\nfrom Users as Voter\njoin Posts as Answer on Answer.OwnerUserId = Voter.Id\njoin Posts as Question on Question.Id = Answer.ParentId\njoin PostHistory as CloseEvent on CloseEvent.PostId = Question.Id \nwhere Answer.PostTypeId = 2\n  and CloseEvent.PostHistoryTypeId = 10\n  and CloseEvent.Comment not in ('1', '101') -- not a dupe\n  and CloseEvent.CreationDate = Question.ClosedDate\n  -- posthistory json hack from https:\/\/meta.stackexchange.com\/a\/234057\n  and CloseEvent.Text like '%\"Id\":'+cast(Voter.Id as nvarchar)+',%'\ngroup by Voter.Id\norder by [Questions Closed] desc"},{"QuerySetId":714313,"Title":"Number of questions closed by 5 users on Raspberry Pi","Description":null,"QueryBody":"SELECT *, \"PostId\" AS \"Post Link\" FROM PostHistory WHERE PostHistoryTypeId = 10 AND CreationDate > '2017-02-15' AND Text LIKE '%{\"Id\"%{\"Id\"%{\"Id\"%{\"Id\"%{\"Id\"%'","CreationDate":"2017-08-24 19:04:59","validated":false,"QueryBody_Original":"SELECT  *, [PostId] AS [Post Link] FROM PostHistory WHERE PostHistoryTypeId = 10 AND CreationDate > '2017-02-15' AND Text LIKE '%{\"Id\"%{\"Id\"%{\"Id\"%{\"Id\"%{\"Id\"%';"},{"QuerySetId":714413,"Title":"Computer Science Educators: machine learning","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE PostTypeId = 2 AND Score >= 7 AND tags LIKE ('%##param##%')","CreationDate":"2017-08-25 01:09:14","validated":false,"QueryBody_Original":"SELECT  Body \nFROM Posts \nWHERE \nPostTypeId = 2 AND\nScore >= 7 AND\ntags LIKE ('%##param##%')"},{"QuerySetId":714480,"Title":"Random Answers By Specific Scores 0 To 10","Description":null,"QueryBody":"SELECT Question.Id, Question.Score, Question.viewCount, Question.OwnerUserId FROM POSTS AS \"Question\" WHERE Question.PostTypeId = 1 AND (Question.Id = 20047348 OR Question.Id = 10377228)","CreationDate":"2017-08-26 06:37:12","validated":false,"QueryBody_Original":"SELECT  ALL Question.Id, Question.Score, Question.viewCount, Question.OwnerUserId FROM POSTS \"Question\"\nWHERE Question.PostTypeId = 1 AND (Question.Id = 20047348 OR Question.Id = 10377228)"},{"QuerySetId":714644,"Title":"Select DispayName, Id, Location, Reputation from Users;","Description":null,"QueryBody":"SELECT DisplayName, Users.Id, Location, Reputation, Badges.Id FROM Users JOIN Badges ON Users.Id = Badges.UserId WHERE Reputation >= 550000 ORDER BY Reputation DESC","CreationDate":"2017-08-26 01:04:48","validated":false,"QueryBody_Original":"SELECT  DisplayName, Users.Id, Location, Reputation, Badges.Id\nFROM Users join Badges on  Users.Id= Badges.UserId where Reputation >= 550000\nOrder by Reputation desc;"},{"QuerySetId":714653,"Title":"Theoretical Computer Science: distributed computing","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE PostTypeId = 2 AND Score >= 7 AND Body LIKE ('%##param##%')","CreationDate":"2017-08-25 23:30:36","validated":false,"QueryBody_Original":"SELECT  Body \nFROM Posts \nWHERE \nPostTypeId = 2 AND\nScore >= 7 AND\nBody LIKE ('%##param##%')"},{"QuerySetId":714735,"Title":"Comment count by view count","Description":null,"QueryBody":"SELECT p.ViewCount \/ 1000 AS \"kViews\", SUM(p.CommentCount) \/ COUNT(*) AS \"Average comment count\" FROM Posts AS p WHERE p.CommentCount <> 0 GROUP BY p.ViewCount \/ 1000 ORDER BY p.ViewCount \/ 1000","CreationDate":"2017-08-26 01:52:31","validated":false,"QueryBody_Original":"SELECT \n  p.ViewCount \/ 1000 as [kViews],\n  -- count(*) as [Post count],\n  -- sum(p.CommentCount) as [Total comment count],\n  sum(p.CommentCount) \/ count(*) as [Average comment count]\nfrom Posts p\nwhere p.CommentCount != 0\ngroup by p.ViewCount \/ 1000\norder by p.ViewCount \/ 1000"},{"QuerySetId":714871,"Title":"titles with trailing space and duplicate title","Description":null,"QueryBody":"SELECT RTRIM(LOWER(p.Title)) FROM Posts AS p GROUP BY RTRIM(LOWER(p.Title)) HAVING (COUNT(RTRIM(LOWER(p.Title))) > 1) INTERSECT SELECT RTRIM(LOWER(Title)) FROM Posts WHERE DATALENGTH(RTRIM(Title)) <> DATALENGTH(Title) AND PostTypeId = 1","CreationDate":"2017-08-27 10:17:37","validated":false,"QueryBody_Original":"SELECT  rtrim(lower(p.Title))\nfrom Posts p\ngroup by rtrim(lower(p.Title))\nhaving (count(rtrim(lower(p.Title))) > 1)\n\nINTERSECT\n\nSELECT rtrim(lower(Title))\nfrom Posts\nwhere datalength(rtrim(Title)) <> datalength(Title)\nand PostTypeId=1"},{"QuerySetId":715177,"Title":"Tag wikis with internal http:\/\/ links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.Count, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%http:\/\/%.stackexchange.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/stackexchange.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.stackoverflow.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.serverfault.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.superuser.com%') ORDER BY Tags.Count","CreationDate":"2019-04-29 01:00:40","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.Count,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%http:\/\/%.stackexchange.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/stackexchange.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.stackoverflow.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.serverfault.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.superuser.com%'\n  )\nORDER BY Tags.Count"},{"QuerySetId":715347,"Title":"Curious Inquisitive Socratic Badge Progress For an entire Site","Description":"Calculates which users are closest of obtaining the mentioned badges based on the number of days a user has with questions that have upvotes and there are no downvoted questions and displays progress toward each of the badges","QueryBody":"SELECT OwnerUserID AS \"User Link\", days FROM (SELECT OwnerUserId, COUNT(*) AS days FROM (SELECT OwnerUserId, CAST(TIME_TO_STR(creationDate, '%Y\/%m\/%d') AS TEXT(10)) AS creationDay, SUM(CASE WHEN score > 0 THEN 1 ELSE 0 END) AS up, SUM(CASE WHEN score < 1 THEN 1 ELSE 0 END) AS down FROM Posts WHERE PostTypeId = 1 AND NOT OwnerUserId IS NULL GROUP BY OwnerUserId, CAST(TIME_TO_STR(creationDate, '%Y\/%m\/%d') AS TEXT(10))) AS x WHERE up > 0 AND down = 0 GROUP BY OwnerUserId) AS y ORDER BY days DESC","CreationDate":"2019-02-10 21:56:54","validated":false,"QueryBody_Original":"SELECT  OwnerUserID AS [User Link], days\nfrom (SELECT OwnerUserId, count(*) as days\nfrom (SELECT\n  OwnerUserId,\n  CONVERT(VARCHAR(10), creationDate, 111) as creationDay,\n  sum(case when score > 0 then 1 else 0 end) as up,\n  sum(case when score < 1 then 1 else 0 end) as down\nfrom Posts\nwhere PostTypeId = 1 and OwnerUserId is not null\ngroup by OwnerUserId, CONVERT(VARCHAR(10), creationDate, 111)\n) x where up > 0 and down = 0 group by OwnerUserId\n) y order by days desc"},{"QuerySetId":716431,"Title":"Golden & silver Tag Badges of the site","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Badges.UserId) AS Row, Badges.UserId AS \"User Link\", Tags.TagName AS \"TagName\", Badges.Date AS Date FROM Badges, Tags WHERE Badges.TagBased = 1 AND Badges.Class < 3 AND Badges.Name = Tags.TagName ORDER BY Badges.UserId, Badges.Date","CreationDate":"2017-08-30 05:08:51","validated":false,"QueryBody_Original":"SELECT \n  ROW_NUMBER() OVER(ORDER BY Badges.UserId ASC) AS Row,\n  Badges.UserId AS [User Link],\n  Tags.TagName AS [TagName],\n  Badges.Date AS Date\nFROM Badges, Tags\nWHERE\n  Badges.TagBased = 1\n  AND\n  Badges.Class < 3\n  AND\n  Badges.Name = Tags.TagName\nORDER BY Badges.UserId, Badges.Date"},{"QuerySetId":716586,"Title":"select Id, Tags from Posts","Description":null,"QueryBody":"SELECT Id, Tags FROM Posts","CreationDate":"2017-08-30 15:53:29","validated":false,"QueryBody_Original":"SELECT  Id, Tags from Posts"},{"QuerySetId":716908,"Title":"SELECT DisplayName, Id, Location, Reputation  FROM Users ORDER BY Reputation ASC","Description":null,"QueryBody":"SELECT A.DisplayName, A.Id, A.Location, A.Reputation, COUNT(A.Id) AS BadgeCount FROM Users AS A JOIN Badges AS B ON A.Id = B.UserId AND Reputation >= 550000 GROUP BY A.DisplayName, A.Id, A.Location, A.Reputation","CreationDate":"2017-08-31 03:54:25","validated":false,"QueryBody_Original":"SELECT  A.DisplayName, A.Id, A.Location,  A.Reputation,COUNT(A.Id) AS BadgeCount FROM Users A JOIN Badges B ON A.Id=B.UserId AND Reputation >= 550000 GROUP BY A.DisplayName, A.Id, A.Location,  A.Reputation"},{"QuerySetId":717513,"Title":"Bible references without quote formatting","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, p.LastEditDate FROM Posts AS p WHERE NOT p.Body LIKE '%> %' AND p.Body LIKE '%:%' ORDER BY (CASE WHEN p.LastEditDate IS NULL THEN p.CreationDate ELSE p.LastEditDate END) DESC","CreationDate":"2017-09-01 17:38:22","validated":false,"QueryBody_Original":"SELECT \n  p.Id AS [Post Link],\n  p.CreationDate,\n  p.LastEditDate\nFROM\n  Posts AS p\nWHERE\n  p.Body NOT LIKE '%> %'\n  AND p.Body LIKE '%:%'\nORDER BY\n(CASE WHEN p.LastEditDate IS NULL THEN p.CreationDate ELSE p.LastEditDate END) DESC"},{"QuerySetId":717618,"Title":"Python gold badgers ordered by date","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY b.Date DESC), b.UserId AS \"User Link\", b.Date AS got_gold_python, u.Reputation AS rep FROM Users AS u, Badges AS b WHERE b.name = 'python' AND b.class = 1 AND u.Id = b.UserId GROUP BY b.Date, b.UserId, u.Reputation","CreationDate":"2020-05-21 23:49:31","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY b.Date DESC), b.UserId AS [User Link], b.Date got_gold_python, u.Reputation rep\nFROM Users u, Badges b\nWHERE b.name='python' and b.class=1 and u.Id=b.UserId\nGROUP BY b.Date, b.UserId, u.Reputation"},{"QuerySetId":717765,"Title":"tag wiki excerpts with promotional vocabulary + Google","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Info, 'https:\/\/www.google.com\/search?q=' + REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(Posts.Body, ' ', '+'), CHAR(10), '+'), CHAR(13), '+'), CHAR(39), '+'), '.', '+'), ',', '+'), '\"', '+'), '`', '+'), '(', '+'), ')', '+'), '<', '+'), '>', '+'), '!', '+') + '|Url' AS Google, Posts.Body, LENGTH(Posts.Body) AS Len, Posts.CreationDate AS Creation, Posts.LastEditDate AS LastEdit FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.ExcerptPostId WHERE Posts.Body LIKE '%seamless%' OR Posts.Body LIKE '%designed%' OR Posts.Body LIKE '%powerful%' ORDER BY LENGTH(Posts.Body) DESC","CreationDate":"2017-09-02 20:11:01","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Info,\n  'https:\/\/www.google.com\/search?q=' +\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  REPLACE(\n  Posts.Body\n  ,' ','+')\n  ,char(10),'+')\n  ,char(13),'+')\n  ,char(39),'+')\n  ,'.','+')\n  ,',','+')\n  ,'\"','+')\n  ,'`','+')\n  ,'(','+')\n  ,')','+')\n  ,'<','+')\n  ,'>','+')\n  ,'!','+')\n  + '|Url' AS Google,\n  Posts.Body,\n  len(Posts.Body) as Len,\n  Posts.CreationDate as Creation,\n  Posts.LastEditDate as LastEdit\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.ExcerptPostId\nWHERE \n    Posts.Body like '%seamless%'\n or Posts.Body like '%designed%'\n or Posts.Body like '%powerful%'\nORDER BY len(Posts.Body) DESC"},{"QuerySetId":717806,"Title":"select * from users where id;","Description":null,"QueryBody":"SELECT * FROM users WHERE id = 10","CreationDate":"2017-09-02 14:10:47","validated":false,"QueryBody_Original":"SELECT  * from users where id = 10;"},{"QuerySetId":718201,"Title":"SELECT Posts.id, Posts.ViewCount, Posts.ParentId, Posts.Tags,Posts.Title,Posts.Body, acc.body [accep","Description":null,"QueryBody":"SELECT Posts.id, Posts.ViewCount, Posts.ParentId, Posts.Tags, Posts.Title, Posts.Body, acc.body AS \"accepted answer\" FROM Posts LEFT OUTER JOIN posts AS acc ON posts.acceptedanswerid = acc.id WHERE Posts.id > 3050000 AND Posts.id <= 3100000","CreationDate":"2019-04-13 08:07:54","validated":false,"QueryBody_Original":"SELECT  Posts.id, Posts.ViewCount, Posts.ParentId, Posts.Tags,Posts.Title,Posts.Body, acc.body [accepted answer] FROM Posts left outer join posts acc on posts.acceptedanswerid = acc.id WHERE Posts.id > 3050000 and Posts.id <=3100000"},{"QuerySetId":718606,"Title":"Users: average close votes per day","Description":null,"QueryBody":"SELECT users.id AS \"User Link\", (1 + DATEDIFF(CURRENT_TIMESTAMP(), users.creationdate)) AS \"Days\", COUNT(Votes.Id) AS \"Close Votes\", ROUND(CAST(NULLIF(COUNT(Votes.Id), 0) AS FLOAT) \/ (1 + DATEDIFF(CURRENT_TIMESTAMP(), users.creationdate)), 4) AS \"Close Votes\/Day Ratio\" FROM users INNER JOIN Votes ON users.id = Votes.UserId WHERE Votes.VoteTypeId = 6 GROUP BY users.id, users.creationdate ORDER BY \"Close Votes\/Day Ratio\" DESC","CreationDate":"2017-09-04 22:37:17","validated":false,"QueryBody_Original":"SELECT  \nusers.id [User Link]\n  , (1+datediff(dd, users.creationdate, GETDATE())) \"Days\"\n  , Count(Votes.Id) \"Close Votes\"\n  , round(cast(nullif(Count(Votes.Id),0) as float) \/ \n         (1+datediff(dd, users.creationdate, GETDATE())),\n         4) \"Close Votes\/Day Ratio\"\nFROM users\nINNER JOIN Votes ON users.id = Votes.UserId\nWHERE \n-- Close-Vote\nVotes.VoteTypeId = 6 \nGROUP BY users.id, users.creationdate\nORDER BY \"Close Votes\/Day Ratio\" DESC"},{"QuerySetId":718673,"Title":"Eletrical Engineering: electronic design automation","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE PostTypeId = 2 AND Score >= 7 AND Body LIKE ('%##param##%')","CreationDate":"2017-09-05 04:51:24","validated":false,"QueryBody_Original":"SELECT  Body \nFROM Posts \nWHERE \nPostTypeId = 2 AND\nScore >= 7 AND\nBody LIKE ('%##param##%')"},{"QuerySetId":719013,"Title":"Log-log plot of tag question counts","Description":"One would expect long-tail-like power-law distributions of questions over tags to give a straight line.","QueryBody":"SELECT LOG10(ROW_NUMBER() OVER (ORDER BY Count DESC)), LOG10(Count) FROM Tags GROUP BY TagName, Count ORDER BY Count DESC","CreationDate":"2017-09-05 21:18:40","validated":false,"QueryBody_Original":"SELECT  \nLog10(ROW_NUMBER() OVER(ORDER BY Count DESC)), Log10(Count)\nFROM Tags\nGROUP BY TagName, Count\nORDER BY Count DESC"},{"QuerySetId":719889,"Title":"List of badges by rarity","Description":null,"QueryBody":"SELECT COUNT(*), Name FROM Badges WHERE TagBased = 0 \/* normal badges only *\/ GROUP BY Name ORDER BY COUNT(*)","CreationDate":"2017-09-07 16:26:53","validated":false,"QueryBody_Original":"SELECT  COUNT(*), Name\n  FROM Badges\n  WHERE TagBased = 0 -- normal badges only\n  GROUP BY Name\n  ORDER BY COUNT(*)"},{"QuerySetId":719921,"Title":"Questions with title length shorter than 15 characters","Description":null,"QueryBody":"SELECT id AS \"Post Link\", LENGTH(title), * FROM posts WHERE postTypeId = 1 AND LENGTH(title) < 15","CreationDate":"2020-07-29 15:05:01","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], len(title), *\nfrom posts\nwhere postTypeId=1 and len(title)<15"},{"QuerySetId":720229,"Title":"Top Algerian Users on StackOverflow","Description":null,"QueryBody":"SELECT 1 + (SELECT COUNT(*) FROM Users AS a WHERE a.Reputation > u.Reputation) AS overall_rank, u.Reputation, u.DisplayName, u.CreationDate, u.Location, u.id AS \"User Link\" FROM Users AS u WHERE LOWER(Location) LIKE '%algeria%' OR LOWER(Location) LIKE '%alg\u00e9rie%' ORDER BY u.Reputation DESC","CreationDate":"2018-06-11 16:35:46","validated":false,"QueryBody_Original":"SELECT \n    1+(SELECT count(*) from Users a WHERE a.Reputation > u.Reputation) as overall_rank,\n    u.Reputation,\n    u.DisplayName,\n    u.CreationDate,\n    u.Location,\n    u.id as [User Link]\nFROM Users AS u\nWHERE LOWER(Location) LIKE '%algeria%'\n   OR LOWER(Location) LIKE '%alg\u00e9rie%'\nORDER BY u.Reputation DESC"},{"QuerySetId":720709,"Title":"Users with names ending in 'juri'","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName FROM Users WHERE DisplayName LIKE '%juri' ORDER BY Reputation DESC","CreationDate":"2017-09-09 15:30:05","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], Reputation, DisplayName\n  FROM Users\n  WHERE DisplayName LIKE '%juri'\n  ORDER BY Reputation DESC"},{"QuerySetId":720999,"Title":"Questions and answers per month","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) AS \"month\", CASE WHEN p.PostTypeId = 1 THEN 'Q' ELSE 'A' END AS PostType, COUNT(*) AS Count FROM Posts AS p WHERE p.PostTypeId IN (1, 2) AND DATEDIFF(month, CreationDate, GETDATE()) > 0 GROUP BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0), p.PostTypeId ORDER BY \"month\" DESC","CreationDate":"2017-09-10 13:54:56","validated":false,"QueryBody_Original":"SELECT  \ndateadd(month, datediff(month, 0, CreationDate), 0) as [month], CASE \n      WHEN p.PostTypeId = 1 THEN 'Q' \n      ELSE 'A'\n   END \nAS PostType,\ncount(*) as Count\nfrom Posts p\nwhere\np.PostTypeId in (1,2)\nand\nDATEDIFF(month,CreationDate,getdate()) >0\ngroup by dateadd(month, datediff(month, 0, CreationDate), 0),\np.PostTypeId\norder by [month] desc;"},{"QuerySetId":721247,"Title":"Answers per month by developer","Description":null,"QueryBody":"SELECT * FROM Users WHERE DisplayName LIKE 'rafon'","CreationDate":"2017-09-11 07:26:08","validated":false,"QueryBody_Original":"SELECT  * from Users where DisplayName like 'rafon'"},{"QuerySetId":721258,"Title":"Top 1000 Stack Overflow Users From Netherlands By Reputation ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Position, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE UPPER(Location) LIKE N'%NETHERLANDS%' OR UPPER(Location) LIKE N'%NEDERLAND%' OR UPPER(Location) LIKE N'%AMSTERDAM%' OR UPPER(Location) LIKE N'%EINDHOVEN%' OR UPPER(Location) LIKE N'%UTRECHT%' OR UPPER(Location) LIKE N'%NIJMEGEN%' OR UPPER(Location) LIKE N'%ROTTERDAM%' ORDER BY reputation DESC LIMIT 1000","CreationDate":"2017-09-11 09:05:55","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Position,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   UPPER(Location) like N'%NETHERLANDS%'\n   OR\n   UPPER(Location) like N'%NEDERLAND%'\n   OR\n   UPPER(Location) like N'%AMSTERDAM%' \n   OR\n   UPPER(Location) like N'%EINDHOVEN%' \n   OR\n   UPPER(Location) like N'%UTRECHT%'\n   OR\n   UPPER(Location) like N'%NIJMEGEN%'\n   OR\n   UPPER(Location) like N'%ROTTERDAM%'\nORDER BY\n   reputation DESC"},{"QuerySetId":721406,"Title":"Top Algerian Comments on StackOverflow","Description":null,"QueryBody":"SELECT CONCAT('https:\/\/stackoverflow.com\/questions\/', c.PostId, '\/#comment', c.id, '_', c.PostId) AS link, c.Score, u.DisplayName, u.Reputation, c.Text FROM Comments AS c, Users AS u WHERE c.UserId = u.id AND u.Location LIKE '%Algeria%' ORDER BY c.Score DESC","CreationDate":"2017-09-11 18:37:18","validated":false,"QueryBody_Original":"SELECT  CONCAT('https:\/\/stackoverflow.com\/questions\/', c.PostId, '\/#comment', c.id, '_', c.PostId) as link, c.Score, u.DisplayName, u.Reputation, c.Text\nFROM Comments as c, Users as u\nWHERE c.UserId = u.id\n      AND u.Location LIKE '%Algeria%'\nORDER BY c.Score\nDESC"},{"QuerySetId":721788,"Title":"Reputation for users with 100 badges","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", MIN(reputation) AS rep FROM users AS u INNER JOIN badges AS b ON b.userid = u.id WHERE reputation > 1 \/* leave out the starters and suspended *\/ GROUP BY u.id HAVING COUNT(*) = 100 ORDER BY MIN(reputation)","CreationDate":"2017-09-12 11:07:57","validated":false,"QueryBody_Original":"SELECT  u.id as [User Link]\n, min(reputation) rep\nfrom users u\ninner join badges b on b.userid = u.id\nwhere reputation > 1 -- leave out the starters and suspended \ngroup by u.id\nhaving count(*) = 100\norder by min(reputation)"},{"QuerySetId":721981,"Title":"Positive scored questions, with multiple, all-negative answers, no accepted answer","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", COUNT(*) AS ANum, SUM(CASE WHEN A.Score < 0 THEN 1 ELSE 0 END) AS ANegNum FROM Posts AS Q, Posts AS A WHERE A.ParentId = Q.Id AND Q.Score > 0 AND Q.AcceptedAnswerId IS NULL GROUP BY Q.Id HAVING COUNT(*) = SUM(CASE WHEN A.Score < 0 THEN 1 ELSE 0 END) ORDER BY Q.Id DESC","CreationDate":"2017-09-12 19:39:07","validated":false,"QueryBody_Original":"SELECT \n  Q.Id AS [Post Link],\n  COUNT(*) AS ANum,\n  SUM(CASE WHEN A.Score < 0 THEN 1 ELSE 0 END) AS ANegNum\nFROM Posts Q, Posts A\nWHERE A.ParentId = Q.Id\n  AND Q.Score > 0\n  AND Q.AcceptedAnswerId IS NULL\nGROUP BY Q.Id\nHAVING \n  COUNT(*) = SUM(CASE WHEN A.Score < 0 THEN 1 ELSE 0 END)\nORDER BY Q.Id DESC"},{"QuerySetId":722409,"Title":"TOP 20 users from Nepal","Description":"Lists the top 20 users (ranked by reputation) that are located in Nepal to their profile information.\r\n\r\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Nepal%' ORDER BY reputation DESC LIMIT 20","CreationDate":"2020-10-18 05:18:22","validated":false,"QueryBody_Original":"SELECT  TOP 20\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Nepal%'\n   --OR Location like N'%np%'\n  \nORDER BY\n   reputation DESC"},{"QuerySetId":722455,"Title":"Technology Trends (# Questions per Tag)","Description":null,"QueryBody":"SELECT Tags.TagName, Tags.Count FROM Tags WHERE Tags.TagName = 'angularjs' OR Tags.TagName = 'angular' OR Tags.TagName = 'reactjs' OR Tags.TagName = 'vue.js' OR Tags.TagName = 'vuejs2' OR Tags.TagName = 'ember.js' OR Tags.TagName = 'backbone.js' OR Tags.TagName = 'polymer'","CreationDate":"2017-09-21 13:44:09","validated":false,"QueryBody_Original":"SELECT \n  Tags.TagName, Tags.Count\n\nFROM Tags\n\nWHERE\n  Tags.TagName = 'angularjs' OR   Tags.TagName = 'angular' OR   \n  Tags.TagName = 'reactjs' OR   Tags.TagName = 'vue.js' OR   \n  Tags.TagName = 'vuejs2' OR   Tags.TagName = 'ember.js' OR\n  Tags.TagName = 'backbone.js' OR   Tags.TagName = 'polymer'"},{"QuerySetId":722895,"Title":"Users with many upvoted posts, but low average score","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body, Score FROM Posts WHERE LENGTH(Body) < 8","CreationDate":"2017-09-14 12:00:56","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Body, Score from Posts where Len(Body) < 8"},{"QuerySetId":723969,"Title":"Total Reputation Across All Users","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Users\", SUM(reputation) AS SumRep, SUM(reputation) \/ COUNT(*) AS \"Rep\/User\" FROM users WHERE reputation > 1000000","CreationDate":"2018-02-18 17:59:07","validated":false,"QueryBody_Original":"SELECT  \n   count(*) as [Users], \n   sum(reputation) as SumRep, \n   sum(reputation)\/count(*) as [Rep\/User]\n\nfrom users\n\nwhere reputation > 1000000"},{"QuerySetId":724583,"Title":"unsolved Q's asker's Info [Consider Bounty](Q is not closed yet)","Description":null,"QueryBody":"SELECT pUser.OwnerUserId AS askerId, u.DisplayName AS askerName, COUNT(pUser.OwnerUserId) AS caseCnt, u.Reputation AS askerReputation, u.UpVotes AS askerUpVotes, u.DownVotes AS akserDownVotes, SUM(v.bountyOnce) AS bountyCaseCnt FROM (SELECT OwnerUserId, id FROM posts WHERE posttypeid = 1 AND acceptedanswerid IS NULL AND ClosedDate IS NULL) AS pUser LEFT OUTER JOIN (SELECT postid, VoteTypeId, 1 AS bountyOnce FROM votes WHERE VoteTypeId = 8 GROUP BY postid, VoteTypeId) AS v ON pUser.id = v.postid JOIN users AS u ON pUser.OwnerUserId = u.id GROUP BY pUser.OwnerUserId, u.DisplayName, u.Reputation, u.UpVotes, u.DownVotes ORDER BY caseCnt DESC","CreationDate":"2017-09-19 09:29:42","validated":false,"QueryBody_Original":"SELECT  pUser.OwnerUserId AS askerId,\n       u.DisplayName AS askerName,\n       count(pUser.OwnerUserId) AS caseCnt,\n       u.Reputation AS askerReputation,\n       u.UpVotes AS askerUpVotes,\n       u.DownVotes AS akserDownVotes,\n       sum(v.bountyOnce) AS bountyCaseCnt\nFROM\n  (SELECT OwnerUserId ,\n          id\n   FROM posts\n   WHERE posttypeid =1\n     AND acceptedanswerid IS NULL\n     AND ClosedDate IS NULL) pUser\nLEFT OUTER JOIN\n  ( SELECT postid,\n           VoteTypeId,\n           1 AS bountyOnce\n   FROM votes\n   WHERE VoteTypeId = 8\n   GROUP BY postid,\n            VoteTypeId) v ON pUser.id = v.postid\nJOIN users u ON pUser.OwnerUserId=u.id\nGROUP BY pUser.OwnerUserId ,\n         u.DisplayName,\n         u.Reputation ,\n         u.UpVotes ,\n         u.DownVotes\nORDER BY caseCnt DESC"},{"QuerySetId":724770,"Title":"\u0427\u0438\u0441\u043b\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043d\u0430\u043f\u0438\u0441\u0430\u0432\u0448\u0438\u0445 \u0431\u043e\u043b\u0435\u0435 2^n \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432","Description":null,"QueryBody":"SELECT MIN(Posts) AS \"Min Posts\", NULL AS \"Min Questions\", COUNT(OwnerUserId) AS Users FROM (SELECT COUNT(*) AS Posts, OwnerUserId FROM Posts GROUP BY OwnerUserId) AS pu GROUP BY FLOOR(LOG(Posts) \/ LOG(2)) UNION SELECT NULL AS \"Min Posts\", MIN(Questions) AS \"Min Questions\", COUNT(OwnerUserId) AS Users FROM (SELECT COUNT(*) AS Questions, OwnerUserId FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId) AS qu GROUP BY FLOOR(LOG(Questions) \/ LOG(2)) ORDER BY 1, 2","CreationDate":"2017-09-18 21:47:25","validated":false,"QueryBody_Original":"SELECT  min(Posts) as [Min Posts], null as [Min Questions], count(OwnerUserId) as Users\nfrom\n  (\n  SELECT count(*) as Posts, OwnerUserId\n  from Posts\n  group by OwnerUserId\n  ) pu\ngroup by floor(log(Posts) \/ log(2))\n--order by 1\n\nunion\n\nSELECT null as [Min Posts], min(Questions) as [Min Questions], count(OwnerUserId) as Users\nfrom\n  (\n  SELECT count(*) as Questions, OwnerUserId\n  from Posts\n  where PostTypeId = 1\n  group by OwnerUserId\n  ) qu\ngroup by floor(log(Questions) \/ log(2))\n--order by 1\n\norder by 1, 2"},{"QuerySetId":725065,"Title":"unsolved Q's asker's Info(Q is not closed yet )","Description":null,"QueryBody":"SELECT pUser.*, u.DisplayName, u.Reputation, u.UpVotes, u.UpVotes FROM (SELECT OwnerUserId, COUNT(OwnerUserId) AS cnt FROM posts WHERE posttypeid = 1 AND acceptedanswerid IS NULL AND ClosedDate IS NULL GROUP BY OwnerUserId) AS pUser JOIN users AS u ON pUser.OwnerUserId = u.id ORDER BY pUser.cnt DESC","CreationDate":"2017-09-19 08:14:28","validated":false,"QueryBody_Original":"SELECT  pUser.* ,\n       u.DisplayName ,\n       u.Reputation ,\n       u.UpVotes ,\n       u.UpVotes\nFROM\n  (SELECT OwnerUserId ,\n          count(OwnerUserId) AS cnt\n   FROM posts\n   WHERE posttypeid =1\n     AND acceptedanswerid IS NULL\n     AND ClosedDate IS NULL\n   GROUP BY OwnerUserId) pUser\nJOIN users u ON pUser.OwnerUserId=u.id\nORDER BY pUser.cnt DESC"},{"QuerySetId":725737,"Title":"Comments from users with display names that look like unregistered","Description":null,"QueryBody":"SELECT c.PostId AS \"Post Link\", u.DisplayName, c.Text FROM Comments AS c JOIN Users AS u ON c.UserId = u.Id JOIN Posts AS p ON c.PostId = p.Id LEFT OUTER JOIN posts AS q ON p.ParentId = q.Id WHERE u.DisplayName LIKE 'user3%' AND ((p.PostTypeId = 1 AND p.OwnerUserId <> c.UserId) OR (p.PostTypeId = 2 AND p.OwnerUserId <> c.UserId AND q.OwnerUserId <> c.UserId)) LIMIT 100","CreationDate":"2018-10-08 13:57:55","validated":false,"QueryBody_Original":"SELECT  TOP(100)\nc.PostId AS [Post Link],\nu.DisplayName,\nc.Text\nFROM Comments c\nJOIN Users u ON c.UserId = u.Id\nJOIN Posts p ON c.PostId = p.Id\nLEFT OUTER JOIN posts q on p.ParentId = q.Id\nWHERE u.DisplayName like 'user3%'\nAND ((p.PostTypeId = 1 AND p.OwnerUserId != c.UserId)\n  OR (p.PostTypeId = 2\n      AND p.OwnerUserId != c.UserId\n      AND q.OwnerUserId != c.UserId))"},{"QuerySetId":726287,"Title":"top users by amount of answers in a day","Description":null,"QueryBody":"SELECT owneruserid, CAST(creationdate AS DATE) AS DT, COUNT(p.id) FROM posts AS p WHERE posttypeid = 2 AND owneruserid > 0 GROUP BY owneruserid, CAST(creationdate AS DATE) ORDER BY 3 DESC","CreationDate":"2017-09-21 20:07:00","validated":false,"QueryBody_Original":"SELECT  \nowneruserid,\ncast(creationdate as date) DT,\ncount(p.id)\nfrom posts p\nwhere posttypeid = 2\n  and owneruserid > 0\ngroup by owneruserid,\ncast(creationdate as date)\norder by 3 desc"},{"QuerySetId":726370,"Title":"Top Five Answers by Tag Name","Description":null,"QueryBody":"SELECT q.id AS \"Question Link\", a.id, a.score, q.tags, u.displayname FROM posts AS q JOIN posts AS a ON q.AcceptedAnswerId = a.id JOIN users AS u ON a.owneruserid = u.id WHERE 0 = 0 AND q.tags LIKE '%facebook-graph-api%' AND q.posttypeid = 1 AND a.posttypeid = 2 ORDER BY a.score DESC LIMIT 100","CreationDate":"2017-09-22 08:01:00","validated":false,"QueryBody_Original":"SELECT  top (100) q.id AS [Question Link], a.id, a.score, q.tags, u.displayname\nfrom posts q\njoin posts a on q.AcceptedAnswerId = a.id\njoin users u on a.owneruserid = u.id\nwhere 0 = 0\nand q.tags like '%facebook-graph-api%'\nand q.posttypeid = 1\nand a.posttypeid = 2\norder by a.score desc"},{"QuerySetId":726507,"Title":"Top 100 Answers by Tag Name","Description":null,"QueryBody":"SELECT q.id, a.id, a.score, q.tags, u.displayname FROM posts AS q JOIN posts AS a ON q.AcceptedAnswerId = a.id JOIN users AS u ON a.owneruserid = u.id WHERE 0 = 0 AND q.tags LIKE '%api%' AND q.posttypeid = 1 AND a.posttypeid = 2 ORDER BY a.score DESC LIMIT 100","CreationDate":"2017-09-28 04:43:37","validated":false,"QueryBody_Original":"SELECT  top (100) q.id, a.id, a.score, q.tags, u.displayname\nfrom posts q\njoin posts a on q.AcceptedAnswerId = a.id\njoin users u on a.owneruserid = u.id\nwhere 0 = 0\nand q.tags like '%api%'\nand q.posttypeid = 1\nand a.posttypeid = 2\norder by a.score desc"},{"QuerySetId":726517,"Title":"Posts that contain awesome words","Description":"Posts that contain the two most obvious swears","QueryBody":"SELECT Id AS \"Link\", body FROM Posts WHERE ((LOWER(Body) LIKE '%upcoming%' OR LOWER(Title) LIKE '%upcoming%') AND PostTypeId = 3)","CreationDate":"2017-09-22 10:02:23","validated":false,"QueryBody_Original":"SELECT  Id AS [Link],body FROM Posts WHERE (\n(LOWER(Body) LIKE '%upcoming%' OR LOWER(Title) LIKE '%upcoming%') AND PostTypeId=3)"},{"QuerySetId":727249,"Title":"select count(id) from posts where tags contains 'golang' or 'go'","Description":null,"QueryBody":"SELECT COUNT(id) FROM posts WHERE (tags LIKE '%c%' OR tags LIKE '%c++%') AND Body LIKE '%<code>%'","CreationDate":"2018-02-21 21:12:03","validated":false,"QueryBody_Original":"SELECT  count(id) from posts where (tags like '%c%' or tags like '%c++%') and Body LIKE '%<code>%'"},{"QuerySetId":728214,"Title":"Top 2000 Stack Overflow Users From Netherlands By Reputation","Description":"Top 2000 SO users from Netherlands or Netherlands based cities.","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Position, DisplayName, Reputation, WebsiteUrl, Location, WebsiteUrl, AboutMe, 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT(10)) AS ProfileUrl FROM Users WHERE UPPER(Location) LIKE N'%NETHERLANDS%' OR UPPER(Location) LIKE N'%NEDERLAND%' OR UPPER(Location) LIKE N'%AMSTERDAM%' OR UPPER(Location) LIKE N'%EINDHOVEN%' OR UPPER(Location) LIKE N'%UTRECHT%' OR UPPER(Location) LIKE N'%NIJMEGEN%' OR UPPER(Location) LIKE N'%ROTTERDAM%' OR UPPER(Location) LIKE N'%HAAG%' ORDER BY reputation DESC LIMIT 2000","CreationDate":"2019-10-11 23:19:24","validated":false,"QueryBody_Original":"SELECT  TOP 2000\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Position,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location,\n   WebsiteUrl,\n   AboutMe,\n   'http:\/\/stackoverflow.com\/users\/' + CONVERT(VARCHAR(10), Id) AS ProfileUrl\nFROM\n   Users\nWHERE\n   UPPER(Location) like N'%NETHERLANDS%'\n   OR\n   UPPER(Location) like N'%NEDERLAND%'\n   OR\n   UPPER(Location) like N'%AMSTERDAM%' \n   OR\n   UPPER(Location) like N'%EINDHOVEN%' \n   OR\n   UPPER(Location) like N'%UTRECHT%'\n   OR\n   UPPER(Location) like N'%NIJMEGEN%'\n   OR\n   UPPER(Location) like N'%ROTTERDAM%'\n      OR\n   UPPER(Location) like N'%HAAG%'\nORDER BY\n   reputation DESC"},{"QuerySetId":728322,"Title":"SELECT TOP 10 Id, DisplayName FROM Users;","Description":null,"QueryBody":"SELECT Id, DisplayName FROM Users LIMIT 10","CreationDate":"2017-09-26 16:48:18","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id, DisplayName FROM Users;"},{"QuerySetId":728692,"Title":"Answer count for [status-completed] questions","Description":null,"QueryBody":"SELECT AnswerCount, COUNT(*) FROM Posts WHERE Tags LIKE '%<status-completed>%' GROUP BY AnswerCount","CreationDate":"2017-09-26 23:30:32","validated":false,"QueryBody_Original":"SELECT \nAnswerCount, COUNT(*)\n  FROM Posts\n  WHERE Tags LIKE '%<status-completed>%'\n  GROUP BY AnswerCount"},{"QuerySetId":729315,"Title":"1) Top 15 Posts, Ranked","Description":"Show post id, FavoriteCount (use column label votes), CommentCount (label:answers), ViewCount (label: views), and title","QueryBody":"SELECT Id, FavoriteCount AS Votes, CommentCount AS Answers, ViewCount AS Views, Title FROM Posts WHERE NOT Title IS NULL ORDER BY Score DESC LIMIT 15","CreationDate":"2017-09-27 07:51:47","validated":false,"QueryBody_Original":"SELECT  TOP(15) Id, FavoriteCount AS Votes, CommentCount AS Answers, ViewCount AS Views, Title\nFROM Posts\nWHERE Title IS NOT NULL\nORDER BY Score DESC"},{"QuerySetId":730221,"Title":"select Body, Id,PostId,Text from Posts, Comments where Id=PostID","Description":null,"QueryBody":"SELECT Body, Posts.Id, Comments.PostId, Comments.Text FROM Posts, Comments WHERE Posts.Id = Comments.PostId ORDER BY Comments.score LIMIT 5","CreationDate":"2017-09-28 01:49:08","validated":false,"QueryBody_Original":"SELECT  Top 5 Body, Posts.Id,Comments.PostId,Comments.Text from Posts, Comments where Posts.Id=Comments.PostId order by Comments.score"},{"QuerySetId":730230,"Title":"select * from Posts where Id = 46898","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 46898","CreationDate":"2017-10-08 01:12:51","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id = 46898"},{"QuerySetId":730398,"Title":"Top users by City ","Description":null,"QueryBody":"SELECT Id, Reputation, DisplayName, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%##city##%') ORDER BY Reputation DESC","CreationDate":"2017-09-28 12:57:16","validated":false,"QueryBody_Original":"SELECT  Id, Reputation, DisplayName, Location\nfrom Users\nwhere lower(Location) like lower('%##city##%')\norder by Reputation desc"},{"QuerySetId":731019,"Title":"select top 20 from Posts;","Description":null,"QueryBody":"SELECT Title, Body, CreationDate, AnswerCount, FavoriteCount + (20 \/ 100 * FavoriteCount) AS New_Count FROM Posts","CreationDate":"2017-09-29 07:27:58","validated":false,"QueryBody_Original":"SELECT  Title,Body,CreationDate,AnswerCount,FavoriteCount+(20\/100*FavoriteCount) as New_Count from Posts;"},{"QuerySetId":731248,"Title":"Non-questions with title or tags","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId <> 1 AND (NOT Title IS NULL OR NOT Tags IS NULL)","CreationDate":"2017-09-29 13:09:25","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE PostTypeId != 1 AND (Title IS NOT NULL OR Tags IS NOT NULL);"},{"QuerySetId":731480,"Title":"All tags of a given site","Description":null,"QueryBody":"SELECT t.TagName, t.\"Count\", p1.Body, p2.Body FROM \"SuperUser\".dbo.Tags AS t LEFT JOIN \"SuperUser\".dbo.Posts AS p1 ON p1.Id = t.ExcerptPostId LEFT JOIN \"SuperUser\".dbo.Posts AS p2 ON p2.Id = t.WikiPostId ORDER BY t.\"Count\" DESC","CreationDate":"2017-11-29 23:49:16","validated":false,"QueryBody_Original":"SELECT  t.TagName, t.[Count], p1.Body, p2.Body\nfrom [SuperUser].dbo.Tags t\nleft join [SuperUser].dbo.Posts p1 on p1.Id = t.ExcerptPostId\nleft join [SuperUser].dbo.Posts p2 on p2.Id = t.WikiPostId\norder by t.[Count] desc"},{"QuerySetId":733616,"Title":"Longest Answers by Markdown for Mark S.","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", LENGTH(ph.Text) AS \"Markdown Length\", p.Score AS \"Score\" FROM Posts AS p, PostHistory AS ph\/* initial body, edit body, rollback body *\/  WHERE YEAR(p.CreationDate) >= 2011 AND p.PostTypeId = 2 \/* is an answer *\/ AND ph.PostId = p.Id \/* getting history for the right post *\/ AND ph.PostHistoryTypeId IN (2, 5, 8) AND NOT EXISTS(SELECT * FROM PostHistory AS phtwo WHERE phtwo.PostId = p.Id AND phtwo.PostHistoryTypeId IN (2, 5, 8) AND phtwo.CreationDate > ph.CreationDate) AND p.OwnerUserId = 609441 ORDER BY LENGTH(ph.Text) DESC LIMIT 300","CreationDate":"2019-06-02 11:20:45","validated":false,"QueryBody_Original":"SELECT  Top 300 \n      p.Id AS [Post Link], \n      Len(ph.Text) as [Markdown Length],\n      p.Score as [Score]\nFrom Posts p, PostHistory ph\nWhere YEAR(p.CreationDate) >= 2011\n      and p.PostTypeId = 2                     -- is an answer\n      and ph.PostId = p.Id                 -- getting history for the right post\n      and ph.PostHistoryTypeId in (2,5,8)  -- initial body, edit body, rollback body\n      and not exists (                     -- no later revisions of the body\n        SELECT * from PostHistory phtwo\n        Where phtwo.PostId = p.Id\n          and phtwo.PostHistoryTypeId in (2,5,8)\n          and phtwo.CreationDate > ph.CreationDate\n      )\n      and p.OwnerUserId = 609441\nOrder By Len(ph.Text) Desc"},{"QuerySetId":734161,"Title":"Avg Answer and Question score for user's answers","Description":"Finds all the answers a user has made and gets the average score of those answers, and the average score of the questions they are associated with.","QueryBody":"SELECT answers.OwnerUserId, AVG(answers.Score * 1.0) AS \"Avg Answer Score\", AVG(questions.Score * 1.0) AS \"Avg Question Score\" FROM Posts AS answers INNER JOIN Posts AS questions ON answers.ParentId = questions.Id WHERE answers.PostTypeId = 2 AND answers.OwnerUserId IN (4342498, 1043380) GROUP BY answers.OwnerUserId","CreationDate":"2017-10-02 20:38:40","validated":false,"QueryBody_Original":"SELECT \n  answers.OwnerUserId,\n  avg(answers.Score * 1.0) [Avg Answer Score],\n  avg(questions.Score * 1.0) [Avg Question Score]\nfrom Posts answers\ninner join Posts questions on answers.ParentId = questions.Id\nwhere\n  answers.PostTypeId = 2 and\n  answers.OwnerUserId in (4342498, 1043380)\ngroup by answers.OwnerUserId"},{"QuerySetId":734661,"Title":"Top 200 SO user from bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName, Reputation, Location FROM Users WHERE Location = 'Bangladesh' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2017-10-03 10:50:55","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    DisplayName,\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    Location = 'Bangladesh'    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":736957,"Title":"Deep Learning over Time SO","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) AS \"month\", COUNT(*) AS \"torch_count\" FROM Posts AS p WHERE p.PostTypeId = 1 AND p.Tags LIKE '%<torch>%' GROUP BY CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(7)) ORDER BY month","CreationDate":"2017-10-10 19:09:34","validated":false,"QueryBody_Original":"SELECT \n  convert(char(7), CreationDate, 20) as [month],\n  count(*) as [torch_count]\nfrom Posts p\nwhere p.PostTypeId = 1\n  and p.Tags like '%<torch>%' \ngroup by convert(char(7), CreationDate, 20) order by month asc"},{"QuerySetId":737502,"Title":"Query for Energy related words in body of posts","Description":null,"QueryBody":"SELECT * FROM Posts WHERE (\"body\" LIKE '%energy%' OR \"body\" LIKE '%energy consum%')","CreationDate":"2017-10-06 05:48:30","validated":false,"QueryBody_Original":"SELECT  * from Posts where (\"body\" LIKE '%energy%' OR \"body\" LIKE '%energy consum%');"},{"QuerySetId":737884,"Title":"Titles Longer than 150 characters","Description":null,"QueryBody":"SELECT id AS \"Post Link\", * FROM posts WHERE LENGTH(title) > 150","CreationDate":"2017-10-07 02:08:10","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], * from posts where len(title)>150"},{"QuerySetId":738337,"Title":"Command Line Technology Question Closure","Description":null,"QueryBody":"SELECT * FROM (SELECT COUNT(CASE WHEN NOT ClosedDate IS NULL THEN 1 END) AS NumPowerShellClosed, COUNT(*) AS NumPowerShell FROM Posts WHERE LOWER(Tags) LIKE '%powershell%') AS PowerShellStats, (SELECT COUNT(CASE WHEN NOT ClosedDate IS NULL THEN 1 END) AS NumBashClosed, COUNT(*) AS NumBash FROM Posts WHERE LOWER(Tags) LIKE '%bash%') AS BashStats","CreationDate":"2017-10-09 00:11:09","validated":false,"QueryBody_Original":"SELECT  *\nFROM (\n  SELECT\n      COUNT(CASE WHEN ClosedDate IS NOT NULL THEN 1 END) AS NumPowerShellClosed,\n      COUNT(*) AS NumPowerShell\n  FROM Posts\n  WHERE LOWER(Tags) LIKE '%powershell%'\n) PowerShellStats,\n(\n  SELECT\n      COUNT(CASE WHEN ClosedDate IS NOT NULL THEN 1 END) AS NumBashClosed,\n      COUNT(*) AS NumBash\n  FROM Posts\n  WHERE LOWER(Tags) LIKE '%bash%'\n) BashStats"},{"QuerySetId":738531,"Title":"Homework questions on a daily count","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), COUNT(*) FROM Posts WHERE Tags LIKE '%homework-and-exercises%' AND CreationDate >= '2015-10-09' GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE) DESC","CreationDate":"2017-10-09 20:37:21","validated":false,"QueryBody_Original":"SELECT \n  CONVERT(date,CreationDate),\n  COUNT(*)\nFROM Posts\nWHERE Tags LIKE '%homework-and-exercises%'\n  AND CreationDate >='2015-10-09'\nGROUP BY CONVERT(date,CreationDate)\nORDER BY CONVERT(date,CreationDate) DESC"},{"QuerySetId":738538,"Title":"Popular MongoDB Queries by ViewCount","Description":null,"QueryBody":"SELECT Score, ViewCount, CreationDate, DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) AS \"DaysOpen\", (ViewCount \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"NewScore\", LastActivityDate, Title, Id, tags FROM Posts WHERE Title LIKE '%mongodb%' OR Tags LIKE '%mongodb%' ORDER BY NewScore DESC","CreationDate":"2018-04-03 22:23:59","validated":false,"QueryBody_Original":"SELECT  Score, ViewCount, CreationDate, DATEDIFF(DAY, CreationDate, GETDATE()) AS \"DaysOpen\", (ViewCount \/ DATEDIFF(DAY, CreationDate, GETDATE())) AS \"NewScore\", LastActivityDate, Title, Id, tags\nFROM Posts\nWHERE Title LIKE '%mongodb%' or Tags LIKE '%mongodb%'\nORDER BY NewScore DESC"},{"QuerySetId":738539,"Title":"Popular MongoDB Queries by ViewCount (Year Normalized)","Description":null,"QueryBody":"SELECT Score, ViewCount, CreationDate, DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) + 1 AS \"YearsOpen\", (ViewCount \/ (DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) + 1)) AS \"NewScore\", LastActivityDate, Title, Id, tags FROM Posts WHERE Title LIKE '%mongodb%' OR Tags LIKE '%mongodb%' ORDER BY NewScore DESC","CreationDate":"2018-09-05 04:48:31","validated":false,"QueryBody_Original":"SELECT  Score, ViewCount, CreationDate, DATEDIFF(YEAR, CreationDate, GETDATE())+1 AS \"YearsOpen\", (ViewCount \/ (DATEDIFF(YEAR, CreationDate, GETDATE())+1)) AS \"NewScore\", LastActivityDate, Title, Id, tags\nFROM Posts\nWHERE Title LIKE '%mongodb%' or Tags LIKE '%mongodb%'\nORDER BY NewScore DESC"},{"QuerySetId":738746,"Title":"Members by Age and Reputation","Description":"StackOverflow members from youngest to oldest, by reputation over 1000.\r\n","QueryBody":"SELECT Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate, 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT) AS Url FROM Users WHERE NOT Age IS NULL AND Age <= 17 AND Reputation > 1000 ORDER BY Age, Reputation DESC LIMIT 150","CreationDate":"2017-10-10 12:58:49","validated":false,"QueryBody_Original":"SELECT  TOP(150) Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate,\n'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS VARCHAR) AS Url\nFROM Users\nWHERE Age IS NOT NULL AND Age <= 17 AND Reputation > 1000\nORDER BY Age ASC, Reputation DESC;"},{"QuerySetId":738905,"Title":"Percent DND questions by month","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) AS Mnth, (SUM(CASE WHEN tags LIKE '%dnd%' OR tags LIKE '%dungeons-and-dragons%' OR tags LIKE '%pathfinder%' THEN 1 ELSE 0 END) * 100.00) \/ COUNT(*) AS PercentDND FROM Posts WHERE posttypeid = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) ORDER BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0)","CreationDate":"2017-10-11 04:28:14","validated":false,"QueryBody_Original":"SELECT  \n  dateadd(month, datediff(month, 0, CreationDate), 0) as Mnth,\n  (sum(case when tags like '%dnd%' \n    or tags like '%dungeons-and-dragons%' \n    or tags like '%pathfinder%' then 1 \n    else 0 end) * 100.00) \/ count(*) as PercentDND\nfrom Posts\nwhere posttypeid = 1\ngroup by dateadd(month, datediff(month, 0, CreationDate), 0)\norder by dateadd(month, datediff(month, 0, CreationDate), 0)"},{"QuerySetId":739119,"Title":"How much time to do all my homework tonight","Description":null,"QueryBody":"SELECT DisplayName, Id, Reputation, Age, CreationDate FROM Users GROUP BY DisplayName, Id, Reputation, Age, CreationDate","CreationDate":"2017-10-11 23:51:21","validated":false,"QueryBody_Original":"SELECT  \nDisplayName, Id, Reputation, Age, CreationDate\nFROM Users\nGROUP BY DisplayName,Id, Reputation, Age, CreationDate"},{"QuerySetId":739270,"Title":"Deleted users by number of posts","Description":null,"QueryBody":"SELECT p.OwnerDisplayName, COUNT(*) AS Cnt, MAX(p.CreationDate) AS LastDate, MAX(p.Id) AS \"Post Link\" FROM Posts AS p WHERE p.OwnerUserId IS NULL GROUP BY p.OwnerDisplayName ORDER BY COUNT(*) DESC","CreationDate":"2020-10-02 14:57:58","validated":false,"QueryBody_Original":"SELECT  p.OwnerDisplayName, COUNT(*) AS Cnt, \nMAX(p.CreationDate) AS LastDate, MAX(p.Id) AS \"Post Link\"\nFROM Posts as p\nWHERE p.OwnerUserId IS NULL\nGROUP BY p.OwnerDisplayName\nORDER BY COUNT(*) DESC;"},{"QuerySetId":739299,"Title":"[draft] SRE - ((Java OR Perl) AND docker)","Description":null,"QueryBody":"SELECT Users.Reputation, Users.Id AS \"User Link\", Users.Location, Users.WebsiteUrl, Posts.Tags FROM Users INNER JOIN Posts ON Users.Id = Posts.OwnerUserId WHERE (Posts.Tags LIKE '%docker%' OR Posts.Tags LIKE '%kubernetes%)') AND (Posts.Tags LIKE '%java%' OR Posts.Tags LIKE '%perl%') ORDER BY Users.Reputation DESC, Users.Id","CreationDate":"2018-01-16 15:36:13","validated":false,"QueryBody_Original":"SELECT  \n  Users.Reputation,\n  Users.Id [User Link], \n  Users.Location,\n  Users.WebsiteUrl,\n  Posts.Tags \n\nFROM Users\n  INNER JOIN Posts ON Users.Id = Posts.OwnerUserId  \n  \nWHERE \n(Posts.Tags LIKE '%docker%' OR Posts.Tags LIKE '%kubernetes%)')\n  AND (Posts.Tags LIKE '%java%' OR Posts.Tags LIKE '%perl%')\n  -- Users.AboutMe LIKE '%_@_%_.__%' -- AboutMe contains something that looks like an email id\n  -- Users.AboutMe LIKE '%linkedin%' -- AboutMe contains something that looks like a linkedin link\n  -- Users.WebsiteUrl > '' -- WebsiteUrl is not blank\n  \nORDER BY \n  Users.Reputation DESC,\n  Users.Id;"},{"QuerySetId":739455,"Title":"Upvotes on Answers Per User","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY COUNT(v.id) DESC), p.OwnerUserId AS \"User Link\", COUNT(v.id) AS Upvotes, COUNT(p.id) AS Answers FROM Posts AS p LEFT JOIN votes AS v ON p.id = v.postid WHERE p.PostTypeId = 2 AND v.votetypeid = 2 GROUP BY p.OwnerUserId ORDER BY COUNT(v.id) DESC","CreationDate":"2017-10-11 23:14:18","validated":false,"QueryBody_Original":"SELECT  row_number() over (order by count(v.id) desc), p.OwnerUserId as [User Link], count(v.id) as Upvotes, count(p.id) as Answers\nFROM Posts p \nleft join votes v on p.id = v.postid\nWHERE p.PostTypeId = 2 and v.votetypeid = 2\ngroup by p.OwnerUserId\norder by count(v.id) desc"},{"QuerySetId":739497,"Title":"Get the number of posts there are","Description":null,"QueryBody":"SELECT COUNT(votes.id) FROM votes WHERE VoteTypeId = 4","CreationDate":"2017-10-12 00:44:49","validated":false,"QueryBody_Original":"SELECT  count(votes.id) FROM votes WHERE VoteTypeId = 4;"},{"QuerySetId":739500,"Title":"Get the number of posts there are.","Description":null,"QueryBody":"SELECT COUNT(body) FROM posts WHERE AnswerCount = 0 AND tags LIKE '%javascript%'","CreationDate":"2017-10-12 01:14:46","validated":false,"QueryBody_Original":"SELECT  COUNT(body) FROM posts\nWHERE AnswerCount = 0\nAND tags LIKE '%javascript%';"},{"QuerySetId":739593,"Title":"SELECT TOP 5 p.body FROM Posts as p where p contains \"cowsay\";","Description":null,"QueryBody":"SELECT * FROM posts AS p WHERE p.body LIKE '%cowsay%' LIMIT 5","CreationDate":"2017-10-12 00:52:12","validated":false,"QueryBody_Original":"SELECT  TOP 5 * FROM posts AS p WHERE p.body LIKE '%cowsay%';"},{"QuerySetId":740037,"Title":"How can I see who has the most of a certain badge?","Description":"https:\/\/meta.stackexchange.com\/questions\/302012\/how-can-i-see-who-has-the-most-of-a-certain-badge","QueryBody":"SELECT DISTINCT name FROM badges AS b","CreationDate":"2020-02-06 23:23:55","validated":false,"QueryBody_Original":"SELECT  distinct name\nfrom badges b\n--where b.name = 'Python'"},{"QuerySetId":740713,"Title":"Questions with multiple upvoted answers by the same user","Description":null,"QueryBody":"SELECT ParentId AS \"Post Link\", OwnerUserId AS \"User Link\", COUNT(*) AS \"Number of Answers\" FROM Posts WHERE ParentId > 0 AND OwnerUserId > 0 AND score > 0 AND NOT (title LIKE '%best%') AND NOT (title LIKE '%worst%') AND NOT (title LIKE '%hidden%') GROUP BY ParentId, OwnerUserId HAVING COUNT(*) >= 2 ORDER BY COUNT(*) DESC","CreationDate":"2017-10-15 11:56:56","validated":false,"QueryBody_Original":"SELECT  ParentId as \"Post Link\", OwnerUserId as \"User Link\", count(*) as \"Number of Answers\"\nfrom Posts\nwhere ParentId > 0\nand OwnerUserId > 0\nand score > 0\nand not (title like '%best%')\nand not (title like '%worst%')\nand not (title like '%hidden%')\ngroup by ParentId, OwnerUserId\nhaving count(*) >= 2\norder by count(*) desc"},{"QuerySetId":740792,"Title":"Top SO users from Bhubaneswar, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%noida%') AND Reputation >= 6000 ORDER BY Reputation DESC","CreationDate":"2017-10-13 21:32:50","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (\n        LOWER(Location) LIKE '%noida%'\n   \n    )\n    AND Reputation >= 6000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":740892,"Title":"favorite count and votes don't line up","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM posts AS q WHERE q.favoritecount IS NULL AND q.posttypeid = 1) AS fcount, (SELECT COUNT(*) FROM posts AS q LEFT OUTER JOIN votes AS v ON v.postid = q.id AND votetypeid = 5 WHERE v.id IS NULL AND q.posttypeid = 1) AS votecount","CreationDate":"2017-10-14 00:52:06","validated":false,"QueryBody_Original":"SELECT  \n\n(SELECT count(*)\nfrom posts q \nwhere q.favoritecount is null\nand q.posttypeid = 1) as fcount\n,\n(SELECT count(*)\nfrom posts q\nleft outer join votes v on v.postid = q.id and votetypeid = 5\nwhere v.id is null\nand q.posttypeid = 1\n) as votecount"},{"QuerySetId":742322,"Title":"Master Yoda comment: just don't try answering questions","Description":null,"QueryBody":"SELECT c.Id, c.CreationDate, c.PostId, c.Score, c.Text, c.UserId, 'https:\/\/askubuntu.com\/questions\/' + CAST(PostId AS TEXT(6)) AS \"Link\" FROM Comments AS c WHERE UPPER(Text) LIKE UPPER('%As a famous philosopher once said%') ORDER BY CreationDate","CreationDate":"2017-10-19 11:34:56","validated":false,"QueryBody_Original":"SELECT  c.Id, c.CreationDate, c.PostId, c.Score, c.Text, c.UserId, \n       'https:\/\/askubuntu.com\/questions\/' + cast(PostId as varchar(6)) AS 'Link'\nFROM Comments c\nWHERE upper(Text) like upper('%As a famous philosopher once said%') \nORDER BY CreationDate ASC"},{"QuerySetId":743751,"Title":"Longest time to accept answer","Description":null,"QueryBody":"SELECT pid, elapsed_time, accepted, answered FROM (SELECT p.id AS pid, DATEDIFF(v.creationdate, a.creationdate) \/ 86400 AS elapsed_time, a.creationdate AS answered, v.creationdate AS accepted, v.votetypeid AS vote_type FROM posts AS p, posts AS a, votes AS v WHERE a.parentid = p.id AND p.acceptedanswerid = v.postid AND v.postid = a.id) AS s WHERE vote_type = 1 ORDER BY elapsed_time DESC","CreationDate":"2017-10-17 00:46:58","validated":false,"QueryBody_Original":"SELECT  pid , elapsed_time, accepted, answered\nfrom \n(SELECT p.id as pid, datediff(SECOND, a.creationdate, v.creationdate)\/86400 as elapsed_time,\na.creationdate as answered,\nv.creationdate as accepted,\nv.votetypeid as vote_type\nfrom posts p, posts a, votes v\nwhere a.parentid = p.id\nand p.acceptedanswerid = v.postid\nand v.postid = a.id\n     ) s\n     where vote_type = 1 \n     order by elapsed_time desc"},{"QuerySetId":743838,"Title":"[ALPHA] [Favoritism - High User <-> Favorite Correlation]","Description":null,"QueryBody":"SELECT fcv.voter_id AS \"Voter ID\", u.DisplayName AS \"Voter Display Name\", fcv.recipient_id AS \"Recipient User ID\", u2.DisplayName AS \"Recipient Display Name\", fcv.no_favorite_votes AS \"Number of Favorite Votes\", fcv.latest_vote AS \"Date of last Favorite\" FROM (SELECT u.Id AS voter_id, COUNT(v.Id) AS no_favorite_votes, u2.Id AS recipient_id, MAX(v.CreationDate) AS latest_vote FROM Votes AS v INNER JOIN Users AS u ON v.UserId = u.Id INNER JOIN Posts AS p ON v.PostId = p.Id INNER JOIN Users AS u2 ON p.OwnerUserId = u2.Id GROUP BY u.Id, u2.Id HAVING COUNT(v.Id) > 5) AS fcv INNER JOIN Users AS u ON fcv.voter_id = u.Id INNER JOIN Users AS u2 ON fcv.recipient_id = u2.Id ORDER BY fcv.latest_vote DESC, fcv.no_favorite_votes","CreationDate":"2017-10-17 10:56:15","validated":false,"QueryBody_Original":"SELECT  \n\nfcv.voter_id AS [Voter ID],\nu.DisplayName AS [Voter Display Name],\nfcv.recipient_id AS [Recipient User ID],\nu2.DisplayName AS [Recipient Display Name],\nfcv.no_favorite_votes AS [Number of Favorite Votes],\nfcv.latest_vote AS [Date of last Favorite]\n\n\nFROM\n(\n\nSELECT\nu.Id AS voter_id,\nCOUNT(v.Id) AS no_favorite_votes,\nu2.Id AS recipient_id,\nMAX(v.CreationDate) AS latest_vote\n\n\nFROM Votes AS v\nINNER JOIN Users AS u ON v.UserId = u.Id\nINNER JOIN Posts AS p ON v.PostId = p.Id\nINNER JOIN Users AS u2 ON p.OwnerUserId = u2.Id\n\nGROUP BY\nu.Id,\nu2.Id\n\nHAVING COUNT(v.Id) > 5\n\n) AS fcv\n\nINNER JOIN Users AS u ON fcv.voter_id = u.Id\nINNER JOIN Users AS u2 ON fcv.recipient_id = u2.Id\n\nORDER BY \nfcv.latest_vote DESC,\nfcv.no_favorite_votes"},{"QuerySetId":744078,"Title":"Is posting often correlated with upvoting often?","Description":null,"QueryBody":"SELECT COUNT(Posts.Id) AS Answers, Users.UpVotes, Users.Id, Users.DisplayName, Users.Reputation FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, Users.UpVotes, Users.DisplayName, Users.Reputation ORDER BY Users.Reputation DESC LIMIT 100","CreationDate":"2017-10-18 04:28:02","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    Count(Posts.Id) AS Answers,\n    Users.UpVotes,\n    Users.Id,\n    Users.DisplayName,\n    Users.Reputation\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, Users.UpVotes, Users.DisplayName, Users.Reputation\nORDER BY\n    \/*Users.UpVotes DESC*\/\n    \/*[Answers] DESC*\/\n    Users.Reputation DESC"},{"QuerySetId":744162,"Title":"[ALPHA] [Favoritism - High Favorite <-> Score Correlation]","Description":null,"QueryBody":"SELECT p.Title AS \"Post Title\", p.Tags AS \"Tags\", p.Score AS \"Score\", p.FavoriteCount AS \"Favorite\", ('site:\/\/users\/' + CAST(u1.Id AS TEXT) + '|' + u1.DisplayName) AS \"Poster\", (SELECT MAX(v.CreationDate) FROM Votes AS v WHERE v.VoteTypeId = 5 AND v.PostId = p.Id) AS \"Last Favorite\" FROM POSTS AS p INNER JOIN Users AS u1 ON p.OwnerUserId = u1.Id WHERE u1.Reputation < 1500 AND p.Score > 2 AND p.FavoriteCount > 2 AND p.Score = p.FavoriteCount","CreationDate":"2019-02-11 06:30:38","validated":false,"QueryBody_Original":"SELECT \np.Title AS [Post Title],p.Tags As [Tags],\np.Score AS [Score],\np.FavoriteCount AS [Favorite],\n('site:\/\/users\/' + CAST(u1.Id AS NVARCHAR) + '|'+ u1.DisplayName ) AS [Poster],\n( SELECT Max(v.CreationDate) FROM Votes AS v WHERE v.VoteTypeId = 5 AND v.PostId = p.Id ) AS [Last Favorite]\n\nFROM POSTS AS p\nINNER JOIN Users AS u1 ON p.OwnerUserId = u1.Id\n\nWHERE u1.Reputation < 1500\nAND p.Score > 2\nAND p.FavoriteCount > 2\nAND p.Score = p.FavoriteCount"},{"QuerySetId":744678,"Title":"Users Whose AboutMe might have an Email Address","Description":null,"QueryBody":"SELECT * \/* SELECT COUNT(ID) *\/ FROM Users WHERE AboutMe LIKE '%@%.%' ORDER BY ID","CreationDate":"2018-10-15 01:13:20","validated":false,"QueryBody_Original":"SELECT  * \n--SELECT COUNT(ID)\nFROM Users\nWHERE AboutMe LIKE '%@%.%' \nORDER BY ID"},{"QuerySetId":744853,"Title":"Questions with tag in the title","Description":null,"QueryBody":"SELECT Tags.TagName AS \"TagName\", Posts.Id AS \"Post Link\" FROM Tags INNER JOIN Posts ON (Posts.Title LIKE '%(' + Tags.TagName + ')%' OR Posts.Title LIKE '%[' + Tags.TagName + ']%')","CreationDate":"2017-10-20 19:55:28","validated":false,"QueryBody_Original":"SELECT  Tags.TagName as [TagName],\n  Posts.Id as [Post Link]\nfrom Tags\n  inner join Posts\n  on (\n    Posts.Title like '%(' + Tags.TagName + ')%'\n    or Posts.Title like '%[' + Tags.TagName + ']%'\n  )"},{"QuerySetId":745116,"Title":"Answers with > 50 score and no comments","Description":null,"QueryBody":"SELECT CONCAT('http:\/\/unix.stackexchange.com\/a\/', A.Id), A.Score, Q.Title, Users.DisplayName FROM Posts AS A JOIN Posts AS Q ON Q.Id = A.ParentId JOIN Users ON A.OwnerUserId = Users.Id WHERE A.PostTypeId = 2 AND A.Score > 50 AND A.CommentCount = 0 ORDER BY A.Score DESC","CreationDate":"2017-10-21 16:22:09","validated":false,"QueryBody_Original":"SELECT  CONCAT('http:\/\/unix.stackexchange.com\/a\/', A.Id), A.Score, Q.Title, Users.DisplayName FROM Posts AS A\nJOIN Posts AS Q ON Q.Id = A.ParentId\nJOIN Users ON A.OwnerUserId = Users.Id\nWHERE A.PostTypeId = 2\n  AND A.Score > 50\n  AND A.CommentCount = 0\nORDER BY A.Score DESC"},{"QuerySetId":745545,"Title":"Responder to question related to ##tags##","Description":null,"QueryBody":"SELECT p.Title AS \"Post Title\", p.Score AS \"Post score\", 'https:\/\/stackoverflow.com\/users\/' + CAST(au.Id AS TEXT(10)) AS \"Accepted response User profile\", au.DisplayName AS \"Name\", au.Location AS \"Location\", au.Reputation AS \"Reputation\", au.UpVotes AS \"Upvotes\", au.AboutMe AS \"About\", au.EmailHash AS \"email\", au.WebsiteUrl AS \"Website\" FROM Posts AS p JOIN Posts AS a ON p.AcceptedAnswerId = a.Id JOIN Users AS u ON p.OwnerUserId = u.Id JOIN Users AS au ON a.OwnerUserId = au.Id WHERE p.PostTypeId = 1 AND p.Score >= 25 AND NOT p.AcceptedAnswerId IS NULL AND p.Tags LIKE '%##tags##%' AND p.LastActivityDate > '20171001 00:00:00.000' ORDER BY p.Score DESC","CreationDate":"2017-10-25 01:57:43","validated":false,"QueryBody_Original":"SELECT   p.Title as \"Post Title\",\n        p.Score as \"Post score\",\n        'https:\/\/stackoverflow.com\/users\/' + CAST(au.Id AS VARCHAR(10)) as \"Accepted response User profile\",\n        au.DisplayName as \"Name\",\n        au.Location as \"Location\",\n        au.Reputation as \"Reputation\",        \n        au.UpVotes as \"Upvotes\",\n        au.AboutMe as \"About\",\n        au.EmailHash as \"email\",\n        au.WebsiteUrl as \"Website\"\n\n  \nFROM Posts p\nJOIN Posts a ON p.AcceptedAnswerId = a.Id\nJOIN Users u ON p.OwnerUserId = u.Id\nJOIN Users au ON a.OwnerUserId = au.Id\n\nWHERE p.PostTypeId = 1\nAND p.Score >= 25\nand p.AcceptedAnswerId IS NOT NULL\nAND p.Tags LIKE '%##tags##%'\nAND p.LastActivityDate > '20171001 00:00:00.000'\n\/* AND p.Tags LIKE '%qt%' *\/\n\nORDER BY p.Score DESC"},{"QuerySetId":745726,"Title":"Top Stack Overflow Users located in Toru\u0144","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%toru%') ORDER BY Reputation DESC","CreationDate":"2020-11-25 20:36:02","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n  LOWER(Location) LIKE LOWER('%toru%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":745835,"Title":"Tags By Most Questions Asked","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags ORDER BY Count DESC","CreationDate":"2017-10-23 18:47:28","validated":false,"QueryBody_Original":"SELECT  TagName, Count\nFROM Tags\nORDER BY Count DESC"},{"QuerySetId":745937,"Title":"Percentile of users with location","Description":null,"QueryBody":"SELECT (SELECT COUNT(ID) FROM Users WHERE NOT Location IS NULL) * 100.0 \/ (SELECT COUNT(ID) FROM Users)","CreationDate":"2017-10-24 00:06:20","validated":false,"QueryBody_Original":"SELECT  (SELECT COUNT(ID) FROM Users WHERE Location is not null) * 100.0 \/ (SELECT COUNT(ID) FROM Users)"},{"QuerySetId":746275,"Title":"\u0413\u043e\u043b\u043e\u0441\u0430 \u0437\u0430 \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0438 \u043f\u0435\u0440\u0435\u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435","Description":null,"QueryBody":"SELECT * FROM Votes WHERE VoteTypeId = 6 ORDER BY CreationDate DESC","CreationDate":"2017-10-24 23:43:55","validated":false,"QueryBody_Original":"SELECT  * from Votes \nwhere VoteTypeId = 6\norder by CreationDate desc"},{"QuerySetId":746331,"Title":"Top users by the total score of posts","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Id\", SUM(p.Score) AS \"Total Score\", COUNT(p.Id) AS \"Number of Posts\", MIN(p.CreationDate) AS \"First Post\", MAX(p.CreationDate) AS \"Last Post\", DATEDIFF(MAX(p.CreationDate), MIN(p.CreationDate)) AS Duration FROM Posts AS p WHERE NOT p.OwnerUserId IS NULL GROUP BY p.OwnerUserId ORDER BY \"Total Score\" DESC LIMIT 100","CreationDate":"2017-10-25 04:35:15","validated":false,"QueryBody_Original":"SELECT  TOP 100 p.OwnerUserId as [User Id], \n    SUM(p.Score) AS [Total Score], \n    COUNT(p.Id) AS [Number of Posts], \n    MIN(p.CreationDate) as [First Post],\n    MAX(p.CreationDate) as [Last Post],\n    DATEDIFF(day, MIN(p.CreationDate), MAX(p.CreationDate)) as Duration\nFROM Posts p\nWHERE p.OwnerUserId IS NOT NULL\nGROUP BY p.OwnerUserId\nORDER BY [Total Score] DESC"},{"QuerySetId":746651,"Title":"My undeleted closed ID questions","Description":null,"QueryBody":"SELECT * FROM Votes AS v WHERE v.UserID = 52","CreationDate":"2017-10-26 00:06:32","validated":false,"QueryBody_Original":"SELECT  *\nfrom Votes v\nwhere v.UserID = 52"},{"QuerySetId":746744,"Title":"How many tags per question","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", LENGTH(Tags) - LENGTH(REPLACE(Tags, '<', '')) AS TagCount FROM Posts WHERE PostTypeId = 1","CreationDate":"2018-01-13 04:16:39","validated":false,"QueryBody_Original":"SELECT \nPosts.Id as [Post Link],\n  len(Tags) - len(replace(Tags, '<', '')) as TagCount\n\nfrom Posts\nwhere PostTypeId = 1"},{"QuerySetId":746922,"Title":"All questions starting with \"So ...\"","Description":null,"QueryBody":"SELECT u.DisplayName AS \"Asker\", p.Id AS \"Post Link\", p.AnswerCount, p.Score FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id \/* JOIN Users au ON a.OwnerUserId = au.Id *\/\/* AND p.Score >= 25 *\/ \/* and p.AcceptedAnswerId IS NOT NULL *\/  WHERE p.PostTypeId = 1 AND p.body LIKE '<p>So[ ,]%' ORDER BY p.Score DESC","CreationDate":"2017-10-26 20:24:28","validated":false,"QueryBody_Original":"SELECT  u.DisplayName AS \"Asker\", p.Id as [Post Link], p.AnswerCount, p.Score\n\n  \nFROM Posts p\n  -- JOIN Posts a ON p.AcceptedAnswerId = a.Id\n  JOIN Users u ON p.OwnerUserId = u.Id\n  -- JOIN Users au ON a.OwnerUserId = au.Id\nWHERE p.PostTypeId = 1\n  -- AND p.Score >= 25\n  -- and p.AcceptedAnswerId IS NOT NULL\n  and p.body LIKE '<p>So[ ,]%'\nORDER BY p.Score DESC"},{"QuerySetId":747110,"Title":"Top Devs in Germany by Reputation","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Location, AboutMe, CreationDate, LastAccessDate, Reputation FROM Users WHERE LOWER(Location) LIKE '%germany%' OR LOWER(LOCATION) LIKE '%deutschland%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2017-10-27 01:18:06","validated":false,"QueryBody_Original":"SELECT  TOP 100\n       Id AS [User Link],  \n       Location, \n       AboutMe, \n       CreationDate, \n       LastAccessDate, \n       Reputation\nFROM Users\nWHERE LOWER(Location) LIKE '%germany%'\n      OR LOWER(LOCATION) LIKE '%deutschland%'\nORDER BY Reputation DESC"},{"QuerySetId":747141,"Title":"Get old unanswered questions from users with recent activity","Description":null,"QueryBody":"SELECT question.Id AS \"Post Link\" FROM Posts AS question","CreationDate":"2017-10-27 02:41:34","validated":false,"QueryBody_Original":"SELECT  question.Id AS [Post Link]\nFROM Posts question"},{"QuerySetId":747142,"Title":"Get old unanswered questions with no answers asked by users with recent activity","Description":null,"QueryBody":"SELECT question.Id AS \"Post Link\", question.Score, question.CreationDate, question.OwnerUserId AS \"User Link\", question.Tags, question.FavoriteCount FROM Posts AS question WHERE question.PostTypeId = 1 AND question.AnswerCount < 1 AND question.AcceptedAnswerId IS NULL AND question.ClosedDate IS NULL AND NOT EXISTS(SELECT answer.Id FROM Posts AS answer WHERE answer.Score > 0 AND answer.ParentId = question.Id) AND question.OwnerUserId IN (SELECT Id FROM Users WHERE DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) < 30) ORDER BY question.Id","CreationDate":"2017-10-27 03:16:31","validated":false,"QueryBody_Original":"SELECT \n  question.Id AS [Post Link],\n  question.Score,\n  question.CreationDate,\n  question.OwnerUserId AS [User Link],\n  question.Tags,\n  question.FavoriteCount\nFROM Posts question\nWHERE question.PostTypeId = 1\n  AND question.AnswerCount < 1 \n  AND question.AcceptedAnswerId IS NULL\n  AND question.ClosedDate IS NULL\n  AND NOT EXISTS (\n    SELECT answer.Id\n      FROM Posts answer\n        WHERE answer.Score > 0\n          AND answer.ParentId = question.Id\n  )\n  AND question.OwnerUserId IN (\n    SELECT\n      Id\n    FROM Users\n    WHERE DATEDIFF(day, LastAccessDate, GETDATE()) < 30\n  )\nORDER BY question.Id ASC"},{"QuerySetId":747147,"Title":"How many times is a particular number the first digit in a byte count.","Description":null,"QueryBody":"SELECT COUNT(ID) FROM POSTS WHERE LOWER(BODY) LIKE '% 9% byte%'","CreationDate":"2017-10-27 03:50:06","validated":false,"QueryBody_Original":"SELECT  COUNT(ID) FROM POSTS WHERE lower(BODY) LIKE '% 9% byte%';"},{"QuerySetId":747684,"Title":"Historical question grades by week","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Users","CreationDate":"2020-06-18 17:03:18","validated":false,"QueryBody_Original":"SELECT  count(Id) from Users"},{"QuerySetId":747825,"Title":"Number of posts by tag and date","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Tags LIKE '%kotlin%' AND YEAR(CreationDate) = 2017 GROUP BY MONTH(CreationDate)","CreationDate":"2017-10-28 02:45:18","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts\nWHERE Tags LIKE '%kotlin%' AND YEAR(CreationDate) = 2017\nGROUP BY MONTH(CreationDate)"},{"QuerySetId":748633,"Title":"What election badge am I missing?","Description":null,"QueryBody":"SELECT sq.name FROM (SELECT 'Copy Editor' AS name) AS sq LEFT JOIN badges ON badges.name = sq.name WHERE badges.name IS NULL","CreationDate":"2020-05-20 02:17:16","validated":false,"QueryBody_Original":"SELECT  sq.name  from \n  (SELECT 'Copy Editor' as name) sq LEFT JOIN\n  badges on badges.name = sq.name\n  where badges.name IS NULL"},{"QuerySetId":748820,"Title":"FB questions with low scoring answers and no accepted answer","Description":null,"QueryBody":"SELECT q.id AS \"Post Link\", q.creationdate, COUNT(a.id) AS answers, MAX(a.score) AS max_score FROM posts AS q LEFT JOIN posts AS a ON a.parentid = q.id WHERE q.posttypeid = 1 AND q.AcceptedAnswerID IS NULL AND q.tags LIKE '%fantastic-beasts%' AND q.deletiondate IS NULL AND q.closeddate IS NULL GROUP BY q.id, q.creationdate HAVING MAX(a.score) < 10 ORDER BY max_score, creationdate","CreationDate":"2017-11-23 01:20:00","validated":false,"QueryBody_Original":"SELECT \n  q.id AS [Post Link],\n  q.creationdate,\n  COUNT(a.id) AS answers,\n  MAX(a.score) AS max_score\nFROM posts q\nLEFT JOIN posts a ON a.parentid = q.id\nWHERE q.posttypeid = 1\n  AND q.AcceptedAnswerID IS NULL\n  AND q.tags LIKE '%fantastic-beasts%'\n  AND q.deletiondate IS NULL\n  AND q.closeddate IS NULL\nGROUP BY\n  q.id,\n  q.creationdate\nHAVING MAX(a.score) < 10\nORDER BY\n  max_score,\n  creationdate"},{"QuerySetId":749905,"Title":"What proportion of bounties are claimed?","Description":"https:\/\/meta.stackexchange.com\/questions\/76757\/what-proportion-of-bounties-are-claimed","QueryBody":"SELECT 'overall total' AS \"per tag totals\", (SELECT COUNT(*) FROM votes AS v WHERE votetypeid = 8) AS total, (SELECT COUNT(*) FROM posts AS p INNER JOIN votes AS v ON v.postid = p.acceptedanswerid \/* bountyclose on the answer *\/ WHERE v.votetypeid = 9 \/* bounty close *\/ AND p.posttypeid = 1) AS claimed","CreationDate":"2017-11-02 22:40:23","validated":false,"QueryBody_Original":"SELECT  \n'overall total' as [per tag totals]\n,\n( SELECT count(*) \n  from votes v\n  where votetypeid = 8\n) as total\n, \n(\n  SELECT count(*)\n  from posts p\n  inner join votes v on v.postid = p.acceptedanswerid -- bountyclose on the answer\n  where v.votetypeid = 9 -- bounty close\n  and p.posttypeid = 1\n) as claimed"},{"QuerySetId":750837,"Title":"dup posts from same user","Description":null,"QueryBody":"SELECT x.originalId AS \"Post Link\", x.originalUser AS \"User Link\", x.dupId AS \"Post Link\", originalTags AS tags FROM posts AS dupPosts JOIN (SELECT dups.originalId, originalPosts.owneruserid AS originalUser, dups.dupId, originalPosts.tags AS originalTags FROM posts AS originalPosts JOIN (SELECT PostId AS originalId, RelatedPostId AS dupId FROM postlinks WHERE linktypeid = 3) AS dups ON originalPosts.id = dups.originalId WHERE LOWER(originalPosts.tags) LIKE LOWER('%##originalTagsPattern?>##%')) AS x ON x.dupId = dupPosts.id WHERE originalUser = dupPosts.owneruserid ORDER BY RAND()","CreationDate":"2017-11-02 01:51:00","validated":false,"QueryBody_Original":"SELECT \n  x.originalId as [Post Link],\n  x.originalUser as [User Link],\n  x.dupId as [Post Link],\n  originalTags as tags\nfrom\nposts dupPosts\njoin\n(SELECT dups.originalId, originalPosts.owneruserid as originalUser,\n        dups.dupId, originalPosts.tags as originalTags\nfrom posts originalPosts\njoin\n(SELECT PostId as originalId, RelatedPostId as dupId\nfrom postlinks\nwhere linktypeid = 3) as dups\non originalPosts.id = dups.originalId\nwhere lower(originalPosts.tags) like lower('%##originalTagsPattern?>##%')\n) as x\non x.dupId = dupPosts.id\nwhere\n  originalUser = dupPosts.owneruserid\norder by RAND()"},{"QuerySetId":750888,"Title":"Victoria BC oldest users ","Description":null,"QueryBody":"SELECT Id AS \"User Link\", DisplayName, WebsiteUrl, Location FROM Users WHERE Location LIKE N'Victoria,BC%' ORDER BY age DESC LIMIT 100","CreationDate":"2017-11-02 02:49:49","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id as [User Link],\n   DisplayName,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'Victoria,BC%' \nORDER BY\n   age DESC"},{"QuerySetId":751000,"Title":"Highest Reputation with Tags ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Location, Id AS \"Post Link\", Reputation AS Tags FROM Users WHERE Location LIKE '%Victoria%' AND Reputation >= 5000 ORDER BY Reputation DESC LIMIT 10","CreationDate":"2017-11-02 04:16:40","validated":false,"QueryBody_Original":"SELECT  TOP 10 \nROW_NUMBER() OVER (ORDER BY Reputation DESC) AS [#], \n    Location,\n    Id AS [Post Link], \n    Reputation\n    Tags\nFROM\n    Users\nWHERE\n    Location like '%Victoria%'\n    AND Reputation >= 5000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":751284,"Title":"Top users from Innsbruck, Austria","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%innsbruck%' OR UPPER(Location) LIKE '%INNSBRUCK%' OR Location LIKE '%Innsbruck%' ORDER BY Reputation DESC","CreationDate":"2017-11-02 18:59:05","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%innsbruck%'\n    OR UPPER(Location) LIKE '%INNSBRUCK%'\n    or Location like '%Innsbruck%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":751819,"Title":"Top New York City JavaScript answerers","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, u.websiteurl, COUNT(*) AS JavaScriptAnswers FROM Users AS u, Posts AS p, Posts AS pp WHERE u.Id IN (SELECT Id FROM Users WHERE Location LIKE ('%New York')) AND p.OwnerUserId = u.Id AND pp.Id = p.ParentId AND pp.Tags LIKE ('%<javascript>%') GROUP BY u.DisplayName, u.Reputation, u.websiteurl ORDER BY JavaScriptAnswers DESC","CreationDate":"2018-02-14 00:13:05","validated":false,"QueryBody_Original":"SELECT  u.DisplayName, u.Reputation, u.websiteurl, count(*) as JavaScriptAnswers from Users u, Posts p, Posts pp where u.Id in (\n    SELECT Id\n    from Users \n    where Location like ('%New York')\n  )\n  and p.OwnerUserId = u.Id\n  and pp.Id = p.ParentId\n  and pp.Tags like ('%<javascript>%')\n  group by u.DisplayName, u.Reputation, u.websiteurl\n  order by JavaScriptAnswers desc"},{"QuerySetId":751894,"Title":"Old Questions that Need Answering","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", COUNT(*) AS \"Bumps\" FROM PostHistory AS ph JOIN Posts AS p ON ph.PostId = p.Id WHERE PostHistoryTypeId = 50 \/* Community bump = PostHistoryType 50 *\/ AND p.AnswerCount = 0 GROUP BY ph.PostId ORDER BY \"Bumps\" DESC","CreationDate":"2017-11-03 01:36:26","validated":false,"QueryBody_Original":"SELECT  ph.PostId as [Post Link], COUNT(*) \"Bumps\"\nFROM PostHistory ph JOIN Posts p ON ph.PostId = p.Id\nWHERE PostHistoryTypeId = 50  -- Community bump = PostHistoryType 50\n  and p.AnswerCount = 0\nGROUP BY ph.PostId\nORDER BY \"Bumps\" DESC"},{"QuerySetId":752509,"Title":"Query to get all posts in 2017","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE YEAR(Posts.CreationDate) = 2017","CreationDate":"2018-03-29 18:08:46","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nfrom Posts \nWHERE YEAR(Posts.CreationDate) = 2017"},{"QuerySetId":753122,"Title":"Find my high score comments","Description":null,"QueryBody":"SELECT * FROM comments WHERE score > 5 AND userdisplayname = 'Rbarryyoung'","CreationDate":"2017-11-06 23:51:54","validated":false,"QueryBody_Original":"SELECT  *\nfrom comments\nwhere score > 5\nand userdisplayname ='Rbarryyoung'"},{"QuerySetId":753213,"Title":"gg test of poorly answer questions for apps","Description":null,"QueryBody":"SELECT * FROM posts WHERE AnswerCount > 5 AND CommentCount > 5 AND viewcount > 50 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND AcceptedAnswerId IS NULL AND Tags LIKE '%##Tag1##%' AND CreationDate > '2015-12-21'","CreationDate":"2017-11-07 01:05:39","validated":false,"QueryBody_Original":"SELECT  *\nfrom posts\nwhere AnswerCount>5 \nand CommentCount>5 \nand viewcount >50 \nand CommunityOwnedDate is null \nand ClosedDate is null \nand AcceptedAnswerId is null\nand Tags LIKE '%##Tag1##%'\nAND CreationDate > '2015-12-21'"},{"QuerySetId":753242,"Title":"Test of Poorly Answer Questions by Tag","Description":null,"QueryBody":"SELECT * FROM posts\/* and CommunityOwnedDate is null *\/ \/* and CommentCount>2 *\/  WHERE AnswerCount > 2 AND viewcount > 20 AND ClosedDate IS NULL AND AcceptedAnswerId IS NULL AND Tags LIKE '%##Tag1##%' AND CreationDate > '2015-12-21'","CreationDate":"2017-11-07 01:38:56","validated":false,"QueryBody_Original":"SELECT  *\nfrom posts\nwhere AnswerCount>2 \n--and CommentCount>2\nand viewcount >20 \n--and CommunityOwnedDate is null \nand ClosedDate is null \nand AcceptedAnswerId is null\nand Tags LIKE '%##Tag1##%'\nAND CreationDate > '2015-12-21'"},{"QuerySetId":755133,"Title":"StackOverflow Users in Sri Lanka","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%Sri Lanka%' ORDER BY Reputation DESC","CreationDate":"2017-11-09 14:55:26","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Location LIKE '%Sri Lanka%' ORDER BY Reputation DESC;"},{"QuerySetId":755415,"Title":"How many new users today?","Description":null,"QueryBody":"SELECT SUM(TIME_TO_STR(CreationDate, '%d')) FROM Posts","CreationDate":"2018-03-21 14:41:09","validated":false,"QueryBody_Original":"SELECT \nsum(datepart(day,CreationDate))\nfrom Posts"},{"QuerySetId":755877,"Title":"SELECT DisplayName, Id, Location, Reputation  FROM Users ","Description":"\r\n","QueryBody":"SELECT DisplayName, id, location, reputation FROM USERS WHERE reputation >= 550000","CreationDate":"2017-11-11 08:13:19","validated":false,"QueryBody_Original":"SELECT  DisplayName, id, location, reputation\nfrom USERS\nwhere reputation >= 550000"},{"QuerySetId":757090,"Title":"Top users answering by city","Description":null,"QueryBody":"SELECT users.DisplayName, users.location, users.Id, users.Reputation FROM users WHERE (LOWER(users.location) LIKE '%bengaluru%') ORDER BY 4 DESC","CreationDate":"2017-12-04 16:56:09","validated":false,"QueryBody_Original":"SELECT  users.DisplayName, users.location, users.Id, users.Reputation\nfrom users\nwhere ( lower(users.location) like '%bengaluru%')\norder by 4 desc"},{"QuerySetId":757144,"Title":"Rank in Germany based on reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Views, AccountId, Age, UpVotes, DownVotes FROM Users WHERE LOWER(Location) LIKE LOWER('%Germany%') AND Reputation >= 578 ORDER BY Reputation","CreationDate":"2017-12-20 22:14:44","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Reputation,\n    Views,\n    AccountId,\n    Age,\n    UpVotes,\n    DownVotes\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%Germany%')    \n    And Reputation >= 578\n    \n-- Code below enables user to input the min. limit of reputation for the query\n-- And Reputation >= ##Repuation##\nORDER BY\n    Reputation ASC;"},{"QuerySetId":757260,"Title":"Top users by average score","Description":null,"QueryBody":"SELECT OwnerUserId, AvgScore, CountAnswers FROM (SELECT OwnerUserId, AVG(Score) AS AvgScore, COUNT(*) AS CountAnswers FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId) AS x WHERE CountAnswers >= 10 ORDER BY AvgScore DESC","CreationDate":"2017-11-13 21:07:15","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, AvgScore, CountAnswers\nFROM (\nSELECT OwnerUserId, AVG(Score) AvgScore, Count(*) CountAnswers\nFROM Posts\nWHERE PostTypeId = 2\nGROUP BY OwnerUserId\n) x\nWHERE CountAnswers >= 10\nORDER BY AvgScore DESC"},{"QuerySetId":757281,"Title":"From Which Countries DSP users are?","Description":null,"QueryBody":"SELECT Location, COUNT(*) AS \"Count\" FROM Users WHERE Reputation >= 100 GROUP BY Location ORDER BY Count DESC","CreationDate":"2017-11-13 22:29:24","validated":false,"QueryBody_Original":"SELECT   Location, COUNT(*) \"Count\"\nFROM\n    Users\nWHERE \n    Reputation >= 100\nGROUP BY\n    Location\nORDER BY\n    Count DESC"},{"QuerySetId":758528,"Title":"Number of posts talking about privacy","Description":null,"QueryBody":"SELECT tagname, tags.count FROM tags","CreationDate":"2017-11-14 19:34:51","validated":false,"QueryBody_Original":"SELECT  tagname, tags.count from tags"},{"QuerySetId":759221,"Title":"Tags with plus (+) in their name","Description":null,"QueryBody":"SELECT t.TagName AS \"Tag Name\", COALESCE('site:\/\/q\/' + CAST(t.WikiPostId AS TEXT) + '|' + LEFT(e.Body, 100) + '...', '{empty}') AS \"Tag Info\" FROM Tags AS t LEFT JOIN Posts AS e ON e.Id = t.ExcerptPostId WHERE t.TagName LIKE '%+%' ORDER BY t.TagName","CreationDate":"2017-11-16 01:52:14","validated":false,"QueryBody_Original":"SELECT       t.TagName       AS 'Tag Name',\n            \/* Excerpts that are too long, bust the link. *\/\n            COALESCE (\n                'site:\/\/q\/' + CAST(t.WikiPostId AS nvarchar) + '|' + LEFT(e.Body, 100) + '...', '{empty}'\n            )\n            AS 'Tag Info'\nFROM        Tags            t\nLEFT JOIN   Posts           e on e.Id = t.ExcerptPostId\nWHERE       t.TagName       like '%+%'\nORDER BY    t.TagName"},{"QuerySetId":759241,"Title":"Search question and most voted answer","Description":null,"QueryBody":"SELECT p.Title, p.Id, p.Score, a.Score AS \"Post Link\", a.Score AS \"Accepted Score\", u.DisplayName AS \"Asker\", au.DisplayName AS \"Answerer\" FROM Posts AS p JOIN Posts AS a ON p.AcceptedAnswerId = a.Id JOIN Users AS u ON p.OwnerUserId = u.Id JOIN Users AS au ON a.OwnerUserId = au.Id WHERE p.PostTypeId = 1 AND p.Score >= 25 AND NOT p.AcceptedAnswerId IS NULL ORDER BY p.Score DESC","CreationDate":"2017-11-16 04:25:04","validated":false,"QueryBody_Original":"SELECT  p.Title, p.Id, p.Score, a.Score AS [Post Link], a.Score AS \"Accepted Score\", \nu.DisplayName AS \"Asker\", au.DisplayName AS \"Answerer\"\n  \nFROM Posts p\nJOIN Posts a ON p.AcceptedAnswerId = a.Id\nJOIN Users u ON p.OwnerUserId = u.Id\nJOIN Users au ON a.OwnerUserId = au.Id\nWHERE p.PostTypeId = 1\nAND p.Score >= 25\nand p.AcceptedAnswerId IS NOT NULL\nORDER BY p.Score DESC"},{"QuerySetId":759893,"Title":"Average Post Score for IPS","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", COUNT(p.Id) AS \"Number of Posts\", AVG(p.Score) AS \"Average Score per Post\" FROM Posts AS p GROUP BY p.OwnerUserId HAVING COUNT(p.Id) > 3 ORDER BY AVG(p.Score) DESC","CreationDate":"2017-11-17 15:19:36","validated":false,"QueryBody_Original":"SELECT \np.OwnerUserId AS [User Link],\nCOUNT(p.Id) AS [Number of Posts],\nAVG(p.Score) AS [Average Score per Post]\n\nFROM Posts AS p\nGROUP BY p.OwnerUserId\nHAVING COUNT(p.Id) > 3\nORDER BY AVG(p.Score) DESC"},{"QuerySetId":760867,"Title":"Nombre de r\u00e9ponses par utilisateur \u00e0 haute r\u00e9putation","Description":null,"QueryBody":"SELECT u.Id, u.Reputation, u.DisplayName, TIME_TO_STR(p.CreationDate, '%YEAR') AS Year, TIME_TO_STR(p.CreationDate, '%-mONT%-H') AS Month, COUNT(*) AS Count FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE TIME_TO_STR(p.CreationDate, '%Year') = 2017 AND p.PostTypeId = 2 AND u.Reputation >= 20000 GROUP BY u.Id, u.Reputation, u.DisplayName, TIME_TO_STR(p.CreationDate, '%YEAR'), TIME_TO_STR(p.CreationDate, '%-mONT%-H') ORDER BY -Reputation, u.Id, Year, Month","CreationDate":"2017-11-20 13:22:34","validated":false,"QueryBody_Original":"SELECT  u.Id, u.Reputation, u.DisplayName, DATEPART(YEAR, p.CreationDate) as Year, DATEPART(MONTH, p.CreationDate) as Month, Count(*) as Count \n        FROM Users u\n        inner join Posts p on u.Id = p.OwnerUserId\n        where DATEPART(Year, p.CreationDate) = 2017 and \n        p.PostTypeId = 2\n        and u.Reputation >= 20000\n        GROUP BY u.Id, u.Reputation, u.DisplayName, DATEPART(YEAR, p.CreationDate), DATEPART(MONTH, p.CreationDate)\n        ORDER BY -Reputation, u.Id, Year, Month ASC"},{"QuerySetId":760908,"Title":"Get java posts with more that 100 score","Description":null,"QueryBody":"SELECT score, CreationDate, tags FROM Posts WHERE posts.Score > 100 AND postTypeID = 1 AND CreationDate > '2017-01-01'","CreationDate":"2017-11-20 19:02:00","validated":false,"QueryBody_Original":"SELECT  score, CreationDate, tags from Posts\nwhere posts.Score > 100\nAND postTypeID = 1\nAND CreationDate > '2017-01-01';"},{"QuerySetId":761094,"Title":"Number of question and answers in SO","Description":null,"QueryBody":"SELECT p.PostTypeId, p.body FROM Posts AS p \/* 1 is question, 2 is answer *\/ WHERE p.PostTypeId IN (1, 2)","CreationDate":"2017-11-21 03:49:40","validated":false,"QueryBody_Original":"SELECT  p.PostTypeId, p.body FROM Posts p\nWHERE p.PostTypeId IN (1, 2) -- 1 is question, 2 is answer"},{"QuerySetId":761324,"Title":"Linux Engineers (AboutMe contains Linux Engineer related keywords)","Description":null,"QueryBody":"SELECT DISTINCT CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.DisplayName, u.Reputation, u.Location, u.WebsiteUrl, REPLACE(REPLACE(u.AboutMe, CHAR(13), ''), CHAR(10), '') AS AboutMe FROM Users AS u WHERE (u.AboutMe LIKE '%linux%' OR u.AboutMe LIKE '%ubuntu%' OR u.AboutMe LIKE '%unix%' OR u.AboutMe LIKE '%red hat%' OR u.AboutMe LIKE '%fedora project%' OR u.AboutMe LIKE '%ovirt%') AND (u.AboutMe LIKE '%admin%' OR u.AboutMe LIKE '%engineer%') ORDER BY u.Reputation DESC","CreationDate":"2019-11-28 21:27:11","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link],\n  u.DisplayName,\n  u.Reputation, \n  u.Location,\n  u.WebsiteUrl, \n  REPLACE(REPLACE(u.AboutMe, CHAR(13), ''), CHAR(10), '') as AboutMe\n\nFROM Users u\n  \nWHERE \n  (u.AboutMe LIKE '%linux%' OR u.AboutMe LIKE '%ubuntu%' OR u.AboutMe LIKE '%unix%' OR u.AboutMe LIKE '%red hat%' OR u.AboutMe LIKE '%fedora project%' OR u.AboutMe LIKE '%ovirt%') \n  AND (u.AboutMe LIKE '%admin%' OR u.AboutMe LIKE '%engineer%')\n  -- AboutMe LIKE '%_@_%_.__%' -- AboutMe contains something that looks like an email id\n  -- AboutMe LIKE '%linkedin%' -- AboutMe contains something that looks like a linkedin link\n  -- WebsiteUrl > '' -- WebsiteUrl is not blank\n  \nORDER BY \n  u.Reputation DESC;"},{"QuerySetId":761407,"Title":"Get Questions with Title and Tags","Description":null,"QueryBody":"SELECT Id, Title, Body, Tags FROM Posts WHERE Id > 2494470 AND PostTypeId = 1 ORDER BY Id","CreationDate":"2017-11-21 20:58:43","validated":false,"QueryBody_Original":"SELECT  Id, Title, Body, Tags FROM Posts\nWHERE Id > 2494470\n  AND PostTypeId = 1\nORDER BY Id ASC;"},{"QuerySetId":761794,"Title":"User, who has asked the most questions","Description":null,"QueryBody":"SELECT users.id, users.displayname, COUNT(posts.id) AS post_count FROM users LEFT JOIN posts ON users.id = posts.owneruserid WHERE posttypeid = 1 GROUP BY users.id, users.displayname, users.reputation ORDER BY post_count DESC, users.displayname DESC LIMIT 50000","CreationDate":"2018-03-14 00:27:28","validated":false,"QueryBody_Original":"SELECT  TOP(50000) users.id, users.displayname, COUNT(posts.id) AS post_count\nFROM users LEFT JOIN  posts\nON users.id = posts.owneruserid\nWHERE posttypeid=1\nGROUP BY users.id, users.displayname, users.reputation\nORDER BY post_count DESC, users.displayname DESC"},{"QuerySetId":761810,"Title":"SWL questions with low scoring answers and no accepted answer","Description":null,"QueryBody":"SELECT q.id AS \"Post Link\", q.creationdate, COUNT(a.id) AS answers, MAX(a.score) AS max_score FROM posts AS q LEFT JOIN posts AS a ON a.parentid = q.id WHERE q.posttypeid = 1 AND q.AcceptedAnswerID IS NULL AND q.tags LIKE '%star-trek%' AND q.deletiondate IS NULL AND q.closeddate IS NULL GROUP BY q.id, q.creationdate HAVING MAX(a.score) < 10 ORDER BY max_score, creationdate","CreationDate":"2017-11-23 01:58:53","validated":false,"QueryBody_Original":"SELECT \n  q.id AS [Post Link],\n  q.creationdate,\n  COUNT(a.id) AS answers,\n  MAX(a.score) AS max_score\nFROM posts q\nLEFT JOIN posts a ON a.parentid = q.id\nWHERE q.posttypeid = 1\n  AND q.AcceptedAnswerID IS NULL\n  AND q.tags LIKE '%star-trek%'\n  AND q.deletiondate IS NULL\n  AND q.closeddate IS NULL\nGROUP BY\n  q.id,\n  q.creationdate\nHAVING MAX(a.score) < 10\nORDER BY\n  max_score,\n  creationdate"},{"QuerySetId":763089,"Title":"Average number of comments per question by score (deleted questions excluded)","Description":null,"QueryBody":"SELECT COALESCE(Score, 0), AVG(1.0 * COALESCE(CommentCount, 0)) FROM Posts WHERE PostTypeId = 1 AND ABS(COALESCE(Score, 0)) <= 20 GROUP BY COALESCE(Score, 0) ORDER BY COALESCE(Score, 0)","CreationDate":"2017-11-25 06:46:49","validated":false,"QueryBody_Original":"SELECT  isnull(Score, 0),\n       avg(1.0*isnull(CommentCount, 0))\n       \nfrom Posts\nwhere PostTypeId = 1 \n      and abs(isnull(Score, 0)) <= 20\ngroup by isnull(Score, 0)\norder by isnull(Score, 0)"},{"QuerySetId":763621,"Title":"Get the Posts for programming languages","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%java'","CreationDate":"2017-11-27 09:55:43","validated":false,"QueryBody_Original":"SELECT  * from Posts where Tags like '%java';"},{"QuerySetId":763950,"Title":"Search posts by comment text","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%You''re right%') ORDER BY Score DESC","CreationDate":"2017-11-27 19:42:29","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('%You''re right%')\n ORDER BY Score DESC"},{"QuerySetId":764538,"Title":"Question with 100+ answers, all upvoted","Description":null,"QueryBody":"SELECT Q.Id, Q.Title, Q.AnswerCount, MIN(A.Score) FROM Posts AS Q JOIN Posts AS A ON A.ParentID = Q.Id WHERE Q.AnswerCount >= 100 AND Q.ClosedDate IS NULL AND A.DeletionDate IS NULL GROUP BY Q.Id, Q.Title, Q.AnswerCount ORDER BY MIN(A.Score) DESC","CreationDate":"2017-11-29 00:18:13","validated":false,"QueryBody_Original":"SELECT  Q.Id, Q.Title, Q.AnswerCount, MIN(A.Score) FROM Posts AS Q JOIN Posts AS A ON A.ParentID = Q.Id WHERE Q.AnswerCount >= 100 AND Q.ClosedDate IS NULL AND A.DeletionDate IS NULL GROUP BY Q.Id, Q.Title, Q.AnswerCount ORDER BY MIN(A.Score) DESC;"},{"QuerySetId":764645,"Title":"Total number of comments that contains keyword by year and month","Description":null,"QueryBody":"SELECT CAST(YEAR(CreationDate) AS TEXT(4)) + '-' + RIGHT('00' + CAST(MONTH(CreationDate) AS TEXT(2)), 2) AS year_month, COUNT(*) AS total FROM Comments WHERE (UPPER(Text) LIKE '%DEVOPS%') GROUP BY CAST(YEAR(CreationDate) AS TEXT(4)) + '-' + RIGHT('00' + CAST(MONTH(CreationDate) AS TEXT(2)), 2) ORDER BY CAST(YEAR(CreationDate) AS TEXT(4)) + '-' + RIGHT('00' + CAST(MONTH(CreationDate) AS TEXT(2)), 2)","CreationDate":"2017-11-29 05:31:08","validated":false,"QueryBody_Original":"SELECT    \n  CAST(YEAR(CreationDate) AS VARCHAR(4)) + \n  '-' + right('00' + CAST(MONTH(CreationDate) AS VARCHAR(2)), 2)\n  AS year_month\n  , count(*) AS total\nFROM Comments\nWHERE \n  (UPPER(Text)\n  Like\n  '%DEVOPS%')\n  --AND\n  --CreationDate >= CAST('2008-01-01' AS datetime)\n  --AND\n  --CreationDate < CAST('2011-01-01' AS datetime)\nGROUP BY \n  CAST(YEAR(CreationDate) AS VARCHAR(4)) + \n  '-' + right('00' + CAST(MONTH(CreationDate) AS VARCHAR(2)), 2)\nORDER BY \n  CAST(YEAR(CreationDate) AS VARCHAR(4)) + \n  '-' + right('00' + CAST(MONTH(CreationDate) AS VARCHAR(2)), 2)"},{"QuerySetId":764789,"Title":"user with max accepted answers","Description":null,"QueryBody":"SELECT * FROM users WHERE id = 1144035","CreationDate":"2017-11-29 16:58:20","validated":false,"QueryBody_Original":"SELECT  * from users where id = 1144035"},{"QuerySetId":765426,"Title":"select * from Posts where tags like '%android%' and tags like '%material-design%\u2019","Description":null,"QueryBody":"SELECT * FROM Posts AS p JOIN Posts AS a ON a.id = p.parentid WHERE a.tags LIKE '%material-design%' AND a.tags LIKE '%android%' AND a.answercount > 0","CreationDate":"2017-12-01 09:30:12","validated":false,"QueryBody_Original":"SELECT  * from Posts p\njoin Posts a on a.id = p.parentid\nwhere a.tags like '%material-design%' and a.tags like '%android%'\nand a.answercount > 0"},{"QuerySetId":765882,"Title":"Most viewed MySQL related questions","Description":null,"QueryBody":"SELECT ViewCount, Title FROM Posts WHERE Tags LIKE '%mysql%'","CreationDate":"2017-12-01 19:10:59","validated":false,"QueryBody_Original":"SELECT  ViewCount, Title from Posts where Tags like '%mysql%'"},{"QuerySetId":766019,"Title":"Count java posts in August 2017","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE tags LIKE '%<java>%' AND MONTH(creationdate) = 8 AND YEAR(creationdate) = 2017","CreationDate":"2017-12-02 00:05:54","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom posts\nwhere tags like '%<java>%'\nand Month(creationdate) = 8\nand year(creationdate) = 2017"},{"QuerySetId":766277,"Title":"Get number of questions for tag [typo3]","Description":null,"QueryBody":"SELECT Count FROM Tags WHERE TagName = 'typo3'","CreationDate":"2017-12-03 02:11:55","validated":false,"QueryBody_Original":"SELECT  Count From Tags Where TagName = 'typo3'"},{"QuerySetId":766490,"Title":"Marshals ordered by number of downvotes","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Downvotes FROM users AS u INNER JOIN badges AS b ON u.Id = b.UserId WHERE b.Name = 'Marshal' ORDER BY u.Downvotes DESC","CreationDate":"2017-12-03 23:17:30","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link], u.Downvotes\n  FROM users AS u INNER JOIN badges AS b ON u.Id = b.UserId\n  WHERE b.Name = 'Marshal'\n  ORDER BY u.Downvotes DESC"},{"QuerySetId":766887,"Title":"DC MD VA Python Skill search","Description":"Find users by tag score and location","QueryBody":"SELECT Users.Id AS \"User Link\", Users.WebsiteUrl, DisplayName, Location, Users.Reputation FROM Users INNER JOIN Votes ON Votes.UserId = Users.id INNER JOIN Posts ON Posts.Id = Votes.PostId \/* inner join VoteTypes on VoteTypes.id = Votes.VoteTypeId\n  inner join PostTypes on PostTypes.id = Posts.PostTypeId *\/ WHERE (Users.Location LIKE '%bangalore%' OR Users.Location LIKE '%bengaluru%' OR Users.Location LIKE '%hyderabad%') AND Posts.Tags LIKE '%java%' ORDER BY 5 DESC","CreationDate":"2017-12-20 12:18:28","validated":false,"QueryBody_Original":"SELECT \n  Users.Id [User Link],\n  Users.WebsiteUrl,\n  DisplayName,\n  Location,\n  Users.Reputation\nfrom\n  Users\n  inner join Votes on Votes.UserId = Users.id\n  inner join Posts on Posts.Id = Votes.PostId\n  \/*inner join VoteTypes on VoteTypes.id = Votes.VoteTypeId\n  inner join PostTypes on PostTypes.id = Posts.PostTypeId*\/\nwhere\n  (Users.Location like '%bangalore%' or \n  Users.Location like '%bengaluru%' or \n  Users.Location like '%hyderabad%')and\n  Posts.Tags like '%java%'\norder by 5 desc"},{"QuerySetId":767145,"Title":"select top 12 DisplayName from Users","Description":null,"QueryBody":"SELECT 12 AS DisplayName FROM Users","CreationDate":"2017-12-05 18:03:01","validated":false,"QueryBody_Original":"SELECT  12 DisplayName from Users"},{"QuerySetId":767338,"Title":"Currently Protected Questions, simple search","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", ph.CreationDate AS \"Protected Date\", CASE ph.UserId WHEN NULL THEN ph.UserDisplayName ELSE ph.UserId END AS \"User Link\" FROM PostHistory AS ph WHERE ph.PostHistoryTypeId = 19 \/* protected *\/ ORDER BY ph.PostId, ph.CreationDate","CreationDate":"2018-04-05 03:26:47","validated":false,"QueryBody_Original":"SELECT \n    ph.PostId           AS [Post Link],\n    ph.CreationDate     AS [Protected Date],\n    CASE ph.UserId\n        WHEN NULL       THEN ph.UserDisplayName\n        ELSE            ph.UserId\n    END AS [User Link]\nFROM        PostHistory ph\nWHERE       ph.PostHistoryTypeId = 19  -- protected\nORDER BY    ph.PostId, ph.CreationDate"},{"QuerySetId":767762,"Title":"Top Comments of all time","Description":null,"QueryBody":"SELECT Score, Text FROM Comments ORDER BY Score DESC","CreationDate":"2017-12-06 15:20:16","validated":false,"QueryBody_Original":"SELECT  Score, Text from Comments order by Score desc"},{"QuerySetId":767840,"Title":"Top Syrian Developers on SO","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, CreationDate, LastAccessDate, Views FROM Users WHERE LOWER(Location) LIKE '%syria%' ORDER BY Reputation DESC","CreationDate":"2017-12-06 19:14:39","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    CreationDate,\n    LastAccessDate,\n    Views\nFROM\n    Users\nWHERE\n    LOWER(Location) like '%syria%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":768479,"Title":"Final outcome of all questions posted","Description":null,"QueryBody":"SELECT SUM(CASE WHEN PostHistoryTypeId = 10 THEN 1 ELSE 0 END), SUM(CASE WHEN PostHistoryTypeId = 11 THEN 1 ELSE 0 END) FROM PostHistory","CreationDate":"2017-12-08 02:19:42","validated":false,"QueryBody_Original":"SELECT  \n    sum(case when PostHistoryTypeId = 10 then 1 else 0 end),\n    sum(case when PostHistoryTypeId = 11 then 1 else 0 end)\nFROM PostHistory;"},{"QuerySetId":768605,"Title":"CDA Cloud-Gazing: Azure Python Questions","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('Azure') ORDER BY Score DESC","CreationDate":"2017-12-08 13:20:12","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('Azure')\n ORDER BY Score DESC"},{"QuerySetId":768896,"Title":"Top deleted users, with dates of first and last posts","Description":null,"QueryBody":"SELECT p.OwnerDisplayName, SUM(p.Score) AS \"Total Score\", COUNT(p.Id) AS \"Number of Posts\", MIN(p.CreationDate) AS \"First Post\", MAX(p.CreationDate) AS \"Last Post\", DATEDIFF(MAX(p.CreationDate), MIN(p.CreationDate)) AS Duration FROM Posts AS p WHERE p.OwnerUserId IS NULL GROUP BY p.OwnerDisplayName ORDER BY MAX(p.CreationDate) DESC","CreationDate":"2019-05-10 19:53:08","validated":false,"QueryBody_Original":"SELECT  p.OwnerDisplayName, \n    SUM(p.Score) AS [Total Score], \n    COUNT(p.Id) AS [Number of Posts],  \n    MIN(p.CreationDate) as [First Post],\n    MAX(p.CreationDate) as [Last Post],\n    DATEDIFF(day, MIN(p.CreationDate), MAX(p.CreationDate)) as Duration\nFROM Posts p\nWHERE p.OwnerUserId IS NULL\nGROUP BY p.OwnerDisplayName\nORDER BY MAX(p.CreationDate) DESC"},{"QuerySetId":769046,"Title":"select * from Posts where Id=311703","Description":null,"QueryBody":"SELECT * FROM Posts WHERE ParentId = 311703","CreationDate":"2017-12-10 20:43:58","validated":false,"QueryBody_Original":"SELECT  * from Posts where ParentId=311703"},{"QuerySetId":769333,"Title":"Identify users by reputation across sites","Description":null,"QueryBody":"SELECT u1.Id AS \"User Link\", u2.Reputation FROM StackOverflow.dbo.Users AS u1 INNER JOIN \"StackExchange.Meta\".dbo.Users AS u2 ON u1.AccountId = u2.AccountId WHERE u1.Reputation BETWEEN 65000 AND 67000 AND u2.Reputation BETWEEN 12000 AND 14000 LIMIT 10","CreationDate":"2017-12-11 17:29:12","validated":false,"QueryBody_Original":"SELECT  TOP 10 u1.Id AS [User Link], u2.Reputation\n  FROM StackOverflow.dbo.Users AS u1\n  INNER JOIN [StackExchange.Meta].dbo.Users AS u2\n    ON u1.AccountId = u2.AccountId\n  WHERE u1.Reputation BETWEEN 65000 AND 67000\n    AND u2.Reputation BETWEEN 12000 AND 14000"},{"QuerySetId":769648,"Title":"Get question and answer votes","Description":null,"QueryBody":"SELECT Id, Score FROM Posts WHERE Id IN (9437139, 10546229)","CreationDate":"2017-12-12 01:36:25","validated":false,"QueryBody_Original":"SELECT  Id, Score from Posts where Id in (\n9437139, 10546229\n)"},{"QuerySetId":769767,"Title":"select * from Posts where Id=76622","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id = 76622","CreationDate":"2018-04-27 06:13:28","validated":false,"QueryBody_Original":"SELECT  * from Users where Id=76622"},{"QuerySetId":769969,"Title":"TOP 1000 Answered questions - WP","Description":null,"QueryBody":"SELECT Score, ViewCount, Body, Title, Tags FROM Posts WHERE Tags LIKE '%<windows-phone%' AND PostTypeId = 1 AND AnswerCount = 0 AND CommentCount = 0 ORDER BY ViewCount DESC LIMIT 1000","CreationDate":"2017-12-13 04:23:29","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Score, ViewCount, Body, Title, Tags\nFROM Posts\nWHERE Tags like '%<windows-phone%'\nand PostTypeId = 1 \nand AnswerCount = 0 and CommentCount = 0\nORDER BY ViewCount DESC"},{"QuerySetId":769995,"Title":"Get Posts with at least three answers","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Id DESC), * FROM Posts AS a WHERE a.AnswerCount >= 3 AND a.PostTypeId = 1 AND NOT a.OwnerUserId IN (SELECT OwnerUserId FROM Posts AS p WHERE p.PostTypeId = 2 AND p.ParentId = a.Id)","CreationDate":"2017-12-13 03:56:25","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Id DESC), *\nFROM Posts a\nWHERE a.AnswerCount >= 3 and a.PostTypeId = 1 and\na.OwnerUserId not in (SELECT OwnerUserId From Posts p \nWHERE p.PostTypeId = 2 AND p.ParentId = a.Id)"},{"QuerySetId":771058,"Title":"Old posts matching given label","Description":null,"QueryBody":"SELECT Posts.id AS \"Post Link\", Posts.CreationDate, Posts.ViewCount, Posts.Score AS \"Score\", Posts.Tags AS \"Tagged With\" FROM Posts WHERE Posts.Tags LIKE '%##siesta?vasp##%' ORDER BY Posts.CreationDate DESC, Posts.ViewCount DESC LIMIT 100","CreationDate":"2020-11-25 18:18:21","validated":false,"QueryBody_Original":"SELECT  TOP 100\nPosts.id as [Post Link], \nPosts.CreationDate,\nPosts.ViewCount,\nPosts.Score as [Score], \nPosts.Tags as [Tagged With]\nFROM Posts\n\nWHERE \nPosts.Tags like '%##siesta?vasp##%' \nORDER BY Posts.CreationDate DESC, Posts.ViewCount DESC"},{"QuerySetId":771210,"Title":"Answers with \"just a link\" comment","Description":null,"QueryBody":"SELECT c.id AS \"Comment Link\", c.postid AS \"Post Link\", LENGTH(body), p.body FROM comments AS c, posts AS p WHERE (text LIKE '%just a link%' OR text LIKE '%hile this link%') AND c.postid = p.id ORDER BY LENGTH(p.body)","CreationDate":"2017-12-16 19:47:26","validated":false,"QueryBody_Original":"SELECT  c.id as [Comment Link], c.postid as [Post Link], len(body), p.body\nfrom comments c, posts p\nwhere (text like '%just a link%'\nor text like '%hile this link%')\nand c.postid = p.id\norder by len(p.body)"},{"QuerySetId":771259,"Title":"Top 500 Most Prolific Editors","Description":"Shows the top 500 post editors\r\n","QueryBody":"SELECT ph.Comment, ph.UserId AS \"User Link\" FROM PostHistory AS ph WHERE ph.UserId = 1033581 AND ph.Comment LIKE '%dog%' LIMIT 500","CreationDate":"2018-01-15 11:16:18","validated":false,"QueryBody_Original":"SELECT  TOP 500\n       ph.Comment,\n       ph.UserId AS [User Link]\nFROM   PostHistory ph\nWHERE  ph.UserId = 1033581 AND ph.Comment LIKE '%dog%'"},{"QuerySetId":771590,"Title":"Posts with typos; younger than X days, scoring at least Y","Description":"first U&L question was August 10 2010; as of 1\/20\/2018 oldest age in days is 2720 days.\r\nQ\/A -- Nice score=10; Good score=25; Great score=100.\r\nQ's only: Popular=1,000 views, Notable=2,500 views, Famous=10,000 views\r\n\r\nhttp:\/\/hyperboleandahalf.blogspot.com\/2010\/04\/alot-is-better-than-you-at-everything.html\r\n\r\n2018-02-21: 234 hits at 3600 \/ 5\r\n2018-02-25: 186 hits at 3600 \/ 5\r\n2018-03-01: added space in front of \"dont\" search text\r\n2018-03-04: 150 hits at 3600 \/ 5\r\n2018-03-11: 108 at 3600 \/ 5\r\n2018-03-18: 62 at 3600 \/ 5","QueryBody":"SELECT Id AS \"Post Link\", Id, CreationDate, Score, ViewCount, LENGTH(Body) AS Size FROM Posts WHERE (Body LIKE '%\\multicolumn{1}%' COLLATE SQL_Latin1_General_Cp1_CI_AS) ORDER BY CreationDate DESC","CreationDate":"2018-04-09 09:31:31","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Id, CreationDate, Score, ViewCount, LEN(Body) as Size\nFROM Posts\nWHERE (\n   Body LIKE '%\\multicolumn{1}%' COLLATE SQL_Latin1_General_Cp1_CI_AS\n)\n-- \"plz\" exceptions\n-- AND Id IN (101651)\nORDER by CreationDate DESC"},{"QuerySetId":772281,"Title":"Questions with stack trace pattern","Description":null,"QueryBody":"SELECT CASE WHEN DeletionDate IS NULL THEN 1 ELSE 0 END, CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END, COUNT(*) AS Questions, AVG(CAST(Score AS FLOAT)) AS AvgScore, AVG(CAST(ViewCount AS FLOAT)) AS AvgViewCount, AVG(CAST(AnswerCount AS FLOAT)) AS AvgAnswerCount, AVG(CAST(FavoriteCount AS FLOAT)) AS AvgFavoriteCount FROM Posts WHERE PostTypeId = 1 AND DeletionDate IS NULL AND ClosedDate IS NULL AND NOT AcceptedAnswerId IS NULL AND Tags \/*      AnswerCount > 0 and *\/ LIKE '%java%' AND CreationDate >= '2017-10-01' AND CreationDate < '2018-01-01' AND Body LIKE '%at %.java:%\n%at %.java:%' GROUP BY CASE WHEN DeletionDate IS NULL THEN 1 ELSE 0 END, CASE WHEN ClosedDate IS NULL THEN 1 ELSE 0 END","CreationDate":"2017-12-20 13:37:47","validated":false,"QueryBody_Original":"SELECT \n  case when DeletionDate is null then 1 else 0 end ,\n  case when ClosedDate is null then 1 else 0 end ,\n  count(*) as Questions,\n  \n  avg(cast(Score as float)) as AvgScore,\n  avg(cast(ViewCount as float)) as AvgViewCount,\n  avg(cast(AnswerCount as float)) as AvgAnswerCount,\n  avg(cast(FavoriteCount as float)) as AvgFavoriteCount\nfrom Posts\nwhere PostTypeId = 1 and\n      DeletionDate is null and\n      ClosedDate is null and\n      AcceptedAnswerId is not null and\n--      AnswerCount > 0 and\n      Tags like '%java%' and\n      CreationDate >= '2017-10-01' and\n      CreationDate < '2018-01-01' and\n      Body like '%at %.java:%\n%at %.java:%'\ngroup by case when DeletionDate is null then 1 else 0 end, case when ClosedDate is null then 1 else 0 end"},{"QuerySetId":772702,"Title":"Posts with the most images","Description":"Posts containing images, sorted by the number of images.","QueryBody":"SELECT Id AS \"Post Link\", LENGTH(Body) - LENGTH(REPLACE(Body, '<img ', '<img')) AS \"Images\", Score, CASE PostTypeId WHEN 1 THEN 'Q' WHEN 2 THEN 'A' ELSE '?' END AS \"Type\", Body FROM Posts WHERE Body LIKE '%<img %' ORDER BY Images DESC","CreationDate":"2017-12-20 01:54:11","validated":false,"QueryBody_Original":"SELECT \n  Id as [Post Link],\n  len(Body) - len(replace(Body, '<img ', '<img')) as [Images],\n  Score,\n  case PostTypeId when 1 then 'Q' when 2 then 'A' else '?' end as [Type],\n  Body\nfrom Posts\nwhere Body like '%<img %'\norder by Images desc"},{"QuerySetId":772761,"Title":"find questions for waffles hat","Description":null,"QueryBody":"SELECT ID AS \"Post Link\", CreationDate, Tags, AnswerCount FROM posts WHERE deletiondate IS NULL AND closeddate IS NULL AND posttypeid = 1 AND score <= -3 ORDER BY LastActivityDate","CreationDate":"2017-12-20 03:55:01","validated":false,"QueryBody_Original":"SELECT  \n  ID as [Post Link],\n  CreationDate,\n  Tags,\n  AnswerCount\nfrom posts\nwhere deletiondate is null\nand closeddate is null\nand posttypeid = 1\nand score <= -3\norder by LastActivityDate"},{"QuerySetId":773019,"Title":"Who is close to a nice answer badge","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE Score = 24","CreationDate":"2017-12-20 17:57:42","validated":false,"QueryBody_Original":"SELECT  Id from Posts where Score=24;"},{"QuerySetId":773030,"Title":"Who is close to a great answer badge?","Description":null,"QueryBody":"SELECT Q.Id FROM Posts AS Q, Posts AS A WHERE Q.Score = 99 AND Q.PostTypeId = 1 AND Q.Id = A.ParentId AND A.Score = 99","CreationDate":"2017-12-24 09:07:01","validated":false,"QueryBody_Original":"SELECT  \n  Q.Id \nfrom \n  Posts as Q,\n  Posts as A\nwhere \n  Q.Score = 99 and \n  Q.PostTypeId = 1 and\n  Q.Id = A.ParentId and\n  A.Score = 99"},{"QuerySetId":773326,"Title":"Negative questions with a single negative-but-accepted answer","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Score AS \"Q Score\", a.Score AS \"A Score\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 AND q.Score < 0 AND a.Score < -3 AND NOT q.AcceptedAnswerId IS NULL AND q.AnswerCount = 1 ORDER BY a.Score","CreationDate":"2017-12-22 02:46:07","validated":false,"QueryBody_Original":"SELECT \n  q.Id AS [Post Link],\n  q.Score AS 'Q Score',\n  a.Score AS 'A Score'\n\nFROM\n  Posts q\n    INNER JOIN Posts a\n      ON a.ParentId = q.Id\n\nWHERE\n  q.PostTypeId = 1 AND\n  a.PostTypeId = 2 AND\n  q.Score < 0 AND\n  a.Score < -3 AND\n  q.AcceptedAnswerId IS NOT NULL AND\n  q.AnswerCount = 1\n\nORDER BY\n  a.Score"},{"QuerySetId":773401,"Title":"Java Questions from Recent times","Description":null,"QueryBody":"SELECT Id, Score, AcceptedAnswerId, Title, Body FROM Posts WHERE Tags LIKE '%<java>%' AND AcceptedAnswerId > 0 AND Id < 584234 ORDER BY Id DESC","CreationDate":"2017-12-21 04:14:14","validated":false,"QueryBody_Original":"SELECT  Id,Score,AcceptedAnswerId, Title,Body\n from Posts where Tags like '%<java>%' and AcceptedAnswerId>0\n and Id<584234\n order by Id desc"},{"QuerySetId":773621,"Title":"SELECT *  FROM Comments","Description":null,"QueryBody":"SELECT * FROM Comments","CreationDate":"2017-12-21 11:18:55","validated":false,"QueryBody_Original":"SELECT  *  FROM Comments"},{"QuerySetId":773662,"Title":"Most downvoted posts of all time","Description":null,"QueryBody":"SELECT Id, Score, Title, Body FROM Posts WHERE Score < 0 ORDER BY Score LIMIT 50","CreationDate":"2017-12-21 14:42:18","validated":false,"QueryBody_Original":"SELECT  TOP 50 Id, Score, Title, Body from Posts\nWHERE Score < 0\nOrder BY Score"},{"QuerySetId":773793,"Title":"Negative questions with a single negative-but-accepted answer this year","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Score AS \"Q Score\", a.Score AS \"A Score\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 AND q.Score < 0 AND a.Score < 0 AND q.CreationDate > '2016-01-01 01:01:01' AND q.ClosedDate > '2016-01-01 01:01:01' AND NOT q.AcceptedAnswerId IS NULL AND q.AnswerCount = 1 ORDER BY q.CreationDate DESC","CreationDate":"2017-12-21 18:47:29","validated":false,"QueryBody_Original":"SELECT \n  q.Id AS [Post Link],\n  q.Score AS 'Q Score',\n  a.Score AS 'A Score'\n\nFROM\n  Posts q\n    INNER JOIN Posts a\n      ON a.ParentId = q.Id\n\nWHERE\n  q.PostTypeId = 1 AND\n  a.PostTypeId = 2 AND\n  q.Score < 0 AND\n  a.Score < 0 AND\n  q.CreationDate > '2016-01-01 01:01:01' AND\n  q.ClosedDate > '2016-01-01 01:01:01' AND\n  q.AcceptedAnswerId IS NOT NULL AND\n  q.AnswerCount = 1\n\nORDER BY\n  q.CreationDate DESC"},{"QuerySetId":773805,"Title":"Highest Rated StackOverflow Users in Ahmedabad","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%Ahmedabad%' ORDER BY Reputation DESC","CreationDate":"2017-12-29 16:13:55","validated":false,"QueryBody_Original":"SELECT  * FROM Users\nWHERE Location like '%Ahmedabad%' \nOrder by Reputation DESC;"},{"QuerySetId":773875,"Title":"Possible Silencium candidates, with comments on the Q after posting the A","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id LEFT OUTER JOIN Comments AS c ON c.PostId = q.Id AND c.CreationDate < a.CreationDate WHERE a.Score >= 7 AND a.CommentCount = 0 AND q.CommentCount > 0 AND a.CreationDate >= '2017-12-13' AND c.Id IS NULL","CreationDate":"2017-12-21 20:18:55","validated":false,"QueryBody_Original":"SELECT  a.Id AS [Post Link]\n  FROM Posts AS q\n  INNER JOIN Posts AS a ON a.ParentId = q.Id\n  LEFT OUTER JOIN Comments AS c ON c.PostId = q.Id\n                               AND c.CreationDate < a.CreationDate\n  WHERE a.Score >= 7\n    AND a.CommentCount = 0\n    AND q.CommentCount > 0\n    AND a.CreationDate >= '2017-12-13'\n    AND c.Id IS NULL"},{"QuerySetId":773890,"Title":"SELECT Body FROM Posts where Posts.Id=4983476","Description":null,"QueryBody":"SELECT Body, Title, Tags FROM Posts WHERE Posts.Id = 4983476","CreationDate":"2017-12-21 21:30:48","validated":false,"QueryBody_Original":"SELECT  Body, Title, Tags FROM Posts where Posts.Id=4983476"},{"QuerySetId":773924,"Title":"Get post with popular tags","Description":null,"QueryBody":"SELECT Count, TagName FROM Tags WHERE Count > 50000 ORDER BY Count","CreationDate":"2017-12-21 23:24:18","validated":false,"QueryBody_Original":"SELECT  Count, TagName\nFROM Tags\nWHERE Count > 50000\nORDER BY Count"},{"QuerySetId":774284,"Title":"select count (case when p.PostTypeId=1 then 1 end) from Posts;","Description":null,"QueryBody":"SELECT u.Age, COUNT(CASE WHEN p.PostTypeId = 1 AND p.Score = 0 THEN 1 END) AS equals, COUNT(CASE WHEN p.PostTypeId = 1 AND p.Score > 0 THEN 1 END) AS bolshe FROM Users AS u JOIN Posts AS p ON u.id = p.OwnerUserId GROUP BY u.Age HAVING COUNT(CASE WHEN p.PostTypeId = 1 THEN 1 END) > 50","CreationDate":"2017-12-22 16:36:53","validated":false,"QueryBody_Original":"SELECT  u.Age, count(case when p.PostTypeId = 1 and p.Score = 0 then 1 end) equals, count(case when p.PostTypeId = 1 and p.Score > 0 then 1 end) bolshe from Users u join Posts p on u.id = p.OwnerUserId group by u.Age having count(case when p.PostTypeId = 1 then 1 end) > 50;"},{"QuerySetId":774639,"Title":"CR Visitors 2017-12-15 -- 2017-12-23","Description":null,"QueryBody":"SELECT COUNT(*) FROM users WHERE LastAccessDate > '2017-12-15' AND LastAccessDate < '2017-12-23'","CreationDate":"2017-12-23 03:11:35","validated":false,"QueryBody_Original":"SELECT  COUNT (*)\nFROM users\nWHERE LastAccessDate > '2017-12-15' AND LastAccessDate < '2017-12-23'"},{"QuerySetId":775777,"Title":"Like query ~ Users by DisplayName","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName, Reputation FROM Users WHERE LOWER(DisplayName) LIKE LOWER('%##DisplayName##%') ORDER BY Reputation DESC","CreationDate":"2017-12-29 13:40:43","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    DisplayName,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(DisplayName) LIKE LOWER('%##DisplayName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":775849,"Title":"Python and Django BE Gracall v Praze","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.DisplayName, u.Location, u.WebsiteUrl, u.AboutMe, u.Views, u.UpVotes, u.DownVotes, u.Age FROM Users AS u JOIN (SELECT DISTINCT UserId FROM Badges WHERE LOWER(Name) IN ('python', 'django') AND Class IN (1, 2, 3) AND TagBased = 1) AS tag_badges ON tag_badges.UserId = u.Id WHERE LOWER(Location) LIKE '%prague%'","CreationDate":"2018-01-05 01:54:57","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link],\n                            u.DisplayName,\n                            u.Location,\n                            u.WebsiteUrl,\n                            u.AboutMe,\n                            u.Views,\n                            u.UpVotes,\n                            u.DownVotes,\n                            u.Age\n             FROM Users u\n        \n             JOIN (\n                    SELECT DISTINCT UserId\n                    FROM Badges\n                    WHERE LOWER(Name) IN ('python', 'django') AND\n                          Class IN (1, 2, 3) AND\n                          TagBased = 1\n                  ) tag_badges\n             ON tag_badges.UserId = u.Id\n             \n             WHERE LOWER(Location) LIKE '%prague%'"},{"QuerySetId":776020,"Title":"Most users with 0-scored answers","Description":null,"QueryBody":"SELECT u.DisplayName, COUNT(*) AS num_of_posts FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE p.Score = 0 AND p.PostTypeId = 2 GROUP BY u.DisplayName ORDER BY num_of_posts DESC","CreationDate":"2017-12-29 22:00:41","validated":false,"QueryBody_Original":"SELECT  u.DisplayName, COUNT(*) AS num_of_posts\nFROM Users u\nINNER JOIN Posts p ON u.Id=p.OwnerUserId\nWHERE\np.Score=0\nAND\np.PostTypeId=2\nGROUP BY u.DisplayName\nORDER BY num_of_posts DESC"},{"QuerySetId":776027,"Title":"Users with the most 0-scored answers","Description":"Returns the top 1000 users based on the number of answers they have with a score of 0 (zero).","QueryBody":"SELECT u.DisplayName, COUNT(*) AS NumberOfAnswers FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE p.Score = 0 AND p.PostTypeId = 2 GROUP BY u.DisplayName ORDER BY NumberOfAnswers DESC LIMIT 1000","CreationDate":"2017-12-29 22:06:33","validated":false,"QueryBody_Original":"SELECT  TOP 1000 u.DisplayName, COUNT(*) AS NumberOfAnswers\nFROM Users u\nINNER JOIN Posts p ON u.Id=p.OwnerUserId\nWHERE\np.Score=0\nAND\np.PostTypeId=2\nGROUP BY u.DisplayName\nORDER BY NumberOfAnswers DESC"},{"QuerySetId":776682,"Title":"Get name, excerpts and wiki content of all tags.","Description":null,"QueryBody":"SELECT t.tagName, e.body AS \"Excerpt\", w.body AS \"WikiBody\" FROM tags AS t LEFT JOIN Posts AS e ON t.ExcerptPostId = e.Id LEFT JOIN Posts AS w ON t.WikiPostId = w.Id ORDER BY t.tagName","CreationDate":"2018-01-02 13:33:30","validated":false,"QueryBody_Original":"SELECT \n  t.tagName,\n  e.body AS 'Excerpt',\n  w.body AS 'WikiBody'\nFROM tags t\nLEFT JOIN Posts e\n  ON t.ExcerptPostId = e.Id\nLEFT JOIN Posts w\n  ON t.WikiPostId = w.Id\nORDER BY t.tagName"},{"QuerySetId":776684,"Title":"Get name of all tags.","Description":null,"QueryBody":"SELECT t.tagName FROM tags AS t LEFT JOIN Posts AS e ON t.ExcerptPostId = e.Id LEFT JOIN Posts AS w ON t.WikiPostId = w.Id ORDER BY t.tagName","CreationDate":"2018-01-09 16:50:57","validated":false,"QueryBody_Original":"SELECT \n  t.tagName\nFROM tags t\nLEFT JOIN Posts e\n  ON t.ExcerptPostId = e.Id\nLEFT JOIN Posts w\n  ON t.WikiPostId = w.Id\nORDER BY t.tagName"},{"QuerySetId":776780,"Title":"Low quality, low hanging fruit questions","Description":null,"QueryBody":"SELECT * FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.Score = 0 AND Posts.AnswerCount > 5 AND Posts.ParentId IS NULL AND Posts.AcceptedAnswerId IS NULL AND Users.LastAccessDate < DATEADD(year, -2, GETDATE())","CreationDate":"2018-01-02 17:51:35","validated":false,"QueryBody_Original":"SELECT  * from Posts \n         join Users on Posts.OwnerUserId = Users.Id\n         where Posts.Score = 0 \n           and Posts.AnswerCount > 5 \n           and Posts.ParentId is null \n           and Posts.AcceptedAnswerId is null\n           and Users.LastAccessDate < DATEADD(year,-2,GETDATE())"},{"QuerySetId":776806,"Title":"Orphaned possible low quality, low hanging fruit questions","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.Title, Posts.LastActivityDate, Posts.Tags FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.Score = 0 AND Posts.DeletionDate IS NULL AND Posts.ClosedDate IS NULL AND Posts.AnswerCount > 5 AND Posts.ParentId IS NULL AND Posts.AcceptedAnswerId IS NULL AND Users.LastAccessDate < DATEADD(year, -10, GETDATE())","CreationDate":"2019-12-21 03:56:30","validated":false,"QueryBody_Original":"SELECT  Posts.Id as [Post Link], Posts.Title, Posts.LastActivityDate, Posts.Tags from Posts \n         join Users on Posts.OwnerUserId = Users.Id\n         where Posts.Score = 0 \n           and Posts.DeletionDate is null\n           and Posts.ClosedDate is null\n           and Posts.AnswerCount > 5 \n           and Posts.ParentId is null \n           and Posts.AcceptedAnswerId is null\n           and Users.LastAccessDate < DATEADD(year,-10,GETDATE())"},{"QuerySetId":776877,"Title":"Tags that are 33+ characters long & contain a number","Description":"Looks for tags with a length of over 33 characters which also contain a number.\r\nCreated to locate tags which may exceed 35 characters if title used Roman Numerals.\r\nhttps:\/\/gaming.meta.stackexchange.com\/q\/12181\/181240","QueryBody":"SELECT TagName FROM Tags WHERE LENGTH(TagName) >= 33 AND TagName LIKE '%[0-9]%' ORDER BY LENGTH(TagName) DESC","CreationDate":"2018-01-02 22:48:39","validated":false,"QueryBody_Original":"SELECT  TagName FROM Tags\nWHERE LEN(TagName) >= 33\nAND TagName LIKE '%[0-9]%'\nORDER BY LEN(TagName) DESC"},{"QuerySetId":777439,"Title":"Users with highest Socratic progress (socratic hopefuls)","Description":null,"QueryBody":"SELECT RANK() OVER (PARTITION BY 1 ORDER BY Counter DESC) AS Rank, * FROM (SELECT COUNT(O.CreationDate) AS Counter, O.OwnerUserId, O.OwnerUserId AS \"User Link\" FROM (SELECT DISTINCT OwnerUserId, CAST(TIME_TO_STR(CreationDate, '%Y\/%m\/%d') AS TEXT(10)) AS CreationDate FROM Posts WHERE score > 0 AND posttypeid = 1) AS O GROUP BY O.OwnerUserId) AS O ORDER BY Counter DESC","CreationDate":"2019-09-24 21:07:59","validated":false,"QueryBody_Original":"SELECT   Rank() over (Partition BY 1 ORDER BY Counter DESC) AS  Rank, * \nFROM (\nSELECT count(O.CreationDate) AS Counter, O.OwnerUserId, O.OwnerUserId AS [User Link]\nFROM(\nSELECT distinct OwnerUserId, CONVERT(VARCHAR(10) ,CreationDate,111) as CreationDate\nFROM Posts \nWHERE score > 0 and posttypeid = 1\n) O\nGROUP BY O.OwnerUserId) O\nORDER BY Counter DESC"},{"QuerySetId":777550,"Title":"Get Java questions with specific topics","Description":null,"QueryBody":"SELECT DISTINCT p1.Id, p1.title FROM Posts AS p1, Posts AS p2 WHERE p2.ParentId = p1.Id AND p1.Tags LIKE '%<java>%' OR p1.Tags LIKE '%<ja>%' AND p2.Body LIKE '%<code>%' AND p2.Score < 0 ORDER BY p1.Id","CreationDate":"2019-07-18 09:16:16","validated":false,"QueryBody_Original":"SELECT  distinct p1.Id,  p1.title  from Posts as p1, Posts as p2\nwhere p2.ParentId=p1.Id\nand p1.Tags like '%<java>%' or p1.Tags like '%<ja>%'\nand p2.Body like '%<code>%'\nand p2.Score<0\n--and (p1.Title like '%How to%' or p1.Title like '%how to%')\norder by p1.Id asc"},{"QuerySetId":777678,"Title":"Title starts and end with a slash","Description":null,"QueryBody":"SELECT ID, Title, Score FROM Posts WHERE Title LIKE '\/%\/'","CreationDate":"2018-01-04 17:17:02","validated":false,"QueryBody_Original":"SELECT \n  ID, Title, Score\nFrom Posts\nWhere\n  Title Like '\/%\/'"},{"QuerySetId":778233,"Title":"2016 answers by users with no answers before 2016","Description":null,"QueryBody":"SELECT A.Id AS \"Post Link\", A.Score, U.DisplayName FROM Posts AS A JOIN Users AS U ON A.OwnerUserId = U.Id WHERE YEAR(A.CreationDate) = 2017 AND A.PostTypeId = 2 \/* Post is answer *\/ AND NOT EXISTS(SELECT * FROM Posts AS A2 WHERE A2.OwnerUserId = U.Id AND YEAR(A2.CreationDate) < 2016 AND A2.PostTypeId = 2) ORDER BY A.Score DESC","CreationDate":"2018-01-05 20:13:36","validated":false,"QueryBody_Original":"SELECT  A.Id AS [Post Link], A.Score, U.DisplayName\n  FROM Posts A JOIN Users U ON A.OwnerUserId = U.Id\n    WHERE year(A.CreationDate) = 2017\n    AND A.PostTypeId = 2 -- Post is answer\n    AND NOT EXISTS (SELECT *\n                    FROM Posts A2\n                    WHERE A2.OwnerUserId = U.Id\n                    AND year(A2.CreationDate) < 2016\n                    AND A2.PostTypeId = 2)\n  ORDER BY A.Score DESC"},{"QuerySetId":778522,"Title":"Finding Under Ager People on Stack Exchange","Description":null,"QueryBody":"SELECT * FROM users WHERE age < 13 ORDER BY age","CreationDate":"2018-01-06 07:42:36","validated":false,"QueryBody_Original":"SELECT  * FROM users WHERE age < 13 ORDER BY age;"},{"QuerySetId":778559,"Title":"SELECT * FROM Posts LIMIT 10;","Description":null,"QueryBody":"SELECT u.Id, DisplayName, COUNT(p.Id) AS PostCount FROM Users AS u LEFT JOIN Posts AS p ON u.id = p.OwnerUserId GROUP BY u.Id, DisplayName ORDER BY PostCount DESC LIMIT 10","CreationDate":"2018-01-06 14:23:11","validated":false,"QueryBody_Original":"SELECT  TOP 10 u.Id, DisplayName, COUNT(p.Id) PostCount FROM Users AS u\nLEFT JOIN Posts AS p ON u.id = p.OwnerUserId\nGROUP BY u.Id, DisplayName\nORDER BY PostCount DESC"},{"QuerySetId":779369,"Title":"What is the age distribution for the users?","Description":null,"QueryBody":"SELECT t2.age, COUNT(t2.Id) AS Count_of_users_by_age FROM Users AS t2 GROUP BY t2.age ORDER BY t2.age","CreationDate":"2018-01-26 05:19:54","validated":false,"QueryBody_Original":"SELECT \n   t2.age,\n   count(t2.Id) as Count_of_users_by_age\nfrom \n  Users t2\ngroup by\n   t2.age\norder by\n   t2.age;"},{"QuerySetId":779542,"Title":"Top RDBMS for Hibernate tag","Description":null,"QueryBody":"SELECT SUM(CASE WHEN (STR_POSITION(Tags, 'oracle') > 0) THEN 1 ELSE 0 END) AS \"Oracle\" FROM Posts WHERE Tags LIKE '%hibernate%' UNION SELECT SUM(CASE WHEN (STR_POSITION(Tags, '<sql-server>') > 0) THEN 1 ELSE 0 END) AS \"SQL Server\" FROM Posts WHERE Tags LIKE '%hibernate%' UNION SELECT SUM(CASE WHEN (STR_POSITION(Tags, '<postgresql>') > 0) THEN 1 ELSE 0 END) AS \"PostgreSQL\" FROM Posts WHERE Tags LIKE '%hibernate%' UNION SELECT SUM(CASE WHEN (STR_POSITION(Tags, '<mysql>') > 0) THEN 1 ELSE 0 END) AS \"MySQL\" FROM Posts WHERE Tags LIKE '%hibernate%' UNION SELECT SUM(CASE WHEN (STR_POSITION(Tags, '<mariadb>') > 0) THEN 1 ELSE 0 END) AS \"MariaDB\" FROM Posts WHERE Tags LIKE '%hibernate%'","CreationDate":"2018-01-08 18:38:57","validated":false,"QueryBody_Original":"SELECT \nsum(case when (CHARINDEX('oracle', Tags) > 0) then 1 else 0 end) as 'Oracle'\nfrom Posts\nwhere Tags like '%hibernate%'\nunion\nSELECT sum(case when (CHARINDEX('<sql-server>', Tags) > 0) then 1 else 0 end) as 'SQL Server'\nfrom Posts\nwhere Tags like '%hibernate%'\nunion\nSELECT sum(case when (CHARINDEX('<postgresql>', Tags) > 0) then 1 else 0 end) as 'PostgreSQL'\nfrom Posts\nwhere Tags like '%hibernate%'\nunion\nSELECT \nsum(case when (CHARINDEX('<mysql>', Tags) > 0) then 1 else 0 end) as 'MySQL'\nfrom Posts\nwhere Tags like '%hibernate%'\nunion\nSELECT\nsum(case when (CHARINDEX('<mariadb>', Tags) > 0) then 1 else 0 end) as 'MariaDB'\nfrom Posts\nwhere Tags like '%hibernate%'"},{"QuerySetId":779845,"Title":"All answers with a given tag","Description":null,"QueryBody":"SELECT a.ParentId AS \"id\", a.Score AS \"sc\", CONCAT(a.OwnerDisplayName, u.DisplayName) AS \"au\", a.Body AS \"body\" FROM Posts AS a LEFT JOIN Users AS u ON a.OwnerUserId = u.Id WHERE EXISTS(SELECT q.Id FROM Posts AS q WHERE q.Id = a.ParentId AND q.Tags LIKE '%<##Tag##>%' AND u.DisplayName = 'Maxim') ORDER BY a.ParentId","CreationDate":"2018-01-08 22:10:45","validated":false,"QueryBody_Original":"SELECT  a.ParentId as [id], a.Score as [sc], CONCAT(a.OwnerDisplayName, u.DisplayName) as [au], a.Body as [body] from Posts a\nleft join Users u on a.OwnerUserId=u.Id\nwhere exists (SELECT q.Id from Posts q \n  where q.Id=a.ParentId and q.Tags like '%<##Tag##>%' and u.DisplayName='Maxim'\n  )\norder by a.ParentId asc"},{"QuerySetId":779900,"Title":"Number of answers per year","Description":null,"QueryBody":"SELECT YEAR(CreationDate), COUNT(*) FROM Posts WHERE PostTypeId = 2 AND OwnerUserId = 70 GROUP BY YEAR(CreationDate)","CreationDate":"2019-11-19 03:48:09","validated":false,"QueryBody_Original":"SELECT  year(CreationDate), count(*) \nfrom Posts \nwhere PostTypeId = 2\nand OwnerUserId = 70\ngroup by year(CreationDate)"},{"QuerySetId":779954,"Title":"fraction of upvotes from 101-rep users","Description":null,"QueryBody":"SELECT CAST(SUM(CASE WHEN reputation = 101 THEN upvotes ELSE 0 END) AS FLOAT) \/ SUM(upvotes) FROM users","CreationDate":"2018-01-09 03:03:34","validated":false,"QueryBody_Original":"SELECT  cast(sum(iif(reputation = 101, upvotes, 0)) as float)\/sum(upvotes) from users"},{"QuerySetId":779956,"Title":"fraction of upvotes from no-post users","Description":null,"QueryBody":"SELECT CAST(SUM(CASE WHEN postCount = 0 THEN upvotes ELSE 0 END) AS FLOAT) \/ SUM(upvotes) FROM (SELECT MAX(upvotes) AS upvotes, COUNT(posts.id) AS postCount FROM users LEFT OUTER JOIN posts ON users.id = posts.owneruserid GROUP BY users.id) AS x","CreationDate":"2018-01-09 03:30:24","validated":false,"QueryBody_Original":"SELECT \ncast(sum(iif(postCount = 0, upvotes, 0)) as float) \/ sum(upvotes) from\n(SELECT\nmax(upvotes) as upvotes, count(posts.id) as postCount\n  from users\n  left outer join posts\n  on users.id = posts.owneruserid\n  group by users.id) as x"},{"QuerySetId":780517,"Title":"Count questions per tag count","Description":null,"QueryBody":"SELECT COUNT(Q.id) AS total FROM Posts AS Q","CreationDate":"2018-03-21 01:50:30","validated":false,"QueryBody_Original":"SELECT  count(Q.id) as total\nFROM Posts Q"},{"QuerySetId":780648,"Title":"select * from Users where DisplayName='habeeb'","Description":null,"QueryBody":"SELECT AboutMe FROM Users WHERE DisplayName LIKE '%Perwad%'","CreationDate":"2018-01-10 10:32:54","validated":false,"QueryBody_Original":"SELECT  AboutMe from Users where DisplayName like'%Perwad%'"},{"QuerySetId":780678,"Title":"trying widthrow the HTML posts","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 1","CreationDate":"2018-01-10 12:19:18","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Id = 1;"},{"QuerySetId":781076,"Title":"SELECT Id, ParentId FROM Posts WHERE Id = 123","Description":null,"QueryBody":"SELECT Id, ParentId FROM Posts WHERE Id = 123","CreationDate":"2018-01-11 00:43:11","validated":false,"QueryBody_Original":"SELECT  Id, ParentId FROM Posts WHERE Id = 123"},{"QuerySetId":781370,"Title":"Question - status and other attributes","Description":null,"QueryBody":"SELECT Posts.Id AS PostId, tags, AnswerCount, CommentCount, FavoriteCount, Posts.CreationDate AS PostCreationDate, OwnerUserId, Title, Body, ClosedDate, Score, ViewCount, Users.Age, Users.CreationDate, Users.Views, Users.Upvotes, Users.DownVotes, Users.Location, Users.Reputation FROM Posts LEFT JOIN Users ON Posts.OwnerUserId = Users.Id WHERE YEAR(Posts.CreationDate) = 2018","CreationDate":"2018-01-11 20:56:28","validated":false,"QueryBody_Original":"SELECT  Posts.Id as PostId, tags, AnswerCount, CommentCount, FavoriteCount, Posts.CreationDate as PostCreationDate, OwnerUserId, Title,Body, ClosedDate, Score, ViewCount, \nUsers.Age, Users.CreationDate,Users.Views, Users.Upvotes, Users.DownVotes, Users.Location, Users.Reputation \nFROM \nPosts left join Users \non Posts.OwnerUserId=Users.Id\nWHERE YEAR(Posts.CreationDate)=2018"},{"QuerySetId":782162,"Title":"Required: One SEDE wizard (for a possibly impossible query)","Description":"https:\/\/meta.stackexchange.com\/questions\/305727\/required-one-sede-wizard-for-a-possibly-impossible-query\r\n\r\na query to find all questions which were closed as duplicate, matching these conditions:\r\n\r\nit must have been closed as duplicate while the score was not negative\r\nit must have been closed as duplicate while the score was below 3\r\nit now has a negative score\r\nit is less than a year old","QueryBody":"SELECT p.id AS \"Post Link\" FROM posts AS p INNER JOIN posthistory AS ph ON ph.postid = p.id INNER JOIN votes AS v ON v.postid = p.id\/* upmod \/ downmod *\/  WHERE \/* a year *\/ p.score < 0 \/* now negative score *\/ AND NOT p.closeddate IS NULL \/* now closed *\/ AND \/* a year *\/ p.creationdate > DATEADD(d, -366, GETDATE()) \/* a year *\/ AND ph.creationdate = p.closeddate \/* make sure we have one event *\/ AND ph.posthistorytypeid = 10 \/* close *\/ AND comment = 101 \/* duplicate *\/ AND v.votetypeid IN (2, 3) GROUP BY p.id HAVING NOT SUM(CASE WHEN v.votetypeid = 2 AND v.creationdate <= p.closeddate THEN 1 WHEN v.votetypeid = 3 AND v.creationdate <= p.closeddate THEN -1 ELSE 0 END) BETWEEN -3 AND 0","CreationDate":"2018-01-13 22:40:01","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link]\nfrom posts p\ninner join posthistory ph on ph.postid = p.id\ninner join votes v on v.postid = p.id\nwhere p.score < 0  -- now negative score\nand p.closeddate is not null -- now closed\nand p.creationdate > dateadd(d,-366, getdate()) -- a year\nand ph.creationdate = p.closeddate -- make sure we have one event\nand ph.posthistorytypeid = 10 -- close\nand comment = 101 -- duplicate\nand v.votetypeid in (2,3) -- upmod \/ downmod\ngroup by p.id\nhaving sum(\n       case \n       when v.votetypeid = 2 and v.creationdate <= p.closeddate then 1 \n       when v.votetypeid = 3 and v.creationdate <= p.closeddate then -1 \n       else 0 \n       end) not between -3 and 0"},{"QuerySetId":782445,"Title":"How many users are there in StackOverflow?","Description":null,"QueryBody":"SELECT COUNT(DISTINCT Id) AS Users FROM Users","CreationDate":"2018-01-16 02:37:20","validated":false,"QueryBody_Original":"SELECT  Count(distinct Id) as Users\nFROM Users"},{"QuerySetId":782898,"Title":"Graph questions with images in question or answer","Description":null,"QueryBody":"SELECT Id, Title FROM Posts WHERE Body LIKE '%![%'","CreationDate":"2018-01-15 21:29:56","validated":false,"QueryBody_Original":"SELECT  Id,Title FROM Posts\nWHERE Body LIKE '%![%'"},{"QuerySetId":783358,"Title":"Posts that are the target of the most duplicate closures","Description":null,"QueryBody":"SELECT PostId, RelatedPostId FROM PostLinks AS pl WHERE pl.RelatedPostId = 21895756 AND pl.LinkTypeId = 3 \/* duplicate *\/","CreationDate":"2018-01-21 08:52:31","validated":false,"QueryBody_Original":"SELECT \n    PostId,\n    RelatedPostId\n  FROM\n    PostLinks AS pl\n  WHERE\n    pl.RelatedPostId = 21895756\n    AND pl.LinkTypeId = 3 -- duplicate"},{"QuerySetId":784433,"Title":"Find the Total Questions on Machine Learning","Description":null,"QueryBody":"SELECT Title, CreationDate FROM Posts WHERE (PostTypeId = 1 AND Score > 4 AND (Tags LIKE '%##tagName##%' OR Tags LIKE '##tagName##%' OR Tags LIKE '%##tagName##'))","CreationDate":"2018-12-15 01:05:35","validated":false,"QueryBody_Original":"SELECT  Title, CreationDate From Posts Where \n(\n PostTypeId = 1 AND \n Score > 4 AND\n (\n Tags like '%##tagName##%' OR\n Tags like '##tagName##%' OR\n Tags like '%##tagName##'\n ) \n)"},{"QuerySetId":784438,"Title":"Top 200 Users in Mozambique","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", AboutMe, Reputation, UpVotes, CreationDate, Views, DownVotes, LastAccessDate FROM Users WHERE LOWER(Location) LIKE '%hyderabad%' OR UPPER(Location) LIKE '%MOZ' ORDER BY UpVotes DESC LIMIT 200","CreationDate":"2020-05-04 08:45:15","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    AboutMe,\n    Reputation,\n    UpVotes,\n    CreationDate,\n    Views,\n    DownVotes,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%hyderabad%'\n    OR UPPER(Location) LIKE '%MOZ'\nORDER BY\n    UpVotes DESC;"},{"QuerySetId":784503,"Title":"select * from Posts where rand() <= .3","Description":null,"QueryBody":"SELECT * FROM Posts WHERE RAND() = 0.3","CreationDate":"2018-01-18 03:19:32","validated":false,"QueryBody_Original":"SELECT  * from Posts where rand() = .3"},{"QuerySetId":784688,"Title":"Advanced Search for answers posted to your questions","Description":"This allows you to search all the answers posted to your questions or to the questions of any other user (you will need their UserId).","QueryBody":"SELECT SUM(views) FROM USers WHERE Users.id <> -1","CreationDate":"2018-01-18 10:20:33","validated":false,"QueryBody_Original":"SELECT  SUM(views) FROM USers WHERE Users.id != -1"},{"QuerySetId":784800,"Title":"Search Users by Number of Badges","Description":null,"QueryBody":"SELECT SUM(upvotes) FROM users","CreationDate":"2018-01-18 10:23:22","validated":false,"QueryBody_Original":"SELECT  SUM (upvotes) FROM users"},{"QuerySetId":784848,"Title":"Highest Quality Posts: Votes * Post Length (non-wiki)","Description":"Top 1000 (non-wiki) \"quality\" posts as defined by (votes * post length). Idea taken from: http:\/\/data.stackexchange.com\/stackoverflow\/query\/36092\/","QueryBody":"SELECT Score, COUNT(Score) FROM Posts WHERE Score > 10 AND Score < 100 GROUP BY Score ORDER BY Score","CreationDate":"2018-01-21 01:15:29","validated":false,"QueryBody_Original":"SELECT \n  Score,\n  COUNT(Score) \nFROM\n  Posts\n  WHERE Score > 10 AND Score < 100\nGROUP BY\n  Score\nORDER BY\n  Score"},{"QuerySetId":786325,"Title":"Users with matching Github Profiles","Description":null,"QueryBody":"SELECT Id, PostTypeId, Score, Body FROM Posts WHERE PostTypeId \/* Conditions to check *\/ = 1 AND Score > 20 AND AnswerCount > 30 AND NOT AcceptedAnswerId IS NULL AND STR_POSITION(Posts.Body, 'why am i getting') > 0 AND STR_POSITION(Posts.Body, 'error') > 0 OR STR_POSITION(Posts.Body, 'stack overflow') > 0","CreationDate":"2018-04-03 00:40:15","validated":false,"QueryBody_Original":"SELECT  Id, PostTypeId, Score, Body\nfrom Posts\nwhere\n\t--Conditions to check\n\tPostTypeId = 1 and\n\tScore > 20 and\n\tAnswerCount > 30 and\n\tAcceptedAnswerId is not null and\n\tCHARINDEX('why am i getting', Posts.Body) > 0 and\n\tCHARINDEX('error', Posts.Body) > 0 or\n\tCHARINDEX('stack overflow', Posts.Body) > 0"},{"QuerySetId":786861,"Title":"Questions answered by me and Dennis","Description":null,"QueryBody":"SELECT Id FROM Posts AS a WHERE EXISTS(SELECT 1 FROM Posts WHERE ParentId = a.Id AND OwnerUserId = 1122645) AND EXISTS(SELECT 1 FROM Posts WHERE ParentId = a.Id AND OwnerUserId = 22656)","CreationDate":"2018-01-19 21:47:52","validated":false,"QueryBody_Original":"SELECT  Id FROM Posts a WHERE\nEXISTS (SELECT 1 FROM Posts WHERE ParentId = a.Id and OwnerUserId = 1122645) AND\nEXISTS (SELECT 1 FROM Posts WHERE ParentId = a.Id and OwnerUserId = 22656)"},{"QuerySetId":786875,"Title":"Challenges Answered by Shaggy & ETHProductions","Description":null,"QueryBody":"SELECT Id FROM Posts AS a WHERE EXISTS(SELECT 1 FROM Posts WHERE ParentId = a.Id AND OwnerUserId = 58974) AND EXISTS(SELECT 1 FROM Posts WHERE ParentId = a.Id AND OwnerUserId = 42545)","CreationDate":"2018-01-19 21:34:45","validated":false,"QueryBody_Original":"SELECT  Id FROM Posts a WHERE\nEXISTS (SELECT 1 FROM Posts WHERE ParentId = a.Id and OwnerUserId = 58974) AND\nEXISTS (SELECT 1 FROM Posts WHERE ParentId = a.Id and OwnerUserId = 42545)"},{"QuerySetId":787460,"Title":"select * from Posts where Id > 1","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id > 1","CreationDate":"2018-01-20 13:20:57","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id > 1"},{"QuerySetId":787873,"Title":"Total Posts Created in 2017","Description":null,"QueryBody":"SELECT COUNT(*) AS PostCount FROM Posts AS P WHERE YEAR(P.CreationDate) = 2017","CreationDate":"2018-01-21 03:55:33","validated":false,"QueryBody_Original":"SELECT  COUNT(*) AS PostCount\nFROM Posts P\nWHERE year(P.CreationDate) = 2017"},{"QuerySetId":789877,"Title":"Popular ML frameworks in 2017","Description":null,"QueryBody":"SELECT Tags, CreationDate FROM Posts WHERE PostTypeId = 1 AND (Tags LIKE '%machine-learning%' OR Tags LIKE '%machine-learning' OR Tags LIKE 'machine-learning%' OR Title LIKE '%Machine Learning%' OR Title LIKE '%machine learning%' OR Body LIKE '%machine learning%') AND CreationDate < '2017-01-01'","CreationDate":"2018-01-23 13:43:46","validated":false,"QueryBody_Original":"SELECT  Tags,CreationDate from Posts Where PostTypeId = 1 AND \n(Tags LIKE '%machine-learning%' OR\nTags Like '%machine-learning' OR \nTags LIKE 'machine-learning%'  OR\nTitle LIKE '%Machine Learning%' OR\nTitle LIKE '%machine learning%' OR\nBody Like '%machine learning%'\n)\nAND CreationDate < '2017-01-01'"},{"QuerySetId":790049,"Title":"Average Time to Answer for a single user","Description":null,"QueryBody":"SELECT MAX(uss.userid) AS \"User Link\", AVG(uss.TTA) AS \"Average Time to Answer\" FROM (SELECT u.Id AS userid, p.Id, p.CreationDate AS acreat, p2.CreationDate AS qcreat, (DATEDIFF(p.CreationDate, p2.CreationDate)) AS TTA, p.Score FROM Posts AS p INNER JOIN Posts AS p2 ON p.ParentId = p2.Id INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.PostTypeId = 2 AND p.OwnerUserId = 2347) AS uss","CreationDate":"2018-01-23 19:58:10","validated":false,"QueryBody_Original":"SELECT \n\nMAX(uss.userid) AS [User Link],\nAVG(uss.TTA) AS [Average Time to Answer]\n\n\nFROM\n\n  (\n\nSELECT\n\nu.Id AS userid,\np.Id,\np.CreationDate AS acreat,\np2.CreationDate AS qcreat,\n(DATEDIFF(mi, p2.CreationDate, p.CreationDate)) AS TTA,\np.Score\n\nFROM Posts AS p\nINNER JOIN Posts AS p2 ON p.ParentId = p2.Id\nINNER JOIN Users AS u ON u.Id = p.OwnerUserId\n\nWHERE p.PostTypeId = 2 \nAND p.OwnerUserId = 2347\n\n  ) AS uss"},{"QuerySetId":790339,"Title":"Find upvotions (excluding more than 100 upvotes)","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation, Users.CreationDate, Users.LastAccessDate, Users.Views, Users.UpVotes, Users.Id, Users.Location, Users.AboutMe, Users.DisplayName FROM Users WHERE Users.Reputation < 200 AND Users.UpVotes > 1 AND Users.UpVotes < 100 \/* > Community *\/ AND CAST(Users.CreationDate AS DATE) = CAST(Users.LastAccessDate AS DATE) ORDER BY CreationDate","CreationDate":"2018-01-30 07:21:36","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link], Users.Reputation, Users.CreationDate, Users.LastAccessDate, \n       Users.Views, Users.UpVotes, Users.Id, \n       Users.Location, Users.AboutMe, Users.DisplayName \nFROM Users\nWHERE Users.Reputation < 200\n  AND Users.UpVotes > 1\n  AND Users.UpVotes < 100 --> Community\n  AND Cast(Users.CreationDate as Date) = Cast(Users.LastAccessDate as Date)\nORDER BY CreationDate"},{"QuerySetId":790395,"Title":"Find downvotions (excluding more than 100 downvotes)","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation, Users.CreationDate, Users.LastAccessDate, Users.Views, Users.DownVotes, Users.AboutMe FROM Users WHERE Users.Reputation < 200 AND Users.DownVotes > 1 AND Users.DownVotes < 100 AND CAST(Users.CreationDate AS DATE) = CAST(Users.LastAccessDate AS DATE) ORDER BY CreationDate","CreationDate":"2018-01-24 04:37:28","validated":false,"QueryBody_Original":"SELECT  Users.Id as [User Link], Users.Reputation, Users.CreationDate, Users.LastAccessDate, \n       Users.Views, Users.DownVotes, Users.AboutMe\nFROM Users\nWHERE Users.Reputation < 200\n  AND Users.DownVotes > 1\n  AND Users.DownVotes < 100\n  AND Cast(Users.CreationDate as Date) = Cast(Users.LastAccessDate as Date)\nORDER BY CreationDate"},{"QuerySetId":790767,"Title":"Total users on a site","Description":null,"QueryBody":"SELECT COUNT(*) AS total_users FROM Users","CreationDate":"2018-01-24 22:46:30","validated":false,"QueryBody_Original":"SELECT  count(*) total_users\nfrom Users"},{"QuerySetId":791197,"Title":"Do questions posed by more reputable askers generate more reputation for the answer","Description":null,"QueryBody":"SELECT Askers.Reputation, AVG(Answers.Score) AS AverageScore FROM Posts AS Questions INNER JOIN Posts AS Answers ON Questions.AcceptedAnswerId = Answers.Id INNER JOIN Users AS Askers ON Askers.Id = Questions.OwnerUserId GROUP BY Askers.Reputation ORDER BY Askers.Reputation DESC","CreationDate":"2018-01-25 22:13:37","validated":false,"QueryBody_Original":"SELECT  Askers.Reputation, AVG(Answers.Score) AS AverageScore\nFROM Posts AS Questions\nINNER JOIN Posts AS Answers ON Questions.AcceptedAnswerId = Answers.Id\nINNER JOIN Users AS Askers ON Askers.Id = Questions.OwnerUserId\nGROUP BY Askers.Reputation\nORDER BY Askers.Reputation DESC"},{"QuerySetId":792228,"Title":"Find answers containing strategy to questions not containing strategy","Description":null,"QueryBody":"SELECT answers.Id AS \"Post Link\", answers.* FROM Posts AS questions INNER JOIN Posts AS answers ON questions.Id = answers.ParentId WHERE questions.PostTypeId = 1 AND answers.PostTypeId = 2 AND answers.Body LIKE '%strategy pattern%' AND NOT questions.Body LIKE '%strategy%' AND questions.Score > 0 AND questions.tags LIKE '%java%' LIMIT 100","CreationDate":"2018-12-13 03:39:27","validated":false,"QueryBody_Original":"SELECT  TOP 100 answers.Id AS [Post Link], answers.*\nFROM Posts questions\n    INNER JOIN Posts answers ON questions.Id = answers.ParentId\nWHERE\n    questions.PostTypeId = 1 AND\n    answers.PostTypeId = 2 AND\n    answers.Body LIKE '%strategy pattern%' AND\n    questions.Body NOT LIKE '%strategy%' AND\n    questions.Score > 0 AND\n    questions.tags LIKE '%java%'"},{"QuerySetId":792462,"Title":"Languages having most negative rated questions","Description":null,"QueryBody":"SELECT P.tags, SUM(P.score) AS \"Suma\" FROM Posts AS P GROUP BY P.tags ORDER BY Suma","CreationDate":"2018-01-27 01:27:45","validated":false,"QueryBody_Original":"SELECT  P.tags,sum(P.score) as 'Suma' from Posts P\ngroup by P.tags\norder by Suma"},{"QuerySetId":792777,"Title":"a) How many posts were created in 2017?","Description":null,"QueryBody":"SELECT AVG(DATEDIFF(A.creationDate, B.postCreationDate) * 1.0) FROM Posts AS A JOIN (SELECT AcceptedAnswerId, CreationDate AS postCreationDate FROM Posts WHERE NOT AcceptedAnswerID LIKE ' ' AND TIME_TO_STR(CreationDate, '%Y') LIKE '2017') AS B ON A.ID = B.AcceptedAnswerID","CreationDate":"2018-01-30 05:01:29","validated":false,"QueryBody_Original":"SELECT  \nAVG(DateDIFF(second,B.postCreationDate,A.creationDate)*1.0)\nFrom Posts A\nJOIN \n(\nSELECT AcceptedAnswerId,CreationDate as postCreationDate\nfrom Posts \nwhere AcceptedAnswerID not like ' ' and DatePart(year,CreationDate) like '2017' \n) B\non A.ID = B.AcceptedAnswerID"},{"QuerySetId":792988,"Title":"Oldest user by creation date","Description":null,"QueryBody":"SELECT Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate, 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT) AS Url FROM Users WHERE Reputation > 10000 ORDER BY CreationDate, Reputation DESC, LastAccessDate DESC LIMIT 1000","CreationDate":"2018-05-31 22:33:19","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Id, DisplayName, Age, Reputation, CreationDate, LastAccessDate,\n'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS VARCHAR) AS Url\nFROM Users\nWHERE Reputation > 10000\nORDER BY CreationDate ASC, Reputation DESC, LastAccessDate DESC;"},{"QuerySetId":793085,"Title":"top earners of multi-award badges","Description":null,"QueryBody":"SELECT name, num, userid AS \"User Link\" FROM (SELECT name, num, userid, ROW_NUMBER() OVER (PARTITION BY name ORDER BY num DESC) AS rownum FROM (SELECT name, userid, COUNT(id) AS num FROM badges GROUP BY name, userid) AS uc) AS ucn WHERE rownum <= 5 AND num > 2 ORDER BY name","CreationDate":"2018-01-28 23:11:22","validated":false,"QueryBody_Original":"SELECT  name,num,userid as [User Link]\nfrom\n(\nSELECT name,num,userid, ROW_NUMBER() over (partition by name order by num desc) as rownum\nfrom\n(SELECT name,userid,count(id) as num from badges group by name,userid) as uc\n) as ucn\nwhere rownum <= 5 and num > 2\norder by name"},{"QuerySetId":794419,"Title":"Kotlin Golfs which are missing the link header","Description":null,"QueryBody":"SELECT 'https:\/\/codegolf.stackexchange.com\/questions\/' + CAST(Posts.Id AS TEXT) + '\/' AS Link, Users.DisplayName AS \"Username\", Posts.Body, Question.Tags FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.ID INNER JOIN Posts AS Question ON Question.id = Posts.ParentID WHERE Posts.Body LIKE '%' + '##lang?Kotlin##' + '%' AND NOT Posts.Body LIKE '%https:\/\/kotlinlang.org%' AND Question.Tags LIKE '%code-golf%' AND Posts.PostTypeId = 2","CreationDate":"2018-01-31 03:33:57","validated":false,"QueryBody_Original":"SELECT  \n'https:\/\/codegolf.stackexchange.com\/questions\/' + CAST(Posts.Id as VARCHAR) + '\/' as Link, \nUsers.DisplayName as 'Username',\nPosts.Body,\nQuestion.Tags from Posts\nINNER JOIN Users on Posts.OwnerUserId = Users.ID\nINNER JOIN Posts as Question on Question.id = Posts.ParentID\n  where Posts.Body like '%'+'##lang?Kotlin##'+'%'\n  and Posts.Body not like '%https:\/\/kotlinlang.org%'\nAND Question.Tags like '%code-golf%'\nAND Posts.PostTypeId = 2"},{"QuerySetId":794483,"Title":"CodeGolf answers with no links","Description":null,"QueryBody":"SELECT Posts.*, Question.Tags FROM Posts INNER JOIN Posts AS Question ON Question.Id = Posts.ParentId WHERE Posts.PostTypeId = 2 AND NOT Posts.Body LIKE '%http%' AND NOT Posts.Body LIKE '%blockquote%'","CreationDate":"2019-06-28 22:24:41","validated":false,"QueryBody_Original":"SELECT  Posts.*, Question.Tags from Posts\ninner join Posts as Question on Question.Id = Posts.ParentId\nwhere\n  Posts.PostTypeId = 2\n  and Posts.Body not like '%http%' and Posts.Body not like '%blockquote%'"},{"QuerySetId":794486,"Title":"Total score of meta posts (average per reputation bracket)","Description":null,"QueryBody":"SELECT SUM(p.Score), u.Reputation FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.CommunityOwnedDate IS NULL \/* excluding wikis *\/ GROUP BY u.Id, u.Reputation LIMIT 100","CreationDate":"2018-01-30 17:52:32","validated":false,"QueryBody_Original":"SELECT  TOP 100 SUM(p.Score), u.Reputation\n  FROM Posts AS p\n  INNER JOIN Users AS u ON p.OwnerUserId = u.Id\n  WHERE p.CommunityOwnedDate IS NULL -- excluding wikis\n  GROUP BY u.Id, u.Reputation"},{"QuerySetId":794488,"Title":"Top Meta posts by 1 reputation users","Description":null,"QueryBody":"SELECT SUM(ABS(p.Score)) AS scores, u.Id AS \"User Link\" FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.CommunityOwnedDate IS NULL AND u.Reputation = 1 AND p.Score > 5 AND u.Id > 0 GROUP BY u.Id ORDER BY scores DESC","CreationDate":"2020-01-19 14:25:35","validated":false,"QueryBody_Original":"SELECT  sum(abs(p.Score)) as scores, u.Id AS [User Link]\n  FROM Posts AS p\n  INNER JOIN Users AS u ON p.OwnerUserId = u.Id\n  WHERE p.CommunityOwnedDate IS NULL\n    AND u.Reputation = 1\n    AND p.Score > 5\n    AND u.Id > 0\n    GROUP BY u.Id\n    ORDER BY scores DESC"},{"QuerySetId":794856,"Title":"Average Response Time for Accepted Answers in 2017","Description":null,"QueryBody":"SELECT AVG(DATEDIFF(CreationDate, Asked.AskedQuesDate)) AS AvgHrs2Answer FROM (SELECT Id AS AskedQuesId, CreationDate AS AskedQuesDate, AcceptedAnswerId FROM Posts WHERE YEAR(CreationDate) = 2017 AND NOT AcceptedAnswerId IS NULL AND PostTypeId = 1) AS Asked, Posts AS b WHERE b.Id = Asked.AcceptedAnswerId","CreationDate":"2018-01-31 19:05:24","validated":false,"QueryBody_Original":"SELECT  \nAVG(DATEDIFF(dd,Asked.AskedQuesDate,CreationDate)) AvgHrs2Answer \nfrom\n \n \n(SELECT Id as AskedQuesId, CreationDate as AskedQuesDate,AcceptedAnswerId \nfrom Posts where year(CreationDate)=2017 \t\t\t\t\t\t\t\nand AcceptedAnswerId  IS NOT NULL and PostTypeId=1  )\nAsked,\nPosts b \nwhere b.Id=Asked.AcceptedAnswerId"},{"QuerySetId":794901,"Title":"Most popular data analysis languages by month and year","Description":null,"QueryBody":"SELECT YEAR(posts.creationdate) AS year, MONTH(posts.creationdate) AS month, tags.tagname AS language, COUNT(tags.tagname) AS posts FROM posts, tags WHERE tags.tagname IN ('r', 'python', 'java', 'stata', 'matlab', 'sas', 'tableau') AND posts.tags LIKE ('%<' + tags.tagname + '>%') GROUP BY tags.tagname, YEAR(posts.creationdate), MONTH(posts.creationdate) ORDER BY tags.tagname, YEAR(posts.creationdate), MONTH(posts.creationdate)","CreationDate":"2018-01-31 07:23:49","validated":false,"QueryBody_Original":"SELECT \n    year(posts.creationdate) as year,\n    month(posts.creationdate) as month,\n    tags.tagname as language,\n    count(tags.tagname) as posts\nfrom posts, tags\nwhere tags.tagname in \n    ('r', \n    'python', \n    'java', \n    'stata', \n    'matlab', \n    'sas', \n    'tableau') and\n    posts.tags like ('%<' + tags.tagname + '>%')\ngroup by\n    tags.tagname,\n    year(posts.creationdate), \n    month(posts.creationdate)\norder by \n    tags.tagname, \n    year(posts.creationdate), \n    month(posts.creationdate);"},{"QuerySetId":795150,"Title":"van isle  by rep","Description":null,"QueryBody":"SELECT location, displayname, reputation, upvotes, downvotes, LastAccessDate FROM Users WHERE (location LIKE '%Vancouver Island%' OR location LIKE '%Victoria%' OR location LIKE '%Squamish%' OR location LIKE '%Duncan%' OR location LIKE '%Ladysmith%' OR location LIKE '%Nanaimo%' OR location LIKE '%Courtenay%' OR location LIKE '%Comox%' OR location LIKE '%Comox%') AND NOT location LIKE '%Australia%' ORDER BY LastAccessDate DESC, reputation DESC, location","CreationDate":"2018-05-17 07:13:28","validated":false,"QueryBody_Original":"SELECT  location , displayname, reputation, upvotes, downvotes, LastAccessDate\nfrom Users\nwhere (location like '%Vancouver Island%'\nOR location like '%Victoria%'\nOR location like '%Squamish%'\nOR location like '%Duncan%'\nOR location like '%Ladysmith%'\nOR location like '%Nanaimo%'\nOR location like '%Courtenay%'\nOR location like '%Comox%'\nOR location like '%Comox%') AND\nlocation not like '%Australia%'\norder by LastAccessDate desc, reputation desc, location"},{"QuerySetId":795195,"Title":"How many Stack Overflow accounts are there?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u","CreationDate":"2019-02-11 02:20:19","validated":false,"QueryBody_Original":"SELECT  count(*)\nFrom Users u"},{"QuerySetId":795493,"Title":"select * from tags where tagname like '%%'","Description":null,"QueryBody":"SELECT TagName FROM Tags AS W","CreationDate":"2018-02-02 01:50:14","validated":false,"QueryBody_Original":"SELECT  TagName FROM Tags W"},{"QuerySetId":795611,"Title":"posts after 1 Jan 2018","Description":null,"QueryBody":"SELECT * FROM posts WHERE creationdate > '2018-01-01'","CreationDate":"2018-02-01 15:54:39","validated":false,"QueryBody_Original":"SELECT  * from posts where creationdate > '2018-01-01'"},{"QuerySetId":796073,"Title":"Users who said \"WELCOME\" in comments!","Description":null,"QueryBody":"SELECT users.displayname AS \"User\", COUNT(comments.id) AS \"Welcomes\" FROM comments LEFT JOIN users ON comments.userid = users.id WHERE comments.text LIKE '%welcome to stack overflow%' COLLATE SQL_Latin1_General_CP1_CI_AS GROUP BY users.displayname ORDER BY COUNT(comments.id) DESC","CreationDate":"2018-02-02 16:05:25","validated":false,"QueryBody_Original":"SELECT  users.displayname as 'User', count(comments.id) as 'Welcomes'\nfrom comments left join users on comments.userid = users.id\nwhere comments.text like '%welcome to stack overflow%'\nCOLLATE SQL_Latin1_General_CP1_CI_AS\ngroup by users.displayname\norder by count(comments.id) desc"},{"QuerySetId":796233,"Title":"How does reputation correlate with post quality?","Description":null,"QueryBody":"SELECT u.Id, AVG(u.Reputation) AS Reputation, AVG(u.UpVotes) AS UpVotes, AVG(u.DownVotes) AS DownVotes, AVG(p.Score) AS Score, AVG(p.ViewCount) AS ViewCount FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id","CreationDate":"2018-02-02 22:39:27","validated":false,"QueryBody_Original":"SELECT  u.Id, AVG(u.Reputation) as Reputation, \nAVG(u.UpVotes) as UpVotes, AVG(u.DownVotes) as DownVotes, \nAVG(p.Score) as Score, AVG(p.ViewCount) as ViewCount \nFROM Users u\nINNER JOIN Posts p\nON u.Id = p.OwnerUserId\nGROUP BY u.Id;"},{"QuerySetId":796465,"Title":"Highest-voted first-word of question title","Description":null,"QueryBody":"SELECT REPLACE(LOWER(SUBSTRING(title, 0, STR_POSITION(title, ' ', 1))), '''s', '') AS FirstWord, AVG(score) AS avgScore, SUM(score) AS sumScore, COUNT(id) AS num_Qs FROM posts WHERE PostTypeId = 1 AND score > 5 AND viewcount > 50 GROUP BY REPLACE(LOWER(SUBSTRING(title, 0, STR_POSITION(title, ' ', 1))), '''s', '') HAVING COUNT(id) > 10000 AND SUM(score) > 50000 ORDER BY AVG(score) DESC","CreationDate":"2018-02-03 18:11:00","validated":false,"QueryBody_Original":"SELECT  \n   replace(lower(SUBSTRING(title, 0, CHARINDEX(' ', title, 1))),'''s','') as FirstWord,\n   avg(score) as avgScore,\n   sum(score) as sumScore, \n   count(id) as num_Qs\nfrom \n   posts \nwhere \n   PostTypeId = 1 and score > 5 and viewcount > 50\ngroup by \n   replace(lower(SUBSTRING(title, 0, CHARINDEX(' ', title, 1))),'''s','')\nhaving \n   count(id) > 10000 and sum(score) > 50000\norder by \n   avg(score) desc"},{"QuerySetId":796718,"Title":"Top 100 questions by score","Description":null,"QueryBody":"SELECT Title, Score, DisplayName, Reputation FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE PostTypeId = 1 ORDER BY Score DESC LIMIT 100","CreationDate":"2018-02-04 02:45:43","validated":false,"QueryBody_Original":"SELECT  TOP(100)\nTitle, Score, DisplayName, Reputation\nFROM posts p\nJOIN users u\nON p.OwnerUserId = u.Id\nWHERE PostTypeId =1\nORDER BY Score Desc"},{"QuerySetId":796954,"Title":"Most Viewed With Less Than 3 Answers","Description":null,"QueryBody":"SELECT Score, Title, CreationDate, ViewCount, AnswerCount, Tags, AcceptedAnswerId FROM Posts WHERE AnswerCount < 3 AND ViewCount > 10000 AND Tags LIKE '%java%' AND NOT Tags LIKE '%javascript%'","CreationDate":"2018-02-05 00:59:36","validated":false,"QueryBody_Original":"SELECT  Score, Title, CreationDate, ViewCount, AnswerCount, Tags, AcceptedAnswerId\nFROM Posts\nWHERE AnswerCount < 3 \nAND ViewCount > 10000\nAND Tags like '%java%' and Tags not like '%javascript%'"},{"QuerySetId":796972,"Title":"Most Viewed With Less Than 3 Answers - Java","Description":null,"QueryBody":"SELECT Score, Title, CreationDate, ViewCount, AnswerCount, Tags, AcceptedAnswerId FROM Posts WHERE AnswerCount < 3 AND ViewCount > 10000 AND Tags LIKE '%java%' AND NOT Tags LIKE '%javascript%'","CreationDate":"2018-02-05 01:02:21","validated":false,"QueryBody_Original":"SELECT  Score, Title, CreationDate, ViewCount, AnswerCount, Tags, AcceptedAnswerId\nFROM Posts\nWHERE AnswerCount < 3 \nAND ViewCount > 10000\nAND Tags like '%java%' and Tags not like '%javascript%'"},{"QuerySetId":797505,"Title":"new users count by Day Of Week","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%A') AS DOW, COUNT(id) FROM users GROUP BY TIME_TO_STR(creationdate, '%A')","CreationDate":"2018-03-28 14:37:45","validated":false,"QueryBody_Original":"SELECT  datename(weekday, creationdate) as DOW, count(id)\nfrom users\ngroup by datename(weekday, creationdate)"},{"QuerySetId":797677,"Title":"Users who Downvote but don't post","Description":null,"QueryBody":"SELECT Users.DisplayName, COUNT(Posts.Id) AS Posts, Users.Downvotes, Users.Downvotes \/ CAST(s.Total AS FLOAT) AS \"% of All Downvotes\", Users.Downvotes \/ CAST(COUNT(Posts.Id) AS FLOAT) AS \"Downvotes\/Posts\", Users.Downvotes \/ CAST(Users.Upvotes AS FLOAT) AS \"Downvotes\/upvotes\" FROM Users JOIN Posts ON Users.Id = Posts.OwnerUserId CROSS JOIN (SELECT SUM(downvotes) AS Total FROM Users WHERE Users.Id <> -1) AS s WHERE Users.Id <> -1 AND Users.Downvotes \/ CAST(s.Total AS FLOAT) > 0.01 AND Users.Upvotes > 0 AND Posts.CreationDate > CAST('1\/1\/2013' AS DATETIME) GROUP BY Users.DisplayName, Downvotes, Upvotes, s.Total ORDER BY Users.Downvotes \/ CAST(s.Total AS FLOAT) DESC","CreationDate":"2018-02-06 05:05:54","validated":false,"QueryBody_Original":"SELECT  Users.DisplayName, \nCount(Posts.Id) As Posts, Users.Downvotes,\nUsers.Downvotes\/CAST(s.Total As Float) AS '% of All Downvotes',\nUsers.Downvotes\/CAST(Count(Posts.Id) As Float) AS 'Downvotes\/Posts',\nUsers.Downvotes\/CAST(Users.Upvotes As Float) As 'Downvotes\/upvotes'\nFROM Users\nJOIN Posts\nOn Users.Id = Posts.OwnerUserId\n\nCROSS JOIN (\n  SELECT SUM(downvotes) As Total\n  From Users\n  Where Users.Id != -1\n) s\n\nWHERE Users.Id != -1\nAND Users.Downvotes\/CAST(s.Total As Float) > 0.01\nAND Users.Upvotes > 0\nAND Posts.CreationDate > Cast('1\/1\/2013' as datetime)\n\n\nGROUP By Users.DisplayName, Downvotes, Upvotes, s.Total\nORDER BY Users.Downvotes\/CAST(s.Total As Float)  Desc"},{"QuerySetId":797852,"Title":"Users who downvote but don't post","Description":null,"QueryBody":"SELECT Users.DisplayName, COUNT(Posts.Id) AS Posts, Users.Downvotes, Users.Downvotes \/ CAST(s.Total AS FLOAT) AS \"% of All Downvotes\", Users.Downvotes \/ CAST(COUNT(Posts.Id) AS FLOAT) AS \"Downvotes\/Posts\", Users.Downvotes \/ CAST(Users.Upvotes AS FLOAT) AS \"Downvotes\/upvotes\" FROM Users JOIN Posts ON Users.Id = Posts.OwnerUserId CROSS JOIN (SELECT SUM(downvotes) AS Total FROM Users WHERE Users.Id <> -1) AS s WHERE Users.Id <> -1 AND Users.Downvotes > 15 AND Users.Upvotes > 0 AND Posts.CreationDate > CAST('1\/1\/2013' AS DATETIME) GROUP BY Users.DisplayName, Downvotes, Upvotes, s.Total ORDER BY Users.Downvotes \/ CAST(COUNT(Posts.Id) AS FLOAT) DESC","CreationDate":"2018-02-06 04:16:17","validated":false,"QueryBody_Original":"SELECT  Users.DisplayName, \nCount(Posts.Id) As Posts, Users.Downvotes,\nUsers.Downvotes\/CAST(s.Total As Float) AS '% of All Downvotes',\nUsers.Downvotes\/CAST(Count(Posts.Id) As Float) AS 'Downvotes\/Posts',\nUsers.Downvotes\/CAST(Users.Upvotes As Float) As 'Downvotes\/upvotes'\nFROM Users\nJOIN Posts\nOn Users.Id = Posts.OwnerUserId\n\nCROSS JOIN (\n  SELECT SUM(downvotes) As Total\n  From Users\n  Where Users.Id != -1\n) s\n\nWHERE Users.Id != -1\nAND Users.Downvotes > 15\nAND Users.Upvotes > 0\nAND Posts.CreationDate > Cast('1\/1\/2013' as datetime)\n\n\nGROUP By Users.DisplayName, Downvotes, Upvotes, s.Total\nORDER BY Users.Downvotes\/CAST(Count(Posts.Id) As Float) Desc"},{"QuerySetId":798311,"Title":"Popular questions with few answers","Description":null,"QueryBody":"SELECT p.id, p.title, p.score FROM posts AS p WHERE p.score > 100 AND p.answercount < 4 ORDER BY p.score DESC","CreationDate":"2018-02-06 21:22:38","validated":false,"QueryBody_Original":"SELECT \np.id, p.title, p.score\nfrom\nposts p\nwhere\np.score > 100\nand p.answercount < 4\n-- and p.closeddate is null\norder by p.score desc"},{"QuerySetId":799585,"Title":"Posts edited using JavaScript script","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS \"Posts edited with script\" FROM PostHistory WHERE Comment = 'Fixing a site bug of disappearing double backslashes: https:\/\/tex.meta.stackexchange.com\/questions\/7168\/double-backslashes-disappear-from-code' GROUP BY UserId ORDER BY COUNT(*) DESC","CreationDate":"2018-02-08 05:49:43","validated":false,"QueryBody_Original":"SELECT  UserId AS [User Link], Count(*) As \"Posts edited with script\"\nfrom \n  PostHistory \nwhere \n  Comment = 'Fixing a site bug of disappearing double backslashes: https:\/\/tex.meta.stackexchange.com\/questions\/7168\/double-backslashes-disappear-from-code' \n  group by UserId ORDER BY Count(*) DESC;"},{"QuerySetId":800247,"Title":"Yearly Statistics of Posts on Machine Learning","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE (Tags LIKE '%machine-learning%' OR Tags LIKE '%tensorflow%' OR Tags LIKE '%weka%' OR Tags LIKE '%torch%' OR Tags LIKE '%theano%' OR Tags LIKE '%tensorflow%' OR Tags LIKE '%scikit-learn%' OR Tags LIKE '%caffe%' OR Tags LIKE '%keras%' OR Tags LIKE '%h2o%' OR Tags LIKE '%mahout%' OR Tags LIKE '%apache-spark-ml%' OR Tags LIKE '%amazon-machine-learning%' OR Tags LIKE '%pycaffe%' OR Tags LIKE '%pytorch%' OR Tags LIKE '%azure-machine-learning%' OR Tags LIKE '%deep-learning%') AND CreationDate >= '##start##' AND CreationDate <= '##end##'","CreationDate":"2018-02-08 22:39:27","validated":false,"QueryBody_Original":"SELECT  COUNT(*) from Posts WHERE \n(Tags LIKE '%machine-learning%' OR\nTags LIKE '%tensorflow%' OR\nTags LIKE '%weka%' OR\nTags LIKE '%torch%' OR\nTags LIKE '%theano%' OR\nTags LIKE '%tensorflow%' OR\nTags LIKE '%scikit-learn%' OR \nTags LIKE '%caffe%' OR\nTags LIKE '%keras%' OR\nTags LIKE '%h2o%' OR\nTags LIKE '%mahout%' OR\nTags LIKE '%apache-spark-ml%' OR\nTags LIKE '%amazon-machine-learning%' OR\nTags LIKE '%pycaffe%' OR\nTags LIKE '%pytorch%' OR\nTags LIKE '%azure-machine-learning%' OR\nTags LIKE '%deep-learning%'\n) \nAND CreationDate >= '##start##' AND \nCreationDate <= '##end##'"},{"QuerySetId":800891,"Title":"Users created each year ","Description":null,"QueryBody":"SELECT Users.DisplayName, Users.Reputation, Users.Location, Badges.Name FROM Users INNER JOIN Badges ON Users.Id = Badges.UserId WHERE Users.Reputation = (SELECT MAX(Reputation) FROM Users WHERE Location = 'South Africa' AND Badges.Name = 'Enlightened' AND YEAR(Badges.Date) = 2016)","CreationDate":"2018-02-12 14:11:15","validated":false,"QueryBody_Original":"SELECT  Users.DisplayName, Users.Reputation, Users.Location, Badges.Name\n   FROM Users\n   INNER JOIN Badges ON Users.Id = Badges.UserId \n   WHERE Users.Reputation = \n    (SELECT MAX(Reputation) FROM Users where Location = 'South Africa' \n    and Badges.Name = 'Enlightened'\n    and YEAR(Badges.Date)=2016);"},{"QuerySetId":800909,"Title":"Top VBA & Excel answer'ers this year","Description":null,"QueryBody":"SELECT u.id AS u_ID, u.DisplayName AS u_DisplayName, COUNT(a.id) AS cnt_Answers, SUM(a.score) AS sum_Score, SUM(p.viewcount) AS sum_Views, RANK() OVER (ORDER BY COUNT(a.id) DESC) AS rank_Answers, RANK() OVER (ORDER BY SUM(a.score) DESC) AS rank_Score, RANK() OVER (ORDER BY SUM(p.viewcount) DESC) AS rank_Views FROM users AS u JOIN posts AS a ON a.owneruserid = u.id JOIN posts AS p ON a.parentid = p.id WHERE a.posttypeid = 2 AND YEAR(a.creationdate) = YEAR(CURRENT_TIMESTAMP()) AND (p.tags LIKE '%vba%' OR p.tags LIKE '%excel%') GROUP BY u.id, u.DisplayName ORDER BY COUNT(a.id) DESC, SUM(a.score) DESC, SUM(p.viewcount) DESC","CreationDate":"2018-02-10 19:58:46","validated":false,"QueryBody_Original":"SELECT  \n  u.id as u_ID, \n  u.DisplayName as u_DisplayName, \n  count(a.id) as cnt_Answers, \n  sum(a.score) as sum_Score,\n  sum(p.viewcount) as sum_Views,\n    rank() over   \n    (order by count(a.id) desc) AS rank_Answers,\n  rank() over   \n    (order by sum(a.score) desc) AS rank_Score,\n  rank() over   \n    (order by sum(p.viewcount) desc) AS rank_Views\n  \nfrom users u \n  join posts a on a.owneruserid = u.id\n  join posts p on a.parentid = p.id\n  \nwhere \n  a.posttypeid = 2 \n  and year(a.creationdate) = year(getdate())\n  and ( p.tags like '%vba%' or p.tags like '%excel%' )\n\ngroup by\n  u.id, u.DisplayName\n\norder by \n  count(a.id) desc,\n  sum(a.score) desc,\n  sum(p.viewcount) desc"},{"QuerySetId":800946,"Title":"Total \"Welcome to...\" by year","Description":"How many times did site users say `Welcome to...`","QueryBody":"SELECT YEAR(creationdate), COUNT(id) AS WelcomeCount FROM comments WHERE text LIKE '%Welcome to%' GROUP BY YEAR(creationdate)","CreationDate":"2018-04-27 11:24:00","validated":false,"QueryBody_Original":"SELECT  year(creationdate), count(id) as WelcomeCount\nfrom comments \nwhere text like '%Welcome to%' \ngroup by year(creationdate)"},{"QuerySetId":801192,"Title":"Tags with no wiki excerpt","Description":null,"QueryBody":"SELECT Tags.*, Posts.Body, Posts.PosttypeId, Posts.CreationDate, Posts.DeletionDate, Posts.LastEditDate, Posts.LastActivityDate FROM Tags JOIN Posts ON Tags.ExcerptPostId = Posts.Id WHERE LENGTH(Posts.Body) = 0","CreationDate":"2018-02-10 16:51:54","validated":false,"QueryBody_Original":"SELECT  Tags.*,\nPosts.Body, Posts.PosttypeId, \nPosts.CreationDate, Posts.DeletionDate, Posts.LastEditDate, Posts.LastActivityDate\nfrom Tags join Posts on Tags.ExcerptPostId=Posts.Id\nwhere len(Posts.Body)=0"},{"QuerySetId":801221,"Title":"Tags with no wiki excerpt or tag wiki","Description":null,"QueryBody":"SELECT TagsWOWikiExcerpt.Id AS TagId, TagsWOWikiExcerpt.Tagname, TagsWOWikiExcerpt.Count, TagsWOWikiExcerpt.ExcerptBody, Posts.Body AS WikiBody, TagsWOWikiExcerpt.PosttypeId, TagsWOWikiExcerpt.CreationDate, TagsWOWikiExcerpt.DeletionDate, TagsWOWikiExcerpt.LastEditDate, TagsWOWikiExcerpt.LastActivityDate FROM (SELECT Tags.*, Posts.Body AS ExcerptBody, Posts.PosttypeId, Posts.CreationDate, Posts.DeletionDate, Posts.LastEditDate, Posts.LastActivityDate FROM Tags JOIN Posts ON Tags.ExcerptPostId = Posts.Id WHERE LENGTH(Posts.Body) = 0) AS TagsWOWikiExcerpt JOIN Posts ON TagsWOWikiExcerpt.WikiPostId = Posts.Id WHERE LENGTH(Posts.Body) = 0 ORDER BY TagsWOWikiExcerpt.Count DESC","CreationDate":"2018-02-10 17:07:29","validated":false,"QueryBody_Original":"SELECT  \nTagsWOWikiExcerpt.Id as TagId, TagsWOWikiExcerpt.Tagname,\nTagsWOWikiExcerpt.Count,\nTagsWOWikiExcerpt.ExcerptBody, Posts.Body as WikiBody,\nTagsWOWikiExcerpt.PosttypeId, \nTagsWOWikiExcerpt.CreationDate, TagsWOWikiExcerpt.DeletionDate, \nTagsWOWikiExcerpt.LastEditDate, TagsWOWikiExcerpt.LastActivityDate\nfrom \n(\nSELECT Tags.*,\nPosts.Body as ExcerptBody, Posts.PosttypeId, \nPosts.CreationDate, Posts.DeletionDate, Posts.LastEditDate, \nPosts.LastActivityDate\nfrom Tags join Posts on Tags.ExcerptPostId=Posts.Id\nwhere len(Posts.Body)=0\n) TagsWOWikiExcerpt\njoin Posts on TagsWOWikiExcerpt.WikiPostId=Posts.Id\nwhere len(Posts.Body)=0\norder by TagsWOWikiExcerpt.Count DESC"},{"QuerySetId":801361,"Title":"Top VBA & Excel answer'ers by Month: QHarr & Ashleedawg","Description":null,"QueryBody":"SELECT TIME_TO_STR(a.creationdate, '%Y-%m') AS YearMonth, u.id AS u_ID, u.DisplayName AS u_DisplayName, COUNT(a.id) AS cnt_Answers, SUM(a.score) AS sum_Score, SUM(p.viewcount) AS sum_Views, RANK() OVER (ORDER BY COUNT(a.id) DESC) AS rank_Answers, RANK() OVER (ORDER BY SUM(a.score) DESC) AS rank_Score, RANK() OVER (ORDER BY SUM(p.viewcount) DESC) AS rank_Views FROM users AS u JOIN posts AS a ON a.owneruserid = u.id JOIN posts AS p ON a.parentid = p.id WHERE a.posttypeid = 2 AND YEAR(a.creationdate) >= 2017 AND (p.tags LIKE '%vba%' OR p.tags LIKE '%excel%') GROUP BY TIME_TO_STR(a.creationdate, '%Y-%m'), u.id, u.DisplayName ORDER BY TIME_TO_STR(a.creationdate, '%Y-%m'), COUNT(a.id) DESC, SUM(a.score) DESC, SUM(p.viewcount) DESC","CreationDate":"2018-02-10 20:10:15","validated":false,"QueryBody_Original":"SELECT  \n  format(a.creationdate,'yyyy-MM') as YearMonth,\n  u.id as u_ID, \n  u.DisplayName as u_DisplayName, \n  count(a.id) as cnt_Answers, \n  sum(a.score) as sum_Score,\n  sum(p.viewcount) as sum_Views,\n    rank() over   \n    (order by count(a.id) desc) AS rank_Answers,\n  rank() over   \n    (order by sum(a.score) desc) AS rank_Score,\n  rank() over   \n    (order by sum(p.viewcount) desc) AS rank_Views\n  \nfrom users u \n  join posts a on a.owneruserid = u.id\n  join posts p on a.parentid = p.id\n  \nwhere \n  a.posttypeid = 2 \n  and year(a.creationdate) >=2017\n  and ( p.tags like '%vba%' or p.tags like '%excel%' )\n\ngroup by\n  format(a.creationdate,'yyyy-MM'), u.id, u.DisplayName\n\norder by \n  format(a.creationdate,'yyyy-MM'),\n  count(a.id) desc,\n  sum(a.score) desc,\n  sum(p.viewcount) desc"},{"QuerySetId":801362,"Title":"Top VBA & Excel answer'ers by Month","Description":null,"QueryBody":"SELECT TIME_TO_STR(a.creationdate, '%Y-%m') AS YearMonth, u.id AS u_ID, u.DisplayName AS u_DisplayName, COUNT(a.id) AS cnt_Answers, SUM(a.score) AS sum_Score, SUM(p.viewcount) AS sum_Views, RANK() OVER (ORDER BY COUNT(a.id) DESC) AS rank_Answers, RANK() OVER (ORDER BY SUM(a.score) DESC) AS rank_Score, RANK() OVER (ORDER BY SUM(p.viewcount) DESC) AS rank_Views FROM users AS u JOIN posts AS a ON a.owneruserid = u.id JOIN posts AS p ON a.parentid = p.id WHERE a.posttypeid = 2 AND YEAR(a.creationdate) >= 2017 AND (p.tags LIKE '%vba%' OR p.tags LIKE '%excel%') GROUP BY TIME_TO_STR(a.creationdate, '%Y-%m'), u.id, u.DisplayName ORDER BY TIME_TO_STR(a.creationdate, '%Y-%m'), COUNT(a.id) DESC, SUM(a.score) DESC, SUM(p.viewcount) DESC","CreationDate":"2018-02-10 20:11:54","validated":false,"QueryBody_Original":"SELECT  \n  format(a.creationdate,'yyyy-MM') as YearMonth,\n  u.id as u_ID, \n  u.DisplayName as u_DisplayName, \n  count(a.id) as cnt_Answers, \n  sum(a.score) as sum_Score,\n  sum(p.viewcount) as sum_Views,\n    rank() over   \n    (order by count(a.id) desc) AS rank_Answers,\n  rank() over   \n    (order by sum(a.score) desc) AS rank_Score,\n  rank() over   \n    (order by sum(p.viewcount) desc) AS rank_Views\n  \nfrom users u \n  join posts a on a.owneruserid = u.id\n  join posts p on a.parentid = p.id\n  \nwhere \n  a.posttypeid = 2 \n  and year(a.creationdate) >=2017\n  and ( p.tags like '%vba%' or p.tags like '%excel%' )\n\ngroup by\n  format(a.creationdate,'yyyy-MM'), u.id, u.DisplayName\n\norder by \n  format(a.creationdate,'yyyy-MM'),\n  count(a.id) desc,\n  sum(a.score) desc,\n  sum(p.viewcount) desc"},{"QuerySetId":801422,"Title":"Top users in Vancouver in 2017","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Age FROM Users WHERE LastAccessDate > '20170101' AND (LOWER(Location) LIKE '%vancouver%') ORDER BY Reputation DESC","CreationDate":"2018-02-11 01:06:37","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation, Age\nFROM\n    Users\nWHERE\n    LastAccessDate > '20170101'\n    AND\n    (LOWER(Location) LIKE '%vancouver%')\n    \n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":802135,"Title":"How can I find the election number for a given moderator nomination in the Posts table?","Description":"https:\/\/meta.stackexchange.com\/questions\/306007\/how-can-i-find-the-election-number-for-a-given-moderator-nomination-in-the-posts","QueryBody":"SELECT election, 'site:\/\/election\/' + CAST(election AS TEXT) + '?tab=nomination&all=true#post-' + CAST(ep.id AS TEXT) + '|' + COALESCE(u.displayname, ownerdisplayname) AS \"nomination post\" FROM (SELECT DENSE_RANK() OVER (ORDER BY max_nom) AS election, id FROM (SELECT pm.id, MIN(pm.creationdate) AS min_nom, MAX(pg.creationdate) AS max_nom FROM posts AS pm INNER JOIN posts AS pg ON pg.creationdate BETWEEN DATEADD(d, -16, pm.creationdate) \/* roughly 14 days *\/ AND DATEADD(d, 16, pm.creationdate) WHERE pm.posttypeid = 6 AND pg.posttypeid = 6 GROUP BY pm.id) AS data) AS ep INNER JOIN posts AS p ON p.id = ep.id LEFT OUTER JOIN users AS u ON p.owneruserid = u.id ORDER BY election","CreationDate":"2018-02-12 00:15:51","validated":false,"QueryBody_Original":"SELECT  election\n     , 'site:\/\/election\/' \n     + cast(election as nvarchar)\n     + '?tab=nomination&all=true#post-'\n     + cast(ep.id as nvarchar)\n     + '|'\n     + coalesce(u.displayname, ownerdisplayname) as [nomination post]\nfrom\n(\n  SELECT dense_rank() over(order by max_nom) election\n       , id\n  from\n  (\n    SELECT pm.id  \n         , min(pm.creationdate) min_nom\n         , max(pg.creationdate) max_nom\n    from posts pm\n    inner join posts pg on pg.creationdate \n          between dateadd(d, -16, pm.creationdate)   -- roughly 14 days\n             and dateadd(d, +16, pm.creationdate) \n    where pm.posttypeid = 6\n    and   pg.posttypeid = 6\n    group by pm.id\n  ) data\n) ep\ninner join posts p on p.id = ep.id\nleft outer join users u on p.owneruserid =u.id\norder by election"},{"QuerySetId":802155,"Title":"Number of Users On Stack Overflow","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2018-02-11 23:54:28","validated":false,"QueryBody_Original":"SELECT  Count(*) from Users"},{"QuerySetId":802217,"Title":"VTC: strong hint of cross-post","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title FROM Posts WHERE BODY LIKE '%down vote favorite%'","CreationDate":"2018-02-12 01:53:59","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Title FROM Posts \nWHERE BODY LIKE '%down vote favorite%'"},{"QuerySetId":802283,"Title":"About Me is Nullable Test","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, Location, WebsiteUrl, REPLACE(REPLACE(AboutMe, CHAR(13), ''), CHAR(10), '') AS AboutMe FROM Users WHERE AboutMe IS NULL ORDER BY Reputation DESC LIMIT 10","CreationDate":"2018-02-12 05:46:29","validated":false,"QueryBody_Original":"SELECT  TOP 10\n  Id, \n  DisplayName,\n  Reputation, \n  Location,\n  WebsiteUrl,\n  REPLACE(REPLACE(AboutMe, CHAR(13), ''), CHAR(10), '') as AboutMe\n\nFROM \n  Users\n  \nWHERE \n  AboutMe IS NULL\n  \nORDER BY \n  Reputation DESC;"},{"QuerySetId":802653,"Title":"Users with the most reputation","Description":null,"QueryBody":"SELECT * FROM (SELECT Id, Reputation FROM Users ORDER BY Reputation DESC LIMIT 50000) AS a ORDER BY Id","CreationDate":"2018-02-12 22:31:47","validated":false,"QueryBody_Original":"SELECT  * FROM (\nSELECT TOP 50000 Id,Reputation FROM Users\nORDER BY Reputation DESC\n) a ORDER BY Id ASC"},{"QuerySetId":803232,"Title":"Find alternative MathJax invocation ","Description":null,"QueryBody":"SELECT id AS \"Post Link\", score, Id FROM posts WHERE body LIKE '%\\\\(%' OR body LIKE '%\\\\[%' ORDER BY score DESC","CreationDate":"2018-02-13 10:18:16","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], score, Id\nfrom posts \nwhere body like '%\\\\(%' OR body like '%\\\\[%'\nORDER BY score DESC"},{"QuerySetId":805089,"Title":"RU SO questions without body","Description":null,"QueryBody":"SELECT * FROM posts WHERE (SELECT COUNT(*) FROM posthistory WHERE postid = posts.id AND (PostHistoryTypeId = 2 OR PostHistoryTypeId = 5)) = 0 AND body = title","CreationDate":"2018-02-21 14:47:40","validated":false,"QueryBody_Original":"SELECT  * from posts where \n(SELECT count(*) from posthistory \nwhere postid=posts.id AND (PostHistoryTypeId=2 OR PostHistoryTypeId=5))\n=0\nAND body = title"},{"QuerySetId":805091,"Title":"RU SO question with empty revision history","Description":null,"QueryBody":"SELECT * FROM posthistory WHERE postid = 17689","CreationDate":"2018-02-21 15:02:56","validated":false,"QueryBody_Original":"SELECT  * from posthistory where postid=17689"},{"QuerySetId":805166,"Title":"Top Scored Questions that are CLOSED!","Description":null,"QueryBody":"SELECT score, viewcount, creationdate, lastactivitydate, id, title, tags, answercount, commentcount, favoritecount FROM posts WHERE posttypeid = 1 AND (NOT closedDate IS NULL OR NOT deletiondate IS NULL) AND id = 10040954 ORDER BY score DESC","CreationDate":"2018-02-15 14:43:55","validated":false,"QueryBody_Original":"SELECT  \n  score, viewcount, creationdate, lastactivitydate, id, title,\n  tags, answercount, commentcount, favoritecount\n\nfrom\n  posts\n  \nwhere\n  posttypeid=1\n  and (closedDate is not null or deletiondate is not null)\n  and id = 10040954\n\norder by\n  score desc"},{"QuerySetId":805192,"Title":"Top 100 answers by score ","Description":null,"QueryBody":"SELECT pa.Id AS \"Post Link\", pa.Score, pq.Tags FROM Posts AS pa INNER JOIN Posts AS pq ON pa.ParentId = pq.Id WHERE pa.PostTypeId = 2 ORDER BY Score DESC LIMIT 100","CreationDate":"2018-02-15 15:04:54","validated":false,"QueryBody_Original":"SELECT  TOP 100 pa.Id As [Post Link], pa.Score, pq.Tags\nFROM Posts pa\nINNER JOIN Posts pq ON pa.ParentId = pq.Id\nWHERE pa.PostTypeId = 2\nORDER BY Score DESC"},{"QuerySetId":805195,"Title":"How many UpVotes I've given? ","Description":null,"QueryBody":"SELECT Id AS \"User Link\", UpVotes FROM Users WHERE id = 6282576","CreationDate":"2018-02-15 15:07:40","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], UpVotes\nfrom Users\nwhere id = 6282576"},{"QuerySetId":806390,"Title":"Get All Replies\/Answers for a tag based questions lists","Description":null,"QueryBody":"SELECT * FROM Posts WHERE ParentId IN (SELECT Id FROM Posts WHERE Tags LIKE '%aws-lambda%')","CreationDate":"2018-02-25 00:29:30","validated":false,"QueryBody_Original":"SELECT  * FROM Posts  WHERE ParentId IN \n(SELECT Id FROM Posts WHERE Tags LIKE '%aws-lambda%')"},{"QuerySetId":806391,"Title":"Get All User of posts comments for a particular tag","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id IN (SELECT UserId FROM Comments WHERE PostId IN (SELECT Id FROM Posts WHERE Tags LIKE '%aws-lambda%'))","CreationDate":"2018-02-17 11:04:16","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Id IN \n(SELECT UserId FROM Comments WHERE PostId IN \n(SELECT Id FROM Posts WHERE Tags LIKE '%aws-lambda%'))"},{"QuerySetId":807044,"Title":"Average Rep Per User (for Users >100 Rep)","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Users\", SUM(reputation) AS SumRep, SUM(reputation) \/ COUNT(*) AS \"Rep\/User\" FROM users WHERE reputation > 1000","CreationDate":"2018-03-24 00:32:55","validated":false,"QueryBody_Original":"SELECT  \n   count(*) as [Users], \n   sum(reputation) as SumRep, \n   sum(reputation)\/count(*) as [Rep\/User]\n\nfrom users\n\nwhere reputation > 1000"},{"QuerySetId":808661,"Title":"ID and Tag for 2017","Description":null,"QueryBody":"SELECT Id, PostTypeId, CreationDate, Tags FROM Posts WHERE CreationDate LIKE '%2017%' AND NOT NULLIF(Tags, '') IS NULL","CreationDate":"2018-02-21 06:06:28","validated":false,"QueryBody_Original":"SELECT  Id, PostTypeId, CreationDate, Tags\nFROM Posts\nWHERE CreationDate like '%2017%' and NULLIF(Tags, '') IS NOT NULL"},{"QuerySetId":808671,"Title":"Post ID and Tags for 2017","Description":null,"QueryBody":"SELECT Id, PostTypeId, CreationDate, Tags FROM Posts WHERE CreationDate BETWEEN '2017-01-01' AND '2017-12-31' AND NOT NULLIF(Tags, '') IS NULL","CreationDate":"2018-02-21 06:16:01","validated":false,"QueryBody_Original":"SELECT  Id, PostTypeId, CreationDate, Tags\nFROM Posts\nWHERE CreationDate BETWEEN '2017-01-01' and '2017-12-31' and NULLIF(Tags, '') IS NOT NULL"},{"QuerySetId":808845,"Title":"Questions with empty revision history","Description":null,"QueryBody":"SELECT * FROM posts AS x WHERE (SELECT COUNT(*) FROM posthistory WHERE postid = x.id) = 0","CreationDate":"2018-02-21 15:06:08","validated":false,"QueryBody_Original":"SELECT  * from posts as x \nwhere (SELECT count(*) from posthistory where postid=x.id)=0"},{"QuerySetId":809009,"Title":"Num of 'c' or 'c++' questions that contain code","Description":null,"QueryBody":"SELECT COUNT(id) FROM posts WHERE (tags LIKE '%c%' OR tags LIKE '%c++%') AND Body LIKE '%<code>%'","CreationDate":"2018-02-21 21:12:45","validated":false,"QueryBody_Original":"SELECT  count(id) from posts where (tags like '%c%' or tags like '%c++%') and Body LIKE '%<code>%'"},{"QuerySetId":809246,"Title":"Top 150 dev in India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2018-02-22 11:40:59","validated":false,"QueryBody_Original":"SELECT  TOP 150\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":809308,"Title":"Top SO users from istanbul","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%istanbul%' OR UPPER(Location) LIKE '%ISTANBUL%' OR UPPER(Location) LIKE '%\u0130STANBUL%' OR Location LIKE '%\u0130STANBUL%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-02-22 16:56:00","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%istanbul%'\n    OR UPPER(Location) LIKE '%ISTANBUL%'\n    OR UPPER(Location) LIKE '%\u0130STANBUL%'\n    or Location like '%\u0130STANBUL%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":809743,"Title":"Get linked posts by postid","Description":null,"QueryBody":"SELECT DISTINCT PostId AS \"Post Link\", * FROM PostLinks WHERE RelatedPostId = '##PostId##'","CreationDate":"2018-02-23 18:36:02","validated":false,"QueryBody_Original":"SELECT  DISTINCT PostId AS [Post Link]\n  , *\nFROM PostLinks\nWHERE RelatedPostId = '##PostId##'"},{"QuerySetId":810156,"Title":"Questions and tags for one year","Description":null,"QueryBody":"SELECT Id, CreationDate, Title, Body, Tags FROM Posts WHERE CreationDate > '2017-01-01'","CreationDate":"2018-02-24 07:43:51","validated":false,"QueryBody_Original":"SELECT  Id, CreationDate, Title, Body, Tags FROM Posts WHERE CreationDate>'2017-01-01'"},{"QuerySetId":810159,"Title":"Top 1000 Users according to Reputation","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation AS UserReputation FROM Users GROUP BY Users.Id, DisplayName, Users.Reputation ORDER BY UserReputation DESC LIMIT 1000","CreationDate":"2018-02-24 07:14:38","validated":false,"QueryBody_Original":"SELECT \n    TOP 1000\n    Users.Id as [User Link],\n    Users.Reputation as UserReputation\nFROM\n    Users\nGROUP BY\n    Users.Id, DisplayName, Users.Reputation\nORDER BY\n    UserReputation DESC"},{"QuerySetId":810592,"Title":"Users who want the 404 polyglot back","Description":null,"QueryBody":"SELECT id AS \"User Link\", AboutMe FROM Users WHERE (AboutMe LIKE '%404 polyglot%' OR AboutMe LIKE '%back the polyglot%')","CreationDate":"2018-02-25 19:17:24","validated":false,"QueryBody_Original":"SELECT  id AS [User Link], AboutMe\n  FROM Users\n  WHERE (AboutMe LIKE '%404 polyglot%' OR AboutMe LIKE '%back the polyglot%')"},{"QuerySetId":810948,"Title":"B\u00fasqueda de comentarios por Autor","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%##CommentText##%') AND UserId = '##UserId##' ORDER BY Score DESC","CreationDate":"2018-02-26 20:24:07","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('%##CommentText##%')\n   AND UserId = '##UserId##'\n ORDER BY Score DESC"},{"QuerySetId":811416,"Title":"Top SO Users from Germany","Description":"SO users from Germany with highest reputation","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%israel%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-02-27 14:49:11","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%israel%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":811640,"Title":"time of post by location","Description":null,"QueryBody":"SELECT location, COUNT(id) AS Loc FROM users WHERE location LIKE '%canada%' OR location LIKE '%india%' GROUP BY location ORDER BY COUNT(id) DESC","CreationDate":"2018-02-27 23:24:26","validated":false,"QueryBody_Original":"SELECT  location,\n  count(id) as Loc\nfrom users\nwhere location like '%canada%' or location like '%india%'\n\ngroup by location\n\norder by count(id) desc"},{"QuerySetId":811781,"Title":"Number Users Per Accepted Answers","Description":null,"QueryBody":"SELECT sub.NumAccepted, COUNT(*) AS UserCount FROM (SELECT SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) AS NumAccepted FROM Posts AS a INNER JOIN Users AS u ON u.Id = a.OwnerUserId INNER JOIN Posts AS q ON a.ParentId = q.Id WHERE (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL) \/* no self answers *\/ GROUP BY u.id) AS sub GROUP BY sub.NumAccepted","CreationDate":"2018-02-28 08:54:22","validated":false,"QueryBody_Original":"SELECT  \nsub.NumAccepted, COUNT(*) as UserCount\n  FROM (\n    SELECT\n      sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end) AS NumAccepted\n    FROM Posts a\n    INNER JOIN Users u ON u.Id = a.OwnerUserId\n    INNER JOIN Posts q ON a.ParentId = q.Id\n    WHERE \n      (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL)   --no self answers\n    GROUP BY u.id) sub\nGROUP BY sub.NumAccepted\n  \n--https:\/\/meta.stackexchange.com\/questions\/2677\/database-schema-documentation-for-the-public-data-dump-and-sede\n--https:\/\/stackoverflow.com\/questions\/11106170\/sql-avg-returning-an-int\n--http:\/\/data.stackexchange.com\/stackoverflow\/query\/811776\/total-accepted-answers"},{"QuerySetId":811785,"Title":"Number Users Per Number Questions","Description":null,"QueryBody":"SELECT sub.NumQuestions, COUNT(*) AS UserCount FROM (SELECT COUNT(*) AS NumQuestions FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.id WHERE p.PostTypeId = 1 GROUP BY u.id) AS sub GROUP BY sub.NumQuestions","CreationDate":"2018-02-28 09:01:45","validated":false,"QueryBody_Original":"SELECT  \nsub.NumQuestions, COUNT(*) as UserCount\nFROM (\n  SELECT \n    COUNT(*) as NumQuestions\n  FROM\n    Posts p INNER JOIN Users u ON p.OwnerUserId=u.id\n  WHERE\n    p.PostTypeId = 1\n  GROUP BY u.id) sub\nGROUP BY sub.NumQuestions\n--https:\/\/meta.stackexchange.com\/questions\/2677\/database-schema-documentation-for-the-public-data-dump-and-sede\n--https:\/\/stackoverflow.com\/questions\/11106170\/sql-avg-returning-an-int"},{"QuerySetId":812230,"Title":"Create inverted index table data for ","Description":null,"QueryBody":"SELECT * FROM users WHERE lastaccessdate LIKE '%2018%'","CreationDate":"2018-03-01 06:14:12","validated":false,"QueryBody_Original":"SELECT  * from users where lastaccessdate like '%2018%'"},{"QuerySetId":812340,"Title":"getting post data for inverted index ","Description":null,"QueryBody":"SELECT ID, PostTypeId, Tags, ClosedDate, CreationDate FROM Posts WHERE CreationDate LIKE '%2018%'","CreationDate":"2018-03-01 08:07:05","validated":false,"QueryBody_Original":"SELECT  ID, PostTypeId,Tags, ClosedDate,  CreationDate from Posts \nwhere CreationDate like '%2018%'"},{"QuerySetId":812736,"Title":"Search for users having two different badges","Description":null,"QueryBody":"SELECT UserId AS \"User Link\" FROM Badges WHERE Name IN ('Promoter', 'Tumbleweed') GROUP BY UserId HAVING COUNT(DISTINCT Name) = 2 LIMIT 1000","CreationDate":"2018-03-02 04:48:11","validated":false,"QueryBody_Original":"SELECT  TOP 1000 UserId AS [User Link]\nFROM Badges\nWHERE Name IN ('Promoter', 'Tumbleweed')\nGROUP BY UserId\nHAVING COUNT(DISTINCT Name) = 2"},{"QuerySetId":813001,"Title":"Select 'young' users with high rep","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, u.CreationDate FROM Users AS u WHERE u.CreationDate >= CAST('2016-01-01 06:10:01' AS DATETIME) AND u.Reputation > 2000","CreationDate":"2018-03-02 01:50:44","validated":false,"QueryBody_Original":"SELECT  u.DisplayName,u.Reputation,u.CreationDate \nFROM Users u\nWHERE u.CreationDate>=CAST('2016-01-01 06:10:01' AS DATETIME)\nAND u.Reputation>2000;"},{"QuerySetId":813466,"Title":"Up, accept and down votes over time","Description":" ... to balance the requests that ask to do something about down votes","QueryBody":"SELECT EOMONTH(votes.creationdate), SUM(CASE WHEN votetypeid = 1 THEN 1 ELSE 0 END) AS accept, SUM(CASE WHEN votetypeid = 3 THEN 1 ELSE 0 END) AS down, SUM(CASE WHEN votetypeid = 2 AND posttypeid = 1 THEN 1 ELSE 0 END) AS \"Q - up\", SUM(CASE WHEN votetypeid = 3 AND posttypeid = 1 THEN 1 ELSE 0 END) AS \"Q - down\", SUM(CASE WHEN votetypeid = 2 AND posttypeid = 2 THEN 1 ELSE 0 END) AS \"A - up\", SUM(CASE WHEN votetypeid = 3 AND posttypeid = 2 THEN 1 ELSE 0 END) AS \"A - down\" FROM votes INNER JOIN posts AS p ON p.id = votes.postid WHERE votetypeid IN (1, 2, 3) AND posttypeid IN (1, 2) AND votes.creationdate <= EOMONTH(DATEADD(m, -1, GETDATE())) GROUP BY EOMONTH(votes.creationdate) ORDER BY 1","CreationDate":"2019-07-01 17:41:47","validated":false,"QueryBody_Original":"SELECT  eomonth(votes.creationdate)\n    , sum(case when votetypeid = 1 then 1 else 0 end)  accept\n    , sum(case when votetypeid = 3 then 1 else 0 end)  down\n    , sum(case when votetypeid = 2 and posttypeid = 1 then 1 else 0 end)  [Q-up]\n    , sum(case when votetypeid = 3 and posttypeid = 1 then 1 else 0 end)  [Q-down]\n    , sum(case when votetypeid = 2 and posttypeid = 2 then 1 else 0 end)  [A-up]\n    , sum(case when votetypeid = 3 and posttypeid = 2 then 1 else 0 end)  [A-down]\nfrom votes\ninner join posts p on p.id = votes.postid\nwhere votetypeid in (1,2,3)\nand posttypeid in (1,2)\nand votes.creationdate <=  eomonth(dateadd(m, -1, getdate()))\ngroup by eomonth(votes.creationdate)\norder by 1"},{"QuerySetId":813474,"Title":"Top 5 Tags (with overall posts) and top 5 posts within each (by score)","Description":null,"QueryBody":"SELECT Id, Score, Tags FROM Posts ORDER BY Score DESC LIMIT 5","CreationDate":"2018-03-02 20:00:40","validated":false,"QueryBody_Original":"SELECT  \n  TOP 5 Id, \n  Score,\n  Tags\nFROM\n  Posts\nORDER BY \n  Score DESC;\n\nSELECT\n  * \nFROM \n  PostTags AS t1\nLEFT JOIN\n  Tags AS t2\nON \n  t1.TagId = t2.Id\nWHERE\n  PostId IN (11227809, 927358);"},{"QuerySetId":814677,"Title":"referrals to Jon Skeet's question tips, per user","Description":null,"QueryBody":"SELECT YEAR(c.creationdate), COUNT(c.id) FROM comments AS c \/* left join users u *\/ \/* on c.userid = u.id *\/ WHERE c.text LIKE '%codeblog.jonskeet.uk\/2010\/08\/29\/writing-the-perfect-question%' GROUP BY YEAR(c.creationdate) ORDER BY COUNT(c.id) DESC","CreationDate":"2018-03-05 19:26:18","validated":false,"QueryBody_Original":"SELECT  \n  year(c.creationdate) ,\n  --u.displayname,\n  count(c.id)\nfrom\n  comments c\n  --left join users u\n  --on c.userid = u.id\nwhere\n  c.text like '%codeblog.jonskeet.uk\/2010\/08\/29\/writing-the-perfect-question%'\n  --and year(c.creationdate) >= 2018\ngroup by\n  year(c.creationdate) \n  --u.displayname\n--having\n  --count(c.id) > 5\norder by \n  count(c.id) desc"},{"QuerySetId":814790,"Title":"No. of Answers of users","Description":null,"QueryBody":"SELECT pr.OwnerUserId, COUNT(pr.OwnerUserId) FROM Posts AS q, Posts AS a, Posts AS pr, Posts AS pt WHERE q.Id = a.ParentId AND a.OwnerUserId = pr.OwnerUserId AND pr.PostTypeId = 2 AND pr.ParentId = pt.Id AND pt.PostTypeId = 1 AND q.PostTypeId = 1 AND q.CreationDate BETWEEN '2017-01-01' AND '2017-01-31' AND NOT a.ParentId IS NULL AND q.AnswerCount >= 5 AND NOT q.AcceptedAnswerId IS NULL GROUP BY pr.OwnerUserId","CreationDate":"2018-03-06 02:19:26","validated":false,"QueryBody_Original":"SELECT  pr.OwnerUserId,count(pr.OwnerUserId)\nfrom Posts q,Posts a ,Posts pr,Posts pt\nwhere q.Id = a.ParentId\nand a.OwnerUserId = pr.OwnerUserId\nand pr.PostTypeId = 2\nand pr.ParentId = pt.Id\nand pt.PostTypeId = 1\nand q.PostTypeId = 1\nand q.CreationDate between '2017-01-01' and '2017-01-31'\nand a.ParentId IS NOT NULL\nand q.AnswerCount >= 5\nand q.AcceptedAnswerId IS NOT NULL\ngroup by pr.OwnerUserId"},{"QuerySetId":815060,"Title":"Check if owner ID and QID in data dump are linked to API","Description":null,"QueryBody":"SELECT * FROM Users WHERE Users.Id = 61","CreationDate":"2018-03-06 18:34:35","validated":false,"QueryBody_Original":"SELECT  *\nFROM Users\nWHERE Users.Id = 61"},{"QuerySetId":815223,"Title":"Stats for tags per days #1","Description":null,"QueryBody":"SELECT CAST(creationdate AS DATE) AS post_date, tags, SUM(score) AS score_sum, SUM(viewcount) AS views, SUM(answercount) AS answers, SUM(favoritecount) AS favorites, SUM(commentcount) AS comments, COUNT(1) AS usage_cnt FROM posts WHERE tags IN ('<r>', '<python>', '<java>', '<scala>', '<ruby>', '<c>', '<c++>', '<c#>', '<spark>', '<hadoop>', '<sql>') AND CAST(creationdate AS DATE) BETWEEN '2006-01-01' AND '2017-12-31' AND posttypeid = 1 GROUP BY CAST(creationdate AS DATE), tags","CreationDate":"2018-03-07 02:55:43","validated":false,"QueryBody_Original":"SELECT \n    cast(creationdate as date) post_date,\n    tags,\n    sum(score) score_sum,\n    sum(viewcount) views,\n    sum(answercount) answers,\n    sum(favoritecount) favorites,\n    sum(commentcount) comments,\n    count(1) usage_cnt\nFROM posts\nWHERE  tags in ('<r>', '<python>', '<java>', '<scala>', '<ruby>', '<c>',\n            '<c++>', '<c#>', '<spark>', '<hadoop>', '<sql>')\n\t\t\tand cast(creationdate as date)\n              between '2006-01-01' and '2017-12-31'\n            and posttypeid = 1\ngroup by cast(creationdate as date), tags"},{"QuerySetId":815758,"Title":"Average Post Length for Users with at least 10,000 Rep","Description":null,"QueryBody":"SELECT p.owneruserid, u.DisplayName, AVG(LENGTH(p.body)) AS AvgLen FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE u.reputation >= 10000 GROUP BY p.owneruserid, u.DisplayName ORDER BY AvgLen DESC","CreationDate":"2018-03-07 22:10:15","validated":false,"QueryBody_Original":"SELECT  p.owneruserid, u.DisplayName, avg(len(p.body)) AvgLen\nfrom posts p\ninner join users u on u.id = p.owneruserid\nwhere u.reputation >= 10000\ngroup by p.owneruserid, u.DisplayName\norder by AvgLen desc"},{"QuerySetId":815775,"Title":"Average Post Length for Users with at least 10,000 Rep and at least 100 Posts","Description":null,"QueryBody":"SELECT p.owneruserid, u.DisplayName, AVG(LENGTH(p.body)) AS AvgLen FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE u.reputation >= 10000 GROUP BY p.owneruserid, u.DisplayName HAVING COUNT(p.id) >= 100 ORDER BY AvgLen DESC","CreationDate":"2018-03-07 22:27:10","validated":false,"QueryBody_Original":"SELECT  p.owneruserid, u.DisplayName, avg(len(p.body)) AvgLen\nfrom posts p\ninner join users u on u.id = p.owneruserid\nwhere u.reputation >= 10000\ngroup by p.owneruserid, u.DisplayName\nhaving count(p.id) >= 100\norder by AvgLen desc"},{"QuerySetId":817257,"Title":"Top Data Engineering Posts by Score","Description":null,"QueryBody":"SELECT p.Title, p.Id, p.Score, a.Score AS \"Accepted Score\", u.DisplayName AS \"Asker\", au.DisplayName AS \"Answerer\" FROM Posts AS p JOIN Posts AS a ON p.AcceptedAnswerId = a.Id JOIN Users AS u ON p.OwnerUserId = u.Id JOIN Users AS au ON a.OwnerUserId = au.Id WHERE p.PostTypeId = 1 AND p.Score >= 25 AND NOT p.AcceptedAnswerId IS NULL ORDER BY p.Score DESC","CreationDate":"2018-03-09 22:59:26","validated":false,"QueryBody_Original":"SELECT  p.Title, p.Id, p.Score, a.Score AS \"Accepted Score\", \nu.DisplayName AS \"Asker\", au.DisplayName AS \"Answerer\"\n  \nFROM Posts p\nJOIN Posts a ON p.AcceptedAnswerId = a.Id\nJOIN Users u ON p.OwnerUserId = u.Id\nJOIN Users au ON a.OwnerUserId = au.Id\nWHERE p.PostTypeId = 1\nAND p.Score >= 25\nand p.AcceptedAnswerId IS NOT NULL\nORDER BY p.Score DESC"},{"QuerySetId":817911,"Title":"Top Users with no Gold Badges","Description":null,"QueryBody":"SELECT u.displayname, u.reputation FROM users AS u LEFT OUTER JOIN badges AS b ON b.userid = u.id AND b.name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero') GROUP BY u.displayname, u.reputation, b.name HAVING b.name IS NULL ORDER BY u.reputation DESC","CreationDate":"2018-03-11 02:22:03","validated":false,"QueryBody_Original":"SELECT  u.displayname, u.reputation FROM users u\n  LEFT OUTER JOIN badges b \n  ON b.userid = u.id\n  AND b.name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero')\n  GROUP BY u.displayname, u.reputation, b.name\n  HAVING b.name IS NULL\n  ORDER BY u.reputation DESC"},{"QuerySetId":818059,"Title":"Most viewed posts by tag ","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags, ViewCount, CreationDate FROM Posts WHERE LastActivityDate > DATEADD(m, -12, GETDATE()) AND Tags LIKE '<##Tag##>' ORDER BY ViewCount DESC","CreationDate":"2018-03-11 05:56:57","validated":false,"QueryBody_Original":"SELECT  \n    Id AS [Post Link], \n    Tags,\n    ViewCount,\n    CreationDate\nFROM \n    Posts \nWHERE \n    LastActivityDate > DATEADD(m, -12, GETDATE()) AND\n    Tags LIKE '<##Tag##>'\n\nORDER BY \n    ViewCount DESC"},{"QuerySetId":818078,"Title":"Most viewed posts by tag w\/o tag in post title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags, ViewCount, CreationDate, Title FROM Posts WHERE LastActivityDate > DATEADD(m, -12, GETDATE()) AND Tags LIKE '<##Tag##>' AND NOT Title LIKE '<##Tag##>' AND NOT Title LIKE '<##ExcludeTitle##>' ORDER BY ViewCount DESC","CreationDate":"2018-03-11 07:06:17","validated":false,"QueryBody_Original":"SELECT  \n    Id AS [Post Link], \n    Tags,\n    ViewCount,\n    CreationDate,\n    Title\nFROM \n    Posts \nWHERE \n    LastActivityDate > DATEADD(m, -12, GETDATE()) AND\n    Tags LIKE '<##Tag##>' AND\n    Title NOT LIKE '<##Tag##>' AND\n    Title NOT LIKE '<##ExcludeTitle##>'\n    \n\nORDER BY \n    ViewCount DESC"},{"QuerySetId":818411,"Title":"select count(*) from posts where posts.ViewCount>15000 and posts.ViewCount < 20000","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE posts.ViewCount > 15000 AND posts.ViewCount < 20000","CreationDate":"2018-03-11 22:21:36","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where posts.ViewCount>15000 and posts.ViewCount < 20000"},{"QuerySetId":818415,"Title":"Assignment 1 - Step 8: Data File 5","Description":null,"QueryBody":"SELECT * FROM posts WHERE posts.ViewCount > 24231 AND posts.ViewCount < 30580","CreationDate":"2018-03-11 23:10:07","validated":false,"QueryBody_Original":"SELECT  * from posts where posts.ViewCount>24231 and posts.ViewCount<30580"},{"QuerySetId":818590,"Title":"posts tagged python + (excel or vba)","Description":null,"QueryBody":"SELECT COUNT(id) AS num FROM posts WHERE tags LIKE '%python%' AND (tags LIKE '%vba%' OR tags LIKE '%excel%')","CreationDate":"2018-03-12 02:01:12","validated":false,"QueryBody_Original":"SELECT \n  --tags,\n  count(id) as num\n  \nfrom \n  posts\n\nwhere \n  tags like '%python%'\n  and ( tags like '%vba%' or tags like '%excel%' )\n\n\/*group by\n  tags\n  \norder by\n  count(id) desc*\/"},{"QuerySetId":818790,"Title":"ELECT TOP 200     ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],      Id AS [User Link],      R","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2018-03-12 10:09:10","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":819443,"Title":"posts per day per mod","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%Y-%m-%d') AS dt, COUNT(id) \/ 25 AS \"posts\", COUNT(id) \/ 25 AS \"posts per mod\" FROM posts WHERE YEAR(creationdate) >= 2018 GROUP BY TIME_TO_STR(creationdate, '%Y-%m-%d') ORDER BY TIME_TO_STR(creationdate, '%Y-%m-%d') DESC","CreationDate":"2018-03-13 01:52:05","validated":false,"QueryBody_Original":"SELECT  format(creationdate,'yyyy-MM-dd') as dt,\ncount(id) \/25 as [posts] ,\ncount(id) \/25 as [posts per mod] \nfrom posts\nwhere year(creationdate)>=2018\ngroup by format(creationdate,'yyyy-MM-dd') \norder by format(creationdate,'yyyy-MM-dd') desc"},{"QuerySetId":820091,"Title":"Top 200 Users : Sri Lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Age, Users.Location, Users.Reputation, Users.UpVotes, Users.DownVotes, (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS \"Questions\", (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS \"Answers\" FROM Users WHERE (UPPER(Users.Location) LIKE '%SRI LANKA%' OR UPPER(Users.Location) LIKE '%COLOMBO%' OR UPPER(Users.Location) LIKE '%KANDY%') AND UPPER(Users.Age) < 26 ORDER BY Reputation DESC LIMIT 200","CreationDate":"2018-03-13 13:48:10","validated":false,"QueryBody_Original":"SELECT  TOP 200 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Users.Age,\n    Users.Location,\n    Users.Reputation,\n    Users.UpVotes,\n    Users.DownVotes,\n    (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS [Questions],\n    (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS [Answers]\nFROM\n    Users\nWHERE\n    (UPPER(Users.Location) LIKE '%SRI LANKA%'\n    OR UPPER(Users.Location) LIKE '%COLOMBO%'\n    OR UPPER(Users.Location) LIKE '%KANDY%') AND\n    UPPER(Users.Age) < 26\nORDER BY\n    Reputation DESC;"},{"QuerySetId":820400,"Title":"Questions that are only code","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", body FROM Posts AS p WHERE NOT p.Body LIKE '%<p>%' AND p.Body LIKE '%<blockquote>%' AND PostTypeId = 1 AND creationdate > '2018-03-01' LIMIT 50","CreationDate":"2018-03-13 19:58:18","validated":false,"QueryBody_Original":"SELECT  TOP 50 Id AS [Post Link],body\nFROM Posts p\nWHERE p.Body NOT LIKE '%<p>%'\nAND p.Body LIKE '%<blockquote>%'\nAND PostTypeId = 1\nAND creationdate > '2018-03-01'"},{"QuerySetId":820609,"Title":"Tag excerpts mentioning Stack Overflow","Description":null,"QueryBody":"SELECT t.TagName, p.LastEditDate, 'site:\/\/edit-tag-wiki\/' + CAST(t.Id AS TEXT) AS \"Link\" FROM Posts AS p INNER JOIN Tags AS t ON p.Id = t.ExcerptPostId WHERE p.Body LIKE '%Stack%Overflow%' ORDER BY p.LastEditDate","CreationDate":"2018-03-13 20:19:58","validated":false,"QueryBody_Original":"SELECT  t.TagName, p.LastEditDate,\n  'site:\/\/edit-tag-wiki\/' + CAST(t.Id AS nvarchar) AS 'Link'\n  FROM Posts AS p\n  INNER JOIN Tags AS t\n    ON p.Id = t.ExcerptPostId\n  WHERE p.Body LIKE '%Stack%Overflow%'\n  ORDER BY p.LastEditDate ASC"},{"QuerySetId":820614,"Title":"Select all questions that are subtags of java, but not Java itself","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", * FROM Posts WHERE Posts.PostTypeId = 1 AND Posts.Tags LIKE '<java-8>' AND NOT Posts.Tags LIKE '<java>' ORDER BY Posts.Score DESC","CreationDate":"2018-03-13 20:30:31","validated":false,"QueryBody_Original":"SELECT  \n  Posts.Id as [Post Link],\n  * \nfrom Posts \nwhere Posts.PostTypeId = 1\n  and Posts.Tags like '<java-8>'\n  and Posts.Tags not like '<java>'\norder by Posts.Score desc"},{"QuerySetId":820718,"Title":"compare usage of tag combinations: [excel] [vba] [excel-vba]","Description":null,"QueryBody":"SELECT 'EorV_hasEV' AS x, COUNT(id) AS y FROM posts WHERE (tags LIKE '%<excel>%' OR tags LIKE '%<vba>%') AND NOT tags LIKE '%<excel-vba>%'","CreationDate":"2018-03-13 22:49:14","validated":false,"QueryBody_Original":"SELECT  'EorV_hasEV' as x, count(id) as y \nfrom posts where\n   ( tags like '%<excel>%'\n    or tags like '%<vba>%' )\nand  tags not like '%<excel-vba>%'"},{"QuerySetId":821282,"Title":"Return list of users ","Description":null,"QueryBody":"SELECT DisplayName, creationdate FROM users WHERE creationdate > '2018-03-11 14:56:17'","CreationDate":"2018-03-14 17:51:26","validated":false,"QueryBody_Original":"SELECT  DisplayName, creationdate from users\nWhere creationdate >'2018-03-11 14:56:17'"},{"QuerySetId":821471,"Title":"Top 200 SO Users from Mathura","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%delhi%' OR UPPER(Location) LIKE '%DELHI%' OR Location LIKE '%Delhi%' AND Reputation <= 5000 ORDER BY Reputation DESC LIMIT 200","CreationDate":"2020-09-14 11:56:57","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%delhi%'\n    OR UPPER(Location) LIKE '%DELHI%'\n    or Location like '%Delhi%'\n    AND Reputation <= 5000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":821554,"Title":"SELECT CreationDate FROM Posts WHERE Id BETWEEN 20 AND 30","Description":null,"QueryBody":"SELECT CreationDate FROM Posts WHERE Id BETWEEN 20 AND 30","CreationDate":"2018-03-15 00:12:57","validated":false,"QueryBody_Original":"SELECT  CreationDate FROM Posts WHERE Id BETWEEN 20 AND 30"},{"QuerySetId":821929,"Title":"Votos\/Publicaciones y Votos\/Vistas paratodos los sitios de Stack Exchange","Description":null,"QueryBody":"SELECT * FROM posts WHERE PostTypeId = 3","CreationDate":"2018-03-15 06:54:55","validated":false,"QueryBody_Original":"SELECT  * from posts where PostTypeId = 3"},{"QuerySetId":821948,"Title":"web scraping by day of week","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%W'), TIME_TO_STR(creationdate, '%A'), COUNT(id) AS Num FROM posts WHERE posttypeid \/* year(creationdate) >= 2017 *\/ \/* and *\/ \/* tags like '%web-scraping%' *\/ \/* and *\/ = 1 GROUP BY TIME_TO_STR(creationdate, '%W'), TIME_TO_STR(creationdate, '%A') ORDER BY TIME_TO_STR(creationdate, '%W')","CreationDate":"2018-03-15 08:04:13","validated":false,"QueryBody_Original":"SELECT \n  datepart(dw,creationdate),\n  DATENAME(dw,creationdate),\n  count(id) as Num\nfrom\n  posts\n\nwhere \n  --year(creationdate) >= 2017\n  --and \n  --tags like '%web-scraping%'\n  --and \n  posttypeid = 1\n\ngroup by\n  datepart(dw,creationdate),\n  DATENAME(dw,creationdate)\n\norder by\n  datepart(dw,creationdate)"},{"QuerySetId":822651,"Title":"Number of inactive users over 5 years old","Description":"Enter Query Description\r\n","QueryBody":"SELECT * FROM Users\/*   AND DATEDIFF(day,CreationDate, GETDATE()) > (365*1) *\/  WHERE Id < 500000 AND DATEDIFF(CURRENT_TIMESTAMP(), LastAccessDate) > (365 * 1)","CreationDate":"2018-06-01 02:19:48","validated":false,"QueryBody_Original":"SELECT  *\n  FROM Users\n WHERE Id < 500000\n   \n--   AND DATEDIFF(day,CreationDate, GETDATE()) > (365*1)\n   AND DATEDIFF(day,LastAccessDate, GETDATE()) > (365*1)\n--   AND (SELECT\n--        Count(*) FROM Posts\n--          WHERE \n--            (Posts.OwnerUserId = Users.Id) AND\n--            (DATEDIFF(day, CreationDate, GETDATE()) < 30)\n--        ) = 0"},{"QuerySetId":822739,"Title":"The top 10 posts by score","Description":null,"QueryBody":"SELECT Score, Posts.ID AS PostID, Posts.Title AS Title, Posts.Tags AS Tags FROM Posts ORDER BY Score DESC LIMIT 10","CreationDate":"2018-03-16 02:56:51","validated":false,"QueryBody_Original":"SELECT  TOP 10\n        Score ,\n        Posts.ID AS PostID,\n        Posts.Title as Title,\n        Posts.Tags as Tags\n    FROM Posts\n    ORDER BY Score DESC"},{"QuerySetId":822856,"Title":"User's Rank in a location with min rep cap","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName, Reputation, Location, Views, ProfileImageUrl, AboutMe FROM Users WHERE Reputation >= N'##repcap##' AND LOWER(Location) LIKE LOWER(N'%##Location##%') ORDER BY Reputation DESC","CreationDate":"2019-02-16 20:13:58","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    DisplayName,\n    Reputation,\n    Location,\n    Views,\n    ProfileImageUrl,\n    AboutMe\nFROM\n    Users\nWHERE\n    Reputation >= N'##repcap##' AND\n    LOWER(Location) LIKE LOWER(N'%##Location##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":823901,"Title":"Step 5: Column Filtration from File5","Description":null,"QueryBody":"SELECT score, ViewCount, Body, OwnerUserId FROM posts WHERE posts.ViewCount > 450000","CreationDate":"2018-03-17 17:53:54","validated":false,"QueryBody_Original":"SELECT  score,ViewCount,Body,OwnerUserId from posts where posts.ViewCount>450000"},{"QuerySetId":824022,"Title":"select count(*) from posts where posts.ViewCount > 10000 and posts.ViewCount < 20000","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE posts.ViewCount > 10000 AND posts.ViewCount < 20000","CreationDate":"2018-03-17 18:10:04","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where posts.ViewCount > 10000 and posts.ViewCount < 20000"},{"QuerySetId":824185,"Title":"How many duplicates of \"What is a NullPointerException and how do I fix it?\" are there?","Description":null,"QueryBody":"SELECT COUNT(*) FROM postlinks WHERE linktypeid = 3 \/* duplicate *\/ AND relatedPostid = 218384","CreationDate":"2018-03-17 20:30:33","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom postlinks\nwhere linktypeid = 3 -- duplicate\nAND relatedPostid = 218384"},{"QuerySetId":824607,"Title":"TOP 100 StackOverflow users from Czech","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%czech%' OR UPPER(Location) LIKE '%CZ' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-03-18 18:28:47","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%czech%'\n    OR UPPER(Location) LIKE '%CZ'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":824608,"Title":"\"The candidates answer your questions.\u201d, different elections, same link","Description":"https:\/\/meta.stackoverflow.com\/questions\/364780\/the-candidates-answer-your-questions-different-elections-same-link","QueryBody":"SELECT DENSE_RANK() OVER (ORDER BY max_nom) AS election, id, min_nom, max_nom FROM (SELECT pm.id, MIN(pm.creationdate) AS min_nom, MAX(pg.creationdate) AS max_nom FROM posts AS pm INNER JOIN posts AS pg ON pg.creationdate BETWEEN DATEADD(d, -16, pm.creationdate) \/* roughly 14 days *\/ AND DATEADD(d, 16, pm.creationdate) WHERE pm.posttypeid = 6 AND pg.posttypeid = 6 GROUP BY pm.id) AS data","CreationDate":"2018-03-18 18:58:12","validated":false,"QueryBody_Original":"SELECT  dense_rank() over(order by max_nom) election\n       , id\n       , min_nom\n       , max_nom\n  from\n  (\n    SELECT pm.id  \n         , min(pm.creationdate) min_nom\n         , max(pg.creationdate) max_nom\n    from posts pm\n    inner join posts pg on pg.creationdate \n          between dateadd(d, -16, pm.creationdate)   -- roughly 14 days\n             and dateadd(d, +16, pm.creationdate) \n    where pm.posttypeid = 6\n    and   pg.posttypeid = 6\n    group by pm.id\n  ) data"},{"QuerySetId":825240,"Title":"Users who have asked the most unanswered questions","Description":null,"QueryBody":"SELECT COUNT(*) AS UnansweredCount, OwnerUserId AS \"User Link\" FROM Posts WHERE PostTypeId = 1 AND AnswerCount = 0 GROUP BY OwnerUserId, OwnerDisplayName ORDER BY UnansweredCount DESC LIMIT 10","CreationDate":"2018-03-19 13:21:33","validated":false,"QueryBody_Original":"SELECT  TOP(10)\n    COUNT(*) AS UnansweredCount,\n    OwnerUserId  as[User Link]\nFROM\n    Posts\nWHERE\n    PostTypeId = 1 AND\n    AnswerCount = 0\nGROUP BY OwnerUserId, OwnerDisplayName\nORDER BY UnansweredCount DESC"},{"QuerySetId":825586,"Title":"Post closers and their reputation (special present for @Magisch)","Description":null,"QueryBody":"SELECT Closers.PostId AS \"Post Link\", Users.Id AS \"User Link\", Users.Reputation FROM (SELECT PostId, JSON_EXTRACT_SCALAR(Text, '$.Voters[0].Id') AS UserId FROM PostHistory WHERE PostHistoryTypeId = 10 UNION ALL SELECT PostId, JSON_EXTRACT_SCALAR(Text, '$.Voters[1].Id') AS UserId FROM PostHistory WHERE PostHistoryTypeId = 10 UNION ALL SELECT PostId, JSON_EXTRACT_SCALAR(Text, '$.Voters[2].Id') AS UserId FROM PostHistory WHERE PostHistoryTypeId = 10 UNION ALL SELECT PostId, JSON_EXTRACT_SCALAR(Text, '$.Voters[3].Id') AS UserId FROM PostHistory WHERE PostHistoryTypeId = 10 UNION ALL SELECT PostId, JSON_EXTRACT_SCALAR(Text, '$.Voters[4].Id') AS UserId FROM PostHistory WHERE PostHistoryTypeId = 10) AS Closers INNER JOIN Users ON Closers.UserId = Users.Id","CreationDate":"2018-03-19 23:00:34","validated":false,"QueryBody_Original":"SELECT  Closers.PostId AS [Post Link], Users.Id AS [User Link], Users.Reputation\n\nFROM\n(\nSELECT PostId, JSON_VALUE(Text, '$.Voters[0].Id') AS UserId\n  FROM PostHistory WHERE PostHistoryTypeId = 10\nUNION ALL\nSELECT PostId, JSON_VALUE(Text, '$.Voters[1].Id') AS UserId\n  FROM PostHistory WHERE PostHistoryTypeId = 10\nUNION ALL\nSELECT PostId, JSON_VALUE(Text, '$.Voters[2].Id') AS UserId\n  FROM PostHistory WHERE PostHistoryTypeId = 10\nUNION ALL\nSELECT PostId, JSON_VALUE(Text, '$.Voters[3].Id') AS UserId\n  FROM PostHistory WHERE PostHistoryTypeId = 10\nUNION ALL\nSELECT PostId, JSON_VALUE(Text, '$.Voters[4].Id') AS UserId\n  FROM PostHistory WHERE PostHistoryTypeId = 10\n) AS Closers\n\nINNER JOIN Users\n  ON Closers.UserId = Users.Id"},{"QuerySetId":825657,"Title":"Almost dead zombie finder on C++ tag","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", MAX(a.Score) AS \"Best answer score\" FROM Posts AS q JOIN Posts AS a ON a.ParentId = q.Id WHERE q.PostTypeId = 1 AND q.AnswerCount > 0 AND q.AcceptedAnswerId IS NULL AND a.PostTypeId = 2 AND q.tags LIKE 'c++' GROUP BY q.Id HAVING MAX(a.Score) = 0","CreationDate":"2018-03-19 23:27:41","validated":false,"QueryBody_Original":"SELECT  \n  q.Id AS [Post Link],\n  MAX(a.Score) AS [Best answer score]\nFROM \n  Posts q\nJOIN \n  Posts a ON a.ParentId = q.Id\nWHERE \n      q.PostTypeId = 1  \n  AND q.AnswerCount > 0\n  AND q.AcceptedAnswerId IS NULL\n  AND a.PostTypeId = 2\n  AND q.tags like 'c++'\nGROUP BY \n  q.Id\nHAVING \n MAX(a.Score) = 0"},{"QuerySetId":825946,"Title":"Links to PasteBin in comments","Description":null,"QueryBody":"SELECT * FROM Comments WHERE Text LIKE '%pastebin%' ORDER BY CreationDate","CreationDate":"2018-03-20 04:52:01","validated":false,"QueryBody_Original":"SELECT \n  *\nFROM\n  Comments\nWHERE\n  Text Like '%pastebin%'\nORDER BY\n  CreationDate;"},{"QuerySetId":826267,"Title":"Posts that start with a lower case letter","Description":null,"QueryBody":"SELECT p.CreationDate, CASE WHEN (2 = p.PostTypeId) THEN 'Answer' ELSE 'Question' END AS PostType, p.Score, CASE WHEN (2 = p.PostTypeId) THEN t.Title ELSE p.Title END AS QuestionTitle, p.Body, p.Id AS \"Post Link\" FROM Posts AS p LEFT OUTER JOIN Posts AS t ON (p.ParentId = t.Id) WHERE 1 = 1 AND p.CreationDate >= DATEADD(DAY, -45, GETDATE()) AND 5 \/* post has to be worth editing to begin with *\/ <= p.Score AND (((2 = p.PostTypeId) AND SUBSTRING(t.Title, 1, 1) <> UPPER(SUBSTRING(t.Title, 1, 1))) OR ((1 = p.PostTypeId) AND SUBSTRING(p.Title, 1, 1) <> UPPER(SUBSTRING(p.Title, 1, 1)))) ORDER BY p.Id DESC","CreationDate":"2018-04-13 04:53:57","validated":false,"QueryBody_Original":"SELECT  p.CreationDate,\n  CASE WHEN (2 = p.PostTypeId) THEN 'Answer'\n       ELSE                         'Question'\n       END AS PostType,\n  p.Score,\n  CASE WHEN (2 = p.PostTypeId) THEN t.Title\n       ELSE                         p.Title\n       END AS QuestionTitle,\n  p.Body,\n  p.Id AS [Post Link]\nFROM Posts p LEFT OUTER JOIN Posts t on (p.ParentId = t.Id)\nWHERE 1=1 AND\n\n-- only needed on Stack Overflow\np.CreationDate >= DATEADD(DAY, -45, GETDATE()) AND\n-- post has to be worth editing to begin with\n5 <= p.Score AND\n\n(\n((2 = p.PostTypeId) AND substring(t.Title, 1, 1) != UPPER(substring(t.Title, 1, 1)) )\nOR\n((1 = p.PostTypeId) AND substring(p.Title, 1, 1) != UPPER(substring(p.Title, 1, 1)))\n)\n\nORDER BY p.Id DESC"},{"QuerySetId":826698,"Title":"Top Sri Lankan StackOverFlow Users","Description":"This Query will return Top Sri Lankan StackOverflow Reputation holders.\r\n\r\nCreated by Menuka Ishan \r\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%Sri Lanka%') ORDER BY Reputation DESC","CreationDate":"2018-03-23 07:05:26","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\nLOWER(Location) LIKE LOWER('%Sri Lanka%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":826707,"Title":"select * from posts where posts.ViewCount > 15000 and posts.ViewCount < 20000","Description":null,"QueryBody":"SELECT * FROM posts WHERE posts.ViewCount > 15000 AND posts.ViewCount < 20000","CreationDate":"2018-03-21 09:22:51","validated":false,"QueryBody_Original":"SELECT  * from posts where posts.ViewCount > 15000 and posts.ViewCount < 20000"},{"QuerySetId":828620,"Title":"List Questions and Accepted Answer","Description":null,"QueryBody":"SELECT q.Id, q.Title, q.Tags, q.ViewCount, q.Body AS \"Question\", a.Body AS \"Accepted Answer\", a.Score, q.AcceptedAnswerId FROM Posts AS q JOIN Posts AS a ON q.AcceptedAnswerId = a.Id WHERE q.ViewCount > 100 AND q.PostTypeId = 1 AND q.AcceptedAnswerId > 0 AND a.PostTypeId = 2 ORDER BY a.Score DESC, q.ViewCount DESC","CreationDate":"2018-03-22 16:30:16","validated":false,"QueryBody_Original":"SELECT  q.Id, q.Title, q.Tags, q.ViewCount, q.Body AS [Question],\na.Body AS [Accepted Answer], a.Score, q.AcceptedAnswerId\nFROM Posts q\nJOIN Posts a ON q.AcceptedAnswerId = a.Id\nWHERE q.ViewCount > 100 AND q.PostTypeId = 1 AND q.AcceptedAnswerId > 0\nAND a.PostTypeId = 2\nORDER BY a.Score DESC, q.ViewCount DESC"},{"QuerySetId":829784,"Title":"SICK CHART! 'All Posts' & 'New User Posts' by day, forever","Description":null,"QueryBody":"SELECT CAST(p.creationdate AS DATE) AS postDate, COUNT(p.id) AS numPosts, SUM(CASE CAST(p.creationdate AS DATE) WHEN CAST(u.creationdate AS DATE) THEN 1 ELSE 0 END) AS newUserPosts FROM posts AS p, users AS u WHERE p.owneruserid = u.id GROUP BY CAST(p.creationdate AS DATE) ORDER BY CAST(p.creationdate AS DATE)","CreationDate":"2018-03-24 05:21:58","validated":false,"QueryBody_Original":"SELECT  \n  convert(date,p.creationdate) as postDate, \n  count (p.id) as numPosts,\n  sum ( CASE convert(date,p.creationdate)\n    WHEN convert(date,u.creationdate) THEN 1 \n    ELSE 0 \n    END ) as newUserPosts\nfrom posts p , users u\nwhere \n  p.owneruserid = u.id\n  --and year(p.creationdate) >=2018\ngroup by convert(date,p.creationdate)\norder by convert(date,p.creationdate)"},{"QuerySetId":829785,"Title":"Posts by user age on site (<1mo,<1yr,<2yr,etc)","Description":null,"QueryBody":"SELECT CAST(p.creationdate AS DATE) AS postDate, SUM(CASE WHEN DATEDIFF(p.creationdate, u.creationdate) < 7 THEN 1 ELSE 0 END) AS \"<1wk\", SUM(CASE WHEN DATEDIFF(p.creationdate, u.creationdate) BETWEEN 8 AND 30 THEN 1 ELSE 0 END) AS \"<1mo\", SUM(CASE WHEN DATEDIFF(p.creationdate, u.creationdate) BETWEEN 31 AND 365 THEN 1 ELSE 0 END) AS \"<1yr\", SUM(CASE WHEN DATEDIFF(p.creationdate, u.creationdate) > 365 THEN 1 ELSE 0 END) AS \">1yr\" FROM posts AS p, users AS u WHERE p.owneruserid = u.id AND YEAR(p.creationdate) >= 2018 GROUP BY CAST(p.creationdate AS DATE) ORDER BY CAST(p.creationdate AS DATE)","CreationDate":"2018-03-24 06:12:24","validated":false,"QueryBody_Original":"SELECT  \n  --p.id,\n  --u.creationdate as userJoinDate,\n  convert(date,p.creationdate) as postDate,\n\n  sum(CASE  \n   WHEN datediff(d,u.creationdate,p.creationdate) < 7 \n   THEN 1 else 0 end ) as [<1wk],\n  sum(CASE  \n   WHEN datediff(d,u.creationdate,p.creationdate) between 8 and 30 \n   THEN 1 else 0 end ) as [<1mo],\n  sum(CASE  \n   WHEN datediff(d,u.creationdate,p.creationdate) between 31 and 365 \n   THEN 1 else 0 end ) as [<1yr],\n  sum(CASE  \n   WHEN datediff(d,u.creationdate,p.creationdate) >365\n   THEN 1 else 0 end ) as [>1yr]\n   \nfrom \n  posts p , users u\n\nwhere \n  p.owneruserid = u.id\n  and year(p.creationdate) >=2018\n  \ngroup by\n  convert(date,p.creationdate)\n  \norder by  \n  convert(date,p.creationdate)"},{"QuerySetId":829796,"Title":"Posts, by poster's years of tenure (for pie chart)","Description":null,"QueryBody":"SELECT DATEDIFF(p.creationdate, u.creationdate) AS \"years\", COUNT(p.id) AS numPosts FROM posts AS p, users AS u WHERE p.owneruserid = u.id AND YEAR(p.creationdate) >= 2016 GROUP BY DATEDIFF(p.creationdate, u.creationdate) HAVING DATEDIFF(p.creationdate, u.creationdate) >= 0 ORDER BY DATEDIFF(p.creationdate, u.creationdate)","CreationDate":"2018-03-24 07:11:33","validated":false,"QueryBody_Original":"SELECT  \n  datediff(yy,u.creationdate,p.creationdate) as [years],\n  count(p.id) as numPosts\n\nfrom \n  posts p , users u\n\nwhere \n  p.owneruserid = u.id\n  and year(p.creationdate) >= 2016\n  \ngroup by\n  datediff(yy,u.creationdate,p.creationdate) \n\nhaving\n  datediff(yy,u.creationdate,p.creationdate)>=0\n  \norder by  \n  datediff(yy,u.creationdate,p.creationdate)"},{"QuerySetId":829936,"Title":"#Users after 2018 #1 quarter","Description":null,"QueryBody":"SELECT COUNT(*) AS \"#Users\" FROM Users WHERE LastAccessDate >= CAST('2018-01-01 00:00:00' AS DATETIME) AND LastAccessDate < CAST('2018-04-01 00:00:00' AS DATETIME)","CreationDate":"2018-03-24 17:59:03","validated":false,"QueryBody_Original":"SELECT \n  COUNT(*) AS '#Users'\nFROM\n  Users\nWHERE\n  LastAccessDate >= CAST('2018-01-01 00:00:00' AS datetime) AND\n  LastAccessDate <  CAST('2018-04-01 00:00:00' AS datetime)"},{"QuerySetId":829973,"Title":"Avg Question Score by Year & WeekNumber","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS Yr, TIME_TO_STR(creationdate, '%W') AS Wk, AVG(CAST(score AS FLOAT(10, 5))) AS AvgScore FROM posts WHERE posttypeid = 1 \/* and year(creationdate)>=2018 *\/ AND deletiondate IS NULL AND closeddate IS NULL GROUP BY YEAR(creationdate), TIME_TO_STR(creationdate, '%W') ORDER BY YEAR(creationdate), TIME_TO_STR(creationdate, '%W')","CreationDate":"2018-03-24 23:40:11","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as Yr, datepart(wk,creationdate) as Wk,\n  avg(cast(score as decimal(10,5) )) as AvgScore \n\nfrom \n  posts\n\nwhere \n  posttypeid = 1 --and year(creationdate)>=2018\n  and deletiondate is null\n  and closeddate is null\n\ngroup by \n  year(creationdate), datepart(wk,creationdate) \n\norder by \n  year(creationdate), datepart(wk,creationdate)"},{"QuerySetId":829982,"Title":"get date from parts for grouping","Description":null,"QueryBody":"SELECT CAST(DATEADD(dd, -DATEPART(dw, GETDATE()), GETDATE()) AS DATE)","CreationDate":"2018-03-24 23:32:17","validated":false,"QueryBody_Original":"SELECT  cast (dateadd(dd,-datepart(dw,getdate()),getdate()) as date)"},{"QuerySetId":830171,"Title":"Get Users related to a particular question","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id IN (SELECT OwnerUserId FROM Posts)","CreationDate":"2018-03-25 13:14:07","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Id IN (\n  SELECT OwnerUserId FROM Posts\n)"},{"QuerySetId":830176,"Title":"Get Question authors of a particular tag","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id IN (SELECT OwnerUserId FROM Posts WHERE Tags LIKE '%aws-lambda%')","CreationDate":"2018-03-25 13:22:21","validated":false,"QueryBody_Original":"SELECT  * FROM Users WHERE Id IN \n(SELECT OwnerUserId FROM Posts WHERE Tags LIKE '%aws-lambda%')"},{"QuerySetId":830674,"Title":"Posts by day of week in which they were created","Description":null,"QueryBody":"SELECT TIME_TO_STR(P.CreationDate, '%W'), COUNT(P.Id) FROM Posts AS P WHERE 1 = 1 \/* P.ClosedDate is not null *\/ AND P.CreationDate >= '2018-03-15' GROUP BY TIME_TO_STR(P.CreationDate, '%W')","CreationDate":"2018-03-26 06:44:42","validated":false,"QueryBody_Original":"SELECT  DatePart(dw, P.CreationDate), Count(P.Id)\nfrom Posts P\nwhere 1 = 1 -- P.ClosedDate is not null\n      and P.CreationDate >= '2018-03-15'\ngroup by DatePart(dw, P.CreationDate)"},{"QuerySetId":830935,"Title":"Comments per Day by User","Description":null,"QueryBody":"SELECT c.userid, u.displayname AS \"User Name\", TIME_TO_STR(MIN(c.creationdate), '%b %-d, %Y') AS \"1st Comment\", TIME_TO_STR(MAX(c.creationdate), '%b %-d, %Y') AS \"Last Comment\", COUNT(c.id) AS \"# Comments\", CASE WHEN DATEDIFF(MAX(c.creationdate), MIN(c.creationdate)) = 0 THEN NULL ELSE (CAST(COUNT(c.id) AS FLOAT) \/ DATEDIFF(MAX(c.creationdate), MIN(c.creationdate))) END AS \"Comments\/Day\" FROM comments AS c JOIN users AS u ON u.id = c.userid WHERE NOT c.userid IS NULL GROUP BY c.userid, u.displayname, u.creationdate HAVING DATEDIFF(MAX(c.creationdate), MIN(c.creationdate)) > 0 ORDER BY (COUNT(c.id) \/ DATEDIFF(MAX(c.creationdate), MIN(c.creationdate))) DESC","CreationDate":"2018-03-27 14:46:06","validated":false,"QueryBody_Original":"SELECT  \n  c.userid,\n  u.displayname as [User Name],\n  format(min(c.creationdate),'MMM d, yyyy') as [1st Comment],\n  format(max(c.creationdate),'MMM d, yyyy') as [Last Comment],\n  count(c.id) as [# Comments],\n  \n  case when datediff(d,min(c.creationdate),max(c.creationdate)) = 0\n       then null\n       else ( cast(count(c.id) as decimal) \/ datediff(d,min(c.creationdate),max(c.creationdate)) )\n       end\n    as [Comments\/Day]\n  \nfrom\n  comments c join users u\n  on u.id = c.userid\n  \n  where \n  c.userid is not null\n  --and year(c.creationdate)>=2018\n\ngroup by \n  c.userid ,\n  u.displayname,\n  u.creationdate\n\nhaving datediff(d,min(c.creationdate),max(c.creationdate)) > 0\n\norder by\n  ( count(c.id) \/ datediff(d,min(c.creationdate),max(c.creationdate)) ) desc"},{"QuerySetId":831452,"Title":"select count(*) from posts where posts.ViewCount","Description":null,"QueryBody":"SELECT ViewCount FROM posts","CreationDate":"2018-03-27 12:49:29","validated":false,"QueryBody_Original":"SELECT  ViewCount from posts"},{"QuerySetId":831712,"Title":"Top SO from seoul, south korea","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%seoul%' OR UPPER(Location) LIKE '%SEOUL%' OR Location LIKE '%Seoul%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-03-27 23:47:14","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%seoul%'\n    OR UPPER(Location) LIKE '%SEOUL%'\n    or Location like '%Seoul%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":832130,"Title":"select dateadd(dd, datediff(dd, 0, getdate()), 0)","Description":null,"QueryBody":"SELECT DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE()))","CreationDate":"2020-04-21 11:33:21","validated":false,"QueryBody_Original":"SELECT   DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE()))"},{"QuerySetId":832303,"Title":"Posts with broken Chabadlibrary.org links","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", (CASE WHEN NOT p.title IS NULL THEN p.title ELSE pq.title END) AS title, p.creationdate, p.lastactivitydate, p.score, (CASE WHEN NOT p.viewcount IS NULL THEN p.viewcount ELSE pq.viewcount END) AS viewcount FROM posts AS p LEFT OUTER JOIN posts AS pq ON pq.id = p.parentid WHERE p.body LIKE '%chabadlibrary.org%furl=%' ORDER BY viewcount DESC","CreationDate":"2018-03-28 18:09:54","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  (case when p.title is not null then p.title else pq.title end) as title, \n  p.creationdate,\n  p.lastactivitydate,\n  p.score,\n  (case when p.viewcount is not null then p.viewcount else pq.viewcount end) as viewcount\nfrom posts p\nleft outer join posts pq on pq.id = p.parentid\nwhere p.body like '%chabadlibrary.org%furl=%'\norder by viewcount desc"},{"QuerySetId":832362,"Title":"Percentage of Answers edited by Owner, by Year ","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"Year\", COUNT(id) AS \"NumAnswers\", SUM(CASE WHEN NOT LastEditorUserId IS NULL THEN 1 ELSE 0 END) AS \"Edited\", SUM(CASE WHEN LastEditorUserId = owneruserid THEN 1 ELSE 0 END) AS \"Edit by Owner\", NUMBER_TO_STR(SUM(CASE WHEN LastEditorUserId = owneruserid THEN 1.0 ELSE 0.0 END) \/ SUM(CASE WHEN NOT LastEditorUserId IS NULL THEN 1.0 ELSE 0.0 END), '0.0%') AS \"% Owner Edit\" FROM posts WHERE posttypeid = 1 GROUP BY YEAR(creationdate)","CreationDate":"2018-03-29 00:27:51","validated":false,"QueryBody_Original":"SELECT \n  year(creationdate) as [Year],\n  \n  count(id) [NumAnswers],\n  \n  sum(case when LastEditorUserId is not null\n   then 1 else 0 end ) as [Edited],\n   \n  sum(case when LastEditorUserId = owneruserid\n   then 1 else 0 end ) as [Edit by Owner],\n   \n  format(sum(case when LastEditorUserId = owneruserid\n   then 1.0 else 0.0 end ) \/ sum(case when LastEditorUserId is not null\n   then 1.0 else 0.0 end ),'0.0%') as [% Owner Edit]\n  \nfrom \n  posts\n\nwhere \n  posttypeid = 1\n \ngroup by \n  year(creationdate)"},{"QuerySetId":832460,"Title":"Convert UTC to PST with DST","Description":"Functionality for converting UTC \/ GMT unix server epoch time into Pacific Daylight Time (PDT) or Pacific Standard Time (PST) time zones including adjustment for Daylight Savings Time (DST), which in North America begins on the 2nd Sunday of March at 02:00am and ends on the 1st Sunday of November at 02:00am, every year.\r\n\r\nUnfortunately we can't add custom functions to SEDE so this will have to be otherwise adapted for use in a query.","QueryBody":"SELECT CURRENT_TIMESTAMP()","CreationDate":"2018-03-29 01:41:25","validated":false,"QueryBody_Original":"SELECT  getdate()"},{"QuerySetId":832464,"Title":"BUSIEST POSTING TIMES OF WEEK & DAY (Pacific Time w\/ DST) - Questions","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time', '%d%-d %H:00') AS DOW_Hr, COUNT(id) AS nPosts FROM posts WHERE YEAR(creationdate) >= 2018 GROUP BY TIME_TO_STR(creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time', '%W'), TIME_TO_STR(creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time', '%I'), TIME_TO_STR(creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time', '%d%-d %H:00') ORDER BY TIME_TO_STR(creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time', '%W'), TIME_TO_STR(creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time', '%I')","CreationDate":"2018-03-29 03:35:17","validated":false,"QueryBody_Original":"SELECT  \n  format(creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time','ddd HH:00') as DOW_Hr,\n  count(id) as nPosts\n\nfrom \n  posts\n  \nwhere \n  year(creationdate)>=2018\n  \ngroup by\n  datepart(dw,creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time'),\n  datepart(hh,creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time'),\n  format(creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time','ddd HH:00')\n  \norder by\n  datepart(dw,creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time'),\n  datepart(hh,creationdate AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time')"},{"QuerySetId":832620,"Title":"first id of this year","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate BETWEEN '2017-01-01' AND '2017-01-02' ORDER BY id","CreationDate":"2018-03-29 16:39:27","validated":false,"QueryBody_Original":"SELECT  * from Posts where CreationDate between '2017-01-01' and '2017-01-02' order by id asc"},{"QuerySetId":833239,"Title":"users with Close vote priviledge, active in last month","Description":null,"QueryBody":"SELECT id, reputation, lastaccessdate FROM users WHERE reputation >= 3000 AND lastaccessdate >= DATEADD(dd, -30, GETDATE())","CreationDate":"2018-03-31 04:53:48","validated":false,"QueryBody_Original":"SELECT \n  id ,\n  reputation,\n  lastaccessdate\n  \nfrom\n  users\n  \nwhere \n  reputation >= 3000\n  and lastaccessdate >= dateadd(dd,-30,getdate() )"},{"QuerySetId":833365,"Title":"Longest Average Poster (ie., avg length of Q&A's)","Description":null,"QueryBody":"SELECT owneruserid, COUNT(id) AS \"NumPosts\", AVG(LENGTH(body)) AS \"AvgLength\" \/* sum(case when posttypeid=1 then 1 else 0 end) as [Qs], *\/ \/* sum(case when posttypeid=2 then 1 else 0 end) as [As] *\/ FROM posts WHERE posttypeid IN (1, 2) AND YEAR(creationdate) >= 2018 GROUP BY owneruserid HAVING COUNT(id) > 10 ORDER BY AVG(LENGTH(body)) DESC","CreationDate":"2018-03-31 21:51:24","validated":false,"QueryBody_Original":"SELECT \n  owneruserid,\n  --posttypeid,\n  count(id) as [NumPosts],\n  avg(len(body)) as [AvgLength]\n  \n  --sum(case when posttypeid=1 then 1 else 0 end) as [Qs],\n  --sum(case when posttypeid=2 then 1 else 0 end) as [As] \n\nfrom \n  posts\n\nwhere\nposttypeid in (1,2) and year(creationdate)>=2018\n\ngroup by \n  owneruserid\n\nhaving \n  count(id)>10\n\norder by\n  avg(len(body)) desc"},{"QuerySetId":833422,"Title":"Average Comment Score for user","Description":null,"QueryBody":"SELECT COUNT(id) AS NumComments, AVG(CAST(score AS FLOAT)) AS AvgScore, MIN(creationdate) AS MinDate, MAX(creationdate) AS MaxDate, DATEDIFF(MAX(creationdate), MIN(creationdate)) AS Days FROM comments WHERE userid = 8112776","CreationDate":"2018-04-01 11:53:09","validated":false,"QueryBody_Original":"SELECT  \n  count(id) NumComments, \n  avg(cast(score as decimal)) AvgScore, \n  min(creationdate) as MinDate,\n  max(creationdate) as MaxDate,\n  datediff(dd,min(creationdate),max(creationdate)) as Days\n  \nfrom \n  comments\n\nwhere \n  userid = 8112776"},{"QuerySetId":833456,"Title":"Q&A's Per Minute (by Year) with Chart","Description":"Averages of Questions posted Per Minute, and Answers posted Per Minute, grouped by Date","QueryBody":"SELECT YEAR(creationdate) AS Yr, CAST(SUM(CASE WHEN posttypeid = 1 THEN 1 ELSE 0 END) AS FLOAT) \/ 525600 AS \"Question\/Min\", CAST(SUM(CASE WHEN posttypeid = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ 525600 AS \"Answers\/Min\" FROM posts WHERE posttypeid IN (1, 2) AND YEAR(creationdate) < YEAR(CURRENT_TIMESTAMP()) GROUP BY YEAR(creationdate) ORDER BY YEAR(creationdate)","CreationDate":"2018-04-01 19:56:49","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as Yr,\n  cast(sum(case when posttypeid=1 then 1 else 0 end) as decimal)\/525600 as [Question\/Min],\n  cast(sum(case when posttypeid=2 then 1 else 0 end) as decimal)\/525600 as [Answers\/Min]\n\nfrom \n  posts\n  \nwhere \n  posttypeid in (1,2)\n  and year(creationdate)<year(getdate())\n  \ngroup by \n  year(creationdate)\n  \norder by \n  year(creationdate)"},{"QuerySetId":833537,"Title":"my answers to questions that still don't have an accepted answer","Description":null,"QueryBody":"SELECT q.creationdate AS QDate, q.id AS \"Post Link\", a.creationdate AS AnsDate, a.id AS \"Post Link\", a.score, a.id, a.parentid FROM posts AS a JOIN posts AS q ON a.parentid = q.id\/* and a.deletiondate is null *\/  WHERE a.owneruserid = 8112776 AND a.posttypeid = 2 AND a.closeddate IS NULL AND q.AcceptedAnswerId IS NULL ORDER BY a.id","CreationDate":"2018-04-02 01:23:54","validated":false,"QueryBody_Original":"SELECT \n  q.creationdate as QDate,\n  q.id as [Post Link],\n  a.creationdate as AnsDate,\n  a.id as [Post Link],\n  a.score,\n  a.id,\n  a.parentid\n  \nfrom \n  posts a join posts q\n  on a.parentid = q.id\n\nwhere \n  a.owneruserid = 8112776\n  and a.posttypeid=2\n  and a.closeddate is null\n -- and a.deletiondate is null\n  and q.AcceptedAnswerId is null\n  \norder by \n  a.id\n  \n  \n  \n  \n--  AcceptedAnswerId"},{"QuerySetId":833620,"Title":"How many users exist for each Age between 20 and 30?","Description":null,"QueryBody":"SELECT Age, COUNT(Id) AS count_per_age FROM Users WHERE Age BETWEEN 20 AND 30 GROUP BY Age","CreationDate":"2018-04-02 13:14:01","validated":false,"QueryBody_Original":"SELECT  Age, count(Id) as count_per_age\nfrom Users\nwhere Age between 20 and 30\ngroup by Age"},{"QuerySetId":833718,"Title":"Questions tagged only [VBA] that should have [Excel] & [Excel-VBA] tags too!","Description":null,"QueryBody":"SELECT id AS \"Post Link\", creationdate, lastactivitydate, score, viewcount, tags, body FROM posts AS p WHERE tags = '<vba>' \/* <vba> only = 2484 <vba> only plus 'Excel' in body = 245 *\/ AND UPPER(body) LIKE '%EXCEL%' AND deletiondate IS NULL AND closeddate IS NULL AND posttypeid = 1 ORDER BY creationdate DESC","CreationDate":"2018-04-02 23:59:27","validated":false,"QueryBody_Original":"SELECT \n  id as [Post Link],\n  creationdate,\n  lastactivitydate,\n  score,\n  viewcount,\n  tags,\n  body\n  \nfrom\n  posts p \n  \nwhere\n  tags = '<vba>'     --<vba> only = 2484 <vba> only plus 'Excel' in body = 245\n  and upper(body) like '%EXCEL%'\n  and deletiondate is null\n  and closeddate is null\n  and posttypeid=1\n  \norder by \n  creationdate desc"},{"QuerySetId":833734,"Title":"Questions tagged only [VBA] that should have an [Excel] tag too","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.creationdate, p.lastactivitydate, p.score, p.viewcount, p.tags FROM posts AS p WHERE p.tags = '<vba>' \/* <vba> only = 2484 <vba> only plus 'Excel' in body = 245 *\/ AND p.body LIKE '%excel%' AND p.deletiondate IS NULL AND p.closeddate IS NULL AND p.posttypeid = 1 ORDER BY creationdate DESC","CreationDate":"2018-04-02 21:02:25","validated":false,"QueryBody_Original":"SELECT \n  p.id as [Post Link],\n  p.creationdate,\n  p.lastactivitydate,\n  p.score,\n  p.viewcount,\n  p.tags\n  \nfrom\n  posts p\n  \nwhere\n  p.tags = '<vba>'     --<vba> only = 2484 <vba> only plus 'Excel' in body = 245\n  and p.body like '%excel%'\n  and p.deletiondate is null\n  and p.closeddate is null\n  and p.posttypeid=1\n  \norder by \n  creationdate desc"},{"QuerySetId":833788,"Title":" Questions tagged only [Excel] that should have [VBA] & [Excel-VBA] tags too!","Description":null,"QueryBody":"SELECT id AS \"Post Link\", creationdate, lastactivitydate, score, viewcount, tags, body FROM posts AS p WHERE tags = '<access>' AND UPPER(body) LIKE '%dao%' AND deletiondate IS NULL AND closeddate IS NULL AND posttypeid = 1 ORDER BY creationdate DESC","CreationDate":"2018-08-06 14:30:13","validated":false,"QueryBody_Original":"SELECT \n  id as [Post Link],\n  creationdate,\n  lastactivitydate,\n  score,\n  viewcount,\n  tags,\n  body\n  \nfrom\n  posts p \n  \nwhere\n  tags = '<access>'     \n  and upper(body) like '%dao%'\n  and deletiondate is null\n  and closeddate is null\n  and posttypeid=1\n  \norder by \n  creationdate desc"},{"QuerySetId":834078,"Title":"Who downvotes most (compared to upvotes)?","Description":null,"QueryBody":"SELECT DisplayName, DownVotes, UpVotes, ROUND(CAST(UpVotes AS FLOAT) \/ CAST(DownVotes AS FLOAT), 3) AS \"UV\/DV Ratio\" FROM Users WHERE DownVotes > 1 ORDER BY \"DownVotes\"","CreationDate":"2018-04-12 21:55:06","validated":false,"QueryBody_Original":"SELECT  DisplayName, DownVotes, UpVotes, ROUND(CAST(UpVotes as FLOAT) \/ CAST(DownVotes as FLOAT), 3) as \"UV\/DV Ratio\" FROM Users\nWHERE DownVotes > 1\nORDER BY \"DownVotes\" ASC"},{"QuerySetId":834080,"Title":"Who has the most downvotes?","Description":null,"QueryBody":"SELECT DisplayName, DownVotes, UpVotes FROM Users WHERE DownVotes > 1 ORDER BY DownVotes DESC","CreationDate":"2018-04-03 15:13:05","validated":false,"QueryBody_Original":"SELECT  DisplayName, DownVotes, UpVotes FROM Users\nWHERE DownVotes > 1\nORDER BY DownVotes DESC"},{"QuerySetId":834516,"Title":"how much posts on stack exchange;","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts","CreationDate":"2018-04-04 13:51:44","validated":false,"QueryBody_Original":"SELECT  count(Id) from Posts;"},{"QuerySetId":835059,"Title":"Finding basic thank you comments (fewer than 20 characters)","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.Text AS \"comment body\", (SELECT COUNT(c.Id) AS \"Comment Link\" FROM Comments AS c WHERE (c.Text LIKE '%thank%' OR c.Text LIKE '%thx%') AND LENGTH(c.Text) < 20) AS \"total comments\" FROM Comments AS c WHERE (c.Text LIKE '%thank%' OR c.Text LIKE '%thx%') AND LENGTH(c.Text) < 20 ORDER BY c.CreationDate DESC","CreationDate":"2018-04-05 03:26:44","validated":false,"QueryBody_Original":"SELECT  \n c.Id as [Comment Link],\n c.Text as [comment body],\n (SELECT count(c.Id) as [Comment Link] from Comments c  where  \n(c.Text like '%thank%' or c.Text like '%thx%') and len(c.Text) < 20 )\nas [total comments]\nfrom Comments c  \nwhere  (c.Text like '%thank%' or c.Text like '%thx%') and len(c.Text) < 20 \norder by c.CreationDate desc;"},{"QuerySetId":835150,"Title":"List all Fields in all Tables on SEDE","Description":"Lists all columns and their datatypes for all tables in Data Explorer","QueryBody":"SELECT COUNT(*) FROM posts","CreationDate":"2019-02-06 13:31:59","validated":false,"QueryBody_Original":"SELECT  count(*) from posts;"},{"QuerySetId":835241,"Title":"Top users from Paris, France","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%paris%' OR UPPER(Location) LIKE '%PARIS%' ORDER BY Reputation DESC","CreationDate":"2018-04-05 12:51:52","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%paris%'\n    OR UPPER(Location) LIKE '%PARIS%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":835273,"Title":"Questions\/Answers per Day on a Weekly Basis","Description":null,"QueryBody":"SELECT Date AS \"Dates\", SUM(pd.Questions) AS \"Questions by Day\" FROM (SELECT SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Questions\", CAST(p.CreationDate AS DATE) AS \"Date\" FROM Posts AS p GROUP BY CAST(p.CreationDate AS DATE)) AS pd GROUP BY Date ORDER BY Date","CreationDate":"2018-06-20 19:03:45","validated":false,"QueryBody_Original":"SELECT \n\nDate AS [Dates],\nSUM(pd.Questions)  AS [Questions by Day]\n\nFROM\n(\nSELECT \n\nSUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS [Questions],\nCAST(p.CreationDate AS Date) AS [Date]\n\nFROM Posts AS p\n\nGROUP BY CAST(p.CreationDate AS Date)\n\n) AS pd\n\nGROUP BY Date\nORDER BY Date ASC"},{"QuerySetId":835414,"Title":"Top Users by Number of Bounties Won in Bangladesh","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS uid, Posts.ParentId AS ppid, Posts.id AS pid \/* ON Votes.PostId = Posts.Id *\/ FROM Posts \/* ON Votes.PostId = Posts.Id *\/ INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE LOWER(Users.Location) LIKE LOWER('%romania') AND (LOWER(Posts.Body) LIKE '%dynamic%crm%' OR LOWER(Posts.Title) LIKE '%dynamic%crm%' OR Posts.Tags LIKE '%dynamic%crm%' OR LOWER(Posts.Body) LIKE '%soft_dynamic%' OR LOWER(Posts.Title) LIKE '%soft_dynamic%' OR Posts.Tags LIKE '%soft_dynamic%' OR LOWER(Posts.Body) LIKE '%ms_dynamic%' OR LOWER(Posts.Title) LIKE '%ms_dynamic%' OR Posts.Tags LIKE '%ms_dynamic%') \/* Posts.CreationDate > '2017-05-01' and *\/ \/* Users.LastAccessDate  > '2017-12-01' and *\/","CreationDate":"2018-04-06 20:22:42","validated":false,"QueryBody_Original":"SELECT \nPosts.OwnerUserId as uid,\nPosts.ParentId as ppid,\nPosts.id as pid\nFROM  \n  Posts --ON Votes.PostId = Posts.Id\n  Inner JOIN Users ON Posts.OwnerUserId = Users.Id\nWHERE\nLOWER(Users.Location) LIKE LOWER('%romania') and\n--Posts.CreationDate > '2017-05-01' and\n--Users.LastAccessDate  > '2017-12-01' and\n(\nLOWER(Posts.Body) LIKE '%dynamic%crm%' or\nLOWER(Posts.Title) LIKE '%dynamic%crm%' or\nPosts.Tags LIKE '%dynamic%crm%' or\nLOWER(Posts.Body) LIKE '%soft_dynamic%' or\nLOWER(Posts.Title) LIKE '%soft_dynamic%' or\nPosts.Tags LIKE '%soft_dynamic%' or\nLOWER(Posts.Body) LIKE '%ms_dynamic%' or\nLOWER(Posts.Title) LIKE '%ms_dynamic%' or\nPosts.Tags LIKE '%ms_dynamic%'\n)"},{"QuerySetId":835447,"Title":"1 Downvote, >1 Upvote Questions per Tag","Description":null,"QueryBody":"SELECT * FROM Posts AS p WHERE p.CreationDate <= '2018-03-01' ORDER BY p.CreationDate DESC LIMIT 10","CreationDate":"2018-04-05 17:44:57","validated":false,"QueryBody_Original":"SELECT  TOP 10 * FROM Posts p\nWHERE p.CreationDate <= '2018-03-01'\nORDER BY p.CreationDate DESC"},{"QuerySetId":835647,"Title":"Number of \"thank you\" comments.","Description":null,"QueryBody":"SELECT COUNT(*) FROM Comments AS c WHERE LOWER(c.Text) LIKE N'%\u0441\u043f\u0430\u0441\u0438\u0431\u043e%'","CreationDate":"2018-04-05 21:15:23","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Comments c\nWHERE lower(c.Text) LIKE N'%\u0441\u043f\u0430\u0441\u0438\u0431\u043e%';"},{"QuerySetId":835919,"Title":"Busiest times-of-day ranked separately for each of Questions & Answers","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(creationdate, '%H') AS TEXT) + ':00' AS \"HourUTC\", SUM(CASE WHEN posttypeid = 1 THEN 1 ELSE 0 END) AS numQuestions, RANK() OVER (ORDER BY SUM(CASE WHEN posttypeid = 1 THEN 1 ELSE 0 END) DESC) AS rankQuestions, SUM(CASE WHEN posttypeid = 2 THEN 1 ELSE 0 END) AS numAnswers, RANK() OVER (ORDER BY SUM(CASE WHEN posttypeid = 2 THEN 1 ELSE 0 END) DESC) AS rankAnswers FROM posts WHERE posttypeid IN (1, 2) AND YEAR(creationdate) >= 2018 GROUP BY CAST(TIME_TO_STR(creationdate, '%H') AS TEXT) + ':00' ORDER BY CAST(TIME_TO_STR(creationdate, '%H') AS TEXT) + ':00'","CreationDate":"2018-04-06 10:05:31","validated":false,"QueryBody_Original":"SELECT  \n  cast(format(creationdate,'HH')as varchar)+':00' as [HourUTC],\n  sum(case when posttypeid=1 then 1 else 0 end) as  numQuestions,\n  rank() over (order by sum(case when posttypeid=1 then 1 else 0 end) desc) as rankQuestions, \n  sum(case when posttypeid=2 then 1 else 0 end) as  numAnswers,\n  rank() over (order by sum(case when posttypeid=2 then 1 else 0 end) desc) as rankAnswers \n  \nfrom \n  posts\n  \nwhere \n  posttypeid in (1,2) \n  and year(creationdate)>=2018\n  \ngroup by \n  cast(format(creationdate,'HH')as varchar)+':00'\n\norder by\n  cast(format(creationdate,'HH')as varchar)+':00'"},{"QuerySetId":835923,"Title":"(EXAMPLE #2) Time to First Answer (Link to Q using [Post Link])","Description":null,"QueryBody":"SELECT q.id AS \"qID\", q.id AS \"Post Link\", q.creationdate AS \"Question Date\", MIN(a.creationdate) AS \"1st Answer Date\", DATEDIFF(n, q.creationdate, MIN(a.creationdate)) AS \"Min to 1st Answer\" FROM posts AS q LEFT OUTER JOIN posts AS a ON q.id = a.parentid WHERE q.posttypeid = 1 AND (a.posttypeid = 2 OR a.posttypeid IS NULL) AND q.deletiondate IS NULL AND a.deletiondate IS NULL AND q.closeddate IS NULL AND a.closeddate IS NULL AND q.creationdate >= DATEADD(d, 30, GETDATE()) GROUP BY q.id, q.creationdate ORDER BY q.creationdate","CreationDate":"2018-04-06 10:18:12","validated":false,"QueryBody_Original":"SELECT  \n  q.id as [qID],\n  q.id as [Post Link],\n  q.creationdate as [Question Date],\n  min(a.creationdate) as [1st Answer Date],\n  datediff(n,q.creationdate,min(a.creationdate)) as [Min to 1st Answer]\n\nfrom\n  posts q left outer join posts a\n  on q.id = a.parentid\n\nwhere \n  q.posttypeid = 1 \n  and (a.posttypeid = 2 or a.posttypeid is null)\n  and q.deletiondate is null and a.deletiondate is null\n  and q.closeddate is null and a.closeddate is null\n  and q.creationdate>=dateadd(d,30,getdate())\n\ngroup by\n  q.id,\n  q.creationdate\n\norder by\n  q.creationdate"},{"QuerySetId":835924,"Title":"(EXAMPLE #3) Time to First Answer (Link to Q using 3rd join to [Posts])","Description":null,"QueryBody":"SELECT q.id AS \"qID\", t.title AS \"link\", q.creationdate AS \"Question Date\", MIN(a.creationdate) AS \"1st Answer Date\", DATEDIFF(n, q.creationdate, MIN(a.creationdate)) AS \"Min to 1st Answer\" FROM posts AS q LEFT OUTER JOIN posts AS a ON q.id = a.parentid LEFT OUTER JOIN posts AS t ON q.id = t.id WHERE q.posttypeid = 1 AND (a.posttypeid = 2 OR a.posttypeid IS NULL) AND q.deletiondate IS NULL AND a.deletiondate IS NULL AND q.closeddate IS NULL AND a.closeddate IS NULL AND q.creationdate >= DATEADD(d, -30, GETDATE()) GROUP BY q.id, q.creationdate, t.title ORDER BY q.creationdate","CreationDate":"2018-04-06 10:22:21","validated":false,"QueryBody_Original":"SELECT  \n  q.id as [qID],\n  t.title as [link],\n  q.creationdate as [Question Date],\n  min(a.creationdate) as [1st Answer Date],\n  datediff(n,q.creationdate,min(a.creationdate)) as [Min to 1st Answer]\n\nfrom\n  posts q left outer join posts a\n    on q.id = a.parentid\n  left outer join posts t\n    on q.id = t.id\n\nwhere \n  q.posttypeid = 1 \n  and (a.posttypeid = 2 or a.posttypeid is null)\n  and q.deletiondate is null and a.deletiondate is null\n  and q.closeddate is null and a.closeddate is null\n  and q.creationdate>=dateadd(d,-30,getdate())\n\ngroup by\n  q.id,\n  q.creationdate,\n  t.title\n\norder by\n  q.creationdate"},{"QuerySetId":836084,"Title":"Record Count from all SEDE tables","Description":null,"QueryBody":"SELECT COUNT(*) FROM badges","CreationDate":"2018-04-06 19:14:22","validated":false,"QueryBody_Original":"SELECT  count(*) from badges"},{"QuerySetId":836235,"Title":"Short comment with thanks askdiff","Description":null,"QueryBody":"SELECT 'https:\/\/apple.stackexchange.com\/questions\/' + CAST(PostId AS TEXT), Text, Score, Comments.CreationDate, Users.DisplayName, Users.Reputation FROM Comments INNER JOIN Users ON Comments.UserId = Users.Id WHERE LENGTH(Text) < 20 AND (Text LIKE '%thanks%' OR Text LIKE '%welcome%' OR Text LIKE '%works%') ORDER BY CreationDate DESC","CreationDate":"2018-04-07 01:04:14","validated":false,"QueryBody_Original":"SELECT  \n'https:\/\/apple.stackexchange.com\/questions\/' + CAST(PostId AS VARCHAR),\n  Text,\n  Score,\n  Comments.CreationDate,\n  Users.DisplayName,\n  Users.Reputation\nFROM \n  Comments inner join \n  Users on Comments.UserId = Users.Id\nWHERE \n  LEN(Text) < 20\n  AND\n    (\n    Text LIKE '%thanks%' OR\n    Text LIKE '%welcome%' OR\n    Text LIKE '%works%' \n    )\n    \nORDER BY CreationDate DESC"},{"QuerySetId":836251,"Title":"Most score on the security badge","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", SUM(score) AS sumscore FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId ORDER BY sumscore DESC LIMIT 100","CreationDate":"2018-04-07 01:37:16","validated":false,"QueryBody_Original":"SELECT  TOP 100 OwnerUserId AS [User Link], sum(score) AS sumscore\nFROM Posts\nWHERE PostTypeId=2\nGROUP BY OwnerUserId\nORDER BY sumscore DESC"},{"QuerySetId":836605,"Title":"Overall Top 10 questions on StackOverflow","Description":"Returns body as HTML of top 10 questions on StackOverflow","QueryBody":"SELECT q.Body FROM Posts AS q WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL LIMIT 10","CreationDate":"2018-04-08 13:11:54","validated":false,"QueryBody_Original":"SELECT  \n    TOP 10\n    q.Body\nFROM\n    Posts q\nWHERE \n    PostTypeId = 1 and CommunityOwnedDate is null and ClosedDate is null"},{"QuerySetId":836894,"Title":"select Body,Tags from Posts where Id = 563355;","Description":null,"QueryBody":"SELECT Body, Tags FROM Posts WHERE Id = 563367","CreationDate":"2018-04-09 09:58:06","validated":false,"QueryBody_Original":"SELECT  Body,Tags from Posts where Id = 563367;\nSELECT Body,Tags from Posts where Id = 563355;"},{"QuerySetId":837605,"Title":"Users by number of answers they posted","Description":null,"QueryBody":"SELECT COALESCE('site:\/\/users\/' + CAST(a.OwnerUserId AS TEXT) + '|' + u.DisplayName, a.OwnerDisplayName) AS UserLink, COUNT(a.Id) AS QCount, u.Reputation FROM Posts AS a LEFT JOIN users AS u ON u.Id = a.OwnerUserId WHERE a.PostTypeId = 2 AND u.Reputation >= 5000 GROUP BY a.OwnerUserId, a.OwnerdisplayName, u.DisplayName, u.Reputation HAVING 10 <= COUNT(a.Id) ORDER BY COUNT(a.Id) DESC","CreationDate":"2018-04-10 15:50:07","validated":false,"QueryBody_Original":"SELECT  \nCOALESCE('site:\/\/users\/' + CAST(a.OwnerUserId AS NVARCHAR) + '|' + u.DisplayName, a.OwnerDisplayName) AS UserLink,\nCOUNT(a.Id) AS QCount,\nu.Reputation\nFROM Posts AS a\nLEFT JOIN users AS u ON u.Id = a.OwnerUserId\nWHERE a.PostTypeId = 2 AND u.Reputation >= 5000\nGROUP BY a.OwnerUserId, a.OwnerdisplayName, u.DisplayName, u.Reputation\nHAVING 10 <= COUNT(a.Id)\nORDER BY COUNT(a.Id) DESC;"},{"QuerySetId":837614,"Title":"Avg Q & A  AVERAGE SCORES DAILY comparison LAST 12 MONTHS","Description":null,"QueryBody":"SELECT CAST(creationdate AS DATE) AS \"Date\", CAST(SUM(CASE WHEN posttypeid = 1 THEN score ELSE 0 END) AS FLOAT) \/ SUM(CASE WHEN posttypeid = 1 THEN 1 ELSE 0 END) AS \"Q\", CAST(SUM(CASE WHEN posttypeid = 2 THEN score ELSE 0 END) AS FLOAT) \/ SUM(CASE WHEN posttypeid = 2 THEN 1 ELSE 0 END) AS \"A\" FROM posts WHERE creationdate >= DATEADD(MM, -12, GETDATE()) AND closeddate IS NULL AND deletiondate IS NULL AND communityowneddate IS NULL GROUP BY CAST(creationdate AS DATE) ORDER BY CAST(creationdate AS DATE)","CreationDate":"2018-04-10 16:29:24","validated":false,"QueryBody_Original":"SELECT  \n  cast(creationdate as date) as [Date],\n  cast(sum(case when posttypeid = 1 then score else 0 end) as decimal) \/\n   sum(case when posttypeid = 1 then 1 else 0 end) as [Q],\n  cast(sum(case when posttypeid = 2 then score else 0 end) as decimal) \/\n   sum(case when posttypeid = 2 then 1 else 0 end) as [A]\n  \nfrom\n  posts\n\nwhere\n  creationdate>=dateadd(MM,-12,getdate())\n  and closeddate is null\n  and deletiondate is null\n  and communityowneddate is null \n\ngroup by\n  cast(creationdate as date)\n\n  \norder by \n  cast(creationdate as date)"},{"QuerySetId":837771,"Title":"Posts Containing Statistics in Title","Description":null,"QueryBody":"SELECT Title, Score, Id FROM Posts WHERE PostTypeID = 1 AND Title LIKE '%stat%' ORDER BY Score DESC","CreationDate":"2018-04-10 17:51:00","validated":false,"QueryBody_Original":"SELECT  Title, Score, Id\nFROM Posts\nWHERE PostTypeID = 1 AND Title LIKE '%stat%'\nORDER BY Score DESC"},{"QuerySetId":838462,"Title":"select * from Comments where Id = 86023446","Description":null,"QueryBody":"SELECT * FROM Comments WHERE Id = 86023446","CreationDate":"2018-04-12 05:03:27","validated":false,"QueryBody_Original":"SELECT  * from Comments where Id = 86023446"},{"QuerySetId":838682,"Title":"Randomly select 5000 rows from Posts where post type is 1 i.e. questions","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId = 1 ORDER BY RAND() LIMIT 5000","CreationDate":"2018-06-24 13:22:52","validated":false,"QueryBody_Original":"SELECT  TOP 5000 *\nFROM Posts \nWHERE PostTypeId=1\nORDER BY RAND();"},{"QuerySetId":839768,"Title":"title with specific unicode character","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, LENGTH(p.Title) FROM Posts AS p WHERE p.title LIKE N'%' + NCHAR(128505) + N'%' COLLATE Latin1_General_BIN","CreationDate":"2019-07-30 11:38:53","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link],\np.Score,\nlen(p.Title)\nfrom Posts p\nwhere p.title like N'%' + nchar(0x1F5F9) + N'%' collate Latin1_General_BIN"},{"QuerySetId":839801,"Title":"Illuminator badge users by reputation","Description":null,"QueryBody":"SELECT b.UserId AS \"User Link\", u.Reputation, b.Date FROM Badges AS b LEFT JOIN users AS u ON u.id = b.UserId WHERE b.Name = 'Illuminator' ORDER BY u.Reputation, u.DisplayName","CreationDate":"2018-04-15 11:51:16","validated":false,"QueryBody_Original":"SELECT  \n    b.UserId AS [User Link],\n    u.Reputation,\n    b.Date\nfrom Badges b\nLeft JOIN users u\nON u.id = b.UserId\nwhere b.Name = 'Illuminator'\norder by u.Reputation, u.DisplayName"},{"QuerySetId":839929,"Title":"Top 500 Posts by Score","Description":null,"QueryBody":"SELECT Posts.Title AS \"Post Title\", COUNT(Posts.Score) AS Score, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts GROUP BY Posts.Title ORDER BY Posts.Title DESC LIMIT 500","CreationDate":"2018-04-15 21:01:33","validated":false,"QueryBody_Original":"SELECT  \n    TOP 500\n    Posts.Title AS [Post Title],\n    Count(Posts.Score) AS Score,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Answer Score]\nFROM\n    Posts\nGROUP BY\n    Posts.Title\nORDER BY\n    Posts.Title DESC"},{"QuerySetId":840002,"Title":"Posts closed\/reopened most times by the community","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COUNT(*) AS Count FROM PostHistory WHERE PostHistoryTypeId IN (10, 11) AND NOT JSON_EXTRACT_SCALAR(Text, '$.Voters[4].Id') IS NULL GROUP BY PostId ORDER BY Count DESC, PostId LIMIT 100","CreationDate":"2018-04-16 01:48:41","validated":false,"QueryBody_Original":"SELECT  TOP 100 PostId AS [Post Link], COUNT(*) AS Count\nFROM PostHistory\nWHERE\n  PostHistoryTypeId IN (10, 11)\n  AND\n  JSON_VALUE(Text, '$.Voters[4].Id') IS NOT NULL\nGROUP BY PostId\nORDER BY Count DESC, PostId"},{"QuerySetId":840073,"Title":"number of comments per Customer","Description":null,"QueryBody":"SELECT UserId, COUNT(PostId) AS num_of_comments FROM Comments LEFT JOIN Users ON Comments.Id = Users.Id GROUP BY UserId","CreationDate":"2018-04-16 04:25:37","validated":false,"QueryBody_Original":"SELECT  UserId, Count(PostId) as num_of_comments\nFROM Comments\nLEFT JOIN Users ON Comments.Id=Users.Id\nGROUP BY UserId;"},{"QuerySetId":840074,"Title":"Average score for accepted post","Description":null,"QueryBody":"SELECT AVG(Score) AS avg_score, Id FROM Posts WHERE PostTypeId = 2 GROUP BY Id ORDER BY avg_score DESC","CreationDate":"2018-04-16 04:43:35","validated":false,"QueryBody_Original":"SELECT  AVG(Score) AS avg_score, Id\nFROM Posts\nWhere PostTypeId = 2\nGROUP BY Id\nORDER BY avg_score DESC"},{"QuerySetId":840079,"Title":"Top 50 Posts with most comments","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", COUNT(Id) AS num_comments FROM Comments GROUP BY PostId ORDER BY num_comments DESC LIMIT 50","CreationDate":"2018-04-16 05:28:13","validated":false,"QueryBody_Original":"SELECT  TOP 50\nPostId as [Post Link],\nCount(Id) AS num_comments\nFROM Comments\nGroup By PostId\nORDER BY num_comments DESC;"},{"QuerySetId":840083,"Title":"Top reputation users in USA","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%US%' OR UPPER(Location) LIKE '%us%' OR Location LIKE '%United States%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-04-16 05:51:14","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%US%'\n    OR UPPER(Location) LIKE '%us%'\n    or Location like '%United States%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":840085,"Title":"SQL answers in Washington DC","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, u.websiteurl, COUNT(*) AS num_sqlAnswers FROM Users AS u, Posts AS p, Posts AS pp WHERE u.Id IN (SELECT Id FROM Users WHERE Location LIKE ('%Washington DC')) AND p.OwnerUserId = u.Id AND pp.Id = p.ParentId AND pp.Tags LIKE ('%<sql>%') GROUP BY u.DisplayName, u.Reputation, u.websiteurl ORDER BY num_sqlAnswers DESC","CreationDate":"2018-04-16 06:07:52","validated":false,"QueryBody_Original":"SELECT  \n     u.DisplayName, u.Reputation, u.websiteurl, count(*) as num_sqlAnswers \nFROM Users u, Posts p, Posts pp \nWHERE u.Id in (\n    SELECT Id\n    FROM Users \n    WHERE Location like ('%Washington DC')\n  )\n  and p.OwnerUserId = u.Id\n  and pp.Id = p.ParentId\n  and pp.Tags like ('%<sql>%')\nGROUP BY u.DisplayName, u.Reputation, u.websiteurl\nORDER BY num_sqlAnswers DESC"},{"QuerySetId":840246,"Title":"Search for a specific code string","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts WHERE (OwnerUserId = 101651) AND (Body LIKE '%multicolumn{1}%')","CreationDate":"2018-04-16 19:50:12","validated":false,"QueryBody_Original":"SELECT \n Id AS [Post Link],\n *\nFROM\n Posts\nWHERE\n (OwnerUserId = 101651) And\n (Body LIKE '%multicolumn{1}%');"},{"QuerySetId":840515,"Title":"get top 400 questions with content tagged with something randomly","Description":null,"QueryBody":"SELECT Title, Body, Id, Tags, AnswerCount, CommentCount, CONCAT('https:\/\/stackoverflow.com\/questions\/', Id), CreationDate, AcceptedAnswerId, ViewCount, FavoriteCount FROM Posts WHERE Tags LIKE '%api%' ORDER BY RAND() LIMIT 400","CreationDate":"2018-04-28 03:08:28","validated":false,"QueryBody_Original":"SELECT  TOP 400\n    Title,\n    Body,\n    Id,\n    Tags,\n    AnswerCount,\n    CommentCount,\n    CONCAT('https:\/\/stackoverflow.com\/questions\/',Id),\n    CreationDate,\n    AcceptedAnswerId,\n    ViewCount,\n    FavoriteCount\nFROM \n    Posts\nWHERE \n    Tags LIKE '%api%'\nORDER BY RAND();"},{"QuerySetId":840519,"Title":"Spam posts since given date","Description":null,"QueryBody":"SELECT COUNT(*) AS SpamPosts FROM Votes WHERE VoteTypeId = 12 AND CreationDate >= '##startdate##'","CreationDate":"2018-04-17 08:45:59","validated":false,"QueryBody_Original":"SELECT  count(*) as SpamPosts from Votes \n       where VoteTypeId = 12 and CreationDate >= '##startdate##'"},{"QuerySetId":841182,"Title":"Geocoding posts within the Google Maps API tag that has at least 10 answers","Description":null,"QueryBody":"SELECT Title, AnswerCount, Tags FROM Posts WHERE AnswerCount >= 10 AND Tags LIKE '%google-maps-api%' AND LOWER(Title) LIKE '%geocod%'","CreationDate":"2018-04-18 11:00:42","validated":false,"QueryBody_Original":"SELECT  Title, AnswerCount, Tags\nFROM Posts\nWHERE AnswerCount >= 10 and Tags LIKE '%google-maps-api%' and lower(Title) LIKE '%geocod%'"},{"QuerySetId":841528,"Title":"count no. of answers by ID","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE OwnerUserId = 5140781 AND PostTypeId = 2 AND CreationDate BETWEEN '2017-07-01' AND '2017-07-31'","CreationDate":"2018-04-19 06:34:45","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts\nWHERE OwnerUserId = 5140781 and PostTypeId = 2 and CreationDate BETWEEN '2017-07-01' and '2017-07-31'"},{"QuerySetId":841769,"Title":"SELECT TOP 10 Id AS [Post Link] FROM Posts ORDER BY CreationDate DESC;","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts ORDER BY CreationDate DESC LIMIT 10","CreationDate":"2018-04-19 17:12:34","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id AS [Post Link] FROM Posts ORDER BY CreationDate DESC;"},{"QuerySetId":841846,"Title":"SELECT TOP 100 DisplayName FROM  Users WHERE Location='Russia' and Reputation=(select max(Reputation","Description":null,"QueryBody":"SELECT DisplayName, LastAccessDate, WebsiteUrl, AboutMe FROM Users WHERE Location = 'Russia' ORDER BY Reputation LIMIT 100","CreationDate":"2018-04-19 19:00:35","validated":false,"QueryBody_Original":"SELECT  TOP 100 DisplayName, LastAccessDate, WebsiteUrl, AboutMe FROM  Users WHERE Location='Russia' order by Reputation ;"},{"QuerySetId":842319,"Title":"TEST: Quickly closed, low rated, no answers","Description":null,"QueryBody":"SELECT id AS \"Post Link\" \/* ---------ADD # OFMINS QUESTION WAS OPEN *\/, creationdate, DATEDIFF(s, creationdate, closeddate) AS SecToClose, tags, body \/* -------------ADD TOTAL REP OF USERS WHO VOTED TO CLOSE *\/ FROM posts\/* and datediff(m,creationdate,closeddate) <  90 *\/  WHERE CAST(closeddate AS DATE) = CAST(creationdate AS DATE) AND creationdate >= DATEADD(d, -10, GETDATE()) AND posttypeid = 1 AND answercount = 0 AND score < 0","CreationDate":"2018-04-20 22:56:56","validated":false,"QueryBody_Original":"SELECT \n  id as [Post Link], -----------ADD # OFMINS QUESTION WAS OPEN\n  creationdate,\n  datediff(s,creationdate,closeddate) as SecToClose,\n  tags,\n  body\n  \n  \nfrom  ---------------ADD TOTAL REP OF USERS WHO VOTED TO CLOSE\n  posts\n  \nwhere \n  cast(closeddate as date) = cast(creationdate as date)\n  --and datediff(m,creationdate,closeddate) <  90\n  and creationdate >= dateadd(d,-10,getdate())\n  and posttypeid = 1\n  and answercount = 0\n  and score < 0"},{"QuerySetId":843107,"Title":"Users with two Stack Overflow profiles, each tied to the same SE Account","Description":"https:\/\/meta.stackexchange.com\/questions\/310019\/why-does-joe-friend-and-a-few-others-have-two-stack-overflow-accounts-each-ti","QueryBody":"SELECT u.id AS \"User Link\", u.accountid, * FROM users AS u INNER JOIN (SELECT accountid FROM users WHERE NOT accountid IS NULL GROUP BY accountid HAVING COUNT(*) > 1) AS da ON da.accountid = u.accountid ORDER BY u.accountid","CreationDate":"2018-05-09 16:21:21","validated":false,"QueryBody_Original":"SELECT  u.id as [User Link], u.accountid, * \nfrom users u\ninner join (\nSELECT accountid\nfrom users\nwhere accountid is not null\ngroup by accountid\nhaving count(*)> 1) da on da.accountid = u.accountid\norder by u.accountid"},{"QuerySetId":843505,"Title":"Question with only one specific tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE PostTypeId = 1 AND Tags = LOWER(N'<##tag##>') ORDER BY CreationDate DESC LIMIT 5000","CreationDate":"2018-04-23 12:36:18","validated":false,"QueryBody_Original":"SELECT  Top 5000 Id As [Post Link], CreationDate From Posts\nWhere PostTypeId=1 And Tags=Lower(N'<##tag##>')\nOrder By CreationDate Desc"},{"QuerySetId":843628,"Title":"WHICH SITES were Questions MIGRATED TO? (Enter number of years to query)","Description":"Produces a ranked count of questions migrated away from this site. Enter the number of years back to query in the prompt.","QueryBody":"SELECT SUBSTRING(comment, CHARINDEX('\/\/', comment) + 2, CHARINDEX('.com', comment) - CHARINDEX('\/\/', comment) + 2) AS \"SentTo\", COUNT(id) AS \"Count\" FROM posthistory WHERE \/* within the last year *\/ posthistorytypeid = 35 \/* migrated to another site *\/ AND \/* within the last year *\/ creationdate >= DATEADD(dd, -365 * 2, GETDATE()) \/* within the last year *\/ GROUP BY SUBSTRING(comment, CHARINDEX('\/\/', comment) + 2, CHARINDEX('.com', comment) - CHARINDEX('\/\/', comment) + 2) ORDER BY COUNT(id) DESC","CreationDate":"2018-04-23 16:29:11","validated":false,"QueryBody_Original":"SELECT    \n  substring(comment,charindex('\/\/',comment)+2,charindex('.com',comment)-charindex('\/\/',comment)+2) as [SentTo],\n  count(id) as [Count]\n\nfrom\n  posthistory\n  \nwhere\n  posthistorytypeid = 35  --migrated to another site\n  and creationdate >= dateadd(dd,-365*2,getdate()) --within the last year\n  \ngroup by \n  substring(comment,charindex('\/\/',comment)+2,charindex('.com',comment)-charindex('\/\/',comment)+2)\n  \norder by\n  count(id) desc"},{"QuerySetId":843704,"Title":"Recruiting Query Tool - Skill, Location","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, ProfileImageUrl, EmailHash, Age, AccountId FROM Users\/* Location: Enter %ashville% to find users in Nashville, TN *\/  WHERE Location LIKE '##Location##' AND (AboutMe LIKE '%@%' OR AboutMe LIKE '%gmail%' OR AboutMe LIKE '%yahoo%' OR AboutMe LIKE '%linkedin%' OR AboutMe LIKE '.edu' OR AboutMe LIKE '%github%' OR AboutMe LIKE '%.com' OR AboutMe LIKE '%.org' OR AboutMe LIKE '%.io%') AND (AboutMe LIKE '##Keyword##') ORDER BY \"LastAccessDate\" DESC","CreationDate":"2018-04-23 21:03:25","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, CreationDate,\n      DisplayName, LastAccessDate, WebsiteUrl,\n      Location, AboutMe, Views, UpVotes, DownVotes,\n      ProfileImageUrl, EmailHash, Age, AccountId\n      FROM Users\nWHERE Location LIKE '##Location##'\n-- Location: Enter %ashville% to find users in Nashville, TN\nAND (AboutMe LIKE '%@%' OR AboutMe LIKE '%gmail%' OR AboutMe LIKE '%yahoo%'\n     OR AboutMe LIKE '%linkedin%' OR AboutMe LIKE '.edu' OR AboutMe LIKE '%github%'\n     OR AboutMe LIKE '%.com' OR AboutMe LIKE '%.org' OR AboutMe LIKE '%.io%')\n     AND (AboutMe LIKE '##Keyword##')\n\nORDER BY [LastAccessDate] DESC"},{"QuerySetId":843731,"Title":"Recruiting Query Tool - Badge, Location","Description":null,"QueryBody":"SELECT * FROM Badges INNER JOIN Users ON Users.Id = UserId WHERE Name LIKE '##Badge##' AND Location LIKE '##Location##' AND (AboutMe LIKE '%@%' OR AboutMe LIKE '%gmail%' OR AboutMe LIKE '%yahoo%' OR AboutMe LIKE '%linkedin%' OR AboutMe LIKE '.edu' OR AboutMe LIKE '%github%' OR AboutMe LIKE '%.com' OR AboutMe LIKE '%.org' OR AboutMe LIKE '%.io%') ORDER BY \"LastAccessDate\" DESC","CreationDate":"2018-04-23 23:41:08","validated":false,"QueryBody_Original":"SELECT  *\nFROM Badges\n  INNER JOIN\n    Users ON Users.Id = UserId\nWHERE \n Name LIKE '##Badge##' AND Location LIKE '##Location##'\nAND (AboutMe LIKE '%@%' OR AboutMe LIKE '%gmail%' OR AboutMe LIKE '%yahoo%'\n     OR AboutMe LIKE '%linkedin%' OR AboutMe LIKE '.edu' OR AboutMe LIKE '%github%'\n     OR AboutMe LIKE '%.com' OR AboutMe LIKE '%.org' OR AboutMe LIKE '%.io%')\nORDER BY [LastAccessDate] DESC"},{"QuerySetId":843891,"Title":"most viewed Q w accepted answer","Description":null,"QueryBody":"SELECT Q.ViewCount, A.Score, A.Body, A.LastEditorUserId, A.ParentId FROM Posts AS A LEFT JOIN Posts AS Q ON Q.AcceptedAnswerId = A.Id WHERE Q.PostTypeId = 1 AND A.PostTypeId = 2 AND A.OwnerUserId = 3576984 AND A.score > 2 ORDER BY Q.ViewCount DESC","CreationDate":"2018-04-24 13:27:36","validated":false,"QueryBody_Original":"SELECT  Q.ViewCount, A.Score, A.Body, A.LastEditorUserId, A.ParentId\nfrom Posts A left join Posts Q on Q.AcceptedAnswerId = A.Id\nwhere Q.PostTypeId = 1 and A.PostTypeId = 2 and \n      A.OwnerUserId = 3576984 and A.score > 2\norder by Q.ViewCount desc"},{"QuerySetId":843898,"Title":"Mean answer score for the last year","Description":null,"QueryBody":"SELECT CAST(SUM(a.Score) AS FLOAT) \/ COUNT(*) AS MeanScorePerAnswer FROM Posts AS a WHERE a.PostTypeId = 2 AND a.CreationDate >= DATEADD(year, -1, GETDATE())","CreationDate":"2018-04-24 14:21:25","validated":false,"QueryBody_Original":"SELECT  CAST(SUM(a.Score) AS Float) \/ COUNT(*) As MeanScorePerAnswer\n  FROM Posts a\n  WHERE a.PostTypeId = 2\n  AND a.CreationDate >= DATEADD(year,-1,GETDATE())"},{"QuerySetId":844147,"Title":"WHERE somecol IS NULL OR somecol < 18","Description":null,"QueryBody":"SELECT COUNT(*) FROM dbo.Users AS u WHERE u.Age < 18 OR u.Age IS NULL","CreationDate":"2018-04-24 23:10:25","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM dbo.Users AS u\nWHERE u.Age < 18\nOR u.Age IS NULL;\n\nWITH CTE1 AS (\nSELECT Age, ROW_NUMBER() OVER (ORDER BY Age) AS RN\nFROM Users\n)\nSELECT TOP 1 RN\nFROM CTE1 \nWHERE Age = 18 ORDER BY RN"},{"QuerySetId":844494,"Title":"Tag Badges by User & Location","Description":null,"QueryBody":"SELECT us.id AS \"User Link\", us.DisplayName AS \"Name\", us.Reputation, ba.name, CASE ba.class WHEN 1 THEN 'GOLD' WHEN 2 THEN 'SILVER' WHEN 3 THEN 'BRONZE' END AS Class FROM Users AS us JOIN (SELECT UserId, name, MIN(class) AS Class FROM BADGES WHERE TagBased = 1 GROUP BY UserId, name) AS ba ON ba.UserId = us.Id WHERE UPPER(us.Location) LIKE UPPER('%##Country?israel##%') ORDER BY us.Reputation DESC, ba.class, ba.name","CreationDate":"2018-04-25 10:10:41","validated":false,"QueryBody_Original":"SELECT \n  us.id [User Link],\n  us.DisplayName [Name],\n  us.Reputation,\n  ba.name,\n  CASE ba.class\n    WHEN 1 THEN 'GOLD'\n    WHEN 2 THEN 'SILVER'\n    WHEN 3 THEN 'BRONZE'\n  END Class\nFROM Users us\n\nJOIN \n(SELECT UserId, name, MIN(class) Class FROM BADGES\n WHERE TagBased = 1 GROUP BY UserId , name\n) ba ON ba.UserId = us.Id\n\nWHERE UPPER(us.Location) like UPPER('%##Country?israel##%')\nORDER BY us.Reputation DESC, ba.class ASC, ba.name ASC"},{"QuerySetId":844617,"Title":"Posts info for a backdate","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate <= '2012-09-30' AND NOT OwnerUserId IS NULL AND OwnerUserId <> -1 AND (posttypeid = 1 OR posttypeid = 2)","CreationDate":"2018-04-25 14:29:28","validated":false,"QueryBody_Original":"SELECT  * FROM Posts where CreationDate <= '2012-09-30' and OwnerUserId is not null and OwnerUserId != -1 and (posttypeid = 1 or posttypeid = 2);"},{"QuerySetId":844686,"Title":"Users who posted only single questions","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 1 GROUP BY Users.Id HAVING COUNT(Posts.Id) = 1 LIMIT 5000","CreationDate":"2018-04-25 18:42:39","validated":false,"QueryBody_Original":"SELECT \n    TOP 5000\n    Users.Id as [User Link]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE\n    PostTypeId = 1\nGROUP BY\n    Users.Id\nHAVING\n    Count(Posts.Id) = 1"},{"QuerySetId":844687,"Title":"Users who asked only one question","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 1 GROUP BY Users.Id HAVING COUNT(Posts.Id) = 1","CreationDate":"2018-04-25 18:47:58","validated":false,"QueryBody_Original":"SELECT \n    Users.Id as [User Link]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE\n    PostTypeId = 1\nGROUP BY\n    Users.Id\nHAVING\n    Count(Posts.Id) = 1"},{"QuerySetId":844724,"Title":"How many users with 0 questions?","Description":null,"QueryBody":"SELECT COUNT(a.uid) FROM (SELECT OwnerUserId AS uid FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId HAVING COUNT(Id) = 0) AS a","CreationDate":"2018-04-25 21:01:37","validated":false,"QueryBody_Original":"SELECT  count(a.uid) from (\n  SELECT OwnerUserId as uid from Posts\n    where PostTypeId = 1\n    group by OwnerUserId\n    having count(Id) = 0\n) a"},{"QuerySetId":844744,"Title":"Users with one question and no answers","Description":null,"QueryBody":"SELECT COUNT(a.uid) FROM (SELECT OwnerUserId AS uid, MAX(PostTypeId) AS type FROM Posts GROUP BY OwnerUserId HAVING COUNT(Id) = 1) AS a WHERE type = 1","CreationDate":"2018-04-25 23:34:25","validated":false,"QueryBody_Original":"SELECT  count(a.uid) from (\n  SELECT OwnerUserId as uid, max(PostTypeId) as type from Posts\n  group by OwnerUserId\n  having count(Id) = 1\n) a\nwhere type = 1"},{"QuerySetId":844753,"Title":"Ratio open \/ closed queries at PM.SE","Description":null,"QueryBody":"SELECT COUNT(1) FROM posts WHERE closedDate IS NULL","CreationDate":"2018-04-26 00:15:29","validated":false,"QueryBody_Original":"SELECT  count(1)\nfrom posts\nwhere closedDate is null"},{"QuerySetId":844755,"Title":"Average question score by account age (up to 1 year)","Description":null,"QueryBody":"SELECT DATEDIFF(p.CreationDate, u.CreationDate) AS \"Account age (days)\", AVG(CAST(p.Score AS FLOAT)) AS \"Average score\" FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 \/* Questions *\/ AND DATEDIFF(p.CreationDate, u.CreationDate) BETWEEN 0 AND 365 GROUP BY DATEDIFF(p.CreationDate, u.CreationDate) ORDER BY DATEDIFF(p.CreationDate, u.CreationDate)","CreationDate":"2018-04-26 09:48:24","validated":false,"QueryBody_Original":"SELECT  DATEDIFF(DAY, u.CreationDate, p.CreationDate) AS 'Account age (days)',\n  AVG(CAST(p.Score AS FLOAT)) AS 'Average score'\n  FROM Posts AS p\n  INNER JOIN Users AS u ON p.OwnerUserId = u.Id\n  WHERE p.PostTypeId = 1 -- Questions\n    AND DATEDIFF(DAY, u.CreationDate, p.CreationDate) BETWEEN 0 AND 365\n    -- negative numbers are possible following an account merge\n  GROUP BY DATEDIFF(DAY, u.CreationDate, p.CreationDate)\n  ORDER BY DATEDIFF(DAY, u.CreationDate, p.CreationDate)"},{"QuerySetId":844867,"Title":"Average question score by account age in months","Description":null,"QueryBody":"SELECT DATEDIFF(p.CreationDate, u.CreationDate) AS \"Account age (months)\", AVG(CAST(p.Score AS FLOAT)) AS \"Average score\", DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 \/* Questions *\/ AND DATEDIFF(p.CreationDate, u.CreationDate) >= 0 GROUP BY DATEDIFF(p.CreationDate, u.CreationDate), DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) ORDER BY DATEDIFF(p.CreationDate, u.CreationDate), DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate)","CreationDate":"2018-04-26 12:36:16","validated":false,"QueryBody_Original":"SELECT  DATEDIFF(MONTH, u.CreationDate, p.CreationDate) AS 'Account age (months)',\n  AVG(CAST(p.Score AS FLOAT)) AS 'Average score',\n  DATEDIFF(YEAR, p.CreationDate, getdate())\n  FROM Posts AS p\n  INNER JOIN Users AS u ON p.OwnerUserId = u.Id\n  WHERE p.PostTypeId = 1 -- Questions\n    AND DATEDIFF(MONTH, u.CreationDate, p.CreationDate) >= 0\n    -- negative numbers are possible following an account merge\n  GROUP BY DATEDIFF(MONTH, u.CreationDate, p.CreationDate),\n  DATEDIFF(YEAR, p.CreationDate, getdate())\n  ORDER BY DATEDIFF(MONTH, u.CreationDate, p.CreationDate),\n  DATEDIFF(YEAR, p.CreationDate, getdate())"},{"QuerySetId":845053,"Title":"Number of unresolved questions with exactly one answer","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS q WHERE ClosedDate IS NULL AND q.ParentId IS NULL AND PostTypeId = 1 AND AcceptedAnswerId IS NULL AND AnswerCount = 1","CreationDate":"2018-04-26 18:02:06","validated":false,"QueryBody_Original":"SELECT  count(*)  from Posts q\nwhere ClosedDate is null  and q.ParentId is null and  PostTypeId = 1 \nand AcceptedAnswerId is null and AnswerCount = 1"},{"QuerySetId":845137,"Title":"Answered Accepted and Open Posts","Description":null,"QueryBody":"SELECT COUNT(p.Id) FROM Posts AS p WHERE p.DeletionDate IS NULL AND p.ClosedDate IS NULL AND NOT p.AcceptedAnswerId IS NULL ORDER BY RAND()","CreationDate":"2018-04-26 21:47:31","validated":false,"QueryBody_Original":"SELECT \ncount(p.Id)\nfrom\n  Posts p\nwhere\n  p.DeletionDate is null and\n  p.ClosedDate is null and\n  p.AcceptedAnswerId is not null\norder by rand()"},{"QuerySetId":845690,"Title":"Get User Id and link","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation FROM Users WHERE id = 3937255 ORDER BY Reputation DESC","CreationDate":"2018-04-28 15:46:10","validated":false,"QueryBody_Original":"SELECT \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    id = 3937255\nORDER BY\n    Reputation DESC;"},{"QuerySetId":845697,"Title":"TOP 1000 users from Bhubaneswar & Cuttack, India","Description":"Lists the top 1000 users (ranked by reputation) that are located in Bangalore, Karnataka, India according to their profile information.\r\n\r\n\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/query\/60933\/top-50-users-from-india\r\n\r\n\r\nEdited by GNKeshava","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE LOWER(Location) LIKE '%Bhubaneswar%' OR UPPER(Location) LIKE '%Bhubaneswar%' OR Location LIKE '%Bhubaneswar%' OR LOWER(Location) LIKE '%Bhubaneshwar%' OR UPPER(Location) LIKE '%Bhubaneshwar%' OR Location LIKE '%Bhubaneshwar%' OR LOWER(Location) LIKE '%Cuttack%' OR UPPER(Location) LIKE '%Cuttack%' OR Location LIKE '%Cuttack%' ORDER BY reputation DESC LIMIT 1000","CreationDate":"2018-04-28 20:05:12","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%Bhubaneswar%'\n    OR UPPER(Location) LIKE '%Bhubaneswar%'\n    OR Location like '%Bhubaneswar%'\n    OR LOWER(Location) LIKE '%Bhubaneshwar%'\n    OR UPPER(Location) LIKE '%Bhubaneshwar%'\n    OR Location like '%Bhubaneshwar%'\n    OR LOWER(Location) LIKE '%Cuttack%'\n    OR UPPER(Location) LIKE '%Cuttack%'\n    OR Location like '%Cuttack%'\n\nORDER BY\n   reputation DESC"},{"QuerySetId":845724,"Title":"SELECT TOP 5 * FROM posts WHERE Body LIKE '%tpay%'","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", u.id AS \"User Link\", p.tags, p.body, p.CreationDate, p.AnswerCount, p.AcceptedAnswerId, p.CommentCount, p.FavoriteCount, u.reputation, u.UpVotes, u.DownVotes, u.WebsiteUrl, u.Age, u.AboutMe FROM posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE PostTypeId = 1 AND Tags LIKE '%<php>%' AND p.AcceptedAnswerId IS NULL AND (u.WebsiteUrl <> '' OR u.AboutMe <> '') AND u.AboutMe LIKE '%CTO%' ORDER BY p.CreationDate DESC LIMIT 250","CreationDate":"2018-04-29 03:15:43","validated":false,"QueryBody_Original":"SELECT  TOP 250 \n  p.id as [Post Link] , u.id as [User Link], p.tags, p.body, p.CreationDate,\n  p.AnswerCount,p.AcceptedAnswerId,p.CommentCount,p.FavoriteCount, u.reputation, u.UpVotes, u.DownVotes, u.WebsiteUrl,u.Age, u.AboutMe\nFROM \n  posts p \nJOIN Users u\n  ON  p.OwnerUserId=u.Id \nWHERE\n  PostTypeId = 1 \n    AND \n  Tags LIKE '%<php>%' \n    AND \n  p.AcceptedAnswerId IS null\n    AND\n  (u.WebsiteUrl !='' OR u.AboutMe !='')\n    AND \n   u.AboutMe LIKE '%CTO%'\nORDER BY p.CreationDate DESC"},{"QuerySetId":845834,"Title":"Number of questions including deleted ones","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE (PostTypeId = 1)","CreationDate":"2018-04-29 13:28:04","validated":false,"QueryBody_Original":"SELECT \n  COUNT(*)\nFROM Posts\nWHERE (PostTypeId=1)"},{"QuerySetId":845874,"Title":"examples of first score if body contains \"downvote\"","Description":null,"QueryBody":"SELECT p.Id, p.Score AS ave FROM POSTS AS p LEFT JOIN USERS AS u ON p.OwnerUserId = u.Id LEFT JOIN (SELECT u.Id AS u_id, MIN(p.ID) AS min_pid FROM POSTS AS p LEFT JOIN USERS AS u ON p.OwnerUserId = u.Id GROUP BY u.Id) AS mp ON mp.u_id = u.Id AND mp.min_pid = p.Id WHERE p.PostTypeId = 1 AND p.Body LIKE '%downvote%' AND p.Id > 48750000 AND p.Id < 50000000 ORDER BY p.Score DESC","CreationDate":"2018-04-29 20:55:39","validated":false,"QueryBody_Original":"SELECT  p.Id, p.Score as ave\nFROM POSTS p\nLEFT JOIN USERS u\nON p.OwnerUserId = u.Id\nLEFT JOIN (\n    SELECT u.Id as u_id, min(p.ID) as min_pid\n    FROM POSTS p\n    LEFT JOIN USERS u\n    ON p.OwnerUserId = u.Id\n    GROUP BY u.Id) as mp\nON mp.u_id = u.Id AND mp.min_pid = p.Id\nWHERE p.PostTypeId = 1 AND p.Body LIKE '%downvote%' and p.Id > 48750000 and p.Id < 50000000\nORDER BY p.Score DESC"},{"QuerySetId":846037,"Title":"Solving the (RE)SOLVED title issue!","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.CreationDate, p.LastActivityDate, p.AcceptedAnswerId, p.ClosedDate FROM Posts AS p WHERE UPPER(p.Title) LIKE '%SOLVED%' ORDER BY p.CreationDate DESC","CreationDate":"2018-05-08 19:23:15","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], p.CreationDate, p.LastActivityDate, p.AcceptedAnswerId, p. ClosedDate\nFROM Posts p\nWHERE upper(p.Title) LIKE '%SOLVED%'\nORDER BY p.CreationDate DESC"},{"QuerySetId":846467,"Title":"Select tag name, tag synonyms, count, post excerpt and post wiki body of stack-overflow tags.","Description":null,"QueryBody":"SELECT DISTINCT t.Id, t.TagName, t.Count, e.body AS \"Excerpt\" FROM tags AS t LEFT JOIN Posts AS e ON t.ExcerptPostId = e.Id GROUP BY t.Id, t.tagName, t.Count, e.Body ORDER BY t.Count DESC","CreationDate":"2020-08-21 20:05:45","validated":false,"QueryBody_Original":"SELECT  DISTINCT t.Id,\n  t.TagName,\n  t.Count,\n  e.body AS 'Excerpt'\nFROM tags t\nLEFT JOIN Posts e\n  ON t.ExcerptPostId = e.Id\nGROUP BY t.Id, t.tagName, t.Count, e.Body\nORDER BY t.Count DESC"},{"QuerySetId":846599,"Title":"Discussion in comments after moving comments to chat","Description":null,"QueryBody":"SELECT DISTINCT MovedToChat.* FROM Posts, Comments AS MovedToChat WHERE MovedToChat.PostId = Posts.Id AND MovedToChat.Text LIKE 'Comments are not for extended discussion%'","CreationDate":"2018-05-02 19:17:43","validated":false,"QueryBody_Original":"SELECT  distinct MovedToChat.* from Posts, Comments MovedToChat\n    where MovedToChat.PostId = Posts.Id and MovedToChat.Text like 'Comments are not for extended discussion%'"},{"QuerySetId":846940,"Title":"Downvoted questions from new users","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", OwnerUserId AS \"User Link\", Reputation, Score, q.CreationDate FROM Posts AS q JOIN Users AS u ON OwnerUserId = u.Id WHERE q.CreationDate > '2018-01-01' AND PostTypeId = 1 AND Reputation <= 200 AND Score < 0 AND q.Id IN (SELECT PostId FROM Votes WHERE VoteTypeId = 3) ORDER BY q.CreationDate DESC","CreationDate":"2018-05-02 22:53:35","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link],\n       OwnerUserId as [User Link],\n       Reputation,\n       Score,\n       q.CreationDate\nfrom Posts q\n     join Users u on OwnerUserId = u.Id\nwhere q.CreationDate > '2018-01-01'\n      and PostTypeId = 1\n      and Reputation <= 200\n      and Score < 0\n      and q.Id in (SELECT PostId from Votes where VoteTypeId = 3)\norder by q.CreationDate DESC"},{"QuerySetId":846943,"Title":"Questions by new (low rep) users (2018)","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", OwnerUserId AS \"User Link\", Reputation, Score, q.CreationDate FROM Posts AS q JOIN Users AS u ON OwnerUserId = u.Id WHERE YEAR(q.CreationDate) = 2018 AND PostTypeId = 1 AND Reputation <= 200 ORDER BY q.CreationDate DESC","CreationDate":"2018-05-02 22:51:44","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link],\n       OwnerUserId as [User Link],\n       Reputation,\n       Score,\n       q.CreationDate\nfrom Posts q\n     join Users u on OwnerUserId = u.Id\nwhere year(q.CreationDate) = 2018\n      and PostTypeId = 1\n      and Reputation <= 200\norder by q.CreationDate DESC"},{"QuerySetId":846991,"Title":"comments on posts, by post owner first name","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", c.text FROM users AS u JOIN posts AS p ON p.owneruserid = u.id JOIN comments AS c ON c.postid = p.id WHERE (u.displayname LIKE 'Sarah %' OR u.displayname = 'Sarah') AND c.id % 10 = 0","CreationDate":"2018-05-03 01:53:59","validated":false,"QueryBody_Original":"SELECT \np.id as [Post Link], c.text\nfrom users u\njoin posts p\non p.owneruserid = u.id\njoin comments c\non c.postid = p.id\nwhere (u.displayname like 'Sarah %' or u.displayname = 'Sarah')\nand c.id % 10 = 0"},{"QuerySetId":847255,"Title":"Top viewed questions grouped by user","Description":null,"QueryBody":"SELECT Posts.ID, ViewCount, OwnerUserID, Reputation, (CAST(Reputation AS FLOAT) \/ CAST(ViewCount AS FLOAT)) AS Ratio FROM Posts, Users WHERE OwnerUserID = Users.Id AND ViewCount > 100000 AND CommunityOwnedDate IS NULL ORDER BY 5","CreationDate":"2018-05-04 01:06:32","validated":false,"QueryBody_Original":"SELECT  Posts.ID, ViewCount, OwnerUserID, Reputation, \n       (CAST (Reputation AS Float) \/ CAST (ViewCount AS Float)) AS Ratio \nFROM   Posts, Users \nWHERE  OwnerUserID = Users.Id AND ViewCount > 100000 AND CommunityOwnedDate IS NULL\nORDER BY 5 ASC"},{"QuerySetId":847265,"Title":"Owner Reputation \/ Post View Count ratio","Description":null,"QueryBody":"SELECT Posts.ID AS \"Post Link\", ViewCount, OwnerUserID, Reputation, (CAST(Reputation AS FLOAT) \/ CAST(ViewCount AS FLOAT)) AS Ratio FROM Posts, Users WHERE OwnerUserID = Users.Id AND ViewCount > 200000 AND CommunityOwnedDate IS NULL","CreationDate":"2018-05-04 02:22:58","validated":false,"QueryBody_Original":"SELECT  Posts.ID AS [Post Link], ViewCount, OwnerUserID, Reputation,\n       (CAST (Reputation AS Float) \/ CAST (ViewCount AS Float)) AS Ratio\nFROM   Posts, Users\nWHERE  OwnerUserID = Users.Id AND\n       ViewCount > 200000 AND CommunityOwnedDate IS NULL"},{"QuerySetId":847891,"Title":"Average answers score through years","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') AS \"year\", AVG(Score) AS \"average\" FROM Posts WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND Score > 10 GROUP BY TIME_TO_STR(\"CreationDate\", '%Y')","CreationDate":"2018-05-05 14:27:54","validated":false,"QueryBody_Original":"SELECT  \n    datepart(yyyy, CreationDate) as 'year', avg(Score) as 'average'\nFROM\n    Posts\nWHERE \n    PostTypeId = 2 \n     and \n    CommunityOwnedDate is null\n     and \n    ClosedDate is null\n     and\n    Score > 10  \nGROUP BY\n    datepart(yyyy, [CreationDate])"},{"QuerySetId":847920,"Title":"Sum of scores over years","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') AS \"year\", SUM(Score) AS \"average\" FROM Posts WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND Score > 10 GROUP BY TIME_TO_STR(\"CreationDate\", '%Y')","CreationDate":"2018-05-05 14:26:54","validated":false,"QueryBody_Original":"SELECT  \n    datepart(yyyy, CreationDate) as 'year', sum(Score) as 'average'\nFROM\n    Posts\nWHERE \n    PostTypeId = 2 \n     and \n    CommunityOwnedDate is null\n     and \n    ClosedDate is null\n     and\n    Score > 10  \nGROUP BY\n    datepart(yyyy, [CreationDate])"},{"QuerySetId":847997,"Title":"Math users (main + meta)","Description":null,"QueryBody":"SELECT 'https:\/\/stackoverflow.com\/u\/' + CAST(Main.Id AS TEXT) + '|' + Main.DisplayName, Main.Reputation, Main.Total AS \"# of posts (main)\", Meta.Total AS \"# of posts (meta)\", CASE WHEN Meta.Total = 0 THEN NULL ELSE ROUND(CAST(Main.Total AS FLOAT) \/ Meta.Total, 2) END AS \"Ratio\" FROM (SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS Total FROM \"StackOverflow\".dbo.Users AS u INNER JOIN \"StackOverflow\".dbo.Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id, u.DisplayName, u.Reputation) AS Main INNER JOIN (SELECT u.Id, COUNT(*) AS Total FROM \"StackOverflow.Meta\".dbo.Users AS u INNER JOIN \"StackOverflow.Meta\".dbo.Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id) AS Meta ON Main.Id = Meta.Id ORDER BY Main.Reputation DESC","CreationDate":"2018-05-10 02:13:11","validated":false,"QueryBody_Original":"SELECT  'https:\/\/stackoverflow.com\/u\/' + CAST(Main.Id AS NVARCHAR)\n  + '|' + Main.DisplayName,\n  Main.Reputation,\n  Main.Total AS '# of posts (main)',\n  Meta.Total AS '# of posts (meta)',\n  CASE WHEN Meta.Total = 0 THEN NULL\n       ELSE ROUND(CAST(Main.Total AS FLOAT) \/ Meta.Total, 2) END AS 'Ratio'\n\nFROM\n\n(SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS Total\n  FROM [StackOverflow].dbo.Users AS u\n  INNER JOIN [StackOverflow].dbo.Posts AS p ON u.Id = p.OwnerUserId\n  GROUP BY u.Id, u.DisplayName, u.Reputation) AS Main\n\nINNER JOIN\n\n(SELECT u.Id, COUNT(*) AS Total\n  FROM [StackOverflow.Meta].dbo.Users AS u\n  INNER JOIN [StackOverflow.Meta].dbo.Posts AS p ON u.Id = p.OwnerUserId\n  GROUP BY u.Id) AS Meta\n  \nON Main.Id = Meta.Id\n\nORDER BY Main.Reputation DESC"},{"QuerySetId":848883,"Title":"Best Posts by len and score","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score AS PostRating, AnswerCount AS Answers, CommentCount AS Comments FROM Posts WHERE Score > 5 ORDER BY PostRating DESC LIMIT 10","CreationDate":"2018-05-07 15:15:11","validated":false,"QueryBody_Original":"SELECT  TOP 10\n  Id as [Post Link],\n  Score as PostRating,\n  AnswerCount as Answers,\n  CommentCount as Comments\nFROM Posts\n\nWHERE Score > 5\n\nORDER BY PostRating DESC"},{"QuerySetId":848926,"Title":"Select Count(*) From Users Grup By Age","Description":null,"QueryBody":"SELECT Jahr, SUM(Anzahl) AS Gesamt, MIN(Anzahl) AS minimal, MAX(Anzahl) AS maximal, AVG(Anzahl) AS Schnitt FROM (SELECT YEAR(CreationDate) AS Jahr, MONTH(CreationDate) AS Monat, COUNT(*) AS Anzahl FROM Users AS U1 GROUP BY YEAR(CreationDate), MONTH(CreationDate)) AS T_TAGESANMELDUNG GROUP BY Jahr ORDER BY Jahr","CreationDate":"2018-05-08 11:43:32","validated":false,"QueryBody_Original":"SELECT  Jahr, SUM(Anzahl) AS Gesamt, MIN(Anzahl) AS minimal, MAX(Anzahl) AS maximal, AVG(Anzahl) AS Schnitt    \nFROM(\n   SELECT YEAR(CreationDate) AS Jahr, MONTH(CreationDate) AS Monat, COUNT(*) AS Anzahl  \n   From Users As U1\n   -- Where YEAR(CreationDate)=2016 AND  MONTH(CreationDate) =4\n   Group By YEAR(CreationDate), MONTH(CreationDate)\n   -- Order By YEAR(CreationDate), MONTH(CreationDate), DAY(CreationDate) \n   ) AS T_TAGESANMELDUNG\nGroup By Jahr\nOrder By Jahr"},{"QuerySetId":848934,"Title":"Users that dupe voted questions against their own question","Description":"https:\/\/meta.stackoverflow.com\/questions\/367459\/how-to-use-gold-dupehammer-without-abuse","QueryBody":"SELECT userid AS \"User Link\", COUNT(*) AS \"times hammered\" \/* , ph.postid as [Post Link] *\/ \/* , text *\/ \/* , pl.* *\/ FROM posthistory AS ph INNER JOIN postlinks AS pl ON pl.postid = ph.postid \/* duplicate links *\/ INNER JOIN posts AS p ON p.id = pl.relatedpostid \/* duplicate target *\/ WHERE posthistorytypeid = 10 \/* close event *\/ AND ph.userid <> -1 \/* not self hammered *\/ AND text LIKE '%GoldTagBadge%' \/* hammered by a gold badge *\/ AND linktypeid = 3 \/* duplicate *\/ GROUP BY userid ORDER BY COUNT(*) DESC","CreationDate":"2019-01-13 08:29:21","validated":false,"QueryBody_Original":"SELECT  userid as [User Link]\n     , count(*) as [times hammered]\n     -- , ph.postid as [Post Link]\n     -- , text\n     -- , pl.*\nfrom posthistory ph\ninner join postlinks pl on pl.postid = ph.postid -- duplicate links\ninner join posts p on p.id = pl.relatedpostid  -- duplicate target\nwhere posthistorytypeid = 10  -- close event\nand ph.userid <> -1 -- not self hammered\nand text like '%GoldTagBadge%' -- hammered by a gold badge\nand linktypeid = 3  -- duplicate\ngroup by userid\norder by count(*) desc"},{"QuerySetId":849225,"Title":"Number of questions in Stack Overflow","Description":null,"QueryBody":"SELECT COUNT(*) AS count FROM posts WHERE postTypeId = 1","CreationDate":"2020-11-16 21:19:22","validated":false,"QueryBody_Original":"SELECT  count(*) as count \nfrom posts \nwhere postTypeId = 1"},{"QuerySetId":849593,"Title":"Questions that have had the <featured> tag, sorted by score","Description":null,"QueryBody":"SELECT Posts.Score, Posts.Id AS \"Post Link\", Posts.CreationDate, Posts.LastEditDate FROM PostHistory JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistory.PostHistoryTypeId = 6 AND PostHistory.Text LIKE '%<featured>%' GROUP BY Posts.Score, Posts.Id, Posts.CreationDate, Posts.LastEditDate ORDER BY Posts.LastEditDate DESC","CreationDate":"2020-06-22 17:54:58","validated":false,"QueryBody_Original":"SELECT \n  Posts.Score,\n  Posts.Id AS [Post Link],\n  Posts.CreationDate,\n  Posts.LastEditDate\nFROM PostHistory\nJOIN Posts ON PostHistory.PostId = Posts.Id\nWHERE PostHistory.PostHistoryTypeId = 6\n  AND PostHistory.Text LIKE '%<featured>%'\nGROUP BY Posts.Score, Posts.Id, Posts.CreationDate, Posts.LastEditDate\nORDER BY Posts.LastEditDate DESC"},{"QuerySetId":849742,"Title":"# Users able to flag","Description":null,"QueryBody":"SELECT COUNT(*) FROM users WHERE reputation >= 15","CreationDate":"2018-05-09 15:26:24","validated":false,"QueryBody_Original":"SELECT  count(*)\n  from users\n where reputation >= 15"},{"QuerySetId":850179,"Title":"how many viewers of my question","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE OwnerUserId = 5775589 AND PostTypeId = 1","CreationDate":"2018-05-10 15:40:46","validated":false,"QueryBody_Original":"SELECT  Body from Posts where OwnerUserId=5775589 and PostTypeId=1"},{"QuerySetId":851411,"Title":"SELECT * FROM Votes WHERE UserId IS NOT NULL","Description":"Created to understand which types of votes are anonymous.  (Favorites and Bounty)","QueryBody":"SELECT * FROM Votes WHERE NOT UserId IS NULL AND NOT VoteTypeId IN (4, 5) LIMIT 50","CreationDate":"2018-05-14 01:42:21","validated":false,"QueryBody_Original":"SELECT  TOP 50 *\nFROM Votes\nWHERE UserId IS NOT NULL\nAND VoteTypeId NOT IN (4,5)"},{"QuerySetId":851430,"Title":"Posts with more than 1000 ViewCount","Description":null,"QueryBody":"SELECT OwnerDisplayName, Id, Body, ViewCount, CreationDate FROM Posts WHERE ViewCount > 10000 ORDER BY ViewCount DESC","CreationDate":"2018-05-14 03:16:03","validated":false,"QueryBody_Original":"SELECT  OwnerDisplayName, Id, Body, ViewCount, CreationDate FROM Posts WHERE ViewCount > 10000 ORDER BY ViewCount DESC"},{"QuerySetId":851568,"Title":"-- Top users from Gothenburg","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%gothenburg%' OR UPPER(Location) LIKE '%GOTHENBURG%' OR Location LIKE '%Gothenburg%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-05-14 15:09:41","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%gothenburg%'\n    OR UPPER(Location) LIKE '%GOTHENBURG%'\n    or Location like '%Gothenburg%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":851675,"Title":"Users able to see \"Do not post code screenshots\" message in image uploader","Description":null,"QueryBody":"SELECT 'users between 10 and 15 rep', COUNT(*) FROM Users WHERE Reputation BETWEEN 0 AND 200","CreationDate":"2018-05-16 18:36:54","validated":false,"QueryBody_Original":"SELECT  'users between 10 and 15 rep', count(*) from Users where Reputation between 0 and 200"},{"QuerySetId":851682,"Title":"Most viewed post of a person","Description":null,"QueryBody":"SELECT * FROM Posts WHERE OwnerUserId = '1850851' ORDER BY ViewCount","CreationDate":"2018-05-14 21:06:10","validated":false,"QueryBody_Original":"SELECT  * from Posts where OwnerUserId = '1850851' order by ViewCount"},{"QuerySetId":851699,"Title":"Posts with the most comments","Description":null,"QueryBody":"SELECT c.PostId, COUNT(c.PostId) AS CommentsOnPost FROM Comments AS c GROUP BY c.PostId ORDER BY CommentsOnPost DESC","CreationDate":"2019-03-15 15:53:31","validated":false,"QueryBody_Original":"SELECT  c.PostId, COUNT(c.PostId) CommentsOnPost\nFROM Comments c\nGROUP BY c.PostId\nORDER BY CommentsOnPost DESC;"},{"QuerySetId":851941,"Title":"How many of Skeet's rep increase this year comes from old answers of his?","Description":null,"QueryBody":"SELECT YEAR(p.creationdate) AS \"JonsAnswerWrittenYear\", YEAR(v.creationdate) AS \"VoteCastYear\", COUNT(v.id) AS \"NumberOfAnswers\" FROM votes AS v LEFT OUTER JOIN posts AS p ON p.id = v.postid WHERE votetypeid = 2 AND owneruserid = 22656 AND YEAR(v.creationdate) = YEAR(CURRENT_TIMESTAMP()) GROUP BY YEAR(p.creationdate), YEAR(v.creationdate) ORDER BY YEAR(p.creationdate)","CreationDate":"2018-05-15 16:02:04","validated":false,"QueryBody_Original":"SELECT   \n  year(p.creationdate) as [JonsAnswerWrittenYear], \n  year(v.creationdate) as [VoteCastYear],\n  count(v.id) as [NumberOfAnswers]\n\nfrom \n  votes v left outer join posts p\n  on p.id = v.postid\nwhere votetypeid = 2\n  and owneruserid = 22656 \n  and year(v.creationdate) =year(getdate())\ngroup by \n  year(p.creationdate), \n  year(v.creationdate)\norder by year(p.creationdate)"},{"QuerySetId":852231,"Title":"\"Avg Q & A\"  AVERAGE SCORES YEARLY comparison","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"PostYear\", CAST(SUM(CASE WHEN posttypeid = 1 THEN score ELSE 0 END) AS FLOAT) \/ SUM(CASE WHEN posttypeid = 1 THEN 1 ELSE 0 END) AS \"Q\", CAST(SUM(CASE WHEN posttypeid = 2 THEN score ELSE 0 END) AS FLOAT) \/ SUM(CASE WHEN posttypeid = 2 THEN 1 ELSE 0 END) AS \"A\", CAST(SUM(score) AS FLOAT) \/ SUM(1) AS \"Q&A\" FROM posts WHERE YEAR(creationdate) >= 2008 AND closeddate IS NULL AND deletiondate IS NULL AND communityowneddate IS NULL AND posttypeid IN (1, 2) GROUP BY YEAR(creationdate) ORDER BY YEAR(creationdate)","CreationDate":"2018-05-16 09:39:38","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as [PostYear],\n  \n  cast(sum(case when posttypeid = 1 then score else 0 end) as decimal) \/\n   sum(case when posttypeid = 1 then 1 else 0 end) as [Q],\n   \n  cast(sum(case when posttypeid = 2 then score else 0 end) as decimal) \/\n   sum(case when posttypeid = 2 then 1 else 0 end) as [A],\n  \n  cast(sum(score) as decimal) \/\n   sum(1) as [Q&A]\n  \nfrom\n  posts\n\nwhere\n  year(creationdate)>=2008\n  and closeddate is null\n  and deletiondate is null\n  and communityowneddate is null \n  and posttypeid in (1,2)\n\ngroup by\n  year(creationdate)\n\norder by \n  year(creationdate)"},{"QuerySetId":852271,"Title":"number of users who posted, by year","Description":"Count of users who posted at least 1 question or answer, grouped by year","QueryBody":"SELECT YEAR(creationdate) AS \"Year\", COUNT(DISTINCT owneruserid) AS \"#UsersWhoPosted\" FROM posts WHERE posttypeid IN (1, 2) GROUP BY YEAR(creationdate) ORDER BY YEAR(creationdate)","CreationDate":"2018-05-16 13:04:39","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as [Year],\n  count(distinct owneruserid) as [#UsersWhoPosted]\nfrom posts\nwhere posttypeid in (1,2)\ngroup by year(creationdate)\norder by year(creationdate)"},{"QuerySetId":852281,"Title":"New Users by Date (last 30 days)","Description":null,"QueryBody":"SELECT CAST(creationdate AS DATE) AS \"Date\", COUNT(id) AS \"New Users\" FROM users WHERE creationdate >= DATEADD(d, -30, GETDATE()) GROUP BY CAST(creationdate AS DATE) ORDER BY CAST(creationdate AS DATE) DESC","CreationDate":"2018-05-16 15:11:50","validated":false,"QueryBody_Original":"SELECT  \n  cast(creationdate as date) as [Date],\n  count(id) as [New Users]\nfrom users\nwhere creationdate >= dateadd(d,-30,getdate())\ngroup by cast(creationdate as date)\norder by cast(creationdate as date) desc"},{"QuerySetId":852401,"Title":"Questions in last year by users below 15 vs at or above","Description":null,"QueryBody":"SELECT 'Questions by users below 15 rep', COUNT(1) FROM Posts WHERE CreationDate > DATEADD(year, -1, GETDATE()) AND PostTypeId = 1 AND OwnerUserId IN (SELECT Id FROM Users WHERE Reputation < 15) UNION SELECT 'Questions by users at 15 rep or higher', COUNT(1) FROM Posts WHERE CreationDate > DATEADD(year, -1, GETDATE()) AND PostTypeId = 1 AND OwnerUserId IN (SELECT Id FROM Users WHERE Reputation >= 15)","CreationDate":"2018-05-16 19:02:24","validated":false,"QueryBody_Original":"SELECT   'Questions by users below 15 rep', count(1)\nfrom    Posts\nwhere   CreationDate > DateAdd(year, -1, GetDate())\nand     PostTypeId = 1\nand     OwnerUserId in (\n        SELECT Id from Users where Reputation < 15\n)\nunion\nSELECT  'Questions by users at 15 rep or higher', count(1)\nfrom    Posts\nwhere   CreationDate > DateAdd(year, -1, GetDate())\nand     PostTypeId = 1\nand     OwnerUserId in (\n        SELECT Id from Users where Reputation >= 15\n);"},{"QuerySetId":852777,"Title":"Top users from Hanover, Germany","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%hanover%' OR UPPER(Location) LIKE '%HANOVER%' OR Location LIKE '%Hanover%' OR LOWER(Location) LIKE '%hannover%' OR UPPER(Location) LIKE '%HANNOVER%' OR Location LIKE '%Hannover%') AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-05-17 17:21:53","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%hanover%'\n    OR UPPER(Location) LIKE '%HANOVER%'\n    OR Location like '%Hanover%'\n    OR LOWER(Location) LIKE '%hannover%'\n    OR UPPER(Location) LIKE '%HANNOVER%'\n    OR Location like '%Hannover%')\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":852840,"Title":"Top US JavaScript answerers with email","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation, u.websiteurl, COUNT(*) AS JavascriptAnswers FROM Users AS u, Posts AS p, Posts AS pp WHERE u.Id IN (SELECT Id FROM Users WHERE Location LIKE ('%United States')) AND p.OwnerUserId = u.Id AND pp.Id = p.ParentId AND pp.Tags LIKE ('%<javascript>%') GROUP BY u.Id, u.Reputation, u.websiteurl ORDER BY JavascriptAnswers DESC","CreationDate":"2018-05-18 16:21:51","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link], u.Reputation, u.websiteurl, count(*) as JavascriptAnswers from Users u, Posts p, Posts pp where u.Id in (\n    SELECT Id\n    from Users \n    where Location like ('%United States')\n  )\n  and p.OwnerUserId = u.Id\n  and pp.Id = p.ParentId\n  and pp.Tags like ('%<javascript>%')\n  group by u.Id, u.Reputation, u.websiteurl\n  order by JavascriptAnswers desc"},{"QuerySetId":853012,"Title":"Find comments containing a word","Description":null,"QueryBody":"SELECT * FROM Comments WHERE LOWER(TEXT) LIKE '%\ud83d\uddf9%'","CreationDate":"2019-07-30 11:28:50","validated":false,"QueryBody_Original":"SELECT  * \n  FROM Comments\n WHERE LOWER(TEXT) LIKE '%\ud83d\uddf9%';"},{"QuerySetId":853429,"Title":" Number of questions with dependency-injection and guice tag","Description":null,"QueryBody":"SELECT Id, AcceptedAnswerId, CreationDate FROM Posts WHERE Tags LIKE '%dependency-injection%' AND Tags LIKE '%guice%'","CreationDate":"2018-05-18 23:45:05","validated":false,"QueryBody_Original":"SELECT  Id, AcceptedAnswerId, CreationDate from Posts where Tags like '%dependency-injection%' and Tags like '%guice%';"},{"QuerySetId":854327,"Title":"select Id, Score, OunerId, CommentCount from Posts","Description":null,"QueryBody":"SELECT Id, Score, OwnerUserId, CommentCount FROM Posts","CreationDate":"2018-05-21 14:39:35","validated":false,"QueryBody_Original":"SELECT  Id, Score, OwnerUserId, CommentCount from Posts"},{"QuerySetId":854519,"Title":"hmm, tell me, data: Was he being sincere, or just a poor attempt at being a smartass?","Description":null,"QueryBody":"SELECT userid AS \"User Link\", SUM(CASE WHEN text LIKE '%option explicit%' COLLATE SQL_Latin1_General_CP1_CI_AS THEN 1 ELSE 0 END) AS \"#OptionExplict\", COUNT(*) AS \"Comments\", NUMBER_TO_STR(CAST(SUM(CASE WHEN text LIKE '%option explicit%' COLLATE SQL_Latin1_General_CP1_CI_AS THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(*), '0.00%') AS \"%OE\" FROM comments WHERE userid IN (1505120, 8112776) GROUP BY userid","CreationDate":"2018-05-21 21:37:29","validated":false,"QueryBody_Original":"SELECT  \n  userid as [User Link], \n  sum(case when text like '%option explicit%' COLLATE SQL_Latin1_General_CP1_CI_AS then 1 else 0 end) as [#OptionExplict],\n  count(*) as [Comments],\n  format(cast(sum(case when text like '%option explicit%' COLLATE SQL_Latin1_General_CP1_CI_AS then 1 else 0 end) as decimal)\n  \/  count(*) ,'0.00%') as [%OE]\nfrom comments\nwhere userid in (1505120,8112776)\ngroup by userid"},{"QuerySetId":854690,"Title":"Questions in a given tag, ordered by number of answers","Description":null,"QueryBody":"SELECT question.id AS \"Post Link\", question.score, question.answercount FROM posts AS question WHERE question.answercount > 100 ORDER BY question.answercount DESC","CreationDate":"2018-05-23 18:08:10","validated":false,"QueryBody_Original":"SELECT  question.id as [Post Link], question.score, question.answercount\nfrom posts as question \nwhere question.answercount > 100\norder by question.answercount desc"},{"QuerySetId":855410,"Title":"Number of users who posted questions in last month","Description":null,"QueryBody":"SELECT COUNT(DISTINCT OwnerUserId) FROM Posts WHERE DATEDIFF(CURRENT_TIMESTAMP(), creationdate) < 30.5 AND STR_POSITION(Tags, '<python>') > 0 AND PostTypeId = 1 \/* 2 == answer (1 == question) *\/","CreationDate":"2018-05-24 03:07:18","validated":false,"QueryBody_Original":"SELECT  count(distinct OwnerUserId) from \n  Posts\n  where datediff(day, creationdate, GETDATE()) < 30.5\n  AND CHARINDEX('<python>', Tags) > 0\n  AND PostTypeId = 1 -- 2 == answer (1 == question)\n;"},{"QuerySetId":856103,"Title":"tag gold badges sorted by date","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY b.Date), u.Id, u.DisplayName, b.Date, b.name, b.Class FROM Badges AS b INNER JOIN users AS u ON u.Id = b.UserId WHERE b.name LIKE N'%' AND b.Class = 1 ORDER BY b.Date","CreationDate":"2018-05-26 11:06:30","validated":false,"QueryBody_Original":"SELECT \n  ROW_NUMBER() OVER(ORDER BY b.Date),\n  u.Id,\n  u.DisplayName,\n  b.Date,\n  b.name,\n  b.Class\nFROM Badges b\nINNER JOIN users u\n  ON u.Id = b.UserId\nWHERE\n  b.name LIKE N'%'\n  AND\n  b.Class = 1\nORDER BY b.Date"},{"QuerySetId":856189,"Title":"Users with the highest rep to total posts ratio","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS \"Total Number of Posts\", u.Reputation \/ COUNT(*) AS Ratio FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.postTypeId IN (1, 2) GROUP BY u.Id, u.DisplayName, u.Reputation ORDER BY u.Reputation DESC LIMIT 50","CreationDate":"2020-10-21 03:33:31","validated":false,"QueryBody_Original":"SELECT  TOP 50\n   u.Id,\n   u.DisplayName,\n   u.Reputation,\n   count(*) as [Total Number of Posts],\n   u.Reputation\/count(*) as Ratio\nFROM Users u\njoin Posts p on p.OwnerUserId = u.Id\nwhere p.postTypeId in (1,2)\ngroup by u.Id,u.DisplayName,u.Reputation\nORDER BY u.Reputation DESC"},{"QuerySetId":856666,"Title":"Questions counted by number of answers","Description":null,"QueryBody":"SELECT AnswerCount, COUNT(*) FROM Posts WHERE PostTypeId = 1 \/* questions *\/ AND AnswerCount > 0 \/* answered questions only *\/ GROUP BY AnswerCount","CreationDate":"2018-05-28 23:03:33","validated":false,"QueryBody_Original":"SELECT  AnswerCount, COUNT(*)\n  FROM Posts\n  WHERE PostTypeId = 1 -- questions\n    AND AnswerCount > 0 -- answered questions only\n  GROUP BY AnswerCount"},{"QuerySetId":856683,"Title":"Users with the lowest rep to total posts ratio","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS \"Total Number of Posts\", CAST(u.Reputation AS FLOAT) \/ COUNT(*) AS Ratio FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.postTypeId IN (1, 2) AND u.Reputation > 100 GROUP BY u.Id, u.DisplayName, u.Reputation ORDER BY Ratio LIMIT 1000","CreationDate":"2018-06-29 09:54:32","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   u.Id,\n   u.DisplayName,\n   u.Reputation,\n   count(*) as [Total Number of Posts],\n   CONVERT(real,u.Reputation)\/count(*) as Ratio\nFROM Users u\njoin Posts p on p.OwnerUserId = u.Id\nwhere p.postTypeId in (1,2) and u.Reputation>100\ngroup by u.Id,u.DisplayName,u.Reputation\nORDER BY Ratio ASC"},{"QuerySetId":856815,"Title":"Average Answers Per Question With Accepted Answer","Description":null,"QueryBody":"SELECT SUM(Posts.AnswerCount) AS \"answers\", COUNT(Posts.AnswerCount) AS \"questions\", SUM(Posts.AnswerCount) \/ CAST(COUNT(Posts.AnswerCount) AS FLOAT) AS \"A per Q\" FROM Posts WHERE Posts.PostTypeId = 1 AND NOT Posts.AcceptedAnswerId IS NULL","CreationDate":"2018-05-28 19:07:49","validated":false,"QueryBody_Original":"SELECT  \n  sum(Posts.AnswerCount) as [answers],\n  count(Posts.AnswerCount) as [questions],\n  sum(Posts.AnswerCount)\/convert(decimal, count(Posts.AnswerCount)) as [A per Q]\nfrom\n  Posts\nwhere\n  Posts.PostTypeId = 1 and\n  Posts.AcceptedAnswerId is not null"},{"QuerySetId":856869,"Title":"JavaFX FileChooser: how to set file filters?","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, COUNT(*) AS \"Total Number of Posts\", u.Reputation \/ COUNT(*) * u.Reputation AS Ratio FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.postTypeId IN (1, 2) GROUP BY u.Id, u.DisplayName, u.Reputation ORDER BY Ratio DESC LIMIT 50","CreationDate":"2018-05-28 23:04:48","validated":false,"QueryBody_Original":"SELECT  TOP 50\n   u.Id,\n   u.DisplayName,\n   u.Reputation,\n   count(*) as [Total Number of Posts],\n   u.Reputation\/count(*)*u.Reputation as Ratio\nFROM Users u\njoin Posts p on p.OwnerUserId = u.Id\nwhere p.postTypeId in (1,2)\ngroup by u.Id,u.DisplayName,u.Reputation\nORDER BY Ratio DESC"},{"QuerySetId":856893,"Title":"Top 100 stackoverflow user from Nepal","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank, Id AS \"User Link\", Reputation AS Point, WebsiteUrl AS URI, Location AS Address FROM Users WHERE LOWER(Location) LIKE '%nepal%' OR UPPER(Location) LIKE '%NP' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-06-04 07:16:22","validated":false,"QueryBody_Original":"SELECT  TOP 100 \nROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Rank, \nId [User Link],\nReputation AS Point, \nWebsiteUrl AS URI, \nLocation AS Address\nFROM Users \nWHERE LOWER(Location) LIKE '%nepal%' OR UPPER(Location) LIKE '%NP'\nORDER BY Reputation DESC"},{"QuerySetId":856963,"Title":"Users with only Fanatic and Enthusiast badge and done nothing else","Description":null,"QueryBody":"SELECT b.userid AS \"User Link\" FROM badges AS b GROUP BY b.userid HAVING COUNT(*) = 1 AND MIN(name) = 'Enthusiast'","CreationDate":"2018-05-29 12:04:58","validated":false,"QueryBody_Original":"SELECT  b.userid as [User Link]\nfrom badges b\ngroup by b.userid\nhaving count(*) =1 \nand min(name) ='Enthusiast'"},{"QuerySetId":857354,"Title":"SELECT Age, COUNT(Age) FROM Users GROUP BY Age ORDER BY Age","Description":null,"QueryBody":"SELECT Reputation, COUNT(Reputation) FROM Users WHERE Reputation <= 1000 GROUP BY Reputation ORDER BY Reputation DESC","CreationDate":"2018-05-31 13:58:53","validated":false,"QueryBody_Original":"SELECT  Reputation, COUNT(Reputation) \n\n\n    \nFROM\n   Users\nWHERE\n   Reputation <= 1000\n\nGROUP BY Reputation   \nORDER BY\n    Reputation DESC;"},{"QuerySetId":857481,"Title":"Top MediaWiki answerers across all sites","Description":"Get the usernames of the people who answered the most questions tagged 'mediawiki', across all (non-Meta) StackExchange sites.","QueryBody":"SELECT u.DisplayName, COUNT(*) FROM StackOverflow.dbo.Posts AS q JOIN StackOverflow.dbo.Posts AS a ON a.ParentId = q.Id JOIN StackOverflow.dbo.Users AS u ON a.OwnerUserId = u.Id WHERE q.PostTypeId = 1 AND q.Tags LIKE '%mediawiki%' AND a.PostTypeId = 2 GROUP BY u.DisplayName ORDER BY COUNT(*) DESC","CreationDate":"2018-05-31 04:30:30","validated":false,"QueryBody_Original":"SELECT  u.DisplayName, COUNT(*)\nFROM StackOverflow.dbo.Posts q\n  JOIN StackOverflow.dbo.Posts a ON a.ParentId = q.Id\n  JOIN StackOverflow.dbo.Users u ON a.OwnerUserId = u.Id\nWHERE q.PostTypeId = 1\n  AND q.Tags LIKE '%mediawiki%'\n  AND a.PostTypeId = 2\nGROUP BY u.DisplayName\nORDER BY COUNT(*) DESC"},{"QuerySetId":857732,"Title":"Percentage of SO users who can't downvote.","Description":null,"QueryBody":"SELECT (((SELECT CAST(COUNT(*) AS FLOAT) FROM Users WHERE Reputation < 125) \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM Users)) * 100) AS \"% of users with < 125 rep.\"","CreationDate":"2018-06-01 00:20:56","validated":false,"QueryBody_Original":"SELECT \n(\n((SELECT CAST(COUNT(*) AS decimal) FROM Users WHERE Reputation < 125) \/\n(SELECT CAST(COUNT(*) AS decimal) FROM Users)) * 100\n) As \"% of users with < 125 rep.\""},{"QuerySetId":857938,"Title":"Average Reputation on Stack Overflow.","Description":null,"QueryBody":"SELECT MIN(reputation) AS \"Minimum Reputation\", MAX(reputation) AS \"Maximmum Reputation\", COUNT(*) AS \"Total Users\", AVG(reputation) AS \"Average Reputation\" FROM users","CreationDate":"2018-06-01 00:33:13","validated":false,"QueryBody_Original":"SELECT \n  min(reputation) \"Minimum Reputation\",\n  max(reputation) \"Maximmum Reputation\",\n  count(*) \"Total Users\",\n  avg(reputation) \"Average Reputation\"\nfrom users;"},{"QuerySetId":858094,"Title":"Number of individual users who have asked questions","Description":null,"QueryBody":"SELECT COUNT(DISTINCT id) FROM users","CreationDate":"2018-06-01 11:23:06","validated":false,"QueryBody_Original":"SELECT  count(distinct id) from users"},{"QuerySetId":858290,"Title":"Who are the users having reputation between this limit?","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS PositionNumber, Id AS \"User Link\", DisplayName, Age, Reputation, WebsiteUrl, Location FROM Users WHERE Reputation BETWEEN ('##LowerLimit##') AND ('##UpperLimit##') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-06-02 07:36:54","validated":false,"QueryBody_Original":"SELECT  TOP(100) ROW_NUMBER() OVER (ORDER BY Reputation Desc) as PositionNumber,\nId [User Link], DisplayName, Age, Reputation, WebsiteUrl, Location\nFrom Users\nWhere Reputation BETWEEN ('##LowerLimit##') AND ('##UpperLimit##')\nORDER BY\nReputation DESC;"},{"QuerySetId":858292,"Title":"Who are the users in a country between this reputation?","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS PositionNumber, Id AS \"User Link\", DisplayName, Age, Reputation, WebsiteUrl, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%##Country##%') AND Reputation BETWEEN ('##LowerLimit##') AND ('##UpperLimit##') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-06-02 07:41:28","validated":false,"QueryBody_Original":"SELECT  TOP(100) ROW_NUMBER() OVER (ORDER BY Reputation Desc) as PositionNumber,\n    Id [User Link], DisplayName, Age, Reputation, WebsiteUrl, Location\n    From Users\n    Where LOWER(Location) LIKE LOWER('%##Country##%') AND\n    Reputation BETWEEN ('##LowerLimit##') AND ('##UpperLimit##')\n    ORDER BY\n    Reputation DESC;"},{"QuerySetId":859665,"Title":"When was the last day you MISSED A WHOLE DAY on the site?","Description":"The last full day that the specified user has no record of activity in any of: Posts, Comments, Votes, or PostHistory. (aka consecutive days in a row)","QueryBody":"SELECT MIN(creationdate) FROM comments","CreationDate":"2018-06-06 07:41:58","validated":false,"QueryBody_Original":"SELECT  min (creationdate) from comments\n--2008-07-31"},{"QuerySetId":859719,"Title":"SELECT TOP 10 u.Id, DisplayName, COUNT(p.Id) PostCount FROM Users AS u JOIN Posts AS p ON u.id","Description":null,"QueryBody":"SELECT u.Id, DisplayName, COUNT(p.Id) AS PostCount FROM Users AS u JOIN Posts AS p ON u.id = p.OwnerUserId GROUP BY u.Id, DisplayName ORDER BY PostCount DESC LIMIT 10","CreationDate":"2018-06-06 13:55:24","validated":false,"QueryBody_Original":"SELECT  TOP 10 u.Id, DisplayName, COUNT(p.Id) PostCount\nFROM Users AS u\nJOIN Posts AS p ON u.id = p.OwnerUserId\nGROUP BY u.Id, DisplayName\nORDER BY PostCount DESC"},{"QuerySetId":859877,"Title":"Question Askers vs Question Answerers","Description":null,"QueryBody":"SELECT COUNT(DISTINCT OwnerUserId) FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId","CreationDate":"2018-06-06 22:54:38","validated":false,"QueryBody_Original":"SELECT  COUNT(DISTINCT OwnerUserId) FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId"},{"QuerySetId":860174,"Title":"Count users who are Active and have reputation.","Description":null,"QueryBody":"SELECT CASE WHEN (LastAccessDate > DATEADD(yy, -1, GETDATE())) THEN 'Yes' ELSE 'No' END AS ActiveThisYear, CASE WHEN (reputation > 200) THEN 'Yes' ELSE 'No' END AS ReputationOver200, COUNT(*) AS Count FROM Users GROUP BY CASE WHEN (LastAccessDate > DATEADD(yy, -1, GETDATE())) THEN 'Yes' ELSE 'No' END, CASE WHEN (reputation > 200) THEN 'Yes' ELSE 'No' END","CreationDate":"2018-06-07 19:46:25","validated":false,"QueryBody_Original":"SELECT \n  CASE WHEN (LastAccessDate > DateAdd(yy, -1, GetDate())) THEN 'Yes' ELSE  'No' END AS ActiveThisYear,\n  CASE WHEN (reputation > 200) THEN 'Yes' ELSE  'No' END AS ReputationOver200,\n  Count(*) AS Count\nfrom Users\nGROUP BY \n  CASE WHEN (LastAccessDate > DateAdd(yy, -1, GetDate())) THEN 'Yes' ELSE  'No' END,\n  CASE WHEN (reputation > 200) THEN 'Yes' ELSE  'No' END"},{"QuerySetId":860584,"Title":"Getting all linked posts with java tag","Description":null,"QueryBody":"SELECT l.Id, l.PostId AS q1Id, r.Tags, r.PostTypeId AS PostTypeId, r.Title AS q1Title, r.Body AS q1Body, l.RelatedPostId AS q2Id, p.Title AS q2Title, p.Body AS q2Body, LinkTypeId AS type FROM PostLinks AS l JOIN Posts AS r ON r.Id = l.PostId JOIN Posts AS p ON p.Id = l.RelatedPostId WHERE p.Tags = 'java' AND r.Tags = 'java' AND l.Id > 1 ORDER BY l.Id LIMIT 10","CreationDate":"2018-06-11 00:00:57","validated":false,"QueryBody_Original":"SELECT  Top 10 l.Id, l.PostId AS q1Id, r.Tags, r.PostTypeId as PostTypeId, r.Title AS q1Title, r.Body AS q1Body, l.RelatedPostId AS q2Id, p.Title AS q2Title, p.Body AS q2Body, LinkTypeId AS type from PostLinks AS l\nJOIN Posts r ON r.Id = l.PostId \nJOIN Posts p ON p.Id = l.RelatedPostId\nWHERE p.Tags = 'java' AND r.Tags = 'java'\nAND l.Id>1\norder by l.Id asc"},{"QuerySetId":860593,"Title":"Search: Posts by specific two Tags","Description":null,"QueryBody":"SELECT P.Id AS \"Post Link\", P.Tags, P.CreationDate FROM Posts AS P WHERE P.AnswerCount > 0 AND P.Tags LIKE '%##Tag1##%' AND P.Tags LIKE '%##Tag2##%' ORDER BY P.CreationDate DESC LIMIT 50000","CreationDate":"2018-06-08 23:33:06","validated":false,"QueryBody_Original":"SELECT  TOP 50000 P.Id as [Post Link], P.Tags, P.CreationDate\nFROM Posts as P\nWHERE P.AnswerCount > 0\nAND\nP.Tags LIKE '%##Tag1##%'\nAND P.Tags LIKE '%##Tag2##%'  \n\/* AND P.Tags LIKE '%##Tag3##%' *\/  \n--AND P.CreationDate > '2013-12-21'\nORDER BY P.CreationDate DESC"},{"QuerySetId":860822,"Title":"TOP 50 Stackoverflow users in Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS PositionNumber, Id AS \"User Link\", Reputation, WebsiteUrl, Location, Views FROM Users WHERE LOWER(Location) LIKE LOWER('%Bangladesh%') ORDER BY Reputation DESC LIMIT 50","CreationDate":"2018-06-09 22:37:56","validated":false,"QueryBody_Original":"SELECT  TOP(50) ROW_NUMBER() OVER (ORDER BY Reputation Desc) as PositionNumber, Id [User Link], Reputation, WebsiteUrl, Location, Views\nFrom Users\nWhere LOWER(Location) LIKE LOWER('%Bangladesh%')\nORDER BY\nReputation DESC;"},{"QuerySetId":860829,"Title":"TOP 100 SO users from Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS PositionNumber, Id AS \"User Link\", Reputation, WebsiteUrl, Location, Views FROM Users WHERE LOWER(Location) LIKE LOWER('%Bangladesh%') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-06-09 22:40:13","validated":false,"QueryBody_Original":"SELECT  TOP(100) ROW_NUMBER() OVER (ORDER BY Reputation Desc) as PositionNumber, Id [User Link], Reputation, WebsiteUrl, Location, Views\nFrom Users\nWhere LOWER(Location) LIKE LOWER('%Bangladesh%')\nORDER BY\nReputation DESC;"},{"QuerySetId":860837,"Title":"How many users have a reputation of 1?","Description":null,"QueryBody":"SELECT reputation, COUNT(id) FROM users WHERE reputation > 101 GROUP BY reputation ORDER BY reputation","CreationDate":"2018-06-09 23:30:28","validated":false,"QueryBody_Original":"SELECT  reputation, count(id) from users where reputation >101 group by reputation order by reputation"},{"QuerySetId":861502,"Title":"Top 10000 users on Stack Overflow","Description":null,"QueryBody":"SELECT * FROM Users ORDER BY Reputation DESC LIMIT 10000","CreationDate":"2018-06-12 01:08:47","validated":false,"QueryBody_Original":"SELECT  TOP(10000) *\nFROM Users\nORDER BY Reputation DESC;"},{"QuerySetId":861525,"Title":"TOP VBA PERFORMERS for date range","Description":"Top VBA\/Excel Users for specified date range (or enter 0 in both for \"last 10 days with data\").  \r\nRanked by Overall: Sum of ( comments + score + (Answers * 2) )","QueryBody":"SELECT c.userid, COUNT(c.id) AS qComments FROM comments AS c JOIN posts AS q ON c.postid = q.id WHERE c.creationdate >= DATEADD(d, -10, (SELECT MAX(creationdate) FROM posts)) AND (q.tags LIKE '%vba>%' OR q.tags LIKE '%excel%') GROUP BY c.userid ORDER BY COUNT(c.id) DESC","CreationDate":"2018-06-12 03:52:03","validated":false,"QueryBody_Original":"SELECT  c.userid, count(c.id) as qComments\nfrom comments c join posts q on c.postid=q.id\nwhere c.creationdate >= dateadd(d,-10,(SELECT max(creationdate) from posts))\n  and ( q.tags like '%vba>%' or q.tags like '%excel%')\ngroup by c.userid\norder by count(c.id) desc"},{"QuerySetId":861657,"Title":"Percent of closed answered negative-scored questions over time","Description":null,"QueryBody":"SELECT MAX(h.t), h.pc AS \"Percent of closed answered negative-scored questions over time\" FROM (SELECT q.t AS t, NTILE(100) OVER (ORDER BY q.t) AS pc FROM (SELECT ClosedDate - CreationDate AS t FROM Posts WHERE PostTypeID = 1 AND AnswerCount > 0 AND Score < 0 AND NOT ClosedDate IS NULL) AS q) AS h WHERE h.t <= '23:59:59' GROUP BY h.pc ORDER BY h.pc","CreationDate":"2018-06-30 22:29:57","validated":false,"QueryBody_Original":"SELECT  max(h.t), h.pc as 'Percent of closed answered negative-scored questions over time' from (\n  SELECT q.t as t, ntile(100) over (order by q.t) as pc\n  from (\n    SELECT ClosedDate - CreationDate as t\n    from Posts\n    where PostTypeID = 1 and AnswerCount > 0 and Score < 0\n    and ClosedDate is not null\n  ) as q\n) as h\nwhere h.t <= '23:59:59'\ngroup by h.pc\norder by h.pc"},{"QuerySetId":861663,"Title":"Percent of closed questions over time","Description":null,"QueryBody":"SELECT MAX(h.t), h.pc AS \"Percent of closed questions over time\" FROM (SELECT q.t AS t, NTILE(100) OVER (ORDER BY q.t) AS pc FROM (SELECT ClosedDate - CreationDate AS t FROM Posts WHERE PostTypeID = 1 AND NOT ClosedDate IS NULL) AS q) AS h WHERE h.t <= '23:59:59' GROUP BY h.pc ORDER BY h.pc","CreationDate":"2018-06-30 21:56:47","validated":false,"QueryBody_Original":"SELECT  max(h.t), h.pc as 'Percent of closed questions over time' from (\n  SELECT q.t as t, ntile(100) over (order by q.t) as pc\n  from (\n    SELECT ClosedDate - CreationDate as t\n    from Posts\n    where PostTypeID = 1 and ClosedDate is not null\n  ) as q\n) as h\nwhere h.t <= '23:59:59'\ngroup by h.pc\norder by h.pc"},{"QuerySetId":862144,"Title":"Closed question percentage for informed vs uninfomed users","Description":null,"QueryBody":"SELECT 100.0 * SUM(CASE WHEN b.id IS NULL AND NOT p.ClosedDate IS NULL THEN 1 ELSE 0 END) \/ SUM(CASE WHEN b.id IS NULL THEN 1 ELSE 0 END) AS pClosedUninf, SUM(CASE WHEN NOT b.id IS NULL AND NOT p.ClosedDate IS NULL THEN 1 ELSE 0 END) * 100.0 \/ SUM(CASE WHEN NOT b.id IS NULL THEN 1 ELSE 0 END) AS pClosedInf FROM Posts AS p LEFT OUTER JOIN Badges AS b ON b.userid = p.owneruserid AND b.name = 'Informed' AND (b.date < p.ClosedDate OR p.ClosedDate IS NULL)","CreationDate":"2018-06-14 20:43:02","validated":false,"QueryBody_Original":"SELECT \n  100.0 * sum(case when b.id is null and p.ClosedDate is not null then 1 else 0 end)\n        \/ sum(case when b.id is null then 1 else 0 end)\n    AS pClosedUninf\n  , sum(case when b.id is not null and p.ClosedDate is not null then 1 else 0 end) * 100.0\n    \/ sum(case when b.id is not null then 1 else 0 end)\n    AS pClosedInf\nFROM Posts p\nLEFT OUTER JOIN Badges b\nON\n  b.userid = p.owneruserid\n  and b.name = 'Informed'\n  and (b.date < p.ClosedDate or p.ClosedDate is null)"},{"QuerySetId":862185,"Title":"Exemplo de busca de coment\u00e1rios de Java","Description":null,"QueryBody":"SELECT * FROM Comments WHERE Text LIKE '%java%'","CreationDate":"2018-06-13 19:36:32","validated":false,"QueryBody_Original":"SELECT  * FROM Comments WHERE Text like '%java%'"},{"QuerySetId":862452,"Title":"H-index (based on answer scores) ranking","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY MAX(H.Score) DESC) AS \"#\", H.OwnerUserId AS \"User Link\", MAX(H.Score) AS HIndex FROM (SELECT S.OwnerUserId, S.Score, SUM(S.NumAnswers) OVER (PARTITION BY S.OwnerUserId ORDER BY S.Score DESC rows BETWEEN unbounded preceding AND CURRENT ROW) AS NumAnswersCumul FROM (SELECT P.OwnerUserId, P.Score, COUNT(*) AS NumAnswers FROM Posts AS P WHERE P.PostTypeId = 2 AND P.Score >= 4 AND NOT P.OwnerUserId IS NULL GROUP BY P.OwnerUserId, P.Score) AS S) AS H WHERE H.NumAnswersCumul >= H.Score AND H.score = 4 GROUP BY H.OwnerUserId ORDER BY \"User Link\" DESC","CreationDate":"2020-08-11 10:52:58","validated":false,"QueryBody_Original":"SELECT  row_number() over (order by max(H.Score) desc) as [#]\n  , H.OwnerUserId as [User Link], max(H.Score) as HIndex\nfrom (\n  SELECT S.OwnerUserId, S.Score\n    , sum(S.NumAnswers)\n      over (partition by S.OwnerUserId order by S.Score desc rows unbounded preceding)\n      as NumAnswersCumul\n  from (\n    SELECT P.OwnerUserId, P.Score, count(*) as NumAnswers\n    from Posts P\n    where P.PostTypeId = 2\n        and P.Score >= 4\n        and P.OwnerUserId is not null\n    group by P.OwnerUserId, P.Score\n    ) S\n  ) H\nwhere H.NumAnswersCumul >= H.Score and H.score = 4\ngroup by H.OwnerUserId\norder by [User Link] desc"},{"QuerySetId":862466,"Title":"H-index (based on duplicates) ranking ","Description":null,"QueryBody":"SELECT H.OwnerUserId AS \"User Link\", MIN(H.NumAnswersCumul) AS HIndex FROM (SELECT S.OwnerUserId, S.LinkScore, SUM(S.NumAnswers) OVER (PARTITION BY S.OwnerUserId ORDER BY S.LinkScore DESC rows BETWEEN unbounded preceding AND CURRENT ROW) AS NumAnswersCumul FROM (SELECT P.OwnerUserId, L.LinkScore, COUNT(*) AS NumAnswers FROM Posts AS P INNER JOIN (SELECT PL.RelatedPostId, COUNT(*) AS LinkScore FROM PostLinks AS PL INNER JOIN Posts AS PS ON PS.Id = PL.PostId WHERE PL.LinkTypeId = 3 GROUP BY PL.RelatedPostId) AS L ON L.RelatedPostId = P.ParentId WHERE P.PostTypeId = 2 AND L.LinkScore >= 5 AND NOT P.OwnerUserId IS NULL GROUP BY P.OwnerUserId, L.LinkScore) AS S) AS H WHERE H.NumAnswersCumul >= H.LinkScore GROUP BY H.OwnerUserId ORDER BY HIndex DESC","CreationDate":"2018-06-14 11:28:49","validated":false,"QueryBody_Original":"SELECT  H.OwnerUserId as [User Link], min(H.NumAnswersCumul) as HIndex\nfrom (\n  SELECT S.OwnerUserId, S.LinkScore\n    , sum(S.NumAnswers)\n      over (partition by S.OwnerUserId order by S.LinkScore desc rows unbounded preceding)\n      as NumAnswersCumul\n  from (\n    SELECT P.OwnerUserId\n      , L.LinkScore\n      , count(*) as NumAnswers\n    from Posts P\n    inner join (SELECT PL.RelatedPostId, count(*) as LinkScore from PostLinks PL inner join Posts PS on PS.Id = PL.PostId where PL.LinkTypeId = 3 group by PL.RelatedPostId) L on L.RelatedPostId = P.ParentId\n    where P.PostTypeId = 2\n        and L.LinkScore >= 5\n        and P.OwnerUserId is not null\n    group by P.OwnerUserId, L.LinkScore\n    ) S\n  ) H\nwhere H.NumAnswersCumul >= H.LinkScore\ngroup by H.OwnerUserId\norder by HIndex desc"},{"QuerySetId":862637,"Title":"Team's Answers - 10 agents","Description":null,"QueryBody":"SELECT p.Id, p.CreationDate, u.DisplayName, p.Score, p.Id AS \"Post Link\", pP.AcceptedAnswerId FROM posts AS p, users AS u, posts AS pP WHERE p.PostTypeId = 2 AND (p.owneruserid = 5937420 OR p.owneruserid = 9498806 OR p.owneruserid = 9485673 OR p.owneruserid = 9524052 OR p.owneruserid = 9521610 OR p.owneruserid = 9929045 OR p.owneruserid = 9928809 OR p.owneruserid = 3156333 OR p.owneruserid = 9929015 OR p.owneruserid = 9892073) AND p.owneruserid = u.Id AND p.ParentId = pP.Id AND p.CreationDate >= '2018-08-19' AND p.CreationDate < '2018-08-25' ORDER BY CreationDate","CreationDate":"2018-09-17 14:39:28","validated":false,"QueryBody_Original":"SELECT  p.Id,p.CreationDate,u.DisplayName, p.Score, p.Id AS [Post Link], pP.AcceptedAnswerId\nfrom posts p,users u, posts pP where p.PostTypeId=2 \nand \n( \np.owneruserid=5937420\nor p.owneruserid=9498806\nor p.owneruserid=9485673\nor p.owneruserid=9524052\nor p.owneruserid=9521610\nor p.owneruserid=9929045\nor p.owneruserid=9928809\nor p.owneruserid=3156333\nor p.owneruserid=9929015\nor p.owneruserid=9892073\n)\nand p.owneruserid=u.Id\nand p.ParentId=pP.Id\nand p.CreationDate >= '2018-08-19'\nand p.CreationDate < '2018-08-25' \norder by CreationDate asc"},{"QuerySetId":862673,"Title":"ashleedawg's animated gif's as html ","Description":null,"QueryBody":"SELECT * FROM posts WHERE body LIKE '%http:\/\/couill.art\/wp-content\/uploads\/2018\/05\/Thicc-girls-slim-boi.gif%' AND YEAR(creationdate) = 2018","CreationDate":"2018-06-14 16:12:55","validated":false,"QueryBody_Original":"SELECT  * from posts where body like '%http:\/\/couill.art\/wp-content\/uploads\/2018\/05\/Thicc-girls-slim-boi.gif%'\nand year(creationdate)=2018"},{"QuerySetId":862849,"Title":"Angular Vs Vue Vs React","Description":null,"QueryBody":"SELECT COUNT(Id) AS Amount, CONCAT(YEAR(CreationDate), '\/', MONTH(CreationDate)) AS per FROM posts WHERE Tags LIKE '%reactjs%' GROUP BY CONCAT(YEAR(CreationDate), '\/', MONTH(CreationDate))","CreationDate":"2018-06-14 23:46:38","validated":false,"QueryBody_Original":"SELECT  count(Id) as Amount, Concat(Year(CreationDate), '\/', Month(CreationDate)) as per\nFROM posts\nWHERE Tags LIKE '%reactjs%'\nGROUP BY Concat(Year(CreationDate), '\/', Month(CreationDate))"},{"QuerySetId":863253,"Title":"Top Stackoverflow users from Pakistan?","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' ORDER BY Reputation DESC","CreationDate":"2018-06-15 13:03:21","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":863291,"Title":"What questions have been closed as Idea Generation?","Description":null,"QueryBody":"SELECT Id, Title, Score, ViewCount AS \"Post Link\" FROM Posts ORDER BY CreationDate DESC LIMIT 2000","CreationDate":"2018-06-15 17:28:13","validated":false,"QueryBody_Original":"SELECT  TOP 2000 Id, Title, Score, ViewCount AS [Post Link] FROM Posts ORDER BY CreationDate DESC"},{"QuerySetId":863698,"Title":"Top users from Uruguay by rep","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%uruguay%' ORDER BY Reputation DESC","CreationDate":"2018-06-17 02:39:38","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation, Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%uruguay%'\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":864414,"Title":"Avg time in hours between asking and closing a question","Description":null,"QueryBody":"SELECT AVG(DATEDIFF(Q.ClosedDate, Q.CreationDate)) AS AllTags FROM Posts AS Q WHERE Q.PostTypeId = 1 AND Q.CreationDate BETWEEN '2013-01-01' AND '2017-12-31'","CreationDate":"2018-10-17 04:51:29","validated":false,"QueryBody_Original":"SELECT  avg(datediff(hour, Q.CreationDate, Q.ClosedDate)) as AllTags\nfrom Posts as Q\nwhere Q.PostTypeId = 1\nand Q.CreationDate BETWEEN '2013-01-01' and '2017-12-31'"},{"QuerySetId":864629,"Title":"Keras posts without python tag containing unformated code","Description":null,"QueryBody":"SELECT viewCount, id AS \"Post Link\", body FROM Posts AS p WHERE (p.tags LIKE '%apache-beam%') ORDER BY p.viewCount DESC","CreationDate":"2018-06-19 23:06:32","validated":false,"QueryBody_Original":"SELECT  viewCount, id as [Post Link], body\nfrom Posts as p\nwhere (p.tags like '%apache-beam%')\norder by p.viewCount desc"},{"QuerySetId":865663,"Title":"Stack Overflow and Cooking.se shared tags","Description":"https:\/\/meta.stackoverflow.com\/questions\/369913\/why-arent-some-tags-wiki-shared-between-code-review-and-stack-overflow","QueryBody":"SELECT st.tagname AS \"Tagname\", st.count AS \"# Stack Overflow Questions\", ct.count AS \"# Cooking Questions\", CONCAT('https:\/\/cooking.stackexchange.com\/tags\/', ct.tagname, '|', ct.tagname) AS \"Cooking Tag\" FROM tags AS st INNER JOIN \"stackexchange.cooking\".\"dbo\".tags AS ct ON ct.tagname = st.tagname ORDER BY st.count + ct.count DESC","CreationDate":"2018-06-21 23:51:56","validated":false,"QueryBody_Original":"SELECT   st.tagname [Tagname]\n      , st.count [# Stack Overflow Questions]\n      , ct.count [# Cooking Questions]\n      , concat('https:\/\/cooking.stackexchange.com\/tags\/'\n              , ct.tagname\n              , '|'\n              , ct.tagname)  [Cooking Tag]\nfrom tags st\ninner join [stackexchange.cooking].[dbo].tags ct on ct.tagname = st.tagname\norder by st.count + ct.count desc"},{"QuerySetId":866544,"Title":"select body from Posts where Tags like '%java%'","Description":null,"QueryBody":"SELECT body FROM Posts WHERE Tags LIKE '%java%'","CreationDate":"2018-06-24 20:15:08","validated":false,"QueryBody_Original":"SELECT  body from Posts where Tags like '%java%'"},{"QuerySetId":866549,"Title":"Maximum score per day per post type","Description":null,"QueryBody":"SELECT CASE WHEN PostTypeId = 1 THEN 'Questions' ELSE 'Answers' END, MAX(CAST(Score AS FLOAT) \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS Score FROM Posts WHERE DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) > 0 AND PostTypeId IN (1, 2) GROUP BY PostTypeId","CreationDate":"2018-06-24 21:45:42","validated":false,"QueryBody_Original":"SELECT  CASE WHEN PostTypeId = 1 THEN 'Questions' ELSE 'Answers' END,\n   MAX(CAST(Score AS FLOAT) \/ DATEDIFF(DAY, CreationDate, GETDATE())) AS Score\n   FROM Posts\n   WHERE DATEDIFF(DAY, CreationDate, GETDATE()) > 0\n     AND PostTypeId IN (1, 2)\n   GROUP BY PostTypeId"},{"QuerySetId":867796,"Title":"Sri Lankan Profiles Ranked By Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Reputation, DisplayName, Location, CONCAT(DATEDIFF(CURRENT_TIMESTAMP(), CreationDate), 'year(s) ', DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) % 12, 'month(s)') AS MemberFor, LastAccessDate, CONCAT('https:\/\/stackoverflow.com\/users\/', Id, '\/') AS VisitProfile, Views FROM Users WHERE LOWER(Location) LIKE '%gurgaon%' ORDER BY Reputation DESC","CreationDate":"2018-07-09 15:53:28","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Reputation,\n    DisplayName,\n    Location,\n    CONCAT(DATEDIFF(YEAR,CreationDate,GETDATE()), 'year(s) ',DATEDIFF(MONTH,CreationDate,GETDATE())%12,'month(s)')AS MemberFor,\n    LastAccessDate,\n    CONCAT('https:\/\/stackoverflow.com\/users\/',Id,'\/') AS VisitProfile,\n    Views\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%gurgaon%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":867999,"Title":"What do all posts with answers>12 say?","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", CreationDate, Title, Body AS Body, Score, Tags, ViewCount, AnswerCount AS Answers, LENGTH(Body) AS Size FROM Posts AS q WHERE q.ClosedDate IS NULL AND AnswerCount > 12","CreationDate":"2020-01-19 10:00:53","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link],\n       CreationDate,\n       Title, Body as Body, \n       Score, Tags, ViewCount,\n       AnswerCount as Answers,\n       Len(Body) as Size\nfrom Posts q\nwhere q.ClosedDate is null\n  and AnswerCount > 12"},{"QuerySetId":868618,"Title":"Top SO users From Netherlands","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%netherlands%' OR UPPER(Location) LIKE '%NETHERLANDS%' OR Location LIKE '%NETHERLANDS%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-06-29 16:24:25","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%netherlands%'\n    OR UPPER(Location) LIKE '%NETHERLANDS%'\n    or Location like '%NETHERLANDS%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":868908,"Title":"Median close time for questions","Description":null,"QueryBody":"SELECT DISTINCT CAST(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY CAST(ClosedDate - CreationDate AS FLOAT)) OVER () AS DATETIME) AS \"Median close time for questions\" FROM Posts WHERE PostTypeID = 1 AND NOT ClosedDate IS NULL","CreationDate":"2018-06-30 22:22:58","validated":false,"QueryBody_Original":"SELECT  distinct convert(datetime, percentile_cont(0.5)\nwithin group (order by convert(float, ClosedDate - CreationDate)) over())\nas 'Median close time for questions'\nfrom Posts\nwhere PostTypeID = 1 and ClosedDate is not null"},{"QuerySetId":869018,"Title":"Number of views for user 181217","Description":null,"QueryBody":"SELECT Views FROM Users WHERE Id = 181217","CreationDate":"2018-07-01 10:40:03","validated":false,"QueryBody_Original":"SELECT  Views From Users Where Id=181217"},{"QuerySetId":869044,"Title":"recreate TAGS field, REPLACING [EXCEL-VBA] with [EXCEL]+[VBA] *where applicable","Description":"271974 answers to 203085 questions, have at least one of the 3 tags","QueryBody":"SELECT COUNT(*) FROM posts AS q WHERE (q.tags LIKE '%<vba>%' OR q.tags LIKE '%<excel>%' OR q.tags LIKE '%<excel-vba>%') AND posttypeid = 1","CreationDate":"2018-07-01 15:38:37","validated":false,"QueryBody_Original":"SELECT  count(*)\n\nfrom posts q\n\nwhere ( q.tags like '%<vba>%' or q.tags like '%<excel>%' or q.tags like '%<excel-vba>%' )\n\n  and posttypeid = 1"},{"QuerySetId":869058,"Title":"get reputation of a user","Description":null,"QueryBody":"SELECT id, Reputation FROM Users WHERE DisplayName = '##Name##'","CreationDate":"2018-07-01 19:26:54","validated":false,"QueryBody_Original":"SELECT  id, Reputation FROM Users WHERE DisplayName='##Name##'"},{"QuerySetId":870309,"Title":"How high is the fraction of posts closed as duplicates","Description":null,"QueryBody":"SELECT CountTotal, CountClosedAsDuplicate, CAST(CountClosedAsDuplicate AS FLOAT) \/ CountTotal AS FractionClosedAsDuplicate FROM (SELECT (SELECT COUNT(*) FROM Posts AS p WHERE CreationDate > '2018-06-25' AND PostTypeID = 1 AND EXISTS(SELECT 1 FROM PostHistory AS ph WHERE ph.PostId = p.Id AND ph.PostHistoryTypeId = 10 AND ph.Comment = 101)) AS CountClosedAsDuplicate, (SELECT COUNT(*) FROM Posts AS p WHERE CreationDate > '2018-06-25' AND PostTypeID = 1) AS CountTotal) AS A","CreationDate":"2018-07-04 18:50:42","validated":false,"QueryBody_Original":"SELECT  CountTotal, CountClosedAsDuplicate, Cast(CountClosedAsDuplicate As Float)\/CountTotal As FractionClosedAsDuplicate FROM \n(\n  SELECT (\n    SELECT COUNT(*) \n    FROM Posts p \n    WHERE \n     CreationDate \n       > '2018-06-25'\n     AND PostTypeID = 1\n     AND EXISTS(\n       SELECT 1 \n       FROM PostHistory ph \n       WHERE\n         ph.PostId = p.Id \n         AND ph.PostHistoryTypeId = 10 \n         AND ph.Comment = 101\n    )\n    ) As CountClosedAsDuplicate,\n    (SELECT COUNT(*)\n    FROM Posts p \n    WHERE \n     CreationDate \n       > '2018-06-25'\n     And PostTypeID = 1\n       ) As CountTotal\n  ) As A"},{"QuerySetId":870383,"Title":"*ow do you accept an answer comments","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\" FROM Comments AS c WHERE c.Text LIKE '%ow do you accept an answer%' ORDER BY c.CreationDate LIMIT 1000","CreationDate":"2018-07-04 22:22:36","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n c.Id as [Comment Link]\nfrom Comments c  \nwhere c.Text like '%ow do you accept an answer%'\norder by c.CreationDate asc;"},{"QuerySetId":870387,"Title":"Top SO users in Copenhagen","Description":null,"QueryBody":"SELECT DisplayName, Location, Reputation, WebsiteUrl, AboutMe FROM Users WHERE Location LIKE '%Vilnius%' ORDER BY Reputation DESC","CreationDate":"2018-07-05 00:13:55","validated":false,"QueryBody_Original":"SELECT  DisplayName, Location, Reputation, WebsiteUrl, AboutMe\nfrom Users\nwhere Location like '%Vilnius%'\norder by Reputation desc"},{"QuerySetId":870829,"Title":"Deleted questions by specific gold badge holder","Description":null,"QueryBody":"SELECT 'ex' + 'cel' AS \"tag\"","CreationDate":"2018-07-11 06:16:08","validated":false,"QueryBody_Original":"SELECT  'ex'+'cel' as [tag]"},{"QuerySetId":871060,"Title":"Top users from Chandigarh, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%chandigarh%' OR UPPER(Location) LIKE '%CHANDIGARH%' OR Location LIKE '%Chandigarh%' AND Reputation >= 5000 ORDER BY Reputation DESC","CreationDate":"2018-07-06 07:29:42","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%chandigarh%'\n    OR UPPER(Location) LIKE '%CHANDIGARH%'\n    or Location like '%Chandigarh%'\n    AND Reputation >= 5000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":871545,"Title":"Find all posts with a superscript","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", Id AS \"Post Link\", Body FROM Posts WHERE Body LIKE '%<sub>[0-9]%<\/sub>%' LIMIT 10","CreationDate":"2018-07-08 16:03:25","validated":false,"QueryBody_Original":"SELECT  TOP 10 OwnerUserId [User Link], Id [Post Link], Body\nfrom Posts\nwhere Body like '%<sub>[0-9]%<\/sub>%'"},{"QuerySetId":871866,"Title":"select top  10 * from posts","Description":null,"QueryBody":"SELECT * FROM posts LIMIT 10","CreationDate":"2018-07-09 16:13:17","validated":false,"QueryBody_Original":"SELECT  top  10 * from posts"},{"QuerySetId":872271,"Title":"Answer to other persons questions","Description":null,"QueryBody":"SELECT CONCAT('https:\/\/worldbuilding.stackexchange.com\/a\/', Posts.Id) AS Link, Posts.* FROM Posts WHERE PostTypeId = 2 AND OwnerUserId = 28789 AND ParentId IN (SELECT Id FROM Posts WHERE PostTypeId = 1 AND OwnerUserId = 353)","CreationDate":"2018-07-10 12:13:52","validated":false,"QueryBody_Original":"SELECT  CONCAT('https:\/\/worldbuilding.stackexchange.com\/a\/', Posts.Id) AS Link,\n       Posts.*\n  FROM Posts\n WHERE PostTypeId = 2\n   AND OwnerUserId = 28789\n   And ParentId In (SELECT Id\n                      FROM Posts\n                     WHERE PostTypeId = 1\n                       AND OwnerUserId = 353);"},{"QuerySetId":872278,"Title":"Two people answered the same question","Description":null,"QueryBody":"SELECT CONCAT('https:\/\/worldbuilding.stackexchange.com\/q\/', Posts.ParentId) AS Link FROM Posts WHERE OwnerUserId = '28789' AND PostTypeId = 2 INTERSECT SELECT CONCAT('https:\/\/worldbuilding.stackexchange.com\/q\/', Posts.ParentId) AS Link FROM Posts WHERE OwnerUserId = '30492' AND PostTypeId = 2","CreationDate":"2018-07-10 12:16:04","validated":false,"QueryBody_Original":"SELECT  CONCAT('https:\/\/worldbuilding.stackexchange.com\/q\/', Posts.ParentId) AS Link\n  FROM Posts\n WHERE OwnerUserId = '28789'\n   AND PostTypeId = 2\nINTERSECT\nSELECT CONCAT('https:\/\/worldbuilding.stackexchange.com\/q\/', Posts.ParentId) AS Link\n  FROM Posts\n WHERE OwnerUserId = '30492'\n   AND PostTypeId = 2;"},{"QuerySetId":872370,"Title":"remove the <excel-####> tag and replace with <excel> to fit new tag","Description":"questions tagged [excel-vba] that need [excel] AND\/OR [vba] added, but there are too many tags ([# of tags] - 1 + [#tags needed] >5 ), but is a version-specific [excel-####] tag that can be changed to [excel]","QueryBody":"SELECT tagname FROM tags WHERE tagname LIKE 'excel-%'","CreationDate":"2018-07-10 17:31:32","validated":false,"QueryBody_Original":"SELECT  tagname from tags where tagname like 'excel-%'"},{"QuerySetId":872663,"Title":"Top SO users from France","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS Link, DisplayName, Reputation FROM Users WHERE (LOWER(Location) LIKE '%france%' OR UPPER(Location) LIKE '%FRANCE%') AND reputation > 2000 ORDER BY Reputation DESC","CreationDate":"2018-07-11 13:17:57","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS Link, \n    DisplayName,\n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%france%' OR \n    UPPER(Location) LIKE '%FRANCE%')\n    and reputation > 2000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":872868,"Title":"Questions and Answers per Month - not NNs","Description":null,"QueryBody":"SELECT \"Month\", SUM(CASE WHEN 0 < 1 THEN 1 ELSE 0 END) AS All_Questions, SUM(CASE WHEN AnswerCount > 0 THEN 1 ELSE 0 END) AS Questions_with_Answers FROM (SELECT CAST(CAST(TIME_TO_STR(CreationDate, '%Y') AS TEXT) + '-' + CAST(TIME_TO_STR(CreationDate, '%m') AS TEXT) + '-01' AS DATETIME) AS \"Month\", AnswerCount FROM Posts AS p WHERE ClosedDate IS NULL AND PostTypeId = 1 AND Tags LIKE '%machine-learning%') AS X GROUP BY \"Month\" ORDER BY \"Month\"","CreationDate":"2018-08-19 00:30:41","validated":false,"QueryBody_Original":"SELECT  [Month], \n       sum(case when 0 < 1 then 1 else 0 end) All_Questions,\n       sum(case when AnswerCount > 0 then 1 else 0 end) Questions_with_Answers\nfrom\n(\n  SELECT CAST(\n      cast(DATEPART(YYYY, CreationDate) as varchar) + '-' + cast(DATEPART(MM, CreationDate) as varchar) + '-01'\n    as datetime) [Month], \n    AnswerCount\n     \n  from Posts p\n  where ClosedDate is NULL\n  and PostTypeId = 1\n  and Tags  LIKE '%machine-learning%'\n) as X\ngroup by [Month]\norder by [Month] asc"},{"QuerySetId":873001,"Title":"Code smells and anti-patterns questions","Description":null,"QueryBody":"SELECT * FROM Posts INNER JOIN Users ON (Users.Id = Posts.Id) WHERE Posts.PostTypeId = 1 AND (Posts.Body LIKE '%code smell%' OR Posts.Body LIKE '%bad smell%' OR Posts.Body LIKE '%anti-pattern%' OR Posts.Body LIKE '%anti pattern%' OR Posts.Body LIKE '%technical debt%') ORDER BY Score DESC","CreationDate":"2018-07-12 00:03:42","validated":false,"QueryBody_Original":"SELECT  *\nFrom Posts\n     INNER JOIN Users\n    ON (Users.Id = Posts.Id)\nWhere Posts.PostTypeId = 1 AND (Posts.Body LIKE '%code smell%'\nOR Posts.Body LIKE '%bad smell%'\nOR Posts.Body LIKE '%anti-pattern%'\nOR Posts.Body LIKE '%anti pattern%'\nOR Posts.Body LIKE '%technical debt%')\n\nORDER BY \n    Score DESC"},{"QuerySetId":873228,"Title":"Top users from Saarbr\u00fccken, Germany","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%saarbr%cken%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-07-12 14:39:51","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%saarbr%cken%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":873229,"Title":"Top users from Frankfurt\/Main, Germany","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%frankfurt%main%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-07-12 14:43:44","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%frankfurt%main%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":873240,"Title":"how much data is SEDE \"missing\"? (due to updates being only weekly) ...Answer: \u00bc%","Description":"SEDE data is updated Sundays mornings so data is up to 7 days behind.  What % of the \"actual\" (live) data is missing, at most? (based on recordcount in POSTS)  (ANSWER: Less than 1\/4 of 1%, at most)","QueryBody":"SELECT MAX(creationdate) FROM comments","CreationDate":"2018-07-12 15:42:22","validated":false,"QueryBody_Original":"SELECT  max(creationdate) from comments"},{"QuerySetId":873439,"Title":"Number of questions in MSE","Description":null,"QueryBody":"SELECT COUNT(*) AS count FROM posts WHERE postTypeId = 1","CreationDate":"2018-07-12 19:52:02","validated":false,"QueryBody_Original":"SELECT  count(*) as count \nfrom posts \nwhere postTypeId = 1"},{"QuerySetId":873757,"Title":"Starting point for \"real world questions are on-topic\" comments","Description":null,"QueryBody":"SELECT DISTINCT CONCAT('https:\/\/worldbuilding.stackexchange.com\/questions\/', Posts.ParentId, '\/', CommentsAboutOntopic.PostId, '#comment', CommentsAboutOntopic.Id, '_', CommentsAboutOntopic.PostId) AS Link, CommentsAboutOntopic.Text, CommentsAboutOntopic.CreationDate FROM (SELECT * FROM Comments WHERE LOWER(Text) LIKE '%real%world%questions%on-topic%') AS CommentsAboutOntopic, Posts AS Posts WHERE Posts.Id = CommentsAboutOntopic.PostId ORDER BY CommentsAboutOntopic.CreationDate DESC","CreationDate":"2018-07-13 12:48:23","validated":false,"QueryBody_Original":"SELECT  DISTINCT CONCAT('https:\/\/worldbuilding.stackexchange.com\/questions\/', Posts.ParentId, '\/', CommentsAboutOntopic.PostId, '#comment', CommentsAboutOntopic.Id, '_', CommentsAboutOntopic.PostId) AS Link,\n       CommentsAboutOntopic.Text,\n       CommentsAboutOntopic.CreationDate\n  FROM (\n    SELECT * \n      FROM Comments\n     WHERE lower(Text) LIKE '%real%world%questions%on-topic%'\n    ) AS CommentsAboutOntopic, \n     Posts AS Posts\n   WHERE Posts.Id = CommentsAboutOntopic.PostId\n   ORDER BY CommentsAboutOntopic.CreationDate DESC;"},{"QuerySetId":874097,"Title":"Select * from Users where Location = 'Rajkot'","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%Rajk%'","CreationDate":"2018-07-14 08:10:04","validated":false,"QueryBody_Original":"SELECT  * from Users where Location like  '%Rajk%'"},{"QuerySetId":874107,"Title":"Questions with answers more than 5","Description":null,"QueryBody":"SELECT Q.Id AS QId, Q.Title AS QTitle, Q.body AS QBody, G.Id AS GId, G.Body AS GBody, Q.Score AS QScore, G.Score AS GScore, Q.ViewCount AS QViewCount, G.ViewCount AS GViewCount, Q.Tags AS QTags, G.Title AS GTitle FROM Posts AS G, (SELECT * FROM Posts WHERE ParentId IS NULL AND AnswerCount >= 5) AS Q WHERE G.ParentId = Q.Id","CreationDate":"2018-07-14 10:07:11","validated":false,"QueryBody_Original":"SELECT  Q.Id as QId, Q.Title as QTitle, Q.body as QBody, G.Id as GId, G.Body as GBody, Q.Score as QScore, G.Score as GScore,\n        Q.ViewCount as QViewCount, G.ViewCount as GViewCount, Q.Tags as QTags, G.Title as GTitle \n\tfrom \n\t\tPosts as G, \n\t\t(SELECT * from Posts \n\t\t\twhere ParentId is null \n            and AnswerCount>=5)\n\t\t as Q\nwhere G.ParentId = Q.Id"},{"QuerySetId":874109,"Title":"Questions more than 5 ","Description":null,"QueryBody":"SELECT * FROM Posts WHERE ParentId IS NULL AND AnswerCount >= 5","CreationDate":"2018-07-14 10:23:02","validated":false,"QueryBody_Original":"SELECT  * from Posts \n\t\t\twhere ParentId is null \n            and AnswerCount>=5"},{"QuerySetId":874255,"Title":"SELECT * FROM Posts WHERE Id = 5582","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 5582","CreationDate":"2018-07-15 02:17:22","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Id = 5582"},{"QuerySetId":874822,"Title":"(T-SQL) How to measure milliseconds for tracking runtimes. (also DELAY) ","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(CURRENT_TIMESTAMP(), '%Y-%m-%d %H:%M:%S.%f') AS TEXT(30))","CreationDate":"2018-07-16 17:32:30","validated":false,"QueryBody_Original":"SELECT  convert (varchar, getdate(),121)"},{"QuerySetId":875105,"Title":"Questions with comments and edits","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId = 1 \/* only questions *\/ AND NOT LastEditDate IS NULL AND CommentCount > 0 AND ClosedDate IS NULL LIMIT 30","CreationDate":"2018-07-17 14:54:58","validated":false,"QueryBody_Original":"SELECT  \n  TOP 30 *\nFROM Posts\nWHERE\n  PostTypeId=1 -- only questions\n  AND LastEditDate IS NOT NULL\n  AND CommentCount > 0\n  AND ClosedDate IS NULL"},{"QuerySetId":875127,"Title":"Which one has a better index?","Description":null,"QueryBody":"SELECT COUNT(*) FROM dbo.Posts AS p WHERE p.PostTypeId = 1","CreationDate":"2018-07-17 15:55:23","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM dbo.Posts AS p\nWHERE p.PostTypeId = 1;\n\nSELECT COUNT(*)\nFROM dbo.Posts AS p\nWHERE p.ParentId IS NULL;"},{"QuerySetId":875162,"Title":"Text of Links in posthistory dz","Description":null,"QueryBody":"SELECT UserID, UserDisplayName, PostId, CreationDate, Text AS PostText FROM PostHistory AS qh WHERE Text LIKE '%http%' ORDER BY CreationDate","CreationDate":"2018-07-17 18:20:49","validated":false,"QueryBody_Original":"SELECT  UserID, \n\t   UserDisplayName, PostId,\n\t   CreationDate,\n\t   Text as PostText \nfrom PostHistory qh\nwhere Text like '%http%'\norder by CreationDate"},{"QuerySetId":875499,"Title":"Count the number of questions","Description":null,"QueryBody":"SELECT COUNT(id) FROM posts WHERE posttypeid = 2 AND (body LIKE '%<pre>%')","CreationDate":"2018-07-18 04:03:47","validated":false,"QueryBody_Original":"SELECT \n   count(id)\nfrom posts\nwhere posttypeid = 2 and (body like '%<pre>%');"},{"QuerySetId":875659,"Title":"What tags don't have excerpts?","Description":null,"QueryBody":"SELECT t.id, t.TagName, t.Count FROM Tags AS t WHERE t.ExcerptPostId IS NULL ORDER BY t.Count DESC","CreationDate":"2018-07-18 14:44:22","validated":false,"QueryBody_Original":"SELECT  \n  t.id\n  , t.TagName\n  , t.Count\nFROM Tags t \nWHERE t.ExcerptPostId IS NULL \nORDER BY t.Count DESC"},{"QuerySetId":875978,"Title":"Top SO users from Arizona","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE Reputation >= (SELECT Reputation FROM Users WHERE ID = 5285908) AND (UPPER(Location) LIKE '% AZ%' OR UPPER(Location) LIKE '% ARIZONA%') ORDER BY Reputation DESC","CreationDate":"2018-07-18 22:42:26","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE   \n    Reputation >= (SELECT Reputation from Users where ID = 5285908)\n    AND (UPPER(Location) LIKE '% AZ%'\n    OR UPPER(Location) LIKE '% ARIZONA%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":875991,"Title":"Top SO users In Arizona","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE Reputation >= (SELECT Reputation FROM Users WHERE ID = 5285908) AND (UPPER(Location) LIKE '% AZ%' OR UPPER(Location) LIKE '% ARIZONA%') ORDER BY Reputation","CreationDate":"2019-03-27 05:42:16","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE   \n    Reputation >= (SELECT Reputation from Users where ID = 5285908)\n    AND (UPPER(Location) LIKE '% AZ%'\n    OR UPPER(Location) LIKE '% ARIZONA%')\nORDER BY\n    Reputation;"},{"QuerySetId":876449,"Title":"LIST ALL T-SQL DATETIME FORMATS (plus example of TRY..CATCH)","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(CURRENT_TIMESTAMP(), '%d %b %Y %H:%M:%S:%f') AS TEXT(30))","CreationDate":"2018-07-19 17:29:04","validated":false,"QueryBody_Original":"SELECT  convert(varchar,getdate(),113)"},{"QuerySetId":876663,"Title":"100 answers gets you to place ... in top answerers","Description":null,"QueryBody":"SELECT USERS.DisplayName AS DisplayName, COUNT(*) AS AmountOfAnswers, (ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) * 100.0) \/ 9776.0 AS Percentage FROM POSTS, USERS WHERE POSTS.OwnerUserId = USERS.Id AND POSTS.PostTypeId = 2 GROUP BY USERS.DisplayName ORDER BY 2 DESC","CreationDate":"2018-07-19 21:15:16","validated":false,"QueryBody_Original":"SELECT  USERS.DisplayName AS DisplayName, \n       COUNT(*) AS AmountOfAnswers,\n       (ROW_NUMBER() OVER (ORDER BY Count(*) DESC) * 100.0) \/ 9776.0 AS Percentage \n  FROM POSTS,\n       USERS\n WHERE POSTS.OwnerUserId = USERS.Id\n   AND POSTS.PostTypeId = 2\n GROUP BY USERS.DisplayName\n ORDER BY 2 DESC;"},{"QuerySetId":876760,"Title":"Ranking de usuarios en Per\u00fa","Description":null,"QueryBody":"SELECT t.RANK, t.\"USER\", t.Location, t.Reputation FROM (SELECT Id, ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"Rank\", DisplayName AS \"User\", \"Location\", \"Reputation\" FROM Users WHERE LOWER(Location) LIKE '%peru%') AS t WHERE t.Id = 78168","CreationDate":"2018-07-19 23:29:24","validated":false,"QueryBody_Original":"SELECT  t.RANK, t.[USER], t.Location, t.Reputation FROM\n(\n    SELECT \n        Id,\n        ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [Rank], \n        DisplayName AS [User], \n        [Location],\n        [Reputation]\n    FROM\n        Users\n    WHERE\n        LOWER(Location) LIKE '%peru%'\n)as t\nwhere t.Id=78168"},{"QuerySetId":876916,"Title":"Top 500 answerers on the site (by count)","Description":"A list of the top 500 users with the highest average answer score excluding\r\ncommunity wiki \/ closed posts or users with less than 10 answers\r\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY COUNT(Posts.Id) DESC) AS Rank, Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.id) > 10 ORDER BY Answers DESC LIMIT 500","CreationDate":"2018-07-20 08:35:48","validated":false,"QueryBody_Original":"SELECT  \n    TOP 500\n    Row_number() OVER (ORDER BY Count(Posts.Id) DESC) as Rank,\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Answers\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, DisplayName\nHAVING\nCount(Posts.id) > 10\nORDER BY\n    Answers DESC"},{"QuerySetId":877047,"Title":"Most Comments on Single Post","Description":null,"QueryBody":"SELECT DISTINCT (postid), COUNT(id) FROM comments GROUP BY postid ORDER BY COUNT(id) DESC","CreationDate":"2018-07-20 20:07:38","validated":false,"QueryBody_Original":"SELECT  distinct(postid), count(id)\nfrom comments\ngroup by postid\norder by count(id) desc;"},{"QuerySetId":877440,"Title":"find a revision id for all posts ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (PARTITION BY postid ORDER BY creationdate) AS revid, postid, revisionguid FROM (SELECT DISTINCT postid, revisionguid, creationdate FROM posthistory WHERE posthistorytypeid < 10) AS allrevs","CreationDate":"2018-07-21 22:08:23","validated":false,"QueryBody_Original":"SELECT  row_number() over(partition by postid order by creationdate) revid\n         , postid\n         , revisionguid\n    from (SELECT distinct postid\n               , revisionguid\n               , creationdate\n         from posthistory\n         where posthistorytypeid < 10\n     ) as allrevs"},{"QuerySetId":878215,"Title":"All posts tagged with javascript","Description":null,"QueryBody":"SELECT Posts.id, Posts.CreationDate, Posts.PostTypeId, Posts.Score, Posts.Body, Posts.Tags, Posts.AcceptedAnswerId, Posts.ParentId, Posts.CreationDate, Posts.DeletionDate, Posts.ViewCount, Posts.OwnerUserId, Posts.OwnerDisplayName, Posts.Title, Posts.AnswerCount, Posts.CommentCount, Posts.FavoriteCount, Posts.ClosedDate, Posts.CommunityOwnedDate FROM Posts WHERE Posts.Tags LIKE 'tensorflow' LIMIT 100","CreationDate":"2018-07-24 14:22:30","validated":false,"QueryBody_Original":"SELECT  TOP 100\nPosts.id, \nPosts.CreationDate,\nPosts.PostTypeId, \nPosts.Score, \nPosts.Body,\nPosts.Tags,\nPosts.AcceptedAnswerId,\nPosts.ParentId,\nPosts.CreationDate,\nPosts.DeletionDate,\nPosts.ViewCount,\nPosts.OwnerUserId,\nPosts.OwnerDisplayName,\nPosts.Title,\nPosts.AnswerCount,\nPosts.CommentCount,\nPosts.FavoriteCount,\nPosts.ClosedDate,\nPosts.CommunityOwnedDate\n\nFROM Posts\n\nWHERE \nPosts.Tags like 'tensorflow'"},{"QuerySetId":878219,"Title":"Carrera por Epico y Legendario","Description":null,"QueryBody":"SELECT Id AS \"User Link\", (SELECT COUNT(TotalRep) FROM (SELECT SUM(votes.BountyAmount) AS TotalRep, Votes.CreationDate AS CreationDate FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id WHERE Posts.OwnerUserId = U.Id AND Posts.CommunityOwnedDate IS NULL GROUP BY Votes.CreationDate) AS t WHERE TotalRep >= 200) AS D\u00edas FROM Users AS U WHERE U.Reputation >= 1000 ORDER BY 2 DESC","CreationDate":"2018-11-16 14:20:26","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], (\n    SELECT Count (TotalRep)\n      FROM (\n               SELECT \n               SUM(votes.BountyAmount) as TotalRep,\n                     Votes.CreationDate AS CreationDate\n              FROM   Posts\n                     INNER JOIN Votes\n                       ON Votes.PostId = Posts.Id\n                          \n              WHERE  Posts.OwnerUserId = U.Id\n                     AND Posts.CommunityOwnedDate IS NULL\n              GROUP  BY Votes.CreationDate\n      ) t\n      WHERE TotalRep>=200) as D\u00edas\nFROM Users U where U.Reputation >= 1000\nORDER BY 2 DESC"},{"QuerySetId":878518,"Title":"all tags related to Microsoft Office & related Questions","Description":null,"QueryBody":"SELECT t.tagname, t.\"count\", body FROM tags AS t LEFT OUTER JOIN posts AS p ON t.excerptpostid = p.id\/* or lower(body) like '%office%' *\/  WHERE LOWER(body) LIKE '%ms-word%' \/* tag wiki bodies *\/ OR LOWER(body) LIKE '%excel%' OR LOWER(body) LIKE '%powerpoint%' OR LOWER(body) LIKE '%outlook%' OR LOWER(body) LIKE '%ms access%' OR LOWER(body) LIKE '%microsoft access%' OR LOWER(body) LIKE '%vba%' OR tagname LIKE '%ms-word%' \/* tag names *\/ OR tagname LIKE '%excel%' OR tagname LIKE '%powerpoint%' OR tagname LIKE '%ms-access%' OR tagname LIKE '%outlook%' OR tagname LIKE '%office%' OR tagname LIKE '%vba>%' ORDER BY \"count\" DESC","CreationDate":"2018-07-25 20:47:33","validated":false,"QueryBody_Original":"SELECT  t.tagname, t.[count], body\nfrom tags t left outer join posts p on t.excerptpostid = p.id\nwhere \n     lower(body) like '%ms-word%'    --tag wiki bodies\n  or lower(body) like '%excel%'\n  or lower(body) like '%powerpoint%'\n  or lower(body) like '%outlook%'\n  or lower(body) like '%ms access%'\n  or lower(body) like '%microsoft access%'\n  --or lower(body) like '%office%'\n  or lower(body) like '%vba%'\n  \n  or tagname like '%ms-word%'  --tag names\n  or tagname like '%excel%'\n  or tagname like '%powerpoint%'\n  or tagname like '%ms-access%'\n  or tagname like '%outlook%'\n  or tagname like '%office%'\n  or tagname like '%vba>%' \norder by [count] desc"},{"QuerySetId":879000,"Title":"How many Active & Posting users in the last Year,Quarter,Month,Week,Day,Hour?","Description":"Includes number of users who accessed their account, and number of users who posted a Q or A.  Based on the 'end date' of the last time SEDE data was updated (approx. \"last Sunday\").","QueryBody":"SELECT (SELECT FORMAT(COUNT(DISTINCT owneruserid), '#,##0')) AS \"Active Users within the last year\" FROM posts WHERE creationdate >= DATEADD(d, -365, GETDATE())","CreationDate":"2018-07-25 07:24:08","validated":false,"QueryBody_Original":"SELECT  \n(SELECT format(count(distinct owneruserid),'#,##0')) as [Active Users within the last year]\nfrom posts \nwhere creationdate >= dateadd(d,-365, getdate())"},{"QuerySetId":879272,"Title":"Tags with excerpts but no wikis","Description":null,"QueryBody":"SELECT t.TagName, t.Count, ep.Body AS ExcerptBody, wp.Body AS WikiBody FROM Tags AS t LEFT JOIN Posts AS ep ON t.ExcerptPostId = ep.Id LEFT JOIN Posts AS wp ON t.WikiPostId = wp.Id ORDER BY t.Count DESC","CreationDate":"2018-08-26 11:30:53","validated":false,"QueryBody_Original":"SELECT \n  t.TagName\n  , t.Count\n  , ep.Body AS ExcerptBody\n  , wp.Body AS WikiBody\nFROM Tags t\nLEFT JOIN Posts ep ON t.ExcerptPostId = ep.Id\nLEFT JOIN Posts wp ON t.WikiPostId = wp.Id\nORDER BY t.Count DESC"},{"QuerySetId":879318,"Title":"Get a list of all of the tags ","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName LIKE '%oracle%' ORDER BY TagName","CreationDate":"2018-07-27 02:39:51","validated":false,"QueryBody_Original":"SELECT  * from Tags where TagName like '%oracle%'\norder by TagName"},{"QuerySetId":879389,"Title":"Find questions with \"script\" in title that aren't tagged \"scripts\"","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE PostTypeId = 1 AND Title LIKE '%script%' AND NOT Tags LIKE '%scripts%' ORDER BY CreationDate DESC","CreationDate":"2018-07-29 01:33:40","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link],Tags \nFROM Posts \nWHERE PostTypeId = 1 \n      AND Title LIKE '%script%' \n      AND Tags NOT LIKE '%scripts%' \nORDER BY CreationDate DESC;"},{"QuerySetId":879473,"Title":"SO Users in Pune ","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location FROM Users WHERE Location LIKE '%Pune%' ORDER BY Reputation DESC","CreationDate":"2018-09-08 11:06:41","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location\nfrom Users\nwhere Location like '%Pune%'\norder by Reputation desc"},{"QuerySetId":879815,"Title":"How Stack Overflow saves someone's life","Description":null,"QueryBody":"SELECT \"Text\" FROM Comments WHERE \"Text\" LIKE '%save my life%' LIMIT 1000","CreationDate":"2018-07-27 10:54:41","validated":false,"QueryBody_Original":"SELECT  TOP 1000 [Text]\nFROM Comments\nWHERE [Text] LIKE '%save my life%'"},{"QuerySetId":880079,"Title":"Filter in Tag and Title and Body2","Description":null,"QueryBody":"SELECT * FROM Posts AS p WHERE p.Tags LIKE '%##key0##%' AND p.Title LIKE '%##key1##%' AND p.Body LIKE '%##key2##%'","CreationDate":"2018-07-27 23:50:33","validated":false,"QueryBody_Original":"SELECT  * from Posts p\nwhere \np.Tags like '%##key0##%' and\np.Title like '%##key1##%' and\np.Body like '%##key2##%'"},{"QuerySetId":880259,"Title":"Questions counted by time to first answer (w\/o 24 hr restriction)","Description":null,"QueryBody":"SELECT LOG(DATEDIFF(a.CreationDate, q.CreationDate), 10) AS \"Log Time (m)\", LOG(COUNT(*), 10) FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id LEFT OUTER JOIN Posts AS a2 \/* earlier answer, should not exist *\/ ON a.ParentId = a2.ParentId AND a.CreationDate > a2.CreationDate\/*    AND DATEDIFF(HOUR, q.CreationDate, a.CreationDate) < 24 *\/  WHERE a2.Id IS NULL AND a.CreationDate >= q.CreationDate \/* negative values can happen due to question merges *\/ AND DATEDIFF(a.CreationDate, q.CreationDate) > 0 GROUP BY DATEDIFF(a.CreationDate, q.CreationDate) ORDER BY DATEDIFF(a.CreationDate, q.CreationDate)","CreationDate":"2018-07-28 14:42:32","validated":false,"QueryBody_Original":"SELECT  LOG(DATEDIFF(MINUTE, q.CreationDate, a.CreationDate), 10) AS 'Log Time (m)',\n  LOG(COUNT(*), 10)\n  FROM Posts AS q\n  INNER JOIN Posts AS a\n    ON a.ParentId = q.Id\n  LEFT OUTER JOIN Posts AS a2 -- earlier answer, should not exist\n    ON a.ParentId = a2.ParentId\n   AND a.CreationDate > a2.CreationDate\n  WHERE a2.Id IS NULL\n    AND a.CreationDate >= q.CreationDate -- negative values can happen due to question merges\n--    AND DATEDIFF(HOUR, q.CreationDate, a.CreationDate) < 24\n    AND DATEDIFF(MINUTE, q.CreationDate, a.CreationDate) > 0\n  GROUP BY DATEDIFF(MINUTE, q.CreationDate, a.CreationDate)\n  ORDER BY DATEDIFF(MINUTE, q.CreationDate, a.CreationDate)"},{"QuerySetId":880264,"Title":"Questions counted by time to first answer (w\/o 24 hr restriction, log\/log axis)","Description":null,"QueryBody":"SELECT LOG(DATEDIFF(a.CreationDate, q.CreationDate), 10) AS \"Log Time (m)\", LOG(COUNT(*), 10) FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id LEFT OUTER JOIN Posts AS a2 \/* earlier answer, should not exist *\/ ON a.ParentId = a2.ParentId AND a.CreationDate > a2.CreationDate WHERE a2.Id IS NULL AND a.CreationDate >= q.CreationDate \/* negative values can happen due to question merges *\/ AND DATEDIFF(a.CreationDate, q.CreationDate) > 24 AND DATEDIFF(a.CreationDate, q.CreationDate) > 0 GROUP BY DATEDIFF(a.CreationDate, q.CreationDate) ORDER BY DATEDIFF(a.CreationDate, q.CreationDate)","CreationDate":"2018-07-28 14:47:25","validated":false,"QueryBody_Original":"SELECT  LOG(DATEDIFF(MINUTE, q.CreationDate, a.CreationDate), 10) AS 'Log Time (m)',\n  LOG(COUNT(*), 10)\n  FROM Posts AS q\n  INNER JOIN Posts AS a\n    ON a.ParentId = q.Id\n  LEFT OUTER JOIN Posts AS a2 -- earlier answer, should not exist\n    ON a.ParentId = a2.ParentId\n   AND a.CreationDate > a2.CreationDate\n  WHERE a2.Id IS NULL\n    AND a.CreationDate >= q.CreationDate -- negative values can happen due to question merges\n    AND DATEDIFF(HOUR, q.CreationDate, a.CreationDate) > 24\n    AND DATEDIFF(MINUTE, q.CreationDate, a.CreationDate) > 0\n  GROUP BY DATEDIFF(MINUTE, q.CreationDate, a.CreationDate)\n  ORDER BY DATEDIFF(MINUTE, q.CreationDate, a.CreationDate)"},{"QuerySetId":880718,"Title":"Top 500 Indian Rank by Reputation","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%India%' ORDER BY reputation DESC LIMIT 5000000","CreationDate":"2018-07-30 10:59:26","validated":false,"QueryBody_Original":"SELECT  TOP 5000000\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%India%'\n   --OR Location like N'%Kozhi%'\n   --OR Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":880750,"Title":"Number of questions from low rep (<1000) users by day","Description":null,"QueryBody":"SELECT YEAR(p.CreationDate) AS Year, MONTH(p.CreationDate) AS Month, COUNT(*) AS Total FROM Users AS u INNER JOIN (SELECT * FROM Posts WHERE PostTypeId = 1) AS p ON p.OwnerUserId = u.Id WHERE u.Reputation < 1000 GROUP BY YEAR(p.CreationDate), MONTH(p.CreationDate) ORDER BY 1, 2","CreationDate":"2018-07-30 14:01:54","validated":false,"QueryBody_Original":"SELECT  year(p.CreationDate) as Year,\n       month(p.CreationDate) as Month,\n       count(*) as Total\nFROM Users u\nINNER JOIN (SELECT * FROM Posts WHERE PostTypeId = 1) p\nON p.OwnerUserId = u.Id\nWHERE \n      u.Reputation < 1000\nGROUP BY year(p.CreationDate), month(p.CreationDate)\norder by 1, 2"},{"QuerySetId":881377,"Title":"Ver coment\u00e1rios - Matheus Crivellari","Description":null,"QueryBody":"SELECT * FROM Posts WHERE OwnerUserId = 63440","CreationDate":"2018-07-31 22:19:28","validated":false,"QueryBody_Original":"SELECT  * from Posts where OwnerUserId = 63440"},{"QuerySetId":882086,"Title":"What % of CLOSED questions are later edited?","Description":"What % of Closed questions are later edited in an attempt to have them re-opened?","QueryBody":"SELECT YEAR(closeddate) AS ClosedYear, NUMBER_TO_STR(COUNT(*), '#,##0') AS \"#ClosedQuestions\", NUMBER_TO_STR(1.0 * SUM(Score) \/ COUNT(*), '0.0') AS \"Avg Score\", NUMBER_TO_STR(SUM(CASE WHEN NOT lasteditdate IS NULL THEN 1 ELSE 0 END), '#,##0') AS \"#Edited\", NUMBER_TO_STR(SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END), '#,##0') AS \"#Edited After Close\", NUMBER_TO_STR(1.0 * SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END) \/ COUNT(*), '0.0%') AS \"%Edit After Close\" FROM posts WHERE NOT closeddate IS NULL AND posttypeid = 1 GROUP BY YEAR(closeddate) ORDER BY YEAR(closeddate)","CreationDate":"2018-08-02 08:10:56","validated":false,"QueryBody_Original":"SELECT  \n  year(closeddate) as ClosedYear,\n  format(count(*),'#,##0') as [#ClosedQuestions],\n  format(1.0*sum(Score)\/count(*),'0.0') as [Avg Score],\n  format(sum(case when not lasteditdate is null then 1 else 0 end),'#,##0') as [#Edited],\n  format(sum(case when lasteditdate>closeddate then 1 else 0 end),'#,##0') as [#Edited After Close],\n  format(1.0*sum(case when lasteditdate>closeddate then 1 else 0 end) \/ count(*),'0.0%') as [%Edit After Close]\nfrom posts\nwhere closeddate is not null and posttypeid=1\ngroup by year(closeddate)\norder by year(closeddate)"},{"QuerySetId":882087,"Title":"% of questions edited after close (graph based on Date Closed)","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(closeddate) AS Closed, 1.0 * SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END) \/ COUNT(*) AS \"%Edit After Close\" FROM posts WHERE NOT closeddate IS NULL AND posttypeid = 1 GROUP BY LAST_DATE_OF_MONTH(closeddate) ORDER BY LAST_DATE_OF_MONTH(closeddate)","CreationDate":"2018-08-02 08:22:21","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(closeddate) as Closed,\n  1.0*sum(case when lasteditdate>closeddate then 1 else 0 end) \/ count(*) as [%Edit After Close]\nfrom posts\nwhere closeddate is not null and posttypeid=1\ngroup by eomonth(closeddate)\norder by eomonth(closeddate)"},{"QuerySetId":882088,"Title":"% of questions edited after close (graph based on Date Asked)","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(creationdate) AS Asked, 1.0 * SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END) \/ COUNT(*) AS \"%Edit After Close\" FROM posts WHERE NOT closeddate IS NULL AND posttypeid = 1 GROUP BY LAST_DATE_OF_MONTH(creationdate) ORDER BY LAST_DATE_OF_MONTH(creationdate)","CreationDate":"2018-08-02 11:21:32","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(creationdate) as Asked,\n  1.0*sum(case when lasteditdate>closeddate then 1 else 0 end) \/ count(*) as [%Edit After Close]\nfrom posts\nwhere closeddate is not null and posttypeid=1\ngroup by eomonth(creationdate)\norder by eomonth(creationdate)"},{"QuerySetId":882089,"Title":"scores & edited% for closed questions, based on Date Closed","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(closeddate) AS MonthClosed, NUMBER_TO_STR(COUNT(*), '#,##0') AS \"#ClosedQuestions\", NUMBER_TO_STR(1.0 * SUM(Score) \/ COUNT(*), '0.0') AS \"Avg Score\", NUMBER_TO_STR(SUM(CASE WHEN NOT lasteditdate IS NULL THEN 1 ELSE 0 END), '#,##0') AS \"#Edited\", NUMBER_TO_STR(SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END), '#,##0') AS \"#Edited After Close\", NUMBER_TO_STR(1.0 * SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END) \/ COUNT(*), '0.0%') AS \"%Edit After Close\" FROM posts WHERE NOT closeddate IS NULL AND posttypeid = 1 GROUP BY LAST_DATE_OF_MONTH(closeddate) ORDER BY LAST_DATE_OF_MONTH(closeddate)","CreationDate":"2018-08-02 08:28:45","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(closeddate) as MonthClosed,\n  format(count(*),'#,##0') as [#ClosedQuestions],\n  format(1.0*sum(Score)\/count(*),'0.0') as [Avg Score],\n  format(sum(case when not lasteditdate is null then 1 else 0 end),'#,##0') as [#Edited],\n  format(sum(case when lasteditdate>closeddate then 1 else 0 end),'#,##0') as [#Edited After Close],\n  format(1.0*sum(case when lasteditdate>closeddate then 1 else 0 end) \/ count(*),'0.0%') as [%Edit After Close]\nfrom posts\nwhere closeddate is not null and posttypeid=1\ngroup by eomonth(closeddate)\norder by eomonth(closeddate)"},{"QuerySetId":882092,"Title":"scores & edited% for closed questions, based on Date Asked","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(creationdate) AS MonthAsked, NUMBER_TO_STR(COUNT(*), '#,##0') AS \"#ClosedQuestions\", NUMBER_TO_STR(1.0 * SUM(Score) \/ COUNT(*), '0.0') AS \"Avg Score\", NUMBER_TO_STR(SUM(CASE WHEN NOT lasteditdate IS NULL THEN 1 ELSE 0 END), '#,##0') AS \"#Edited\", NUMBER_TO_STR(SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END), '#,##0') AS \"#Edited After Close\", NUMBER_TO_STR(1.0 * SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END) \/ COUNT(*), '0.0%') AS \"%Edit After Close\" FROM posts WHERE NOT closeddate IS NULL AND posttypeid = 1 GROUP BY LAST_DATE_OF_MONTH(creationdate) ORDER BY LAST_DATE_OF_MONTH(creationdate)","CreationDate":"2018-08-02 08:28:43","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(creationdate) as MonthAsked,\n  format(count(*),'#,##0') as [#ClosedQuestions],\n  format(1.0*sum(Score)\/count(*),'0.0') as [Avg Score],\n  format(sum(case when not lasteditdate is null then 1 else 0 end),'#,##0') as [#Edited],\n  format(sum(case when lasteditdate>closeddate then 1 else 0 end),'#,##0') as [#Edited After Close],\n  format(1.0*sum(case when lasteditdate>closeddate then 1 else 0 end) \/ count(*),'0.0%') as [%Edit After Close]\nfrom posts\nwhere closeddate is not null and posttypeid=1\ngroup by eomonth(creationdate)\norder by eomonth(creationdate)"},{"QuerySetId":882163,"Title":"Number of questions closed per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(closeddate) AS \"Month Closed\", COUNT(*) AS \"Count\" FROM posts WHERE NOT closeddate IS NULL GROUP BY LAST_DATE_OF_MONTH(closeddate) ORDER BY LAST_DATE_OF_MONTH(closeddate)","CreationDate":"2018-08-02 11:29:44","validated":false,"QueryBody_Original":"SELECT \n  eomonth(closeddate) as [Month Closed],\n  count(*) as [Count]\nfrom posts\nwhere not closeddate is null\ngroup by eomonth(closeddate)\norder by eomonth(closeddate)"},{"QuerySetId":882167,"Title":"Sum of all earned user reputation","Description":null,"QueryBody":"SELECT NUMBER_TO_STR(SUM(Reputation - 1), 'N0') AS \"All users' non-default reputation\" FROM Users WHERE Reputation > 1","CreationDate":"2018-08-02 13:02:43","validated":false,"QueryBody_Original":"SELECT  \nFORMAT (SUM (Reputation - 1), 'N0') AS [All users' non-default reputation]\n\nFROM Users\nWHERE Reputation > 1"},{"QuerySetId":882183,"Title":"What % of CLOSED questions are later edited? (Monthly)","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(closeddate) AS ClosedYear, NUMBER_TO_STR(COUNT(*), '#,##0') AS \"#ClosedQuestions\", NUMBER_TO_STR(1.0 * SUM(Score) \/ COUNT(*), '0.0') AS \"Avg Score\", NUMBER_TO_STR(SUM(CASE WHEN NOT lasteditdate IS NULL THEN 1 ELSE 0 END), '#,##0') AS \"#Edited\", NUMBER_TO_STR(SUM(CASE WHEN lasteditdate > closeddate AND LastEditorUserID <> -1 THEN 1 ELSE 0 END), '#,##0') AS \"#Edited After Close\", NUMBER_TO_STR(1.0 * SUM(CASE WHEN lasteditdate > closeddate AND LastEditorUserID <> -1 THEN 1 ELSE 0 END) \/ COUNT(*), '0.0%') AS \"%Edit After Close\" FROM posts WHERE NOT closeddate IS NULL AND posttypeid = 1 GROUP BY LAST_DATE_OF_MONTH(closeddate) ORDER BY LAST_DATE_OF_MONTH(closeddate)","CreationDate":"2018-08-04 15:02:01","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(closeddate) as ClosedYear,\n  format(count(*),'#,##0') as [#ClosedQuestions],\n  format(1.0*sum(Score)\/count(*),'0.0') as [Avg Score],\n  format(sum(case when not lasteditdate is null then 1 else 0 end),'#,##0') as [#Edited],\n  format(sum(case when lasteditdate>closeddate AND LastEditorUserID <> -1 then 1 else 0 end),'#,##0') as [#Edited After Close],\n  format(1.0*sum(case when lasteditdate>closeddate AND LastEditorUserID <> -1 then 1 else 0 end) \/ count(*),'0.0%') as [%Edit After Close]\nfrom posts\nwhere closeddate is not null and posttypeid=1\ngroup by eomonth(closeddate)\norder by eomonth(closeddate)"},{"QuerySetId":882332,"Title":"Top StackOverflow users in M\u00e1laga, Spain","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation FROM Users WHERE (UPPER(Location) LIKE '%MALAGA%' OR UPPER(Location) LIKE '%M\u00c1LAGA%') AND Reputation >= 300 ORDER BY Reputation DESC","CreationDate":"2018-08-02 17:28:33","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Location,\n    Reputation\nFROM\n    Users\nWHERE\n    (UPPER(Location) LIKE '%MALAGA%'\n    OR UPPER(Location) LIKE '%M\u00c1LAGA%')\n    AND Reputation >= 300\nORDER BY\n    Reputation DESC;"},{"QuerySetId":882418,"Title":"select top 20 * from posts","Description":null,"QueryBody":"SELECT Title + ' ,' + Body AS \"TB\", CAST(AnswerCount AS TEXT) + ' - ' + CAST(FavoriteCount AS TEXT) AS \"AL\", ViewCount AS \"VC\" FROM posts WHERE AnswerCount BETWEEN 0 AND 2000 LIMIT 20","CreationDate":"2018-08-02 22:31:32","validated":false,"QueryBody_Original":"SELECT  TOP 20  Title + ' ,' + Body AS 'TB', \n               CAST(AnswerCount AS VARCHAR) + ' - ' + CAST(FavoriteCount AS VARCHAR) AS 'AL', \n               ViewCount AS 'VC'\nFROM posts \nWHERE AnswerCount BETWEEN 0 and 2000"},{"QuerySetId":882795,"Title":"get all posts from July 2018","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate >= '2018-07-01' AND CreationDate <= '2018-07-31'","CreationDate":"2018-08-03 23:25:43","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE CreationDate >= '2018-07-01' AND CreationDate <= '2018-07-31'"},{"QuerySetId":882802,"Title":"Answer and close rate by year","Description":null,"QueryBody":"SELECT YEAR(p.CreationDate) AS year, AVG(p.AnswerCount * 1.0) AS answers_per_question, SUM(CASE WHEN ClosedDate IS NULL THEN 0.0 ELSE 100.0 END) \/ COUNT(*) AS close_rate FROM Posts AS p WHERE PostTypeId = 1 AND Id % 100 = 0 GROUP BY YEAR(p.CreationDate) ORDER BY YEAR(p.CreationDate)","CreationDate":"2018-09-14 10:28:56","validated":false,"QueryBody_Original":"SELECT  year(p.CreationDate) year,\n       avg(p.AnswerCount*1.0) answers_per_question,\n       sum(iif(ClosedDate is null, 0.0, 100.0))\/count(*) close_rate\nfrom Posts p\nwhere PostTypeId = 1\n      and Id % 100 = 0\ngroup by year(p.CreationDate)\norder by year(p.CreationDate)"},{"QuerySetId":882807,"Title":"List all comments by Community","Description":null,"QueryBody":"SELECT PostId, Text FROM Comments","CreationDate":"2019-04-28 00:08:59","validated":false,"QueryBody_Original":"SELECT  PostId, Text \nfrom Comments"},{"QuerySetId":883010,"Title":"All my answers with scores and titles","Description":null,"QueryBody":"SELECT q.Id AS \"Post Id\", a.Score, q.Title, q.ViewCount FROM Posts AS q JOIN posts AS a ON q.Id = a.ParentId AND (a.PostTypeId = 2) AND (a.OwnerUserId = 784387) AND a.CreationDate >= '2018-02-01' ORDER BY a.CreationDate","CreationDate":"2019-03-31 22:16:13","validated":false,"QueryBody_Original":"SELECT  q.Id AS [Post Id], a.Score, q.Title, q.ViewCount\nFROM Posts q JOIN posts a ON q.Id=a.ParentId AND (a.PostTypeId=2)\nand (a.OwnerUserId = 784387)\nand a.CreationDate >= '2018-02-01'\nORDER BY a.CreationDate asc"},{"QuerySetId":883015,"Title":"Short\/thank you comments on ru\/pt SO","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\" FROM Comments AS c \/* \u043d\u0435 \u0437\u0430 \u0447\u0442\u043e *\/ \/* \u0412\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430 *\/ \/* where c.Text like N'%\u043f\u0440\u0438\u043d\u044f\u0442\u044b\u043c%' and len(c.Text) < 20 *\/ \/* where c.Text like N'%\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430%' and len(c.Text) < 20 *\/ \/* where c.Text like N'%\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044e%' and len(c.Text) < 20 *\/ \/* where c.Text like N'%\u043e\u043b\u044c\u0448\u043e\u0435%' and len(c.Text) < 24 *\/ \/* where c.Text like N'%\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u043e\u0442\u0432\u0435\u0442%' and len(c.Text) < 20 *\/ \/* where c.Text like '%brigad%' and len(c.Text) < 20 *\/ \/* \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044e *\/ WHERE c.Text LIKE '%racias%' AND LENGTH(c.Text) < 20 ORDER BY c.CreationDate LIMIT 1000","CreationDate":"2020-03-27 05:23:48","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n c.Id as [Comment Link]\nfrom Comments c\n-- \u043d\u0435 \u0437\u0430 \u0447\u0442\u043e\n-- \u0412\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430\n--where c.Text like N'%\u043f\u0440\u0438\u043d\u044f\u0442\u044b\u043c%' and len(c.Text) < 20\n--where c.Text like N'%\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430%' and len(c.Text) < 20\n--where c.Text like N'%\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044e%' and len(c.Text) < 20\n--where c.Text like N'%\u043e\u043b\u044c\u0448\u043e\u0435%' and len(c.Text) < 24\n--where c.Text like N'%\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u043e\u0442\u0432\u0435\u0442%' and len(c.Text) < 20\n--where c.Text like '%brigad%' and len(c.Text) < 20\n--\u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044e\nwhere c.Text like '%racias%' and len(c.Text) < 20\norder by c.CreationDate asc;"},{"QuerySetId":883235,"Title":"Protected questions by their number of deleted answers","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", CreationDate FROM PostHistory WHERE PostHistoryTypeId = 19 \/* Question Protected *\/ ORDER BY CreationDate DESC","CreationDate":"2018-08-05 20:00:49","validated":false,"QueryBody_Original":"SELECT \n  PostId AS [Post Link],\n  CreationDate\nFROM PostHistory\nWHERE PostHistoryTypeId = 19 --Question Protected\nORDER BY CreationDate DESC"},{"QuerySetId":883440,"Title":"Average score for questions (of any status except community) from postswithdeleted ","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"Year\", (1.0 * SUM(score)) \/ (1.0 * SUM(score)) AS \"AvgScore\", COUNT(*) AS \"#\" FROM posts\/* answers only *\/ \/* and closeddate is null *\/ \/* and deletiondate is null *\/  WHERE YEAR(creationdate) >= 2009 AND communityowneddate IS NULL AND posttypeid IN (1) GROUP BY YEAR(creationdate) ORDER BY YEAR(creationdate)","CreationDate":"2018-08-06 12:35:56","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as [Year],\n  (1.0*sum(score))\/(1.0*sum(score)) as [AvgScore],\n  count(*) as [#]\n  \nfrom\n  posts\n\nwhere\n  year(creationdate)>=2009\n  --and closeddate is null\n  --and deletiondate is null\n  and communityowneddate is null \n  and posttypeid in (1)   --answers only\n\ngroup by\n  year(creationdate)\n\norder by \n year(creationdate)"},{"QuerySetId":883605,"Title":"Top 200 users from Netherlands","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%netherlands%' OR UPPER(Location) LIKE '%NETHERL' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2018-08-06 18:45:14","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%netherlands%'\n    OR UPPER(Location) LIKE '%NETHERL'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":883643,"Title":"Number of questions per months","Description":null,"QueryBody":"SELECT number = ROW_NUMBER() OVER (ORDER BY STR(YEAR(CreationDate)) + '-' + STR(MONTH(CreationDate))), COUNT(Posts.Id) AS Total FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY STR(YEAR(CreationDate)) + '-' + STR(MONTH(CreationDate)) ORDER BY STR(YEAR(CreationDate)) + '-' + STR(MONTH(CreationDate))","CreationDate":"2018-08-06 19:56:19","validated":false,"QueryBody_Original":"SELECT \n  number = ROW_NUMBER() OVER (ORDER BY STR(Year(CreationDate))+'-'+STR(Month(CreationDate))),\n  COUNT(Posts.Id) as Total\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY STR(Year(CreationDate))+'-'+STR(Month(CreationDate))\nORDER BY STR(Year(CreationDate))+'-'+STR(Month(CreationDate)) ASC"},{"QuerySetId":883926,"Title":"number of questions on stackoverflow","Description":null,"QueryBody":"SELECT COUNT(*) AS count FROM posts WHERE postTypeId = 1","CreationDate":"2018-08-07 16:00:06","validated":false,"QueryBody_Original":"SELECT  count(*) as count \nfrom posts \nwhere postTypeId = 1"},{"QuerySetId":884028,"Title":"SELECT * From Badges LEFT JOIN Users on Badges.Id = Users.Id","Description":null,"QueryBody":"SELECT Id, TagName FROM TAGS LIMIT 90","CreationDate":"2018-08-07 23:30:44","validated":false,"QueryBody_Original":"SELECT  TOP 90 Id, TagName FROM TAGS"},{"QuerySetId":884129,"Title":"most reputation user from sri lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%sri lanka%' ORDER BY Reputation DESC","CreationDate":"2018-08-07 22:38:10","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%sri lanka%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":884130,"Title":"Most reputation user from sri lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%sri lanka%' ORDER BY Reputation DESC","CreationDate":"2018-08-07 22:40:16","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%sri lanka%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":884202,"Title":"Posts tagged with AWS, Azure or Google Cloud platforms","Description":null,"QueryBody":"SELECT Title FROM Posts, Tags WHERE Tags.TagName LIKE '%microsoft-cognitive'","CreationDate":"2018-08-08 02:20:25","validated":false,"QueryBody_Original":"SELECT  Title\nFROM Posts, Tags\nWHERE Tags.TagName LIKE '%microsoft-cognitive'"},{"QuerySetId":884319,"Title":"Questions posted per hour, monthly for the last year","Description":null,"QueryBody":"SELECT FORMAT(EOMONTH(creationdate), 'yyyy-MM') AS \"Month\", COUNT(*) AS \"#Questions\", ROUND((1.0 * COUNT(*)) \/ DAY(EOMONTH(creationdate)) \/ 24, 3) AS \"Questions per Hour\" FROM posts WHERE posttypeid = 1 AND creationdate >= DATEADD(d, -365, GETDATE()) AND creationdate < DATEADD(d, 1, EOMONTH(DATEADD(d, -28, GETDATE()))) GROUP BY FORMAT(EOMONTH(creationdate), 'yyyy-MM'), EOMONTH(creationdate) ORDER BY FORMAT(EOMONTH(creationdate), 'yyyy-MM')","CreationDate":"2018-08-08 13:21:12","validated":false,"QueryBody_Original":"SELECT   \n  format(eomonth(creationdate),'yyyy-MM') as [Month], \n  count(*) as [#Questions],\n  round((1.0*count(*))\/day(eomonth(creationdate))\/24,3) as [Questions per Hour]\nfrom posts\nwhere posttypeid=1 \n  and creationdate >= dateadd(d,-365,getdate()) \n  and creationdate < dateadd(d,1,eomonth(dateadd(d,-28,getdate())))\ngroup by format(eomonth(creationdate),'yyyy-MM'), eomonth(creationdate)\norder by format(eomonth(creationdate),'yyyy-MM')"},{"QuerySetId":884326,"Title":"Comments from one user under answer from another user","Description":null,"QueryBody":"SELECT CONCAT('https:\/\/stats.meta.stackexchange.com\/questions\/', Posts.ParentId, '\/', MyComments.PostId, '#comment', MyComments.Id, '_', MyComments.PostId) AS Link, MyComments.*, Posts.ParentId FROM (SELECT * FROM Comments WHERE UserId = '805') AS MyComments, Posts AS Posts WHERE Posts.Id = MyComments.PostId AND Posts.OwnerUserId = '58675' AND Posts.PostTypeId = 1","CreationDate":"2018-08-08 12:54:19","validated":false,"QueryBody_Original":"SELECT  CONCAT('https:\/\/stats.meta.stackexchange.com\/questions\/', Posts.ParentId, '\/', MyComments.PostId, '#comment', MyComments.Id, '_', MyComments.PostId) AS Link,\n       MyComments.*, \n       Posts.ParentId \n  FROM (\n    SELECT * \n      FROM Comments\n     WHERE UserId = '805') AS MyComments, \n     Posts AS Posts\n   WHERE Posts.Id = MyComments.PostId\n     AND Posts.OwnerUserId = '58675'\n     AND Posts.PostTypeId = 1;"},{"QuerySetId":884328,"Title":" Comments from one user under question from another user","Description":null,"QueryBody":"SELECT CONCAT('https:\/\/stats.meta.stackexchange.com\/questions\/', Posts.ParentId, '\/', MyComments.PostId, '#comment', MyComments.Id, '_', MyComments.PostId) AS Link, MyComments.*, Posts.ParentId FROM (SELECT * FROM Comments WHERE UserId = '805') AS MyComments, Posts AS Posts WHERE Posts.Id = MyComments.PostId AND Posts.OwnerUserId = '58675' AND Posts.PostTypeId = 1","CreationDate":"2018-08-08 12:55:10","validated":false,"QueryBody_Original":"SELECT  CONCAT('https:\/\/stats.meta.stackexchange.com\/questions\/', Posts.ParentId, '\/', MyComments.PostId, '#comment', MyComments.Id, '_', MyComments.PostId) AS Link,\n       MyComments.*, \n       Posts.ParentId \n  FROM (\n    SELECT * \n      FROM Comments\n     WHERE UserId = '805') AS MyComments, \n     Posts AS Posts\n   WHERE Posts.Id = MyComments.PostId\n     AND Posts.OwnerUserId = '58675'\n     AND Posts.PostTypeId = 1;"},{"QuerySetId":884564,"Title":"User Rentention: Year-over-Year User Activity based on Join Date [sql pivot query]","Description":"Looks at only\/all Posts including deleted to determine annual activity.  (Click TAB#2 for detail.)\r\n\r\nUser Retention: How many years have users kept coming back after the year they joined?   \r\n\r\nAlso demonstrates multiple T-SQL Dynamic Crosstab\/Pivot Table techniques (aka SQL Cross-tab query example)\r\n\r\nRelated: Query# 884709","QueryBody":"SELECT DISTINCT YEAR(creationdate) AS \"Year\", owneruserid FROM posts WHERE creationdate >= DATEADD(year, -1, GETDATE()) AND owneruserid > 0 ORDER BY YEAR(creationdate), owneruserid","CreationDate":"2018-08-08 20:26:52","validated":false,"QueryBody_Original":"SELECT  distinct\n  year(creationdate) as [Year],\n  owneruserid\nfrom posts\nwhere creationdate>=dateadd(year,-1,getdate()) and owneruserid >0\norder by year(creationdate), owneruserid"},{"QuerySetId":884723,"Title":"Search post based on tag and keyword with answers","Description":"Limited the results to the posts with check answer","QueryBody":"SELECT p.id AS \"Post Link\", p.Id, p.Title, p.CommentCount, p.Body, c.Text, p.viewcount, a.score FROM Posts AS p LEFT JOIN Comments AS c ON p.Id = c.PostId INNER JOIN posts AS a ON a.parentid = p.id WHERE p.posttypeid = 1 OR p.posttypeid = 2 AND p.tags = '%##tagname##%' AND p.Title LIKE '%##keyword##%' ORDER BY viewcount DESC","CreationDate":"2018-08-09 05:53:36","validated":false,"QueryBody_Original":"SELECT  \np.id as [Post Link],\np.Id,p.Title,p.CommentCount,p.Body,c.Text,\np.viewcount,\na.score\nfrom Posts p left join Comments c\n  on p.Id = c.PostId \ninner join posts a \n  on a.parentid = p.id\nwhere p.posttypeid = 1 or p.posttypeid = 2\n  and p.tags = '%##tagname##%'\n  and p.Title like '%##keyword##%'\norder by viewcount desc"},{"QuerySetId":885035,"Title":"Find users by location only","Description":null,"QueryBody":"SELECT * FROM Users WHERE UPPER(Location) = UPPER('##Location##')","CreationDate":"2018-08-09 20:20:38","validated":false,"QueryBody_Original":"SELECT  * From Users\nWhere Upper(Location)=Upper('##Location##')"},{"QuerySetId":885529,"Title":"Top SO users in Turkey","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe \/* * *\/ FROM Users WHERE (LOWER(Location) LIKE '%turke%' OR LOWER(Location) LIKE '%t\u00fcrki%' OR UPPER(Location) LIKE '%Turke%' OR UPPER(Location) LIKE '%T\u00fcrki%') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-08-10 18:34:43","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS Rank, \n    Reputation,\n    CreationDate,\n    DisplayName,\n    LastAccessDate,\n    WebsiteUrl,\n    Location,\n    AboutMe\n    --*\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%turke%' OR\n     LOWER(Location) LIKE '%t\u00fcrki%' OR\n     UPPER(Location) LIKE '%Turke%' OR \n     UPPER(Location) LIKE '%T\u00fcrki%'\n    )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":885607,"Title":"Question Views by Hour (last 2 years)","Description":null,"QueryBody":"SELECT DATEPART(hour, CreationDate) AS Hour, AVG(CAST(ViewCount AS FLOAT)) AS \"Average Views\" FROM Posts WHERE PostTypeId = 1 AND CreationDate > DATEADD(year, -2, GETUTCDATE()) GROUP BY DATEPART(hour, CreationDate) ORDER BY Hour","CreationDate":"2018-08-10 23:46:07","validated":false,"QueryBody_Original":"SELECT  DATEPART(hour, CreationDate) as Hour, AVG(CAST(ViewCount AS FLOAT)) as [Average Views]\nFROM Posts\nWHERE PostTypeId = 1\nAND CreationDate > DATEADD(year, -2, GetUtcDate())\nGROUP BY DATEPART(hour, CreationDate)\nORDER BY Hour"},{"QuerySetId":885654,"Title":"Top 100 users from Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR UPPER(Location) LIKE '%bd' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-08-11 06:24:45","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR UPPER(Location) LIKE '%bd'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":885704,"Title":"Questions with low score and high viewcounts","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.CreationDate, Posts.Score, Posts.ViewCount, PostHistory.CreationDate AS \"ProtectedDate\" FROM Posts LEFT JOIN PostHistory ON Posts.Id = PostHistory.PostId AND PostHistory.PostHistoryTypeId = 19 \/* Question Protected *\/ WHERE Posts.Score <= 2 ORDER BY Posts.ViewCount DESC LIMIT 100","CreationDate":"2018-08-11 15:39:52","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Posts.Id AS [Post Link],\n  Posts.CreationDate,\n  Posts.Score,\n  Posts.ViewCount,\n  PostHistory.CreationDate AS 'ProtectedDate'\nFROM Posts\nLEFT JOIN PostHistory ON Posts.Id = PostHistory.PostId\n                     AND PostHistory.PostHistoryTypeId = 19 -- Question Protected\nWHERE Posts.Score <= 2\nORDER BY Posts.ViewCount DESC"},{"QuerySetId":885872,"Title":"search for (possible) cat abuse","Description":null,"QueryBody":"SELECT Id, Title FROM Posts WHERE Body LIKE '%grep%'","CreationDate":"2018-08-12 13:29:12","validated":false,"QueryBody_Original":"SELECT  Id, Title\nfrom Posts\nwhere Body like '%grep%';"},{"QuerySetId":886121,"Title":"Year wise total number of posts","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate BETWEEN '2015-12-01 00:00:01' AND '2015-12-31 11:59:59'","CreationDate":"2018-11-06 21:18:42","validated":false,"QueryBody_Original":"SELECT  * from Posts\nwhere CreationDate between '2015-12-01 00:00:01' and '2015-12-31 11:59:59'"},{"QuerySetId":886264,"Title":"What percentage of posts have a Score of Zero?","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"Year\", NUMBER_TO_STR(COUNT(id), '#,#30') AS \"All Posts\", NUMBER_TO_STR(SUM(CASE WHEN score = 0 THEN 1 ELSE 0 END), '#,#30') AS \"#Posts scored zero\", NUMBER_TO_STR(1.0 * SUM(CASE WHEN score = 0 THEN 1 ELSE 0 END) \/ COUNT(id), '0%') AS \"% scored zero\", NUMBER_TO_STR(SUM(CASE WHEN score IN (-1, 0, 1) THEN 1 ELSE 0 END), '#,#30') AS \"#Posts scoring -1 to +1\", NUMBER_TO_STR(1.0 * SUM(CASE WHEN score IN (-1, 0, 1) THEN 1 ELSE 0 END) \/ COUNT(id), '0%') AS \"% scored -1 to +1\" FROM posts WHERE posttypeid IN (1, 2) AND closeddate IS NULL GROUP BY YEAR(creationdate) ORDER BY YEAR(creationdate) DESC","CreationDate":"2018-08-13 18:24:24","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as [Year],\n  format(count(id),'#,#30') as [All Posts],\n  format(sum(case when score=0 then 1 else 0 end ),'#,#30') as [#Posts scored zero],\n  format(1.0*sum(case when score=0 then 1 else 0 end ) \/ count(id),'0%') as [% scored zero],\n  format(sum(case when score in (-1,0,1) then 1 else 0 end ),'#,#30') as [#Posts scoring -1 to +1],\n  format(1.0*sum(case when score in (-1,0,1) then 1 else 0 end ) \/ count(id),'0%') as [% scored -1 to +1]\nfrom posts \nwhere \n  posttypeid in (1,2) \n  and closeddate is null\ngroup by year(creationdate)\norder by year(creationdate) desc\n\n--201,126 all posts\n--and score = 0  = 120706 (Q=59433 A=61273)\n--and not (score between -3 and 3) = 5483 posts  (Q=2834 A=2649)"},{"QuerySetId":886268,"Title":"Compare last year to 5 years ago: # of posts Grouped By Score","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"Year\", CASE WHEN ABS(score) < 5 THEN score ELSE ROUND(score \/ 5, 0) END AS \"Scores\", NUMBER_TO_STR(COUNT(id), '#,##0') AS \"All Posts\" FROM posts WHERE posttypeid IN (1, 2) AND closeddate IS NULL AND YEAR(creationdate) IN (YEAR(CURRENT_TIMESTAMP()) - 6, YEAR(CURRENT_TIMESTAMP()) - 1) GROUP BY YEAR(creationdate), CASE WHEN ABS(score) < 5 THEN score ELSE ROUND(score \/ 5, 0) END \/* score *\/ \/* score *\/ \/* score *\/ \/* score *\/ HAVING COUNT(id) > 1 ORDER BY YEAR(creationdate) DESC, CASE WHEN ABS(score) < 5 THEN score ELSE ROUND(score \/ 5, 0) END \/* score desc *\/","CreationDate":"2018-08-13 18:51:24","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as [Year],\n  case when abs(score)<5 then score else round(score\/5,0) end as [Scores],\n  format(count(id),'#,##0') as [All Posts]\nfrom posts \nwhere \n  posttypeid in (1,2) \n  and closeddate is null\n  and year(creationdate) in (year(getdate())-6,year(getdate())-1)\ngroup by year(creationdate), case when abs(score)<5 then score else round(score\/5,0) end --score \nhaving count(id)>1\norder by year(creationdate) desc, case when abs(score)<5 then score else round(score\/5,0) end --score desc"},{"QuerySetId":886428,"Title":"AI Posts with user locations ","Description":null,"QueryBody":"SELECT Posts.*, Users.Location, Users.AboutMe, Users.WebsiteURL FROM Posts INNER JOIN Users ON Posts.Tags LIKE '%neural%' AND Posts.OwnerUserId = Users.Id","CreationDate":"2018-08-14 01:22:56","validated":false,"QueryBody_Original":"SELECT  Posts.*, Users.Location, Users.AboutMe, Users.WebsiteURL FROM Posts\nINNER JOIN Users ON Posts.Tags LIKE '%neural%' AND Posts.OwnerUserId = Users.Id;"},{"QuerySetId":886489,"Title":"[Magic Link] usage in comments by users","Description":"last 30 days (or as specified), sorted by # of magic links used.   \r\n\r\nFull list: https:\/\/meta.stackexchange.com\/a\/242306\/370758","QueryBody":"SELECT userid, SUM(CASE WHEN text LIKE '%[help\/on-topic]%' THEN 1 ELSE 0 END) AS \"[help\/on-topic]\" FROM comments WHERE NOT userid IS NULL AND (text LIKE '%[help\/on-topic]%') GROUP BY userid ORDER BY COUNT(*) DESC","CreationDate":"2018-08-14 06:58:51","validated":false,"QueryBody_Original":"SELECT \nuserid,\nsum(case when text like '%[help\/on-topic]%' then 1 else 0 end) as \"[help\/on-topic]\"\nfrom comments\nwhere userid is not null and\n  ( text like '%[help\/on-topic]%' )\ngroup by userid\norder by count(*) desc"},{"QuerySetId":886756,"Title":"Example-based Answers in Probability-related Questions","Description":null,"QueryBody":"SELECT t1.ParentId, t1.Id, t1.ParentId AS \"Post Link\" FROM posts AS t1 INNER JOIN posts AS t2 ON t2.AcceptedAnswerId = t1.Id WHERE t1.PostTypeId = 2 AND LENGTH(t1.Body) < 500 AND LENGTH(t2.Body) < 500 AND t1.Score > 0 AND t2.Score > 0 AND (t1.Body LIKE '%xample%') AND (NOT t1.Body LIKE '%your example%') AND (t2.Tags LIKE '%probability%') AND (NOT t2.Tags LIKE '%reference-request%') AND (NOT t2.Tags LIKE '%book-recommendation%')","CreationDate":"2018-08-14 20:28:16","validated":false,"QueryBody_Original":"SELECT  t1.ParentId, t1.Id, t1.ParentId as [Post Link]\n  FROM posts as t1\n  INNER JOIN posts as t2 ON t2.AcceptedAnswerId = t1.Id\n  where t1.PostTypeId = 2 \n        and len(t1.Body) < 500 \n        and len(t2.Body) < 500 \n        and t1.Score > 0\n        and t2.Score > 0\n        and (t1.Body like '%xample%') \n        and (t1.Body not like '%your example%') \n        and (t2.Tags like '%probability%')\n        and (t2.Tags not like '%reference-request%')\n        and (t2.Tags not like '%book-recommendation%')"},{"QuerySetId":887008,"Title":"Percentage of users who earned the Informed badge (read FAQ\/Tour) within 30 days of joining the site","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, u.CreationDate), 0) AS mo, COUNT(b.Id) * 100.0 \/ COUNT(u.Id) AS PctInformed FROM Users AS u LEFT JOIN Badges AS b ON b.UserId = u.Id AND b.Name = 'Informed' AND b.Date < u.CreationDate + 30 WHERE DATEADD(month, DATEDIFF(month, 0, u.CreationDate), 0) > DATEADD(month, DATEDIFF(month, 0, GETDATE() - 1460), 0) AND DATEADD(month, DATEDIFF(month, 0, u.CreationDate), 0) < DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) GROUP BY DATEADD(month, DATEDIFF(month, 0, u.CreationDate), 0) ORDER BY DATEADD(month, DATEDIFF(month, 0, u.CreationDate), 0)","CreationDate":"2018-08-15 02:36:30","validated":false,"QueryBody_Original":"SELECT  dateadd(month, datediff(month, 0, u.CreationDate), 0) mo, count(b.Id)*100.0\/count(u.Id) PctInformed\nfrom Users u\nleft join Badges b on b.UserId=u.Id \n  and b.Name='Informed'\n  and b.Date < u.CreationDate+30\nwhere dateadd(month, datediff(month, 0, u.CreationDate), 0) > dateadd(month, datediff(month, 0, getdate()-1460), 0)\nand dateadd(month, datediff(month, 0, u.CreationDate), 0) < dateadd(month, datediff(month, 0, getdate()), 0)\ngroup by dateadd(month, datediff(month, 0, u.CreationDate), 0)\norder by dateadd(month, datediff(month, 0, u.CreationDate), 0)"},{"QuerySetId":887400,"Title":"Tags that shouldn't be used","Description":null,"QueryBody":"SELECT t.TagName, p.Body AS Excerpt, DATEDIFF(CURRENT_TIMESTAMP(), p.LastEditDate) AS DaysNotEdited FROM Tags AS t INNER JOIN Posts AS p ON t.ExcerptPostId = p.Id WHERE p.Body LIKE 'DO NOT USE%' COLLATE Latin1_General_CI_AI ORDER BY p.LastEditDate","CreationDate":"2018-08-16 15:04:54","validated":false,"QueryBody_Original":"SELECT  t.TagName, p.Body As Excerpt, DateDiff(d, p.LastEditDate, GETDATE()) As DaysNotEdited\nFROM Tags t\nINNER JOIN Posts p\nON t.ExcerptPostId = p.Id\nWHERE p.Body Like 'DO NOT USE%' COLLATE Latin1_General_CI_AI\nORDER BY p.LastEditDate ASC"},{"QuerySetId":888309,"Title":"Top SO Users from New Zealand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(AboutMe) LIKE '%data engineer%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-08-19 05:37:53","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(AboutMe) LIKE '%data engineer%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":888837,"Title":"Posts that contain URLs that are being decommissioned by Salesforce","Description":null,"QueryBody":"SELECT Id, Body FROM Posts WHERE Body LIKE '%developer.salesforce.com\/page\/An_Introduction_to_Force_IDE%'","CreationDate":"2018-12-18 20:26:39","validated":false,"QueryBody_Original":"SELECT  Id, Body FROM Posts WHERE Body LIKE '%developer.salesforce.com\/page\/An_Introduction_to_Force_IDE%'"},{"QuerySetId":888969,"Title":"SELECT Id, Body FROM Posts WHERE Body LIKE '%ktema.org%'","Description":null,"QueryBody":"SELECT Id, Body FROM Posts WHERE Body LIKE '%David%Reed%'","CreationDate":"2018-08-21 06:56:37","validated":false,"QueryBody_Original":"SELECT  Id, Body FROM Posts WHERE Body LIKE '%David%Reed%'"},{"QuerySetId":889031,"Title":"vba q's share over time","Description":"questions tagged with a VBA tag as a percentage of all questions, per month","QueryBody":"SELECT LAST_DATE_OF_MONTH(creationdate) AS \"Month\", 1.0 \/* count(*) as [All Questions], *\/ \/* sum(case when tags like '%vba>%' then 1 else 0 end ) as [VBA Questions], *\/ * SUM(CASE WHEN tags LIKE '%vba>%' THEN 1 ELSE 0 END) \/ COUNT(*) AS \"VBA Questions%\" FROM posts WHERE posttypeid = 1 AND creationdate BETWEEN '2008-09-01' AND DATEFROMPARTS(YEAR(CURRENT_TIMESTAMP()), MONTH(CURRENT_TIMESTAMP()), 1) GROUP BY LAST_DATE_OF_MONTH(creationdate) ORDER BY LAST_DATE_OF_MONTH(creationdate)","CreationDate":"2018-08-21 13:57:07","validated":false,"QueryBody_Original":"SELECT \n  eomonth(creationdate) as [Month],\n  --count(*) as [All Questions],\n  --sum(case when tags like '%vba>%' then 1 else 0 end ) as [VBA Questions],\n  1.0*sum(case when tags like '%vba>%' then 1 else 0 end ) \/ count(*) as [VBA Questions%]\nfrom posts\nwhere\n  posttypeid=1\n  and creationdate between '2008-09-01' and datefromparts(year(getdate()),month(getdate()),1)\ngroup by eomonth(creationdate)\norder by eomonth(creationdate)"},{"QuerySetId":889035,"Title":"vba questions daily, 60 days","Description":null,"QueryBody":"SELECT DATEPART(ww, creationdate) AS \"week\", COUNT(*) AS \"VBA Questions\" FROM posts WHERE tags LIKE '%vba>%' AND posttypeid = 1 AND creationdate >= DATEADD(d, -60, GETDATE()) AND DATEPART(ww, creationdate) < DATEPART(ww, GETDATE()) - 1 GROUP BY DATEPART(ww, creationdate) ORDER BY DATEPART(ww, creationdate) \/* cast(creationdate as date) *\/ \/* cast(creationdate as date) *\/ \/* cast(creationdate as date) *\/ \/* cast(creationdate as date) *\/","CreationDate":"2018-08-21 14:04:05","validated":false,"QueryBody_Original":"SELECT \n  datepart(ww, creationdate) as [week],\n  --cast(creationdate as date) as [Date],\n  count(*) as [VBA Questions]\nfrom posts\nwhere \n  tags like '%vba>%' \n  and posttypeid=1\n  and creationdate >= dateadd(d,-60,getdate())\n  and datepart(ww, creationdate) < datepart(ww, getdate())-1\ngroup by --cast(creationdate as date) ,\ndatepart(ww, creationdate)\norder by datepart(ww, creationdate) --cast(creationdate as date)"},{"QuerySetId":889404,"Title":"List of bounties offered in a given period","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score AS \"Score\", p.AnswerCount AS \"Answers\", bs.BountyAmount AS \"Amount\", CAST(TIME_TO_STR(bs.CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(10)) AS \"Bounty Start\" FROM Posts AS p INNER JOIN Votes AS bs ON p.Id = bs.PostId AND bs.VoteTypeId = 8 \/* BountyStart *\/ AND bs.CreationDate >= '##Date1?2018-01-01##' AND bs.CreationDate <= '##Date2?2018-12-31##' ORDER BY bs.CreationDate DESC","CreationDate":"2018-08-22 12:41:53","validated":false,"QueryBody_Original":"SELECT  \n  p.Id AS [Post Link],\n  p.Score AS 'Score',\n  p.AnswerCount AS 'Answers',\n  bs.BountyAmount AS 'Amount',\n  convert(varchar(10), bs.CreationDate, 120) AS 'Bounty Start'\nFROM Posts p\nINNER JOIN Votes bs\n    ON p.Id = bs.PostId\n    AND bs.VoteTypeId = 8  -- BountyStart\n    AND bs.CreationDate >= '##Date1?2018-01-01##'\n    AND bs.CreationDate <= '##Date2?2018-12-31##'\nORDER BY bs.CreationDate DESC"},{"QuerySetId":889472,"Title":"Top users by bounties on Writing.SE","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", SUM(bountyamount) FROM votes WHERE NOT bountyamount IS NULL AND votetypeid = 8 GROUP BY UserId ORDER BY SUM(bountyamount) DESC","CreationDate":"2018-08-22 17:16:56","validated":false,"QueryBody_Original":"SELECT  UserId as [User Link], sum(bountyamount)\n\nfrom votes \n\nwhere bountyamount is not null and votetypeid = 8\n\ngroup by UserId\n\norder by sum(bountyamount) desc;"},{"QuerySetId":889474,"Title":"questions where the OP offered a bounty on an answer they didn't accept","Description":"https:\/\/meta.stackexchange.com\/questions\/314515\/what-is-the-reason-that-i-can-accept-only-one-answer","QueryBody":"SELECT DISTINCT q.id AS \"Post Link\" FROM posts AS q INNER JOIN votes AS v ON v.postid = q.id INNER JOIN posts AS a ON a.parentid = q.id AND a.id <> q.acceptedanswerid INNER JOIN votes AS va ON va.postid = a.id WHERE NOT q.acceptedanswerid IS NULL AND v.votetypeid = 8 AND v.userid = q.owneruserid AND va.votetypeid = 9 AND q.owneruserid = v.userid","CreationDate":"2018-08-22 23:53:33","validated":false,"QueryBody_Original":"SELECT  distinct q.id as [Post Link]\nfrom posts q\ninner join votes v on v.postid = q.id\ninner join posts a on a.parentid = q.id and a.id <> q.acceptedanswerid \ninner join votes va on va.postid = a.id\nwhere q.acceptedanswerid is not null\nand v.votetypeid = 8 \nand v.userid = q.owneruserid\nand va.votetypeid = 9\nand q.owneruserid = v.userid"},{"QuerySetId":890149,"Title":"Last site access by a MathOverflow moderator","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.LastAccessDate FROM Users AS u WHERE u.Id IN (2, 3, 66, 121, 1409, 2000, 2926)","CreationDate":"2018-08-24 13:40:01","validated":false,"QueryBody_Original":"SELECT \n  u.Id AS [User Link], u.LastAccessDate\nFROM Users u\nWHERE u.Id IN (2,3,66,121,1409,2000,2926)"},{"QuerySetId":890153,"Title":"Last site access by a Mathematics moderator","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.LastAccessDate FROM Users AS u WHERE u.Id IN (622, 9754, 12952, 13854, 21674, 23350, 44121, 59234, 83702, 85306)","CreationDate":"2018-08-24 13:45:51","validated":false,"QueryBody_Original":"SELECT \n  u.Id AS [User Link], u.LastAccessDate\nFROM Users u\nWHERE u.Id IN (622,9754,12952,13854,21674,23350,44121,59234,83702,85306)"},{"QuerySetId":890464,"Title":"Top 150 Stack overflow users in Sri Lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Location, Users.Reputation, Users.UpVotes, Users.DownVotes, (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS \"Questions\", (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS \"Answers\" FROM Users WHERE UPPER(Users.Location) LIKE '%LANKA%' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2018-08-25 08:18:03","validated":false,"QueryBody_Original":"SELECT  TOP 150 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Users.Location,\n    Users.Reputation,\n    Users.UpVotes,\n    Users.DownVotes,\n    (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS [Questions],\n    (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS [Answers]\nFROM\n    Users\nWHERE\n    UPPER(Users.Location) LIKE '%LANKA%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":890813,"Title":"Distribution of User Activity Per Hour with parameters","Description":"Per hour distribution of posts and comments of a specified user, with the ability to shift the results across the clock.","QueryBody":"SELECT (h.hours - 7 + 24) % 24 AS \"Hour\", COUNT(counter) AS AmountOfActivity FROM (SELECT TIME_TO_STR(creationdate, '%h') AS active, 1 AS counter FROM posts WHERE owneruserid = 21216 UNION ALL SELECT TIME_TO_STR(creationdate, '%h') AS active, 1 AS counter FROM comments WHERE userid = 21216) AS a RIGHT JOIN (SELECT DISTINCT TIME_TO_STR(CreationDate, '%h') AS hours FROM posts) AS h ON a.active = h.hours GROUP BY (h.hours - 7 + 24) % 24 ORDER BY (h.hours - 7 + 24) % 24","CreationDate":"2018-08-26 20:23:30","validated":false,"QueryBody_Original":"SELECT  (h.hours-7+24)%24 as [Hour], count(counter) as AmountOfActivity\nfrom\n(\nSELECT datepart(hour, creationdate) as active, 1 as counter from posts where owneruserid = 21216\nunion all\nSELECT datepart(hour, creationdate) as active, 1 as counter from comments where userid = 21216\n) as a\nright join\n(\nSELECT distinct datepart(hour, CreationDate) as hours from posts\n) as h on a.active = h.hours\n\ngroup by (h.hours-7+24)%24\norder by (h.hours-7+24)%24"},{"QuerySetId":890817,"Title":"StackOverflow users in Africa (count)","Description":null,"QueryBody":"SELECT U.Location, COUNT(U.Location) AS \"Total Users\" FROM Users AS U WHERE UPPER(U.Location) LIKE '%KENYA%' OR UPPER(U.Location) LIKE '%CONGO%' OR UPPER(U.Location) LIKE '%NIGERIA%' OR UPPER(U.Location) LIKE '%AFRICA%' OR UPPER(U.Location) LIKE '%ZAMBIA%' OR UPPER(U.Location) LIKE '%ANGOLA%' OR UPPER(U.Location) LIKE '%ZIM%' GROUP BY U.Location WITH CUBE ORDER BY \"Total Users\" DESC","CreationDate":"2018-08-26 23:19:30","validated":false,"QueryBody_Original":"SELECT \nU.Location,\nCOUNT(U.Location) [Total Users]\n\nfrom Users U\n\nwhere\nupper(U.Location) like '%KENYA%'\nor upper(U.Location) like '%CONGO%'\nor upper(U.Location) like '%NIGERIA%'\nor upper(U.Location) like '%AFRICA%'\nor upper(U.Location) like '%ZAMBIA%'\nor upper(U.Location) like '%ANGOLA%'\nor upper(U.Location) like '%ZIM%'\n\ngroup by\nU.Location\n\nwith cube\n\norder by\n[Total Users] desc"},{"QuerySetId":890951,"Title":"When ask a question to maximize view?","Description":null,"QueryBody":"SELECT AVG(CAST(viewCount AS FLOAT)) AS avgView, TIME_TO_STR(CreationDate, '%-HOUR') AS DayHour FROM Posts AS p WHERE PostTypeId = 1 AND viewCount <= 1000 GROUP BY TIME_TO_STR(CreationDate, '%-HOUR') ORDER BY avgView DESC","CreationDate":"2020-02-24 05:06:45","validated":false,"QueryBody_Original":"SELECT \n  AVG(CAST(viewCount as Float)) as avgView,\n  -- DATENAME(WEEKDAY, CreationDate) AS DayInWeek,\n  DATEPART(HOUR, CreationDate) AS DayHour\nFROM\n  Posts p\nWHERE \n  PostTypeId = 1\nAND\n  viewCount <= 1000\nGROUP BY \n -- DATENAME(WEEKDAY, CreationDate),\n  DATEPART(HOUR, CreationDate)\nORDER BY\n  avgView desc\n;"},{"QuerySetId":891638,"Title":"possibly easy, unanswered vba questions","Description":null,"QueryBody":"SELECT CAST(creationdate AS DATE), id AS \"Post Link\", score, tags FROM posts WHERE tags LIKE '%vba>%' AND answercount = 0 AND closeddate IS NULL AND posttypeid = 1 ORDER BY CAST(creationdate AS DATE) DESC, score DESC","CreationDate":"2018-08-28 17:41:10","validated":false,"QueryBody_Original":"SELECT  \n  cast(creationdate as date),\n  id as [Post Link],\n  score,\n  tags\nfrom posts\nwhere \n  tags like '%vba>%'\n  and answercount=0\n  and closeddate is null\n  and posttypeid=1\norder by cast(creationdate as date) desc, score desc"},{"QuerySetId":891711,"Title":"Percentage of questions in a given tag per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(creationdate), (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tagname##>%') THEN 1 ELSE 0 END) AS FLOAT) * 100 \/ COUNT(Posts.Id)) AS \"Perc\" FROM Posts WHERE (PostTypeId = 1 AND CreationDate BETWEEN '##Date1##' AND '##Date2##') GROUP BY LAST_DATE_OF_MONTH(creationdate) ORDER BY LAST_DATE_OF_MONTH(creationdate)","CreationDate":"2018-08-28 20:07:09","validated":false,"QueryBody_Original":"SELECT \n  eomonth(creationdate),\n  (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tagname##>%') THEN 1 ELSE 0 END) as float)*100\/COUNT(Posts.Id)) AS [Perc]\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate between'##Date1##' AND '##Date2##')\nGROUP BY eomonth(creationdate)\nORDER BY eomonth(creationdate) ASC"},{"QuerySetId":891718,"Title":"Number of questions in a given tag per week","Description":null,"QueryBody":"SELECT STR(YEAR(CreationDate)) + '-' + RIGHT('0' + LTRIM(STR(TIME_TO_STR(CreationDate, '%W'))), 2), COUNT(Posts.Id) AS \"Total\", SUM(CASE WHEN (Tags LIKE '%<##Tagname##>%') THEN 1 ELSE 0 END) AS \"Mytag\", (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tagname##>%') THEN 1 ELSE 0 END) AS FLOAT) * 100 \/ COUNT(Posts.Id)) AS \"Perc\" FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W') ORDER BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W')","CreationDate":"2018-08-28 20:22:48","validated":false,"QueryBody_Original":"SELECT \nSTR(Year(CreationDate))+'-'+right('0'+ltrim(STR(DatePart(week,CreationDate))), 2),\n  COUNT(Posts.Id) as [Total],\n  SUM(CASE WHEN (Tags LIKE '%<##Tagname##>%') THEN 1 ELSE 0 END) as [Mytag],\n  (CAST(SUM(CASE WHEN (Tags LIKE '%<##Tagname##>%') THEN 1 ELSE 0 END) as float)*100\/COUNT(Posts.Id)) AS [Perc]\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY Year(CreationDate), DatePart(week,CreationDate)\nORDER BY Year(CreationDate), DatePart(week,CreationDate) ASC"},{"QuerySetId":892102,"Title":"Days with at least one post by Mathematics moderators","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE) FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE u.Id IN (622, 9754, 12952, 13854, 21674, 23350, 44121, 59234, 83702, 85306) GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE) DESC","CreationDate":"2018-08-29 15:50:11","validated":false,"QueryBody_Original":"SELECT \n  CAST(p.CreationDate as Date)\nFROM Users u INNER JOIN Posts p ON p.OwnerUserId=u.Id\nWHERE u.Id IN (622,9754,12952,13854,21674,23350,44121,59234,83702,85306)\nGROUP by CAST(p.CreationDate as Date)\nORDER by CAST(p.CreationDate as Date) DESC"},{"QuerySetId":892106,"Title":"Days with at least one comment by MathOverflow moderators","Description":null,"QueryBody":"SELECT CAST(c.CreationDate AS DATE) FROM Users AS u INNER JOIN Comments AS c ON c.UserId = u.Id WHERE u.Id IN (2, 3, 66, 121, 1409, 2000, 2926) GROUP BY CAST(c.CreationDate AS DATE) ORDER BY CAST(c.CreationDate AS DATE) DESC","CreationDate":"2018-08-29 15:53:29","validated":false,"QueryBody_Original":"SELECT \n  CAST(c.CreationDate as Date)\nFROM Users u INNER JOIN Comments c ON c.UserId=u.Id\nWHERE u.Id IN (2,3,66,121,1409,2000,2926)\nGROUP by CAST(c.CreationDate as Date)\nORDER by CAST(c.CreationDate as Date) DESC"},{"QuerySetId":892113,"Title":"Days with at least one vote by Mathematics moderators","Description":null,"QueryBody":"SELECT CAST(v.CreationDate AS DATE) FROM Users AS u INNER JOIN Votes AS v ON v.UserId = u.Id WHERE u.Id IN (2, 3, 66, 121, 1409, 2000, 2926) GROUP BY CAST(v.CreationDate AS DATE) ORDER BY CAST(v.CreationDate AS DATE) DESC","CreationDate":"2018-08-29 16:05:03","validated":false,"QueryBody_Original":"SELECT \n  CAST(v.CreationDate as Date)\nFROM Users u INNER JOIN Votes v ON v.UserId=u.Id\nWHERE u.Id IN (2,3,66,121,1409,2000,2926)\nGROUP by CAST(v.CreationDate as Date)\nORDER by CAST(v.CreationDate as Date) DESC"},{"QuerySetId":892152,"Title":"Users with most Necromancer badges at a given date","Description":"Most decorated users\r\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rank, Badges.UserId AS \"User Link\", COUNT(*) AS \"Badge Count\", Users.Reputation AS \"Total user reputation\", Users.Reputation \/ COUNT(*) AS \"Ratio\" FROM Badges INNER JOIN Users ON Users.id = Badges.UserId AND Badges.Name = 'Necromancer' AND Badges.Date < '##Date?9999-01-01##' AND Users.Reputation > 1 GROUP BY Badges.UserId, Users.Reputation ORDER BY Ratio DESC, 'Badge Count' DESC, Users.Reputation DESC LIMIT 300","CreationDate":"2020-05-07 18:54:01","validated":false,"QueryBody_Original":"SELECT  TOP 300\n  row_number() over(order by count(*) desc) as rank, \n  Badges.UserId AS [User Link],\n  count(*) AS 'Badge Count',\n  Users.Reputation AS 'Total user reputation',\n  Users.Reputation \/ count(*) AS 'Ratio'\nFROM\n  Badges\nINNER JOIN\n  Users\nON\n  Users.id = Badges.UserId AND\n  Badges.Name = 'Necromancer' AND\n  Badges.Date < '##Date?9999-01-01##' AND\n--  Users.Reputation < 9000 AND\n  Users.Reputation > 1\nGROUP BY\n  Badges.UserId, Users.Reputation\nORDER BY\n  Ratio DESC,\n  'Badge Count' DESC,\n  Users.Reputation DESC"},{"QuerySetId":892182,"Title":"Users by percent in 100's","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Count\", COUNT(*) * 100.0 \/ SUM(COUNT(*)) OVER () AS \"Percentage\", MIN(reputation) AS \"Rep\" FROM users GROUP BY \"reputation\" \/ 100 ORDER BY MIN(reputation)","CreationDate":"2018-08-29 19:50:22","validated":false,"QueryBody_Original":"SELECT  COUNT(*) as \"Count\", \n    COUNT(*) * 100.0 \/ sum(count(*)) over() as \"Percentage\",\n    min(reputation) as \"Rep\" \nFROM users\nGROUP BY [reputation] \/ 100\nORDER BY min(reputation) ASC"},{"QuerySetId":893081,"Title":"Post Having negative score with no answer","Description":null,"QueryBody":"SELECT SUM(Score) FROM Posts WHERE PostTypeId = 1 AND AnswerCount < 1 AND CreationDate BETWEEN '2013-01-01 00:00:01' AND '2013-12-31 11:59:59'","CreationDate":"2018-09-04 03:31:09","validated":false,"QueryBody_Original":"SELECT  sum(Score) from Posts\nwhere PostTypeId =1\nand AnswerCount < 1\nand CreationDate between '2013-01-01 00:00:01' and '2013-12-31 11:59:59'"},{"QuerySetId":893381,"Title":"Finding posts about breaking changes","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Body LIKE '%breaking change%' OR Title LIKE '%breaking change%'","CreationDate":"2018-08-31 19:18:27","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE Body LIKE '%breaking change%'\nOR Title  LIKE '%breaking change%'"},{"QuerySetId":893575,"Title":"Questions with tags probability or statistics per week","Description":null,"QueryBody":"SELECT STR(YEAR(CreationDate)) + '-' + RIGHT('0' + LTRIM(STR(TIME_TO_STR(CreationDate, '%W'))), 2), COUNT(Posts.Id) AS \"Total\", SUM(CASE WHEN ((Tags LIKE '%<probability>%') OR (Tags LIKE '%<statistics>%')) THEN 1 ELSE 0 END), (CAST(SUM(CASE WHEN ((Tags LIKE '%<probability>%') OR (Tags LIKE '%<statistics>%')) THEN 1 ELSE 0 END) AS FLOAT) * 100 \/ COUNT(Posts.Id)) AS \"Perc\" FROM Posts WHERE (PostTypeId = 1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##') GROUP BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W') ORDER BY YEAR(CreationDate), TIME_TO_STR(CreationDate, '%W')","CreationDate":"2018-09-01 19:49:12","validated":false,"QueryBody_Original":"SELECT \nSTR(Year(CreationDate))+'-'+right('0'+ltrim(STR(DatePart(week,CreationDate))), 2),\n  COUNT(Posts.Id) as [Total],\n  SUM(CASE WHEN ((Tags LIKE '%<probability>%') OR (Tags LIKE '%<statistics>%')) THEN 1 ELSE 0 END),\n  (CAST(SUM(CASE WHEN ((Tags LIKE '%<probability>%') OR (Tags LIKE '%<statistics>%')) THEN 1 ELSE 0 END) as float)*100\/COUNT(Posts.Id)) AS [Perc]\n  FROM Posts WHERE (PostTypeId=1 AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##')\nGROUP BY Year(CreationDate), DatePart(week,CreationDate)\nORDER BY Year(CreationDate), DatePart(week,CreationDate) ASC"},{"QuerySetId":893640,"Title":"\"popularity or skill?\" - users with highest downvote% on answers for specific tags","Description":"defaults to VBA + Excel tags for 1 year back, including users with at least 100 votes on their answers","QueryBody":"SELECT a.owneruserid AS \"User Link\", SUM(CASE WHEN votetypeid = 2 THEN 1 ELSE 0 END) AS Upvotes, SUM(CASE WHEN votetypeid = 3 THEN 1 ELSE 0 END) AS Downvotes, COUNT(v.id) AS \"#votes\", 1.0 * SUM(CASE WHEN votetypeid = 3 THEN 1 ELSE 0 END) \/ COUNT(v.id) FROM posts AS q LEFT OUTER JOIN posts AS a ON q.id = a.parentid LEFT OUTER JOIN votes AS v ON v.postid = a.id WHERE votetypeid IN (2, 3) AND a.creationdate >= '2017-01-01' AND (q.tags LIKE '%vba>%' OR q.tags LIKE '%excel%') GROUP BY a.owneruserid HAVING COUNT(v.id) > 100 ORDER BY 1.0 * SUM(CASE WHEN votetypeid = 3 THEN 1 ELSE 0 END) \/ COUNT(v.id) DESC","CreationDate":"2018-09-02 10:57:04","validated":false,"QueryBody_Original":"SELECT  \na.owneruserid as [User Link],\nsum(case when votetypeid=2 then 1 else 0 end) as Upvotes,\nsum(case when votetypeid=3 then 1 else 0 end) as Downvotes,\ncount(v.id) as [#votes],\n1.0*sum(case when votetypeid=3 then 1 else 0 end)\/count(v.id)\n\nfrom posts q left outer join posts a on q.id=a.parentid left outer join votes v on v.postid=a.id \nwhere votetypeid in (2,3)\nand a.creationdate >= '2017-01-01'\nand ( q.tags like '%vba>%' or q.tags like '%excel%')\ngroup by a.owneruserid\nhaving count(v.id)>100\norder by 1.0*sum(case when votetypeid=3 then 1 else 0 end)\/count(v.id) desc"},{"QuerySetId":893922,"Title":"Tag badges with links to tag edit history","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", Name, Date FROM Badges WHERE Badges.TagBased = 'true' AND Badges.Class <= 1 LIMIT 100","CreationDate":"2018-09-03 15:51:41","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  UserId AS [User Link],\n  Name,\n  Date\nFROM Badges\nWHERE Badges.TagBased = 'true'\n  AND Badges.Class <= 1"},{"QuerySetId":894268,"Title":"select count(*), Date(CreationDate) from posts group by Date(CreationDate) order by CreationDate","Description":null,"QueryBody":"SELECT COUNT(*), DAY(CreationDate), MONTH(CreationDate), YEAR(CreationDate) FROM posts GROUP BY DAY(CreationDate), MONTH(CreationDate), YEAR(CreationDate) ORDER BY YEAR(CreationDate) DESC, MONTH(CreationDate) DESC, DAY(CreationDate) DESC","CreationDate":"2018-09-04 15:16:31","validated":false,"QueryBody_Original":"SELECT  count(*), Day(CreationDate), Month(CreationDate), Year(CreationDate)  from posts group by Day(CreationDate), Month(CreationDate), Year(CreationDate) order by Year(CreationDate) desc, Month(CreationDate) desc, Day(CreationDate) desc"},{"QuerySetId":894355,"Title":"People who asked more than one question","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 1 GROUP BY Users.id HAVING COUNT(Posts.id) > 1","CreationDate":"2018-09-04 18:11:49","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Posts JOIN Users\nON Posts.OwnerUserId = Users.Id\nWHERE Posts.PostTypeId = 1\nGROUP BY Users.id\nHAVING count(Posts.id) > 1"},{"QuerySetId":894421,"Title":"Comments starting with a link","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", Id AS \"Comment Link\", * FROM comments WHERE text LIKE 'http%'","CreationDate":"2018-09-04 21:55:18","validated":false,"QueryBody_Original":"SELECT  UserId as [User Link], Id as [Comment Link], * from comments\nwhere text like 'http%'"},{"QuerySetId":894631,"Title":"select id, tagename from tags","Description":null,"QueryBody":"SELECT id, tagname FROM tags","CreationDate":"2018-09-05 12:58:44","validated":false,"QueryBody_Original":"SELECT  id, tagname from tags"},{"QuerySetId":894781,"Title":"users with amazon wishlist or patreon links","Description":"https:\/\/meta.stackexchange.com\/questions\/315146\/donation-button-or-giving-rewards-instead-of-bounty","QueryBody":"SELECT id AS \"User Link\" FROM users WHERE aboutme LIKE '%wishlist%' OR aboutme LIKE '%patron%'","CreationDate":"2018-09-06 00:07:15","validated":false,"QueryBody_Original":"SELECT  id as [User Link]\nfrom users\nwhere \naboutme like '%wishlist%' \nor aboutme like '%patron%'"},{"QuerySetId":895023,"Title":"Posts by year for top 5 message brokers","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%-M'), COUNT(*) FROM Posts WHERE tags LIKE '%activemq%' AND CreationDate BETWEEN '2015-01-01' AND '2019-01-01' GROUP BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%-M') ORDER BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%-M')","CreationDate":"2018-09-06 18:01:39","validated":false,"QueryBody_Original":"SELECT  datepart(yyyy,CreationDate),datepart(m,CreationDate),COUNT(*) from Posts where tags like '%activemq%'\nand CreationDate between '2015-01-01' and '2019-01-01'\ngroup by datepart(yyyy,CreationDate),datepart(m,CreationDate)\norder by datepart(yyyy,CreationDate),datepart(m,CreationDate)"},{"QuerySetId":895289,"Title":"number of questions without an answer in time frame","Description":null,"QueryBody":"SELECT YEAR(CreationDate), COUNT(*) FROM Posts WHERE PostTypeId = 1 AND NOT AcceptedAnswerId IS NULL AND AnswerCount > 0 GROUP BY YEAR(CreationDate)","CreationDate":"2018-09-07 19:57:41","validated":false,"QueryBody_Original":"SELECT  year(CreationDate), count(*) from Posts\nwhere PostTypeId = 1\nand AcceptedAnswerId is not null\nand AnswerCount > 0\n\ngroup by year(CreationDate)"},{"QuerySetId":895376,"Title":"First occurences of popular tags","Description":null,"QueryBody":"SELECT *, (SELECT PostID FROM PostHistory WHERE PostHistoryTypeId IN (3, 6) AND text LIKE N'%<' + TagName + '>%' AND creationdate > '20150301' ORDER BY creationdate LIMIT 1) AS \"Post Link\" FROM tags ORDER BY Count DESC LIMIT 100","CreationDate":"2018-09-07 20:01:29","validated":false,"QueryBody_Original":"SELECT  TOP 100 *,\n\n(SELECT TOP 1 PostID from PostHistory\nwhere PostHistoryTypeId IN (3, 6)\nand text like N'%<'+TagName+'>%'\nand creationdate > '20150301'\norder by creationdate\n) as \"Post Link\"\n\nfrom tags\norder by Count desc"},{"QuerySetId":895486,"Title":"Compare the number of users in Switzerland and Mauritius","Description":null,"QueryBody":"SELECT b.Label, COUNT(*) FROM Users AS u JOIN (SELECT '%schweiz%', 'Switzerland' UNION ALL SELECT '%mauritius%', 'Mauritius') AS b(Mask, Label) ON LOWER(u.location) LIKE b.Mask GROUP BY b.Label","CreationDate":"2018-09-08 00:30:50","validated":false,"QueryBody_Original":"SELECT  b.Label, COUNT(*)\nFROM Users u\nJOIN (\n  SELECT '%schweiz%'  , 'Switzerland' UNION ALL\n  SELECT '%mauritius%', 'Mauritius'\n  ) b (Mask, Label) ON LOWER(u.location) LIKE b.Mask\nGROUP BY b.Label"},{"QuerySetId":895583,"Title":"count of open answers by year","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"year\", COUNT(*) AS answers FROM posts WHERE closeddate IS NULL AND posttypeid = 2 GROUP BY YEAR(creationdate) ORDER BY YEAR(creationdate)","CreationDate":"2018-09-08 11:48:34","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as [year],\n  count (*) as answers\nfrom posts\nwhere \n  closeddate is null\n  and posttypeid=2\ngroup by year(creationdate)\norder by year(creationdate)"},{"QuerySetId":895738,"Title":"Picture of the Week Winner","Description":"This selects out the picture of the week winner while ignoring downvotes.","QueryBody":"SELECT P.Id, P.Body, U.DisplayName, COUNT(V.Id) AS UpVotes FROM posts AS P INNER JOIN Votes AS V ON V.PostId = P.Id INNER JOIN Users AS U ON U.Id = P.OwnerUserId WHERE P.ParentId = 2657 AND V.VoteTypeId = 2 AND P.PostTypeId = 2 GROUP BY P.Id, P.Body, U.DisplayName ORDER BY UpVotes DESC","CreationDate":"2018-09-11 20:17:48","validated":false,"QueryBody_Original":"SELECT  P.Id, P.Body, U.DisplayName, COUNT(V.Id) as UpVotes \nfrom posts P \ninner join Votes V on V.PostId = P.Id\ninner join Users U on U.Id = P.OwnerUserId\nwhere P.ParentId = 2657 and V.VoteTypeId=2 and P.PostTypeId=2\ngroup by P.Id, P.Body, U.DisplayName\norder by UpVotes Desc"},{"QuerySetId":895744,"Title":"Short \"thank you\" comments on SO Meta","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\" FROM Comments AS c WHERE c.Text LIKE '%hank%' AND LENGTH(c.Text) < 21 ORDER BY c.CreationDate LIMIT 1000","CreationDate":"2018-09-09 04:47:26","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n c.Id as [Comment Link]\nfrom Comments c  \nwhere c.Text like '%hank%' and len(c.Text) < 21\norder by c.CreationDate asc;"},{"QuerySetId":895841,"Title":"frequency of repuation over 4k","Description":null,"QueryBody":"SELECT reputation, COUNT(*) AS \"#users with this rep\" FROM users WHERE reputation >= 4000 GROUP BY reputation ORDER BY COUNT(*)","CreationDate":"2018-09-09 22:08:55","validated":false,"QueryBody_Original":"SELECT  reputation, count(*) as [#users with this rep]\nfrom users\nwhere reputation >=4000\ngroup by reputation\norder by count(*)"},{"QuerySetId":896221,"Title":"Questions that had been tagged kali-linux","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title FROM Posts AS p WHERE ClosedDate IS NULL AND Tags LIKE '%adobe%'","CreationDate":"2018-09-10 20:02:42","validated":false,"QueryBody_Original":"SELECT  Id As [Post Link], Title\nFROM Posts p\nWHERE ClosedDate Is Null\nAND Tags like '%adobe%'"},{"QuerySetId":896436,"Title":"questions and answers per year","Description":null,"QueryBody":"SELECT YEAR(creationdate), posttypeid, COUNT(*) FROM posts WHERE posttypeid IN (1, 2) GROUP BY YEAR(creationdate), posttypeid ORDER BY posttypeid, YEAR(creationdate)","CreationDate":"2018-09-10 16:34:04","validated":false,"QueryBody_Original":"SELECT  year(creationdate),posttypeid, count(*)\nfrom posts\nwhere posttypeid in (1,2)\ngroup by year(creationdate), posttypeid\norder by posttypeid, year(creationdate)"},{"QuerySetId":897319,"Title":"Better Score for Tag Highscore","Description":null,"QueryBody":"SELECT c.*, ((c.accounted_post_quantity \/ 20.0) * c.post_repuation) AS better_score FROM (SELECT p.OwnerUserId AS \"User Link\" \/* is you *\/, SUM(p.score) AS post_repuation \/* answer score *\/, COUNT(p.parentid) AS post_quantity, CASE WHEN COUNT(p.parentid) > 20 THEN 20 ELSE COUNT(p.parentid) END AS accounted_post_quantity FROM posts AS p \/* answers *\/ INNER JOIN posts AS q ON q.id = p.parentid \/* link answer to question *\/ AND p.posttypeid = 2 \/* answers *\/ AND q.tags LIKE '%<##tag##>%' \/* tags are enclosed in brackets *\/ GROUP BY p.OwnerUserId) AS c ORDER BY better_score DESC","CreationDate":"2018-09-12 20:02:51","validated":false,"QueryBody_Original":"SELECT  c.*\n, ((c.accounted_post_quantity \/ 20.0) * c.post_repuation) as better_score   \nfrom\n(SELECT p.OwnerUserId as [User Link] -- is you\n     , sum(p.score) as post_repuation  -- answer score\n     , count(p.parentid) as post_quantity\n     , case when count(p.parentid) > 20 then 20 else count(p.parentid) end as accounted_post_quantity\nfrom posts p  -- answers\ninner join posts q on q.id = p.parentid -- link answer to question\nand p.posttypeid = 2 -- answers\nand q.tags like '%<##tag##>%' -- tags are enclosed in brackets\n                                 -- and are only filled for questions\n                                 \ngroup by p.OwnerUserId) c\norder by better_score DESC"},{"QuerySetId":897600,"Title":"Questions that were answered after they were closed","Description":null,"QueryBody":"SELECT questions.Id AS \"Post Link\", answers.OwnerUserId AS \"User Link\", questions.ClosedDate, answers.CreationDate, DATEDIFF(answers.CreationDate, questions.ClosedDate) AS \"difference\" FROM Posts AS questions INNER JOIN Posts AS answers ON answers.ParentId = questions.Id WHERE answers.CreationDate > questions.ClosedDate ORDER BY answers.CreationDate DESC","CreationDate":"2018-09-13 16:04:48","validated":false,"QueryBody_Original":"SELECT \n  questions.Id AS [Post Link],\n  answers.OwnerUserId AS [User Link],\n  questions.ClosedDate,\n  answers.CreationDate,\n  DATEDIFF(minute ,questions.ClosedDate, answers.CreationDate) AS 'difference'\nFROM Posts questions\nINNER JOIN Posts answers ON answers.ParentId = questions.Id\nWHERE answers.CreationDate > questions. ClosedDate\nORDER BY answers.CreationDate DESC"},{"QuerySetId":897882,"Title":"find questions posted on a date","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE CreationDate >= '02.07.2018' AND CreationDate <= '02.08.2018'","CreationDate":"2018-09-14 01:31:05","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], CreationDate FROM Posts WHERE CreationDate >= '02.07.2018' AND CreationDate <= '02.08.2018'"},{"QuerySetId":897978,"Title":"Stats on questions containing string","Description":null,"QueryBody":"SELECT COUNT(Id) AS \"Total Count\", AVG(Score + 0.0) AS \"Avg Score\", COUNT(ClosedDate) * 100.0 \/ COUNT(Id) AS \"% Closed\" FROM Posts WHERE Posts.PostTypeId = 1 AND Posts.CreationDate >= CURRENT_TIMESTAMP() - 360 AND (LOWER(Posts.Body) LIKE LOWER('%go about this%'))","CreationDate":"2018-09-14 12:33:29","validated":false,"QueryBody_Original":"SELECT \nCOUNT(Id) as 'Total Count',\nAVG(Score + 0.0) as 'Avg Score',\nCOUNT(ClosedDate)*100.0\/COUNT(Id) as '% Closed'\nFROM Posts\n\nWHERE \nPosts.PostTypeId=1\nAND\nPosts.CreationDate >= GETDATE() - 360\nAND\n(lower(Posts.Body) LIKE lower('%go about this%'))"},{"QuerySetId":898056,"Title":"Top SO Users from Malaga","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%malaga%' OR UPPER(Location) LIKE '%MALAGA%' OR Location LIKE '%Malaga%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-09-14 15:24:49","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%malaga%'\n    OR UPPER(Location) LIKE '%MALAGA%'\n    or Location like '%Malaga%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":898324,"Title":"Showing posts that contain xxx.com in the body","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE BODY LIKE 'Sysinternals' AND CreationDate > '2014-01-01 00:00:00' ORDER BY CreationDate DESC","CreationDate":"2020-02-12 23:42:14","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], CreationDate\nFROM Posts\nWHERE BODY like 'Sysinternals'\nAND CreationDate > '2014-01-01 00:00:00'\nORDER BY CreationDate DESC"},{"QuerySetId":898900,"Title":"Can I get Correct SE attribution from Data Explorer","Description":"https:\/\/meta.stackexchange.com\/questions\/315534\/can-i-get-correct-se-attribution-from-data-explorer\/315540?noredirect=1#comment1034120_315540","QueryBody":"SELECT Title, Posts.Id AS \"Post Id\", CONCAT('site:\/\/questions\/', Posts.Id, '|', Title) AS \"Question Link\", DisplayName, Users.Id AS \"User Id\", CONCAT('site:\/\/users\/', Users.Id, '|', DisplayName) AS \"Author Link\" FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.id WHERE NOT Posts.Title IS NULL","CreationDate":"2018-09-17 10:04:46","validated":false,"QueryBody_Original":"SELECT  Title\n     , Posts.Id [Post Id]\n     , concat('site:\/\/questions\/', Posts.Id,'|', Title) as [Question Link]\n     , DisplayName\n     , Users.Id [User Id]\n     , concat('site:\/\/users\/', Users.Id,'|', DisplayName) as [Author Link]\nfrom Posts \nINNER JOIN Users ON Posts.OwnerUserId = Users.id\nwhere Posts.Title IS NOT NULL"},{"QuerySetId":899131,"Title":"Number of users that have favorited something","Description":null,"QueryBody":"SELECT COUNT(DISTINCT v.UserId) FROM Votes AS v WHERE v.VoteTypeId = 5","CreationDate":"2018-09-18 00:28:51","validated":false,"QueryBody_Original":"SELECT \n  count(distinct v.UserId)\nfrom Votes v\nwhere v.VoteTypeId = 5"},{"QuerySetId":899132,"Title":"Total users on the site","Description":null,"QueryBody":"SELECT COUNT(id) FROM Users","CreationDate":"2018-09-18 00:31:13","validated":false,"QueryBody_Original":"SELECT  count(id)\nfrom Users"},{"QuerySetId":899146,"Title":"Users with the most community wiki posts","Description":null,"QueryBody":"SELECT COUNT(Id), OwnerUserId AS \"User Link\" FROM Posts WHERE NOT CommunityOwnedDate IS NULL GROUP BY OwnerUserId ORDER BY COUNT(Id) DESC","CreationDate":"2018-09-18 02:10:24","validated":false,"QueryBody_Original":"SELECT  \n    Count(Id), OwnerUserId AS [User Link] \n    FROM Posts \n        WHERE CommunityOwnedDate IS NOT NULL \n    GROUP BY OwnerUserId\n    ORDER BY Count(Id) DESC;"},{"QuerySetId":899352,"Title":"\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u0432\u043e\u043f\u0440\u043e\u0441 \u043f\u043e C#","Description":null,"QueryBody":"SELECT DATEADD(m, DATEDIFF(m, 0, qi.CreationDate), 0) AS Month, AVG(qi.Interval) AS AveregeToFirstAnswer FROM (SELECT q.Id AS id, q.CreationDate AS CreationDate, MIN(a.CreationDate) AS AnswerCreationDate, DATEDIFF(hh, q.CreationDate, MIN(a.CreationDate)) AS Interval FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 AND q.Tags LIKE N'%<c#>%' GROUP BY q.Id, q.CreationDate HAVING DATEDIFF(m, q.CreationDate, MIN(a.CreationDate)) < 1 AND DATEDIFF(m, q.CreationDate, MIN(a.CreationDate)) >= 0) AS qi GROUP BY DATEADD(m, DATEDIFF(m, 0, qi.CreationDate), 0) ORDER BY 1","CreationDate":"2018-09-18 13:45:24","validated":false,"QueryBody_Original":"SELECT \n  DATEADD(m, DATEDIFF(m, 0, qi.CreationDate), 0) as Month,\n  AVG(qi.Interval) as AveregeToFirstAnswer from\n(\nSELECT\n  q.Id as id,\n  q.CreationDate as CreationDate,\n  Min(a.CreationDate) as AnswerCreationDate,\n  DATEDIFF(hh, q.CreationDate, Min(a.CreationDate)) as Interval\nfrom Posts q inner join Posts a on a.ParentId = q.Id\nwhere q.PostTypeId = 1 and a.PostTypeId = 2 and q.Tags like N'%<c#>%'\ngroup by q.Id, q.CreationDate\nhaving DATEDIFF(m, q.CreationDate, Min(a.CreationDate)) < 1 and DATEDIFF(m, q.CreationDate, Min(a.CreationDate)) >= 0\n) as qi\ngroup by DATEADD(m, DATEDIFF(m, 0, qi.CreationDate), 0)\norder by 1"},{"QuerySetId":899759,"Title":"Find pairs of new users who are the 'accepted answer' of each other's questions more than once By ne","Description":null,"QueryBody":"SELECT user1.Id, user1.DisplayName, user2.Id, user2.DisplayName FROM Posts AS p INNER JOIN Users AS user1 ON p.OwnerUserId = user1.Id INNER JOIN Posts AS p2 ON p.AcceptedAnswerId = p2.Id INNER JOIN Users AS user2 ON p2.OwnerUserId = user2.Id WHERE user1.CreationDate > CURRENT_TIMESTAMP() - 90 AND user2.CreationDate > CURRENT_TIMESTAMP() - 90 AND p.OwnerUserId <> p2.OwnerUserId AND NOT p.OwnerUserId IS NULL AND NOT p2.OwnerUserId IS NULL AND user1.DisplayName <> user2.DisplayName AND (p.OwnerUserId IN (user1.Id, user2.Id)) AND (p.AcceptedAnswerId IN (user1.Id, user2.Id)) GROUP BY user1.Id, user1.DisplayName, user2.Id, user2.DisplayName HAVING COUNT(*) > 1 LIMIT 1","CreationDate":"2018-09-19 04:21:14","validated":false,"QueryBody_Original":"SELECT  TOP 1 user1.Id, user1.DisplayName, user2.Id, user2.DisplayName\nFROM Posts p\nINNER JOIN Users user1 ON p.OwnerUserId = user1.Id\nINNER JOIN Posts p2 ON p.AcceptedAnswerId = p2.Id\nINNER JOIN Users user2 ON p2.OwnerUserId = user2.Id\nWHERE user1.CreationDate > GETDATE() - 90\nAND user2.CreationDate > GETDATE() - 90\nAND p.OwnerUserId <> p2.OwnerUserId \nAND p.OwnerUserId IS NOT NULL\nAND p2.OwnerUserId IS NOT NULL\nAND user1.DisplayName <> user2.DisplayName\nAND (p.OwnerUserId IN (user1.Id, user2.Id))\nAND (p.AcceptedAnswerId IN (user1.Id, user2.Id))\nGROUP BY user1.Id, user1.DisplayName, user2.Id, user2.DisplayName HAVING COUNT(*) > 1;"},{"QuerySetId":900405,"Title":"Top 30 Stack Overflow users from Armenia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate, Location, DownVotes FROM Users WHERE LOWER(Location) LIKE LOWER('%Armenia%') ORDER BY Reputation DESC LIMIT 30","CreationDate":"2020-07-15 22:58:22","validated":false,"QueryBody_Original":"SELECT  TOP 30\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate,\n    Location,\n    DownVotes\nFROM\n    Users\nWHERE    \n    LOWER(Location) LIKE LOWER('%Armenia%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":900593,"Title":"Top 10 user in Indore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%indore%' OR UPPER(Location) LIKE '%INDORE%' OR Location LIKE '%indore%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 50","CreationDate":"2020-11-29 11:21:19","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%indore%'\n    OR UPPER(Location) LIKE '%INDORE%'\n    or Location like '%indore%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":901417,"Title":"Users having Stack Exchange Inc. emails on their \"About me\"","Description":"Email domains included: stackexchange.com and stackoverflow.com","QueryBody":"SELECT id AS \"User Link\", AboutMe, WebsiteUrl FROM Users WHERE (AboutMe LIKE '%@stackexchange.com%' OR AboutMe LIKE '%@stackoverflow.com%' OR AboutMe LIKE '%valued associate%')","CreationDate":"2018-09-24 01:32:57","validated":false,"QueryBody_Original":"SELECT  id AS [User Link], AboutMe, WebsiteUrl\n  FROM Users\n  WHERE (\n  AboutMe Like '%@stackexchange.com%' or\n  AboutMe Like '%@stackoverflow.com%' or\n  AboutMe Like '%valued associate%'\n  )"},{"QuerySetId":901706,"Title":"Find New Users Answering Each Other's Questions","Description":null,"QueryBody":"SELECT users.Id, posts.OwnerUserId FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.CreationDate BETWEEN '09\/01\/2018 00:00:00' AND '09\/30\/2018 00:00:00'","CreationDate":"2018-09-24 17:38:21","validated":false,"QueryBody_Original":"SELECT  users.Id, posts.OwnerUserId FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId\nWHERE users.CreationDate BETWEEN '09\/01\/2018 00:00:00' and '09\/30\/2018 00:00:00';"},{"QuerySetId":901842,"Title":"How many John Doe users does Stack Overflow have?","Description":"In response to https:\/\/meta.stackoverflow.com\/q\/374491\/7795130","QueryBody":"SELECT COUNT(*) FROM Users WHERE DisplayName = 'John Doe'","CreationDate":"2018-09-25 03:48:45","validated":false,"QueryBody_Original":"SELECT  count(*) from Users where DisplayName='John Doe'"},{"QuerySetId":902416,"Title":"Top SO users in Srikakulam","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE LOWER(Location) LIKE '%Pathapatnam%' OR LOWER(Location) LIKE '%pathapatnam%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2018-10-12 12:21:07","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\nLOWER(Location) like '%Pathapatnam%' OR\nLOWER(Location) like '%pathapatnam%'\nORDER BY\n   reputation DESC"},{"QuerySetId":904145,"Title":"How many people have participated for a decade?","Description":null,"QueryBody":"SELECT COUNT(*) AS result FROM (SELECT COUNT(*) AS numPosts FROM Users INNER JOIN Posts ON Posts.OwnerUserId = Users.Id WHERE Users.CreationDate < DATEADD(year, -10, GETDATE()) GROUP BY Users.Id) AS x WHERE x.numPosts >= 10","CreationDate":"2018-09-29 09:33:21","validated":false,"QueryBody_Original":"SELECT  count(*) as result from (\n  SELECT count(*) as numPosts\n  from Users\n  inner join Posts on Posts.OwnerUserId = Users.Id\n  where Users.CreationDate < dateadd(year, -10, getdate())\n  group by Users.Id\n) x\nwhere x.numPosts >= 10"},{"QuerySetId":904364,"Title":"Owners of the most yearling badges","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Id, Users.Reputation, COUNT(*) OVER (PARTITION BY Users.Id) AS Count, Badges.Date FROM Badges, Users WHERE Badges.Name = 'Yearling' AND Badges.UserId = Users.Id ORDER BY Count DESC, Users.Reputation, Users.Id, Badges.Date","CreationDate":"2018-09-29 18:02:30","validated":false,"QueryBody_Original":"SELECT \n  Users.Id AS [User Link],\n  Users.Id,\n  Users.Reputation,\n  COUNT(*) OVER (PARTITION BY Users.Id) AS Count,\n  Badges.Date\nFROM Badges, Users\nWHERE\n  Badges.Name = 'Yearling'\n  AND\n  Badges.UserId = Users.Id\nORDER BY Count DESC, Users.Reputation, Users.Id, Badges.Date"},{"QuerySetId":905128,"Title":"All questions closed as off-topic","Description":"Questions that have been closed (not protected), along with their close reasons, ordered by their view count.","QueryBody":"SELECT q.Id AS \"Post Link\", q.CreationDate, q.CLosedDate FROM Posts AS q INNER JOIN PostHistory AS h ON q.Id = h.PostId WHERE h.PostHistoryTypeId = 10 AND NOT q.ClosedDate IS NULL ORDER BY q.ClosedDate DESC","CreationDate":"2020-06-23 17:33:49","validated":false,"QueryBody_Original":"SELECT \n  q.Id AS [Post Link],\n  q.CreationDate,\n  q.CLosedDate\nFROM Posts q\nINNER JOIN PostHistory h ON q.Id = h.PostId\nWHERE \n  h.PostHistoryTypeId = 10 AND\n  q.ClosedDate IS NOT NULL\nORDER BY q.ClosedDate DESC"},{"QuerySetId":905173,"Title":"Top 500 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2018-10-01 13:38:25","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":905220,"Title":"How many users have \"participated\" at least a couple times in the past year.","Description":null,"QueryBody":"SELECT p.OwnerUserId AS \"User Link\", COUNT(*) AS \"Number of Contributions\" FROM Posts AS p WHERE p.CreationDate > DATEADD(dd, -365, GETDATE()) GROUP BY p.OwnerUserId HAVING COUNT(*) >= 4","CreationDate":"2018-10-01 15:32:19","validated":false,"QueryBody_Original":"SELECT  \np.OwnerUserId AS [User Link], \nCOUNT(*) AS [Number of Contributions] \nFROM Posts AS p\nWHERE p.CreationDate > DATEADD(dd, -365, GETDATE())\nGROUP BY p.OwnerUserId\nHAVING COUNT(*) >= 4"},{"QuerySetId":905919,"Title":"how many questions are answered?","Description":null,"QueryBody":"SELECT answercount, COUNT(*) AS \"cnt\" FROM posts WHERE posttypeid = 1 AND tags LIKE '%ms-access%' AND creationdate >= DATEADD(d, -354, GETDATE()) GROUP BY answercount ORDER BY COUNT(*) DESC","CreationDate":"2018-10-02 16:09:30","validated":false,"QueryBody_Original":"SELECT  \n  answercount,\n  count(*) as [cnt]\nfrom posts\nwhere posttypeid=1 and tags like '%ms-access%' and creationdate >= dateadd(d,-354,getdate())\ngroup by answercount\norder by count(*) desc"},{"QuerySetId":906057,"Title":"SELECT * FROM Posts WHERE Id < 50000","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id < 50000","CreationDate":"2018-10-02 20:23:29","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Id < 50000"},{"QuerySetId":906451,"Title":"Fastest electorate badge in the west","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", DATEDIFF(b.Date, u.CreationDate) AS DaysTillElectorate FROM Users AS u INNER JOIN Badges AS b ON b.UserId = u.Id AND b.Name = 'Electorate' ORDER BY b.\"Date\" - u.CreationDate LIMIT 10","CreationDate":"2018-10-03 14:05:11","validated":false,"QueryBody_Original":"SELECT  Top 10 u.Id As [User Link], DateDiff(d,  u.CreationDate, b.Date) As DaysTillElectorate\nFROM Users u\nINNER JOIN Badges b ON b.UserId = u.Id And b.Name = 'Electorate'\nORDER BY b.[Date] - u.CreationDate"},{"QuerySetId":906671,"Title":"Questions per month for a tag string family, compared","Description":null,"QueryBody":"SELECT * FROM dbo.Users","CreationDate":"2018-10-03 23:48:16","validated":false,"QueryBody_Original":"SELECT  * from dbo.Users"},{"QuerySetId":906708,"Title":"Annual comparison: all questions vs specified tag (with Graph)","Description":"Specify a complete tag, and run the query. Click the GRAPH tab to view chart.","QueryBody":"SELECT YEAR(creationdate) AS \"year\", COUNT(*) AS \"cnt\" FROM posts WHERE title LIKE '%fax%' AND posttypeid = 1 AND closeddate IS NULL GROUP BY YEAR(creationdate) ORDER BY YEAR(creationdate)","CreationDate":"2018-10-04 00:16:40","validated":false,"QueryBody_Original":"SELECT \n  year(creationdate) as [year],\n  count(*) as [cnt]\nfrom posts\nwhere title like '%fax%' and posttypeid=1 and closeddate is null\ngroup by year(creationdate)\norder by year(creationdate)"},{"QuerySetId":906966,"Title":"SELECT * FROM users WHERE id < 0 ORDER BY id;","Description":null,"QueryBody":"SELECT * FROM users WHERE id < 0 ORDER BY id","CreationDate":"2018-10-04 08:30:40","validated":false,"QueryBody_Original":"SELECT  * FROM users WHERE id < 0 ORDER BY id;"},{"QuerySetId":907093,"Title":"Score distribution (all questions, no filters)","Description":null,"QueryBody":"SELECT COUNT(Id) AS CountOfScore, Score FROM Posts AS p WHERE p.PostTypeId = 1 AND Score BETWEEN -20 AND 20 GROUP BY Score ORDER BY Score","CreationDate":"2018-10-04 15:51:06","validated":false,"QueryBody_Original":"SELECT  Count(Id) As CountOfScore, Score\nFROM Posts p\nWHERE p.PostTypeId = 1\nAND Score Between -20 And 20\nGROUP BY Score\nORDER BY Score ASC"},{"QuerySetId":907565,"Title":"Amount of questions for the tag PHP","Description":null,"QueryBody":"SELECT * FROM Tags AS t WHERE t.TagName = 'php'","CreationDate":"2018-10-05 10:05:37","validated":false,"QueryBody_Original":"SELECT  * FROM Tags t where t.TagName = 'php'"},{"QuerySetId":908165,"Title":"Top SO users from China","Description":null,"QueryBody":"SELECT USERS.ID, USERS.DISPLAYNAME, COUNT(POSTS.ID), POSTS.POSTTYPEID FROM USERS LEFT JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID WHERE POSTS.ID IS NULL OR POSTS.POSTTYPEID = 1 GROUP BY USERS.ID, USERS.DISPLAYNAME, POSTS.POSTTYPEID HAVING COUNT(POSTS.ID) = 0 LIMIT 100","CreationDate":"2020-11-27 21:52:17","validated":false,"QueryBody_Original":"SELECT  TOP 100 USERS.ID, USERS.DISPLAYNAME, COUNT(POSTS.ID) \n, POSTS.POSTTYPEID\nFROM USERS \nLEFT JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID \nWHERE POSTS.ID IS NULL OR POSTS.POSTTYPEID = 1\nGROUP BY USERS.ID, USERS.DISPLAYNAME, POSTS.POSTTYPEID \nHAVING COUNT(POSTS.ID) = 0"},{"QuerySetId":908339,"Title":"Answers by user ID 62131, chronologically","Description":null,"QueryBody":"SELECT A.Id, A.Title, Q.Title, A.Score FROM Posts AS A LEFT JOIN Posts AS Q ON A.ParentID = Q.ID WHERE A.OwnerDisplayName = 'user62131' ORDER BY A.Score DESC","CreationDate":"2019-07-07 13:43:34","validated":false,"QueryBody_Original":"SELECT  A.Id, A.Title, Q.Title, A.Score FROM Posts as A LEFT JOIN Posts as Q ON A.ParentID = Q.ID WHERE A.OwnerDisplayName = 'user62131' ORDER BY A.Score DESC"},{"QuerySetId":908398,"Title":"list of unanswered questions ordered by longest period without answers (or comments)","Description":"https:\/\/meta.stackexchange.com\/questions\/316395\/how-can-i-find-people-who-have-asked-a-large-number-of-high-quality-unanswered-q\/316423#316423","QueryBody":"SELECT q.id AS \"Post Link\", creationdate, DATEDIFF(q.creationdate, CURRENT_TIMESTAMP()) AS \"# days unanswered\" FROM posts AS q\/* not merged *\/  WHERE q.posttypeid = 1 \/* Q *\/ AND q.answercount = 0 \/* no answers *\/ AND q.commentcount = 0 \/* no comments *\/ AND q.closeddate IS NULL \/* not closed *\/ AND NOT EXISTS(SELECT * FROM posthistory AS ph WHERE ph.postid = q.id AND ph.posthistorytypeid = 37 \/* Post Merge Source *\/) \/* Post Merge Source *\/ \/* Post Merge Source *\/ ORDER BY DATEDIFF(q.creationdate, CURRENT_TIMESTAMP())","CreationDate":"2018-10-07 15:34:55","validated":false,"QueryBody_Original":"SELECT  q.id as [Post Link]\n     , creationdate\n     , datediff(d,getdate(), q.creationdate) [# days unanswered]\nfrom posts q\nwhere q.posttypeid = 1 -- Q\nand q.answercount = 0 -- no answers\nand q.commentcount = 0 -- no comments\nand q.closeddate is null -- not closed\n-- not merged\nand not exists (\n  SELECT *\n  from posthistory ph\n  where ph.postid = q.id\n  and ph.posthistorytypeid = 37 -- Post Merge Source\n  )\n-- sorting\norder by datediff(d,getdate(), q.creationdate)"},{"QuerySetId":908399,"Title":"list of questions with most amount of bounties placed on the question (without an accepted answer)","Description":"https:\/\/meta.stackexchange.com\/questions\/316395\/how-can-i-find-people-who-have-asked-a-large-number-of-high-quality-unanswered-q\/316423#316423","QueryBody":"SELECT q.id AS \"Post Link\", COUNT(*) AS \"# bounties\", SUM(v.bountyamount) AS \"Total Bounty amount\" FROM posts AS q INNER JOIN votes AS v ON v.postid = q.id WHERE q.posttypeid = 1 \/* Q *\/ AND q.closeddate IS NULL \/* not closed *\/ AND acceptedanswerid IS NULL AND v.votetypeid = 8 \/* Bounty Start *\/ GROUP BY q.id ORDER BY COUNT(*) DESC","CreationDate":"2018-10-07 15:34:37","validated":false,"QueryBody_Original":"SELECT  q.id as [Post Link]\n     , count(*) [# bounties]\n     , sum(v.bountyamount) [Total Bounty amount]\nfrom posts q\ninner join votes v on v.postid = q.id\nwhere q.posttypeid = 1 -- Q\nand q.closeddate is null -- not closed\nand acceptedanswerid is null\nand v.votetypeid = 8 -- Bounty Start\ngroup by q.id\n-- sorting\norder by count(*) desc"},{"QuerySetId":908471,"Title":"All questions with Bounty with tag android","Description":null,"QueryBody":"SELECT Posts.CreationDate, Posts.Id, Votes.BountyAmount, Posts.Title, Posts.AcceptedAnswerId, Posts.Tags FROM Posts LEFT JOIN Votes ON Votes.PostId = Posts.ID WHERE Posts.Tags LIKE ('%##Tag##%') AND BountyAmount > 0 ORDER BY Posts.CreationDate DESC LIMIT 30","CreationDate":"2018-10-08 13:18:58","validated":false,"QueryBody_Original":"SELECT  TOP 30 Posts.CreationDate, Posts.Id, Votes.BountyAmount, Posts.Title, Posts.AcceptedAnswerId, Posts.Tags \nFROM Posts LEFT JOIN Votes on Votes.PostId = Posts.ID \nWHERE Posts.Tags LIKE ('%##Tag##%') AND BountyAmount > 0 \nORDER BY Posts.CreationDate DESC"},{"QuerySetId":908509,"Title":"Questions eligible for Community User bumping","Description":"Posts satisfying the conditions in http:\/\/meta.stackexchange.com\/a\/184511","QueryBody":"SELECT questions.Id AS \"Post Link\", questions.Score AS \"Q score\", MAX(answers.Score) AS \"max A score\", COUNT(*) AS \"answer count\", (SELECT GROUP_CONCAT(COALESCE(DisplayName, 'N\/A'), ',') AS csv FROM Posts JOIN Users ON Users.Id = Posts.OwnerUserId WHERE Posts.ParentId = questions.Id) FROM Posts AS questions JOIN Posts AS answers ON answers.ParentId = questions.Id WHERE questions.PostTypeId = 1 \/* questions *\/ AND answers.PostTypeId = 2 \/* answers *\/ AND questions.AcceptedAnswerId IS NULL AND questions.ClosedDate IS NULL GROUP BY questions.Id, questions.CreationDate, questions.Score HAVING MAX(answers.Score) = 0 ORDER BY questions.CreationDate DESC","CreationDate":"2019-09-28 12:06:28","validated":false,"QueryBody_Original":"SELECT \n  questions.Id AS [Post Link],\n  questions.Score AS 'Q score',\n  MAX(answers.Score) AS 'max A score',\n  COUNT(*) AS 'answer count',\n  (SELECT STRING_AGG ( ISNULL(DisplayName,'N\/A'), ',') AS csv \n    FROM Posts \n    JOIN Users ON Users.Id = Posts.OwnerUserId\n    WHERE Posts.ParentId = questions.Id)\nFROM Posts questions\nJOIN Posts answers ON answers.ParentId = questions.Id\nWHERE questions.PostTypeId = 1 -- questions\n  AND answers.PostTypeId = 2 -- answers\n  AND questions.AcceptedAnswerId IS NULL\n  AND questions.ClosedDate IS NULL\nGROUP BY questions.Id, questions.CreationDate, questions.Score\nHAVING MAX(answers.Score) = 0\nORDER BY questions.CreationDate DESC"},{"QuerySetId":908571,"Title":"Select Top 30 posts with Bounty containing tag","Description":null,"QueryBody":"SELECT Posts.CreationDate, Posts.Id, Votes.BountyAmount, Posts.Title, Posts.AcceptedAnswerId, Posts.Tags FROM Posts LEFT JOIN Votes ON Votes.PostId = Posts.ID WHERE Posts.Tags LIKE ('%##Tag##%') AND BountyAmount > 0 ORDER BY Posts.CreationDate DESC LIMIT 30","CreationDate":"2018-10-08 13:24:40","validated":false,"QueryBody_Original":"SELECT  TOP 30 Posts.CreationDate, Posts.Id, Votes.BountyAmount, Posts.Title, Posts.AcceptedAnswerId, Posts.Tags \nFROM Posts LEFT JOIN Votes on Votes.PostId = Posts.ID \nWHERE Posts.Tags LIKE ('%##Tag##%') AND BountyAmount > 0 \nORDER BY Posts.CreationDate DESC"},{"QuerySetId":909544,"Title":"Research Replication Queries Dan Lee","Description":null,"QueryBody":"SELECT COUNT(DISTINCT AccountId) FROM Users","CreationDate":"2018-10-10 23:55:18","validated":false,"QueryBody_Original":"SELECT  count(distinct AccountId) from Users;\n--SELECT * from FlagTypes;\n\n--SELECT sum(FavoriteCount) from Posts where creationDate BETWEEN '07-31-2008' AND '12-31-2010';"},{"QuerySetId":909565,"Title":"Android questions that does not contain code snippets","Description":null,"QueryBody":"SELECT Body FROM Posts AS Question WHERE NOT Question.Body LIKE '%<code>%' AND Question.Tags LIKE '%android%' ORDER BY ViewCount LIMIT 500","CreationDate":"2018-10-10 23:44:36","validated":false,"QueryBody_Original":"SELECT  TOP 500 Body FROM \n  Posts AS Question \n  where    \n  Question.Body NOT LIKE '%<code>%' and\n  Question.Tags like '%android%'\n  order by ViewCount"},{"QuerySetId":909592,"Title":"Super User and users with 500 or more rep","Description":null,"QueryBody":"SELECT COUNT(users.id) AS Accounts FROM Users AS users WHERE users.Reputation >= 500","CreationDate":"2018-10-11 23:15:37","validated":false,"QueryBody_Original":"SELECT  \n    COUNT(users.id) AS Accounts\n    FROM Users users\n    WHERE users.Reputation >= 500"},{"QuerySetId":909709,"Title":"Does presence of a question mark affected whether a question gets answers, and it's score?","Description":null,"QueryBody":"SELECT CASE WHEN title LIKE '%?%' THEN 'hasQMark' ELSE 'noQMark' END AS hasQMark, FORMAT(SUM(1), '#,##0') AS \"#Questions\", ROUND(1.0 * SUM(score) \/ SUM(1), 1) AS Score, ROUND(1.0 * SUM(answercount) \/ SUM(1), 1) AS \"Avg#Answers\", FORMAT(1.0 * SUM(CASE WHEN answercount > 0 THEN 1 ELSE 0 END) \/ SUM(1), '0%') AS hasAnswers FROM posts WHERE posttypeid = 1 AND closeddate IS NULL AND creationdate >= DATEADD(yy, -5, GETDATE()) GROUP BY CASE WHEN title LIKE '%?%' THEN 'hasQMark' ELSE 'noQMark' END","CreationDate":"2018-10-11 10:26:03","validated":false,"QueryBody_Original":"SELECT  \n  case when title like '%?%' then 'hasQMark' else 'noQMark' end as hasQMark,\n  format(sum(1),'#,##0') as [#Questions],\n  round(1.0*sum(score)\/sum(1),1) as Score,\n  round(1.0*sum(answercount)\/sum(1),1) as [Avg#Answers],\n  format(1.0*sum(case when answercount>0 then 1 else 0 end)\/sum(1),'0%') as hasAnswers\nfrom\n  posts\nwhere posttypeid=1 and closeddate is null\n  and creationdate>=dateadd(yy,-5,getdate())\ngroup by case when title like '%?%' then 'hasQMark' else 'noQMark' end"},{"QuerySetId":909828,"Title":"Selecting posts with a score higher than 8","Description":null,"QueryBody":"SELECT Id, Title, Body, Tags FROM posts WHERE Id < 500000 AND Score >= 8","CreationDate":"2018-10-11 14:08:45","validated":false,"QueryBody_Original":"SELECT  Id, Title, Body, Tags FROM posts WHERE Id < 500000 and Score >= 8"},{"QuerySetId":910018,"Title":"Top users from Ahmedabad, India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ahmedabad, gujarat, india%' OR UPPER(Location) LIKE '%AHMEDABAD, GUJARAT, INDIA%' OR Location LIKE '%Ahmedabad, Gujarat, India%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2018-10-11 23:52:26","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ahmedabad, gujarat, india%'\n    OR UPPER(Location) LIKE '%AHMEDABAD, GUJARAT, INDIA%'\n    or Location like '%Ahmedabad, Gujarat, India%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":910251,"Title":"Popularity of cheese related posts by year","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%YEAR') AS Year, COUNT(*) AS Posts FROM Posts WHERE LOWER(Body) LIKE '%cheese%' GROUP BY TIME_TO_STR(CreationDate, '%YEAR') ORDER BY TIME_TO_STR(CreationDate, '%YEAR')","CreationDate":"2018-10-12 18:34:43","validated":false,"QueryBody_Original":"SELECT  DATEPART(YEAR, CreationDate) AS Year, COUNT(*) AS Posts\nFROM Posts\nWHERE LOWER(Body) LIKE '%cheese%'\nGROUP BY DATEPART(YEAR, CreationDate)\nORDER BY DATEPART(YEAR, CreationDate)"},{"QuerySetId":910443,"Title":"Search People by Location ","Description":null,"QueryBody":"SELECT * FROM Users WHERE UPPER(Location) = UPPER('##location##')","CreationDate":"2018-10-13 20:22:20","validated":false,"QueryBody_Original":"SELECT  * From Users\nWhere Upper(Location)=Upper('##location##')"},{"QuerySetId":910952,"Title":"Questions per day of week","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W'), COUNT(1) FROM Posts WHERE PostTypeId = 1 GROUP BY TIME_TO_STR(CreationDate, '%W')","CreationDate":"2018-10-15 20:59:27","validated":false,"QueryBody_Original":"SELECT  DATEPART(dw, CreationDate), count(1)\nfrom Posts where PostTypeId = 1\ngroup by DATEPART(dw, CreationDate)"},{"QuerySetId":911182,"Title":"All Titles and Body from Posts","Description":null,"QueryBody":"SELECT Title, Body FROM Posts","CreationDate":"2018-10-16 04:21:54","validated":false,"QueryBody_Original":"SELECT  Title,Body from Posts;"},{"QuerySetId":911415,"Title":"Q0.3.1 - Questions per year - all-time","Description":null,"QueryBody":"SELECT YEAR(creationdate) AS \"Year\", COUNT(1) AS questions, SUM(CASE WHEN answercount > 0 THEN 1 ELSE 0 END) AS questions_with_answer, SUM(CASE WHEN NOT AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) AS questions_with_accepted_answer FROM posts WHERE posttypeid = 1 AND NOT OwnerUserId IS NULL AND YEAR(creationdate) BETWEEN 2013 AND 2017 GROUP BY YEAR(creationdate)","CreationDate":"2018-11-13 08:31:15","validated":false,"QueryBody_Original":"SELECT  \n  year(creationdate) as [Year]\n  ,count(1) as questions\n  ,SUM(case when answercount > 0 then 1 else 0 end) as questions_with_answer\n  ,SUM(case when AcceptedAnswerId is not null then 1 else 0 end) as questions_with_accepted_answer\n  \nfrom\n  posts\nwhere\n  posttypeid = 1\n  and OwnerUserId is not null\n  \n  and year(creationdate) between 2013 and 2017\ngroup by\n  year(creationdate)"},{"QuerySetId":911639,"Title":"Top users without gold badge.","Description":null,"QueryBody":"SELECT Users.Reputation, Users.Id AS \"User Link\", SUM(CASE WHEN Badges.Class = 2 THEN 1 ELSE 0 END) AS Silver, SUM(CASE WHEN Badges.Class = 3 THEN 1 ELSE 0 END) AS Bronze, COUNT(*) AS Total FROM Users INNER JOIN Badges ON Badges.UserId = Users.Id GROUP BY Users.Id, Reputation, DisplayName HAVING MIN(Badges.Class) > 1 ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-10-16 16:15:41","validated":false,"QueryBody_Original":"SELECT  Top 100\n  Users.Reputation,\n  Users.Id as [User Link],\n  Sum(case when Badges.Class = 2 then 1 else 0 end) as Silver,\n  Sum(case when Badges.Class = 3 then 1 else 0 end) as Bronze,\n  Count(*) as Total\nFrom Users \n  Inner Join Badges On Badges.UserId = Users.Id\nGroup By Users.Id, Reputation, DisplayName\nHaving Min(Badges.Class) > 1\nOrder By Reputation Desc"},{"QuerySetId":911900,"Title":"get data between 2010 to 2012","Description":null,"QueryBody":"SELECT u.id AS userID, u.location AS userLocation, u.UpVotes AS userUpvotes, u.DownVotes AS userDownVotes, p.id AS postID, p.ParentId AS parentPostID, p.CreationDate AS postCreationDate, p.DeletionDate AS postDeletionDate, p.Score AS postScore, p.ViewCount AS postViews, p.AnswerCount AS postAnswers, p.CommentCount AS postComments, p.FavoriteCount AS postFavorites, p.AcceptedAnswerId AS postAcceptedAns, v.Id AS voteID, v.CreationDate AS voteDate, v.BountyAmount AS voteBounty FROM Users AS u JOIN Posts AS p ON u.id = p.OwnerUserId JOIN Votes AS v ON p.id = v.PostId WHERE p.CreationDate BETWEEN '2010-09-11' AND '2012-09-11' ORDER BY p.CreationDate DESC","CreationDate":"2018-10-16 23:52:40","validated":false,"QueryBody_Original":"SELECT  u.id as userID ,u.location as userLocation ,u.UpVotes as userUpvotes,\n      u.DownVotes as userDownVotes,p.id as postID,\n      p.ParentId as parentPostID,p.CreationDate as postCreationDate,\n      p.DeletionDate as postDeletionDate, p.Score as postScore,\n      p.ViewCount as postViews,p.AnswerCount as postAnswers,\n      p.CommentCount as postComments,p.FavoriteCount as postFavorites,\n       p.AcceptedAnswerId as postAcceptedAns,v.Id as voteID,\n       v.CreationDate as voteDate,v.BountyAmount as voteBounty\n\nfrom Users u join Posts p on u.id = p.OwnerUserId\n             join Votes v on p.id = v.PostId\n \n where p.CreationDate BETWEEN '2010-09-11'AND '2012-09-11'\n \n order by p.CreationDate desc;"},{"QuerySetId":912432,"Title":"\u041f\u043e\u0438\u0441\u043a \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0445 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER(N'%##CommentText##%') ORDER BY Score","CreationDate":"2018-11-21 23:26:51","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER(N'%##CommentText##%')\n ORDER BY Score asc"},{"QuerySetId":912646,"Title":"Questions Ordered By Number of Answers","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", AnswerCount AS \"Answer Count\" FROM Posts WHERE PostTypeId = 1 ORDER BY AnswerCount DESC","CreationDate":"2018-10-17 21:14:15","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], AnswerCount AS 'Answer Count'\n  FROM Posts WHERE PostTypeId = 1 ORDER BY AnswerCount DESC"},{"QuerySetId":914689,"Title":"Number of questions asked on a Monday","Description":null,"QueryBody":"SELECT * FROM PostHistory AS p WHERE p.PostHistoryTypeId = 35 \/* and p.UserId !=-1 *\/ AND p.CreationDate BETWEEN '2016-10-18 00:00:00' AND '2018-10-18 23:59:59'","CreationDate":"2018-10-23 18:01:03","validated":false,"QueryBody_Original":"SELECT  *\nfrom PostHistory p\nwhere p.PostHistoryTypeId = 35 --and p.UserId !=-1\nand p.CreationDate BETWEEN '2016-10-18 00:00:00' AND '2018-10-18 23:59:59'"},{"QuerySetId":914705,"Title":"number of question ask per monday","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE) AS DateField, COUNT(p.Id) FROM Posts AS p WHERE PostTypeId = 1 GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE) DESC","CreationDate":"2018-10-22 23:42:43","validated":false,"QueryBody_Original":"SELECT  \n  CAST(CreationDate as DATE) as DateField, count(p.Id)\nFROM\n  Posts p\nWHERE \n  PostTypeId = 1\nGROUP BY \n  CAST(CreationDate as DATE)\nORDER BY\n  CAST(CreationDate as DATE) desc\n--LIMIT 50\n;"},{"QuerySetId":914828,"Title":"Questions closed or reopened the highest number of times","Description":null,"QueryBody":"SELECT 'site:\/\/q\/' + CAST(q.Id AS TEXT) + '\/' + CAST(MIN(m.Id) AS TEXT) + '|' + MIN(q.Title) AS qti, COUNT(e.Id) AS ere, q.OwnerUserId AS \"User Link\" FROM Posts AS q JOIN PostHistory AS e ON q.Id = e.PostId LEFT JOIN Users AS m ON m.AccountId = 1192385 WHERE q.PostTypeId = 1 AND e.PostHistoryTypeId IN (10, 11) GROUP BY q.Id, q.OwnerUserId HAVING 3 <= COUNT(e.Id) ORDER BY ere DESC","CreationDate":"2020-06-21 22:27:40","validated":false,"QueryBody_Original":"SELECT  \n'site:\/\/q\/' + CAST(q.Id AS NVARCHAR) + '\/' + CAST(MIN(m.Id) AS NVARCHAR) + '|' + MIN(q.Title) AS qti,\nCOUNT(e.Id) AS ere,\nq.OwnerUserId AS 'User Link'\nFROM Posts AS q\nJOIN PostHistory AS e ON q.Id = e.PostId\nLEFT JOIN Users AS m ON m.AccountId = 1192385\nWHERE q.PostTypeId = 1 AND\ne.PostHistoryTypeId IN(10, 11)\nGROUP BY q.Id, q.OwnerUserId\nHAVING 3 <= COUNT(e.Id)\nORDER BY ere DESC;"},{"QuerySetId":915295,"Title":"All post in the last 7 days","Description":null,"QueryBody":"SELECT CAST(Posts.CreationDate AS DATE) AS data, COUNT(*) AS ile FROM Posts WHERE Posts.CreationDate < '2019-01-07' AND Posts.CreationDate > '2019-01-01' GROUP BY CAST(Posts.CreationDate AS DATE)","CreationDate":"2019-03-18 20:21:07","validated":false,"QueryBody_Original":"SELECT  CAST(Posts.CreationDate AS Date) as data , count(*) as ile \nfrom Posts \nwhere Posts.CreationDate < '2019-01-07' and Posts.CreationDate > '2019-01-01'\nGROUP BY CAST(Posts.CreationDate AS Date)"},{"QuerySetId":916817,"Title":"Questions asked per day (not closed \/ deleted)","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), COUNT(*) FROM Posts WHERE PostTypeId = 1 AND CreationDate > '2011-01-01' GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE) DESC","CreationDate":"2018-10-26 14:59:33","validated":false,"QueryBody_Original":"SELECT  CONVERT(DATE,CreationDate),COUNT(*)\nFROM Posts\nWHERE PostTypeId=1\nAND CreationDate > '2011-01-01'\nGROUP BY CONVERT(DATE,CreationDate)\nORDER BY CONVERT(DATE,CreationDate) DESC"},{"QuerySetId":917175,"Title":"Top stackoverflow users in Rhode Island","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC), Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE UPPER(Location) LIKE '%RHODE ISLAND%' ORDER BY reputation DESC","CreationDate":"2018-10-27 08:02:46","validated":false,"QueryBody_Original":"SELECT \n   ROW_NUMBER() OVER (order by Reputation DESC),\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n    upper(Location) like '%RHODE ISLAND%'\nORDER BY\n   reputation DESC"},{"QuerySetId":917328,"Title":"What are the most popular first words in question titles?","Description":null,"QueryBody":"SELECT SUBSTRING(p.Title, 1, STR_POSITION(p.Title, ' ')) AS FirstWord, COUNT(DISTINCT p.Id) AS Questions, CAST(AVG(p.Score * 1.0) AS FLOAT(10, 1)) AS AvgScore, CAST(AVG(p.AnswerCount * 1.0) AS FLOAT(10, 1)) AS AvgAnswerCount, CAST(AVG(p.CommentCount * 1.0) AS FLOAT(10, 1)) AS AvgCommentCount, CAST(AVG(p.ViewCount * 1.0) AS FLOAT(10, 1)) AS AvgViewCount, CAST(AVG(p.FavoriteCount * 1.0) AS FLOAT(10, 1)) AS AvgFavoriteCount FROM dbo.Posts AS p WHERE p.PostTypeId = 1 AND STR_POSITION(p.Title, ' ') > 0 GROUP BY SUBSTRING(p.Title, 1, STR_POSITION(p.Title, ' ')) ORDER BY COUNT(DISTINCT p.Id) DESC LIMIT 100","CreationDate":"2018-10-27 23:01:06","validated":false,"QueryBody_Original":"SELECT  TOP 100 \n    SUBSTRING(p.Title, 1, CHARINDEX(' ', p.Title)) AS FirstWord,\n    COUNT(DISTINCT p.Id) AS Questions, \n    CAST(AVG(p.Score * 1.0) AS DECIMAL(10, 1)) AS AvgScore, \n    CAST(AVG(p.AnswerCount * 1.0) AS DECIMAL(10, 1)) AS AvgAnswerCount, \n    CAST(AVG(p.CommentCount * 1.0) AS DECIMAL(10, 1)) AS AvgCommentCount, \n    CAST(AVG(p.ViewCount * 1.0) AS DECIMAL(10, 1)) AS AvgViewCount, \n    CAST(AVG(p.FavoriteCount * 1.0) AS DECIMAL(10, 1)) AS AvgFavoriteCount\n  FROM dbo.Posts p\n  WHERE p.PostTypeId = 1\n    AND CHARINDEX(' ', p.Title) > 0\n  GROUP BY SUBSTRING(p.Title, 1, CHARINDEX(' ', p.Title))\n  ORDER BY COUNT(DISTINCT p.Id) DESC;"},{"QuerySetId":917473,"Title":"\"My code works fine but...\"","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(creationdate) AS \"Monthend\", COUNT(*) AS cnt FROM posts WHERE posttypeid = 1 AND body LIKE '%my code works fine%' COLLATE SQL_Latin1_General_CP1_CI_AS AND creationdate >= '2017-1-1' GROUP BY LAST_DATE_OF_MONTH(creationdate) ORDER BY LAST_DATE_OF_MONTH(creationdate)","CreationDate":"2018-10-28 18:35:06","validated":false,"QueryBody_Original":"SELECT \neomonth(creationdate) as [Monthend],\n  count(*) as cnt\nfrom posts\nwhere posttypeid=1\n  and body like '%my code works fine%' COLLATE SQL_Latin1_General_CP1_CI_AS\n  and creationdate >= '2017-1-1'\ngroup by eomonth(creationdate)\norder by eomonth(creationdate)"},{"QuerySetId":917677,"Title":"Top 10 users from Spain","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%spain%' OR UPPER(Location) LIKE 'ES' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2018-10-29 14:04:10","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%spain%'\n    OR UPPER(Location) LIKE 'ES'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":918000,"Title":"SELECT * FROM users ORDER BY id;","Description":null,"QueryBody":"SELECT * FROM users ORDER BY id","CreationDate":"2018-10-30 03:22:26","validated":false,"QueryBody_Original":"SELECT  * FROM users ORDER BY id;"},{"QuerySetId":918183,"Title":"Checking stuff on question 5809788","Description":null,"QueryBody":"SELECT * FROM posts WHERE id = 5809788","CreationDate":"2018-10-30 12:11:50","validated":false,"QueryBody_Original":"SELECT \n  *\nfrom\n  posts\nwhere\n  id = 5809788; -- question\n  -- id = 5810225; -- answer"},{"QuerySetId":918540,"Title":"Number of Comments Per Question","Description":null,"QueryBody":"SELECT Posts.Id, Posts.PostTypeId, Posts.Score, Posts.ViewCount, Posts.OwnerUserId, Posts.OwnerDisplayName, Users.Reputation, Posts.CommentCount FROM Posts LEFT JOIN Users ON Users.Id = Posts.OwnerUserId","CreationDate":"2018-10-30 21:12:14","validated":false,"QueryBody_Original":"SELECT \n  Posts.Id,\n  Posts.PostTypeId,\n  Posts.Score,\n  Posts.ViewCount,\n  Posts.OwnerUserId,\n  Posts.OwnerDisplayName,\n  Users.Reputation,\n  Posts.CommentCount\nFROM\n  Posts\n  LEFT JOIN Users on Users.Id = Posts.OwnerUserId"},{"QuerySetId":918711,"Title":"Getting the number questions asked by a given user(OwnerUserId)","Description":null,"QueryBody":"SELECT Posts.OwnerUserId FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id GROUP BY OwnerUserID HAVING COUNT(ParentId) = 1","CreationDate":"2018-10-31 08:18:49","validated":false,"QueryBody_Original":"SELECT  Posts.OwnerUserId from Posts inner join Users on Posts.OwnerUserId = Users.Id Group By OwnerUserID having Count(ParentId)=1"},{"QuerySetId":920394,"Title":"Total posts in period, and posts by users with reputation 1 and 101.","Description":null,"QueryBody":"SELECT TIME_TO_STR(Posts.CreationDate, '%m') AS \"month\", TIME_TO_STR(Posts.CreationDate, '%d') AS \"day\", COUNT(Posts.Id) AS \"posts\", SUM(CASE WHEN Users.Reputation = 101 THEN 1 ELSE 0 END) AS posts_101, SUM(CASE WHEN Users.Reputation = 1 THEN 1 ELSE 0 END) AS posts_1 FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeID = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND TIME_TO_STR(Posts.CreationDate, '%Y') = 2018 AND TIME_TO_STR(Posts.CreationDate, '%m') > 6 GROUP BY TIME_TO_STR(Posts.CreationDate, '%m'), TIME_TO_STR(Posts.CreationDate, '%d') ORDER BY \"month\" DESC, \"day\" DESC","CreationDate":"2018-11-04 15:35:55","validated":false,"QueryBody_Original":"SELECT \n    datepart(month, Posts.CreationDate) AS [month],\n    datepart(day, Posts.CreationDate) AS [day],\n    Count(Posts.Id) AS [posts],\n    SUM(CASE WHEN Users.Reputation = 101 THEN 1 ELSE 0 END) AS posts_101,\n    SUM(CASE WHEN Users.Reputation = 1 THEN 1 ELSE 0 END) AS posts_1\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE\n    PostTypeID = 1 and CommunityOwnedDate is null and ClosedDate is null and\n    datepart(year, Posts.CreationDate) =  2018 and\n    datepart(month, Posts.CreationDate) > 6\nGROUP BY\n    datepart(month, Posts.CreationDate), datepart(day, Posts.CreationDate)\n--    Users.Id, DisplayName\nORDER BY\n     [month] DESC, [day] DESC"},{"QuerySetId":920404,"Title":"Posts by newly created users","Description":null,"QueryBody":"SELECT TIME_TO_STR(Posts.CreationDate, '%m') AS \"month\", TIME_TO_STR(Posts.CreationDate, '%d') AS \"day\", COUNT(Posts.Id) AS \"posts\", SUM(CASE WHEN Users.CreationDate = Posts.CreationDate THEN 1 ELSE 0 END) AS posts_101, SUM(CASE WHEN Users.Reputation = 1 THEN 1 ELSE 0 END) AS posts_1 FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeID = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL AND TIME_TO_STR(Posts.CreationDate, '%Y') = 2018 AND TIME_TO_STR(Posts.CreationDate, '%m') > 6 GROUP BY TIME_TO_STR(Posts.CreationDate, '%m'), TIME_TO_STR(Posts.CreationDate, '%d') ORDER BY \"month\" DESC, \"day\" DESC","CreationDate":"2018-11-04 15:39:11","validated":false,"QueryBody_Original":"SELECT \n    datepart(month, Posts.CreationDate) AS [month],\n    datepart(day, Posts.CreationDate) AS [day],\n    Count(Posts.Id) AS [posts],\n    SUM(CASE WHEN Users.CreationDate = Posts.CreationDate THEN 1 ELSE 0 END) AS posts_101,\n    SUM(CASE WHEN Users.Reputation = 1 THEN 1 ELSE 0 END) AS posts_1\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE\n    PostTypeID = 1 and CommunityOwnedDate is null and ClosedDate is null and\n    datepart(year, Posts.CreationDate) =  2018 and\n    datepart(month, Posts.CreationDate) > 6\nGROUP BY\n    datepart(month, Posts.CreationDate), datepart(day, Posts.CreationDate)\n--    Users.Id, DisplayName\nORDER BY\n     [month] DESC, [day] DESC"},{"QuerySetId":920635,"Title":"Kendo React UI Top 100","Description":null,"QueryBody":"SELECT Posts.Id FROM Posts WHERE Posts.Tags LIKE '%kendo-react-ui%' LIMIT 1000","CreationDate":"2018-11-05 16:47:09","validated":false,"QueryBody_Original":"SELECT \n  TOP 1000\n  Posts.Id \n  From Posts WHERE Posts.Tags LIKE '%kendo-react-ui%'"},{"QuerySetId":924252,"Title":"Top 1000 Users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2018-11-08 17:30:18","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":925405,"Title":"best vba or excel posts, a week ago today","Description":"voteworthy","QueryBody":"SELECT posttypeid AS Type, id AS \"Post Link\", Creationdate AS Asked, Score, Commentcount AS Comments, answercount AS Answers, Tags, owneruserid AS \"User Link\", (SELECT reputation FROM users WHERE id = posts.owneruserid) AS \"Asker Rep\" FROM posts WHERE (tags LIKE '%excel%' OR tags LIKE '%vba>%') AND (creationdate BETWEEN DATEADD(d, -8, CAST(GETDATE() AS DATE)) AND DATEADD(d, -7, CAST(GETDATE() AS DATE))) AND body LIKE '%<\/code>%' \/* includes code *\/ ORDER BY posttypeid, score DESC, answercount DESC, commentcount DESC","CreationDate":"2018-11-11 12:53:51","validated":false,"QueryBody_Original":"SELECT \n  posttypeid as Type,\n  id as [Post Link],\n  Creationdate as Asked,\n  Score,\n  Commentcount as Comments,\n  answercount as Answers,\n  Tags,\n  owneruserid as [User Link],\n  ( SELECT reputation from users where id = posts.owneruserid) as [Asker Rep]\nfrom posts\nwhere (tags like '%excel%' or tags like '%vba>%')\n  and (creationdate between dateadd(d,-8,cast(getdate() as date)) \n  and dateadd(d,-7,cast(getdate() as date)))\n  and body like '%<\/code>%' --includes code\norder by posttypeid, score desc, answercount desc, commentcount desc"},{"QuerySetId":926713,"Title":"Random sample - data.world ","Description":null,"QueryBody":"SELECT * FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE (ABS(CAST((BINARY_CHECKSUM(*) * RAND()) AS INT)) % 100) < 1 AND Posts.AnswerCount <> 0 ORDER BY Posts.Id DESC LIMIT 50000","CreationDate":"2018-11-13 21:14:53","validated":false,"QueryBody_Original":"SELECT  TOP 50000 *\nFROM Posts\nINNER JOIN Users ON Posts.OwnerUserId = Users.Id\nWHERE (ABS(CAST(\n  (BINARY_CHECKSUM(*) *\n  RAND()) as int)) % 100) < 1\n  AND Posts.AnswerCount != 0\nORDER BY Posts.Id DESC"},{"QuerySetId":927144,"Title":"Find answers by Dan Yand to duplicate questions","Description":null,"QueryBody":"SELECT p.ParentId, p.Id AS \"Post Link\", p.Title, pp.Title FROM Posts AS p JOIN Posts AS pp ON p.ParentId = pp.Id JOIN PostHistory AS ph ON ph.PostId = pp.Id WHERE p.PostTypeId = 2 \/* answer *\/ AND p.OwnerUserId = 8620333 AND ph.PostHistoryTypeId = 10 \/* closed *\/ AND ph.Comment = 101 \/* as duplicate *\/","CreationDate":"2018-12-15 15:59:30","validated":false,"QueryBody_Original":"SELECT  p.ParentId, p.Id as [Post Link], p.Title, pp.Title\nFROM Posts p\nJOIN Posts pp ON p.ParentId = pp.Id\nJOIN PostHistory ph on ph.PostId = pp.Id \nWHERE p.PostTypeId = 2 -- answer\nAND p.OwnerUserId = 8620333\nAND ph.PostHistoryTypeId = 10 -- closed\nAND ph.Comment = 101 -- as duplicate"},{"QuerySetId":927563,"Title":"Find answers by Dan Yand to closed questions","Description":null,"QueryBody":"SELECT p.ParentId, p.Id, p.Title, pp.Title FROM Posts AS p JOIN Posts AS pp ON p.ParentId = pp.Id JOIN PostHistory AS ph ON ph.PostId = pp.Id WHERE p.PostTypeId = 2 \/* answer *\/ AND p.OwnerUserId = 206691 AND ph.PostHistoryTypeId = 10 \/* closed *\/ AND ph.Comment <> 101 \/* not as duplicate *\/","CreationDate":"2018-11-14 19:12:19","validated":false,"QueryBody_Original":"SELECT  p.ParentId, p.Id, p.Title, pp.Title\nFROM Posts p\nJOIN Posts pp ON p.ParentId = pp.Id\nJOIN PostHistory ph on ph.PostId = pp.Id \nWHERE p.PostTypeId = 2 -- answer\nAND p.OwnerUserId = 206691\nAND ph.PostHistoryTypeId = 10 -- closed\nAND ph.Comment <> 101 -- not as duplicate"},{"QuerySetId":927572,"Title":"Find users in a given reputation range","Description":null,"QueryBody":"SELECT u.Reputation, u.DisplayName FROM Users AS u WHERE u.Reputation > 1000 AND u.Reputation < 1010","CreationDate":"2018-11-14 20:06:47","validated":false,"QueryBody_Original":"SELECT  u.Reputation, u.DisplayName \nFROM Users u \nWHERE u.Reputation > 1000 AND u.Reputation < 1010"},{"QuerySetId":927953,"Title":"Posts which had given tag in the past (no duplicates)","Description":null,"QueryBody":"SELECT DISTINCT PostHistory.PostId AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Posts.CreationDate, Posts.LastActivityDate FROM PostHistory INNER JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistoryTypeId IN (3, 6, 9) AND Text LIKE '%<##tagName##>%' ORDER BY CreationDate","CreationDate":"2018-11-15 13:41:51","validated":false,"QueryBody_Original":"SELECT \nDistinct PostHistory.PostId as [Post Link], Posts.OwnerUserId as [User Link], Posts.CreationDate, Posts.LastActivityDate\nFrom PostHistory INNER JOIN Posts\n  ON PostHistory.PostId=Posts.Id\nwhere PostHistoryTypeId in (3,6,9) and Text Like '%<##tagName##>%'\nOrder By CreationDate"},{"QuerySetId":927958,"Title":"Posts which had given tag in the past (including current tags)","Description":null,"QueryBody":"SELECT DISTINCT PostHistory.PostId AS \"Post Link\", url = 'site:\/\/posts\/' + CAST(PostHistory.PostId AS TEXT) + '\/revisions', Posts.OwnerUserId AS \"User Link\", Posts.CreationDate, Posts.LastActivityDate, Posts.Tags FROM PostHistory INNER JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistoryTypeId IN (3, 6, 9) AND Text LIKE '%<##tagName##>%' ORDER BY CreationDate","CreationDate":"2019-09-18 17:01:29","validated":false,"QueryBody_Original":"SELECT \nDistinct PostHistory.PostId as [Post Link], \nurl = 'site:\/\/posts\/' + CAST(PostHistory.PostId AS varchar)+'\/revisions',\nPosts.OwnerUserId as [User Link], Posts.CreationDate, Posts.LastActivityDate, Posts.Tags\nFrom PostHistory INNER JOIN Posts\n  ON PostHistory.PostId=Posts.Id\nwhere PostHistoryTypeId in (3,6,9) and Text Like '%<##tagName##>%'\nOrder By CreationDate"},{"QuerySetId":928915,"Title":"Find posts with a given user's comments","Description":null,"QueryBody":"SELECT c.Id AS \"Comment ID\", c.CreationDate AS \"Comment Date\", p.Id AS \"Post ID\", p.ParentId AS \"Parent ID\", pp.Title AS \"Question Title\" FROM Posts AS p JOIN Posts AS pp ON p.ParentId = pp.Id JOIN Comments AS c ON c.PostId = p.Id WHERE c.UserId = 206691","CreationDate":"2018-11-17 23:30:03","validated":false,"QueryBody_Original":"SELECT  \nc.Id AS \"Comment ID\",\nc.CreationDate AS \"Comment Date\", \np.Id AS \"Post ID\", \np.ParentId AS \"Parent ID\", \npp.Title AS \"Question Title\"\nFROM Posts p\nJOIN Posts pp ON p.ParentId = pp.Id\nJOIN Comments c ON c.PostId = p.Id\nWHERE \nc.UserId = 206691"},{"QuerySetId":929037,"Title":"When were this question's answers upvoted?","Description":null,"QueryBody":"SELECT v.CreationDate AS \"Vote Date\", p.Id AS \"Answer ID\", p.CreationDate AS \"Answer Date\", p.Score AS \"Answer Score\", p.ParentId AS \"Question ID\", pp.CreationDate AS \"Question Date\", pp.Title AS \"Question Title\" FROM Posts AS p JOIN Posts AS pp ON p.ParentId = pp.Id JOIN Votes AS v ON v.PostId = p.Id WHERE pp.Id = 1686 \/* Question ID *\/","CreationDate":"2018-11-18 05:12:45","validated":false,"QueryBody_Original":"SELECT  \nv.CreationDate AS \"Vote Date\",\np.Id AS \"Answer ID\", \np.CreationDate AS \"Answer Date\", \np.Score AS \"Answer Score\", \np.ParentId AS \"Question ID\", \npp.CreationDate AS \"Question Date\",\npp.Title AS \"Question Title\"\nFROM Posts p\nJOIN Posts pp ON p.ParentId = pp.Id\nJOIN Votes v ON v.PostId = p.Id\nWHERE pp.Id = 1686 -- Question ID"},{"QuerySetId":929073,"Title":"Find owners of questions answered by a given user","Description":null,"QueryBody":"SELECT u.DisplayName AS \"User Name\", u.Reputation AS \"User Reputation\", u.CreationDate AS \"Date\" FROM Users AS u","CreationDate":"2018-11-18 07:25:20","validated":false,"QueryBody_Original":"SELECT  \nu.DisplayName AS \"User Name\",\nu.Reputation AS \"User Reputation\",\nu.CreationDate AS \"Date\"\nFROM Users u"},{"QuerySetId":929122,"Title":"Check for profanity in usernames","Description":null,"QueryBody":"SELECT Id AS \"User Link\", DisplayName FROM users WHERE LOWER(displayname) LIKE '%##Keyword##%'","CreationDate":"2018-11-18 16:29:44","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], DisplayName \nfrom users\nwhere lower(displayname) like '%##Keyword##%'"},{"QuerySetId":929212,"Title":"Find questions with not many answers","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Score, q.ViewCount, q.AnswerCount FROM Posts AS q WHERE q.PostTypeId = 1 AND q.ClosedDate IS NULL ORDER BY q.AnswerCount, q.ViewCount DESC","CreationDate":"2018-11-18 21:03:47","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.Score, q.ViewCount, q.AnswerCount\nfrom Posts q\nwhere q.PostTypeId = 1 and q.ClosedDate IS NULL\norder by q.AnswerCount asc, q.ViewCount desc;"},{"QuerySetId":929771,"Title":"Kubernetes Questions in a Year","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts AS pP WHERE pP.PostTypeId = 1 AND pP.Tags LIKE '%kubernetes%' AND pP.Score >= 0 AND pP.CreationDate >= '2012-01-01' AND pP.CreationDate <= '2014-12-30'","CreationDate":"2018-11-29 17:36:13","validated":false,"QueryBody_Original":"SELECT  count(*) from posts pP where \npP.PostTypeId=1 and pP.Tags like '%kubernetes%'\nand pP.Score >= 0\nand pP.CreationDate >= '2012-01-01'\nand pP.CreationDate <= '2014-12-30'"},{"QuerySetId":929783,"Title":"Users with mediocre posting history","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(p.Id) AS posts, Reputation FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE Reputation < 500 AND u.CreationDate > '2018-01-01' AND NOT ProfileImageUrl LIKE '%d=identicon%' GROUP BY u.Id, Reputation HAVING COUNT(p.Id) >= 10 ORDER BY COUNT(p.Id) DESC","CreationDate":"2018-11-19 22:42:21","validated":false,"QueryBody_Original":"SELECT  u.Id as [User Link], count(p.Id) posts, Reputation\nfrom Posts p\n     join Users u on u.Id = p.OwnerUserId\nwhere Reputation < 500\n      and u.CreationDate > '2018-01-01'\n      and ProfileImageUrl not like '%d=identicon%'\ngroup by u.Id, Reputation\nhaving count(p.Id) >= 10\norder by count(p.Id) desc"},{"QuerySetId":929830,"Title":"Algerian Users (Order by Rep)","Description":null,"QueryBody":"SELECT * FROM Users AS U WHERE U.Location LIKE '%lgeria%' ORDER BY U.Reputation DESC","CreationDate":"2018-11-20 00:02:16","validated":false,"QueryBody_Original":"SELECT  *\nFROM Users U\nWHERE U.Location LIKE '%lgeria%'\nORDER BY U.Reputation DESC;"},{"QuerySetId":930250,"Title":"Scala - Poland - Top Users","Description":null,"QueryBody":"SELECT u.DisplayName, u.Reputation, u.websiteurl, COUNT(*) AS ScalaAnswers FROM Users AS u, Posts AS p, Posts AS pp WHERE u.Id IN (SELECT Id FROM Users WHERE Location LIKE ('%Germany')) AND p.OwnerUserId = u.Id AND pp.Id = p.ParentId AND pp.Tags LIKE ('%<Scala>%') GROUP BY u.DisplayName, u.Reputation, u.websiteurl ORDER BY ScalaAnswers DESC","CreationDate":"2018-11-20 15:00:03","validated":false,"QueryBody_Original":"SELECT  u.DisplayName, u.Reputation, u.websiteurl, count(*) as ScalaAnswers from Users u, Posts p, Posts pp where u.Id in (\n    SELECT Id\n    from Users \n    where Location like ('%Germany')\n  )\n  and p.OwnerUserId = u.Id\n  and pp.Id = p.ParentId\n  and pp.Tags like ('%<Scala>%')\n  group by u.DisplayName, u.Reputation, u.websiteurl\n  order by ScalaAnswers desc"},{"QuerySetId":931244,"Title":"Percentage of (non-deleted) questions which get closed as duplicates, month by month","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, Posts.CreationDate), 0) AS \"MONTH\", CAST(COUNT(CASE WHEN (NOT Posts.ClosedDate IS NULL AND PostHistory.PostHistoryTypeId = 10 AND PostHistory.Comment IN ('1', '101')) THEN 1 ELSE NULL END) AS FLOAT) * 100 \/ COUNT(CASE WHEN PostHistory.PostHistoryTypeId = 1 THEN 1 ELSE NULL END) AS \"DupePercentage\" FROM Posts LEFT JOIN PostHistory ON Posts.Id = PostHistory.PostId WHERE Posts.PostTypeId = 1 AND PostHistory.PostHistoryTypeId IN (1, 10) GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, Posts.CreationDate), 0) ORDER BY \"MONTH\" DESC","CreationDate":"2018-11-22 18:22:11","validated":false,"QueryBody_Original":"SELECT \n  DATEADD(MONTH, DATEDIFF(MONTH, 0, Posts.CreationDate), 0) AS [MONTH],\n  CAST(COUNT(\n   CASE WHEN (\n         Posts.ClosedDate IS NOT NULL\n     AND PostHistory.PostHistoryTypeId = 10\n     AND PostHistory.Comment IN ('1', '101')\n   ) THEN 1 ELSE NULL END\n   ) AS FLOAT) * 100 \/ COUNT(\n     CASE WHEN PostHistory.PostHistoryTypeId = 1 THEN 1 ELSE NULL END\n   ) AS 'DupePercentage'\nFROM Posts\nLEFT JOIN PostHistory ON Posts.Id = PostHistory.PostId\nWHERE Posts.PostTypeId = 1\n  AND PostHistory.PostHistoryTypeId IN (1, 10)\nGROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, Posts.CreationDate), 0)\nORDER BY [MONTH] DESC"},{"QuerySetId":931743,"Title":"Getting Python DS related content","Description":null,"QueryBody":"SELECT Id, Score, ViewCount, Title, Tags, CommentCount, FavoriteCount FROM Posts WHERE PostTypeId = 1 AND DeletionDate IS NULL AND (Tags LIKE '%python%' OR Tags LIKE '%sql%' OR Tags LIKE '%numpy%' OR Tags LIKE '%scikit-learn%' OR Tags LIKE '%sklearn%' OR Tags LIKE '%numpy%' OR Tags LIKE '%scipy%' OR Tags LIKE '%pandas%' OR (Tags LIKE '%xgboost%' AND Tags LIKE '%python%') OR (Tags LIKE '%catboost%' AND Tags LIKE '%python%') OR (Tags LIKE '%prophet%' AND Tags LIKE '%python%') OR (Tags LIKE '%spark%' AND Tags LIKE '%python%') OR (Tags LIKE '%machine-learning%' AND Tags LIKE '%python%') OR (Tags LIKE '%probability%' AND Tags LIKE '%python%'))","CreationDate":"2018-11-23 16:27:50","validated":false,"QueryBody_Original":"SELECT  Id, Score, ViewCount, Title, Tags, CommentCount, FavoriteCount\nFROM Posts\nWHERE PostTypeId = 1\nAND DeletionDate IS NULL\nAND (\nTags LIKE '%python%'\nOR Tags LIKE '%sql%'\nOR Tags LIKE '%numpy%'\nOR Tags LIKE '%scikit-learn%'\nOR Tags LIKE '%sklearn%'\nOR Tags LIKE '%numpy%'\nOR Tags LIKE '%scipy%'\nOR Tags LIKE '%pandas%'\nOR (Tags LIKE '%xgboost%' AND Tags LIKE '%python%')\nOR (Tags LIKE '%catboost%' AND Tags LIKE '%python%')\nOR (Tags LIKE '%prophet%' AND Tags LIKE '%python%')\nOR (Tags LIKE '%spark%' AND Tags LIKE '%python%')\nOR (Tags LIKE '%machine-learning%' AND Tags LIKE '%python%')\nOR (Tags LIKE '%probability%' AND Tags LIKE '%python%')\n)"},{"QuerySetId":931750,"Title":"My must up-voted comment ","Description":null,"QueryBody":"SELECT postID AS \"Post Link\", Text, CreationDate AS \"Date\", Score FROM Comments WHERE UserId = '965146' AND Score > 4","CreationDate":"2018-11-23 16:52:42","validated":false,"QueryBody_Original":"SELECT  \n  postID [Post Link]\n  , Text\n  , CreationDate [Date]\n  , Score\nFROM \n  Comments\nWHERE UserId = '965146'\n  AND Score > 4"},{"QuerySetId":932200,"Title":"Who else has answered the same questions","Description":null,"QueryBody":"SELECT c.Id AS \"Comment ID\", c.CreationDate AS \"Comment Date\", u.DisplayName AS \"Post Owner\", p.Id AS \"Post ID\", p.Title AS \"Post Title\", p.parentId AS \"Parent ID\" FROM Posts AS p JOIN Comments AS c ON c.PostId = p.Id JOIN Users AS u ON u.Id = p.OwnerUserId WHERE c.UserId = 206691","CreationDate":"2018-11-24 08:47:19","validated":false,"QueryBody_Original":"SELECT  \nc.Id AS \"Comment ID\",\nc.CreationDate AS \"Comment Date\", \nu.DisplayName AS \"Post Owner\", \np.Id AS \"Post ID\", \np.Title AS \"Post Title\",\np.parentId AS \"Parent ID\"\nFROM Posts p\nJOIN Comments c ON c.PostId = p.Id\nJOIN Users u ON u.Id = p.OwnerUserId\nWHERE c.UserId = 206691"},{"QuerySetId":932440,"Title":"Top 100 Users in Mozambique","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", AboutMe, Reputation FROM Users WHERE LOWER(Location) LIKE '%mozambique%' OR UPPER(Location) LIKE '%MOZ' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2018-11-24 18:06:40","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    AboutMe,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%mozambique%'\n    OR UPPER(Location) LIKE '%MOZ'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":932576,"Title":"Who else has answered the same questions?","Description":null,"QueryBody":"SELECT u.Id AS \"Other User ID\", u.DisplayName AS \"Name\", u.Reputation AS \"Reputation\", co.CreationDate AS \"Comment Date\", p.Id AS \"Post ID\", p.Title AS \"Title\" FROM Posts AS p JOIN Comments AS c ON c.PostId = p.Id JOIN Comments AS co ON co.PostId = p.Id JOIN Users AS u ON co.UserId = u.Id WHERE c.UserId = 206691 AND co.userId <> 206691 AND p.OwnerUserId <> 206691","CreationDate":"2018-11-24 22:30:23","validated":false,"QueryBody_Original":"SELECT \nu.Id AS \"Other User ID\",\nu.DisplayName AS \"Name\",\nu.Reputation AS \"Reputation\",\nco.CreationDate AS \"Comment Date\", \np.Id AS \"Post ID\", \np.Title AS \"Title\"\nFROM Posts p\nJOIN Comments c ON c.PostId = p.Id\nJOIN Comments co ON co.PostId = p.Id\nJOIN Users u ON co.UserId = u.Id\nWHERE c.UserId = 206691\nAND co.userId <> 206691\nAND p.OwnerUserId <> 206691"},{"QuerySetId":932611,"Title":"Who else has commented on the same posts?","Description":null,"QueryBody":"SELECT u.Id AS \"Other User ID\", u.DisplayName AS \"Name\", u.Reputation AS \"Reputation\", co.CreationDate AS \"Comment Date\", p.Id AS \"Answer ID\", pp.Id AS \"Question ID\", pp.Title AS \"Title\" FROM Posts AS p JOIN Posts AS pp ON pp.Id = p.ParentId JOIN Comments AS c ON c.PostId = p.Id JOIN Comments AS co ON co.PostId = p.Id JOIN Users AS u ON co.UserId = u.Id WHERE p.PostTypeId = 2 \/* answer *\/ AND c.UserId = 206691 AND co.userId <> 206691 AND p.OwnerUserId <> 206691","CreationDate":"2018-11-24 22:53:42","validated":false,"QueryBody_Original":"SELECT \nu.Id AS \"Other User ID\",\nu.DisplayName AS \"Name\",\nu.Reputation AS \"Reputation\",\nco.CreationDate AS \"Comment Date\", \np.Id AS \"Answer ID\", \npp.Id AS \"Question ID\", \npp.Title AS \"Title\"\nFROM Posts p\nJOIN Posts pp ON pp.Id = p.ParentId\nJOIN Comments c ON c.PostId = p.Id\nJOIN Comments co ON co.PostId = p.Id\nJOIN Users u ON co.UserId = u.Id\nWHERE p.PostTypeId = 2 -- answer\nAND c.UserId = 206691\nAND co.userId <> 206691\nAND p.OwnerUserId <> 206691"},{"QuerySetId":932674,"Title":"Find questions with a given user's comments","Description":null,"QueryBody":"SELECT c.Id AS \"Comment ID\", c.CreationDate AS \"Comment Date\", u.Id AS \"User ID\", u.DisplayName AS \"User Name\", a.Id AS \"Answer ID\", q.Id AS \"Question ID\", q.Title AS \"Question Title\" FROM Posts AS a JOIN Posts AS q ON q.Id = a.ParentId JOIN Comments AS c ON c.PostId = a.Id JOIN Users AS u ON u.Id = a.OwnerUserId WHERE c.UserId = 206691 AND a.OwnerUserId <> 206691","CreationDate":"2018-11-25 00:33:00","validated":false,"QueryBody_Original":"SELECT  \nc.Id AS \"Comment ID\",\nc.CreationDate AS \"Comment Date\", \nu.Id AS \"User ID\", \nu.DisplayName AS \"User Name\", \na.Id AS \"Answer ID\", \nq.Id AS \"Question ID\", \nq.Title AS \"Question Title\"\nFROM Posts a\nJOIN Posts q ON q.Id = a.ParentId\nJOIN Comments c ON c.PostId = a.Id\nJOIN Users u ON u.Id = a.OwnerUserId\nWHERE c.UserId = 206691\nAND a.OwnerUserId <> 206691"},{"QuerySetId":933755,"Title":"select * where tags='python' ","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags = 'python'","CreationDate":"2018-11-26 07:52:07","validated":false,"QueryBody_Original":"SELECT  * from Posts where Tags='python'"},{"QuerySetId":934510,"Title":"A glance at Posts table","Description":null,"QueryBody":"SELECT p.Id, p.PostTypeId, p.OwnerUserId, p.CreationDate, p.Body, p.Title, p.ClosedDate FROM Posts AS p WHERE p.CreationDate >= '2018-11-01 00:00:00' AND p.PostTypeId = 1 AND p.ClosedDate IS NULL","CreationDate":"2018-11-27 09:01:07","validated":false,"QueryBody_Original":"SELECT  p.Id, p.PostTypeId, p.OwnerUserId, p.CreationDate, p.Body, p.Title, p.ClosedDate\nfrom Posts p\nwhere p.CreationDate >= '2018-11-01 00:00:00' and p.PostTypeId = 1 and p.ClosedDate is null"},{"QuerySetId":935101,"Title":"Time for some more swag!","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY COUNT(Votes.Id) DESC), Users.DisplayName, COUNT(Votes.Id) FROM Votes JOIN Posts ON Votes.PostId = Posts.Id JOIN Users ON Posts.OwnerUserId = Users.Id\/* Up *\/  WHERE Posts.ParentId = 318910 AND Votes.VoteTypeId = 2 AND Votes.CreationDate < '2018-12-27 23:59:59' GROUP BY Users.DisplayName ORDER BY COUNT(Votes.Id) DESC","CreationDate":"2018-11-28 01:15:49","validated":false,"QueryBody_Original":"SELECT  row_number() over (order by count(Votes.Id) DESC), Users.DisplayName, count(Votes.Id)\nfrom Votes\njoin Posts on Votes.PostId = Posts.Id\njoin Users on Posts.OwnerUserId = Users.Id\nwhere\nPosts.ParentId = 318910 and\nVotes.VoteTypeId = 2 and -- Up\nVotes.CreationDate < '2018-12-27 23:59:59'\ngroup by Users.DisplayName\norder by count(Votes.Id) DESC"},{"QuerySetId":935276,"Title":"Top 50 Mobile Developers from Gujarat","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kochi%' AND (LOWER(AboutMe) LIKE '%android%') ORDER BY Reputation DESC LIMIT 50","CreationDate":"2018-11-28 11:52:42","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    lower(Location) LIKE '%kochi%' AND\n    (lower(AboutMe) LIKE '%android%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":935485,"Title":"Get latest questions and Ids","Description":null,"QueryBody":"SELECT id, title, communityowneddate AS body FROM posts ORDER BY creationdate DESC LIMIT 5","CreationDate":"2018-11-28 19:20:36","validated":false,"QueryBody_Original":"SELECT  TOP 5\n  id,title,communityowneddate\n  body\nFROM\n  posts\nORDER BY\n  creationdate\nDESC"},{"QuerySetId":935560,"Title":"Titre des 10 derni\u00e8res questions pos\u00e9es et pseudo de l'auteur","Description":null,"QueryBody":"SELECT MONTH(10)","CreationDate":"2018-11-28 20:36:10","validated":false,"QueryBody_Original":"SELECT  Month(10)"},{"QuerySetId":935661,"Title":"Calculate Percentage of DBA Users per User and Regular DBA Users per User","Description":null,"QueryBody":"SELECT COUNT(dbau.DisplayName) AS NumberUsers, (SELECT COUNT(dbau2.DisplayName) FROM Users AS dbau2 WHERE dbau2.LastAccessDate > (CURRENT_TIMESTAMP() - 365)) AS NumberRegulars, 1.0 * 100 \/ COUNT(dbau.DisplayName) AS PercentageOfUsersPerUser, 1.0 * 100 \/ (SELECT COUNT(dbau2.DisplayName) AS RegularUser FROM Users AS dbau2 WHERE dbau2.LastAccessDate > (CURRENT_TIMESTAMP() - 365)) AS PercentageOfRegularsPerUser FROM Users AS dbau","CreationDate":"2018-11-28 20:15:51","validated":false,"QueryBody_Original":"SELECT   count(dbau.DisplayName) as NumberUsers,\n(SELECT count(dbau2.DisplayName) from Users as dbau2 where dbau2.LastAccessDate > (getdate() - 365)) as NumberRegulars, \n        1.0*100\/count(dbau.DisplayName) as PercentageOfUsersPerUser,\n        1.0*100\/(SELECT count(dbau2.DisplayName) as RegularUser from Users as dbau2 where dbau2.LastAccessDate > (getdate() - 365)) as PercentageOfRegularsPerUser\nfrom Users as dbau;\nGO"},{"QuerySetId":935668,"Title":"Est-ce que mbraux (un pseudo au hasard :) a d\u00e9j\u00e0 publi\u00e9 un post ?","Description":null,"QueryBody":"SELECT p.id FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'mbraux'","CreationDate":"2018-12-20 17:06:12","validated":false,"QueryBody_Original":"SELECT  p.id\nfrom Posts p \njoin Users u on p.OwnerUserId=u.Id\nwhere u.DisplayName='mbraux'"},{"QuerySetId":935690,"Title":"Est-ce que 'mbraux' (un pseudo au hasard :) a d\u00e9j\u00e0 publi\u00e9 un post ?","Description":null,"QueryBody":"SELECT COUNT(p.id) FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mat Mannion' GROUP BY p.id","CreationDate":"2020-05-15 01:46:33","validated":false,"QueryBody_Original":"SELECT  COUNT(p.id)\nfrom Posts p \njoin Users u on p.OwnerUserId=u.Id\nwhere u.DisplayName='Mat Mannion'\ngroup by p.id"},{"QuerySetId":935881,"Title":"Combien d'utilisateurs ont comme pseudo 'John Snow' ?","Description":null,"QueryBody":"SELECT COUNT(DisplayName) FROM Users WHERE DisplayName = 'John Snow' GROUP BY DisplayName","CreationDate":"2018-12-20 17:18:13","validated":false,"QueryBody_Original":"SELECT  COUNT(DisplayName)\nfrom Users\nwhere DisplayName='John Snow'\ngroup by DisplayName"},{"QuerySetId":935908,"Title":"Le jour du mois o\u00f9 le plus grand nombre de questions ont \u00e9t\u00e9 pos\u00e9es en octobre 2018","Description":null,"QueryBody":"SELECT DAY(creationdate) FROM posts WHERE YEAR(creationdate) = 2018 AND MONTH(creationdate) = 10","CreationDate":"2018-12-20 17:07:01","validated":false,"QueryBody_Original":"SELECT  DAY(creationdate) from posts\nwhere YEAR(creationdate)=2018 and MONTH(creationdate)=10"},{"QuerySetId":936245,"Title":"Users in Your City (with user-links)","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location, WebsiteUrl, AccountId, ProfileImageUrl FROM Users WHERE Location LIKE '%##Location##%' AND AboutMe LIKE '%Full Stack%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%full-stack%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%Full Stack%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%fullstack%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%FSD%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%fsd%' ORDER BY Reputation DESC","CreationDate":"2018-11-29 21:40:49","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location, WebsiteUrl, AccountId, ProfileImageUrl  \nfrom Users\nwhere Location like '%##Location##%'and AboutMe like '%Full Stack%' OR\n Location like '%##Location##%'and AboutMe like '%full-stack%' OR\n Location like '%##Location##%'and AboutMe like '%Full Stack%' OR\n Location like '%##Location##%'and AboutMe like '%fullstack%' OR\n Location like '%##Location##%'and AboutMe like '%FSD%' OR\n Location like '%##Location##%'and AboutMe like '%fsd%'\norder by Reputation desc"},{"QuerySetId":936692,"Title":"Find Full Stacks in certain Country\/City","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, Location, WebsiteUrl, AccountId, ProfileImageUrl FROM Users WHERE Location LIKE '%##Location##%' AND AboutMe LIKE '%Full Stack%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%full-stack%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%Full Stack%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%fullstack%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%FSD%' OR Location LIKE '%##Location##%' AND AboutMe LIKE '%fsd%' ORDER BY Reputation DESC","CreationDate":"2018-11-29 21:46:15","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, Location, WebsiteUrl, AccountId, ProfileImageUrl  \nfrom Users\nwhere Location like '%##Location##%'and AboutMe like '%Full Stack%' OR\n Location like '%##Location##%'and AboutMe like '%full-stack%' OR\n Location like '%##Location##%'and AboutMe like '%Full Stack%' OR\n Location like '%##Location##%'and AboutMe like '%fullstack%' OR\n Location like '%##Location##%'and AboutMe like '%FSD%' OR\n Location like '%##Location##%'and AboutMe like '%fsd%'\norder by Reputation desc"},{"QuerySetId":937982,"Title":"select  top(10)  id  from posts intersect  select postid from PostHistory","Description":null,"QueryBody":"SELECT * FROM posts WHERE id = 45551035","CreationDate":"2018-11-30 11:29:19","validated":false,"QueryBody_Original":"SELECT   * \nfrom posts\nwhere id =45551035\n\n--where id not in (SELECT postid from PostHistory)"},{"QuerySetId":938210,"Title":"Migrations causing untagged questions, networkwide","Description":null,"QueryBody":"SELECT COUNT(*) FROM PostHistory AS hit INNER JOIN PostHistory AS hmig ON hit.PostId = hmig.PostId WHERE hit.PostHistoryTypeId = 3 \/* Initial tags *\/ AND hit.Text = '<untagged>' AND hmig.PostHistoryTypeId = 36 \/* Migrated here *\/","CreationDate":"2018-11-30 20:02:14","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\n  FROM PostHistory AS hit\n  INNER JOIN PostHistory AS hmig\n    ON hit.PostId = hmig.PostId\n  WHERE hit.PostHistoryTypeId = 3 -- Initial tags\n    AND hit.Text = '<untagged>'\n    AND hmig.PostHistoryTypeId = 36 -- Migrated here"},{"QuerySetId":938780,"Title":"How many users have answered more than N questions","Description":null,"QueryBody":"SELECT CommentCount, COUNT(*) FROM Posts WHERE PostTypeId = 1 AND CreationDate > DATEADD(DAY, -90, CURRENT_TIMESTAMP()) AND AnswerCount = 0 GROUP BY CommentCount","CreationDate":"2018-12-01 23:55:56","validated":false,"QueryBody_Original":"SELECT  CommentCount, count(*)\nfrom Posts\nwhere PostTypeId=1\nAND CreationDate > DATEADD(DAY, -90, CURRENT_TIMESTAMP)\nAND AnswerCount=0\ngroup by CommentCount"},{"QuerySetId":939071,"Title":"Top 1000 users in Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Reputation, Users.Location, Users.UpVotes, Users.DownVotes, Users.CreationDate FROM Users WHERE LOWER(Location) LIKE '%france' OR LOWER(Location) LIKE '%paris' OR LOWER(Location) LIKE '%lyon' OR LOWER(Location) LIKE '%marseille' OR LOWER(Location) LIKE '%toulouse' OR LOWER(Location) LIKE '%nice' OR LOWER(Location) LIKE '%lille' OR LOWER(Location) LIKE '%bordeaux' OR LOWER(Location) LIKE '%nantes' OR LOWER(Location) LIKE '%strasbourg' OR LOWER(Location) LIKE '%montpellier' OR LOWER(Location) LIKE '%rennes' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2018-12-02 21:20:30","validated":false,"QueryBody_Original":"SELECT  TOP 1000 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link],\n    Users.Reputation,\n    Users.Location,\n    Users.UpVotes,\n    Users.DownVotes,\n    Users.CreationDate \n    \nFROM\n    Users\nWHERE\n  LOWER(Location) LIKE '%france'\n  OR LOWER(Location) LIKE '%paris'\n  OR LOWER(Location) LIKE '%lyon'\n  OR LOWER(Location) LIKE '%marseille'\n  OR LOWER(Location) LIKE '%toulouse'\n  OR LOWER(Location) LIKE '%nice'\n  OR LOWER(Location) LIKE '%lille'\n  OR LOWER(Location) LIKE '%bordeaux'\n  OR LOWER(Location) LIKE '%nantes'\n  OR LOWER(Location) LIKE '%strasbourg'\n  OR LOWER(Location) LIKE '%montpellier'\n  OR LOWER(Location) LIKE '%rennes'\n  \n  \nORDER BY\n    Reputation DESC;"},{"QuerySetId":939073,"Title":"Top 250 users From Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Reputation, Users.Location, Users.UpVotes, Users.DownVotes, Users.CreationDate FROM Users WHERE LOWER(Location) LIKE '%khulna%' ORDER BY Reputation DESC LIMIT 250","CreationDate":"2018-12-16 19:26:48","validated":false,"QueryBody_Original":"SELECT  TOP 250 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link],\n    Users.Reputation,\n    Users.Location,\n    Users.UpVotes,\n    Users.DownVotes,\n    Users.CreationDate \n    \nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%khulna%'\n\nORDER BY\n    Reputation DESC;"},{"QuerySetId":939407,"Title":"Users with most Revival Badges","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS Badges FROM Badges WHERE Badges.Name = 'Revival' GROUP BY UserId ORDER BY Badges DESC LIMIT 100","CreationDate":"2019-04-15 10:49:20","validated":false,"QueryBody_Original":"SELECT  TOP 100 UserId AS [User Link], count(*) AS Badges\nFROM Badges\nWHERE Badges.Name = 'Revival'\nGROUP BY UserId\nORDER BY Badges DESC"},{"QuerySetId":939691,"Title":"Average number of questions per day, over a week - about Apache Beam + Stack Overflow","Description":null,"QueryBody":"\/* TOP 20 *\/ SELECT MIN(Posts.CreationDate) AS period, SUM(CASE WHEN Posts.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"questions per month\" FROM Posts WHERE Posts.PostTypeId = 1 AND (Posts.Tags LIKE '%apache-beam%' OR Posts.Tags LIKE '%google-cloud-dataflow%') GROUP BY TIME_TO_STR(Posts.CreationDate, '%m'), TIME_TO_STR(Posts.CreationDate, '%Y') ORDER BY period","CreationDate":"2020-08-14 04:58:13","validated":false,"QueryBody_Original":"SELECT  --TOP 20\n   --DATEPART(week, Posts.CreationDate)\n   --CONVERT(date, Posts.CreationDate),\n   MIN(Posts.CreationDate) as period,\n   SUM(CASE WHEN Posts.PostTypeId=1 THEN 1 ELSE 0 END) as 'questions per month'\nFROM Posts\n    \nWHERE \n    Posts.PostTypeId = 1 AND (Posts.Tags LIKE '%apache-beam%' OR Posts.Tags LIKE '%google-cloud-dataflow%')\n  GROUP BY DATEPART(month, Posts.CreationDate), DATEPART(year, Posts.CreationDate)\n  ORDER BY period;"},{"QuerySetId":940001,"Title":"WHERE with an equality search","Description":null,"QueryBody":"SELECT * FROM dbo.Users WHERE Reputation > 250000","CreationDate":"2018-12-04 13:27:22","validated":false,"QueryBody_Original":"SELECT  * FROM dbo.Users WHERE Reputation > 250000"},{"QuerySetId":941053,"Title":"advice in comments about googling","Description":null,"QueryBody":"SELECT * FROM comments WHERE userid = '9337071' AND text LIKE '%google%' COLLATE SQL_Latin1_General_CP1_CI_AS","CreationDate":"2018-12-06 02:48:50","validated":false,"QueryBody_Original":"SELECT \n  *\nfrom comments \nwhere userid = '9337071'\nand text like '%google%' COLLATE SQL_Latin1_General_CP1_CI_AS"},{"QuerySetId":941635,"Title":"Top 20 Bounty hunters per # of bounties and rep","Description":null,"QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", COUNT(*) AS \"Bounties Won\", SUM(Votes.BountyAmount) AS \"Rep Gained\" FROM Votes INNER JOIN Posts ON Votes.PostId = Posts.Id WHERE VoteTypeId = 9 GROUP BY Posts.OwnerUserId ORDER BY 2 DESC LIMIT 20","CreationDate":"2018-12-06 23:39:49","validated":false,"QueryBody_Original":"SELECT  Top 20\nPosts.OwnerUserId AS [User Link], COUNT(*) AS [Bounties Won], SUM (Votes.BountyAmount) AS [Rep Gained]\nFROM Votes\n  INNER JOIN Posts ON Votes.PostId = Posts.Id\nWHERE\n  VoteTypeId=9\nGROUP BY Posts.OwnerUserId\nORDER BY 2 DESC"},{"QuerySetId":942015,"Title":"Evolution of the time between the question and the question","Description":null,"QueryBody":"SELECT CAST(q.CreationDate AS DATE) AS \"Date\", DATEDIFF(a.CreationDate, q.CreationDate) AS \"Delay to answer\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.PostTypeId = 1 AND a.PostTypeId = 2 ORDER BY 'Date' DESC","CreationDate":"2018-12-07 16:24:47","validated":false,"QueryBody_Original":"SELECT \n  CAST(q.CreationDate AS DATE) AS 'Date',\n  DATEDIFF(DAY,q.CreationDate,a.CreationDate) AS 'Delay to answer'\nFROM\n  Posts q\n  inner join Posts a ON a.ParentId=q.Id\nWHERE\n  q.PostTypeId = 1\n  and a.PostTypeId = 2\nORDER BY 'Date' DESC"},{"QuerySetId":943117,"Title":"Enter a tilte for your query","Description":null,"QueryBody":"SELECT * FROM Comments WHERE Userid = 1505120","CreationDate":"2018-12-09 14:20:09","validated":false,"QueryBody_Original":"SELECT  * from Comments where Userid = 1505120"},{"QuerySetId":943621,"Title":"c# questions by user > 100 repu","Description":null,"QueryBody":"SELECT * FROM posts WHERE AnswerCount = 0 AND tags LIKE '%c#%' AND OwnerUserId IN (SELECT ID FROM users WHERE Reputation > 100) ORDER BY LastEditDate DESC LIMIT 30","CreationDate":"2018-12-10 13:29:51","validated":false,"QueryBody_Original":"SELECT  TOP 30 * FROM posts where AnswerCount = 0 and tags LIKE '%c#%' and OwnerUserId IN (SELECT ID from users WHERE Reputation > 100) ORDER By LastEditDate DESC"},{"QuerySetId":943702,"Title":"Top 50 Sri Lankan Developers who are on Stackoverflow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Users.Reputation DESC) AS \"#\", Users.Id AS \"User Link\", Users.Location, Users.Reputation, Users.UpVotes, Users.DownVotes, (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS \"Questions\", (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS \"Answers\" FROM Users WHERE LOWER(Location) LIKE '%lanka%' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2018-12-10 16:21:19","validated":false,"QueryBody_Original":"SELECT  TOP 50 ROW_NUMBER() OVER(ORDER BY Users.Reputation DESC) AS [#], \n    Users.Id AS [User Link], \n    Users.Location,\n    Users.Reputation,\n    Users.UpVotes,\n    Users.DownVotes,\n    (SELECT COUNT(*) FROM Posts AS PQ WHERE PostTypeId = 1 AND PQ.OwnerUserId = Users.Id) AS [Questions],\n    (SELECT COUNT(*) FROM Posts AS PA WHERE PostTypeId = 2 AND PA.OwnerUserId = Users.Id) AS [Answers]\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%lanka%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":944460,"Title":"Users by Badge and Votes","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rank, Comments.UserId AS \"User Link\", COUNT(*) AS \"Comments\", Users.UpVotes AS \"UpVotes\", Users.DownVotes AS \"DownVotes\" FROM Comments INNER JOIN Users ON Users.id = Comments.UserId GROUP BY Comments.UserId, Users.UpVotes, Users.DownVotes ORDER BY Comments DESC LIMIT 12000","CreationDate":"2018-12-11 22:02:45","validated":false,"QueryBody_Original":"SELECT  TOP 12000\n  row_number() over(order by count(*) desc) as rank, \n  Comments.UserId AS [User Link],\n  COUNT(*) AS 'Comments',\n  Users.UpVotes AS 'UpVotes',\n  Users.DownVotes AS 'DownVotes'\nFROM\n  Comments\nINNER JOIN\n  Users\nON\n  Users.id = Comments.UserId \nGROUP BY\n  Comments.UserId, Users.UpVotes, Users.DownVotes\nORDER BY\n  Comments DESC"},{"QuerySetId":944739,"Title":"Number of users on the Southern Hemisphere","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Count\" FROM Users WHERE NOT Location IN ('Angola', 'Botswana', 'Burundi', 'Comoros', 'Lesotho', 'Madagascar', 'Malawi', 'Mauritius', 'Mayotte', 'France', 'Mozambique', 'Namibia', 'R\u00e9union', 'France', 'Rwanda', 'Seychelles', 'South Africa', 'Swaziland', 'Tanzania', 'Zambia', 'Zimbabwe', 'Democratic Republic of the Congo', 'Gabon', 'Republic of the Congo', 'Equatorial Guinea', 'Kenya', 'S\u00e3o Tom\u00e9 and Pr\u00edncipe', 'Somalia', 'Uganda', 'East Timor', 'Indonesia', 'Maldives', 'Australia', 'Papua New Guinea', 'Argentina', 'Bolivia', 'Chile', 'Paraguay', 'Peru', 'Uruguay', 'Brazil', 'Ecuador', 'Colombia') ORDER BY Count DESC","CreationDate":"2018-12-12 09:58:36","validated":false,"QueryBody_Original":"SELECT  COUNT(*) \"Count\"\nFROM\n    Users\nWHERE \nLocation not in\n('Angola', 'Botswana', 'Burundi', 'Comoros', 'Lesotho', 'Madagascar', 'Malawi', 'Mauritius', 'Mayotte', 'France', 'Mozambique', 'Namibia', 'R\u00e9union', 'France', 'Rwanda', 'Seychelles', 'South Africa', 'Swaziland', 'Tanzania', 'Zambia', 'Zimbabwe', 'Democratic Republic of the Congo', 'Gabon', 'Republic of the Congo', 'Equatorial Guinea', 'Kenya', 'S\u00e3o Tom\u00e9 and Pr\u00edncipe', 'Somalia', 'Uganda', 'East Timor', 'Indonesia', 'Maldives', 'Australia', 'Papua New Guinea', 'Argentina', 'Bolivia', 'Chile', 'Paraguay', 'Peru', 'Uruguay', 'Brazil', 'Ecuador', 'Colombia')\nORDER BY\n    Count DESC"},{"QuerySetId":945793,"Title":"My Most Upvoted Comments (including comment text)","Description":"My comments with at least one upvote, in order with most upvoted-comments first.","QueryBody":"SELECT postID AS \"Post Link\", Score, Text FROM Comments ORDER BY Score DESC LIMIT 10","CreationDate":"2020-11-28 14:20:57","validated":false,"QueryBody_Original":"SELECT  TOP 10 \npostID [Post Link], Score, Text\n\nFROM \n    Comments\nORDER BY Score Desc"},{"QuerySetId":945937,"Title":"Most disliked users of the site","Description":null,"QueryBody":"SELECT * FROM (SELECT DownRank + RepRank AS RawRank, RankedDowns.UserId, RankedDowns.Downs, RankedDowns.DownRank, RepRank.Reputation, RepRank.RepRank FROM (SELECT UserId, Downs, DENSE_RANK() OVER (ORDER BY Downs DESC) AS DownRank FROM (SELECT Posts.OwnerUserId AS UserId, COUNT(*) AS Downs FROM Votes, Posts WHERE Votes.PostId = Posts.Id AND Votes.VoteTypeId = 3 GROUP BY Posts.OwnerUserId) AS Downs) AS RankedDowns, (SELECT Id AS UserId, Reputation, DENSE_RANK() OVER (ORDER BY Reputation DESC) AS RepRank FROM Users) AS RepRank WHERE RankedDowns.UserId = RepRank.UserId) AS Raw ORDER BY RawRank LIMIT 100","CreationDate":"2018-12-13 23:39:50","validated":false,"QueryBody_Original":"SELECT  TOP 100 *\nFROM (\n  SELECT\n    DownRank + RepRank AS RawRank,\n    RankedDowns.UserId, RankedDowns.Downs, RankedDowns.DownRank,\n    RepRank.Reputation, RepRank.RepRank\n  FROM (\n    SELECT\n      UserId,\n      Downs,\n      DENSE_RANK() OVER (ORDER BY Downs DESC) AS DownRank\n    FROM (\n      SELECT Posts.OwnerUserId AS UserId, COUNT(*) AS Downs\n      FROM Votes, Posts\n      WHERE\n        Votes.PostId = Posts.Id\n        AND\n        Votes.VoteTypeId = 3\n      GROUP BY Posts.OwnerUserId\n    ) AS Downs\n  ) AS RankedDowns,\n  (\n    SELECT\n      Id AS UserId,\n      Reputation,\n      DENSE_RANK() OVER (ORDER BY Reputation DESC) AS RepRank\n    FROM Users\n  ) AS RepRank\n  WHERE\n    RankedDowns.UserId = RepRank.UserId\n) Raw\nORDER BY RawRank"},{"QuerySetId":945981,"Title":"Largest gap in score between question and answer","Description":null,"QueryBody":"SELECT q.id AS \"Post Link\", a.id AS \"Post Link\", q.score, a.score, a.score - q.score AS gap FROM posts AS q INNER JOIN (SELECT id, parentid, score, posttypeid, owneruserid FROM posts WHERE posttypeid = 2) AS a ON q.id = a.parentid INNER JOIN users AS u ON u.id = a.owneruserid WHERE q.posttypeid = 1 AND (a.score > q.score) ORDER BY (a.score - q.score) DESC","CreationDate":"2018-12-14 02:38:32","validated":false,"QueryBody_Original":"SELECT  q.id as [Post Link], a.id as [Post Link],\nq.score,\na.score,\na.score - q.score as gap\nfrom posts q\ninner join\n(SELECT id, parentid, score, posttypeid, owneruserid from posts where posttypeid = 2) a\non q.id = a.parentid\ninner join users u \non u.id = a.owneruserid\nwhere\nq.posttypeid = 1\nand (a.score > q.score)\norder by (a.score - q.score) desc\n;"},{"QuerySetId":945995,"Title":"Number of questions\/answers vs comments","Description":null,"QueryBody":"SELECT t1.Count_1 AS \"Number of questions and answers\", t2.Count_2 AS \"Number of comments\" FROM (SELECT COUNT(1) AS Count_1 FROM posts WHERE creationdate <= '2017-09-30') AS t1, (SELECT COUNT(1) AS Count_2 FROM comments WHERE creationdate <= '2017-09-30') AS t2","CreationDate":"2018-12-14 04:58:07","validated":false,"QueryBody_Original":"SELECT \n    t1.Count_1 AS 'Number of questions and answers', t2.Count_2 AS 'Number of comments'\n    FROM \n(SELECT count(1) AS Count_1 FROM posts WHERE creationdate <= '2017-09-30') AS t1, \n(SELECT count(1) AS Count_2 FROM comments WHERE creationdate <= '2017-09-30') AS t2"},{"QuerySetId":946082,"Title":"query that returns your FirstName, LastName, City, and Age as separate columns.","Description":null,"QueryBody":"SELECT 'Timon' AS FirstName, 'Eckert' AS LastName, 'Kru' AS City, 32 AS Age","CreationDate":"2018-12-14 12:14:56","validated":false,"QueryBody_Original":"SELECT  'Timon' As FirstName, 'Eckert' As LastName, 'Kru' As City, 32 As Age"},{"QuerySetId":946433,"Title":"Top SO users from Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%iran%' OR UPPER(Location) LIKE '%iran%' OR Location LIKE '%Iran%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-01-19 17:10:05","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%iran%'\n    OR UPPER(Location) LIKE '%iran%'\n    OR Location like '%Iran%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":946479,"Title":"Select * From Users ","Description":null,"QueryBody":"SELECT * FROM users","CreationDate":"2018-12-15 00:22:19","validated":false,"QueryBody_Original":"SELECT  * from users"},{"QuerySetId":948046,"Title":"Find my answers on closed questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", ClosedDate FROM Posts JOIN (SELECT Id AS xxx, ParentId FROM Posts WHERE OwnerUserId = 3923281) AS myPosts ON Posts.Id = myPosts.ParentId WHERE NOT ClosedDate IS NULL","CreationDate":"2018-12-18 03:04:37","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], ClosedDate\n  FROM Posts\nJOIN \n  (SELECT Id AS xxx, ParentId \n     FROM Posts \n    WHERE OwnerUserId = 3923281) myPosts\nON Posts.Id = myPosts.ParentId\nWHERE ClosedDate IS NOT NULL;"},{"QuerySetId":949662,"Title":"Posts by month of year","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE PostTypeId IN (1) AND Posts.CreationDate >= CAST('2016-12-01 00:00:00' AS DATETIME) AND Posts.CreationDate < CAST('2016-12-31 23:59:59' AS DATETIME)","CreationDate":"2019-08-07 15:41:54","validated":false,"QueryBody_Original":"SELECT \n  COUNT(Id)\nFROM\n  Posts\nWHERE\n    PostTypeId In (1) AND Posts.CreationDate >= CONVERT(DATETIME, '2016-12-01 00:00:00')\nAND Posts.CreationDate < CONVERT(DATETIME, '2016-12-31 23:59:59')"},{"QuerySetId":951679,"Title":"All code history for a PostId","Description":null,"QueryBody":"SELECT Id, Text FROM PostHistory WHERE PostId = 111102","CreationDate":"2018-12-22 00:51:17","validated":false,"QueryBody_Original":"SELECT  Id, Text from PostHistory where PostId = 111102;"},{"QuerySetId":951967,"Title":"Maximum # of comments by a user on a post","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", UserId AS \"User Link\", COUNT(*) FROM Comments GROUP BY PostId, UserId ORDER BY COUNT(*) DESC LIMIT 1000","CreationDate":"2018-12-23 13:31:54","validated":false,"QueryBody_Original":"SELECT  TOP 1000 PostId AS [Post Link], UserId AS [User Link], COUNT(*)\n  FROM Comments\n  GROUP BY PostId, UserId\n  ORDER BY COUNT(*) DESC"},{"QuerySetId":952697,"Title":"Top 50 answerer's for Sustainable Living beta","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 2 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.Id) > 10 ORDER BY \"Average Answer Score\" DESC LIMIT 500","CreationDate":"2018-12-25 07:56:06","validated":false,"QueryBody_Original":"SELECT  \n    TOP 500\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Answers,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Answer Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 2 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(Posts.Id) > 10\nORDER BY\n    [Average Answer Score] DESC"},{"QuerySetId":953019,"Title":"Top score user by country and question tags.","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", SUM(Posts.Score) AS Total_Score FROM Posts LEFT JOIN Users ON Posts.OwnerUserId = Users.Id WHERE (Posts.ParentId IN (SELECT Id FROM Posts WHERE Tags LIKE '%<##tagName##>%')) \/* If you want to include question scores uncomment the line below *\/ \/* OR Posts.Tags LIKE '%<##tagName##>%' *\/ AND LOWER(Users.Location) LIKE LOWER('%##CountryName##%') GROUP BY Users.Id","CreationDate":"2018-12-26 11:19:10","validated":false,"QueryBody_Original":"SELECT \n    Users.Id AS [User Link], \n    SUM(Posts.Score) AS Total_Score\nFROM\n    Posts\n    LEFT JOIN Users ON Posts.OwnerUserId=Users.Id\nWHERE\n    (Posts.ParentId IN (\n        SELECT Id \n        FROM Posts \n        WHERE Tags LIKE '%<##tagName##>%'\n        ) \n        -- If you want to include question scores uncomment the line below\n        -- OR Posts.Tags LIKE '%<##tagName##>%'\n        ) AND\n    LOWER(Users.Location) LIKE LOWER('%##CountryName##%')\nGROUP BY Users.Id;"},{"QuerySetId":954533,"Title":"Number of questions without a single answer","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND AnswerCount = 0","CreationDate":"2018-12-29 14:41:54","validated":false,"QueryBody_Original":"SELECT \n  count(*)\nFROM\n  Posts\nWHERE\n  PostTypeId = 1\n  AND\n  AnswerCount = 0"},{"QuerySetId":954715,"Title":"Max score by post type","Description":null,"QueryBody":"SELECT x.id, x.displayname, x.posttypeid, x.score FROM (SELECT u.id, u.displayname, p.posttypeid, MAX(CAST(score AS FLOAT)) AS score, ROW_NUMBER() OVER (PARTITION BY u.id, p.posttypeid ORDER BY MAX(CAST(score AS FLOAT)) DESC) AS rn FROM users AS u INNER JOIN posts AS p ON p.owneruserid = u.id GROUP BY u.id, u.displayname, p.posttypeid) AS x WHERE x.rn = 1 ORDER BY x.score DESC","CreationDate":"2020-12-08 01:06:22","validated":false,"QueryBody_Original":"SELECT  x.id,\n       x.displayname,\n       x.posttypeid,\n       x.score\n       FROM (SELECT u.id,\n                    u.displayname,\n                    p.posttypeid,\n                    max(cast(score AS float)) score,\n                    row_number() OVER (PARTITION BY u.id, p.posttypeid\n                                       ORDER BY max(cast(score AS float)) DESC) rn\n                    FROM users u\n                         INNER JOIN posts p\n                                    ON p.owneruserid = u.id\n                    GROUP BY u.id,\n                             u.displayname,\n                             p.posttypeid) x\n       WHERE x.rn = 1\n       ORDER BY x.score DESC;"},{"QuerySetId":955116,"Title":"How many questions for a tag","Description":null,"QueryBody":"SELECT Id FROM Tags WHERE TagName = 'SCOM'","CreationDate":"2018-12-30 11:33:10","validated":false,"QueryBody_Original":"SELECT  Id from Tags where TagName = 'SCOM'"},{"QuerySetId":956674,"Title":"Select Top 10000 TagName From Tags Order By Count Desc","Description":null,"QueryBody":"SELECT TagName FROM Tags ORDER BY Count DESC LIMIT 10000","CreationDate":"2018-12-31 20:02:50","validated":false,"QueryBody_Original":"SELECT  Top 10000 TagName From Tags Order By Count Desc"},{"QuerySetId":956693,"Title":"On what days are most questions posted?","Description":null,"QueryBody":"SELECT COUNT(*) AS \"# votes\", TIME_TO_STR(v.CreationDate, '%h') AS \"hour\" FROM Votes AS v GROUP BY TIME_TO_STR(v.CreationDate, '%h')","CreationDate":"2018-12-31 21:34:44","validated":false,"QueryBody_Original":"SELECT  \n  COUNT(*) AS \"# votes\",\n  DATEPART(hour, v.CreationDate) AS \"hour\"\nFROM Votes v\nGROUP BY DATEPART(hour, v.CreationDate)"},{"QuerySetId":956726,"Title":"Write a query that will show just the User ID and Text of a comment by a single user. You may choose","Description":null,"QueryBody":"SELECT userID, text FROM Comments WHERE text LIKE '@Yvette%'","CreationDate":"2019-01-09 01:44:35","validated":false,"QueryBody_Original":"SELECT  userID, text from Comments Where text LIKE '@Yvette%'"},{"QuerySetId":957155,"Title":"Find people in any location who put TensorFlow in their profile.","Description":null,"QueryBody":"SELECT * FROM Users\/* AND displayName like 'L%' *\/  WHERE 1 = 1 AND UPPER(Location) LIKE '%%' AND UPPER(AboutMe) LIKE '%TENSORFLOW%' ORDER BY reputation DESC","CreationDate":"2019-01-01 12:24:43","validated":false,"QueryBody_Original":"SELECT  *\nfrom Users\nwhere 1=1\n  --AND displayName like 'L%'\n  AND UPPER(Location) LIKE '%%'\n  AND UPPER(AboutMe) LIKE '%TENSORFLOW%'\nORDER BY reputation DESC"},{"QuerySetId":957543,"Title":"Server Faults Qns & Ans","Description":null,"QueryBody":"SELECT q.Id, q.AcceptedAnswerId, q.Body AS qBody, q.Title AS qTitle, q.Tags AS qTags, q.CommentCount AS qCommentCount, q.Score AS qScore, a.Id, a.Body AS aBody, a.Score AS aScore, a.CommentCount AS aCommentCount FROM Posts AS q INNER JOIN Posts AS a ON (q.AcceptedAnswerId = a.Id) WHERE YEAR(q.CreationDate) > 2013 AND YEAR(q.CreationDate) < 2019","CreationDate":"2019-01-02 19:34:07","validated":false,"QueryBody_Original":"SELECT  q.Id,q.AcceptedAnswerId,q.Body as qBody,q.Title as qTitle,\nq.Tags as qTags,q.CommentCount as qCommentCount,q.Score as qScore,\na.Id,a.Body as aBody,a.Score as aScore,a.CommentCount as aCommentCount from Posts q\ninner join Posts a on (q.AcceptedAnswerId=a.Id)\nwhere year(q.CreationDate) >2013 and year(q.CreationDate)<2019\n\n\n\n  \n  \n--and \n--year(qns.CreationDate) >2009 and year(qns.CreationDate)<2019\n\n\n--CONVERT(VARCHAR(10), CreationDate, 111)"},{"QuerySetId":957593,"Title":"select top(5) * from users","Description":null,"QueryBody":"SELECT * FROM users LIMIT 5","CreationDate":"2019-01-02 18:40:45","validated":false,"QueryBody_Original":"SELECT  top(5) * from users"},{"QuerySetId":957673,"Title":"TOP 100 Reputation at Jordan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%India%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2020-01-10 22:50:36","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%India%'\nORDER BY\n   reputation DESC"},{"QuerySetId":957690,"Title":"TOP 100 Reputation at Arab","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Iran%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2019-06-23 03:17:15","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Iran%'\n   \nORDER BY\n   reputation DESC"},{"QuerySetId":957799,"Title":"user profiles that are probably broken due to accountid being null","Description":null,"QueryBody":"SELECT * FROM users WHERE accountid IS NULL","CreationDate":"2019-01-03 03:22:34","validated":false,"QueryBody_Original":"SELECT  *\nfrom users where accountid is null"},{"QuerySetId":958087,"Title":"Artificial Intelligence - Users ","Description":null,"QueryBody":"SELECT u.Id, u.Reputation, u.DisplayName, u.WebsiteUrl, u.Location, u.AboutMe, u.Views, u.ProfileImageUrl, u.EmailHash FROM Users AS u ORDER BY u.Reputation DESC","CreationDate":"2019-01-03 17:08:23","validated":false,"QueryBody_Original":"SELECT \n    u.Id, \n    u.Reputation,\n    u.DisplayName,\n    u.WebsiteUrl,\n    u.Location,\n    u.AboutMe,\n    u.Views,\n    u.ProfileImageUrl,\n    u.EmailHash\nFROM\n    Users u\nORDER BY\n    u.Reputation DESC;"},{"QuerySetId":958293,"Title":"Number of questions and answers by year","Description":null,"QueryBody":"SELECT YEAR(p.CreationDate) AS Year, COUNT(CASE WHEN PostTypeId = 1 THEN p.Id ELSE NULL END) AS Questions, COUNT(CASE WHEN PostTypeId = 2 THEN p.Id ELSE NULL END) AS Answers FROM Posts AS p WHERE PostTypeId IN (1, 2) GROUP BY YEAR(p.CreationDate)","CreationDate":"2020-01-03 00:37:50","validated":false,"QueryBody_Original":"SELECT  YEAR(p.CreationDate) as Year, COUNT(iif(PostTypeId=1, p.Id, null)) as Questions, COUNT(iif(PostTypeId=2, p.Id, null)) as Answers\nFROM Posts p\n\nWHERE PostTypeId in (1,2)\n\nGROUP BY YEAR(p.CreationDate);"},{"QuerySetId":958578,"Title":"questions with positive votes on tag go","Description":null,"QueryBody":"SELECT Posts.Title, Posts.creationdate, Posts.Tags, Posts.Score FROM Posts WHERE Tags LIKE '%<javascript>%' AND PostTypeId = 1 AND score >= 0 AND creationdate > '2018-12-29'","CreationDate":"2019-01-04 16:50:45","validated":false,"QueryBody_Original":"SELECT   Posts.Title\n      , Posts.creationdate\n      , Posts.Tags\n      , Posts.Score\n   from Posts\n  where Tags like '%<javascript>%'\n    and PostTypeId = 1\n    and score >= 0\n    and creationdate > '2018-12-29'"},{"QuerySetId":958664,"Title":"Interesting Recent Unanswered Salesforce Questions From Newbies","Description":null,"QueryBody":"SELECT p.Id, p.Title, p.Tags, p.CreationDate FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE u.Reputation < 200 AND p.CreationDate > (CURRENT_TIMESTAMP() - 20) AND AnswerCount = 0 AND CommentCount = 0 AND NOT Tags LIKE '%marketing-cloud%' AND NOT Tags LIKE '%lightning%' AND NOT Tags LIKE '%javascript%' AND NOT Tags LIKE '%salesforcedx%' ORDER BY p.CreationDate DESC","CreationDate":"2019-01-04 21:01:42","validated":false,"QueryBody_Original":"SELECT \n  p.Id, p.Title, p.Tags, p.CreationDate\nFROM Posts p\nINNER JOIN Users u ON u.Id = p.OwnerUserId\nWHERE u.Reputation < 200\nAND p.CreationDate > (getdate()-20)\nAND AnswerCount = 0\nAND CommentCount = 0\nAND Tags not like '%marketing-cloud%'\nAND Tags not like '%lightning%'\nAND Tags not like '%javascript%'\nAND Tags not like '%salesforcedx%'\nORDER BY p.CreationDate DESC"},{"QuerySetId":958998,"Title":"Top 100 Reputation in Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Iran%' ORDER BY reputation DESC LIMIT 1000","CreationDate":"2019-01-05 21:10:29","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Iran%'\nORDER BY\n   reputation DESC"},{"QuerySetId":959681,"Title":"Uses of old Clippy links","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\" FROM Posts WHERE Tags LIKE '%rust%' AND LOWER(Body) LIKE '%\/rust-clippy\/wiki%'","CreationDate":"2019-01-07 21:15:08","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], OwnerUserId as [User Link] from Posts\n  where\n    Tags like '%rust%'\n    and lower(Body) like '%\/rust-clippy\/wiki%'"},{"QuerySetId":960216,"Title":"Questions (from inactive users) with one vote missing to automatic deletion","Description":"This query aims to identify borderline questions to the RemoveDeadQuestions script (https:\/\/meta.stackexchange.com\/help\/roomba); i.e., questions older than 30 days, with no answers, not locked, and score equal to zero (one vote missing to -1 which is the last criterium needed for deletion). The query will also filter questions from inactive OPs ('n' days or more), such posts are more likely to be abandoned and\/or being of low quality. Tweak (by forking the query) the optional conditions in the WHERE clause to narrow or broaden the search scope.\r\n\r\nIn summary, a downvote will target questions for deletion. An upvote will push them away. If upvoting, try also editing the question for quality\/readability. Posting a valuable answer would be even better.\r\n","QueryBody":"SELECT p.Id AS \"Post Link\" \/* magic column for post hyperlink (https:\/\/data.stackexchange.com\/help#parameters). *\/, p.Score FROM Posts AS p JOIN PostHistory AS ph ON ph.Id = p.Id\/* borderline Qs (= 0) + Qs already awaiting roomba (< 0). *\/ \/* older than 30 days. *\/ \/* questions. *\/  WHERE p.PostTypeId = 1 AND p.CreationDate < CURRENT_TIMESTAMP() - 30 AND p.Score < 1 AND p.AnswerCount = 0 AND NOT EXISTS(SELECT * FROM PostHistory AS ph WHERE ph.PostId = p.Id AND ph.PostHistoryTypeId = 14) ORDER BY p.Score DESC \/* borderline Qs first. *\/, p.CreationDate","CreationDate":"2019-01-09 06:18:34","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link], -- magic column for post hyperlink (https:\/\/data.stackexchange.com\/help#parameters).\n       p.Score\nFROM Posts p\nJOIN PostHistory ph ON ph.Id = p.Id\nWHERE p.PostTypeId = 1 AND -- questions.\n      p.CreationDate < GETDATE() - 30 AND -- older than 30 days.\n      p.Score < 1 AND -- borderline Qs (= 0) + Qs already awaiting roomba (< 0).\n      p.AnswerCount = 0\n      AND NOT EXISTS -- not locked.\n      (\n       SELECT *\n       FROM PostHistory ph\n       WHERE ph.PostId = p.Id\n       AND ph.PostHistoryTypeId = 14\n      )\n      -- AND p.ClosedDate is NULL\nORDER BY p.Score DESC, -- borderline Qs first.\n         p.CreationDate ASC; -- start by the oldest."},{"QuerySetId":960536,"Title":"Questions which no longer have the given tag (but had it at some point)","Description":null,"QueryBody":"SELECT DISTINCT Posts.Id AS \"Post Link\", url = 'site:\/\/posts\/' + CAST(Posts.Id AS TEXT) + '\/revisions', Posts.Creationdate, Posts.LastActivityDate FROM PostHistory INNER JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistory.PostHistoryTypeId IN (3, 6, 9) AND PostHistory.Text LIKE '%<##tagName##>%' AND NOT (Posts.Tags LIKE '%<##tagName##>%') ORDER BY Posts.Id","CreationDate":"2019-01-09 23:06:51","validated":false,"QueryBody_Original":"SELECT \nDistinct Posts.Id as [Post Link], \nurl = 'site:\/\/posts\/' + CAST(Posts.Id AS varchar)+'\/revisions',\nPosts.Creationdate, Posts.LastActivityDate\nFrom PostHistory INNER JOIN Posts\n  ON PostHistory.PostId=Posts.Id\nwhere PostHistory.PostHistoryTypeId in (3,6,9) \n  and PostHistory.Text Like '%<##tagName##>%'\n  and NOT(Posts.Tags Like '%<##tagName##>%')\nOrder By Posts.Id"},{"QuerySetId":961594,"Title":"Good first answers by users who took the tour afterwards","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id LEFT OUTER JOIN Posts AS p2 ON p2.OwnerUserId = u.Id AND p2.CreationDate < p.CreationDate INNER JOIN Badges AS b ON b.UserId = u.Id AND b.Name = 'Informed' AND b.Date > p.CreationDate WHERE p2.Id IS NULL AND u.CreationDate > '2013-01-17' \/* when the first Informed badge was awarded *\/ AND p.Score < 25 AND p.PostTypeId = 2","CreationDate":"2019-01-11 23:07:49","validated":false,"QueryBody_Original":"SELECT  count(*)\n  FROM Users AS u\n  INNER JOIN Posts AS p ON p.OwnerUserId = u.Id\n  LEFT OUTER JOIN Posts AS p2 ON p2.OwnerUserId = u.Id AND p2.CreationDate < p.CreationDate\n  INNER JOIN Badges AS b ON b.UserId = u.Id\n                        AND b.Name = 'Informed'\n                        AND b.Date > p.CreationDate\n  WHERE p2.Id IS NULL\n    AND u.CreationDate > '2013-01-17' -- when the first Informed badge was awarded\n    AND p.Score < 25\n    AND p.PostTypeId = 2"},{"QuerySetId":961638,"Title":"Oldest question without any answer","Description":null,"QueryBody":"SELECT * FROM Posts WHERE AnswerCount = 0 ORDER BY CreationDate","CreationDate":"2019-01-12 00:56:33","validated":false,"QueryBody_Original":"SELECT  *\nFROM Posts\nWHERE AnswerCount = 0\nORDER BY CreationDate"},{"QuerySetId":962207,"Title":"Find questions containing a given tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", Tags, CreationDate, Score, Title, OwnerDisplayName FROM Posts WHERE PostTypeId = 1 AND (Tags LIKE '%<##Tagname##%>%') ORDER BY CreationDate DESC","CreationDate":"2019-01-13 20:27:14","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], OwnerUserId AS [User Link], Tags, CreationDate, Score, Title, OwnerDisplayName\nFROM Posts\nWHERE  PostTypeId = 1  AND (Tags LIKE '%<##Tagname##%>%')\nORDER BY CreationDate DESC"},{"QuerySetId":962769,"Title":"how many users total, lastYear, last2months and last month","Description":null,"QueryBody":"SELECT COUNT(1), MIN(CreationDate), MAX(CreationDate) FROM Posts WHERE CreationDate <= '2019-01-11' AND Tags LIKE '%microservices%'","CreationDate":"2019-05-13 16:28:45","validated":false,"QueryBody_Original":"SELECT  count(1), min(CreationDate), max(CreationDate) \nfrom Posts where CreationDate <= '2019-01-11'\nand Tags like '%microservices%'"},{"QuerySetId":963163,"Title":"Users with most popular Badges","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS p INNER JOIN (SELECT b1.UserId, COUNT(b1.Name) AS \"badge_count\" FROM Badges AS b1 INNER JOIN (SELECT COUNT(Id) AS \"count\", Name FROM Badges WHERE Class = 1 AND TagBased = 1 GROUP BY Name HAVING COUNT(Id) > 25) AS b2 ON (b1.Name = b2.Name AND b1.TagBased = 1 AND b1.Class = 1) GROUP BY b1.UserId HAVING COUNT(b1.UserId) > 5) AS users ON (p.PostTypeId = 2 AND p.OwnerUserId = users.UserId)","CreationDate":"2019-01-14 18:25:59","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Posts as p\nINNER JOIN (\n        SELECT b1.UserId, count(b1.Name) as 'badge_count' FROM Badges as b1\n        INNER JOIN (\n              SELECT count(Id) as 'count', Name FROM Badges\n              WHERE\n                Class=1 AND TagBased = 1\n              GROUP BY Name\n              Having COUNT(Id) > 25\n            ) b2\n          ON (\n            b1.Name = b2.Name AND\n            b1.TagBased = 1 AND\n            b1.Class = 1\n          )\n        GROUP BY b1.UserId\n        HAVING count(b1.UserId) > 5\n    ) users\n    ON (\n      p.PostTypeId = 2 AND\n      p.OwnerUserId = users.UserId\n    )"},{"QuerySetId":963172,"Title":"1 month - More commented Android questions","Description":null,"QueryBody":"SELECT Body FROM Posts AS Question WHERE Question.Tags LIKE '%android%' AND Question.CreationDate > '2018-01-01' AND Question.CreationDate < '2018-12-31' ORDER BY CommentCount DESC LIMIT 500","CreationDate":"2019-01-14 18:33:50","validated":false,"QueryBody_Original":"SELECT  TOP 500 Body FROM \n  Posts AS Question \n  where    \n  Question.Tags like '%android%' and\n  Question.CreationDate > '2018-01-01' and\n  Question.CreationDate < '2018-12-31'\n  order by CommentCount DESC"},{"QuerySetId":963735,"Title":"Questions asked (per month). Questions deleted (per month)","Description":"Run the query and select the 'Graph' tab. Learn about how many questions have been asked by month; and compare to how many questions have been deleted per month.","QueryBody":"SELECT * FROM Posts AS p WHERE p.DeletionDate IS NULL LIMIT 10","CreationDate":"2019-01-15 00:00:07","validated":false,"QueryBody_Original":"SELECT  TOP 10 *\nFROM Posts p\nWHERE p.DeletionDate is NULL\n      ;"},{"QuerySetId":965808,"Title":"Number of users on SO","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2019-01-15 17:22:20","validated":false,"QueryBody_Original":"SELECT  \n   COUNT(*)\nFROM\n   Users"},{"QuerySetId":965825,"Title":"Number of users from Brazil","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE LOWER(Location) LIKE '%brazil' OR LOWER(Location) LIKE '%brasil'","CreationDate":"2019-01-15 17:23:52","validated":false,"QueryBody_Original":"SELECT  \n   COUNT(*)\nFROM\n   Users\nWHERE\nLOWER(Location) LIKE '%brazil' OR LOWER(Location) LIKE '%brasil'"},{"QuerySetId":966538,"Title":"Merged questions between given dates","Description":null,"QueryBody":"SELECT ph.CreationDate, ph.PostHistoryTypeId, p.Id AS \"Post Link\", CONCAT('site:\/\/posts\/', p.Id, '\/revisions') AS \"Revisions Link\" FROM PostHistory AS ph INNER JOIN Posts AS p ON ph.PostId = p.Id AND ph.PostHistoryTypeId IN (18, 22, 37, 38) AND p.PostTypeId = 1 WHERE ph.CreationDate >= '##Date1##' AND ph.CreationDate <= '##Date2##' ORDER BY ph.CreationDate DESC","CreationDate":"2019-01-16 02:07:39","validated":false,"QueryBody_Original":"SELECT  \n  ph.CreationDate,\n  ph.PostHistoryTypeId,\n  p.Id AS [Post Link],\n  concat('site:\/\/posts\/',\n          p.Id,\n          '\/revisions'\n          ) [Revisions Link]\nFROM PostHistory ph INNER JOIN Posts p\n  ON ph.PostId=p.Id\n  AND ph.PostHistoryTypeId IN (18,22,37,38)\n  AND p.PostTypeId=1\nWHERE ph.CreationDate>='##Date1##' and ph.CreationDate<='##Date2##'  \nORDER BY ph.CreationDate DESC\n\n--37 = Post merge source\n--38 = Post merge destination"},{"QuerySetId":966667,"Title":"Questions and answers per year","Description":null,"QueryBody":"SELECT (SELECT COUNT(Id) FROM Posts WHERE YEAR(Posts.CreationDate) = 2019 AND DeletionDate IS NULL AND ParentId IS NULL) AS questionCount, (SELECT COUNT(Id) FROM Posts WHERE YEAR(Posts.CreationDate) = 2019 AND DeletionDate IS NULL AND NOT ParentId IS NULL) AS answerCount","CreationDate":"2020-02-05 03:00:05","validated":false,"QueryBody_Original":"SELECT \n    (\n        SELECT\n            count(Id)\n        from\n            Posts\n        where\n            year(Posts.CreationDate) = 2019\n            and DeletionDate is null\n            and ParentId is null\n    ) questionCount,\n    (\n        SELECT\n            count(Id)\n        from\n            Posts\n        where\n            year(Posts.CreationDate) = 2019\n            and DeletionDate is null\n            and ParentId is not null\n    ) answerCount"},{"QuerySetId":966732,"Title":"Questions and answers per day","Description":null,"QueryBody":"SELECT DAY(CreationDate) AS creationDay, MONTH(CreationDate) AS creationMonth, (CASE WHEN ParentId IS NULL THEN 1 ELSE 0 END) AS isAnswer, COUNT(Id) AS cnt FROM Posts WHERE YEAR(Posts.CreationDate) = 2019 AND Posts.DeletionDate IS NULL GROUP BY DAY(CreationDate), MONTH(CreationDate), (CASE WHEN ParentId IS NULL THEN 1 ELSE 0 END)","CreationDate":"2020-02-05 03:19:08","validated":false,"QueryBody_Original":"SELECT \n    day(CreationDate) as creationDay,\n    month(CreationDate) as creationMonth,\n    (\n        case when ParentId is null then 1 else 0 end\n    ) as isAnswer,\n    count(Id) as cnt\nfrom\n    Posts\nwhere\n    year(Posts.CreationDate) = 2019\n    and Posts.DeletionDate is null\ngroup by\n    day(CreationDate),\n    month(CreationDate),\n    (case when ParentId is null then 1 else 0 end)"},{"QuerySetId":967436,"Title":"Number of posts by now deleted users (per year)","Description":null,"QueryBody":"SELECT YEAR(CreationDate), COUNT(DISTINCT OwnerDisplayName), COUNT(Id) FROM Posts WHERE OwnerUserId IS NULL GROUP BY YEAR(CreationDate)","CreationDate":"2019-01-17 04:39:34","validated":false,"QueryBody_Original":"SELECT  Year(CreationDate), COUNT(DISTINCT OwnerDisplayName), COUNT(Id)\nFROM Posts\nWHERE OwnerUserId IS NULL\nGROUP BY Year(CreationDate)"},{"QuerySetId":967438,"Title":"Number of posts by now deleted users","Description":null,"QueryBody":"SELECT COUNT(DISTINCT OwnerDisplayName), COUNT(Id) FROM Posts WHERE OwnerUserId IS NULL","CreationDate":"2019-01-17 04:42:37","validated":false,"QueryBody_Original":"SELECT  COUNT(DISTINCT OwnerDisplayName), COUNT(Id)\nFROM Posts\nWHERE OwnerUserId IS NULL"},{"QuerySetId":967526,"Title":"SELECT Id, Body, Title, Tags FROM posts WHERE Id < 5000","Description":null,"QueryBody":"SELECT Id, Body, Title, Tags FROM posts WHERE Id < 5000","CreationDate":"2019-01-17 12:17:31","validated":false,"QueryBody_Original":"SELECT  Id, Body, Title, Tags FROM posts WHERE Id < 5000"},{"QuerySetId":968124,"Title":"Percentage of questions which get closed (per day, between dates)","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE), ROUND((COUNT(p.ClosedDate)) * 100.0 \/ (COUNT(p.Id)), 2) AS percentage FROM Posts AS p WHERE p.CreationDate >= '##Date1##' AND p.CreationDate <= '##Date2##' AND p.PostTypeId = 1 GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE)","CreationDate":"2019-01-18 19:32:03","validated":false,"QueryBody_Original":"SELECT  \nCAST(p.CreationDate AS date), ROUND((COUNT(p.ClosedDate))*100.0\/(COUNT(p.Id)),2) AS percentage\nFROM Posts p\nWHERE p.CreationDate >= '##Date1##' AND p.CreationDate <= '##Date2##'\nAND p.PostTypeId=1\nGROUP BY CAST(p.CreationDate AS date)\nORDER BY CAST(p.CreationDate AS date)"},{"QuerySetId":968126,"Title":"Average score of questions (per day, between dates)","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE), AVG(CAST(p.Score AS FLOAT)) FROM Posts AS p WHERE p.PostTypeId = 1 AND p.CreationDate >= '##Date1##' AND p.CreationDate <= '##Date2##' GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE)","CreationDate":"2019-01-18 19:37:33","validated":false,"QueryBody_Original":"SELECT \n  CAST(p.CreationDate AS date), AVG(cast(p.Score as decimal))\nFROM Posts p\nWHERE p.PostTypeId=1 AND p.CreationDate >= '##Date1##' AND p.CreationDate <= '##Date2##'\nGROUP BY CAST(p.CreationDate AS date)\nORDER BY CAST(p.CreationDate AS date)"},{"QuerySetId":968158,"Title":"Number of questions which get closed (per day, between dates)","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE), COUNT(p.ClosedDate) AS closed, COUNT(*) AS total, ROUND((COUNT(p.ClosedDate)) * 100.0 \/ (COUNT(p.Id)), 2) AS percentage FROM Posts AS p WHERE p.CreationDate >= '##Date1##' AND p.CreationDate <= '##Date2##' AND p.PostTypeId = 1 GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE)","CreationDate":"2019-01-18 22:09:46","validated":false,"QueryBody_Original":"SELECT  \nCAST(p.CreationDate AS date), COUNT(p.ClosedDate) as closed, COUNT(*) AS total, ROUND((COUNT(p.ClosedDate))*100.0\/(COUNT(p.Id)),2) AS percentage\nFROM Posts p\nWHERE p.CreationDate >= '##Date1##' AND p.CreationDate <= '##Date2##'\nAND p.PostTypeId=1\nGROUP BY CAST(p.CreationDate AS date)\nORDER BY CAST(p.CreationDate AS date)"},{"QuerySetId":968496,"Title":"Count posts with a tag","Description":null,"QueryBody":"SELECT COUNT(Title) FROM Posts WHERE Posts.CreationDate BETWEEN '2013-03-01 00:00:00' AND '2017-12-31 23:59:59' AND Posts.PostTypeId = 1","CreationDate":"2019-01-19 23:36:18","validated":false,"QueryBody_Original":"SELECT  COUNT(Title)\nFROM Posts\nWHERE Posts.CreationDate between  '2013-03-01 00:00:00' AND '2017-12-31 23:59:59'\nand Posts.PostTypeId=1"},{"QuerySetId":968905,"Title":"Retrieve Answered Questions Tagged as 'Java' Created In The Month of January 2018","Description":null,"QueryBody":"SELECT Q.Id, Q.AcceptedAnswerId, Q.CreationDate, Q.Score, Q.Body AS \"Question Body\", Q.Title AS \"Question Title\", A.Body AS \"Answer Body\", Q.Tags FROM Posts AS Q INNER JOIN Posts AS A ON Q.AcceptedAnswerId = A.Id WHERE Q.Tags = '<##tag?java##>' AND Q.CreationDate BETWEEN '2018-01-01' AND '2018-01-31' AND Q.Score >= 0 ORDER BY Q.Id","CreationDate":"2019-01-24 08:57:46","validated":false,"QueryBody_Original":"SELECT  Q.Id, Q.AcceptedAnswerId, Q.CreationDate, Q.Score, Q.Body as \n'Question Body', Q.Title as 'Question Title', A.Body as 'Answer Body', \nQ.Tags FROM Posts as Q  INNER JOIN Posts as A ON \nQ.AcceptedAnswerId = A.Id WHERE Q.Tags = '<##tag?java##>' AND Q.CreationDate \nBETWEEN '2018-01-01' AND '2018-01-31' AND Q.Score>=0 ORDER BY Q.Id"},{"QuerySetId":969130,"Title":"Short questions with high scores","Description":null,"QueryBody":"SELECT Id, Score, LENGTH(Body), CreationDate FROM Posts WHERE PostTypeId = 1 AND LENGTH(Body) < 100 AND Score > 5 ORDER BY LENGTH(Body)","CreationDate":"2020-04-11 15:28:57","validated":false,"QueryBody_Original":"SELECT  Id, Score, LEN(Body), CreationDate from Posts where PostTypeId = 1 and LEN(Body) < 100 and Score > 5 order by LEN(Body) asc"},{"QuerySetId":969147,"Title":"TOP 500 more commented questions - Android","Description":null,"QueryBody":"SELECT Question.Id AS P_PostId, Question.OwnerUserId AS P_UserId FROM Posts AS Question WHERE Question.Tags LIKE '%android%' ORDER BY CommentCount DESC LIMIT 500","CreationDate":"2019-01-21 21:26:07","validated":false,"QueryBody_Original":"SELECT  TOP 500 Question.Id as P_PostId, Question.OwnerUserId as P_UserId FROM \n  Posts AS Question \n  where    \n  Question.Tags like '%android%' \n  order by CommentCount DESC"},{"QuerySetId":969152,"Title":"How many users have actually read the entire Tour page? (statistically)","Description":"Counts how many users have actually read the entire Tour page, based on how many who has received the 'Informed' badge.","QueryBody":"SELECT (SELECT COUNT(Id) FROM Users) AS Users, COUNT(b.UserId) AS BadgeHolders, (CAST(COUNT(b.UserId) AS FLOAT) \/ (SELECT COUNT(Id) FROM Users) * 100) AS Percentage FROM Users AS u LEFT JOIN Badges AS b ON b.UserId = u.Id WHERE b.Name = 'Informed'","CreationDate":"2019-01-22 00:53:12","validated":false,"QueryBody_Original":"SELECT \n  (SELECT COUNT(Id) FROM Users) AS Users,\n  COUNT(b.UserId) AS BadgeHolders,\n  (CAST(COUNT(b.UserId) AS FLOAT) \/ (SELECT COUNT(Id) FROM Users) * 100) AS Percentage\nFROM\n  Users u \n  LEFT JOIN\n  Badges b ON b.UserId = u.Id\nWHERE\n  b.Name = 'Informed'"},{"QuerySetId":969940,"Title":"Comments in a given tag (between two dates)","Description":null,"QueryBody":"SELECT c.userId AS \"User Link\", c.CreationDate, c.Id AS \"Comment Link\", c.PostId AS \"Post Link\", c.text FROM (Comments AS c JOIN Posts AS p ON c.PostId = p.Id) WHERE (p.PostTypeId = 1) AND (p.Tags LIKE '%<##tagName?gn.general-topology##>%') AND (c.CreationDate >= '##Date1##') AND (c.CreationDate <= '##Date2##') UNION SELECT c.userId AS \"User Link\", c.CreationDate, c.Id AS \"Comment Link\", c.PostId AS \"Post Link\", c.text FROM Comments AS c JOIN Posts AS p ON c.PostId = p.Id JOIN Posts AS q ON p.ParentId = q.Id WHERE (p.PostTypeId = 2) AND (q.Tags LIKE '%<##tagName?gn.general-topology##>%') AND (c.CreationDate >= '##Date1##') AND (c.CreationDate <= '##Date2##') ORDER BY c.CreationDate DESC","CreationDate":"2019-01-23 17:00:45","validated":false,"QueryBody_Original":"SELECT  \n  c.userId AS [User Link], c.CreationDate, c.Id AS [Comment Link], c.PostId AS [Post Link], c.text\nFROM (Comments c JOIN Posts p ON c.PostId=p.Id) \nWHERE (p.PostTypeId=1) and (p.Tags Like '%<##tagName?gn.general-topology##>%') \n  AND (c.CreationDate >= '##Date1##') AND (c.CreationDate <= '##Date2##')\n  \nUNION\n\n--answers\nSELECT \n  c.userId AS [User Link], c.CreationDate, c.Id AS [Comment Link], c.PostId AS [Post Link], c.text\nFROM Comments c JOIN Posts p ON c.PostId=p.Id JOIN Posts q ON p.ParentId=q.Id\nWHERE (p.PostTypeId=2) and (q.Tags Like '%<##tagName?gn.general-topology##>%')\n  AND (c.CreationDate >= '##Date1##') AND (c.CreationDate <= '##Date2##')\n\nORDER BY c.CreationDate DESC"},{"QuerySetId":969973,"Title":"Top 100 users in Chennai","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%chennai%' OR UPPER(Location) LIKE '%CHENNAI' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2019-01-23 17:31:51","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%chennai%'\n    OR UPPER(Location) LIKE '%CHENNAI'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":970059,"Title":"SELECT TOP 100 FROM Posts","Description":null,"QueryBody":"SELECT * FROM Posts LIMIT 10000","CreationDate":"2019-01-23 22:01:03","validated":false,"QueryBody_Original":"SELECT  TOP 10000 * FROM Posts"},{"QuerySetId":970099,"Title":"select * from posts ","Description":null,"QueryBody":"SELECT * FROM posts","CreationDate":"2019-01-24 00:31:06","validated":false,"QueryBody_Original":"SELECT  * from posts"},{"QuerySetId":970123,"Title":"Questions & Answers by day","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%Y-%m-%d') FROM posts","CreationDate":"2019-01-24 03:16:05","validated":false,"QueryBody_Original":"SELECT  format(creationdate,'yyyy-MM-dd')\nfrom posts"},{"QuerySetId":970261,"Title":"List of all edits where edit summary contains given keyword (between two dates)","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Comment, UserId AS \"User Link\", CreationDate FROM PostHistory WHERE Comment LIKE '%##keyword##%' AND CreationDate >= '##Date1?2018-01-01##' AND CreationDate <= '##Date2?2019-01-01##' ORDER BY CreationDate","CreationDate":"2019-01-24 11:22:33","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], Comment, UserId as [User Link], CreationDate\nFrom PostHistory\nWhere Comment Like '%##keyword##%'\nand CreationDate >= '##Date1?2018-01-01##' and CreationDate <= '##Date2?2019-01-01##'\nOrder By CreationDate"},{"QuerySetId":970263,"Title":"List of all tag edits - with edit summaries","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", Comment, UserId AS \"User Link\", CreationDate FROM PostHistory WHERE PostHistoryTypeId = 6 AND CreationDate >= '##Date1?2018-01-01##' AND CreationDate <= '##Date2?2019-01-01##' ORDER BY CreationDate","CreationDate":"2019-01-24 11:26:56","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link], Comment, UserId as [User Link], CreationDate\nFrom PostHistory\nWhere PostHistoryTypeId=6\nand CreationDate >= '##Date1?2018-01-01##' and CreationDate <= '##Date2?2019-01-01##'\nOrder By CreationDate\n--- PostHistoryTypeId\n--- 6 = Edit Tags - modified list of tags (questions only)"},{"QuerySetId":970833,"Title":"Where are these users now??","Description":null,"QueryBody":"SELECT * FROM users WHERE AccountId = 14245410","CreationDate":"2019-01-25 02:50:38","validated":false,"QueryBody_Original":"SELECT  *\nfrom users \nwhere AccountId=14245410"},{"QuerySetId":970897,"Title":"2018 questions by users with no questions before 2018","Description":null,"QueryBody":"SELECT U.DisplayName, COUNT(*) AS Questions, SUM(A.Score) AS TotalScore, AVG(A.Score) AS AverageScore FROM Posts AS A JOIN Users AS U ON A.OwnerUserId = U.Id WHERE YEAR(A.CreationDate) = 2018 AND A.PostTypeId = 1 \/* Post is question? *\/ AND NOT EXISTS(SELECT * FROM Posts AS A2 WHERE A2.OwnerUserId = U.Id AND YEAR(A2.CreationDate) < 2018 AND A2.PostTypeId = 1) GROUP BY U.DisplayName ORDER BY Questions DESC, AverageScore DESC","CreationDate":"2019-01-27 03:29:37","validated":false,"QueryBody_Original":"SELECT  U.DisplayName, count(*) AS Questions, sum(A.Score) AS TotalScore, avg(A.Score) AS AverageScore\n  FROM Posts A JOIN Users U ON A.OwnerUserId = U.Id\n    WHERE year(A.CreationDate) = 2018\n    AND A.PostTypeId = 1 -- Post is question?\n    AND NOT EXISTS (SELECT *\n                    FROM Posts A2\n                    WHERE A2.OwnerUserId = U.Id\n                    AND year(A2.CreationDate) < 2018\n                    AND A2.PostTypeId = 1)\n  GROUP BY U.DisplayName\n  ORDER BY Questions DESC, AverageScore DESC"},{"QuerySetId":970899,"Title":"2018 Slowest Gun In The West","Description":null,"QueryBody":"SELECT A.Id AS \"Post Link\", A.Score, U.DisplayName FROM Posts AS A JOIN Posts AS Q ON A.ParentId = Q.Id JOIN Users AS U ON A.OwnerUserId = U.Id\/* No post with Q as parent was made within 48 hours of posting *\/ \/* No tips question *\/  WHERE YEAR(A.CreationDate) = 2018 AND NOT Q.Tags LIKE '%tips%' AND NOT EXISTS(SELECT * FROM Posts AS A2 WHERE A2.ParentId = Q.Id AND DATEDIFF(A2.CreationDate, Q.CreationDate) < 86400 * 2) AND NOT EXISTS(SELECT * FROM Posts AS A2 WHERE A2.ParentId = Q.Id AND YEAR(A.CreationDate) < 2018) ORDER BY A.Score DESC","CreationDate":"2019-01-29 01:12:12","validated":false,"QueryBody_Original":"SELECT  A.Id AS [Post Link], A.Score, U.DisplayName\n  FROM Posts A JOIN Posts Q ON A.ParentId = Q.Id\n       JOIN Users U ON A.OwnerUserId = U.Id\n    WHERE\n    -- Answer was posted in 2018\n    year(A.CreationDate) = 2018\n    -- No tips question\n    AND Q.Tags NOT LIKE '%tips%'\n    -- No post with Q as parent was made within 48 hours of posting\n    AND NOT EXISTS (SELECT *\n                    FROM Posts A2\n                    WHERE A2.ParentId = Q.Id\n                    AND DATEDIFF(second, Q.CreationDate, A2.CreationDate) < 86400 * 2)\n    AND NOT EXISTS (SELECT *\n                    FROM Posts A2\n                    WHERE A2.ParentId = Q.Id\n                    AND year(A.CreationDate) < 2018)\n  ORDER BY A.Score DESC"},{"QuerySetId":971172,"Title":"Selects all posts tagged \u201csmartcontracts","Description":null,"QueryBody":"SELECT p2.* FROM Posts AS p1, Posts AS p2 WHERE p1.PostTypeId = 1 AND (p1.tags LIKE '%smartcontracts%' OR p1.tags LIKE '%solidity%' OR p1.tags LIKE '%ethereum%') AND p2.PostTypeId = 2 AND p2.ParentId = p1.Id ORDER BY p1.Id","CreationDate":"2019-01-31 23:02:35","validated":false,"QueryBody_Original":"SELECT  p2.*\nfrom Posts as p1, Posts as p2 \nwhere p1.PostTypeId=1 and (p1.tags like '%smartcontracts%' \n                            or p1.tags like '%solidity%' \n                            or p1.tags like'%ethereum%') \nand p2.PostTypeId=2 and \np2.ParentId=p1.Id \norder by p1.Id asc"},{"QuerySetId":971622,"Title":"Rank of users who earned the bronze java tag badge","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Date) AS Rank, UserId, Date FROM Badges\/* ...is bronze... *\/ \/* Badge named 'java'... *\/  WHERE (Name = 'android') AND (Class = 3) AND (TagBased = 1) \/* ...is tag. *\/ ORDER BY Date","CreationDate":"2019-05-26 07:45:30","validated":false,"QueryBody_Original":"SELECT \n  ROW_NUMBER() \n    OVER (ORDER BY Date) As Rank,\n  UserId,\n  Date\nFROM\n  Badges\nWHERE\n  (Name = 'android') And  -- Badge named 'java'...\n  (Class = 3) And      -- ...is bronze...\n  (TagBased = 1)       -- ...is tag.\nORDER BY\n  Date;"},{"QuerySetId":971647,"Title":"Questions by summed rep of the answerers","Description":null,"QueryBody":"SELECT QuestionId AS \"Post Link\", QuestionId, COUNT(*) AS AnswererNo, SUM(CAST(AnswererRep AS INT)) AS SumAnswererRep FROM (SELECT DISTINCT Q.Id AS QuestionId, Users.Id AS AnswererId, Users.Reputation AS AnswererRep FROM Posts AS Q, Posts AS A, Users WHERE A.ParentId = Q.Id AND Users.Id = A.OwnerUserId AND Q.ClosedDate IS NULL) AS QA, Users WHERE QA.AnswererId = Users.Id GROUP BY QA.QuestionId ORDER BY SumAnswererRep DESC, QuestionId LIMIT 100","CreationDate":"2019-01-27 19:46:33","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  QuestionId AS [Post Link],\n  QuestionId,\n  COUNT(*) AS AnswererNo,\n  SUM(CAST(AnswererRep AS BIGINT)) AS SumAnswererRep\nFROM (\n  SELECT DISTINCT\n    Q.Id AS QuestionId,\n    Users.Id AS AnswererId,\n    Users.Reputation AS AnswererRep\n  FROM Posts Q, Posts A, Users\n  WHERE\n    A.ParentId = Q.Id\n    AND\n    Users.Id = A.OwnerUserId\n    AND\n    Q.ClosedDate IS NULL\n) QA, Users\nWHERE QA.AnswererId = Users.Id\nGROUP BY QA.QuestionId\nORDER BY SumAnswererRep DESC, QuestionId"},{"QuerySetId":972057,"Title":"Find Deleted Questions by User","Description":"shows all deleted answers for the specified user","QueryBody":"SELECT p.id AS \"Post Link\", * FROM Posts AS p WHERE DeletionDate > 0","CreationDate":"2019-02-28 19:59:39","validated":false,"QueryBody_Original":"SELECT  \n    p.id as [Post Link], *\nfrom Posts as p where DeletionDate > 0"},{"QuerySetId":972169,"Title":"Questions with specific word in the title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, OwnerUserId AS \"User Link\", Score, Tags FROM Posts WHERE PostTypeId = 1 AND Title LIKE '%##word?\\def##%'","CreationDate":"2019-01-28 12:48:14","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link], Title, OwnerUserId AS [User Link], Score, Tags\nFROM Posts\nWHERE PostTypeId=1 AND Title Like '%##word?\\def##%'"},{"QuerySetId":972951,"Title":"Posts between two dates containing a given text","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", CreationDate, LastActivityDate, Score, ViewCount, Body FROM Posts WHERE Body LIKE '%##text##%' AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##' ORDER BY CreationDate DESC","CreationDate":"2019-01-29 10:10:31","validated":false,"QueryBody_Original":"SELECT  \n  Id As [Post Link], OwnerUserId AS [User Link], CreationDate, LastActivityDate,  Score, ViewCount, Body\n  FROM Posts WHERE Body LIKE '%##text##%' \n    AND CreationDate >= '##Date1##'\n    AND CreationDate <= '##Date2##'\n  ORDER BY CreationDate DESC"},{"QuerySetId":972957,"Title":"Comments between two dates containing a given string ","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%##string##%' AND CreationDate >= '##Date1##' AND CreationDate <= '##Date2##' ORDER BY CreationDate","CreationDate":"2019-01-29 10:21:15","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%##string##%'\nAND CreationDate >= '##Date1##'\nAND CreationDate <= '##Date2##'\nORDER BY CreationDate"},{"QuerySetId":972960,"Title":"Comments containing string1 but not string2","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%##string1##%' AND NOT (Text LIKE '%##string2##%') ORDER BY CreationDate DESC","CreationDate":"2019-01-29 10:25:10","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%##string1##%'\n  AND NOT(Text LIKE '%##string2##%') \nORDER BY CreationDate DESC"},{"QuerySetId":974442,"Title":"Count questions tagged with a given tag combination","Description":null,"QueryBody":"SELECT COUNT(*) AS CNT FROM Posts WHERE Tags LIKE '%java%' \/* united-states united-kingdom germany europe *\/ AND Tags LIKE '%collision-detection%' \/* layoff redundancy *\/","CreationDate":"2019-02-05 06:56:46","validated":false,"QueryBody_Original":"SELECT \n    COUNT(*) AS CNT \nFROM Posts\nWHERE \n    Tags LIKE '%java%'  -- united-states united-kingdom germany europe\n    AND Tags LIKE '%collision-detection%' -- layoff redundancy"},{"QuerySetId":974480,"Title":"TOP 50 users from Gujarat","Description":"Lists the top 50 users (ranked by reputation) that are located in Calicut\/Kozhikode, Kerala, India according to their profile information.\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Ahmedabad%' ORDER BY reputation DESC LIMIT 150","CreationDate":"2019-01-31 17:19:10","validated":false,"QueryBody_Original":"SELECT  TOP 150\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Ahmedabad%'\n   --OR Location like N'%Kozhi%'\n   --OR Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":974932,"Title":"Top 500 SO users from TR","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", 'http:\/\/stackoverflow.com\/users\/' + CAST(Id AS TEXT(10)) AS ProfileUrl, DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%turke%' OR LOWER(Location) LIKE '%t\u00fcrki%' OR Location LIKE '%Turkey%' OR Location LIKE '%T\u00fcrki%' OR Location LIKE '%Istanbul%' OR Location LIKE '%istanbul%' OR Location LIKE '%gebze%' OR Location LIKE '%edirne%' OR Location LIKE '%izmir%' OR Location LIKE '%Izmir%' OR Location LIKE '%Ankara%' OR Location LIKE '%Bursa%' OR Location LIKE '%ankara%' OR Location LIKE '%bursa%') ORDER BY Reputation DESC LIMIT 500","CreationDate":"2019-02-01 19:24:15","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    'http:\/\/stackoverflow.com\/users\/' + CONVERT(VARCHAR(10), Id) AS ProfileUrl,\n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%turke%' OR\n     LOWER(Location) LIKE '%t\u00fcrki%' OR\n     Location LIKE '%Turkey%' OR \n     Location LIKE '%T\u00fcrki%' OR\n     Location LIKE '%Istanbul%' OR\n     Location LIKE '%istanbul%' OR\n     Location LIKE '%gebze%' OR\n     Location LIKE '%edirne%' OR\n     Location LIKE '%izmir%' OR\n     Location LIKE '%Izmir%' OR\n     Location LIKE '%Ankara%' OR\n     Location LIKE '%Bursa%' OR\n     Location LIKE '%ankara%' OR\n     Location LIKE '%bursa%'\n     )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":975445,"Title":"New sort mode for tags: most recently edited","Description":"https:\/\/meta.stackexchange.com\/questions\/232332\/new-sort-mode-for-tags-most-recently-edited","QueryBody":"SELECT t.tagname, CONCAT('site:\/\/', 'tags\/', t.tagname, '\/info', '|', t.tagname, ' \/ info') AS \"Link to excerpt\/wiki\", MAX(e.LastEditDate) AS \"Last Excerpt edit date\", MAX(w.LastEditDate) AS \"Last Wiki edit date\", CASE WHEN MAX(e.LastEditDate) > MAX(w.LastEditDate) THEN MAX(e.LastEditDate) ELSE MAX(w.LastEditDate) END AS lastactive FROM tags AS t LEFT OUTER JOIN posts AS e ON e.id = t.excerptpostid LEFT OUTER JOIN posts AS w ON w.id = t.wikipostid WHERE NOT t.excerptpostid IS NULL OR NOT t.wikipostid IS NULL GROUP BY t.tagname ORDER BY \"lastactive\" DESC","CreationDate":"2019-02-03 18:26:12","validated":false,"QueryBody_Original":"SELECT  t.tagname\n     , concat('site:\/\/'\n       , 'tags\/'\n       , t.tagname\n       , '\/info'\n       , '|'\n       , t.tagname\n       , ' \/ info') [Link to excerpt\/wiki]\n     , max(e.LastEditDate) [Last Excerpt edit date]\n     , max(w.LastEditDate) [Last Wiki edit date]\n     , case \n       when max(e.LastEditDate) > max(w.LastEditDate) \n       then max(e.LastEditDate) \n       else max(w.LastEditDate)\n       end lastactive\nfrom tags t\nleft outer join posts e on e.id = t.excerptpostid\nleft outer join posts w on w.id = t.wikipostid \nwhere t.excerptpostid is not null \nor t.wikipostid is not null\ngroup by t.tagname\norder by [lastactive] desc"},{"QuerySetId":975873,"Title":"Recent answers that are not mine","Description":null,"QueryBody":"SELECT id AS \"Post Link\", body FROM posts WHERE postTypeId = 2 AND creationdate > CURRENT_TIMESTAMP() - 7 AND deletiondate IS NULL AND owneruserid <> 24228 ORDER BY creationdate DESC","CreationDate":"2019-04-18 15:03:35","validated":false,"QueryBody_Original":"SELECT  id as [Post Link], body\nfrom posts\nwhere\npostTypeId = 2\nand creationdate > getdate()-7\nand deletiondate is null\nand owneruserid != 24228\norder by creationdate DESC"},{"QuerySetId":975898,"Title":"A strange operation problem in SQL Server \uff08-100\/-100*10 = 0\uff09","Description":null,"QueryBody":"SELECT (-100 \/ -100 * 10)","CreationDate":"2019-02-04 21:05:13","validated":false,"QueryBody_Original":"SELECT  (-100 \/ -100 * 10)"},{"QuerySetId":976701,"Title":"find posts with thank you","Description":null,"QueryBody":"SELECT * FROM Users WHERE CreationDate < '2019-01-01' AND CreationDate > '2018-01-01'","CreationDate":"2019-02-06 05:25:23","validated":false,"QueryBody_Original":"SELECT  * \nfrom Users\nwhere CreationDate <'2019-01-01' and CreationDate > '2018-01-01'"},{"QuerySetId":976852,"Title":"SELECT * FROM posts WHERE Id < 500","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id < 500","CreationDate":"2019-02-06 14:35:06","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE Id < 500"},{"QuerySetId":977032,"Title":"Arqade [minecraft-commands] average score per user reputation","Description":null,"QueryBody":"SELECT AVG(CAST(pp.Score AS FLOAT)) AS Average_Score, SUM(pp.Score) AS Score_Sum, COUNT(pp.REP_BUCKET) AS Post_Count, pp.REP_BUCKET AS Reputation_Bucket FROM (SELECT p.Score, CASE WHEN u.Reputation <= 50 THEN ' 000 - 50' WHEN u.Reputation > 50 AND u.Reputation <= 100 THEN '051 - 100' WHEN u.Reputation > 100 AND u.Reputation <= 200 THEN '101 - 200' WHEN u.Reputation > 200 AND u.Reputation <= 300 THEN '201 - 300' WHEN u.Reputation > 300 AND u.Reputation <= 400 THEN '301 - 400' ELSE 'over 400' END AS REP_BUCKET FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 AND p.Tags LIKE '%minecraft-commands%' ORDER BY p.CreationDate DESC LIMIT 1000) AS pp GROUP BY pp.REP_BUCKET ORDER BY pp.REP_BUCKET DESC","CreationDate":"2019-02-07 01:26:59","validated":false,"QueryBody_Original":"SELECT  \nAVG(Cast(pp.Score as Float)) as Average_Score,\nSUM(pp.Score) as Score_Sum,\nCount(pp.REP_BUCKET) as Post_Count,\npp.REP_BUCKET as Reputation_Bucket\nFROM\n\n(SELECT TOP 1000 \np.Score,\ncase \n   when u.Reputation <= 50 then ' 000 - 50'\n   when u.Reputation  > 50 and u.Reputation <= 100  then '051 - 100'\n   when u.Reputation  > 100 and u.Reputation <= 200 then '101 - 200'\n   when u.Reputation  > 200 and u.Reputation <= 300 then '201 - 300'\n   when u.Reputation  > 300 and u.Reputation <= 400 then '301 - 400'\n   else 'over 400'\nend as REP_BUCKET\nFROM Posts p\nJOIN Users u ON p.OwnerUserId = u.Id\nWHERE p.PostTypeId = 1\nAND p.Tags like '%minecraft-commands%'\nORDER BY p.CreationDate DESC) pp\n\nGROUP BY pp.REP_BUCKET\nORDER BY pp.REP_BUCKET DESC"},{"QuerySetId":977148,"Title":"Select users with their reputation, posts, answers","Description":null,"QueryBody":"SELECT p.Title, p.Id, u.DisplayName, u.Id, u.Reputation FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.Score >= 50 ORDER BY u.Reputation DESC","CreationDate":"2019-02-07 02:53:04","validated":false,"QueryBody_Original":"SELECT  p.Title, p.Id, u.DisplayName, u.Id, u.Reputation\nFROM Posts p\nJOIN Users u ON p.OwnerUserId = u.Id\nWHERE p.Score >= 50\nORDER BY u.Reputation DESC"},{"QuerySetId":977168,"Title":"#1: User vs. Num Questions","Description":null,"QueryBody":"SELECT COUNT(p.Id) AS \"Num Questions\", u.Id AS \"User Link\", u.DisplayName, u.Reputation FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 AND u.Reputation > 10 GROUP BY u.Id, u.Reputation, u.DisplayName ORDER BY u.Reputation DESC","CreationDate":"2019-02-08 05:55:08","validated":false,"QueryBody_Original":"SELECT  count(p.Id) as \"Num Questions\", u.Id AS [User Link], u.DisplayName, u.Reputation\nFROM Posts p\nJOIN Users u ON p.OwnerUserId = u.Id\nWHERE p.PostTypeId = 1 and u.Reputation > 10\nGROUP BY u.Id, u.Reputation, u.DisplayName\nORDER BY u.Reputation DESC"},{"QuerySetId":977273,"Title":"Top 150 users from Rajkot","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ahmedabad%' OR UPPER(Location) LIKE '%AHMEDABAD' ORDER BY Reputation DESC LIMIT 150","CreationDate":"2019-08-05 09:58:29","validated":false,"QueryBody_Original":"SELECT  TOP 150\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ahmedabad%'\n    OR UPPER(Location) LIKE '%AHMEDABAD'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":977521,"Title":"Deleted users with large number of posts","Description":null,"QueryBody":"SELECT p.OwnerDisplayName, COUNT(p.Id) FROM Posts AS p WHERE NOT p.OwnerDisplayName IS NULL AND p.PostTypeId IN (1, 2) GROUP BY p.OwnerDisplayName ORDER BY COUNT(p.Id) DESC","CreationDate":"2019-02-07 17:25:51","validated":false,"QueryBody_Original":"SELECT  p.OwnerDisplayName,\nCOUNT(p.Id)\nFROM Posts AS p\nWHERE p.OwnerDisplayName IS NOT NULL AND\np.PostTypeId IN (1, 2)\nGROUP BY p.OwnerDisplayName\nORDER BY COUNT(p.Id) DESC;"},{"QuerySetId":977899,"Title":"SELECT body FROM Posts ORDER BY viewCount desc","Description":null,"QueryBody":"SELECT body, viewcount, tags FROM Posts ORDER BY viewcount DESC LIMIT 200","CreationDate":"2019-02-08 11:17:45","validated":false,"QueryBody_Original":"SELECT  TOP 200 body, viewcount, tags FROM Posts ORDER BY viewcount desc"},{"QuerySetId":977980,"Title":"SELECT * FROM posts WHERE Id < 50","Description":null,"QueryBody":"SELECT Title, Tags FROM posts WHERE Id < 50","CreationDate":"2019-02-08 17:19:02","validated":false,"QueryBody_Original":"SELECT  Title, Tags FROM posts WHERE Id < 50"},{"QuerySetId":978165,"Title":"User's Reputation, Questions, Comments and Answers","Description":null,"QueryBody":"SELECT DisplayName, Reputation, AnswerCount, CommentCount FROM Users, Posts ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-02-08 22:43:08","validated":false,"QueryBody_Original":"SELECT  TOP(100)\nDisplayName, Reputation, AnswerCount, CommentCount\nFROM Users, Posts\nORDER BY Reputation DESC"},{"QuerySetId":978699,"Title":"Top 200 Questions in February 2019","Description":null,"QueryBody":"SELECT ViewCount, ID, Body FROM Posts WHERE PostTypeID = '1' AND CreationDate BETWEEN '2019-02-01' AND '2019-02-28' ORDER BY ViewCount DESC LIMIT 200","CreationDate":"2019-02-09 07:15:55","validated":false,"QueryBody_Original":"SELECT  Top 200 ViewCount, ID, Body from Posts \nwhere PostTypeID = '1' and CreationDate between '2019-02-01' and '2019-02-28'\nOrder By ViewCount Desc;"},{"QuerySetId":978718,"Title":"1. Find the top 200 questions with most views. ","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", ViewCount AS Total_Views FROM Posts JOIN Comments ON Posts.Id = Comments.Id WHERE PostId = 1 AND Posts.CreationDate BETWEEN '2019-02-01 00:00:01' AND '2019-02-28 23:59:59' ORDER BY Total_Views DESC LIMIT 200","CreationDate":"2019-02-09 10:28:30","validated":false,"QueryBody_Original":"SELECT  TOP 200 Posts.Id AS [Post Link], ViewCount AS Total_Views\nFROM Posts JOIN Comments\nON Posts.Id = Comments.Id\nWHERE PostId = 1 \nAND Posts.CreationDate BETWEEN '2019-02-01 00:00:01' AND '2019-02-28 23:59:59'\nORDER BY Total_Views DESC;"},{"QuerySetId":979978,"Title":"Apache Spark Post Votes ","Description":null,"QueryBody":"SELECT p.Id, p.PostTypeId, p.ParentId, p.CreationDate, p.Score, p.ViewCount, p.Title, v.VoteTypeId, v.UserId, v.CreationDate FROM Posts AS p INNER JOIN Votes AS v ON v.PostId = p.Id WHERE p.Tags LIKE '%apache-spark%' AND v.CreationDate BETWEEN '2017-01-01' AND '2019-01-01' ORDER BY v.CreationDate","CreationDate":"2019-02-10 16:11:49","validated":false,"QueryBody_Original":"SELECT  p.Id, p.PostTypeId, p.ParentId, p.CreationDate, p.Score, p.ViewCount, p.Title,\nv.VoteTypeId, v.UserId, v.CreationDate\nFROM Posts p\nINNER JOIN Votes v on v.PostId=p.Id\nWHERE p.Tags LIKE '%apache-spark%'\nAND v.CreationDate BETWEEN '2017-01-01' AND '2019-01-01'\nORDER BY v.CreationDate ASC"},{"QuerySetId":980059,"Title":"All users that don't have down vote privileges and upvoted less than 10 times","Description":null,"QueryBody":"SELECT * FROM Users WHERE 125 > Reputation AND 10 < UpVotes","CreationDate":"2019-02-16 01:40:44","validated":false,"QueryBody_Original":"SELECT  * FROM Users\nWHERE 125>Reputation and 10<UpVotes;"},{"QuerySetId":980060,"Title":"All users with moderator tools","Description":null,"QueryBody":"SELECT * FROM Users WHERE Reputation >= 10000","CreationDate":"2019-02-10 18:15:32","validated":false,"QueryBody_Original":"SELECT  * FROM Users\nWHERE Reputation>=10000"},{"QuerySetId":980092,"Title":"users by total length of posts","Description":null,"QueryBody":"SELECT CAST(LOG(LENGTH(Body), 10) AS FLOAT(13, 1)) AS LogPostLength, AVG(CAST(p.Score AS FLOAT(10, 2))) AS MeanPostScore FROM Posts AS p JOIN Users AS q ON p.OwnerUserId = q.Id WHERE q.Reputation > 10000 AND LENGTH(Body) > 0 GROUP BY CAST(LOG(LENGTH(Body), 10) AS FLOAT(13, 1)) ORDER BY CAST(LOG(LENGTH(Body), 10) AS FLOAT(13, 1))","CreationDate":"2019-10-24 17:39:45","validated":false,"QueryBody_Original":"SELECT  CAST(log(len(Body),10) AS DECIMAL(13,1)) AS LogPostLength, avg(CAST(p.Score AS DECIMAL(10,2))) AS MeanPostScore\nfrom Posts p join Users q on p.OwnerUserId = q.Id\nwhere q.Reputation > 10000 and len(Body)>0\ngroup by CAST(log(len(Body),10) AS DECIMAL(13,1))\norder by CAST(log(len(Body),10) AS DECIMAL(13,1)) Asc"},{"QuerySetId":980116,"Title":"SELECT YEAR(CreationDate), COUNT(Title) AS Number_of_Questions FROM Posts  WHERE PostTypeId = 1 AND ","Description":null,"QueryBody":"SELECT YEAR(CreationDate), COUNT(Title) AS Number_of_Questions FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%<r>%' OR Tags LIKE '%<python>%' OR Tags LIKE '%<javascript>%' GROUP BY YEAR(CreationDate)","CreationDate":"2019-02-10 23:32:58","validated":false,"QueryBody_Original":"SELECT  YEAR(CreationDate), COUNT(Title) AS Number_of_Questions\nFROM Posts \nWHERE PostTypeId = 1\nAND Tags LIKE '%<r>%' OR Tags LIKE '%<python>%' OR Tags LIKE '%<javascript>%'\nGROUP BY YEAR(CreationDate)"},{"QuerySetId":980134,"Title":"Getting top 50 viewed posts","Description":null,"QueryBody":"SELECT * FROM Posts ORDER BY ViewCount DESC LIMIT 50","CreationDate":"2019-02-11 00:19:22","validated":false,"QueryBody_Original":"SELECT  TOP 50 * FROM Posts\nORDER BY ViewCount desc"},{"QuerySetId":980160,"Title":"SELECT TOP 200, ViewCount, CreationDate FROM Posts WHERE PostTypeId =1 AND CreationDate BETWEEN '201","Description":null,"QueryBody":"SELECT Title, ViewCount, CreationDate FROM Posts WHERE PostTypeId = '1' AND CreationDate BETWEEN '2019-02-01 00:00:00' AND '2019-02-28 23:59:59' ORDER BY ViewCount DESC LIMIT 200","CreationDate":"2019-02-11 01:55:18","validated":false,"QueryBody_Original":"SELECT  TOP 200\nTitle, \nViewCount,\nCreationDate\nFROM Posts \nWHERE PostTypeId ='1'\nAND CreationDate BETWEEN '2019-02-01 00:00:00' AND '2019-02-28 23:59:59'\nORDER BY ViewCount DESC"},{"QuerySetId":980568,"Title":"Top 25 users from Thailand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC) AS Rank, Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Thailand%' LIMIT 25","CreationDate":"2019-02-11 15:19:43","validated":false,"QueryBody_Original":"SELECT \n   TOP 25 ROW_NUMBER() OVER (Order by reputation DESC) as Rank,\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Thailand%'\n--ORDER BY\n--   reputation DESC"},{"QuerySetId":980660,"Title":"sum of total awarded bounties amount","Description":null,"QueryBody":"SELECT SUM(v.BountyAmount) AS \"Bounty Amount\", V.PostId AS \"Post Link\" FROM Votes AS V INNER JOIN Posts AS P ON P.id = V.PostId WHERE P.PostTypeId = 2 AND V.VoteTypeId = 9 GROUP BY V.PostId ORDER BY 'Bounty Amount' DESC LIMIT 100","CreationDate":"2019-02-11 17:24:41","validated":false,"QueryBody_Original":"SELECT  TOP 100 SUM(v.BountyAmount) as 'Bounty Amount',\nV.PostId AS [Post Link]\nFROM Votes V \nINNER JOIN Posts P on P.id = V.PostId\nWHERE P.PostTypeId = 2 and V.VoteTypeId=9 \nGROUP by V.PostId\nORDER by 'Bounty Amount' desc"},{"QuerySetId":980752,"Title":"Find top users in a location","Description":null,"QueryBody":"SELECT u.Reputation, COUNT(b.Id) AS Badges, b.UserId AS \"User Link\", u.Location FROM Users AS u LEFT JOIN Badges AS b ON b.UserId = u.Id WHERE UPPER(Location) LIKE UPPER('%##location##%') GROUP BY b.UserId, u.Reputation, u.Location ORDER BY Reputation DESC","CreationDate":"2019-02-12 20:52:29","validated":false,"QueryBody_Original":"SELECT \n  u.Reputation, \n  Count(b.Id) AS Badges,\n  b.UserId AS [User Link], \n  u.Location\nFROM Users u\nLEFT JOIN Badges b ON b.UserId=u.Id\nWHERE\nUpper(Location) LIKE Upper('%##location##%') \nGROUP BY\n  b.UserId, \n  u.Reputation, \n  u.Location\nORDER BY Reputation DESC"},{"QuerySetId":981137,"Title":"User, Reputation, Answer, and Comment","Description":null,"QueryBody":"SELECT Users.Id, Users.Reputation \/* Posts.AnswerCount, *\/ \/* Posts.CommentCount *\/ FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id GROUP BY Users.Id, Users.Reputation ORDER BY Users.Id","CreationDate":"2019-02-12 08:10:09","validated":false,"QueryBody_Original":"SELECT  \n    Users.Id, \n    Users.Reputation\n    --Posts.AnswerCount,\n    --Posts.CommentCount\nFROM Posts\n    INNER JOIN Users ON Posts.OwnerUserId=Users.Id\nGROUP BY \n    Users.Id, \n    Users.Reputation\n    --Posts.AnswerCount, \n    --Posts.CommentCount\nORDER BY Users.Id"},{"QuerySetId":982389,"Title":"Largest rep without having posts","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation AS Rep, * FROM Users WHERE NOT Id IN (SELECT OwnerUserId FROM Posts) ORDER BY Reputation DESC, Id LIMIT 100","CreationDate":"2019-02-13 05:50:14","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [User Link], Reputation AS Rep, *\nFROM Users\nWHERE Id NOT IN (SELECT OwnerUserId FROM Posts)\nORDER BY Reputation DESC, Id"},{"QuerySetId":982671,"Title":"SELECT COUNT(Title) FROM Posts WHERE PostTypeId =1 AND (Tags LIKE '%python%') OR (Tags LIKE '%javasc","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS Year, MONTH(CreationDate) AS Month, COUNT(Title) FROM Posts WHERE PostTypeId = 1 AND ((Tags LIKE '%python%') OR (Tags LIKE '%javascript%')) AND YEAR(CreationDate) = '2019' AND (MONTH(CreationDate) = '1' OR MONTH(CreationDate) = '2') GROUP BY YEAR(CreationDate), MONTH(CreationDate)","CreationDate":"2019-02-13 09:14:21","validated":false,"QueryBody_Original":"SELECT  Year(CreationDate) as Year, Month(CreationDate) as Month, COUNT(Title) \nFROM Posts\nWHERE PostTypeId =1\nAND ((Tags LIKE '%python%') OR (Tags LIKE '%javascript%'))\nAND Year(CreationDate) = '2019'\nAND (Month(CreationDate) = '1' OR Month(CreationDate) = '2')\nGROUP BY Year(CreationDate), Month(CreationDate)"},{"QuerySetId":983475,"Title":"Unanswered Qs commented on by DoubleAA","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.score, p.closeddate, c.text, (CASE WHEN c.text LIKE '%[0123456789]:[0123456789]%' OR c.text LIKE '%[0123456789]a%' OR c.text LIKE '%[0123456789]b%' THEN 1 ELSE 0 END) AS HasRef, (CASE WHEN c.text LIKE '%http%' THEN 1 ELSE 0 END) AS HasLink, (CASE WHEN c.text LIKE '%http%' AND NOT c.text LIKE '%stackexchange%' THEN 1 ELSE 0 END) AS HasExternalLink FROM comments AS c INNER JOIN posts AS p ON p.id = c.postid WHERE c.userid = 759 AND p.posttypeid = 1 AND p.score >= 0 AND p.answercount = 0 AND NOT c.text LIKE '%?%' AND (c.text LIKE '%[0123456789]:[0123456789]%' OR c.text LIKE '%[0123456789]a%' OR c.text LIKE '%[0123456789]b%') \/* Refs only *\/ ORDER BY p.score","CreationDate":"2019-02-17 07:07:32","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link], p.score, p.closeddate, c.text\n, (case when c.text like '%[0123456789]:[0123456789]%'\n  or c.text like '%[0123456789]a%' \n  or c.text like '%[0123456789]b%' \n  then 1 else 0 end) as HasRef\n, (case when c.text like '%http%' then 1 else 0 end) as HasLink\n, (case when c.text like '%http%' and c.text not like '%stackexchange%' then 1 else 0 end) as HasExternalLink\nfrom comments c\ninner join posts p on p.id = c.postid\nwhere c.userid = 759\nand p.posttypeid = 1\nand p.score >= 0\nand p.answercount = 0\nand c.text not like '%?%'\nand (c.text like '%[0123456789]:[0123456789]%' \n  or c.text like '%[0123456789]a%' \n  or c.text like '%[0123456789]b%')-- Refs only\norder by p.score asc"},{"QuerySetId":983509,"Title":"Getting new Keras and Tensorflow questions","Description":null,"QueryBody":"SELECT Id, Title, CreationDate FROM Posts WHERE ((Tags LIKE '%##lib##%') OR (Tags LIKE '%##lib##') OR (Tags LIKE '##lib##%')) AND Score >= 5 AND CreationDate > '2018-03-01'","CreationDate":"2019-02-13 22:08:25","validated":false,"QueryBody_Original":"SELECT  Id, Title, CreationDate FROM Posts WHERE (\n(Tags LIKE '%##lib##%') OR\n(Tags LIKE '%##lib##') OR\n(Tags LIKE '##lib##%')\n)\nAND Score >= 5 AND CreationDate > '2018-03-01'"},{"QuerySetId":983587,"Title":"Number of total users on the site","Description":null,"QueryBody":"SELECT COUNT(*) AS users FROM Users","CreationDate":"2019-02-13 22:59:41","validated":false,"QueryBody_Original":"SELECT  count(*) users\nfrom Users"},{"QuerySetId":984327,"Title":"SELECT TOP 200 * FROM Posts WHERE PostTypeID = '1' AND Month(CreationDate) = '02'  AND Year(Creation","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeID = '1' AND MONTH(CreationDate) = '02' AND YEAR(CreationDate) = '2019' ORDER BY ViewCount DESC LIMIT 200","CreationDate":"2019-02-14 08:56:33","validated":false,"QueryBody_Original":"SELECT  TOP 200 *\nFROM Posts\nWHERE PostTypeID = '1'\nAND Month(CreationDate) = '02' \nAND Year(CreationDate) = '2019'\nORDER BY ViewCount DESC"},{"QuerySetId":984538,"Title":"List of users with their gold badge counts and number of posts","Description":null,"QueryBody":"SELECT u.displayname, Posts.OwnerUserId AS UserId, BadgeCount, COUNT(Posts.Id) AS PostsCount FROM Posts JOIN users AS u ON u.id = posts.owneruserid JOIN (SELECT Badges.UserId AS UserId, COUNT(Badges.Id) AS BadgeCount FROM Badges WHERE Badges.Class = 1 GROUP BY Badges.UserId) AS B ON Posts.OwnerUserId = B.UserId GROUP BY u.displayname, Posts.OwnerUserId, B.BadgeCount ORDER BY b.badgecount DESC LIMIT 10","CreationDate":"2019-02-14 13:16:29","validated":false,"QueryBody_Original":"SELECT  TOP 10 u.displayname,Posts.OwnerUserId AS UserId, BadgeCount, COUNT(Posts.Id) AS PostsCount FROM\nPosts \njoin users u on u.id = posts.owneruserid\nJOIN\n(SELECT Badges.UserId as UserId, COUNT(Badges.Id) AS BadgeCount FROM\nBadges WHERE Badges.Class = 1 GROUP BY Badges.UserId) as B\nON Posts.OwnerUserId=B.UserId\nGROUP BY u.displayname,Posts.OwnerUserId,B.BadgeCount\norder by b.badgecount desc"},{"QuerySetId":984547,"Title":"Top 10 Gold Badge Users","Description":null,"QueryBody":"SELECT u.DisplayName, Posts.OwnerUserId AS UserId, BadgeCount, COUNT(Posts.Id) AS PostsCount FROM Posts JOIN Users AS u ON u.id = Posts.Owneruserid JOIN (SELECT Badges.UserId AS UserId, COUNT(Badges.Id) AS BadgeCount FROM Badges WHERE Badges.Class = 1 GROUP BY Badges.UserId) AS B ON Posts.OwnerUserId = B.UserId GROUP BY u.DisplayName, Posts.OwnerUserId, B.BadgeCount ORDER BY b.BadgeCount DESC LIMIT 10","CreationDate":"2019-02-14 13:20:32","validated":false,"QueryBody_Original":"SELECT  TOP 10 u.DisplayName, \n              Posts.OwnerUserId AS UserId, \n              BadgeCount, \n              COUNT(Posts.Id) AS PostsCount\nFROM Posts\n     JOIN Users u ON u.id = Posts.Owneruserid\n     JOIN\n(\n    SELECT Badges.UserId AS UserId, \n           COUNT(Badges.Id) AS BadgeCount\n    FROM Badges\n    WHERE Badges.Class = 1\n    GROUP BY Badges.UserId\n) AS B ON Posts.OwnerUserId = B.UserId\nGROUP BY u.DisplayName, \n         Posts.OwnerUserId, \n         B.BadgeCount\nORDER BY b.BadgeCount DESC;"},{"QuerySetId":985585,"Title":"Comments by Isaac Moses saying Hirsch on unanswered questions","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.score, p.closeddate, c.text FROM comments AS c INNER JOIN posts AS p ON p.id = c.postid WHERE c.userid = 2 AND p.posttypeid = 1 AND p.score >= 0 AND p.answercount = 0 AND c.text LIKE '%answer%' ORDER BY p.score DESC","CreationDate":"2019-02-15 21:35:46","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link], p.score, p.closeddate, c.text\nfrom comments c\ninner join posts p on p.id = c.postid\nwhere c.userid = 2\nand p.posttypeid = 1\nand p.score >= 0\nand p.answercount = 0\nand c.text like '%answer%'\norder by p.score desc"},{"QuerySetId":985653,"Title":"Find users with most reputation in a location","Description":null,"QueryBody":"SELECT Reputation, DisplayName, CONCAT('https:\/\/stackoverflow.com\/users\/', Id) AS URL, Location FROM Users WHERE UPPER(Location) LIKE UPPER('%##location##%') ORDER BY Reputation DESC","CreationDate":"2019-02-15 23:59:08","validated":false,"QueryBody_Original":"SELECT \n  Reputation, \n  DisplayName, \n  CONCAT('https:\/\/stackoverflow.com\/users\/',Id) AS URL, \n  Location\nFROM Users\nWHERE\nUpper(Location) LIKE Upper('%##location##%') \nORDER BY Reputation DESC"},{"QuerySetId":985663,"Title":"Find posts with \"thanks\" or \"thank you\"","Description":"Find questions and answers with the text \"thanks\" or \"thank you\" so you can edit out the irrelevant parts. Good way for users with <2k reputation to gain some good rep.","QueryBody":"SELECT p.Body AS \"Body\", p.Id AS \"Post Link\" FROM Posts AS p WHERE p.Body LIKE '%thank%' ORDER BY p.CreationDate DESC LIMIT 100","CreationDate":"2019-03-22 21:32:00","validated":false,"QueryBody_Original":"SELECT  TOP 100 p.Body as [Body], p.Id as [Post Link]\nFROM Posts p\nWHERE p.Body LIKE '%thank%'\nORDER BY p.CreationDate DESC"},{"QuerySetId":985674,"Title":"Answers Per Question in 2019","Description":null,"QueryBody":"SELECT AnswerCount FROM Posts WHERE TIME_TO_STR(CreationDate, '%YEAR') = '2019' AND Posts.PostTypeId = 1","CreationDate":"2019-02-16 01:14:44","validated":false,"QueryBody_Original":"SELECT  AnswerCount\nFROM Posts\nWHERE DATEPART(YEAR, CreationDate) = '2019'\nAND Posts.PostTypeId = 1"},{"QuerySetId":985861,"Title":"MSDS Spark project data 1","Description":null,"QueryBody":"SELECT id, creationdate, score, viewcount, body, owneruserid, answercount, favoritecount, acceptedanswerid FROM posts WHERE creationdate LIKE '%2017%' AND answercount > 2","CreationDate":"2019-02-16 23:33:50","validated":false,"QueryBody_Original":"SELECT  id, creationdate, score, viewcount, body,\nowneruserid, answercount, favoritecount, acceptedanswerid\nfrom posts\nwhere creationdate like '%2017%' and \nanswercount >2;"},{"QuerySetId":986482,"Title":"Find the # Questions that contain either tag \u201cpython\u201d or \u201cjavascript\u201d per month in 2019 Jan and Feb","Description":null,"QueryBody":"SELECT COUNT(ID) FROM Posts WHERE (PostTypeId = 1 AND (Tags LIKE '%java%')) AND CreationDate < '2019-3-10'","CreationDate":"2019-03-26 12:36:10","validated":false,"QueryBody_Original":"SELECT  count(ID) \nFrom Posts\nWhere (PostTypeId = 1 and (Tags LIKE '%java%')) and CreationDate < '2019-3-10'"},{"QuerySetId":986879,"Title":"Users who can access FP&LA review queues on Beta rep threshold and visited the site within 7 days","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE Reputation > 350 AND LastAccessDate >= DATEADD(day, -7, GETDATE()) ORDER BY LastAccessDate DESC","CreationDate":"2019-07-07 13:42:42","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], Reputation, LastAccessDate\nFROM Users\nWHERE Reputation > 350 AND LastAccessDate >= DATEADD(day, -7, GETDATE())\nORDER BY LastAccessDate DESC"},{"QuerySetId":986955,"Title":"Posts by authors for the last 30 days","Description":null,"QueryBody":"SELECT U.DisplayName, PP.pcount FROM USERS AS U JOIN (SELECT P.OwnerUserId, COUNT(DISTINCT P.id) AS pcount FROM Posts AS P WHERE P.CreationDate >= DATEADD(d, -30, GETDATE()) GROUP BY P.OwnerUserId) AS PP ON U.Id = PP.OwnerUserId ORDER BY PP.pcount DESC","CreationDate":"2019-02-17 16:56:14","validated":false,"QueryBody_Original":"SELECT  U.DisplayName, PP.pcount\nFROM USERS AS U \nJOIN (\n  SELECT P.OwnerUserId, count(distinct P.id) AS pcount\n  FROM Posts AS P\n  WHERE P.CreationDate >= DATEADD(d, -30, GETDATE())\n  GROUP BY P.OwnerUserId\n) AS PP\nON U.Id = PP.OwnerUserId \nORDER BY PP.pcount DESC;"},{"QuerySetId":987050,"Title":"Links to the defunct Theoretical Physics site","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%theoreticalphysics.stackexchange.com%'","CreationDate":"2019-02-18 00:39:33","validated":false,"QueryBody_Original":"SELECT \nId AS [Post Link]\nFROM Posts\nWHERE Body LIKE '%theoreticalphysics.stackexchange.com%'"},{"QuerySetId":988780,"Title":"select count(*) as count  from posts  where postTypeId = 1","Description":null,"QueryBody":"SELECT COUNT(*) AS count FROM posts WHERE postTypeId = 1","CreationDate":"2019-02-20 05:33:30","validated":false,"QueryBody_Original":"SELECT  count(*) as count \nfrom posts \nwhere postTypeId = 1"},{"QuerySetId":989808,"Title":"SELECT Body FROM Posts WHERE Body LIKE \"%Python%\"","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE Title LIKE '%Python%'","CreationDate":"2019-02-22 16:24:41","validated":false,"QueryBody_Original":"SELECT  Body FROM Posts WHERE Title LIKE '%Python%'"},{"QuerySetId":989870,"Title":"Most downvoted posts without a single (non-owner) comment","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Posts.Score FROM Posts LEFT JOIN Comments ON Comments.PostId = Posts.Id AND Comments.UserId <> Posts.OwnerUserId AND Comments.UserId > 1 WHERE Comments.Id IS NULL AND Posts.OwnerUserId > 1 AND Posts.Score < 0 ORDER BY Posts.Score, Posts.Id","CreationDate":"2019-02-22 18:14:30","validated":false,"QueryBody_Original":"SELECT \n  Posts.Id AS [Post Link],\n  Posts.OwnerUserId AS [User Link],\n  Posts.Score\nFROM Posts\nLEFT JOIN Comments ON\n  Comments.PostId = Posts.Id\n  AND\n  Comments.UserId <> Posts.OwnerUserId\n  AND\n  Comments.UserId > 1\nWHERE\n  Comments.Id IS NULL\n  AND\n  Posts.OwnerUserId > 1\n  AND\n  Posts.Score < 0\nORDER BY Posts.Score, Posts.Id"},{"QuerySetId":989872,"Title":"People by the summed score of their downvoted posts","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", SUM(Score) AS DownSum FROM Posts WHERE Score < 0 AND OwnerUserId > 0 GROUP BY Posts.OwnerUserId ORDER BY DownSum, OwnerUserId LIMIT 100","CreationDate":"2019-02-22 18:22:37","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  OwnerUserId AS [User Link],\n  SUM(Score) AS DownSum\nFROM Posts\nWHERE\n  Score < 0\n  AND\n  OwnerUserId > 0\nGROUP BY Posts.OwnerUserId\nORDER BY DownSum, OwnerUserId"},{"QuerySetId":989981,"Title":"Count references to Wikipedia in answers","Description":null,"QueryBody":"SELECT A.score, COUNT(*) AS Cnt FROM Posts AS A WHERE A.PostTypeId = 2 \/* answers *\/ AND (A.Body LIKE '%en.m.wikipedia.org\/wiki%') AND a.score > 1 GROUP BY A.score","CreationDate":"2019-02-22 20:41:37","validated":false,"QueryBody_Original":"SELECT  \nA.score, count(*) as Cnt\n  \nFROM\n  Posts A\nWHERE\n       A.PostTypeId = 2 --answers\n  AND (A.Body LIKE '%en.m.wikipedia.org\/wiki%')\n  and a.score>1\nGroup by A.score"},{"QuerySetId":990184,"Title":"question about my sendings - dynamic allocation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE LOWER(Location) LIKE LOWER('%Bangladesh%') ORDER BY Reputation DESC LIMIT 500","CreationDate":"2019-02-23 15:12:05","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%Bangladesh%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":990312,"Title":"Comments containing string1 but not string2, string3","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%##string1?\\ve##%' AND NOT (Text LIKE '%##string2?\\vec##%') AND NOT (Text LIKE '%##string3?\\vert##%') ORDER BY CreationDate DESC","CreationDate":"2019-02-24 00:26:57","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%##string1?\\ve##%'\n  AND NOT(Text LIKE '%##string2?\\vec##%') \n  AND NOT(Text LIKE '%##string3?\\vert##%') \nORDER BY CreationDate DESC"},{"QuerySetId":990666,"Title":"select * from Posts where id<5000","Description":null,"QueryBody":"SELECT * FROM Posts WHERE id < 5000","CreationDate":"2019-02-24 22:56:15","validated":false,"QueryBody_Original":"SELECT  * from Posts where id <5000"},{"QuerySetId":991699,"Title":"Users by location, reputation and tags sorted by reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation AS Tags FROM Users WHERE LOWER(Location) LIKE LOWER('%##Location##%') ORDER BY Reputation DESC","CreationDate":"2019-02-26 17:56:47","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Location,\n    Reputation\n    Tags\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##Location##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":992092,"Title":"get data for inverted index assignment","Description":null,"QueryBody":"SELECT Id, Body, Tags FROM Posts WHERE CreationDate LIKE '%2018%' LIMIT 1000","CreationDate":"2019-02-27 07:35:34","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Id, Body, Tags\nFROM Posts\nWHERE CreationDate like '%2018%';"},{"QuerySetId":993018,"Title":"Question per Day on StackExchange","Description":null,"QueryBody":"SELECT Date AS \"Dates\", ROUND((SUM(pd.Questions) * 1.00 \/ COUNT(pd.Date)), 2) AS \"Questions per Day\" FROM (SELECT SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Questions\", CAST(p.CreationDate AS DATE) AS \"Date\" FROM Posts AS p GROUP BY CAST(p.CreationDate AS DATE)) AS pd GROUP BY Date ORDER BY Date DESC","CreationDate":"2019-03-29 17:39:56","validated":false,"QueryBody_Original":"SELECT \n\nDate AS [Dates],\nROUND((SUM(pd.Questions) * 1.00 \/ COUNT(pd.Date)),2) \n--datepart(dayofyear,getDate())\nAS [Questions per Day]\nFROM\n(\n\nSELECT \n\nSUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS [Questions],\nCAST(p.CreationDate AS Date) AS [Date]\nFROM Posts  AS p\nGROUP BY CAST(p.CreationDate AS Date)\n) AS pd\n\nGROUP BY Date\nORDER BY Date DESC"},{"QuerySetId":993029,"Title":"Votes per voter over time","Description":null,"QueryBody":"SELECT DATEADD(m, DATEDIFF(m, 0, v.CreationDate), 0) AS month, CAST(SUM(CASE WHEN v.votetypeid = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(DISTINCT p.OwnerUserId) AS upvotes_per_poster, CAST(SUM(CASE WHEN v.votetypeid = 3 THEN 1 ELSE 0 END) AS FLOAT) \/ COUNT(DISTINCT p.OwnerUserId) AS downvotes_per_poster, CAST(COUNT(DISTINCT p.id) AS FLOAT) \/ COUNT(DISTINCT p.OwnerUserId) AS posts_per_poster FROM Votes AS v JOIN Posts AS p ON v.PostId = p.Id WHERE (v.VoteTypeId = 2 OR v.VoteTypeId = 3) GROUP BY DATEADD(m, DATEDIFF(m, 0, v.CreationDate), 0) ORDER BY DATEADD(m, DATEDIFF(m, 0, v.CreationDate), 0)","CreationDate":"2019-02-28 01:51:38","validated":false,"QueryBody_Original":"SELECT  \n  dateadd(m, datediff(m,0, v.CreationDate), 0) as month,\n  cast(sum(case when v.votetypeid = 2 then 1 else 0 end) as float) \/ Count(distinct p.OwnerUserId) as upvotes_per_poster,\n    cast(sum(case when v.votetypeid = 3 then 1 else 0 end) as float) \/ Count(distinct p.OwnerUserId) as downvotes_per_poster,\n    cast(count(distinct p.id) as float) \/ Count(distinct p.OwnerUserId) as posts_per_poster\n\nfrom\n  Votes v\n  join Posts p\n  on v.PostId = p.Id\nwhere\n  (v.VoteTypeId = 2\n    or\n    v.VoteTypeId = 3)\ngroup by dateadd(m, datediff(m,0, v.CreationDate), 0)\norder by dateadd(m, datediff(m,0, v.CreationDate), 0)"},{"QuerySetId":994627,"Title":"Answered and closed, no time limit","Description":null,"QueryBody":"SELECT COUNT(p.id) \/* p.score, p.id, p.body, p.title, p.tags, null as comment *\/ FROM Posts AS p, PostHistory AS ph WHERE p.PostTypeId = 1 AND ph.PostHistoryTypeId = 10 AND NOT p.acceptedanswerid IS NULL AND p.id = ph.postid AND p.score > 0","CreationDate":"2019-03-01 20:18:46","validated":false,"QueryBody_Original":"SELECT  count (p.id) -- p.score, p.id, p.body, p.title, p.tags, null as comment\nfrom Posts p, PostHistory ph\nwhere \np.PostTypeId=1 and\nph.PostHistoryTypeId=10 and\n--p.CreationDate <= '2018-09-01 00:00:00' and\np.acceptedanswerid is not null and\np.id=ph.postid and\np.score > 0"},{"QuerySetId":994875,"Title":"PM - Questions raised last week","Description":null,"QueryBody":"SELECT DATENAME(dw, creationdate), COUNT(1) FROM posts WHERE CreationDate > DATEADD(DAY, -120, CURRENT_TIMESTAMP()) AND parentid IS NULL GROUP BY DATENAME(dw, creationdate)","CreationDate":"2019-03-02 01:03:02","validated":false,"QueryBody_Original":"SELECT  \ndatename(dw,creationdate), count(1)\nfrom posts where \nCreationDate > DATEADD(DAY, -120, CURRENT_TIMESTAMP) and\nparentid is null\ngroup by datename(dw,creationdate)"},{"QuerySetId":994887,"Title":"PM - Questions raised per week days","Description":null,"QueryBody":"SELECT DATENAME(dw, creationdate), COUNT(1) FROM posts WHERE CreationDate > DATEADD(DAY, -120, CURRENT_TIMESTAMP()) AND parentid IS NULL GROUP BY DATENAME(dw, creationdate) ORDER BY COUNT(1)","CreationDate":"2019-03-02 01:06:54","validated":false,"QueryBody_Original":"SELECT  \ndatename(dw,creationdate), count(1)\nfrom posts where \nCreationDate > DATEADD(DAY, -120, CURRENT_TIMESTAMP) and\nparentid is null\ngroup by datename(dw,creationdate)\norder by count(1)"},{"QuerySetId":994958,"Title":"Average Questions Per Users Which Have Posted At Least One Question","Description":null,"QueryBody":"SELECT COUNT(Ids) AS Questioners, SUM(PostCount) AS Questions, (SUM(PostCount) \/ 1.0) \/ (COUNT(Ids) \/ 1.0) AS QsPerPoster FROM (SELECT p.OwnerUserId AS Ids, COUNT(p.Id) AS PostCount FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 GROUP BY p.OwnerUserId) AS q","CreationDate":"2019-03-02 02:16:54","validated":false,"QueryBody_Original":"SELECT  count(Ids) as Questioners, sum(PostCount) as Questions,\n(sum(PostCount)\/1.0)\/(count(Ids)\/1.0) as QsPerPoster\nFROM (\n  SELECT p.OwnerUserId as Ids, count(p.Id) as PostCount from Posts p\n  inner join Users u\n  on p.OwnerUserId = u.Id\n  where p.PostTypeId = 1\ngroup by p.OwnerUserId) q"},{"QuerySetId":994977,"Title":"New users and questions per year, with questions per user in first user's year","Description":"Considering only users with questions","QueryBody":"SELECT YEAR(u.CreationDate) AS u_year, COUNT(1) AS u_count, SUM(p.p_count) AS p_count, CAST(CAST(SUM(p.p_count) AS FLOAT) \/ CAST(COUNT(1) AS FLOAT) AS FLOAT(6, 3)) AS ppu_avg, MAX(p.p_count) AS p_count_max, MIN(p.p_count) AS p_count_min FROM Users AS u INNER JOIN (SELECT p.OwnerUserId, YEAR(p.CreationDate) AS p_year, COUNT(1) AS p_count FROM Posts AS p WHERE p.PostTypeId = 1 GROUP BY p.OwnerUserId, YEAR(p.CreationDate)) AS p ON p.OwnerUserId = u.Id AND p.p_year = YEAR(u.CreationDate) GROUP BY YEAR(u.CreationDate) ORDER BY u_year","CreationDate":"2019-03-11 14:07:48","validated":false,"QueryBody_Original":"SELECT \n    YEAR(u.CreationDate) AS u_year\n  , COUNT(1) AS u_count\n  , SUM(p.p_count) AS p_count\n  , CONVERT(decimal(6,3),CONVERT(decimal,SUM(p.p_count))\/CONVERT(decimal,COUNT(1))) AS ppu_avg\n  , MAX(p.p_count) AS p_count_max\n  , MIN(p.p_count) AS p_count_min\nFROM\n    Users u\nINNER JOIN\n  ( SELECT\n        p.OwnerUserId\n      , YEAR(p.CreationDate) AS p_year\n      , COUNT(1) AS p_count\n    FROM\n        Posts p\n    WHERE\n        p.PostTypeId = 1\n    GROUP BY\n        p.OwnerUserId\n      , YEAR(p.CreationDate)\n  ) p\nON\n    p.OwnerUserId = u.Id\nAND p.p_year = YEAR(u.CreationDate)\nGROUP BY\n    YEAR(u.CreationDate)\nORDER BY\n    u_year"},{"QuerySetId":995195,"Title":"select count(*) from posts where posts.ViewCount > 58000","Description":null,"QueryBody":"SELECT * FROM posts WHERE posts.ViewCount > 39955 AND posts.ViewCount < 58000","CreationDate":"2019-03-02 18:19:33","validated":false,"QueryBody_Original":"SELECT  * from posts where posts.ViewCount>39955 and posts.ViewCount < 58000"},{"QuerySetId":996684,"Title":"select * from Posts order by Score;","Description":null,"QueryBody":"SELECT value AS tag, COUNT(*) AS nrPosts, AVG(Score) AS avgScore FROM (SELECT Tags, Score, value FROM Posts JOIN LATERAL STRING_SPLIT(REPLACE(REPLACE(REPLACE(Tags, '><', ','), '<', ''), '>', ''), ',')) AS t1 GROUP BY value HAVING COUNT(*) > 4 ORDER BY AVG(Score) DESC","CreationDate":"2019-03-04 21:20:30","validated":false,"QueryBody_Original":"SELECT  value as tag, count(*) as nrPosts, avg(Score)as avgScore from (\nSELECT Tags, Score, value FROM Posts \nCROSS APPLY string_split(replace(replace(replace(Tags, '><', ','), '<', ''), '>', ''), ',')\n) as t1\ngroup by value\nhaving count(*) > 4\norder by avg(Score) desc"},{"QuerySetId":996873,"Title":"Number of users answered at least one post","Description":null,"QueryBody":"SELECT COUNT(Posts.Id) AS Answers FROM posts INNER JOIN Users ON Users.Id = OwnerUserId GROUP BY Posts.PostTypeId","CreationDate":"2019-06-25 15:54:35","validated":false,"QueryBody_Original":"SELECT  \n  count(Posts.Id) AS Answers\nfrom posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\n  GROUP BY\n    Posts.PostTypeId"},{"QuerySetId":996993,"Title":"Generalist Badge holders by increasing reputation","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", * FROM Badges, Users WHERE Badges.Name = 'Generalist' AND Badges.TagBased = 0 AND Badges.UserId = Users.Id ORDER BY Users.Reputation LIMIT 1000","CreationDate":"2019-03-05 14:17:08","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Users.Id AS [User Link], *\nFROM Badges, Users\nWHERE\n  Badges.Name = 'Generalist'\n  AND\n  Badges.TagBased = 0\n  AND\n  Badges.UserId = Users.Id\nORDER BY Users.Reputation;"},{"QuerySetId":997137,"Title":" which tag is used in questions with the highest average score, excluding tags used in less than 5 q","Description":null,"QueryBody":"SELECT Tags.TagName, AVG(CAST(Posts.Score AS FLOAT)) AS avg, COUNT(Posts.Id) AS count FROM Tags LEFT JOIN Posts ON Posts.Tags LIKE '%' + Tags.TagName + '%' GROUP BY Tags.TagName HAVING COUNT(Posts.Id) >= 5 ORDER BY avg DESC LIMIT 1","CreationDate":"2019-03-09 20:10:54","validated":false,"QueryBody_Original":"SELECT  TOP 1 Tags.TagName, AVG(CAST(Posts.Score AS FLOAT)) AS avg, COUNT(Posts.Id) AS count\nFROM Tags\nLEFT JOIN Posts\nON Posts.Tags like '%'+Tags.TagName+'%'\nGROUP BY Tags.TagName\nHAVING COUNT(Posts.Id) >= 5\nORDER BY avg DESC"},{"QuerySetId":997331,"Title":"Kui palju on kasutajaid kokku?","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE CreationDate BETWEEN '2019-01-01' AND '2019-03-03'","CreationDate":"2019-03-05 04:04:49","validated":false,"QueryBody_Original":"SELECT  count(Id) from Posts\nwhere CreationDate Between '2019-01-01' and '2019-03-03'\n;"},{"QuerySetId":997434,"Title":"select count(*) from posts where posts.ViewCount > 58000;","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE posts.ViewCount > 58000","CreationDate":"2019-03-05 04:36:53","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where posts.ViewCount > 58000"},{"QuerySetId":997642,"Title":"Age when deleted - experimental","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 43386","CreationDate":"2019-03-05 07:12:25","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id=43386"},{"QuerySetId":997811,"Title":"select id from posts where score > 5;","Description":null,"QueryBody":"SELECT id FROM posts WHERE score > 5","CreationDate":"2019-03-05 13:44:20","validated":false,"QueryBody_Original":"SELECT  id from posts where score > 5;"},{"QuerySetId":1000471,"Title":"Votes: UpVote to DownVote Ratio","Description":null,"QueryBody":"SELECT Id AS \"User Link\", UpVotes, DownVotes, (DownVotes \/ Upvotes) AS RATIO FROM Users WHERE Id IN (476, 4099593, 1849664, 19679, 366904, 168175, 229044, 16587) ORDER BY DownVotes DESC LIMIT 50","CreationDate":"2019-03-07 12:12:31","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  \n  Id as [User Link],\n  UpVotes,\n  DownVotes,\n  (DownVotes \/ Upvotes) AS RATIO\n  FROM Users\n  WHERE Id IN (476, 4099593, 1849664, 19679, 366904, 168175, 229044, 16587)\n  ORDER BY DownVotes DESC"},{"QuerySetId":1000487,"Title":"Vote ratio of 5 random moderators","Description":null,"QueryBody":"SELECT Id AS \"User Link\", UpVotes, DownVotes FROM Users WHERE Id IN (476, 4099593, 366904, 229044, 100297, 4621513) ORDER BY DownVotes DESC LIMIT 10","CreationDate":"2019-03-12 03:22:33","validated":false,"QueryBody_Original":"SELECT  TOP 10 \n     Id AS [User Link]\n\t,UpVotes\n\t,DownVotes\nFROM Users\nWHERE Id IN (\n\t\t476\n\t\t,4099593\n\t\t,366904\n\t\t,229044\n\t\t,100297\n        ,4621513\n\t\t)\nORDER BY DownVotes DESC"},{"QuerySetId":1001985,"Title":"How much do I use StackExchange? ","Description":null,"QueryBody":"SELECT SUBSTRING(CAST(TIME_TO_STR(CreationDate, '%H:%M:%S') AS TEXT(30)), 0, 6), COUNT(Id) FROM Posts WHERE OwnerUserId = '##UserId##' GROUP BY SUBSTRING(CAST(TIME_TO_STR(CreationDate, '%H:%M:%S') AS TEXT(30)), 0, 6)","CreationDate":"2019-03-09 19:35:17","validated":false,"QueryBody_Original":"SELECT  \n    SUBSTRING(convert(varchar,CreationDate,8),0,6), \n    COUNT (Id)\nFROM Posts\nWHERE OwnerUserId = '##UserId##'\nGROUP BY SUBSTRING(convert(varchar,CreationDate,8),0,6)"},{"QuerySetId":1003035,"Title":"Comments with Thanks or Thank you","Description":null,"QueryBody":"SELECT * FROM Comments WHERE CAST(LIKE('%stupid%') AS TEXT) AND CreationDate >= '2019-03-03'","CreationDate":"2019-03-11 20:34:07","validated":false,"QueryBody_Original":"SELECT  * from Comments where Text like ('%stupid%') and CreationDate >= '2019-03-03'"},{"QuerySetId":1003119,"Title":"Total number of questions & answers (compared) by month","Description":null,"QueryBody":"SELECT answers.date, answers.count AS answers, questions.count AS questions FROM (SELECT DATETIMEFROMPARTS(TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m'), 1, 0, 0, 0, 0) AS date, COUNT(*) AS count FROM posts WHERE posttypeid = 2 GROUP BY TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m')) AS answers JOIN (SELECT DATETIMEFROMPARTS(TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m'), 1, 0, 0, 0, 0) AS date, COUNT(*) AS count FROM posts WHERE posttypeid = 1 GROUP BY TIME_TO_STR(creationdate, '%Y'), TIME_TO_STR(creationdate, '%m')) AS questions ON answers.date = questions.date ORDER BY answers.date","CreationDate":"2019-03-11 22:45:15","validated":false,"QueryBody_Original":"SELECT  answers.date, answers.count as answers, questions.count as questions from \n(\n  SELECT datetimefromparts(datepart(year, creationdate), datepart(month, creationdate), 1, 0, 0, 0, 0) date, count(*) count\n  from posts\n  where posttypeid = 2\n  group by datepart(year, creationdate), datepart(month, creationdate)\n) answers\njoin (\n  SELECT datetimefromparts(datepart(year, creationdate), datepart(month, creationdate), 1, 0, 0, 0, 0) date, count(*) count\n  from posts\n  where posttypeid = 1\n  group by datepart(year, creationdate), datepart(month, creationdate)\n) questions on answers.date = questions.date\norder by answers.date"},{"QuerySetId":1003121,"Title":"Top 100 answers by score","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", CreationDate, Score FROM Posts WHERE PostTypeId = 2 ORDER BY Score DESC LIMIT 100","CreationDate":"2019-03-11 22:57:38","validated":false,"QueryBody_Original":"SELECT  TOP 100\nId AS [Post Link],\nOwnerUserId AS [User Link],\nCreationDate,\nScore\nFROM Posts\nWHERE PostTypeId=2\nORDER BY Score DESC"},{"QuerySetId":1004018,"Title":"see entire stack overflow posts","Description":null,"QueryBody":"SELECT * FROM posts WHERE id LIKE '2.....'","CreationDate":"2019-03-12 18:47:02","validated":false,"QueryBody_Original":"SELECT  * from posts where id like '2.....';"},{"QuerySetId":1004103,"Title":"Questions with MathJax in the title","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Score, Title FROM Posts WHERE Title LIKE '%$%$%' ORDER BY CreationDate DESC","CreationDate":"2019-03-12 21:56:54","validated":false,"QueryBody_Original":"SELECT \nId AS [Post Link],\nCreationDate,\nScore,\nTitle\nFROM Posts\nWHERE Title LIKE '%$%$%'\nORDER BY CreationDate DESC"},{"QuerySetId":1005008,"Title":"Users answering on python questions, located in France","Description":null,"QueryBody":"SELECT au.Id AS \"UserId\", au.DisplayName AS \"Answerer\", au.WebsiteURL, au.Reputation, COUNT(a.Id) AS \"Answers\" FROM Posts AS p JOIN Posts AS a ON p.AcceptedAnswerId = a.Id JOIN Users AS au ON a.OwnerUserId = au.Id WHERE NOT p.AcceptedAnswerId IS NULL AND p.Tags LIKE '%##tag##%' AND au.Location LIKE '##location##' GROUP BY au.Id, au.DisplayName, au.WebsiteURL, au.Reputation ORDER BY Answers DESC LIMIT 100","CreationDate":"2019-03-14 20:17:51","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  au.Id as \"UserId\", \n  au.DisplayName AS \"Answerer\", \n  au.WebsiteURL,\n  au.Reputation, \n  count(a.Id) as \"Answers\"\nFROM Posts p\nJOIN Posts a ON p.AcceptedAnswerId = a.Id\nJOIN Users au ON a.OwnerUserId = au.Id\nWHERE  p.AcceptedAnswerId IS NOT NULL\nand p.Tags like '%##tag##%'\nand au.Location LIKE '##location##'\nGROUP BY au.Id, au.DisplayName, au.WebsiteURL, au.Reputation\nORDER BY Answers DESC"},{"QuerySetId":1005146,"Title":"Users Who Favorited a Post","Description":null,"QueryBody":"SELECT U.DisplayName FROM Votes AS V INNER JOIN Users AS U ON V.UserId = U.Id WHERE V.PostId = 9395 AND V.VoteTypeId = 5","CreationDate":"2019-04-16 23:09:38","validated":false,"QueryBody_Original":"SELECT  U.DisplayName\nFROM Votes V\nINNER JOIN Users U\nON V.UserId = U.Id\nWHERE V.PostId = 9395 \nAND V.VoteTypeId = 5"},{"QuerySetId":1005157,"Title":"Where did my rep come from?","Description":null,"QueryBody":"SELECT MAX(U.DisplayName), SUM(CASE WHEN V.VoteTypeId = 1 THEN 15 WHEN V.VoteTypeId = 2 AND P.PostTypeId = 1 THEN 5 WHEN V.VoteTypeId = 2 AND P.PostTypeId = 2 THEN 10 WHEN V.VoteTypeId = 3 AND P.PostTypeId = 1 THEN -1 WHEN V.VoteTYpeId = 3 AND P.PostTypeId = 2 THEN -2 ELSE 0 END) FROM Votes AS V INNER JOIN Posts AS P ON V.PostId = P.Id AND V.VoteTypeId IN (1, 2, 3) AND P.PostTypeId IN (1, 2) INNER JOIN Users AS U ON V.UserId = U.Id WHERE P.OwnerUserId = 11659 GROUP BY U.Id","CreationDate":"2019-03-15 00:26:02","validated":false,"QueryBody_Original":"SELECT  \n  MAX(U.DisplayName),\n  SUM(CASE WHEN V.VoteTypeId = 1 THEN 15 \n           WHEN V.VoteTypeId = 2 AND P.PostTypeId = 1 THEN 5\n           WHEN V.VoteTypeId = 2 AND P.PostTypeId = 2 THEN 10\n           WHEN V.VoteTypeId = 3 AND P.PostTypeId = 1 THEN -1\n           WHEN V.VoteTYpeId = 3 AND P.PostTypeId = 2 THEN -2\n           ELSE 0 END)\nFROM Votes V\nINNER JOIN Posts P\nON V.PostId = P.Id\nAND V.VoteTypeId IN (1,2,3)\nAND P.PostTypeId IN (1,2)\nINNER JOIN Users U\nON V.UserId = U.Id\nWHERE P.OwnerUserId = 11659\nGROUP BY U.Id"},{"QuerySetId":1005160,"Title":"Flags per user (doesn't work)","Description":null,"QueryBody":"SELECT PostHistory.UserId AS \"User Link\", COUNT(*) AS \"FlagCount\" FROM PostHistory GROUP BY PostHistory.UserId ORDER BY COUNT(*) DESC LIMIT 250","CreationDate":"2019-08-26 09:26:44","validated":false,"QueryBody_Original":"SELECT  TOP 250\n     PostHistory.UserId [User Link] , \n     count(*) as [FlagCount]\nFROM PostHistory\n--WHERE PostHIstory.PostHistoryTypeId in (10,11,12,13,14,15,19,20)\n--AND PostHistory.UserId = 78804\nGROUP BY PostHistory.UserId\nORDER BY count(*)desc"},{"QuerySetId":1005606,"Title":"Users by their number of self-answered Q&As","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Count\", questions.OwnerUserId AS \"User Link\" FROM Posts AS questions JOIN Posts AS answers ON answers.parentId = questions.Id WHERE questions.OwnerUserId = answers.OwnerUserId AND DATEDIFF(answers.CreationDate, questions.CreationDate) < 5 GROUP BY questions.OwnerUserId ORDER BY COUNT(*) DESC","CreationDate":"2019-03-15 21:53:00","validated":false,"QueryBody_Original":"SELECT \n  COUNT(*) as 'Count',\n  questions.OwnerUserId AS [User Link]\nFROM Posts questions\nJOIN Posts answers ON answers.parentId = questions.Id\nWHERE questions.OwnerUserId = answers.OwnerUserId\nAND DATEDIFF(mi, questions.CreationDate, answers.CreationDate) < 5\nGROUP BY questions.OwnerUserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":1007915,"Title":"Number of users with at least one post (monthly)","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(CreationDate) AS \"month\", COUNT(DISTINCT OwnerUserId), COUNT(DISTINCT OwnerDisplayName), COUNT(DISTINCT OwnerUserId) + COUNT(DISTINCT OwnerDisplayname) FROM Posts GROUP BY LAST_DATE_OF_MONTH(CreationDate) ORDER BY LAST_DATE_OF_MONTH(CreationDate)","CreationDate":"2019-03-17 10:38:57","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(CreationDate) [month],\n  COUNT(DISTINCT OwnerUserId),\n  COUNT(DISTINCT OwnerDisplayName),\n  COUNT(DISTINCT OwnerUserId)+COUNT(DISTINCT OwnerDisplayname)\nFROM Posts  \nGROUP BY eomonth(CreationDate)  \nORDER BY eomonth(CreationDate)"},{"QuerySetId":1010174,"Title":"Find Editors with More than X Edits in One Day","Description":null,"QueryBody":"SELECT UserId, MAX(ph_count) FROM (SELECT ph.UserId, YEAR(ph.CreationDate) AS year, MONTH(ph.CreationDate) AS month, DAY(ph.CreationDate - 1) AS day, COUNT(DISTINCT ph.Id) AS ph_count FROM posthistory AS ph INNER JOIN posts AS p ON (p.Id = ph.PostId AND p.OwnerUserId <> ph.UserId AND ph.PostHistoryTypeId IN (4, 5)) \/* only interested in body and title *\/ INNER JOIN badges AS b ON (b.Name = 'Strunk & White' AND b.UserId = ph.UserId AND NOT b.UserId IN (SELECT b2.UserId FROM badges AS b2 WHERE b2.Name = 'Copy Editor')) GROUP BY ph.UserId, YEAR(ph.CreationDate), MONTH(ph.CreationDate), DAY(ph.CreationDate - 1)) AS innerTable GROUP BY UserId HAVING MAX(ph_count) BETWEEN 5 AND 79","CreationDate":"2019-05-23 13:48:27","validated":false,"QueryBody_Original":"SELECT  UserId, max(ph_count) FROM (\n  SELECT ph.UserId, \n         YEAR(ph.CreationDate) year,\n         MONTH(ph.CreationDate) month,\n         DAY(ph.CreationDate-1) day,\n         COUNT(DISTINCT ph.Id) ph_count\n  FROM posthistory ph\n  INNER JOIN posts p\n  ON (\n    p.Id = ph.PostId AND\n    p.OwnerUserId != ph.UserId AND\n    ph.PostHistoryTypeId in (4,5) \/*only interested in body and title*\/\n  ) INNER JOIN badges b\n  ON (\n    b.Name = 'Strunk & White' AND \n    b.UserId = ph.UserId AND\n    b.UserId not in (SELECT b2.UserId from badges b2 WHERE b2.Name = 'Copy Editor') \n  ) \n  GROUP BY ph.UserId, YEAR(ph.CreationDate), MONTH(ph.CreationDate), DAY(ph.CreationDate-1)\n) innerTable \nGROUP BY UserId\nHAVING max(ph_count) BETWEEN 5 AND 79;"},{"QuerySetId":1010922,"Title":"R\/A Flags Before and After HNQ","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes WHERE VoteTypeId = 4 AND CreationDate > '2018-10-18 00:00:00.000'","CreationDate":"2019-03-19 01:03:11","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Votes\nWHERE VoteTypeId = 4\nAND CreationDate > '2018-10-18 00:00:00.000'"},{"QuerySetId":1011652,"Title":"Find users whose names start with...","Description":null,"QueryBody":"SELECT c.Id AS \"Comment ID\", c.CreationDate AS \"Comment Date\", u.Id AS \"User ID\", u.DisplayName AS \"User Name\", c.PostId AS \"Post Link\" FROM Comments AS c JOIN Users AS u ON u.Id = c.UserId WHERE c.Text LIKE '%##SpecifiedText##%'","CreationDate":"2019-03-20 07:17:06","validated":false,"QueryBody_Original":"SELECT  \n  c.Id AS \"Comment ID\",\n  c.CreationDate AS \"Comment Date\", \n  u.Id AS \"User ID\", \n  u.DisplayName AS \"User Name\", \n  c.PostId AS [Post Link]\nFROM Comments c\n  JOIN Users u ON u.Id = c.UserId\nWHERE c.Text LIKE '%##SpecifiedText##%'"},{"QuerySetId":1011763,"Title":"Find comments with specified text","Description":null,"QueryBody":"SELECT c.Text AS \"Comment\", c.CreationDate AS \"Comment Date\", u.Id AS \"User ID\", u.DisplayName AS \"User Name\", c.PostId AS \"Post Link\" FROM Comments AS c JOIN Users AS u ON u.Id = c.UserId WHERE c.Text LIKE '%##SpecifiedText##%' LIMIT 100","CreationDate":"2020-07-27 14:39:36","validated":false,"QueryBody_Original":"SELECT   TOP 100 \n  c.Text AS \"Comment\",\n  c.CreationDate AS \"Comment Date\", \n  u.Id AS \"User ID\", \n  u.DisplayName AS \"User Name\", \n  c.PostId AS [Post Link]\nFROM Comments c\n  JOIN Users u ON u.Id = c.UserId\nWHERE c.Text LIKE '%##SpecifiedText##%'"},{"QuerySetId":1011838,"Title":"Find users who got Strunk & White and edited with more than 40 edits close to that date","Description":null,"QueryBody":"SELECT UserId, MAX(ph_count) FROM (SELECT b.UserId, DATEDIFF(ph.CreationDate, b.Date) AS days, COUNT(DATEDIFF(ph.CreationDate, b.Date)) AS ph_count FROM badges AS b INNER JOIN posthistory AS ph ON (b.Name = 'Strunk & White' AND b.UserId = ph.UserId AND DATEDIFF(ph.CreationDate, b.Date) BETWEEN -3 AND 3) INNER JOIN posts AS p ON (p.Id = ph.PostId AND p.OwnerUserId <> ph.UserId AND ph.PostHistoryTypeId IN (4, 5)) \/* only interested in body and title *\/ GROUP BY b.UserId, DATEDIFF(ph.CreationDate, b.Date)) AS innerTable GROUP BY UserId HAVING MAX(ph_count) >= 40","CreationDate":"2019-03-20 11:28:03","validated":false,"QueryBody_Original":"SELECT  UserId, max(ph_count) FROM (\n  SELECT b.UserId, DATEDIFF(day, b.Date, ph.CreationDate) days, COUNT(DATEDIFF(day, b.Date, ph.CreationDate)) ph_count\n  FROM badges b\n  INNER JOIN posthistory ph\n  ON (\n    b.Name = 'Strunk & White' AND\n    b.UserId = ph.UserId AND\n    DATEDIFF(day, b.Date, ph.CreationDate) BETWEEN -3 AND 3\n  ) \n  INNER JOIN posts p\n  ON (\n    p.Id = ph.PostId AND\n    p.OwnerUserId != ph.UserId AND\n    ph.PostHistoryTypeId in (4,5) \/*only interested in body and title*\/\n  )\n  GROUP BY b.UserId, DATEDIFF(day, b.Date, ph.CreationDate)\n) innerTable \nGROUP BY UserId\nHAVING max(ph_count) >= 40;"},{"QuerySetId":1011875,"Title":"Get users with max edits > 20 within 1 week of Strunk and White","Description":null,"QueryBody":"SELECT UserId, MAX(ph_count) FROM (SELECT b.UserId, DATEDIFF(ph.CreationDate, b.Date) AS days, COUNT(DATEDIFF(ph.CreationDate, b.Date)) AS ph_count FROM badges AS b INNER JOIN posthistory AS ph ON (b.Name = 'Strunk & White' AND b.UserId = ph.UserId AND DATEDIFF(ph.CreationDate, b.Date) BETWEEN -1 AND 8) INNER JOIN posts AS p ON (p.Id = ph.PostId AND p.OwnerUserId <> ph.UserId AND ph.PostHistoryTypeId IN (4, 5)) \/* only interested in body and title *\/ GROUP BY b.UserId, DATEDIFF(ph.CreationDate, b.Date)) AS innerTable GROUP BY UserId HAVING MAX(ph_count) >= 20","CreationDate":"2019-03-20 11:48:02","validated":false,"QueryBody_Original":"SELECT  UserId, max(ph_count) FROM (\n  SELECT b.UserId, DATEDIFF(day, b.Date, ph.CreationDate) days, COUNT(DATEDIFF(day, b.Date, ph.CreationDate)) ph_count\n  FROM badges b\n  INNER JOIN posthistory ph\n  ON (\n    b.Name = 'Strunk & White' AND\n    b.UserId = ph.UserId AND\n    DATEDIFF(day, b.Date, ph.CreationDate) BETWEEN -1 AND 8\n  ) \n  INNER JOIN posts p\n  ON (\n    p.Id = ph.PostId AND\n    p.OwnerUserId != ph.UserId AND\n    ph.PostHistoryTypeId in (4,5) \/*only interested in body and title*\/\n  )\n  GROUP BY b.UserId, DATEDIFF(day, b.Date, ph.CreationDate)\n) innerTable \nGROUP BY UserId\nHAVING max(ph_count) >= 20;"},{"QuerySetId":1011876,"Title":"Get most pop badges from users with edits 1 week from strunk and white","Description":null,"QueryBody":"SELECT b2.Name, COUNT(b2.Name) FROM Badges AS b2 WHERE b2.UserId IN (SELECT UserId FROM (SELECT b.UserId, DATEDIFF(ph.CreationDate, b.Date) AS days, COUNT(DATEDIFF(ph.CreationDate, b.Date)) AS ph_count FROM badges AS b INNER JOIN posthistory AS ph ON (b.Name = 'Strunk & White' AND b.UserId = ph.UserId AND DATEDIFF(ph.CreationDate, b.Date) BETWEEN 0 AND 7) INNER JOIN posts AS p ON (p.Id = ph.PostId AND p.OwnerUserId <> ph.UserId AND ph.PostHistoryTypeId IN (4, 5)) \/* only interested in body and title *\/ GROUP BY b.UserId, DATEDIFF(ph.CreationDate, b.Date)) AS innerTable GROUP BY UserId HAVING MAX(ph_count) >= 20) AND b2.Class IN (1, 2) GROUP BY b2.Name ORDER BY COUNT(b2.Name) DESC","CreationDate":"2019-03-20 12:47:42","validated":false,"QueryBody_Original":"SELECT  b2.Name, count(b2.Name) FROM Badges b2\nWHERE b2.UserId in (\n  SELECT UserId FROM (\n    SELECT b.UserId, DATEDIFF(day, b.Date, ph.CreationDate) days, COUNT(DATEDIFF(day, b.Date, ph.CreationDate)) ph_count\n    FROM badges b\n    INNER JOIN posthistory ph\n    ON (\n      b.Name = 'Strunk & White' AND\n      b.UserId = ph.UserId AND\n      DATEDIFF(day, b.Date, ph.CreationDate) BETWEEN 0 AND 7\n    ) \n    INNER JOIN posts p\n    ON (\n      p.Id = ph.PostId AND\n      p.OwnerUserId != ph.UserId AND\n      ph.PostHistoryTypeId in (4,5) \/*only interested in body and title*\/\n    )\n    GROUP BY b.UserId, DATEDIFF(day, b.Date, ph.CreationDate)\n  ) innerTable \n  GROUP BY UserId\n  HAVING max(ph_count) >= 20\n  ) AND \n  b2.Class in (1, 2)\ngroup by b2.Name ORDER BY count(b2.Name) DESC;"},{"QuerySetId":1011878,"Title":"Get the users who bursted for both strunk and white and reviewer","Description":null,"QueryBody":"SELECT UserId FROM (SELECT b.UserId, DATEDIFF(ph.CreationDate, b.Date) AS days, COUNT(DATEDIFF(ph.CreationDate, b.Date)) AS ph_count FROM badges AS b INNER JOIN posthistory AS ph ON (b.UserId IN (SELECT UserId FROM Badges WHERE Name = 'Copy Editor') AND b.Name = 'Strunk & White' AND b.UserId = ph.UserId AND DATEDIFF(ph.CreationDate, b.Date) BETWEEN 0 AND 7) INNER JOIN posts AS p ON (p.Id = ph.PostId AND p.OwnerUserId <> ph.UserId AND ph.PostHistoryTypeId IN (4, 5)) \/* only interested in body and title *\/ GROUP BY b.UserId, DATEDIFF(ph.CreationDate, b.Date)) AS innerTable GROUP BY UserId HAVING MAX(ph_count) >= 20","CreationDate":"2019-03-20 12:55:43","validated":false,"QueryBody_Original":"SELECT  UserId FROM (\n  SELECT b.UserId, DATEDIFF(day, b.Date, ph.CreationDate) days, COUNT(DATEDIFF(day, b.Date, ph.CreationDate)) ph_count\n  FROM badges b\n  INNER JOIN posthistory ph\n  ON (\n    b.UserId in (\n    SELECT UserId FROM Badges WHERE Name = 'Copy Editor') AND\n    b.Name = 'Strunk & White' AND\n    b.UserId = ph.UserId AND\n    DATEDIFF(day, b.Date, ph.CreationDate) BETWEEN 0 AND 7\n  ) \n  INNER JOIN posts p\n  ON (\n    p.Id = ph.PostId AND\n    p.OwnerUserId != ph.UserId AND\n    ph.PostHistoryTypeId in (4,5) \/*only interested in body and title*\/\n  )\n  GROUP BY b.UserId, DATEDIFF(day, b.Date, ph.CreationDate)\n) innerTable \nGROUP BY UserId\nHAVING max(ph_count) >= 20;"},{"QuerySetId":1011917,"Title":"SELECT * FROM posts WHERE Id < 100000 and AnswerCount > 0 and Tags NOT NULL","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id < 100000 AND AnswerCount > 0 AND NOT Tags IS NULL","CreationDate":"2019-03-20 12:28:48","validated":false,"QueryBody_Original":"SELECT  * \nFROM posts \nWHERE Id < 100000 AND AnswerCount > 0 and Tags IS NOT NULL"},{"QuerySetId":1011959,"Title":"get counts of actions per day","Description":null,"QueryBody":"SELECT max_cnt_one_day, COUNT(*) FROM (SELECT UserId, MAX(ph_count) AS max_cnt_one_day FROM (SELECT b.UserId, DATEDIFF(ph.CreationDate, b.Date) AS days, COUNT(DATEDIFF(ph.CreationDate, b.Date)) AS ph_count FROM badges AS b INNER JOIN posthistory AS ph ON (b.Name IN ('Strunk & White', 'Copy Editor') AND b.UserId = ph.UserId AND DATEDIFF(ph.CreationDate, b.Date) BETWEEN -1 AND 8) INNER JOIN posts AS p ON (p.Id = ph.PostId AND p.OwnerUserId <> ph.UserId AND ph.PostHistoryTypeId IN (4, 5)) \/* only interested in body and title *\/ GROUP BY b.UserId, DATEDIFF(ph.CreationDate, b.Date)) AS innerTable GROUP BY UserId) AS inner2 GROUP BY max_cnt_one_day ORDER BY max_cnt_one_day DESC","CreationDate":"2019-03-20 12:40:59","validated":false,"QueryBody_Original":"SELECT  max_cnt_one_day, count(*) FROM (\n  SELECT UserId, max(ph_count) as max_cnt_one_day FROM (\n  SELECT b.UserId, DATEDIFF(day, b.Date, ph.CreationDate) days, COUNT(DATEDIFF(day, b.Date, ph.CreationDate)) ph_count\n  FROM badges b\n  INNER JOIN posthistory ph\n  ON (\n    b.Name in ('Strunk & White', 'Copy Editor') AND\n    b.UserId = ph.UserId AND\n    DATEDIFF(day, b.Date, ph.CreationDate) BETWEEN -1 AND 8\n  ) \n  INNER JOIN posts p\n  ON (\n    p.Id = ph.PostId AND\n    p.OwnerUserId != ph.UserId AND\n    ph.PostHistoryTypeId in (4,5) \/*only interested in body and title*\/\n  )\n  GROUP BY b.UserId, DATEDIFF(day, b.Date, ph.CreationDate)\n  ) innerTable \n  GROUP BY UserId\n) inner2\nGROUP BY max_cnt_one_day\nORDER BY max_cnt_one_day DESC;"},{"QuerySetId":1012384,"Title":"Number of bounties started by weekday","Description":null,"QueryBody":"SELECT TIME_TO_STR(v.CreationDate, '%W') AS start_weekday, COUNT(1) AS bounties FROM Votes AS v WHERE v.VoteTypeId = 8 GROUP BY TIME_TO_STR(v.CreationDate, '%W') ORDER BY start_weekday","CreationDate":"2019-03-21 20:09:51","validated":false,"QueryBody_Original":"SELECT \n    DATEPART(weekday,v.CreationDate) AS start_weekday\n  , COUNT(1) AS bounties\nFROM\n    Votes v\nWHERE\n    v.VoteTypeId = 8\nGROUP BY\n    DATEPART(weekday,v.CreationDate)\nORDER BY\n    start_weekday ASC"},{"QuerySetId":1013164,"Title":"Table of population as a function of post score","Description":"table of population as a function of post score\r\nhttps:\/\/chat.stackexchange.com\/transcript\/message\/49594379#49594379","QueryBody":"SELECT A.Score, A.Count, ROUND(A.Count \/ (CAST(B.Total AS FLOAT)) * 100, 5) AS \"%age\" FROM (SELECT Score, COUNT(Id) AS \"Count\" FROM Posts GROUP BY Score) AS A JOIN (SELECT COUNT(Id) AS \"Total\" FROM Posts) AS B ON 1 = 1 ORDER BY '%age' DESC, 'Score' DESC","CreationDate":"2019-03-22 07:32:58","validated":false,"QueryBody_Original":"SELECT  A.Score, A.Count, ROUND(A.Count\/ (CAST(B.Total AS float)) * 100, 5) as '%age'\n\nFROM\n\n(SELECT\n  Score,\n  COUNT(Id) AS 'Count'\n  FROM Posts\n  GROUP BY Score) AS A\n\nJOIN\n\n(SELECT\n  COUNT(Id) AS 'Total'\n  FROM Posts) AS B\n\nON 1=1\n\nORDER BY '%age' DESC, 'Score' DESC"},{"QuerySetId":1013281,"Title":"Users leaving most questions unaccepted","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS Count, u.Reputation, u.CreationDate FROM Posts INNER JOIN Users AS u ON u.id = Posts.OwnerUserId WHERE AcceptedAnswerId IS NULL AND AnswerCount > 0 AND u.Reputation < 100 AND NOT EXISTS(SELECT 1 FROM Posts WHERE OwnerUserId = u.id AND NOT AcceptedAnswerId IS NULL) GROUP BY OwnerUserId, u.Reputation, u.CreationDate HAVING COUNT(*) > 5 ORDER BY u.CreationDate DESC, Count DESC, OwnerUserId LIMIT 100","CreationDate":"2019-09-27 15:23:52","validated":false,"QueryBody_Original":"SELECT  TOP 100 \n  OwnerUserId AS [User Link],\n  COUNT(*) AS Count,\n  u.Reputation,\n  u.CreationDate\nFROM Posts\nINNER JOIN Users u\n  ON u.id = Posts.OwnerUserId\nWHERE\n  AcceptedAnswerId IS NULL AND\n  AnswerCount > 0 AND \n  u.Reputation < 100 AND\n  NOT EXISTS (\n    SELECT 1 FROM Posts\n    WHERE OwnerUserId = u.id AND AcceptedAnswerId IS NOT NULL\n  )\nGROUP BY OwnerUserId, u.Reputation, u.CreationDate\nHAVING COUNT(*) > 5\nORDER BY u.CreationDate DESC, Count DESC, OwnerUserId;"},{"QuerySetId":1015259,"Title":"Top Saudi Developer Named Fahad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location, CreationDate, LastAccessDate, Views FROM Users WHERE (LOWER(Location) LIKE '%saudi%' OR LOWER(Location) LIKE '% ksa%') AND LOWER(DisplayName) LIKE '%fahad%' ORDER BY Reputation DESC","CreationDate":"2019-03-24 12:46:25","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location,\n    CreationDate,\n    LastAccessDate,\n    Views\nFROM\n    Users\nWHERE\n    (LOWER(Location) like '%saudi%'\n    OR\n    LOWER(Location) like '% ksa%')\n    AND\n    LOWER(DisplayName) like '%fahad%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1015623,"Title":"Up-to-date content: Average amount of hours between question posed and answered","Description":null,"QueryBody":"SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0), 'Up-to-date content' = AVG(DATEDIFF(hour, p1.CreationDate, p.CreationDate)) FROM Posts AS p INNER JOIN Posts AS p1 ON p.Id = p1.AcceptedAnswerId GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0) ORDER BY Month","CreationDate":"2019-06-12 18:25:10","validated":false,"QueryBody_Original":"SELECT  Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0),\n             'Up-to-date content' = AVG(DATEDIFF(hour, p1.CreationDate, p.CreationDate))\nFROM Posts p\nINNER JOIN Posts p1 ON p.Id = p1.AcceptedAnswerId\nGROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0)\nORDER BY Month"},{"QuerySetId":1015655,"Title":"Number of questions per user","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Answers FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 1 AND (LOWER(Tags) LIKE LOWER('%privacy%') OR LOWER(Title) LIKE LOWER('%privacy%')) GROUP BY Users.Id, DisplayName ORDER BY Answers DESC","CreationDate":"2020-12-08 15:02:16","validated":false,"QueryBody_Original":"SELECT \n    Users.Id as [User Link],\n    Count(Posts.Id) AS Answers    \nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE\n  PostTypeId = 1 AND\n  (LOWER(Tags) like LOWER('%privacy%') OR LOWER(Title) like LOWER('%privacy%'))\nGROUP BY\n    Users.Id, DisplayName\n-- HAVING  Count(Posts.Id)> 500\nORDER BY\n   Answers DESC"},{"QuerySetId":1015778,"Title":"(fout) Average amount of answers per question","Description":null,"QueryBody":"SELECT Year = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), Average_answers_per_question = SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) \/ CAST(SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS FLOAT) FROM Posts GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) ORDER BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)","CreationDate":"2019-05-11 14:01:17","validated":false,"QueryBody_Original":"SELECT  Year = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0),\n        Average_answers_per_question = SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) \/ cast(SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) as float)\nFROM Posts\ngroup by DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\norder by DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)"},{"QuerySetId":1015883,"Title":"Tags - How many [identification] tags?","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName = 'identification'","CreationDate":"2019-03-26 03:34:52","validated":false,"QueryBody_Original":"SELECT  * from Tags where TagName ='identification'"},{"QuerySetId":1015925,"Title":"Post with image from low rep users","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.body, owneruserid AS \"User Link\" FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE p.posttypeid = 1 AND p.CreationDate > '2019-01-01 00:00:00' AND u.reputation < 13000 AND u.reputation > 12900","CreationDate":"2019-03-28 05:35:52","validated":false,"QueryBody_Original":"SELECT  p.id [Post Link], p.body, owneruserid [User Link]\nfrom posts p inner join users u on u.id = p.owneruserid\nwhere \n        p.posttypeid = 1 \n    and p.CreationDate > '2019-01-01 00:00:00'\n    and u.reputation < 13000 AND u.reputation > 12900"},{"QuerySetId":1015939,"Title":"Post with image from low rep users by date","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE) AS \"date\", COUNT(*) FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE p.body LIKE '%imgur.com%' AND p.posttypeid = 1 AND p.CreationDate > '2019-01-01 00:00:00' AND u.reputation < 100 GROUP BY CAST(p.CreationDate AS DATE)","CreationDate":"2019-03-26 06:38:46","validated":false,"QueryBody_Original":"SELECT  CONVERT(date, p.CreationDate) [date], Count(*)\nfrom posts p inner join users u on u.id = p.owneruserid\nwhere\n    p.body like '%imgur.com%' \n    and p.posttypeid = 1 \n    and p.CreationDate > '2019-01-01 00:00:00'\n    and u.reputation < 100\nGroup by CONVERT(date, p.CreationDate)"},{"QuerySetId":1015944,"Title":"Post without image from low rep users by date","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE) AS \"date\", COUNT(*) FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE NOT p.body LIKE '%imgur.com%' AND p.posttypeid = 1 AND p.CreationDate > '2019-01-01 00:00:00' AND u.reputation < 100 GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE)","CreationDate":"2019-03-26 06:43:18","validated":false,"QueryBody_Original":"SELECT  CONVERT(date, p.CreationDate) [date], Count(*)\nfrom posts p inner join users u on u.id = p.owneruserid\nwhere\n    p.body not like '%imgur.com%' \n    and p.posttypeid = 1 \n    and p.CreationDate > '2019-01-01 00:00:00'\n    and u.reputation < 100\nGroup by CONVERT(date, p.CreationDate)\norder by CONVERT(date, p.CreationDate)"},{"QuerySetId":1015947,"Title":"Post with image from low rep users compared with post without images","Description":null,"QueryBody":"SELECT a.date, withimages, withoutimages, withimages * 100 \/ withoutimages AS \"Percent by day\" FROM (SELECT CAST(p.CreationDate AS DATE) AS \"date\", COUNT(*) AS WithImages FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE p.body LIKE '%imgur.com%' AND p.posttypeid = 1 AND p.CreationDate > '2019-01-01 00:00:00' AND u.reputation < 100 GROUP BY CAST(p.CreationDate AS DATE)) AS a INNER JOIN (SELECT CAST(p.CreationDate AS DATE) AS \"date\", COUNT(*) AS WithoutImages FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid WHERE NOT p.body LIKE '%imgur.com%' AND p.posttypeid = 1 AND p.CreationDate > '2019-01-01 00:00:00' AND u.reputation < 100 GROUP BY CAST(p.CreationDate AS DATE)) AS b ON a.date = b.date ORDER BY a.date","CreationDate":"2019-03-26 06:52:14","validated":false,"QueryBody_Original":"SELECT  a.date, withimages, withoutimages, withimages*100\/withoutimages [Percent by day]\nfrom\n(\nSELECT CONVERT(date, p.CreationDate) [date], Count(*) WithImages\nfrom posts p inner join users u on u.id = p.owneruserid\nwhere\n    p.body like '%imgur.com%' \n    and p.posttypeid = 1 \n    and p.CreationDate > '2019-01-01 00:00:00'\n    and u.reputation < 100\nGroup by CONVERT(date, p.CreationDate)\n) a inner join \n(\nSELECT CONVERT(date, p.CreationDate) [date], Count(*) WithoutImages\nfrom posts p inner join users u on u.id = p.owneruserid\nwhere\n    p.body not like '%imgur.com%' \n    and p.posttypeid = 1 \n    and p.CreationDate > '2019-01-01 00:00:00'\n    and u.reputation < 100\nGroup by CONVERT(date, p.CreationDate)\n) b on a.date = b.date\norder by a.date asc"},{"QuerySetId":1016415,"Title":"(revised) Percentage of solved questions (final)","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0) AS YEAR, SUM(CASE WHEN DATEDIFF(MONTH, p1.Creationdate, DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0)) <= 0 THEN 1 ELSE 0 END) \/ CAST(COUNT(DISTINCT p.Id) AS FLOAT), MAX(DATEDIFF(MONTH, p1.Creationdate, DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0))) FROM Posts AS p INNER JOIN Posts AS p1 ON p.Id = p1.AcceptedAnswerId GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0) ORDER BY year","CreationDate":"2019-05-11 15:25:10","validated":false,"QueryBody_Original":"SELECT  DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0) as YEAR, \n        sum(case when DATEDIFF(MONTH, p1.Creationdate, DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0)) <= 0 then 1 else 0 end) \/ cast(count(distinct p.Id) as float),\n        max(DATEDIFF(MONTH, p1.Creationdate, DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0)))\nFROM Posts p\nINNER JOIN Posts p1 ON p.Id = p1.AcceptedAnswerId\ngroup by DATEADD(MONTH, DATEDIFF(MONTH, 0, p.CreationDate), 0)\norder BY year"},{"QuerySetId":1017097,"Title":"Find question or answer from revisionGUID","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE RevisionGUID = '865e9305-bef6-4397-9097-2848d0dc1233'","CreationDate":"2019-03-27 16:55:01","validated":false,"QueryBody_Original":"SELECT  PostId as [Post Link] FROM PostHistory WHERE RevisionGUID = '865e9305-bef6-4397-9097-2848d0dc1233';"},{"QuerySetId":1017120,"Title":"Tags with name containing zip","Description":null,"QueryBody":"SELECT tagname, count FROM tags WHERE tagname LIKE '%zip%' ORDER BY count DESC","CreationDate":"2019-03-27 17:19:10","validated":false,"QueryBody_Original":"SELECT  tagname, count FROM tags WHERE tagname LIKE '%zip%' ORDER BY count DESC;"},{"QuerySetId":1017233,"Title":"Hot questions by posting day of week\/time","Description":null,"QueryBody":"SELECT (TIME_TO_STR(p.creationdate, '%W') - 1) * 24 + TIME_TO_STR(p.creationdate, '%h') AS \"Hour of week\", COUNT(h.id) AS \"Hot questions\", COUNT(*) AS \"All questions\" FROM posts AS p LEFT OUTER JOIN posthistory AS h ON h.postid = p.id AND h.posthistorytypeid = 52 WHERE p.creationdate >= '2019-03-01' \/* start date for HNQ entry records *\/ GROUP BY TIME_TO_STR(p.creationdate, '%W'), TIME_TO_STR(p.creationdate, '%h') ORDER BY TIME_TO_STR(p.creationdate, '%W'), TIME_TO_STR(p.creationdate, '%h')","CreationDate":"2019-03-27 18:14:43","validated":false,"QueryBody_Original":"SELECT  (datepart(weekday, p.creationdate) - 1) * 24 +\n        datepart(hour, p.creationdate) as 'Hour of week',\n  count(h.id) AS 'Hot questions',\n  count(*) AS 'All questions'\n  from posts as p\n  left outer join posthistory as h\n    on h.postid = p.id and h.posthistorytypeid = 52\n  where p.creationdate >= '2019-03-01' -- start date for HNQ entry records\n  group by datepart(weekday, p.creationdate), datepart(hour, p.creationdate)\n  order by datepart(weekday, p.creationdate), datepart(hour, p.creationdate)"},{"QuerySetId":1017547,"Title":"Number of Python questions in Stack Overflow","Description":null,"QueryBody":"SELECT * FROM dbo.posts WHERE Tags LIKE N'%javascript%'","CreationDate":"2019-03-28 03:45:55","validated":false,"QueryBody_Original":"SELECT  * \nFROM dbo.posts \nWHERE Tags LIKE N'%javascript%'"},{"QuerySetId":1017630,"Title":"Top 100 users ordered by earned bounties","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY SUM(Votes.BountyAmount) DESC, Users.ID) AS rnSum, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC, Users.ID) AS rnCount, Users.ID AS \"User Link\", Users.Reputation, SUM(Votes.BountyAmount) AS BountyEarnedTotal, COUNT(*) AS BountyEarnedCount FROM Votes INNER JOIN Posts ON Posts.ID = Votes.PostID INNER JOIN Users ON Users.ID = Posts.OwnerUserID WHERE NOT Votes.BountyAmount IS NULL AND Votes.VoteTypeID = 9 \/* BountyClose *\/ AND Posts.PostTypeID = 2 \/* Answer *\/ GROUP BY Users.ID, Users.DisplayName, Users.Reputation ORDER BY BountyEarnedTotal DESC, Users.ID LIMIT 100","CreationDate":"2019-03-28 15:21:03","validated":false,"QueryBody_Original":"SELECT  TOP(100)\n  ROW_NUMBER() OVER (ORDER BY SUM(Votes.BountyAmount) DESC, Users.ID) AS rnSum\n  ,ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC, Users.ID) AS rnCount\n  ,Users.ID AS [User Link]\n  ,Users.Reputation\n  ,SUM(Votes.BountyAmount) AS BountyEarnedTotal\n  ,COUNT(*) AS BountyEarnedCount\nFROM\n  Votes\n  INNER JOIN Posts ON Posts.ID = Votes.PostID\n  INNER JOIN Users ON Users.ID = Posts.OwnerUserID\nWHERE\n  Votes.BountyAmount IS NOT NULL\n  AND Votes.VoteTypeID = 9 -- BountyClose\n  AND Posts.PostTypeID = 2 -- Answer\nGROUP BY\n  Users.ID\n  ,Users.DisplayName\n  ,Users.Reputation\nORDER BY BountyEarnedTotal DESC, Users.ID\n;"},{"QuerySetId":1017638,"Title":"Top 100 users ordered by offered bounties","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY SUM(Votes.BountyAmount) DESC, Users.ID) AS rnSum, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC, Users.ID) AS rnCount, Users.ID, Users.DisplayName, Users.Reputation, SUM(Votes.BountyAmount) AS BountyOfferedTotal, COUNT(*) AS BountyOfferedCount FROM Votes INNER JOIN Posts ON Posts.ID = Votes.PostID INNER JOIN Users ON Users.ID = Posts.OwnerUserID WHERE NOT Votes.BountyAmount IS NULL AND Votes.VoteTypeID = 8 \/* BountyStart *\/ AND Posts.PostTypeID = 1 \/* Question *\/ AND Users.DisplayName = 'SelvaTS' GROUP BY Users.ID, Users.DisplayName, Users.Reputation ORDER BY BountyOfferedTotal DESC, Users.ID LIMIT 100","CreationDate":"2019-04-29 12:45:22","validated":false,"QueryBody_Original":"SELECT  TOP(100)\n  ROW_NUMBER() OVER (ORDER BY SUM(Votes.BountyAmount) DESC, Users.ID) AS rnSum\n  ,ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC, Users.ID) AS rnCount\n  ,Users.ID\n  ,Users.DisplayName\n  ,Users.Reputation\n  ,SUM(Votes.BountyAmount) AS BountyOfferedTotal\n  ,COUNT(*) AS BountyOfferedCount\nFROM\n  Votes\n  INNER JOIN Posts ON Posts.ID = Votes.PostID\n  INNER JOIN Users ON Users.ID = Posts.OwnerUserID\nWHERE\n  Votes.BountyAmount IS NOT NULL\n  AND Votes.VoteTypeID = 8 -- BountyStart\n  AND Posts.PostTypeID = 1 -- Question\n  AND Users.DisplayName = 'SelvaTS'\nGROUP BY\n  Users.ID\n  ,Users.DisplayName\n  ,Users.Reputation\nORDER BY BountyOfferedTotal DESC, Users.ID\n;"},{"QuerySetId":1017694,"Title":"User Ranking by bounty amount","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", SUM(bountyamount) FROM votes WHERE NOT bountyamount IS NULL AND votetypeid = 8 GROUP BY UserId ORDER BY SUM(bountyamount) DESC","CreationDate":"2019-03-28 11:14:55","validated":false,"QueryBody_Original":"SELECT  UserId as [User Link], SUM(bountyamount)\n  FROM votes \n WHERE bountyamount is not null \n       AND votetypeid = 8\n GROUP BY UserId\n ORDER BY SUM(bountyamount) DESC;"},{"QuerySetId":1017695,"Title":"Total bounty amount on the site","Description":null,"QueryBody":"SELECT SUM(bountyamount) FROM votes WHERE NOT bountyamount IS NULL AND votetypeid = 8","CreationDate":"2019-03-28 11:16:01","validated":false,"QueryBody_Original":"SELECT  SUM(bountyamount)\n  FROM votes \n WHERE bountyamount is not null \n       AND votetypeid = 8;"},{"QuerySetId":1017977,"Title":"Most score on security tag answers","Description":null,"QueryBody":"SELECT q.id AS \"qid\", q.Title AS \"title\", q.Score AS \"qscore\", q.ViewCount AS \"qviewcount\", q.Tags AS \"tags\", q.LastActivityDate AS \"qdate\", q.Body AS \"question\", a.id AS \"aid\", a.Body AS \"answer\", a.ViewCount AS \"aviewcount\", a.Score AS \"ascore\", a.LastActivityDate AS \"adate\", a.CommentCount AS \"acommentcount\", u.Id AS \"uid\", u.DisplayName AS \"uname\", u.Reputation AS \"ureputation\" FROM Posts AS q JOIN Posts AS a ON a.ParentId = q.id JOIN Users AS u ON u.id = a.OwnerUserId WHERE q.Tags LIKE '%<tornado>%' AND q.PostTypeId = 1 AND a.PostTypeId = 2","CreationDate":"2019-04-03 07:59:18","validated":false,"QueryBody_Original":"SELECT  q.id as 'qid', q.Title as 'title', q.Score as 'qscore', q.ViewCount as 'qviewcount', q.Tags as 'tags', q.LastActivityDate as 'qdate', q.Body as 'question', a.id as 'aid', a.Body as 'answer', a.ViewCount as 'aviewcount', a.Score as 'ascore', a.LastActivityDate as 'adate', a.CommentCount as 'acommentcount', u.Id as 'uid', u.DisplayName as 'uname', u.Reputation as 'ureputation'\nFROM Posts q\nJOIN Posts as a ON a.ParentId = q.id\nJOIN Users as u ON u.id = a.OwnerUserId\nWHERE\n  q.Tags  LIKE '%<tornado>%' AND\n  q.PostTypeId=1 AND\n  a.PostTypeId=2;"},{"QuerySetId":1018005,"Title":"Most efficient answerers grouped by the number of answers","Description":null,"QueryBody":"SELECT cu.id AS \"User Link\", cu.answers_count, cu.total_score, cu.avg_score FROM (SELECT vu.id, vu.answers_count, vu.total_score, vu.avg_score, ROW_NUMBER() OVER (PARTITION BY answers_count ORDER BY avg_score DESC) AS rank FROM (SELECT u.id, COUNT(1) AS answers_count, SUM(a.score) AS total_score, SUM(a.score) * 1.0 \/ COUNT(1) AS avg_score FROM users AS u JOIN posts AS a ON u.id = a.owneruserid AND a.posttypeid = 2 GROUP BY u.id) AS vu) AS cu WHERE cu.rank = 1 ORDER BY cu.answers_count","CreationDate":"2019-03-28 18:00:09","validated":false,"QueryBody_Original":"SELECT \n  cu.id as [User Link],\n  cu.answers_count,\n  cu.total_score,\n  cu.avg_score\nFROM (SELECT\n  vu.id,\n  vu.answers_count,\n  vu.total_score,\n  vu.avg_score,\n  ROW_NUMBER() OVER (PARTITION BY answers_count ORDER BY avg_score DESC) AS rank\nFROM (SELECT\n  u.id,\n  COUNT(1) AS answers_count,\n  SUM(a.score) AS total_score,\n  SUM(a.score) * 1.0 \/ COUNT(1) AS avg_score\nFROM users u\nJOIN posts a\n  ON u.id = a.owneruserid\n  AND a.posttypeid = 2\nGROUP BY u.id) vu) cu\nWHERE cu.rank = 1\nORDER BY cu.answers_count"},{"QuerySetId":1019599,"Title":"Top 100 stackoverflow Moroccan users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"100\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%morocco%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-05-02 17:25:31","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [100], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%morocco%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1020045,"Title":"Number of downvotes and upvotes per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(Creationdate), SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS downvotes, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS upvotes, ROUND(1.0 * SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) \/ SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END), 3) AS ratio FROM Votes WHERE VoteTypeId IN (2, 3) GROUP BY LAST_DATE_OF_MONTH(Creationdate) ORDER BY LAST_DATE_OF_MONTH(Creationdate)","CreationDate":"2019-03-30 18:26:36","validated":false,"QueryBody_Original":"SELECT \n  eomonth(Creationdate),\n  SUM(CASE WHEN VoteTypeId=3 THEN 1 ELSE 0 END) AS downvotes,\n  SUM(CASE WHEN VoteTypeId=2 THEN 1 ELSE 0 END) AS upvotes,\n  ROUND(1.0*SUM(CASE WHEN VoteTypeId=3 THEN 1 ELSE 0 END)\/SUM(CASE WHEN VoteTypeId=2 THEN 1 ELSE 0 END),3) AS ratio\nFROM Votes\nWHERE VoteTypeId IN (2,3)\nGROUP BY eomonth(Creationdate)\nORDER BY eomonth(Creationdate) ASC\n--upvotes: VoteTypeId=2\n--downvotes: VoteTypeId=3"},{"QuerySetId":1020151,"Title":"Average answer score for all users","Description":null,"QueryBody":"SELECT u.displayname, COUNT(1) AS answers_count, SUM(a.score) AS total_score, SUM(a.score) * 1.0 \/ COUNT(1) AS avg_score FROM users AS u JOIN posts AS a ON u.id = a.owneruserid AND a.posttypeid = 2 GROUP BY u.id, u.displayname ORDER BY avg_score DESC, answers_count DESC","CreationDate":"2019-03-30 23:35:01","validated":false,"QueryBody_Original":"SELECT \n  --u.id as [User Link],\n  u.displayname,\n  COUNT(1) AS answers_count,\n  SUM(a.score) AS total_score,\n  SUM(a.score) * 1.0 \/ COUNT(1) AS avg_score\nFROM users u\nJOIN posts a\n  ON u.id = a.owneruserid\n  AND a.posttypeid = 2\nGROUP BY u.id, u.displayname\norder by avg_score desc, answers_count desc"},{"QuerySetId":1020199,"Title":"Average question score for all users","Description":null,"QueryBody":"SELECT u.id AS \"User Link\", COUNT(1) AS questions_count, SUM(a.score) AS total_score, SUM(a.score) * 1.0 \/ COUNT(1) AS avg_score FROM users AS u JOIN posts AS a ON u.id = a.owneruserid AND a.posttypeid = 1 GROUP BY u.id, u.displayname HAVING COUNT(1) >= 10 ORDER BY avg_score DESC, questions_count DESC","CreationDate":"2020-09-21 01:10:37","validated":false,"QueryBody_Original":"SELECT \n  u.id as [User Link],\n  COUNT(1) AS questions_count,\n  SUM(a.score) AS total_score,\n  SUM(a.score) * 1.0 \/ COUNT(1) AS avg_score\nFROM users u\nJOIN posts a\n  ON u.id = a.owneruserid\n  AND a.posttypeid = 1\nGROUP BY u.id, u.displayname\nHAVING COUNT(1) >= 10\norder by avg_score desc, questions_count desc"},{"QuerySetId":1020274,"Title":"Collect all answer Ids for the Given Question Id","Description":null,"QueryBody":"SELECT Id, Score FROM Posts WHERE ParentId = 2158","CreationDate":"2019-10-29 03:24:26","validated":false,"QueryBody_Original":"SELECT  Id, Score from Posts\nwhere ParentId = 2158"},{"QuerySetId":1020292,"Title":"established user edited answer containing link","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", LastEditorDisplayName, CreationDate, LastEditDate FROM posts WHERE PostTypeId = 2 \/* answers *\/ AND Body LIKE '%https:\/\/%' AND LastEditorUserId IN (SELECT ID FROM users WHERE Reputation > 500) ORDER BY LastEditDate DESC LIMIT 30","CreationDate":"2019-03-31 04:29:47","validated":false,"QueryBody_Original":"SELECT \nTOP 30\nId as [Post Link], LastEditorDisplayName, CreationDate, LastEditDate\nFROM posts\nWHERE\nPostTypeId = 2 -- answers\nand Body LIKE '%https:\/\/%'\nand LastEditorUserId IN (SELECT ID from users WHERE Reputation > 500)\nORDER By LastEditDate DESC"},{"QuerySetId":1020852,"Title":"Ratio of getting accepted answers","Description":null,"QueryBody":"SELECT ((SELECT CAST(COUNT(*) AS FLOAT) FROM posts AS q JOIN posts AS a ON a.id = q.acceptedanswerid) \/ (SELECT CAST(COUNT(*) AS FLOAT) FROM posts WHERE postTypeId = 1)) AS accept_answer_ratio","CreationDate":"2019-04-01 00:39:17","validated":false,"QueryBody_Original":"SELECT \n(\n(SELECT cast(count(*) as float) from posts q\njoin posts a on a.id = q.acceptedanswerid)\n\/\n(SELECT cast(count(*) as float) from posts where postTypeId = 1)\n) as accept_answer_ratio"},{"QuerySetId":1021031,"Title":"Count badges gold, silver, bronze","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM badges WHERE class = 3) AS Bronze, (SELECT COUNT(*) FROM badges WHERE class = 2) AS Silver, (SELECT COUNT(*) FROM badges WHERE class = 1) AS Gold","CreationDate":"2019-04-01 17:16:06","validated":false,"QueryBody_Original":"SELECT   (SELECT count(*) from badges where class = 3) as Bronze, \n        (SELECT count(*) from badges where class = 2) as Silver,\n        (SELECT count(*) from badges where class = 1) as Gold"},{"QuerySetId":1021053,"Title":"(fout, reputation is nu, niet in het verleden) Average reputation users that post answers","Description":null,"QueryBody":"SELECT answers.year, Average_reputation_answers = answers.SUM_REPUTATION FROM (SELECT year, SUM(SUM_REPUTATION \/ CAST(posts AS FLOAT)) OVER (ORDER BY year rows BETWEEN unbounded preceding AND CURRENT ROW) AS SUM_REPUTATION FROM (SELECT Year = DATEADD(MONTH, DATEDIFF(MONTH, 0, Posts.CreationDate), 0), SUM_REPUTATION = SUM(CAST(Users.reputation AS INT)), Posts = COUNT(Posts.Id) FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE PostTypeId = 2 GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, Posts.CreationDate), 0)) AS ANSWERS) AS answers ORDER BY answers.year","CreationDate":"2019-05-11 15:31:35","validated":false,"QueryBody_Original":"SELECT  answers.year, Average_reputation_answers = answers.SUM_REPUTATION\n\nFROM \n(SELECT year, sum(SUM_REPUTATION \/ cast(posts as float)) over (order by year rows unbounded preceding) as SUM_REPUTATION\n  FROM (\n    SELECT Year = DATEADD(MONTH, DATEDIFF(MONTH, 0, Posts.CreationDate), 0), SUM_REPUTATION = SUM(Cast(Users.reputation as BIGINT)), Posts = COUNT(Posts.Id)\n    FROM Posts\n    INNER JOIN Users ON Posts.OwnerUserId = Users.Id\n    where PostTypeId = 2\n    group by DATEADD(MONTH, DATEDIFF(MONTH, 0, Posts.CreationDate), 0)\n  ) ANSWERS) AS answers\norder by answers.year"},{"QuerySetId":1021112,"Title":"Q:A ratio for recent users","Description":null,"QueryBody":"SELECT Id AS \"User Link\", LastAccessDate, CASE ANSWERS WHEN 0 THEN 'infinity' ELSE CAST(ROUND(QUESTIONS \/ CAST(ANSWERS AS FLOAT), 2) AS TEXT) END AS \"Q:A ratio\" FROM (SELECT u.Id, u.LastAccessDate, SUM(CASE p.PostTypeId WHEN 1 THEN 1 ELSE 0 END) AS \"Questions\", SUM(CASE p.PostTypeId WHEN 2 THEN 1 ELSE 0 END) AS \"Answers\" FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id, u.LastAccessDate ORDER BY u.LastAccessDate DESC LIMIT 100) AS temp","CreationDate":"2019-04-01 19:00:57","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], LastAccessDate,\n  CASE ANSWERS\n    WHEN 0 THEN 'infinity'\n    ELSE CAST(ROUND(QUESTIONS \/ CAST(ANSWERS AS FLOAT), 2) AS NVARCHAR)\n  END AS 'Q:A ratio'\n  FROM\n\n(SELECT TOP 100 u.Id, u.LastAccessDate,\nSUM(CASE p.PostTypeId WHEN 1 THEN 1 ELSE 0 END) AS 'Questions',\nSUM(CASE p.PostTypeId WHEN 2 THEN 1 ELSE 0 END) AS 'Answers'\n  FROM Users AS u\n  INNER JOIN Posts AS p ON u.Id = p.OwnerUserId\n  GROUP BY u.Id, u.LastAccessDate\n  ORDER BY u.LastAccessDate DESC) AS temp"},{"QuerySetId":1021178,"Title":"Trust building: Average reputation of users that post answers","Description":null,"QueryBody":"SELECT answers.year, Average_reputation_answers = SUM(Reputation.SUM_GOLD \/ CAST(Answers.posts AS FLOAT)) OVER (ORDER BY Answers.year rows BETWEEN unbounded preceding AND CURRENT ROW) FROM (SELECT Year = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), Posts = COUNT(Id) FROM Posts WHERE PostTypeId = 2 GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)) AS Answers, (SELECT Year = DATEADD(MONTH, DATEDIFF(MONTH, 0, Date), 0), SUM_GOLD = SUM(CASE WHEN Class = 1 THEN 3 ELSE 0 END), SUM_SILVER = SUM(CASE WHEN Class = 2 THEN 2 ELSE 0 END), SUM_BRONZE = SUM(CASE WHEN Class = 3 THEN 1 ELSE 0 END) FROM Badges GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, Date), 0)) AS Reputation WHERE answers.year = reputation.year ORDER BY answers.year","CreationDate":"2019-05-11 15:32:42","validated":false,"QueryBody_Original":"SELECT  answers.year, Average_reputation_answers = sum(Reputation.SUM_GOLD \/ cast(Answers.posts as float)) over (order by Answers.year rows unbounded preceding)\n\nFROM\n    (SELECT Year = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), Posts = COUNT(Id)\n    FROM Posts\n    where PostTypeId = 2\n    group by DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n    ) AS Answers,\n  \n    (SELECT  Year = DATEADD(MONTH, DATEDIFF(MONTH, 0, Date), 0), SUM_GOLD = SUM(CASE WHEN Class = 1 THEN 3 ELSE 0 END), SUM_SILVER = SUM(CASE WHEN Class = 2 THEN 2 ELSE 0 END), SUM_BRONZE = SUM(CASE WHEN Class = 3 THEN 1 ELSE 0 END)\n    FROM Badges\n    group by DATEADD(MONTH, DATEDIFF(MONTH, 0, Date), 0)\n    ) as Reputation\nWHERE answers.year = reputation.year\norder by answers.year"},{"QuerySetId":1021691,"Title":"select Title, Id, Score, ViewCount FROM Posts;","Description":null,"QueryBody":"SELECT Id, PostTypeId, AcceptedAnswerId, Title, Tags, AcceptedAnswerId, ViewCount, Body, Score FROM Posts ORDER BY CreationDate DESC LIMIT 10","CreationDate":"2019-04-02 17:28:41","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id,PostTypeId,AcceptedAnswerId,Title,Tags,AcceptedAnswerId,ViewCount,Body,Score FROM Posts ORDER BY CreationDate DESC"},{"QuerySetId":1023166,"Title":"Usuarios con votos de cierre","Description":null,"QueryBody":"SELECT DisplayName FROM Users WHERE Reputation >= 3000","CreationDate":"2019-04-04 09:36:47","validated":false,"QueryBody_Original":"SELECT  DisplayName from Users where Reputation >= 3000;"},{"QuerySetId":1023173,"Title":"How many questions and answers are posted until 2019?","Description":null,"QueryBody":"SELECT SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Number_of_Questions, SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Number_of_Answers FROM Posts WHERE CreationDate < '2019-01-01'","CreationDate":"2019-04-04 09:52:21","validated":false,"QueryBody_Original":"SELECT  \n  SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Number_of_Questions,\n  SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Number_of_Answers\nFROM\n  Posts\nWHERE\n  CreationDate < '2019-01-01'"},{"QuerySetId":1023330,"Title":"Most answers for a single question","Description":null,"QueryBody":"SELECT p.owneruserid AS \"User Link\", p.parentid AS \"Post Link\", COUNT(1) AS co, SUM(p.Score) AS \"Total Score\" FROM posts AS p WHERE p.posttypeid = 2 GROUP BY p.owneruserid, p.parentid HAVING COUNT(1) > 1 ORDER BY co DESC, \"Total Score\" DESC","CreationDate":"2019-04-06 23:24:47","validated":false,"QueryBody_Original":"SELECT \n  p.owneruserid as [User Link],\n  p.parentid as [Post Link],\n  count(1) as co,\n  sum(p.Score) as [Total Score]\nfrom posts p\nwhere p.posttypeid = 2\ngroup by p.owneruserid, p.parentid\nhaving count(1) > 1\norder by co desc, [Total Score] desc"},{"QuerySetId":1023987,"Title":"Top 10 users from Surat","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%surat%' OR UPPER(Location) LIKE '%SURAT' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2020-08-20 12:39:10","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%surat%'\n    OR UPPER(Location) LIKE '%SURAT'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1024079,"Title":"Almost AbandonedClosed questions (one vote missing in question and\/or answer) ","Description":"This query aims to identify borderline questions to the RemoveAbandonedClosed script described in https:\/\/meta.stackexchange.com\/help\/roomba. All criteria are met except score from question and\/or answers(s) which are one vote off from automatic deletion. On the other hand, if question is on-topic, vote\/flag to reopen it; if it has good\/valid answers, then vote for them.","QueryBody":"SELECT q.Id AS \"Post Link\" FROM Posts AS q INNER JOIN PostHistory AS ph ON ph.PostId = q.Id WHERE q.ClosedDate < CURRENT_TIMESTAMP() - 9 \/* closed more than 9 days ago *\/ AND ph.PostHistoryTypeId = 10 AND NOT ph.Comment IN ('1', '101') \/* not duplicate *\/ AND NOT EXISTS(SELECT * FROM PostHistory AS ph WHERE ph.PostId = q.Id AND ph.PostHistoryTypeId = 14) \/* not locked. *\/ AND q.Score <= 1 AND (SELECT COUNT(*) FROM Posts AS a WHERE a.ParentId = q.Id AND a.Score > 1) = 0 AND q.AcceptedAnswerId IS NULL AND q.LastEditDate < CURRENT_TIMESTAMP() - 9 \/* not edited in the last 9 days *\/ ORDER BY q.CreationDate \/* oldest post first. *\/","CreationDate":"2019-04-16 21:43:46","validated":false,"QueryBody_Original":"SELECT  q.Id AS [Post Link]\nFROM Posts q\nINNER JOIN PostHistory ph ON ph.PostId = q.Id\nWHERE \n  q.ClosedDate < GETDATE() - 9 -- closed more than 9 days ago\n  AND ph.PostHistoryTypeId = 10 AND ph.Comment NOT IN ('1', '101') -- not duplicate\n  AND NOT EXISTS \n      (SELECT *\n       FROM PostHistory ph\n       WHERE ph.PostId = q.Id\n       AND ph.PostHistoryTypeId = 14) -- not locked.\n  AND q.Score <= 1\n  AND(SELECT COUNT(*) FROM Posts a WHERE a.ParentId = q.Id and a.Score > 1) = 0\n  AND q.AcceptedAnswerId IS NULL\n  AND q.LastEditDate < GETDATE() - 9 -- not edited in the last 9 days\nORDER BY q.CreationDate -- oldest post first."},{"QuerySetId":1024207,"Title":"Owners of the most closed questions","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS Count FROM Posts WHERE NOT ClosedDate IS NULL GROUP BY OwnerUserId ORDER BY Count DESC, OwnerUserId LIMIT 100","CreationDate":"2019-04-06 03:11:05","validated":false,"QueryBody_Original":"SELECT  TOP 100 OwnerUserId AS [User Link], COUNT(*) AS Count\nFROM Posts\nWHERE ClosedDate IS NOT NULL\nGROUP BY OwnerUserId\nORDER BY Count DESC, OwnerUserId"},{"QuerySetId":1024464,"Title":"select * from users where id=5569396","Description":null,"QueryBody":"SELECT * FROM users WHERE id = 5569396","CreationDate":"2019-04-07 00:39:48","validated":false,"QueryBody_Original":"SELECT  * from users where id=5569396"},{"QuerySetId":1024884,"Title":"Editors in a time interval","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS Edits FROM PostHistory WHERE PostHistoryTypeId IN (4, 5, 6) AND CreationDate >= '##start##' AND CreationDate < '##end##' GROUP BY UserId ORDER BY Edits DESC","CreationDate":"2019-04-07 23:43:27","validated":false,"QueryBody_Original":"SELECT  UserId as [User Link], count(*) as Edits from PostHistory\nwhere PostHistoryTypeId in (4, 5, 6) \nand CreationDate >= '##start##' and CreationDate < '##end##'\ngroup by UserId\norder by Edits desc"},{"QuerySetId":1025547,"Title":"R Tag Gold Badge Holders","Description":null,"QueryBody":"SELECT u.id, DisplayName, u.Reputation, b.Name, b.Date, b.Class, b.TagBased FROM Users AS u JOIN Badges AS b ON u.ID = b.UserId WHERE b.Name = 'r' AND b.Class = 1 ORDER BY b.Date DESC","CreationDate":"2019-04-08 18:24:27","validated":false,"QueryBody_Original":"SELECT  u.id, DisplayName, u.Reputation, b.Name, b.Date, b.Class, b.TagBased\nFROM Users u\nJOIN Badges b ON u.ID = b.UserId\nWHERE b.Name = 'r' AND b.Class = 1\nORDER by b.Date DESC"},{"QuerySetId":1025742,"Title":"Number of closed duplicate questions","Description":null,"QueryBody":"SELECT COUNT(DISTINCT d.Id) FROM Posts AS d \/* d=duplicate *\/ LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND pl.LinkTypeId = 3 \/* 3=duplicate *\/ AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/","CreationDate":"2019-04-09 00:33:30","validated":false,"QueryBody_Original":"SELECT  COUNT(DISTINCT d.Id)\nFROM Posts d  -- d=duplicate\nLEFT JOIN PostHistory ph ON ph.PostId = d.Id\nLEFT JOIN PostLinks pl ON pl.PostId = d.Id\nLEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\nWHERE\n  d.PostTypeId = 1  -- 1=Question\n  AND pl.LinkTypeId = 3  -- 3=duplicate\n  AND ph.PostHistoryTypeId = 10  -- 10=Post Closed"},{"QuerySetId":1026077,"Title":"Posts in java with delete files etc","Description":"Looking at posts shorter than 200 with the text `hank` somewhere in it\r\n","QueryBody":"SELECT tags FROM posts WHERE posttypeid = 1 AND (tags LIKE 'java')","CreationDate":"2019-04-09 19:48:25","validated":false,"QueryBody_Original":"SELECT \n   tags\nfrom posts\nwhere posttypeid = 1 and (tags like 'java')"},{"QuerySetId":1026975,"Title":"Questions marked as duplicate that have been reopened at least once","Description":null,"QueryBody":"SELECT p.id AS PostId, p.id AS \"Post Link\", pl.relatedpostid, pl.relatedpostid AS \"Post Link\", p.closeddate FROM posts AS p JOIN posthistory AS ph1 ON p.id = ph1.postid JOIN posthistory AS ph2 ON p.id = ph2.postid JOIN postlinks AS pl ON p.id = pl.postid WHERE p.posttypeid = 1 AND pl.linktypeid = 3 AND ph1.posthistorytypeid = 10 AND ph2.posthistorytypeid = 11","CreationDate":"2019-04-11 02:12:02","validated":false,"QueryBody_Original":"SELECT  p.id as PostId, p.id as [Post Link],  pl.relatedpostid, \n       pl.relatedpostid as [Post Link], p.closeddate\nfrom posts p \njoin posthistory ph1 on p.id = ph1.postid\njoin posthistory ph2 on p.id = ph2.postid\njoin postlinks pl on p.id = pl.postid\nwhere  p.posttypeid = 1\nand pl.linktypeid = 3\nand ph1.posthistorytypeid = 10\nand ph2.posthistorytypeid = 11"},{"QuerySetId":1027440,"Title":"Python Questions after January 2019","Description":null,"QueryBody":"SELECT Id, Body, Title, Tags, AnswerCount, Score, ViewCount, CommentCount FROM Posts WHERE CreationDate >= '2019-01-01' AND CreationDate <= '2019-03-31' AND PostTypeId = 1 AND Tags LIKE '%python%' LIMIT 20000","CreationDate":"2019-04-11 11:00:49","validated":false,"QueryBody_Original":"SELECT  TOP 20000 Id, Body, Title, Tags, AnswerCount, Score, ViewCount, CommentCount\nFROM Posts\nWHERE CreationDate >= '2019-01-01' AND CreationDate <= '2019-03-31' \n      AND PostTypeId = 1 AND Tags LIKE '%python%'"},{"QuerySetId":1028305,"Title":"rajkot's developers above 500 reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%kolkata%' OR UPPER(Location) LIKE '%KOLKATA%' OR Location LIKE '%Kolkata%') AND Reputation >= 500 ORDER BY Reputation DESC","CreationDate":"2019-10-19 17:09:22","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%kolkata%'\n    OR UPPER(Location) LIKE '%KOLKATA%'\n    or Location like '%Kolkata%')\n    AND Reputation >= 500\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1028387,"Title":"Get users with golden php badge","Description":null,"QueryBody":"SELECT u.Id, u.Reputation FROM Users AS u JOIN Badges AS b ON u.Id = b.UserId WHERE b.Name = 'php' AND b.Class = 1 ORDER BY u.Reputation","CreationDate":"2019-04-12 15:33:52","validated":false,"QueryBody_Original":"SELECT  u.Id, u.Reputation\nFROM Users u\nJOIN Badges b ON u.Id = b.UserId\nWHERE b.Name = 'php'\nAND b.Class = 1\nORDER BY u.Reputation ASC;"},{"QuerySetId":1028837,"Title":"Tag Wiki edits owned by Community","Description":null,"QueryBody":"SELECT * FROM Posts AS p JOIN PostHistory ON PostId = p.Id WHERE UserId = -1 AND PostTypeId IN (4, 5)","CreationDate":"2019-04-13 02:10:18","validated":false,"QueryBody_Original":"SELECT  *\nfrom Posts p\n     join PostHistory on PostId = p.Id\nwhere UserId = -1\nand PostTypeId in (4,5)"},{"QuerySetId":1029009,"Title":"Highest rep without a single post","Description":"Users without posts are probably not in the db","QueryBody":"SELECT Id AS \"User Link\", Id, Reputation FROM Users WHERE NOT Id IN (SELECT OwnerUserId FROM Posts) ORDER BY Reputation DESC, Id LIMIT 1000","CreationDate":"2019-04-13 10:15:11","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Id AS [User Link], Id, Reputation\nFROM Users\nWHERE Id NOT IN (SELECT OwnerUserId FROM Posts)\nORDER BY Reputation DESC, Id"},{"QuerySetId":1029010,"Title":"Users previous names based on their edit history","Description":null,"QueryBody":"SELECT UserId, UserDisplayName, COUNT(*) OVER (PARTITION BY UserId) AS No FROM (SELECT DISTINCT UserId, UserDisplayName FROM PostHistory WHERE NOT UserId IS NULL AND NOT UserDisplayName IS NULL) AS p ORDER BY No DESC, UserId","CreationDate":"2019-04-13 10:23:35","validated":false,"QueryBody_Original":"SELECT \n  UserId, UserDisplayName,\n  COUNT(*) OVER (PARTITION BY UserId) AS No\nFROM (\n  SELECT DISTINCT UserId, UserDisplayName\n  FROM PostHistory\n  WHERE UserId IS NOT NULL AND UserDisplayName IS NOT NULL\n  ) p\nORDER BY No DESC, UserId"},{"QuerySetId":1029079,"Title":"Almost Good Questions and Answers","Description":null,"QueryBody":"SELECT a.Id AS \"Post Link\", users.displayname FROM Posts AS a JOIN users ON a.owneruserid = users.id WHERE Score = 24","CreationDate":"2019-04-13 15:45:59","validated":false,"QueryBody_Original":"SELECT  a.Id as [Post Link], users.displayname\nfrom \n Posts a\n join users on a.owneruserid = users.id\nwhere Score=24"},{"QuerySetId":1029091,"Title":"SELECT TOP 100 * From Posts","Description":null,"QueryBody":"SELECT * FROM Users LIMIT 1000000","CreationDate":"2019-04-13 17:18:12","validated":false,"QueryBody_Original":"SELECT  TOP 1000000 * From Users"},{"QuerySetId":1029126,"Title":"Find retaggable AS questions that are open or don't roomba","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body, Tags, Score, AnswerCount, CommentCount FROM POSTS WHERE PostTypeId = 1 AND ((Score <= 0 \/* Negative or 0 score *\/ AND AnswerCount > 0 \/* With answers *\/ AND (AcceptedAnswerId = NULL OR AcceptedAnswerId > 0) \/* No roomba *\/) OR (Score = 0 AND CommentCount > 0) \/* 0 score, 1 comment excludes 1-year roomba *\/ OR (Score > 0)) ORDER BY CreationDate DESC \/* The newer ones are more likely to not be correctly used *\/ LIMIT 1000","CreationDate":"2019-04-20 23:01:59","validated":false,"QueryBody_Original":"SELECT \n    TOP 1000\n    Id as [Post Link], Body, Tags, Score, AnswerCount, CommentCount\nFROM POSTS\nWHERE PostTypeId = 1\n\nAND (\n    ( \n        Score <= 0                      -- Negative or 0 score\n        AND AnswerCount > 0             -- With answers\n        AND (AcceptedAnswerId = NULL \n            OR AcceptedAnswerId > 0\n        )                               -- No roomba\n    )\n    OR (Score = 0 AND CommentCount > 0) -- 0 score, 1 comment excludes 1-year roomba\n    OR \n    ( \n        Score > 0 \n    )\n)\n\n\nORDER BY CreationDate DESC             -- The newer ones are more likely to not be correctly used"},{"QuerySetId":1029251,"Title":"Questions with ongoing undelete votes","Description":null,"QueryBody":"SELECT * FROM Votes WHERE VoteTypeId = 11","CreationDate":"2019-04-14 04:03:51","validated":false,"QueryBody_Original":"SELECT  *\nFROM Votes\nWHERE VoteTypeId = 11;"},{"QuerySetId":1029477,"Title":"New users whose first three questions have a positive score","Description":null,"QueryBody":"SELECT 'site:\/\/users\/' + CAST(Id AS TEXT) + '?tab=questions&sort=newest|' + DisplayName, CreationDate FROM (SELECT u.Id, u.DisplayName, u.CreationDate, p.Score, RANK() OVER (PARTITION BY u.Id ORDER BY p.CreationDate) AS Rank FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE p.PostTypeId = 1) AS temp WHERE Rank <= 3 AND Score < 0 GROUP BY Id, DisplayName, CreationDate HAVING COUNT(*) = 3 ORDER BY CreationDate DESC","CreationDate":"2020-05-08 06:17:33","validated":false,"QueryBody_Original":"SELECT  'site:\/\/users\/' + CAST(Id AS NVARCHAR)\n  + '?tab=questions&sort=newest|' + DisplayName,\n  CreationDate\nFROM (\nSELECT u.Id, u.DisplayName, u.CreationDate, p.Score,\n  RANK() OVER (PARTITION BY u.Id ORDER BY p.CreationDate) AS Rank\n  FROM Users AS u\n  INNER JOIN Posts AS p ON u.Id = p.OwnerUserId\n  WHERE p.PostTypeId = 1) AS temp\nWHERE Rank <= 3 AND Score < 0\nGROUP BY Id, DisplayName, CreationDate\nHAVING COUNT(*) = 3\nORDER BY CreationDate DESC"},{"QuerySetId":1029646,"Title":"Select Users with most combined PostHistory, Comments and Votes","Description":null,"QueryBody":"SELECT u.id, u.location, u.CreationDate, u.LastAccessDate, p.CreationDate, COALESCE(p.activity, 0) + COALESCE(c.activity, 0) + COALESCE(v.activity, 0) AS activity FROM users AS u LEFT JOIN (SELECT userid, CreationDate, COUNT(id) AS activity FROM posthistory GROUP BY userid, CreationDate) AS p ON (p.userid = u.id) LEFT JOIN (SELECT userid, COUNT(id) AS activity FROM comments GROUP BY userid) AS c ON (c.userid = u.id) LEFT JOIN (SELECT userid, COUNT(id) AS activity FROM votes GROUP BY userid) AS v ON (v.userid = u.id) WHERE u.id > 0 AND NOT u.location IS NULL AND u.location LIKE '%United States%' ORDER BY activity DESC LIMIT 500 \/* 00 *\/","CreationDate":"2019-04-27 20:50:39","validated":false,"QueryBody_Original":"SELECT  TOP 500 --00\n  u.id,\n  u.location,\n  u.CreationDate,\n  u.LastAccessDate,\n  p.CreationDate,\n  COALESCE(p.activity,0) + COALESCE(c.activity,0) + COALESCE(v.activity, 0) AS activity\nFROM users u\nLEFT JOIN (\n  SELECT userid,\n  CreationDate, \n  COUNT(id) AS activity\n  FROM posthistory\n  GROUP BY userid, CreationDate\n) as p ON ( p.userid = u.id )\nLEFT JOIN (\n  SELECT userid, COUNT(id) AS activity\n  FROM comments\n  GROUP BY userid\n) as c ON ( c.userid = u.id )\nLEFT JOIN (\n  SELECT userid, COUNT(id) AS activity\n  FROM votes\n  GROUP BY userid\n) as v ON ( v.userid = u.id )\nWHERE u.id > 0 and u.location is not null \n  and u.location LIKE '%United States%'\nORDER BY activity DESC;"},{"QuerySetId":1030107,"Title":"Top 500 question askers by average score","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(Posts.Id) AS Questions, CAST(AVG(CAST(Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Question Score\" FROM Posts INNER JOIN Users ON Users.Id = OwnerUserId WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL AND ClosedDate IS NULL GROUP BY Users.Id, DisplayName HAVING COUNT(Posts.Id) >= 5 ORDER BY \"Average Question Score\" DESC LIMIT 500","CreationDate":"2019-04-15 08:05:37","validated":false,"QueryBody_Original":"SELECT  \n    TOP 500\n    Users.Id as [User Link],\n    Count(Posts.Id) AS Questions,\n    CAST(AVG(CAST(Score AS float)) as numeric(6,2)) AS [Average Question Score]\nFROM\n    Posts\n  INNER JOIN\n    Users ON Users.Id = OwnerUserId\nWHERE \n    PostTypeId = 1 and CommunityOwnedDate is null and ClosedDate is null\nGROUP BY\n    Users.Id, DisplayName\nHAVING\n    Count(Posts.Id) >= 5\nORDER BY\n    [Average Question Score] DESC"},{"QuerySetId":1030386,"Title":"Question eligible for good perplexing questions badge","Description":null,"QueryBody":"SELECT *, DATEDIFF((SELECT MIN(B.CreationDate) FROM posts AS B WHERE B.ParentId = A.Id), A.CreationDate) FROM posts AS A WHERE A.postTypeId = 1 AND A.score >= 10 AND (SELECT COUNT(C.Id) FROM posts AS C WHERE C.ParentID = A.ID) = 0 LIMIT 100","CreationDate":"2019-04-15 15:51:24","validated":false,"QueryBody_Original":"SELECT  \nTOP 100 *\n, \nDATEDIFF(day, A.CreationDate, \n(\n  SELECT MIN(B.CreationDate) FROM posts as B WHERE B.ParentId = A.Id\n  ))\nFROM posts as A where A.postTypeId = 1 AND A.score >= 10\nAND\n(SELECT COUNT(C.Id) FROM posts as C WHERE C.ParentID = A.ID) = 0\n  \n\/* ORDER BY A.CreationDate DESC *\/"},{"QuerySetId":1032294,"Title":"Python posts containing the mojibake \"\u00e2\u20ac\u2122\"","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title, CreationDate, Tags FROM Posts WHERE Tags LIKE '%python%' AND Body LIKE '%\u00e2\u20ac\u2122%' ORDER BY CreationDate DESC LIMIT 25","CreationDate":"2019-04-18 12:18:13","validated":false,"QueryBody_Original":"SELECT  TOP(25) Id AS [Post Link], Title, CreationDate, Tags\n  FROM Posts \n WHERE Tags LIKE '%python%'\n       AND Body LIKE '%\u00e2\u20ac\u2122%'\n ORDER BY CreationDate DESC"},{"QuerySetId":1032321,"Title":"Top Contributor Named 'Luca' From Italy","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", DisplayName, LastAccessDate, Reputation FROM Users WHERE LOWER(Location) LIKE '%italy%' AND DisplayName LIKE 'Luca%' ORDER BY Reputation DESC","CreationDate":"2019-04-18 12:56:08","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n       DisplayName,\n       LastAccessDate,\n       Reputation\n       \nFROM Users\n\nWHERE lower(Location) like '%italy%'\nAND DisplayName like 'Luca%'\nORDER BY Reputation DESC;"},{"QuerySetId":1032454,"Title":"Find questions with just the reactjs tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Tags FROM Posts WHERE Tags = '<reactjs>' ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2019-07-07 15:24:25","validated":false,"QueryBody_Original":"SELECT  Top 100 Id As [Post Link], CreationDate, Tags\nFrom Posts\nWhere Tags = '<reactjs>'\nOrder By CreationDate Desc"},{"QuerySetId":1032455,"Title":"Find questions with a single tag (now case insensitive)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Tags FROM Posts WHERE Tags = '<automation>' ORDER BY Score DESC LIMIT 1000","CreationDate":"2020-06-28 20:08:40","validated":false,"QueryBody_Original":"SELECT  Top 1000 Id As [Post Link], CreationDate, Tags\nFrom Posts\nWhere Tags = '<automation>'\nOrder By Score Desc"},{"QuerySetId":1032695,"Title":"Golden tag badges by owner reputation","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.Id AS UserId, Users.Reputation, Badges.Name AS \"Tag Link\" FROM Badges, Users WHERE Badges.Class = '1' AND Badges.TagBased = '1' AND Badges.UserId = Users.Id ORDER BY Users.Reputation, Users.Id, Badges.Name, Badges.Id","CreationDate":"2019-04-19 18:49:42","validated":false,"QueryBody_Original":"SELECT \n  Users.Id AS [User Link],\n  Users.Id AS UserId,\n  Users.Reputation,\n  Badges.Name AS [Tag Link]\nFROM Badges, Users\nWHERE\n  Badges.Class='1'\n  AND\n  Badges.TagBased='1'\n  AND\n  Badges.UserId = Users.Id\nORDER BY Users.Reputation, Users.Id, Badges.Name, Badges.Id"},{"QuerySetId":1032999,"Title":"Most Popular Tag By Location By Year Ordered By Most PostTags ","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.CreationDate, Posts.Title, Posts.Body, Posts.Tags FROM Posts, Users WHERE Posts.OwnerUserId = Users.Id AND (UPPER(Location) LIKE UPPER('%CAMEROON%') OR Location LIKE '%cameroon%' OR Location LIKE '%Cameroon%' OR Location LIKE '%Cameroun%' OR LOWER(Location) LIKE '%cameroun%' OR UPPER(Location) LIKE '%CAMEROUN%') AND (Posts.Tags IS NULL) ORDER BY Posts.CreationDate","CreationDate":"2019-08-31 02:44:49","validated":false,"QueryBody_Original":"SELECT  Posts.Id as [Post Link], Posts.CreationDate, Posts.Title, Posts.Body, Posts.Tags  from Posts, Users \nwhere Posts.OwnerUserId=Users.Id AND \n(UPPER(Location) like UPPER('%CAMEROON%')\n            or Location like '%cameroon%'\n            or Location like '%Cameroon%' \n            or Location like '%Cameroun%'\n            or Lower (Location) like '%cameroun%'\n            or Upper(Location) like '%CAMEROUN%')\n            AND (Posts.Tags IS  NULL)\n            order by Posts.CreationDate"},{"QuerySetId":1033618,"Title":"Post for tag from year 2013","Description":null,"QueryBody":"SELECT id, Title, Tags FROM Posts WHERE YEAR(CreationDate) > 2013 AND Tags LIKE '%mysql%'","CreationDate":"2019-04-23 02:43:06","validated":false,"QueryBody_Original":"SELECT  id, Title, Tags from Posts where year(CreationDate) > 2013 and Tags Like '%mysql%'"},{"QuerySetId":1034935,"Title":"Select TagName From Tags Order By Count Asc","Description":null,"QueryBody":"SELECT TagName FROM Tags ORDER BY Count","CreationDate":"2019-04-21 13:56:04","validated":false,"QueryBody_Original":"SELECT  TagName From Tags Order By Count Asc"},{"QuerySetId":1036019,"Title":"Asked but answers having less score","Description":"Questions we need to take a look at to increase our answered question rate.","QueryBody":"SELECT questions.Id AS \"Post Link\" FROM Posts AS questions JOIN Posts AS answers ON answers.ParentId = questions.Id WHERE questions.PostTypeId = 1 AND answers.PostTypeId = 2 AND questions.AcceptedAnswerId IS NULL AND questions.ClosedDate IS NULL GROUP BY questions.Id, questions.CreationDate HAVING MAX(answers.Score) = 0 ORDER BY questions.CreationDate","CreationDate":"2019-04-22 12:42:20","validated":false,"QueryBody_Original":"SELECT \n  questions.Id as [Post Link]\nfrom Posts questions\njoin Posts answers on answers.ParentId = questions.Id\nwhere questions.PostTypeId = 1 \n  and answers.PostTypeId = 2 \n  and questions.AcceptedAnswerId IS NULL\n  and questions.ClosedDate IS NULL\ngroup by questions.Id, questions.CreationDate\nhaving max(answers.Score) = 0\norder by questions.CreationDate asc"},{"QuerySetId":1036137,"Title":"How many of the people with accounts answered questions?","Description":null,"QueryBody":"SELECT DISTINCT COUNT(u.Id) FROM Users AS u, Posts AS p WHERE p.PostTypeId = 2 AND u.Id = p.OwnerUserId","CreationDate":"2019-04-22 19:44:49","validated":false,"QueryBody_Original":"SELECT  distinct count(u.Id)\nFrom Users u, Posts p\nWhere p.PostTypeId = 2\nAND u.Id=p.OwnerUserId"},{"QuerySetId":1036153,"Title":"Total number of questions posted in a given year.","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE CreationDate BETWEEN '2018-01-01' AND '2018-12-31' AND tags LIKE '%python%'","CreationDate":"2019-04-22 21:51:17","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts\n  where CreationDate between '2018-01-01' AND '2018-12-31'\n  and tags like '%python%'"},{"QuerySetId":1036717,"Title":"Top Score Board Game Questions","Description":null,"QueryBody":"SELECT CreationDate, Tags, Score, ViewCount FROM Posts WHERE PostTypeId = 1 AND Score > 25 ORDER BY Score DESC","CreationDate":"2019-04-23 19:28:20","validated":false,"QueryBody_Original":"SELECT  CreationDate, Tags, Score, ViewCount\nFROM Posts\nWHERE PostTypeId = 1 AND Score > 25\nORDER BY Score DESC"},{"QuerySetId":1036850,"Title":"Time distribution of unclosed questions - weekly on a given year","Description":null,"QueryBody":"SELECT CAST(STR(YEAR(q.CreationDate)) + '-' + STR(MONTH(q.CreationDate)) + '-' + STR(DAY(q.CreationDate)) AS DATE) AS FullDate, COUNT(*) AS Total FROM Posts AS q WHERE q.PostTypeId = 1 GROUP BY STR(YEAR(q.CreationDate)) + '-' + STR(MONTH(q.CreationDate)) + '-' + STR(DAY(q.CreationDate)) ORDER BY FullDate","CreationDate":"2019-04-24 00:37:09","validated":false,"QueryBody_Original":"SELECT \n--  Posts.CreationDate,\n    CAST(STR(year(q.CreationDate)) + '-' + STR(month(q.CreationDate)) + '-' + STR(day(q.CreationDate)) AS DATE) AS FullDate,\n    count(*) as Total\nFROM \n  Posts q\nWHERE q.PostTypeId=1\n--GROUP BY Posts.CreationDate\n--ORDER BY Posts.CreationDate\nGROUP BY STR(year(q.CreationDate)) + '-' + STR(month(q.CreationDate)) + '-' + STR(day(q.CreationDate))\nORDER BY FullDate"},{"QuerySetId":1036940,"Title":"Test for Language Percentages over Time","Description":null,"QueryBody":"SELECT Name, YEAR(p.CreationDate) AS Year, MONTH(p.CreationDate) AS Month, COUNT(*) AS Posts, p.CommentCount AS CommentCount, p.Id AS ID FROM Posts AS p CROSS JOIN (VALUES ('C')) AS Language(Name) WHERE (SUBSTRING(p.Body, 0, STR_POSITION(p.Body, CHAR(10))) LIKE '%[ >,\\[ ]' + Name + '[, :\\]]%') GROUP BY Name, YEAR(p.CreationDate), MONTH(p.CreationDate), p.CommentCount, p.Id","CreationDate":"2019-04-24 03:25:19","validated":false,"QueryBody_Original":"SELECT  Name, year(p.CreationDate) as Year, month(p.CreationDate) as Month, count(*) as Posts, p.CommentCount as CommentCount, p.Id as ID\n  from Posts p cross join (values\n    ('C')\n  ) as Language(Name)\n  where (SUBSTRING(p.Body,0,CHARINDEX(char(10),p.Body)) like '%[ >,\\[ ]'+Name+'[, :\\]]%')\n  group by Name, year(p.CreationDate), month(p.CreationDate), p.CommentCount, p.Id"},{"QuerySetId":1037391,"Title":"Total Users Of A Especific Country","Description":null,"QueryBody":"SELECT COUNT(*) AS TotalUsers FROM Users WHERE LOWER(Location) LIKE LOWER('%##NombrePais##%')","CreationDate":"2019-04-24 20:57:59","validated":false,"QueryBody_Original":"SELECT \nCount(*) as TotalUsers\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##NombrePais##%')"},{"QuerySetId":1037398,"Title":"Total Users Of Each Location","Description":null,"QueryBody":"SELECT COUNT(Location), Location FROM Users GROUP BY Location ORDER BY Location","CreationDate":"2019-04-24 21:03:49","validated":false,"QueryBody_Original":"SELECT  Count(Location), Location\nfrom Users\nGroup By Location\nOrder By Location"},{"QuerySetId":1037498,"Title":"Suspicious question closing and reopening","Description":null,"QueryBody":"SELECT * FROM Users JOIN PostHistory ON PostHistory.Text LIKE '%\"' + Users.DisplayName + '\"%' WHERE PostHistory.PostHistoryTypeId = 10 \/* Closure *\/","CreationDate":"2019-04-25 20:32:24","validated":false,"QueryBody_Original":"SELECT  *\nFrom Users\nJoin PostHistory\nOn PostHistory.Text Like '%\"' + Users.DisplayName + '\"%'\nWhere PostHistory.PostHistoryTypeId = 10 --Closure"},{"QuerySetId":1038016,"Title":"Overturned Close Votes by User","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(PostHistory.PostId) AS SuccessfulCloseVotes FROM Users JOIN PostHistory ON PostHistory.Text LIKE '%\"' + Users.DisplayName + '\"%' WHERE PostHistory.PostHistoryTypeId = 10 \/* Closure *\/ AND Users.Reputation >= 2500 GROUP BY Users.Id ORDER BY COUNT(PostHistory.PostId) DESC","CreationDate":"2019-04-25 20:39:31","validated":false,"QueryBody_Original":"SELECT  Users.Id As [User Link], Count(PostHistory.PostId) As SuccessfulCloseVotes\nFrom Users\nJoin PostHistory\nOn PostHistory.Text Like '%\"' + Users.DisplayName + '\"%'\nWhere PostHistory.PostHistoryTypeId = 10 --Closure\nAnd Users.Reputation >= 2500\nGroup By Users.Id\nOrder By Count(PostHistory.PostId) Desc"},{"QuerySetId":1038190,"Title":"Finding bad answers through comments","Description":"A lexical search method\r\n","QueryBody":"SELECT c.PostId AS \"Post Link\", YEAR(C.CreationDate) AS Year, MONTH(C.CreationDate) AS Month, c.text AS Body FROM Comments AS C, Posts AS P WHERE (C.Text LIKE '. ' AND C.PostID = P.ID AND P.ClosedDate IS NULL) ORDER BY Year, Month LIMIT 100","CreationDate":"2020-04-19 21:57:42","validated":false,"QueryBody_Original":"SELECT  TOP 100  c.PostId AS [Post Link], YEAR(C.CreationDate) AS Year, Month(C.CreationDate) AS Month, c.text AS Body\nFROM Comments C, Posts P\nWhere (\n  C.Text LIKE '. ' AND\n  C.PostID = P.ID AND\n  P.ClosedDate IS NULL\n)\nOrder By Year, Month"},{"QuerySetId":1038679,"Title":"Find users from any location who put 'Keras' in their profile.","Description":null,"QueryBody":"SELECT * FROM Users\/* AND displayName like 'L%' *\/  WHERE 1 = 1 AND UPPER(Location) LIKE '%%' AND UPPER(AboutMe) LIKE '%KERAS%' ORDER BY reputation DESC","CreationDate":"2019-04-27 00:16:47","validated":false,"QueryBody_Original":"SELECT  *\nfrom Users\nwhere 1=1\n  --AND displayName like 'L%'\n  AND UPPER(Location) LIKE '%%'\n  AND UPPER(AboutMe) LIKE '%KERAS%'\nORDER BY reputation DESC"},{"QuerySetId":1038838,"Title":"SELECT * FROM Posts WHERE Id = 55440926","Description":null,"QueryBody":"SELECT p.*, u.ProfileImageUrl, u.DisplayName, u.WebsiteUrl FROM Posts AS p LEFT JOIN Users AS u ON u.Id = p.OwnerUserId LEFT JOIN Comments AS c ON c.PostId = p.Id WHERE p.Id = 55440926 OR p.ParentId = 55440926","CreationDate":"2019-04-27 13:41:40","validated":false,"QueryBody_Original":"SELECT  p.*, u.ProfileImageUrl, u.DisplayName, u.WebsiteUrl FROM Posts p LEFT JOIN Users u ON u.Id = p.OwnerUserId LEFT JOIN Comments c ON c.PostId = p.Id WHERE p.Id = 55440926 OR p.ParentId = 55440926"},{"QuerySetId":1038843,"Title":"SELECT * FROM Posts WHERE Id < 50","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id < 5000","CreationDate":"2019-05-02 16:18:56","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Id < 5000"},{"QuerySetId":1039007,"Title":"All posts from Jan 1, 2019","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate >= '2019-03-25'","CreationDate":"2019-04-28 01:06:04","validated":false,"QueryBody_Original":"SELECT  *\nFROM Posts\nWHERE CreationDate >= '2019-03-25'"},{"QuerySetId":1039492,"Title":"Specific Badge Earners Between a Time Period","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Id AS \"User Id\", MAX(b.Date) AS \"Date of Badge Award\" FROM Users AS u INNER JOIN Badges AS b ON b.UserId = u.Id WHERE b.\"Name\" = 'Fanatic' AND b.Date BETWEEN '2010-03-12' AND '2011-03-11' GROUP BY u.Id","CreationDate":"2019-04-29 07:39:26","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link],\n  u.Id as 'User Id',\n  MAX(b.Date) AS 'Date of Badge Award'\n  FROM Users AS u\n  INNER JOIN Badges AS b\n    ON b.UserId = u.Id\n  WHERE b.[Name] = 'Fanatic' and b.Date BETWEEN '2010-03-12' AND '2011-03-11'\n  GROUP BY u.Id"},{"QuerySetId":1039545,"Title":"Top posts from users who never come back\/are unregistered","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\" FROM Posts AS p LEFT JOIN USERS AS u ON p.OwnerUserId = u.id WHERE P.PostTypeId = 1 AND DATEDIFF(u.LastAccessDate, u.CreationDate) <= 1 AND p.Score > 5","CreationDate":"2020-05-21 18:10:00","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link] FROM Posts p \nLEFT JOIN USERS u ON p.OwnerUserId = u.id \nWHERE P.PostTypeId = 1 \nAND DATEDIFF(hour, u.CreationDate, u.LastAccessDate) <= 1\nAND p.Score > 5"},{"QuerySetId":1039558,"Title":"Tag wikis with internal http:\/\/ links ordered by use","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.Count, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%http:\/\/%.stackexchange.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/stackexchange.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.stackoverflow.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.serverfault.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.superuser.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.wikipedia.org%') ORDER BY Tags.Count","CreationDate":"2019-04-29 01:42:28","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.Count,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%http:\/\/%.stackexchange.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/stackexchange.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.stackoverflow.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.serverfault.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.superuser.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.wikipedia.org%'\n  )\nORDER BY Tags.Count"},{"QuerySetId":1039582,"Title":" Tag wikis with internal\/Wikipedia http:\/\/ links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.Count, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%http:\/\/%.stackexchange.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/stackexchange.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.stackoverflow.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.serverfault.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.superuser.com%' OR LOWER(Posts.Body) LIKE '%http:\/\/%.wikipedia.org%') ORDER BY Tags.Count","CreationDate":"2019-04-29 01:46:52","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.Count,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%http:\/\/%.stackexchange.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/stackexchange.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.stackoverflow.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.serverfault.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.superuser.com%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/%.wikipedia.org%'\n  )\nORDER BY Tags.Count\n\n-- lightly modified from https:\/\/data.stackexchange.com\/scifi\/query\/715177\/"},{"QuerySetId":1039866,"Title":"Questions That Have An Answer With A Score Higher Than The Accepted Answer","Description":null,"QueryBody":"SELECT q.Id AS QuestionId, q.Title, aa.Score AS AcceptedAnswerScore, Topscore.Maxscore AS HighestAnswerScore, Topscore.Maxscore - aa.Score AS ScoreDifference FROM Posts AS q JOIN Posts AS aa ON q.AcceptedAnswerId = aa.Id JOIN (SELECT a.ParentId, MAX(a.Score) AS Maxscore FROM Posts AS a JOIN Posts AS p ON a.ParentId = p.Id GROUP BY a.ParentId) AS Topscore ON q.Id = Topscore.ParentId WHERE q.PostTypeId = 1 AND q.AcceptedAnswerID <> '' AND Topscore.Maxscore > aa.Score ORDER BY ScoreDifference DESC","CreationDate":"2019-04-30 13:59:18","validated":false,"QueryBody_Original":"SELECT  q.Id AS QuestionId, q.Title, aa.Score AS AcceptedAnswerScore, Topscore.Maxscore AS HighestAnswerScore, Topscore.Maxscore-aa.Score AS ScoreDifference\nFROM Posts q\nJOIN Posts aa on q.AcceptedAnswerId = aa.Id\nJOIN (SELECT a.ParentId, max(a.Score) AS Maxscore\n      FROM Posts a\n      JOIN Posts p ON a.ParentId = p.Id\n      GROUP BY a.ParentId) Topscore ON q.Id = Topscore.ParentId\nWHERE q.PostTypeId = 1\nAND q.AcceptedAnswerID <> ''\nAND Topscore.Maxscore > aa.Score\nORDER BY ScoreDifference DESC"},{"QuerySetId":1039867,"Title":"IGNOREAnswers With Higher Score Than Accepted","Description":null,"QueryBody":"SELECT Title, Id, Score, ViewCount FROM Posts WHERE PostTypeId = 1","CreationDate":"2019-04-29 19:59:38","validated":false,"QueryBody_Original":"SELECT  Title, Id, Score, ViewCount FROM Posts WHERE PostTypeId = 1"},{"QuerySetId":1039869,"Title":"Get Highest Voted Answer Of Questions","Description":null,"QueryBody":"SELECT a.ParentId, MAX(a.Score) FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id GROUP BY a.ParentId","CreationDate":"2019-04-29 20:27:00","validated":false,"QueryBody_Original":"SELECT  a.ParentId, max(a.Score)\nFROM Posts a\nJOIN Posts q ON a.ParentId = q.Id\nGROUP BY a.ParentId"},{"QuerySetId":1039874,"Title":"Top 100 most upvoted comments","Description":null,"QueryBody":"SELECT Score, Id, PostId AS \"Post Link\", Id AS \"Comment Link\", UserId AS \"User Link\" FROM Comments WHERE ID > 97900000 AND Text LIKE '%Thank%' AND LENGTH(Text) < 18 ORDER BY Id LIMIT 100","CreationDate":"2019-05-02 21:26:11","validated":false,"QueryBody_Original":"SELECT  TOP 100 Score,\n  Id,\n  PostId AS [Post Link],\n  Id     AS [Comment Link],\n  UserId AS [User Link]\nFROM   Comments\nWHERE \n  ID > 97900000\n  AND Text LIKE '%Thank%'\n  AND LEN(Text) < 18\nORDER BY Id"},{"QuerySetId":1040306,"Title":"Get Posts by Tags (with order)","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags = '<domain-driven-design>'","CreationDate":"2019-04-30 19:04:36","validated":false,"QueryBody_Original":"SELECT  * from Posts where Tags = '<domain-driven-design>'"},{"QuerySetId":1040313,"Title":"Get Posts by Tags (searching ddd synonimous)","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName = 'domain-driven-design'","CreationDate":"2019-04-30 19:07:02","validated":false,"QueryBody_Original":"SELECT  * from Tags where TagName = 'domain-driven-design'"},{"QuerySetId":1040360,"Title":"select count(*) from  users","Description":null,"QueryBody":"SELECT COUNT(*) FROM users","CreationDate":"2019-04-30 20:45:44","validated":false,"QueryBody_Original":"SELECT  count(*) from  users"},{"QuerySetId":1040583,"Title":"Hot network questions by a specific user","Description":null,"QueryBody":"SELECT DISTINCT p.CreationDate, p.OwnerUserId AS \"User Link\", p.Id AS \"Post Link\" FROM Posts AS p JOIN PostHistory AS ph ON p.Id = ph.PostId WHERE (ph.PostHistoryTypeId = 52) ORDER BY p.CreationDate DESC","CreationDate":"2020-01-11 15:34:13","validated":false,"QueryBody_Original":"SELECT \n  DISTINCT p.CreationDate, p.OwnerUserId AS [User Link], p.Id AS [Post Link]\nFROM Posts p JOIN PostHistory ph ON p.Id=ph.PostId\nWHERE (ph.PostHistoryTypeId=52)\nORDER BY p.CreationDate DESC"},{"QuerySetId":1040639,"Title":"Questions with most favourite stars","Description":null,"QueryBody":"SELECT Id, Title, FavoriteCount FROM Posts ORDER BY FavoriteCount DESC","CreationDate":"2019-05-01 18:20:50","validated":false,"QueryBody_Original":"SELECT  Id, Title, FavoriteCount FROM Posts ORDER BY FavoriteCount DESC"},{"QuerySetId":1041051,"Title":"Get all \"Unclear What You're Asking\" with >5 answers","Description":null,"QueryBody":"SELECT p.Id AS \"Post ID\", CONCAT('https:\/\/stackoverflow.com\/q\/', p.Id, '|', p.Title) AS \"SO Link\" FROM Posts AS p JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE p.PostTypeId = 1 \/* 1 = question, 2 = answer *\/ AND ph.PostHistoryTypeId = 10 \/* Closed *\/ AND ph.Comment = 103 \/* \"Unclear what you're asking\" close reason *\/ AND p.AnswerCount > 5 \/* More than 5 answers *\/","CreationDate":"2019-05-02 19:40:52","validated":false,"QueryBody_Original":"SELECT  \n  p.Id AS [Post ID],\n  CONCAT('https:\/\/stackoverflow.com\/q\/', p.Id, '|', p.Title) AS [SO Link]\nFROM Posts p\n  JOIN PostHistory ph ON ph.PostId = p.Id\nWHERE \n  p.PostTypeId = 1 --1 = question, 2 = answer\n  AND ph.PostHistoryTypeId = 10 --Closed\n  AND ph.Comment = 103 --\"Unclear what you're asking\" close reason\n  AND p.AnswerCount > 5 --More than 5 answers"},{"QuerySetId":1041093,"Title":"Highest Scoring Posts after HNQ Removal","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate > '2018-10-19 00:00:00' ORDER BY Score DESC","CreationDate":"2019-05-02 21:01:14","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE CreationDate > '2018-10-19 00:00:00'\nORDER BY Score DESC"},{"QuerySetId":1041135,"Title":"No, this shouldn't be the accepted answer","Description":null,"QueryBody":"SELECT Id FROM comments WHERE (LOWER(Text) LIKE '%this should be accepted%' OR LOWER(Text) LIKE '%this should be the accepted%') AND LENGTH(Text) <= 100 LIMIT 90","CreationDate":"2020-05-31 21:10:13","validated":false,"QueryBody_Original":"SELECT  TOP 90 Id FROM comments\nWHERE (\n  lower(Text) LIKE '%this should be accepted%'\n  OR LOWER(Text) LIKE '%this should be the accepted%'\n) AND len(Text) <= 100"},{"QuerySetId":1041163,"Title":"Find top user from location","Description":null,"QueryBody":"SELECT Id AS \"User Link\", DisplayName, Reputation, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%##FullCountryName##%') AND LOWER(DisplayName) LIKE LOWER('%##DisplayName##%')","CreationDate":"2019-05-03 01:26:52","validated":false,"QueryBody_Original":"SELECT \n \n    Id AS [User Link], \n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n     LOWER(Location) LIKE LOWER('%##FullCountryName##%') AND\n     LOWER(DisplayName) LIKE LOWER('%##DisplayName##%')"},{"QuerySetId":1041187,"Title":"Top 100000 Posts and Answers by Tags","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Title AS Post_Title, q.Score AS Score, q.Body AS QuestionBody, a.Body AS AnswerBody FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE LOWER(q.Tags) LIKE LOWER('%##tag##%') AND q.AnswerCount > 5 AND a.posttypeid = 2 ORDER BY Score DESC LIMIT 100000","CreationDate":"2019-05-03 08:38:57","validated":false,"QueryBody_Original":"SELECT  TOP 100000\n    --ROW_NUMBER() OVER(ORDER BY Score DESC) AS [#], \n    q.Id AS [Post Link],\n    --q.Id as post_id,\n    q.Title as Post_Title,\n    q.Score as Score,\n    q.Body as QuestionBody,\n    a.Body as AnswerBody\nFROM\n    Posts q\n    inner Join Posts as a ON a.ParentId = q.Id\nWHERE\n    LOWER(q.Tags) LIKE LOWER('%##tag##%') and q.AnswerCount > 5 and a.posttypeid = 2\n--GROUP BY q.Id, q.Title, q.Score, q.Body\nORDER BY\n    Score DESC;"},{"QuerySetId":1041307,"Title":"Questions grouped by # of favourite votes","Description":null,"QueryBody":"SELECT FavoriteCount, COUNT(*), MIN(Id) AS \"Post Link\" FROM Posts WHERE PostTypeId = 1 \/* Questions *\/ GROUP BY FavoriteCount ORDER BY FavoriteCount","CreationDate":"2019-05-03 15:40:19","validated":false,"QueryBody_Original":"SELECT  FavoriteCount, COUNT(*), MIN(Id) AS [Post Link]\n  FROM Posts\n  WHERE PostTypeId = 1 -- Questions\n  GROUP BY FavoriteCount\n  ORDER BY FavoriteCount"},{"QuerySetId":1041662,"Title":"Top 100 unanswered python questions by view count","Description":null,"QueryBody":"SELECT Posts.Id, Posts.Title, Posts.CreationDate, Posts.Score, Posts.ViewCount, Posts.FavoriteCount, Posts.AnswerCount, Posts.Body, Posts.Tags FROM Posts WHERE Posts.PostTypeId = 1 \/* Question *\/ AND Posts.Tags LIKE '%python%' AND Posts.CreationDate >= CURRENT_TIMESTAMP() - 7 AND Posts.AcceptedAnswerId IS NULL ORDER BY ViewCount DESC LIMIT 100","CreationDate":"2019-05-04 04:30:53","validated":false,"QueryBody_Original":"SELECT \n  TOP 100\n  Posts.Id,\n  Posts.Title,\n  Posts.CreationDate,\n  Posts.Score,\n  Posts.ViewCount,\n  Posts.FavoriteCount,\n  Posts.AnswerCount,\n  Posts.Body,\n  Posts.Tags\nFROM\n  Posts\nWHERE\n  Posts.PostTypeId = 1 -- Question\n  AND\n  Posts.Tags LIKE '%python%'\n  AND\n  Posts.CreationDate >= GETDATE()-7\n  AND\n  Posts.AcceptedAnswerId IS NULL\nORDER BY\n  ViewCount DESC"},{"QuerySetId":1041822,"Title":"created or edited accepted answers from 2017","Description":null,"QueryBody":"SELECT Q.Id AS QId, A.Body AS ABody, Q.CreationDate AS QCreationDate, A.LastEditDate AS ALastEditDate FROM Posts AS Q, Posts AS A WHERE Q.AcceptedAnswerId = A.Id AND A.Body LIKE '%<a href=\"http%' AND YEAR(A.LastEditDate) = 2017 OR YEAR(Q.CreationDate) = 2017 LIMIT 100","CreationDate":"2019-05-04 21:49:37","validated":false,"QueryBody_Original":"SELECT  TOP 100\nQ.Id AS QId,\nA.Body AS ABody,\nQ.CreationDate AS QCreationDate,\nA.LastEditDate AS ALastEditDate\nFROM\nPosts AS Q, Posts AS A\nWHERE\nQ.AcceptedAnswerId = A.Id\nAND\nA.Body LIKE '%<a href=\"http%'\nAND\nYEAR(A.LastEditDate) = 2017\nOR\nYEAR(Q.CreationDate) = 2017"},{"QuerySetId":1042052,"Title":"    ","Description":null,"QueryBody":"SELECT id FROM users WHERE displayname = 'mosvy'","CreationDate":"2019-05-05 16:21:30","validated":false,"QueryBody_Original":"SELECT  id from users where displayname = 'mosvy'"},{"QuerySetId":1042302,"Title":"Search for posts with specific tag","Description":null,"QueryBody":"SELECT Id, PostTypeId, AcceptedAnswerId, CreationDate, Score, ViewCount, OwnerUserId, Title, Tags, AnswerCount, CommentCount, FavoriteCount, Body FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%<abap>%'","CreationDate":"2019-05-06 13:58:07","validated":false,"QueryBody_Original":"SELECT  Id,PostTypeId,AcceptedAnswerId,CreationDate,\n Score, ViewCount,OwnerUserId, Title,Tags, AnswerCount,\n CommentCount, FavoriteCount, Body\nfrom Posts\nwhere PostTypeId = 1 AND Tags like '%<abap>%'"},{"QuerySetId":1042894,"Title":"One-time badges awarded multiple times","Description":null,"QueryBody":"SELECT name, GROUP_CONCAT(userid, ', ') AS top_user FROM (SELECT name, userid, badge_count, MAX(badge_count) OVER (PARTITION BY name) AS max_badges FROM (SELECT name, userid, COUNT(*) AS badge_count FROM badges WHERE tagbased = 0 AND NOT name IN ('Yearling', 'Caucus', 'Constituent', 'Reviewer', 'Custodian', 'Reversal', 'Steward', 'Not a Robot', 'Census', 'Favorite Question', 'Stellar Question', 'Nice Question', 'Good Question', 'Great Question', 'Announcer', 'Populist', 'Revival', 'Necromancer', 'Popular Question', 'Notable Question', 'Famous Question', 'Guru', 'Booster', 'Publicist', 'Enlightened', 'Nice Answer', 'Good Answer', 'Great Answer') GROUP BY name, userid) AS b WHERE badge_count > 1) AS a WHERE max_badges = badge_count GROUP BY name","CreationDate":"2019-05-08 00:03:44","validated":false,"QueryBody_Original":"SELECT  name, string_agg(userid, ', ') top_user\nfrom (\n  SELECT name, userid, badge_count, max(badge_count) over(partition by name) max_badges\n  from (\n    SELECT name, userid, count(*) badge_count\n    from badges\n    where tagbased = 0\n    and name not in ('Yearling','Caucus','Constituent','Reviewer','Custodian','Reversal','Steward','Not a Robot','Census','Favorite Question','Stellar Question','Nice Question','Good Question','Great Question','Announcer','Populist','Revival','Necromancer','Popular Question','Notable Question','Famous Question','Guru','Booster','Publicist','Enlightened','Nice Answer','Good Answer','Great Answer')\n    group by name, userid\n  ) b\n  where badge_count > 1\n) a\nwhere max_badges = badge_count\ngroup by name"},{"QuerySetId":1043136,"Title":"Questions removed from HNQ list","Description":null,"QueryBody":"SELECT h52.PostId AS \"Post Link\", h52.CreationDate AS \"Became hot\", h53.CreationDate AS \"Removed\", h53.UserId AS \"User Link\", 'site:\/\/posts\/' + CAST(h52.PostId AS TEXT) + '\/revisions|Revisions' FROM PostHistory AS h52 LEFT OUTER JOIN PostHistory AS h53 ON h52.PostId = h53.PostId AND h53.PostHistoryTypeId = 53 \/* removed from HNQ *\/ WHERE h52.PostHistoryTypeId = 52 \/* became HNQ *\/ ORDER BY h52.CreationDate DESC","CreationDate":"2019-05-08 16:34:01","validated":false,"QueryBody_Original":"SELECT  h52.PostId AS [Post Link],\n  h52.CreationDate AS [Became hot],\n  h53.CreationDate AS [Removed],\n  h53.UserId AS [User Link],\n  'site:\/\/posts\/' + CAST(h52.PostId AS NVARCHAR) + '\/revisions|Revisions'\n  FROM PostHistory AS h52\n  LEFT OUTER JOIN PostHistory AS h53\n    ON h52.PostId = h53.PostId\n   AND h53.PostHistoryTypeId = 53 -- removed from HNQ\n WHERE h52.PostHistoryTypeId = 52 -- became HNQ\n  ORDER BY h52.CreationDate DESC"},{"QuerySetId":1043256,"Title":"All tags with excerpt, ordered by tag count","Description":null,"QueryBody":"SELECT t.TagName, t.Count AS TagCount, e.Body AS \"Excerpt\" FROM tags AS t LEFT JOIN Posts AS e ON t.ExcerptPostId = e.Id ORDER BY TagCount DESC","CreationDate":"2019-05-08 17:12:06","validated":false,"QueryBody_Original":"SELECT  \n  t.TagName,\n  t.Count as TagCount,\n  e.Body as 'Excerpt'\nfrom tags t\nleft join Posts e\n  on t.ExcerptPostId = e.Id\norder by TagCount desc"},{"QuerySetId":1043304,"Title":"Top 10 most viewed question with accepted answer in Flask tag","Description":null,"QueryBody":"SELECT Title, Body FROM Posts WHERE Tags LIKE '%flask%' AND NOT AcceptedAnswerId IS NULL ORDER BY ViewCount DESC LIMIT 10","CreationDate":"2019-05-08 20:01:39","validated":false,"QueryBody_Original":"SELECT  TOP(10)\n  Title, Body \n  FROM Posts \n  WHERE Tags LIKE '%flask%' and \n  AcceptedAnswerId IS NOT NULL \n  ORDER BY ViewCount DESC;"},{"QuerySetId":1043309,"Title":"All questions with accepted answers in Flask tag sorted by view count","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%flask%' AND NOT AcceptedAnswerId IS NULL ORDER BY ViewCount DESC","CreationDate":"2019-05-08 20:20:54","validated":false,"QueryBody_Original":"SELECT  * \n  FROM Posts \n  WHERE Tags LIKE '%flask%' and \n  AcceptedAnswerId IS NOT NULL \n  ORDER BY ViewCount DESC;"},{"QuerySetId":1043324,"Title":" how to draw a line with a bar in the same time in a pareto chart","Description":null,"QueryBody":"SELECT TITLE FROM POSTS WHERE TITLE LIKE '%Pareto%'","CreationDate":"2019-05-08 23:22:30","validated":false,"QueryBody_Original":"SELECT  TITLE FROM POSTS WHERE TITLE LIKE '%Pareto%'"},{"QuerySetId":1044381,"Title":"The fastest shots on the west","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", Q.CreationDate AS Asked, A.LastEditDate AS Answered, DATEDIFF(A.LastEditDate, Q.CreationDate) AS Seconds FROM Posts AS Q, Posts AS A WHERE A.ParentId = Q.Id AND A.OwnerUserId <> Q.OwnerUserId AND A.OwnerUserId >= 1 AND Q.OwnerUserId >= 1 AND A.LastEditDate >= Q.CreationDate ORDER BY Seconds LIMIT 100","CreationDate":"2019-05-09 02:57:01","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Q.Id AS [Post Link],\n  Q.CreationDate AS Asked,\n  A.LastEditDate AS Answered,\n  DATEDIFF(s, Q.CreationDate, A.LastEditDate) AS Seconds\nFROM Posts Q, Posts A\nWHERE\n  A.ParentId = Q.Id\n  AND\n  A.OwnerUserId <> Q.OwnerUserId\n  AND\n  A.OwnerUserId >= 1\n  AND\n  Q.OwnerUserId >= 1\n  AND\n  A.LastEditDate >= Q.CreationDate\nORDER BY Seconds"},{"QuerySetId":1044538,"Title":"Test - top users reputation from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%India%' OR UPPER(Location) LIKE '%India%' OR Location LIKE '%India%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-05-09 15:14:07","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%India%'\n    OR UPPER(Location) LIKE '%India%'\n    or Location like '%India%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1044605,"Title":"Top users(Math) reputation from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%India%' OR UPPER(Location) LIKE '%India%' OR Location LIKE '%India%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-05-09 17:25:40","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%India%'\n    OR UPPER(Location) LIKE '%India%'\n    or Location like '%India%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1044705,"Title":"No Thanks III: The Revenge","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM POSTS WHERE LOWER(BODY) LIKE '%regards%' OR LOWER(BODY) LIKE '%greetings%' OR LOWER(BODY) LIKE '%tanks in%' OR LOWER(BODY) LIKE '%i need%help%' OR LOWER(BODY) LIKE '%i need%halp%' OR LOWER(BODY) LIKE '%hi %' OR LOWER(BODY) LIKE 'guys%' OR LOWER(BODY) LIKE '%hello%' OR LOWER(BODY) LIKE '%good morning%' OR LOWER(BODY) LIKE '%good day%' OR LOWER(BODY) LIKE '%good afternoon%' LIMIT 1000","CreationDate":"2020-04-23 16:29:00","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    Id as [Post Link], Body \nFROM POSTS\nWHERE LOWER(BODY) LIKE '%regards%'\n    OR LOWER(BODY) LIKE '%greetings%' \n    OR LOWER(BODY) LIKE '%tanks in%'\n    OR LOWER(BODY) LIKE '%i need%help%'\n    OR LOWER(BODY) LIKE '%i need%halp%'\n    OR LOWER(BODY) LIKE '%hi %'\n    OR LOWER(BODY) LIKE 'guys%'\n    OR LOWER(BODY) LIKE '%hello%'\n    OR LOWER(BODY) LIKE '%good morning%'\n    OR LOWER(BODY) LIKE '%good day%'\n    OR LOWER(BODY) LIKE '%good afternoon%'"},{"QuerySetId":1044715,"Title":"Yearly activity by year of registration","Description":null,"QueryBody":"SELECT TIME_TO_STR(Posts.CreationDate, '%Y') AS PostYear, CAST(TIME_TO_STR(Users.CreationDate, '%Y') AS TEXT) AS RegYear, COUNT(*) AS Count FROM Posts, Users WHERE Posts.OwnerUserId = Users.Id AND Posts.CreationDate > Users.CreationDate GROUP BY TIME_TO_STR(Users.CreationDate, '%Y'), TIME_TO_STR(Posts.CreationDate, '%Y') ORDER BY RegYear, PostYear","CreationDate":"2019-05-09 21:27:27","validated":false,"QueryBody_Original":"SELECT \n  DATEPART(yyyy, Posts.CreationDate) AS PostYear,\n  CAST(DATEPART(yyyy, Users.CreationDate) AS VARCHAR(MAX)) AS RegYear,\n  COUNT(*) AS Count\nFROM Posts, Users\nWHERE\n  Posts.OwnerUserId = Users.Id\n  AND\n  Posts.CreationDate > Users.CreationDate\nGROUP BY\n  DATEPART(yyyy, Users.CreationDate),\n  DATEPART(yyyy, Posts.CreationDate)\nORDER BY\n  RegYear, PostYear"},{"QuerySetId":1044754,"Title":"How many users with rep less than 15","Description":null,"QueryBody":"SELECT COUNT(*) AS Users FROM Users WHERE Reputation < 15 AND Id > 0","CreationDate":"2019-05-09 22:46:28","validated":false,"QueryBody_Original":"SELECT \n  Count(*) As Users\nFROM\n  Users\nWHERE\n  Reputation < 15 And\n  Id > 0; -- Community user"},{"QuerySetId":1045457,"Title":"Most Favorites Questions on SO","Description":null,"QueryBody":"SELECT FavoriteCount, Id, Title FROM Posts ORDER BY FavoriteCount DESC","CreationDate":"2019-05-10 11:49:34","validated":false,"QueryBody_Original":"SELECT \n  FavoriteCount, Id, Title\nFROM\n  Posts\nORDER BY\n  FavoriteCount DESC"},{"QuerySetId":1045682,"Title":"Top 100 StackOverflow users from South Africa","Description":"Displays a list of the the 100 StackOverflow users in South Africa\r\n","QueryBody":"SELECT Id, DisplayName AS \"Display Name\", Reputation, WebsiteUrl AS Website, Location FROM Users WHERE Location LIKE N'%South Africa%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2019-05-14 09:26:07","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName as [Display Name],\n   Reputation,\n   WebsiteUrl as Website,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%South Africa%'\nORDER BY\n   reputation DESC"},{"QuerySetId":1046184,"Title":"users letting Facebook track you through their avatars","Description":null,"QueryBody":"SELECT u.ProfileImageUrl FROM Users AS u LIMIT 100","CreationDate":"2019-05-10 23:04:40","validated":false,"QueryBody_Original":"SELECT  TOP 100 u.ProfileImageUrl from Users u"},{"QuerySetId":1050638,"Title":"Integration of new members: Average seniority in days between qr and ar for new member questions","Description":null,"QueryBody":"SELECT new_users.Month, new_users.\"Amount of new members\", questions.\"Questions per month\" FROM (SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), 'Amount of new members' = COUNT(Id) FROM Users GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)) AS new_users, (SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), 'Questions per month' = COUNT(id) FROM Posts WHERE PostTypeId = 1 GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)) AS questions WHERE new_users.Month = questions.Month ORDER BY questions.Month","CreationDate":"2019-05-24 13:19:05","validated":false,"QueryBody_Original":"SELECT  new_users.Month, new_users.[Amount of new members], questions.[Questions per month]\nfrom (\n  SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), 'Amount of new members' = count(Id)\n  from Users\n  group by DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n  ) as new_users,\n\n  (SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), 'Questions per month' = COUNT(id)\n  FROM Posts\n  where PostTypeId = 1\n  group by DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n  ) as questions\n  \nWHERE new_users.Month = questions.Month\norder by questions.Month"},{"QuerySetId":1051623,"Title":"Has the most questions, but never accepted anything","Description":null,"QueryBody":"SELECT OwnerUserId AS UserId, OwnerUserId AS \"User Link\", COUNT(*) AS AllQ FROM Posts WHERE PostTypeId = 1 AND OwnerUserId > 0 GROUP BY OwnerUserId HAVING COUNT(AcceptedAnswerId) = 0 ORDER BY AllQ DESC, UserId LIMIT 100","CreationDate":"2019-05-15 05:47:47","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  OwnerUserId AS UserId,\n  OwnerUserId AS [User Link],\n  COUNT(*) AS AllQ\nFROM Posts\nWHERE\n  PostTypeId = 1\n  AND\n  OwnerUserId > 0\nGROUP BY OwnerUserId\nHAVING COUNT(AcceptedAnswerId)=0\nORDER BY AllQ DESC, UserId"},{"QuerySetId":1051881,"Title":"how many active answerers for a tag","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", COUNT(*) AS NumAnswers, SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) AS NumAccepted, (SUM(CASE WHEN q.AcceptedAnswerId = a.Id THEN 1 ELSE 0 END) * 100.0 \/ COUNT(*)) AS AcceptedPercent FROM Posts AS a INNER JOIN Users AS u ON u.Id = a.OwnerUserId INNER JOIN Posts AS q ON a.ParentId = q.Id WHERE (q.Tags LIKE '%##tagName##%') AND (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL) \/* no self answers *\/ GROUP BY u.Id ORDER BY NumAnswers DESC LIMIT 100","CreationDate":"2019-05-15 17:04:15","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  u.Id AS [User Link],\n  count(*) AS NumAnswers,\n  sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end) AS NumAccepted,\n  (sum(case when q.AcceptedAnswerId = a.Id then 1 else 0 end)*100.0\/count(*)) AS AcceptedPercent\nFROM Posts a\nINNER JOIN Users u ON u.Id = a.OwnerUserId\nINNER JOIN Posts q ON a.ParentId = q.Id\nWHERE \n(q.Tags like '%##tagName##%') and \n  (q.OwnerUserId <> u.Id OR q.OwnerUserId IS NULL)   --no self answers\nGROUP BY u.Id \nORDER BY  NumAnswers DESC"},{"QuerySetId":1052057,"Title":"how to draw a line with a bar in the same time in a pareto chart","Description":null,"QueryBody":"SELECT TITLE FROM POSTS WHERE TITLE LIKE '%pareto%'","CreationDate":"2019-05-15 22:23:44","validated":false,"QueryBody_Original":"SELECT  TITLE FROM POSTS WHERE TITLE LIKE '%pareto%'"},{"QuerySetId":1053063,"Title":"Top questions unanswered by a user","Description":null,"QueryBody":"SELECT Id, Title, Tags, Score FROM posts AS q WHERE PostTypeId = 1 AND NOT EXISTS(SELECT * FROM posts AS a WHERE a.PostTypeId = 2 AND a.ParentId = q.Id) ORDER BY Score DESC","CreationDate":"2019-05-18 08:02:52","validated":false,"QueryBody_Original":"SELECT  Id, Title, Tags, Score from posts q\nwhere PostTypeId = 1\nand not exists (\n  SELECT * from posts a\n  where a.PostTypeId = 2\n  and a.ParentId = q.Id\n)\norder by Score desc"},{"QuerySetId":1053208,"Title":"Users with highest average post score","Description":null,"QueryBody":"SELECT MAX(U.DisplayName), COUNT(P.Id) AS NumPosts, AVG(P.Score) AS AvgScore FROM Users AS U INNER JOIN Posts AS P ON P.OwnerUserId = U.Id WHERE P.PostTypeId IN (1, 2) GROUP BY U.Id HAVING COUNT(P.Id) > 5 ORDER BY AvgScore DESC","CreationDate":"2019-05-18 20:19:13","validated":false,"QueryBody_Original":"SELECT  MAX(U.DisplayName), COUNT(P.Id) AS NumPosts, AVG(P.Score) AS AvgScore FROM Users U\nINNER JOIN Posts P\nON P.OwnerUserId = U.Id\nWHERE P.PostTypeId IN (1, 2)\nGROUP BY U.Id\nHAVING COUNT(P.Id) > 5\nORDER BY AvgScore DESC"},{"QuerySetId":1053627,"Title":"Most Viewed Questions about Git","Description":null,"QueryBody":"SELECT p.id, p.Title, p.AcceptedAnswerId FROM Posts AS p WHERE p.PostTypeId = 1 AND LOWER(p.Title) LIKE '% git %' ORDER BY ViewCount DESC LIMIT 1000","CreationDate":"2020-10-09 18:23:45","validated":false,"QueryBody_Original":"SELECT  TOP 1000 p.id, p.Title, p.AcceptedAnswerId\nFROM Posts p\nWHERE p.PostTypeId = 1\nAND lower(p.Title) LIKE '% git %' \nORDER BY ViewCount DESC"},{"QuerySetId":1053641,"Title":"Total answers with negative score","Description":null,"QueryBody":"SELECT COUNT(DISTINCT (p.Id)) FROM Posts AS p WHERE p.PostTypeId = 2 AND P.Score < 0","CreationDate":"2019-05-20 16:53:53","validated":false,"QueryBody_Original":"SELECT  COUNT(DISTINCT(p.Id))\nFROM Posts p\nWHERE p.PostTypeId = 2\nAND P.Score < 0"},{"QuerySetId":1053670,"Title":"100 Top answers by score","Description":null,"QueryBody":"SELECT p.Id, p.ParentId, p.Score FROM Posts AS p WHERE p.PostTypeId = 2 ORDER BY p.Score DESC LIMIT 100","CreationDate":"2019-05-20 17:30:57","validated":false,"QueryBody_Original":"SELECT  TOP 100 p.Id, p.ParentId, p.Score\nFROM Posts p\nWHERE p.PostTypeId = 2\nORDER BY p.Score DESC;"},{"QuerySetId":1054182,"Title":"Delete question count change by time","Description":null,"QueryBody":"SELECT COUNT(Id) AS count, TIME_TO_STR(\"CreationDate\", '%Year') AS year FROM Posts WHERE AcceptedAnswerId <> 0 AND PostTypeId = 1 GROUP BY TIME_TO_STR(\"CreationDate\", '%Year')","CreationDate":"2019-05-22 02:20:32","validated":false,"QueryBody_Original":"SELECT  count(Id) as count, DATEPART(Year, [CreationDate]) as year\nfrom Posts\nwhere AcceptedAnswerId <> 0\nand PostTypeId = 1\nGROUP BY DATEPART(Year, [CreationDate])"},{"QuerySetId":1054820,"Title":"Total de perguntas vs total fechadas","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE Reputation >= 3000","CreationDate":"2019-05-27 17:19:43","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Users\nWHERE Reputation >= 3000"},{"QuerySetId":1055063,"Title":"Tag wikis with internal stackoverflow.com\/documentation\/ links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url, LENGTH(Posts.Body) FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%stackoverflow.com\/documentation\/%') ORDER BY Tags.Id","CreationDate":"2019-05-23 18:02:54","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url,\n  len(Posts.Body)\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%stackoverflow.com\/documentation\/%'\n  )\nORDER BY Tags.Id"},{"QuerySetId":1055069,"Title":"Tag wikis with internal chat.stackoverflow.com\/rooms links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url, LENGTH(Posts.Body) FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%chat.stackoverflow.com\/rooms%') ORDER BY Tags.Id","CreationDate":"2019-05-23 19:10:47","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url,\n  len(Posts.Body)\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%chat.stackoverflow.com\/rooms%'\n  )\nORDER BY Tags.Id"},{"QuerySetId":1055499,"Title":"Top 100 developers from Armenia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE LOWER(Location) LIKE LOWER('%Armenia%') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-05-24 18:10:06","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%Armenia%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1055712,"Title":"Tag wikis with referral links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url, LENGTH(Posts.Body) FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/___\/[1-9]%' OR LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/____\/[1-9]%' OR LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/_____\/[1-9]%' OR LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/______\/[1-9]%' OR LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/_______\/[1-9]%' OR LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/________\/[1-9]%') ORDER BY Tags.Id","CreationDate":"2019-05-26 09:37:32","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url,\n  len(Posts.Body)\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/___\/[1-9]%'\n  OR\n  LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/____\/[1-9]%'\n  OR\n  LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/_____\/[1-9]%'\n  OR\n  LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/______\/[1-9]%'\n  OR\n  LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/_______\/[1-9]%'\n  OR\n  LOWER(Posts.Body) LIKE '%stackoverflow.com\/[aq]\/________\/[1-9]%'\n  )\nORDER BY Tags.Id"},{"QuerySetId":1055716,"Title":"Tag wikis with .malsup.com links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url, LENGTH(Posts.Body) FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%.malsup.com%') ORDER BY Tags.Id","CreationDate":"2019-05-25 09:00:37","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url,\n  len(Posts.Body)\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%.malsup.com%'\n  )\nORDER BY Tags.Id"},{"QuerySetId":1055786,"Title":"Tag wikis with old external http:\/\/ links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url, LENGTH(Posts.Body) FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%http:\/\/github.%' OR LOWER(Posts.Body) LIKE '%http:\/\/wikipedia.%' OR LOWER(Posts.Body) LIKE '%http:\/\/__.wikipedia.%' \/* en.wikipedia *\/ OR LOWER(Posts.Body) LIKE '%http:\/\/microsoft.%' OR LOWER(Posts.Body) LIKE '%http:\/\/___.microsoft.%' \/* www.microsoft *\/ OR LOWER(Posts.Body) LIKE '%http:\/\/____.microsoft.%' \/* msdn.microsoft *\/ OR LOWER(Posts.Body) LIKE '%http:\/\/____.google.%' \/* code.google *\/ OR LOWER(Posts.Body) LIKE '%http:\/\/web.archive.org%') ORDER BY Tags.Id","CreationDate":"2019-06-18 19:59:32","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url,\n  len(Posts.Body)\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%http:\/\/github.%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/wikipedia.%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/__.wikipedia.%'-- en.wikipedia\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/microsoft.%'\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/___.microsoft.%'-- www.microsoft\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/____.microsoft.%'-- msdn.microsoft\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/____.google.%'-- code.google\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/web.archive.org%'\n  )\nORDER BY Tags.Id"},{"QuerySetId":1055834,"Title":"Amount of users who's last activity was during that month","Description":null,"QueryBody":"SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, activity.Last_activity), 0), 'Lost members' = COUNT(activity.UserId) FROM (SELECT UserId, Last_activity = MAX(Date) FROM Badges INNER JOIN Users ON Badges.UserId = Users.Id GROUP BY UserId) AS activity GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, activity.Last_activity), 0) ORDER BY Month","CreationDate":"2019-05-26 01:28:26","validated":false,"QueryBody_Original":"SELECT  Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, activity.Last_activity), 0),\n       'Lost members' = count(activity.UserId)\nFROM (\n      SELECT UserId, Last_activity = max(Date)\n      FROM Badges\n      INNER JOIN Users\n      ON Badges.UserId = Users.Id\n      GROUP BY UserId\n     ) as activity\nGROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, activity.Last_activity), 0)\nORDER BY Month"},{"QuerySetId":1055874,"Title":"(old, badges) Active users rate","Description":null,"QueryBody":"SELECT new_users.Month, 'Active users rate' = active_users.\"Amount of active users\", SUM(\"Amount of users\") OVER (ORDER BY new_users.Month rows BETWEEN unbounded preceding AND CURRENT ROW) FROM (SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), 'Amount of users' = COUNT(Id) FROM Users GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)) AS new_users, (SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, Date), 0), 'Amount of active users' = COUNT(DISTINCT UserId) FROM Badges INNER JOIN Users ON Badges.UserId = Users.Id GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, Date), 0)) AS active_users ORDER BY new_users.Month","CreationDate":"2019-05-26 13:23:04","validated":false,"QueryBody_Original":"SELECT  new_users.Month,\n       'Active users rate' = active_users.[Amount of active users], \n       sum([Amount of users]) over (order by new_users.Month rows unbounded preceding)\nFROM (\n      SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), 'Amount of users' = count(Id)\n      FROM Users\n      GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n     ) as new_users,\n     (\n      SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, Date), 0), \n             'Amount of active users' = count(distinct UserId)\n      FROM Badges\n      INNER JOIN Users\n      ON Badges.UserId = Users.Id\n      GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, Date), 0)\n     ) as active_users\nORDER BY new_users.Month"},{"QuerySetId":1055950,"Title":"Average amount of revisions per post","Description":null,"QueryBody":"SELECT revisions.Month, revisions.\"Amount of revisions\" \/ CAST(sum_posts.\"Amount of posts\" AS FLOAT) FROM (SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), 'Amount of revisions' = COUNT(id) FROM PostHistory GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)) AS revisions INNER JOIN (SELECT Month, 'Amount of posts' = SUM(posts) OVER (ORDER BY Month rows BETWEEN unbounded preceding AND CURRENT ROW) FROM (SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), Posts = COUNT(id) FROM Posts GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)) AS new_posts_per_month) AS sum_posts ON revisions.Month = sum_posts.Month ORDER BY Month","CreationDate":"2019-05-26 22:56:31","validated":false,"QueryBody_Original":"SELECT  revisions.Month, \n       revisions.[Amount of revisions] \/ \n       CAST(sum_posts.[Amount of posts] AS FLOAT)\nFROM\n   (\n     SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0),\n     'Amount of revisions' = COUNT(id)\n     FROM PostHistory\n     GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n   ) AS revisions\nINNER JOIN\n   (\n     SELECT Month, 'Amount of posts' = sum(posts) over (order by Month rows unbounded preceding)\n     FROM (\n            SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0),\n                   Posts = COUNT(id)\n            FROM Posts\n            GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\n          ) AS new_posts_per_month\n    ) AS sum_posts\nON revisions.Month = sum_posts.Month\nORDER BY Month"},{"QuerySetId":1056234,"Title":"Get python+regex questions with non-regex answers","Description":null,"QueryBody":"\/* TOP 100 *\/ SELECT q.Id AS question_id, a.Id AS answer_id, q.Tags AS question_tags, q.OwnerUserId AS question_user_id, q.OwnerDisplayName AS question_user_name, a.OwnerUserId AS answer_user_id, a.OwnerDisplayName AS answer_user_name, a.Body AS answer_text, a.Score AS answer_score, q.Score AS question_score, q.ViewCount AS question_view_count FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.Tags LIKE ('%python%') AND q.Tags LIKE ('%<regex>%') AND q.PostTypeId = 1","CreationDate":"2019-05-27 13:22:38","validated":false,"QueryBody_Original":"SELECT  --TOP 100\n q.Id as question_id\n ,a.Id as answer_id\n ,q.Tags as question_tags\n ,q.OwnerUserId as question_user_id\n ,q.OwnerDisplayName as question_user_name\n ,a.OwnerUserId as answer_user_id\n ,a.OwnerDisplayName as answer_user_name\n ,a.Body as answer_text\n ,a.Score as answer_score\n ,q.Score as question_score\n ,q.ViewCount as question_view_count\n\nFROM Posts q\n    INNER JOIN Posts a ON a.ParentId = q.Id\nWHERE q.Tags LIKE ('%python%') AND q.Tags LIKE ('%<regex>%')\n AND q.PostTypeId = 1\n\n-- AND a.Body like ('%without regex%')\n--AND AnswerCount > 0\n--AND PostTypeId != 1"},{"QuerySetId":1056255,"Title":"Get python+regex questions, searching for non-regex answers","Description":null,"QueryBody":"\/* TOP 100 *\/ SELECT q.Id AS question_id, q.Title AS question_title, q.CreationDate AS question_date, a.Id AS answer_id, q.Tags AS question_tags, q.OwnerUserId AS question_user_id, q.OwnerDisplayName AS question_user_name, a.OwnerUserId AS answer_user_id, a.OwnerDisplayName AS answer_user_name \/* ,a.Body as answer_text *\/, a.Score AS answer_score, q.Score AS question_score, q.ViewCount AS question_view_count FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.Tags LIKE ('%python%') AND q.Tags LIKE ('%<regex>%') AND q.PostTypeId = 1","CreationDate":"2019-05-27 18:04:30","validated":false,"QueryBody_Original":"SELECT  --TOP 100\n q.Id as question_id\n ,q.Title as question_title\n ,q.CreationDate as question_date\n ,a.Id as answer_id\n ,q.Tags as question_tags\n ,q.OwnerUserId as question_user_id\n ,q.OwnerDisplayName as question_user_name\n ,a.OwnerUserId as answer_user_id\n ,a.OwnerDisplayName as answer_user_name\n --,a.Body as answer_text\n ,a.Score as answer_score\n ,q.Score as question_score\n ,q.ViewCount as question_view_count\n\nFROM Posts q\n    INNER JOIN Posts a ON a.ParentId = q.Id\nWHERE q.Tags LIKE ('%python%') AND q.Tags LIKE ('%<regex>%')\n AND q.PostTypeId = 1\n-- AND a.Body LIKE ('%ithout regex%')\n\n-- AND a.Score is not null\n-- AND q.Score is not null\n-- and a.DeletionDate is not null\n-- and q.ClosedDate is not null\n-- and q.DeletionDate is not null\n\n--AND AnswerCount > 0\n--AND PostTypeId != 1"},{"QuerySetId":1056332,"Title":"Time between question and first answer","Description":null,"QueryBody":"SELECT Hours, COUNT(*) FROM (SELECT DATEDIFF(MIN(a.CreationDate), q.CreationDate) AS Hours FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE q.CreationDate > '2019-01-01' GROUP BY q.Id, q.CreationDate) AS TEMP GROUP BY Hours ORDER BY Hours","CreationDate":"2019-05-27 16:29:35","validated":false,"QueryBody_Original":"SELECT  Hours, COUNT(*) FROM\n(SELECT DATEDIFF(HOUR, q.CreationDate, MIN(a.CreationDate)) AS Hours\n  FROM Posts AS q\n  INNER JOIN Posts AS a ON a.ParentId = q.Id\n  WHERE q.CreationDate > '2019-01-01'\n  GROUP BY q.Id, q.CreationDate) AS TEMP\nGROUP BY Hours\nORDER BY Hours"},{"QuerySetId":1057588,"Title":"Select questions by two Tags","Description":null,"QueryBody":"SELECT P.tags, COUNT(P.tags) AS cnt FROM Posts AS P WHERE P.Tags LIKE 'database%' OR P.Tags LIKE 'db%' GROUP BY P.tags ORDER BY cnt DESC","CreationDate":"2019-05-30 16:33:06","validated":false,"QueryBody_Original":"SELECT   P.tags, count(P.tags) as cnt\nFROM Posts P\nWHERE \nP.Tags LIKE 'database%' or P.Tags LIKE 'db%' \ngroup by P.tags\nORDER BY cnt desc"},{"QuerySetId":1057591,"Title":"Question volume with combination of Firebase and Flutter over time","Description":null,"QueryBody":"SELECT DATEADD(WEEK, DATEDIFF(WEEK, 0, CreationDate), 0) AS \"WEEK\", COUNT(DISTINCT P.Id) AS Count FROM Posts AS P WHERE P.Tags LIKE '%firebase%' AND P.Tags LIKE '%flutter%' GROUP BY DATEADD(WEEK, DATEDIFF(WEEK, 0, CreationDate), 0) ORDER BY \"WEEK\" DESC","CreationDate":"2019-06-26 02:21:57","validated":false,"QueryBody_Original":"SELECT  \n  DATEADD(WEEK, DATEDIFF(WEEK, 0, CreationDate), 0) AS [WEEK]\n  , COUNT(DISTINCT P.Id) AS Count\nFROM Posts P\nWHERE \nP.Tags LIKE '%firebase%' AND P.Tags LIKE '%flutter%' \nGROUP BY DATEADD(WEEK, DATEDIFF(WEEK, 0, CreationDate), 0)\nORDER BY [WEEK] DESC"},{"QuerySetId":1058248,"Title":"Find posts with blacklisted websites","Description":"For example, mysite.com, etc.","QueryBody":"SELECT id AS \"Post Link\", Title FROM Posts WHERE (LOWER(BODY) LIKE '%mysite.com%' OR LOWER(BODY) LIKE '%site.com%') LIMIT 1000","CreationDate":"2019-06-06 15:38:22","validated":false,"QueryBody_Original":"SELECT  TOP 1000 id as [Post Link], Title FROM Posts\nWHERE (\n    lower(BODY) LIKE '%mysite.com%'\n    OR lower(BODY) LIKE '%site.com%'\n)"},{"QuerySetId":1058639,"Title":"votes and edits of gold-vote,gold-edit","Description":null,"QueryBody":"SELECT SUM(UpVotes + DownVotes) FROM Users","CreationDate":"2019-05-30 16:35:51","validated":false,"QueryBody_Original":"SELECT  sum(UpVotes + DownVotes)\nfrom Users"},{"QuerySetId":1058739,"Title":"Potential formatting issues due to MathJax enabling","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE Body LIKE '%$%$%'","CreationDate":"2019-05-30 19:35:29","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Body\n  FROM Posts\n  WHERE Body LIKE '%$%$%'"},{"QuerySetId":1058832,"Title":"search in comments \/ all","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", CreationDate, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%##CommentText##%') ORDER BY CreationDate DESC","CreationDate":"2019-05-30 21:33:11","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], CreationDate, Text\n  FROM Comments\n WHERE UPPER(Text) LIKE UPPER('%##CommentText##%')\n ORDER BY CreationDate DESC"},{"QuerySetId":1059000,"Title":"List recent tag wiki edits","Description":"https:\/\/stackapps.com\/questions\/6483\/list-recent-tag-wiki-edits","QueryBody":"SELECT t.id, t.tagname, CONCAT('site:\/\/tags\/', tagname, '\/info', '|', CASE WHEN w.lasteditdate > e.lasteditdate THEN ' Wiki' WHEN w.lasteditdate = e.lasteditdate THEN ' both' ELSE ' Excerpt' END, CASE WHEN COALESCE(w.lasteditdate, e.lasteditdate) = COALESCE(w.creationdate, e.creationdate) THEN ' (new)' ELSE '' END) AS \"Edited\", w.lasteditdate AS \"Wiki Edit\", e.lasteditdate AS \"Excerpt Edit\" FROM tags AS t LEFT OUTER JOIN posts AS w ON w.id = t.wikipostid LEFT OUTER JOIN posts AS e ON e.id = t.excerptpostid WHERE NOT w.id IS NULL OR NOT e.id IS NULL ORDER BY COALESCE(w.lasteditdate, e.lasteditdate) DESC","CreationDate":"2019-05-31 12:15:50","validated":false,"QueryBody_Original":"SELECT  t.id\n     , t.tagname \n     , concat('site:\/\/tags\/'\n     , tagname\n     , '\/info'\n     , '|'\n     , case \n       when w.lasteditdate > e.lasteditdate \n       then ' Wiki'\n       when w.lasteditdate = e.lasteditdate \n       then ' both'\n       else ' Excerpt'\n       end\n     , case \n       when coalesce(w.lasteditdate,  e.lasteditdate) =\n            coalesce(w.creationdate,  e.creationdate)\n       then ' (new)'\n       else ''\n       end\n     ) [Edited]\n     , w.lasteditdate [Wiki Edit]\n     , e.lasteditdate [Excerpt Edit] \nfrom tags t\nleft outer join posts w on w.id = t.wikipostid\nleft outer join posts e on e.id = t.excerptpostid\nwhere w.id is not null \nor    e.id is not null\norder by coalesce(w.lasteditdate,  e.lasteditdate) desc"},{"QuerySetId":1060881,"Title":"Top 100 Accepted Answers Without Up-Votes","Description":null,"QueryBody":"SELECT question_id = q.Id, question_url = 'https:\/\/stackoverflow.com\/q\/' + CAST(q.id AS TEXT(255)), q.ClosedDate, accepted_answer_id = a.Id, accepted_answer_url = 'https:\/\/stackoverflow.com\/a\/' + CAST(a.id AS TEXT(255)), answer_score = a.Score FROM dbo.Posts AS q INNER JOIN dbo.Posts AS a ON a.Id = q.AcceptedAnswerId WHERE q.PostTypeID = 1 \/* question *\/ AND a.score = 0 \/* no score beyond being accepted *\/ ORDER BY a.ViewCount DESC LIMIT 100","CreationDate":"2019-06-04 21:58:46","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  question_id = q.Id,\n  question_url = 'https:\/\/stackoverflow.com\/q\/' + CAST(q.id AS VARCHAR(255)),\n  q.ClosedDate,\n  accepted_answer_id = a.Id,\n  accepted_answer_url = 'https:\/\/stackoverflow.com\/a\/' + CAST(a.id AS VARCHAR(255)),\n  answer_score = a.Score\nFROM dbo.Posts AS q\n  INNER JOIN dbo.Posts AS a ON\n    a.Id = q.AcceptedAnswerId\nWHERE \n  q.PostTypeID = 1 -- question\n  AND a.score = 0 -- no score beyond being accepted\nORDER BY a.ViewCount DESC"},{"QuerySetId":1061193,"Title":"URLs of Argentinian users ordered by reputation","Description":"This is a query to quickly find resources (blogs, web sites) of people in a certain location (if the user entered it on the site).","QueryBody":"SELECT Id \/* Count(*) AS CommentCount -- *\/, DisplayName, Reputation, Location, CreationDate, LastAccessDate, AboutMe, UpVotes, WebsiteUrl FROM Users WHERE (Location LIKE '%India%' OR Location LIKE '%Mumbai%' OR Location LIKE '%Delhi%' OR Location LIKE '%Bangalore%' OR Location LIKE '%Hyderabad%' OR Location LIKE '%Manila%' OR Location LIKE '%Bangladesh%' OR Location LIKE '%Philippines%' OR Location LIKE '%Pakistan%' OR Location LIKE '%Toronto%' OR Location LIKE '%Kerala%' OR Location LIKE '%Cebu%' OR Location LIKE '%Davao%') AND WebsiteURL <> ' ' ORDER BY Reputation DESC","CreationDate":"2019-06-06 01:49:27","validated":false,"QueryBody_Original":"SELECT  \n    -- Count(*) AS CommentCount --\n    Id,\n    DisplayName,\n    Reputation,\n    Location,\n    CreationDate,\n    LastAccessDate,\n    AboutMe,\n    UpVotes,\n    WebsiteUrl\nFROM \n    Users\nWHERE \n(Location like '%India%' or Location like '%Mumbai%' or Location like '%Delhi%' or Location like '%Bangalore%' or Location like '%Hyderabad%' or Location like '%Manila%' or Location like '%Bangladesh%' or Location like '%Philippines%' or Location like '%Pakistan%' or Location like '%Toronto%' or Location like '%Kerala%' or Location like '%Cebu%' or Location like '%Davao%') and WebsiteURL <> ' '\nORDER BY\n    Reputation DESC\n-- ORDER BY --\n    -- DisplayName DESC --\n-- Enter Query Description"},{"QuerySetId":1061405,"Title":"Best first answers by new users","Description":null,"QueryBody":"SELECT a.CreationDate, a.Score FROM (SELECT pu.OwnerUserId AS UserId, MIN(pu.id) AS FirstAnswerId FROM posts AS pu WHERE pu.posttypeid = 2 GROUP BY pu.owneruserid) AS fq JOIN posts AS a ON fq.FirstAnswerId = a.Id JOIN posts AS q ON a.ParentId = q.Id WHERE a.CreationDate >= CAST('2019-05-01' AS DATETIME) ORDER BY a.Score DESC, a.CreationDate DESC","CreationDate":"2019-10-29 20:43:10","validated":false,"QueryBody_Original":"SELECT \n  a.CreationDate,\n  a.Score\nFROM (SELECT\n  pu.OwnerUserId AS UserId,\n  MIN(pu.id) AS FirstAnswerId\nFROM posts pu\nWHERE pu.posttypeid = 2\nGROUP BY pu.owneruserid) fq\nJOIN posts a\n  ON fq.FirstAnswerId = a.Id\nJOIN posts q\n  on a.ParentId = q.Id\nWHERE a.CreationDate >= CONVERT(datetime, '2019-05-01')\nORDER BY a.Score DESC, a.CreationDate desc"},{"QuerySetId":1061560,"Title":"TecBrat's Postive Score Answers on ELL","Description":null,"QueryBody":"SELECT Id FROM Posts WHERE OwnerUserId = 1811 AND PostTypeId = 2 AND Score > 1","CreationDate":"2019-06-06 22:58:09","validated":false,"QueryBody_Original":"SELECT  Id FROM Posts WHERE OwnerUserId = 1811 AND PostTypeId = 2 AND Score > 1"},{"QuerySetId":1061792,"Title":"Quantity of content: Amount of posts","Description":null,"QueryBody":"SELECT Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), 'Quantity of content' = COUNT(*) FROM Posts GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0) ORDER BY Month","CreationDate":"2019-06-11 23:44:14","validated":false,"QueryBody_Original":"SELECT  Month = DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0), \n       'Quantity of content' = COUNT(*)\nFROM Posts\nGROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, CreationDate), 0)\nORDER BY Month"},{"QuerySetId":1062125,"Title":"Who won a Game of Bar Dice?","Description":null,"QueryBody":"SELECT s, SIGN(s), -~s, 1 | s FROM (VALUES (1), (2), (3), (4), (5)) AS x(s)","CreationDate":"2019-06-09 12:09:53","validated":false,"QueryBody_Original":"SELECT  s,\nsign(s),\n-~s,\n1|s\nFROM (values(1),(2),(3),(4),(5))x(s)"},{"QuerySetId":1062554,"Title":"Find number of answers per month since 2012 for Trusted Users","Description":null,"QueryBody":"SELECT u.Id, u.Reputation, u.DisplayName, TIME_TO_STR(p.CreationDate, '%YEAR') AS Year, TIME_TO_STR(p.CreationDate, '%-mONT%-H') AS Month, COUNT(*) AS Count FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE TIME_TO_STR(p.CreationDate, '%Year') >= 2012 AND TIME_TO_STR(p.CreationDate, '%Year') < 2013 AND p.PostTypeId = 2 AND u.Reputation >= 20000 GROUP BY u.Id, u.Reputation, u.DisplayName, TIME_TO_STR(p.CreationDate, '%YEAR'), TIME_TO_STR(p.CreationDate, '%-mONT%-H') ORDER BY -Reputation, u.Id, Year, Month","CreationDate":"2019-06-10 13:15:15","validated":false,"QueryBody_Original":"SELECT  \nu.Id,\nu.Reputation,\nu.DisplayName, DATEPART(YEAR, p.CreationDate) as Year,\nDATEPART(MONTH, p.CreationDate) as Month,\nCount(*) as Count \nFROM Users u\ninner join Posts p on u.Id = p.OwnerUserId\nwhere DATEPART(Year, p.CreationDate) >=  2012 \nand DATEPART(Year, p.CreationDate) < 2013 \nand p.PostTypeId = 2\nand u.Reputation >= 20000\nGROUP BY u.Id, u.Reputation, u.DisplayName, DATEPART(YEAR, p.CreationDate), DATEPART(MONTH, p.CreationDate)\nORDER BY -Reputation, u.Id, Year, Month ASC"},{"QuerySetId":1063255,"Title":"Common typos in tag wiki","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url, LENGTH(Posts.Body) FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%offical%' OR LOWER(Posts.Body) LIKE '%program[ae][^cpxr]%' OR LOWER(Posts.Body) LIKE '%seperat%' OR LOWER(Posts.Body) LIKE '%mutipl%' OR LOWER(Posts.Body) LIKE '%statment%' OR LOWER(Posts.Body) LIKE '%calender%' OR LOWER(Posts.Body) LIKE '%boostrap%' OR LOWER(Posts.Body) LIKE '%diffrent%' OR LOWER(Posts.Body) LIKE '%formating%' OR LOWER(Posts.Body) LIKE '%colums%' OR LOWER(Posts.Body) LIKE '%databse%' OR LOWER(Posts.Body) LIKE '%adress%' OR LOWER(Posts.Body) LIKE '%extention%') ORDER BY Tags.Id","CreationDate":"2019-06-11 11:20:50","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url,\n  len(Posts.Body)\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%offical%'\n  OR\n  LOWER(Posts.Body) LIKE '%program[ae][^cpxr]%'\n  OR\n  LOWER(Posts.Body) LIKE '%seperat%'\n  OR\n  LOWER(Posts.Body) LIKE '%mutipl%'\n  OR\n  LOWER(Posts.Body) LIKE '%statment%'\n  OR\n  LOWER(Posts.Body) LIKE '%calender%'\n  OR\n  LOWER(Posts.Body) LIKE '%boostrap%'\n  OR\n  LOWER(Posts.Body) LIKE '%diffrent%'\n  OR\n  LOWER(Posts.Body) LIKE '%formating%'\n  OR\n  LOWER(Posts.Body) LIKE '%colums%'\n  OR\n  LOWER(Posts.Body) LIKE '%databse%'\n  OR\n  LOWER(Posts.Body) LIKE '%adress%'\n  OR\n  LOWER(Posts.Body) LIKE '%extention%'\n  )\nORDER BY Tags.Id"},{"QuerySetId":1063404,"Title":"Top 100 users list in UAE","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pakistan%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-06-11 12:39:54","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pakistan%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1063447,"Title":"Top users in New Zealand","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%new zealand%' OR UPPER(Location) LIKE '%NZ' ORDER BY Reputation DESC","CreationDate":"2019-06-11 14:18:10","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%new zealand%'\n    OR UPPER(Location) LIKE '%NZ'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1063932,"Title":"Find Stack Overflow Users by Location(s) Near Frankfurt and Skills","Description":null,"QueryBody":"SELECT DISTINCT u.Id, u.Reputation, u.DisplayName, u.Location, p.Tags, u.AboutMe FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE (LOWER(u.Location) LIKE LOWER('%paris%')) \/* Finds users in the nearby cities of paris. *\/ AND (p.Tags LIKE '%laravel%' AND p.Tags LIKE '%php%') \/* SELECT the tags\/skills of interest *\/ AND u.Reputation > 500 ORDER BY u.Reputation DESC","CreationDate":"2019-06-13 13:37:16","validated":false,"QueryBody_Original":"SELECT  distinct u.Id, u.Reputation, u.DisplayName, u.Location, p.Tags, u.AboutMe\nfrom Users u \nINNER JOIN\nPosts p on p.OwnerUserId = u.Id\nwhere ( -- Finds users in the nearby cities of paris. \n    LOWER(u.Location) LIKE LOWER('%paris%')\n        )\nand  ( -- SELECT the tags\/skills of interest\n  p.Tags LIKE '%laravel%'\n and p.Tags LIKE '%php%'\n \n        )      \nand u.Reputation > 500\n\norder by u.Reputation DESC"},{"QuerySetId":1063985,"Title":"Bounties by users who are now deleted","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", CONCAT('site:\/\/posts\/', p.Id, '\/revisions') AS \"Revisions Link\", v.BountyAmount, p.CreationDate, p.Score, p.OwnerUserId AS \"User Link\", p.OwnerDisplayName FROM Posts AS p INNER JOIN Votes AS v ON v.PostId = p.Id WHERE v.VoteTypeId = 8 AND v.UserId = -1 ORDER BY p.Id DESC","CreationDate":"2019-06-12 17:43:30","validated":false,"QueryBody_Original":"SELECT \n  p.Id AS [Post Link],\n  concat('site:\/\/posts\/',\n          p.Id,\n          '\/revisions'\n          ) [Revisions Link],\n  v.BountyAmount, p.CreationDate, p.Score, p.OwnerUserId AS [User Link], p.OwnerDisplayName\nFROM Posts p INNER JOIN Votes v ON v.PostId=p.Id\nWHERE v.VoteTypeId=8 AND v.UserId=-1\nORDER by p.Id DESC"},{"QuerySetId":1064087,"Title":"JS users in Brussels or around","Description":null,"QueryBody":"SELECT * FROM Users WHERE UPPER(Location) = UPPER('##location##') AND Reputation > 100","CreationDate":"2019-06-12 20:57:21","validated":false,"QueryBody_Original":"SELECT  * From Users\nWhere Upper(Location)=Upper('##location##')\nAnd Reputation > 100"},{"QuerySetId":1064933,"Title":"Tag wikis with old PHP links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url, LENGTH(Posts.Body) FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%http:\/\/php.net%' \/* TODO: https *\/ OR LOWER(Posts.Body) LIKE '%http:\/\/__.php.net%' \/* TODO: https *\/ OR LOWER(Posts.Body) LIKE '%http:\/\/___.php.net%' \/* TODO: https *\/ OR LOWER(Posts.Body) LIKE '%https:\/\/secure.php.net%' \/* TODO: remove deprecated 'secure' *\/) ORDER BY Tags.Id","CreationDate":"2019-06-14 16:22:19","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url,\n  len(Posts.Body)\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%http:\/\/php.net%'-- TODO: https\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/__.php.net%'-- TODO: https\n  OR\n  LOWER(Posts.Body) LIKE '%http:\/\/___.php.net%'-- TODO: https\n  OR\n  LOWER(Posts.Body) LIKE '%https:\/\/secure.php.net%'-- TODO: remove deprecated 'secure'\n  )\nORDER BY Tags.Id"},{"QuerySetId":1065013,"Title":"Negatively scored answers with delete votes on them","Description":null,"QueryBody":"SELECT v.PostId AS \"Post Link\", COUNT(v.PostId) FROM Votes AS v INNER JOIN Posts AS p ON p.Id = v.PostId WHERE v.VoteTypeId = 10 AND p.PostTypeId = 2 AND p.Score < 0 AND p.DeletionDate IS NULL GROUP BY v.PostId ORDER BY COUNT(v.PostId) DESC","CreationDate":"2020-10-12 21:46:45","validated":false,"QueryBody_Original":"SELECT  v.PostId AS [Post Link], COUNT(v.PostId)\nFROM Votes v\nINNER JOIN Posts p ON p.Id = v.PostId\nWHERE v.VoteTypeId = 10\nAND p.PostTypeId = 2\nAND p.Score < 0\nAND p.DeletionDate IS NULL\nGROUP BY v.PostId\nORDER BY COUNT(v.PostId) DESC"},{"QuerySetId":1065014,"Title":"SELECT * FROM posts WHERE Tags IS NOT NULL","Description":null,"QueryBody":"SELECT TagName, Count FROM Tags ORDER BY Count DESC","CreationDate":"2019-06-14 16:29:18","validated":false,"QueryBody_Original":"SELECT  TagName, Count FROM Tags ORDER BY Count DESC"},{"QuerySetId":1065044,"Title":"select top 2000 with accepted answer body","Description":null,"QueryBody":"SELECT Id, AcceptedAnswerId, 'https:\/\/stackoverflow.com\/questions\/' + CAST(Id AS TEXT) AS q_link, 'https:\/\/stackoverflow.com\/q\/' + CAST(AcceptedAnswerId AS TEXT) AS a_link, (SELECT Body FROM Posts WHERE Id = p.AcceptedAnswerId) AS a_body, DeletionDate, Score, ViewCount, Body, OwnerUserId, LastEditorUserId, LastEditDate, LastActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, ClosedDate, CommunityOwnedDate FROM Posts AS p WHERE Tags LIKE '%<npm%' ORDER BY ViewCount DESC LIMIT 2000","CreationDate":"2019-06-14 14:45:43","validated":false,"QueryBody_Original":"SELECT  TOP 2000\nId, \nAcceptedAnswerId,\n'https:\/\/stackoverflow.com\/questions\/'+CAST(Id AS nvarchar) as q_link, \n'https:\/\/stackoverflow.com\/q\/'+CAST(AcceptedAnswerId AS nvarchar) as a_link, \n(SELECT Body from Posts WHERE Id = p.AcceptedAnswerId) as a_body,\nDeletionDate,\nScore,\nViewCount,\nBody,\nOwnerUserId,\nLastEditorUserId,\nLastEditDate,\nLastActivityDate,\nTitle,\nTags,\nAnswerCount,\nCommentCount,\nFavoriteCount,\nClosedDate,\nCommunityOwnedDate\n\nfrom Posts p\nWHERE\n\nTags like '%<npm%' \n\n\n\nORDER BY ViewCount DESC"},{"QuerySetId":1065063,"Title":"Tag wikis with old wikimedia links","Description":null,"QueryBody":"SELECT DISTINCT Tags.Id, Tags.TagName, 'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url, LENGTH(Posts.Body) FROM Tags LEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId WHERE (LOWER(Posts.Body) LIKE '%secure.wikimedia.org%' \/* TODO: remove deprecated 'secure' *\/) ORDER BY Tags.Id","CreationDate":"2019-06-14 14:56:39","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  Tags.Id,\n  Tags.TagName,\n  'site:\/\/tags\/' + Tags.Tagname + '\/info|Url' AS Url,\n  len(Posts.Body)\nFROM Tags\nLEFT JOIN Posts ON Posts.Id = Tags.WikiPostId OR Posts.Id = Tags.ExcerptPostId\nWHERE\n  (\n  LOWER(Posts.Body) LIKE '%secure.wikimedia.org%'-- TODO: remove deprecated 'secure'\n  )\nORDER BY Tags.Id"},{"QuerySetId":1065118,"Title":"sql php injection query (phpsqlquery1)","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE Posts.Body LIKE '%sql%' AND Posts.Body LIKE '%php%' AND Posts.Body LIKE '%<code>%' AND (Posts.Body LIKE '%sql injectable%' OR Posts.Body LIKE '%inject%' OR Posts.Body LIKE '%injectable%') LIMIT 100","CreationDate":"2019-06-14 17:56:50","validated":false,"QueryBody_Original":"SELECT  TOP 100 Body FROM \n  Posts\n  where    \n  Posts.Body LIKE '%sql%' AND \n  Posts.Body LIKE '%php%' AND \n  Posts.Body LIKE '%<code>%' AND \n  (Posts.Body LIKE '%sql injectable%' OR \n  Posts.Body LIKE '%inject%' OR \n  Posts.Body LIKE '%injectable%');"},{"QuerySetId":1065402,"Title":"Example simple question and answer query","Description":null,"QueryBody":"SELECT q.Title, a.Body FROM Posts AS a INNER JOIN Posts AS q ON a.Id = q.acceptedAnswerId WHERE q.Id = 6277606","CreationDate":"2019-06-15 01:13:53","validated":false,"QueryBody_Original":"SELECT \n  q.Title,\n  a.Body\nfrom\n  Posts a inner join Posts q\n  on a.Id = q.acceptedAnswerId\nwhere\n  q.Id=6277606"},{"QuerySetId":1065952,"Title":"See all posts from someone","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerDisplayName FROM Posts WHERE OwnerDisplayName = '##UserDisplayname##'","CreationDate":"2019-06-25 22:22:44","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], OwnerDisplayName\nFROM Posts\nWHERE OwnerDisplayName = '##UserDisplayname##';\n-- UserDisplayname: Displayname of the user"},{"QuerySetId":1066662,"Title":"Find posts with too many \"Thank you!\" comments","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\", COUNT(comments.id) AS comment_count FROM comments INNER JOIN posts ON comments.PostId = posts.id WHERE LENGTH(Text) <= 50 AND (Text LIKE '%hank%') GROUP BY Posts.Id HAVING COUNT(comments.id) > 1 ORDER BY COUNT(comments.id) DESC","CreationDate":"2020-05-21 13:44:47","validated":false,"QueryBody_Original":"SELECT \n   Posts.Id as [Post Link],\n   count(comments.id) AS comment_count\nfrom comments\ninner join posts on comments.PostId = posts.id\nwhere len(Text) <= 50 and (Text like '%hank%')\ngroup by Posts.Id having count(comments.id) > 1\norder by count(comments.id) desc;"},{"QuerySetId":1066724,"Title":"Questions which were in HNQ and were closed at some point","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", CONCAT('site:\/\/posts\/', p.Id, '\/revisions') AS \"Revisions Link\", p.OwnerUserId AS \"User Link\", p.Score, p.Tags FROM Posts AS p INNER JOIN PostHistory AS ph1 ON (p.Id = ph1.PostId AND ph1.PostHistoryTypeId = 52) INNER JOIN PostHistory AS ph2 ON (p.Id = ph2.PostId AND ph2.PostHistoryTypeId = 10) ORDER BY p.ID DESC","CreationDate":"2020-04-16 23:26:27","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link],\n    concat('site:\/\/posts\/',\n          p.Id,\n          '\/revisions'\n          ) [Revisions Link],\n  p.OwnerUserId AS [User Link],\n  p. Score, p.Tags\nFROM Posts p INNER JOIN PostHistory ph1 ON (p.Id=ph1.PostId and ph1.PostHistoryTypeId=52)\n  INNER JOIN PostHistory ph2 ON (p.Id=ph2.PostId and ph2.PostHistoryTypeId=10)\nORDER BY p.ID DESC\n---52 = Question became hot network question\n---10 = Post Closed - post voted to be closed"},{"QuerySetId":1066795,"Title":"Questions where the given word was removed from the title","Description":null,"QueryBody":"SELECT DISTINCT p.Id AS \"Post Link\", CONCAT('site:\/\/posts\/', p.Id, '\/revisions') AS \"Revisions Link\" FROM PostHistory AS ph1 INNER JOIN Posts AS p ON ph1.PostId = p.Id WHERE ph1.PostHistoryTypeId IN (1, 4, 7) AND ph1.Text LIKE '%##word##%' AND NOT (p.Title LIKE '%##word##%')","CreationDate":"2019-06-17 18:50:13","validated":false,"QueryBody_Original":"SELECT \nDISTINCT p.Id AS [Post Link],\n  concat('site:\/\/posts\/',\n          p.Id,\n          '\/revisions'\n          ) [Revisions Link]\nFROM PostHistory ph1 INNER JOIN Posts p ON ph1.PostId=p.Id\nWHERE ph1.PostHistoryTypeId in (1,4,7)\n  and ph1.Text Like '%##word##%'\n  and NOT(p.Title Like '%##word##%')"},{"QuerySetId":1067159,"Title":"List of all edits where edit summary contains given keyword","Description":null,"QueryBody":"SELECT DISTINCT PostId AS \"Post Link\", Comment, UserId AS \"User Link\", CreationDate, url = 'site:\/\/posts\/' + CAST(PostId AS TEXT) + '\/revisions' FROM PostHistory WHERE Comment LIKE '%##keyword##%' ORDER BY CreationDate","CreationDate":"2019-06-18 13:25:11","validated":false,"QueryBody_Original":"SELECT  DISTINCT PostId as [Post Link], Comment, UserId as [User Link], CreationDate,\n  url = 'site:\/\/posts\/' + CAST(PostId AS varchar)+'\/revisions'\nFrom PostHistory\nWhere Comment Like '%##keyword##%'\nOrder By CreationDate"},{"QuerySetId":1067423,"Title":"What comments are available in this Tag?","Description":null,"QueryBody":"SELECT posts.body, posts.tags, posts.creationdate, posts.score, posts.viewcount, posts.creationdate, posts.commentcount, users.reputation FROM posts JOIN users ON posts.OwnerUserId = users.id WHERE posts.tags LIKE '%aws-lambda%'","CreationDate":"2019-06-19 01:11:49","validated":false,"QueryBody_Original":"SELECT \n\nposts.body,\nposts.tags,\nposts.creationdate,\nposts.score,\nposts.viewcount,\nposts.creationdate,\nposts.commentcount,\nusers.reputation\n\nfrom posts\n  JOIN users ON posts.OwnerUserId = users.id\n  \nwhere posts.tags LIKE '%aws-lambda%'"},{"QuerySetId":1067955,"Title":"Top 100 users from Rajkot","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Chennai%' OR UPPER(Location) LIKE '%CHENNAI' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-08-29 17:19:19","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Chennai%'\n    OR UPPER(Location) LIKE '%CHENNAI'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1068746,"Title":"R Gold, Silver, Bronze Badgeholders","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, u.Reputation, CONCAT('https:\/\/stackoverflow.com\/users\/', CAST(u.Id AS TEXT(30))) AS Url, u.CreationDate, u.Location, u.Views, u.UpVotes, u.Downvotes, b.Name AS BadgeName, b.Date AS BadgeDate, CASE WHEN b.Class = 1 THEN 'gold' WHEN b.Class = 2 THEN 'silver' WHEN b.Class = 3 THEN 'bronze' END FROM users AS u JOIN badges AS b ON u.Id = b.UserId AND TagBased = 1 JOIN tags AS t ON t.TagName = b.Name AND t.TagName = 'r' ORDER BY u.Reputation DESC, b.Class","CreationDate":"2020-03-15 06:04:59","validated":false,"QueryBody_Original":"SELECT  u.Id, u.DisplayName, u.Reputation, \n       CONCAT('https:\/\/stackoverflow.com\/users\/', \n              CONVERT(VARCHAR, u.Id)) As Url,\n       u.CreationDate, u.Location, \n       u.Views, u.UpVotes, u.Downvotes,             \n       b.Name As BadgeName, b.Date AS BadgeDate,\n       CASE \n           WHEN b.Class = 1 then 'gold'\n           WHEN b.Class = 2 then 'silver'\n           WHEN b.Class = 3 then 'bronze'\n       END\n       \nFROM users u\nJOIN badges b ON u.Id = b.UserId AND TagBased = 1\nJOIN tags t ON t.TagName = b.Name AND t.TagName = 'r'\n\nORDER BY u.Reputation DESC, b.Class"},{"QuerySetId":1068829,"Title":"npm  new questions with accepted answers by year","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(CreationDate, '%Y\/%m\/%d') AS TEXT(10)) AS datepart, COUNT(*) AS \"new_stackoverflow_q_today\" FROM posts GROUP BY CAST(TIME_TO_STR(CreationDate, '%Y\/%m\/%d') AS TEXT(10)) ORDER BY datepart DESC","CreationDate":"2019-06-23 16:15:57","validated":false,"QueryBody_Original":"SELECT  \n\nCONVERT(VARCHAR(10), CreationDate, 111) as datepart,\ncount(*) as 'new_stackoverflow_q_today'\n\nfrom posts \n\nGROUP BY CONVERT(VARCHAR(10), CreationDate, 111)\n\norder by datepart desc"},{"QuerySetId":1069116,"Title":"Questions which are closed and were in the HNQ","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", CONCAT('site:\/\/posts\/', p.Id, '\/revisions') AS \"Revisions Link\", p.OwnerUserId AS \"User Link\", p.Score, p.ViewCount, p.Tags FROM PostHistory AS ph INNER JOIN Posts AS p ON ph.PostId = p.Id WHERE ph.PostHistoryTypeId = 52 AND NOT p.ClosedDate IS NULL ORDER BY p.Id DESC","CreationDate":"2019-06-24 15:36:37","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link],\n  concat('site:\/\/posts\/',\n          p.Id,\n          '\/revisions'\n          ) [Revisions Link],\n  p.OwnerUserId AS [User Link], p.Score, p. ViewCount, p.Tags\nFROM PostHistory ph INNER JOIN Posts p ON ph.PostId=p.Id  \nWHERE ph.PostHistoryTypeId=52 AND p.ClosedDate IS NOT NULL\nORDER BY p.Id DESC\n---52 = Question became hot network question"},{"QuerySetId":1069273,"Title":"Unanswered with Comments & Tag Includes \"mapbox\" since 01\/01\/2019","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Score, ViewCount, AnswerCount, CommentCount FROM Posts WHERE Tags LIKE '%mapbox%' AND ParentId IS NULL AND AnswerCount = 0 AND CommentCount > 0 AND CreationDate > CAST('2019-01-01' AS DATETIME) ORDER BY ViewCount DESC","CreationDate":"2019-06-24 19:50:40","validated":false,"QueryBody_Original":"SELECT  \n  Id as [Post Link],\n  CreationDate,\n  Score, \n  ViewCount, \n  AnswerCount, \n  CommentCount \nfrom \n  Posts \nwhere \n  Tags like '%mapbox%' \n  and ParentId is null \n  and AnswerCount = 0\n  and CommentCount > 0\n  and CreationDate > Cast('2019-01-01' AS datetime)\norder by ViewCount desc"},{"QuerySetId":1069275,"Title":"Zero Engagment Questions with \"mapbox\" tag 01\/01\/2019","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Score, ViewCount, AnswerCount, CommentCount FROM Posts WHERE CreationDate > CAST('2019-01-01' AS DATETIME) AND Tags LIKE '%mapbox%' AND ParentId IS NULL AND CommentCount = 0 AND AnswerCount = 0 ORDER BY ViewCount DESC","CreationDate":"2019-06-24 20:32:12","validated":false,"QueryBody_Original":"SELECT  \n  Id as [Post Link],\n  CreationDate,\n  Score, \n  ViewCount, \n  AnswerCount, \n  CommentCount \nfrom \n  Posts \nwhere \n  CreationDate > Cast('2019-01-01' AS datetime)\n  and Tags like '%mapbox%' \n  and ParentId is null \n  and CommentCount = 0\n  and AnswerCount = 0\norder by ViewCount desc"},{"QuerySetId":1069278,"Title":"Total Questions w\/ \"Mapbox\" Tag","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE CreationDate > CAST('2019-01-01' AS DATETIME) AND Tags LIKE '%mapbox%' AND ParentId IS NULL","CreationDate":"2019-06-24 20:34:45","validated":false,"QueryBody_Original":"SELECT  \n  COUNT(Id)\nfrom \n  Posts \nwhere \n  CreationDate > Cast('2019-01-01' AS datetime)\n  and Tags like '%mapbox%' \n  and ParentId is null"},{"QuerySetId":1069279,"Title":"Total Unanswered Questions w\/ \"mapbox\" tag","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE CreationDate > CAST('2019-01-01' AS DATETIME) AND AnswerCount = 0 AND Tags LIKE '%mapbox%' AND ParentId IS NULL","CreationDate":"2019-06-24 20:36:57","validated":false,"QueryBody_Original":"SELECT  \n  COUNT(Id)\nfrom \n  Posts \nwhere \n  CreationDate > Cast('2019-01-01' AS datetime)\n  and AnswerCount = 0\n  and Tags like '%mapbox%' \n  and ParentId is null"},{"QuerySetId":1069327,"Title":"High-Scoring Questions with Accepted Answers (Tutorial)","Description":null,"QueryBody":"SELECT p.Title, p.Id AS \"Post Link\", p.Score, a.Score AS \"Accepted Score\", u.DisplayName AS \"Asker\", au.Id AS \"User Link\" FROM Posts AS p JOIN Posts AS a ON p.AcceptedAnswerId = a.Id JOIN Users AS u ON p.OwnerUserId = u.Id JOIN Users AS au ON a.OwnerUserId = au.Id WHERE p.PostTypeId = 1 AND p.Tags LIKE ('%java%') AND au.location LIKE ('%San Francisco%') ORDER BY p.Score DESC","CreationDate":"2019-06-24 22:54:01","validated":false,"QueryBody_Original":"SELECT  p.Title, p.Id AS [Post Link], p.Score, a.Score AS \"Accepted Score\", \nu.DisplayName AS \"Asker\", au.Id AS [User Link]\n  \nFROM Posts p\nJOIN Posts a ON p.AcceptedAnswerId = a.Id\nJOIN Users u ON p.OwnerUserId = u.Id\nJOIN Users au ON a.OwnerUserId = au.Id\n\nWHERE p.PostTypeId = 1\nAND p.Tags like ('%java%')\nand au.location like ('%San Francisco%')\n\nORDER BY p.Score DESC"},{"QuerySetId":1069894,"Title":"Top 200 users from Sri Lanka","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%lanka%' OR UPPER(Location) LIKE '%SL' ORDER BY Reputation DESC LIMIT 200","CreationDate":"2020-12-08 09:20:45","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%lanka%'\n    OR UPPER(Location) LIKE '%SL'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1070083,"Title":"apex engineers that answered questions","Description":null,"QueryBody":"SELECT DISTINCT u.DisplayName, CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.Location, u.AboutMe, u.Reputation FROM users AS u, posts AS q, posts AS a WHERE u.id = a.OwnerUserId AND a.ParentId = q.id AND a.PostTypeId = 2 AND u.AboutMe LIKE '%Oracle%apex%' AND q.PostTypeId = 1 AND (LOWER(u.Location) LIKE '%usa%' OR LOWER(u.Location) LIKE '%united states%' OR LOWER(u.Location) LIKE '%ca%' OR LOWER(u.Location) LIKE '%india%') ORDER BY u.Reputation DESC","CreationDate":"2019-06-26 03:03:43","validated":false,"QueryBody_Original":"SELECT  distinct u.DisplayName,\nCONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link], u.Location, u.AboutMe, u.Reputation\nfrom users u, posts q, posts a\nwhere u.id=a.OwnerUserId\nand a.ParentId=q.id\nand a.PostTypeId=2\nand u.AboutMe like '%Oracle%apex%'\nand q.PostTypeId=1\nand (\nlower(u.Location) like '%usa%' or\nlower(u.Location) like '%united states%' or\nlower(u.Location) like'%ca%' or\nlower(u.Location) like '%india%'\n)\norder by u.Reputation desc;"},{"QuerySetId":1070587,"Title":"Questions closed as should I","Description":null,"QueryBody":"SELECT P.Id, P.Body, H.Text FROM Posts AS P INNER JOIN PostHistory AS H ON H.PostId = P.Id AND H.PostHistoryTypeId = 10 AND H.Comment = 102","CreationDate":"2019-06-27 01:36:41","validated":false,"QueryBody_Original":"SELECT  P.Id, P.Body, H.Text FROM Posts P\nINNER JOIN PostHistory H\nON H.PostId = P.Id\nAND H.PostHistoryTypeId = 10\nAND H.Comment = 102"},{"QuerySetId":1070963,"Title":"All with accpeted answer in english","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE NOT AcceptedAnswerId IS NULL","CreationDate":"2019-06-27 22:57:40","validated":false,"QueryBody_Original":"SELECT  COUNT(*) FROM Posts where AcceptedAnswerId IS NOT NULL"},{"QuerySetId":1071007,"Title":"Most-viewed questions that I have answered","Description":null,"QueryBody":"SELECT QuestionPosts.Id AS \"Post Link\", QuestionPosts.ViewCount FROM Posts AS AnswerPosts JOIN Posts AS QuestionPosts ON AnswerPosts.ParentId = QuestionPosts.Id WHERE AnswerPosts.PostTypeId = 2 AND AnswerPosts.OwnerUserId = 9662601 ORDER BY QuestionPosts.ViewCount DESC","CreationDate":"2019-11-05 13:48:49","validated":false,"QueryBody_Original":"SELECT  QuestionPosts.Id as [Post Link],  QuestionPosts.ViewCount\nFROM Posts AnswerPosts\nJOIN Posts QuestionPosts\nON AnswerPosts.ParentId = QuestionPosts.Id\nWHERE AnswerPosts.PostTypeId = 2\n  AND AnswerPosts.OwnerUserId = 9662601\nORDER BY QuestionPosts.ViewCount DESC"},{"QuerySetId":1071658,"Title":"Answers with no links or blockquotes","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", CreationDate AS \"Date Posted\", Score, Body FROM Posts WHERE PostTypeId = 2 AND NOT Body LIKE '%http%' AND NOT Body LIKE '%blockquote%' ORDER BY CreationDate DESC","CreationDate":"2019-06-29 13:18:41","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], OwnerUserId as [User Link], CreationDate AS \"Date Posted\", Score, Body\n\nFROM Posts\n\nWHERE PostTypeId = 2 and Body not like '%http%' and Body not like '%blockquote%'\n\nORDER BY CreationDate DESC"},{"QuerySetId":1071687,"Title":"Questions recently closed because being primarily opinion-based","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE PostHistoryTypeId = 10 AND Comment = 103 ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2019-10-04 21:14:42","validated":false,"QueryBody_Original":"SELECT  TOP 100 PostId AS [Post Link]\n  FROM PostHistory\n  WHERE PostHistoryTypeId = 10 AND Comment = 103\n  ORDER BY CreationDate DESC"},{"QuerySetId":1071736,"Title":"Answers with \"source\" or \"reference\" but no links or blockquotes","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", Score, CreationDate AS \"Date Posted\", Body FROM Posts WHERE PostTypeId = 2 AND NOT Body LIKE '%http%' AND NOT Body LIKE '%blockquote%' AND LOWER(Body) LIKE '%reference:%' ORDER BY CreationDate DESC","CreationDate":"2019-06-29 13:26:21","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], OwnerUserId as [User Link], Score, CreationDate AS \"Date Posted\", Body\n\nFROM Posts\n\nWHERE PostTypeId = 2 AND \n      Body not like '%http%' AND \n      Body not like '%blockquote%' AND\n      lower(Body) like '%reference:%'\n\nORDER BY CreationDate DESC"},{"QuerySetId":1071740,"Title":"comments begging for accepts under question","Description":null,"QueryBody":"SELECT c.Id FROM Comments AS c INNER JOIN Posts AS q ON q.Id = c.PostId AND q.PostTypeid = 1 AND LENGTH(c.Text) <= 75 AND (LOWER(c.Text) LIKE '%forget%accept%' OR LOWER(c.Text) LIKE '%please%accept%answer%') ORDER BY c.CreationDate DESC","CreationDate":"2020-06-07 22:32:56","validated":false,"QueryBody_Original":"SELECT  c.Id from Comments c\ninner join Posts q on \nq.Id = c.PostId \nand q.PostTypeid = 1\nand len(c.Text) <= 75 \nand (lower(c.Text) like '%forget%accept%'\nor lower(c.Text) like '%please%accept%answer%')\n\norder by c.CreationDate desc"},{"QuerySetId":1071855,"Title":"List of all Post ID where each tag appears","Description":null,"QueryBody":"SELECT Id, Body, Title, Tags FROM Posts WHERE (NOT Tags IS NULL AND NOT Body IS NULL AND CreationDate LIKE '%2017%')","CreationDate":"2019-07-01 06:03:50","validated":false,"QueryBody_Original":"SELECT  Id, Body, Title, Tags\nfrom Posts\nwhere \n\n\t(\n\t\tTags IS NOT NULL\n\tAND\n\t\tBody IS NOT NULL\n    AND\n      CreationDate like '%2017%'\n\t);"},{"QuerySetId":1072395,"Title":"Query Code Search on SO [from Deep Code Search]","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id IN (309424, 157944, 1066589, 363681, 5585779, 1005073, 1128723, 604424, 886955, 1200621, 41107, 409784, 109383, 295579, 80476, 326390, 1149703, 513832, 3481828, 2885173, 507602, 223918, 415953, 1069066, 2784514, 153724, 473282, 529085, 4716503, 1104975, 3076078, 4105331, 8172420, 1816673, 4216745, 1264709, 1102891, 869033, 180158, 5868369, 858572, 1625234, 2201925, 122105, 5455794, 225337, 52353, 160970, 207947, 1026723)","CreationDate":"2019-07-02 00:36:56","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id in (309424, 157944, 1066589, 363681, 5585779, 1005073, 1128723, 604424, 886955, 1200621, 41107, 409784, 109383, 295579, 80476, 326390, 1149703, 513832, 3481828, 2885173, 507602, 223918, 415953, 1069066, 2784514, 153724, 473282, 529085, 4716503, 1104975, 3076078, 4105331, 8172420, 1816673, 4216745, 1264709, 1102891, 869033, 180158, 5868369, 858572, 1625234, 2201925, 122105, 5455794, 225337, 52353, 160970, 207947, 1026723)"},{"QuerySetId":1072396,"Title":"Potential necromancer answers for a given user: answers with questions 60 days older or more","Description":null,"QueryBody":"SELECT Answers.Id AS \"Post Link\", Answers.CreationDate AS \"Answered Date\", Questions.CreationDate AS \"Asked Date\", DATEDIFF(Answers.CreationDate, Questions.CreationDate) AS \"Date Delta Days\", Answers.Score FROM Posts AS Answers INNER JOIN Posts AS Questions ON Answers.PostTypeId = 2 AND Answers.OwnerUserId = '##UserId?895245##' AND Answers.CreationDate < '##Date?9999-01-01##' AND Questions.Id = Answers.ParentId AND DATEDIFF(Answers.CreationDate, Questions.CreationDate) > 60 ORDER BY Answers.Score","CreationDate":"2019-07-02 01:08:37","validated":false,"QueryBody_Original":"SELECT \n  Answers.Id AS [Post Link],\n  Answers.CreationDate AS \"Answered Date\",\n  Questions.CreationDate AS \"Asked Date\",\n  DATEDIFF(day, Questions.CreationDate, Answers.CreationDate) AS \"Date Delta Days\",\n  Answers.Score\nFROM\n  Posts AS Answers\nINNER JOIN\n  Posts AS Questions\nON\n  Answers.PostTypeId = 2 AND\n  Answers.OwnerUserId = '##UserId?895245##' AND\n  Answers.CreationDate < '##Date?9999-01-01##' AND\n  Questions.Id = Answers.ParentId AND\n  DATEDIFF(day, Questions.CreationDate, Answers.CreationDate) > 60\nORDER BY\n  Answers.Score ASC"},{"QuerySetId":1072570,"Title":"Find NAAs older than a given date using Natty Blacklist","Description":"Title","QueryBody":"SELECT P.Id AS \"Post Link\", P.Score FROM Posts AS P WHERE (P.PostTypeId = 2 AND P.Score <= 0 AND LENGTH(P.Body) < 350 AND P.CreationDate < '##date##' AND (LOWER(P.Body) LIKE '%sorry for posting this as an answer%' OR LOWER(P.Body) LIKE '%don''t have enough reputation to post a comment%' OR LOWER(P.Body) LIKE '%how did you solve it%' OR LOWER(P.Body) LIKE '%can you share%' OR LOWER(P.Body) LIKE '%do you have any idea%' OR LOWER(P.Body) LIKE '%kindly assist%')) ORDER BY P.Score, P.CreationDate DESC","CreationDate":"2019-07-03 05:41:10","validated":false,"QueryBody_Original":"SELECT  P.Id AS [Post Link], P.Score\nFROM Posts P \nWHERE (\n   P.PostTypeId = 2 AND\n   P.Score <= 0 AND\n   len(P.Body) < 350 AND\n   P.CreationDate < '##date##' AND (\n   lower(P.Body) like '%sorry for posting this as an answer%' or \n   lower(P.Body) like '%don''t have enough reputation to post a comment%' or \n   lower(P.Body) like '%how did you solve it%' or \n   lower(P.Body) like '%can you share%' or \n   lower(P.Body) like '%do you have any idea%' or \n   lower(P.Body) like '%kindly assist%')\n)\nORDER BY P.Score ASC, P.CreationDate DESC"},{"QuerySetId":1072714,"Title":"Posts with incorrect spelling of lightsaber","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body FROM Posts WHERE Body LIKE '%lightsabre%'","CreationDate":"2019-07-02 15:23:21","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Body\nFROM Posts\nWHERE Body LIKE '%lightsabre%'"},{"QuerySetId":1073716,"Title":"Number of questions in a given tag per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.creationdate) AS \"date\", COUNT(p.id) AS \"count\" FROM posts AS p WHERE (p.PostTypeId = 1) AND (p.Tags LIKE '%<##tagName##>%') GROUP BY LAST_DATE_OF_MONTH(p.creationdate) ORDER BY LAST_DATE_OF_MONTH(p.creationdate)","CreationDate":"2019-07-04 14:49:29","validated":false,"QueryBody_Original":"SELECT  eomonth(p.creationdate) [date]\n     , count(p.id) as [count]\nfrom posts p\nwhere (p.PostTypeId=1) and (p.Tags Like '%<##tagName##>%')\ngroup by eomonth(p.creationdate)\norder by eomonth(p.creationdate)"},{"QuerySetId":1074053,"Title":"Percentage of the dupe questions by month","Description":"It counts also the deleted questions.","QueryBody":"SELECT * FROM PostLinks WHERE PostId = 1066589","CreationDate":"2019-07-05 14:33:13","validated":false,"QueryBody_Original":"SELECT  * FROM PostLinks WHERE PostId=1066589;"},{"QuerySetId":1074078,"Title":"Top 100 highest profile views","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY LENGTH(Location) DESC) AS Rank, ID AS \"User Link\", Views, Reputation, Location FROM USERS WHERE Reputation > 3000 LIMIT 100","CreationDate":"2019-07-05 19:13:20","validated":false,"QueryBody_Original":"SELECT  TOP 100 ROW_NUMBER() OVER(ORDER BY Len(Location) DESC) AS Rank\n              , ID AS [User Link]\n              , Views, Reputation, Location \nFROM USERS\nWHERE Reputation > 3000"},{"QuerySetId":1074152,"Title":"Number of comments starting with '\uff0b' (U+FF0B) instead of '+'","Description":null,"QueryBody":"SELECT COUNT(*) FROM comments WHERE SUBSTRING(text, 1, 1) COLLATE SQL_Latin1_General_CP850_BIN2 = NCHAR(65291)","CreationDate":"2019-07-06 04:56:55","validated":false,"QueryBody_Original":"SELECT  count(*) from comments where substring(text,1,1) COLLATE SQL_Latin1_General_CP850_BIN2 = NCHAR(65291);"},{"QuerySetId":1074443,"Title":"Select answers posted by a user to closed and\/or downvoted questions","Description":null,"QueryBody":"SELECT DISTINCT question.Id AS \"Post Link\", answers.CreationDate, answers.Id AS \"Post Link\", answers.OwnerUserId AS \"User Link\", question.Score, question.ClosedDate \/* find the answers for the user *\/ FROM Posts AS answers INNER JOIN Posts AS question ON question.Id = answers.ParentId INNER JOIN PostHistory AS ph ON ph.PostId = question.Id WHERE answers.OwnerUserId = '##UserId##' AND answers.PostTypeId = 2 AND (NOT question.ClosedDate IS NULL OR question.Score < 0) \/* check question is closed *\/ ORDER BY answers.CreationDate DESC","CreationDate":"2019-07-07 08:48:49","validated":false,"QueryBody_Original":"SELECT  distinct  question.Id as [Post Link], answers.CreationDate, \nanswers.Id as [Post Link], answers.OwnerUserId as [User Link], \nquestion.Score, question.ClosedDate\n-- find the answers for the user\nfrom Posts as answers\ninner join Posts as question\non question.Id = answers.ParentId\n-- query the question's post history\ninner join PostHistory ph\non ph.PostId = question.Id\n\n\nwhere \nanswers.OwnerUserId = '##UserId##'\nand answers.PostTypeId =2 \nand \n(question.ClosedDate is not null\n-- check question is closed\nor\nquestion.Score <0)\n-- check question downvoted\n\n\norder by answers.CreationDate desc"},{"QuerySetId":1075286,"Title":"Duplicate Questions Count per Month","Description":null,"QueryBody":"SELECT date1, COUNT(id) AS cnt FROM (SELECT TIME_TO_STR(d.CreationDate, '%y-%m') AS \"date1\", (d.Id) AS id FROM Posts AS d \/* d=duplicate *\/ LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND pl.LinkTypeId = 3 \/* 3=duplicate *\/ AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/) AS t1 GROUP BY date1 ORDER BY date1","CreationDate":"2020-10-13 02:35:02","validated":false,"QueryBody_Original":"SELECT  date1, count(id) as cnt\nFROM (\n\n  SELECT \n    FORMAT (d.CreationDate, 'yy-MM') as [date1],\n    (d.Id) as id\n  FROM Posts d  -- d=duplicate\n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    AND pl.LinkTypeId = 3  -- 3=duplicate\n    AND ph.PostHistoryTypeId = 10  -- 10=Post Closed\n    \n  ) as t1\ngroup by date1\norder by date1"},{"QuerySetId":1075287,"Title":"Closed Questions Count by Month","Description":null,"QueryBody":"SELECT date1, COUNT(id) AS cnt FROM (SELECT TIME_TO_STR(d.CreationDate, '%y-%m') AS \"date1\", (d.Id) AS id FROM Posts AS d \/* d=duplicate *\/ LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/) AS t1 GROUP BY date1 ORDER BY date1","CreationDate":"2019-07-09 14:50:51","validated":false,"QueryBody_Original":"SELECT  date1, count(id) as cnt\nFROM (\n\n  SELECT \n    FORMAT (d.CreationDate, 'yy-MM') as [date1],\n    (d.Id) as id\n  FROM Posts d  -- d=duplicate\n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    AND ph.PostHistoryTypeId = 10  -- 10=Post Closed\n    \n  ) as t1\ngroup by date1\norder by date1"},{"QuerySetId":1075293,"Title":"Days to Close a Duplicate Question by Creation Month","Description":null,"QueryBody":"SELECT date1 AS creationDate, AVG(diff1) AS avgDaysToClose FROM (SELECT DATEDIFF(d.ClosedDate, d.CreationDate) AS \"diff1\", TIME_TO_STR(d.CreationDate, '%y-%m') AS \"date1\", TIME_TO_STR(d.ClosedDate, '%y-%m') AS \"date2\", (d.Id) AS id FROM Posts AS d LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND pl.LinkTypeId = 3 \/* 3=duplicate *\/ AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/) AS t1 GROUP BY date1 ORDER BY date1","CreationDate":"2019-07-12 13:44:33","validated":false,"QueryBody_Original":"SELECT  date1 as creationDate, AVG(diff1) as avgDaysToClose\nFROM (\n\n  SELECT \n    DATEDIFF(day, d.CreationDate, d.ClosedDate) as [diff1],\n    FORMAT (d.CreationDate, 'yy-MM') as [date1],\n    FORMAT (d.ClosedDate, 'yy-MM') as [date2],\n    (d.Id) as id\n  FROM Posts d \n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    AND pl.LinkTypeId = 3  -- 3=duplicate\n    AND ph.PostHistoryTypeId = 10  -- 10=Post Closed\n    \n  ) as t1\ngroup by date1\norder by date1"},{"QuerySetId":1075300,"Title":"Duplicate Questions Count for User Reputation Range","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT (d.Id) AS id FROM Posts AS d \/* d=duplicate *\/ LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ LEFT JOIN Users AS u ON u.id = d.OwnerUserId WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND pl.LinkTypeId = 3 \/* 3=duplicate *\/ AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/ AND u.Reputation > 999 AND u.Reputation < 10000) AS t1","CreationDate":"2019-07-09 15:47:04","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFROM (\n\n  SELECT \n    (d.Id) as id\n  FROM Posts d  -- d=duplicate\n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n    LEFT JOIN Users u ON u.id = d.OwnerUserId\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    AND pl.LinkTypeId = 3  -- 3=duplicate\n    AND ph.PostHistoryTypeId = 10  -- 10=Post Closed\n    AND u.Reputation > 999\n    AND u.Reputation < 10000\n    \n  ) as t1"},{"QuerySetId":1075312,"Title":"Users Count for User Reputation Range","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u WHERE u.Reputation > 999 AND u.Reputation < 10000","CreationDate":"2019-07-09 15:46:42","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFROM Users u\nWHERE\n  u.Reputation > 999\n  AND u.Reputation < 10000"},{"QuerySetId":1075315,"Title":"Posts with links to files with particular extension (by LastActivityDate)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", Score, Body FROM Posts WHERE Body LIKE '%http%##ext?jpg##%' AND LastActivityDate >= '##Date1?2019-01-01##' AND LastActivityDate <= '##Date2?2020-01-01##' ORDER BY Id","CreationDate":"2019-07-09 15:43:48","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], OwnerUserId AS [User Link], Score, Body\nFROM Posts\nWHERE Body LIKE '%http%##ext?jpg##%'\n  AND LastActivityDate >= '##Date1?2019-01-01##' AND LastActivityDate <= '##Date2?2020-01-01##'\nORDER BY Id ASC"},{"QuerySetId":1075316,"Title":"Questions Count for User Reputation Range","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT (d.Id) AS id FROM Posts AS d LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ LEFT JOIN Users AS u ON u.id = d.OwnerUserId WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND u.Reputation > 999 AND u.Reputation < 10000) AS t1","CreationDate":"2019-07-09 15:47:16","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFROM (\n\n  SELECT \n    (d.Id) as id\n  FROM Posts d\n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n    LEFT JOIN Users u ON u.id = d.OwnerUserId\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    AND u.Reputation > 999\n    AND u.Reputation < 10000\n    \n  ) as t1"},{"QuerySetId":1075319,"Title":"Posts with links to files with particular extension (by LastActivityDate, only Body)","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE Body LIKE '%http%##ext?jpg##%' AND LastActivityDate >= '##Date1?2019-01-01##' AND LastActivityDate <= '##Date2?2020-01-01##' ORDER BY Id","CreationDate":"2019-07-09 15:45:12","validated":false,"QueryBody_Original":"SELECT  Body\nFROM Posts\nWHERE Body LIKE '%http%##ext?jpg##%'\n  AND LastActivityDate >= '##Date1?2019-01-01##' AND LastActivityDate <= '##Date2?2020-01-01##'\nORDER BY Id ASC"},{"QuerySetId":1075434,"Title":"post history for Table join using the repository pattern","Description":null,"QueryBody":"SELECT * FROM postlinks WHERE postid = 95650","CreationDate":"2019-07-09 22:11:08","validated":false,"QueryBody_Original":"SELECT  * from postlinks where postid = 95650"},{"QuerySetId":1076216,"Title":"Top 100 user of stackoverflow from Pakistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC) AS Rank, Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Pakistan%' LIMIT 100","CreationDate":"2019-07-12 11:49:07","validated":false,"QueryBody_Original":"SELECT \n   TOP 100 ROW_NUMBER() OVER (Order by reputation DESC) as Rank,\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Pakistan%'\n--ORDER BY\n--   reputation DESC"},{"QuerySetId":1076251,"Title":"Distribution of Days to Close a Duplicate Question","Description":null,"QueryBody":"SELECT diff1 AS daysToClose, COUNT(*) FROM (SELECT DATEDIFF(d.ClosedDate, d.CreationDate) AS \"diff1\", TIME_TO_STR(d.CreationDate, '%y-%m') AS \"date1\", TIME_TO_STR(d.ClosedDate, '%y-%m') AS \"date2\", (d.Id) AS id FROM Posts AS d LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND pl.LinkTypeId = 3 \/* 3=duplicate *\/ AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/) AS t1 GROUP BY diff1 ORDER BY diff1","CreationDate":"2019-07-12 13:46:15","validated":false,"QueryBody_Original":"SELECT  diff1 as daysToClose, count(*)\nFROM (\n\n  SELECT \n    DATEDIFF(day, d.CreationDate, d.ClosedDate) as [diff1],\n    FORMAT (d.CreationDate, 'yy-MM') as [date1],\n    FORMAT (d.ClosedDate, 'yy-MM') as [date2],\n    (d.Id) as id\n  FROM Posts d \n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    AND pl.LinkTypeId = 3  -- 3=duplicate\n    AND ph.PostHistoryTypeId = 10  -- 10=Post Closed\n    \n  ) as t1\ngroup by diff1\norder by diff1"},{"QuerySetId":1076256,"Title":"Distribution of Hours to Close a Duplicate Question","Description":null,"QueryBody":"SELECT diff1 AS hoursToClose, COUNT(*) FROM (SELECT DATEDIFF(d.ClosedDate, d.CreationDate) AS \"diff1\", TIME_TO_STR(d.CreationDate, '%y-%m') AS \"date1\", TIME_TO_STR(d.ClosedDate, '%y-%m') AS \"date2\", (d.Id) AS id FROM Posts AS d LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND pl.LinkTypeId = 3 \/* 3=duplicate *\/ AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/) AS t1 GROUP BY diff1 ORDER BY diff1","CreationDate":"2019-07-12 13:56:41","validated":false,"QueryBody_Original":"SELECT  diff1 as hoursToClose, count(*)\nFROM (\n\n  SELECT \n    DATEDIFF(hour, d.CreationDate, d.ClosedDate) as [diff1],\n    FORMAT (d.CreationDate, 'yy-MM') as [date1],\n    FORMAT (d.ClosedDate, 'yy-MM') as [date2],\n    (d.Id) as id\n  FROM Posts d \n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    AND pl.LinkTypeId = 3  -- 3=duplicate\n    AND ph.PostHistoryTypeId = 10  -- 10=Post Closed\n    \n  ) as t1\ngroup by diff1\norder by diff1"},{"QuerySetId":1076291,"Title":"Distribution of Users on Questions Count","Description":null,"QueryBody":"SELECT QCNT AS QuestionsCount, COUNT(*) AS UsersCount FROM (SELECT OwnerUserId, COUNT(*) AS QCNT FROM Posts AS d WHERE d.PostTypeId = 1 \/* 1=Question *\/ GROUP BY OwnerUserId) AS t1 GROUP BY QCNT ORDER BY QCNT","CreationDate":"2019-07-12 14:52:37","validated":false,"QueryBody_Original":"SELECT  QCNT as QuestionsCount, count(*) as UsersCount\nFROM (\n\n  SELECT \n    OwnerUserId,\n    Count(*) as QCNT\n  FROM Posts d \n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n  Group By OwnerUserId\n  \n  ) as t1\ngroup by QCNT\norder by QCNT"},{"QuerySetId":1076456,"Title":"All deleted user's posts in a specific tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE OwnerUserId IS NULL AND Tags LIKE '%<##tagName##>%' AND Score <= 2 AND AcceptedAnswerId IS NULL AND AnswerCount = 0 ORDER BY ViewCount DESC","CreationDate":"2019-07-13 00:04:12","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link] \nFROM Posts \nWHERE OwnerUserId IS NULL AND Tags LIKE '%<##tagName##>%' AND Score<=2 AND AcceptedAnswerId IS NULL AND AnswerCount=0\nORDER BY ViewCount DESC"},{"QuerySetId":1076498,"Title":"Search question related to mispelling","Description":null,"QueryBody":"SELECT Id, Title, Tags, CreationDate, Score, ViewCount, OwnerUserId, OwnerDisplayName, LastActivityDate, Tags, AnswerCount, CommentCount FROM Posts WHERE CreationDate BETWEEN '2019-04-01 00:00:00' AND '2019-06-01 00:00:00' AND (Title LIKE '%misspelling%') AND ViewCount <= 0 AND PostTypeId = 1","CreationDate":"2019-07-13 01:48:28","validated":false,"QueryBody_Original":"SELECT  Id, Title, Tags, CreationDate, Score, ViewCount, OwnerUserId,\nOwnerDisplayName, LastActivityDate, Tags, AnswerCount, CommentCount\nFROM Posts\nWHERE CreationDate BETWEEN '2019-04-01 00:00:00' AND '2019-06-01 00:00:00'\nAND (Title LIKE '%misspelling%')\nAND ViewCount <= 0\nAND PostTypeId = 1;"},{"QuerySetId":1076524,"Title":"Posts with links to files with particular extension (by CreationDate)","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", Score, Body FROM Posts WHERE Body LIKE '%http%.##ext?jpg##%' AND CreationDate >= '##Date1?2019-01-01##' AND CreationDate <= '##Date2?2020-01-01##' ORDER BY Id","CreationDate":"2019-07-13 09:17:49","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], OwnerUserId AS [User Link], Score, Body\nFROM Posts\nWHERE Body LIKE '%http%.##ext?jpg##%'\n  AND CreationDate >= '##Date1?2019-01-01##' AND CreationDate <= '##Date2?2020-01-01##'\nORDER BY Id ASC"},{"QuerySetId":1076570,"Title":"Search Malaysia Users by Reputation","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%malaysia%') ORDER BY Reputation DESC","CreationDate":"2019-07-13 15:51:20","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%malaysia%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1076645,"Title":"Find text in my comments","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('data') AND UserId = '3817004' ORDER BY Score DESC","CreationDate":"2019-07-14 12:56:16","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('data')\n   AND UserId = '3817004'\n ORDER BY Score DESC"},{"QuerySetId":1076661,"Title":"Average hours to first flag by post's creation date","Description":null,"QueryBody":"SELECT p.CreationDate FROM posts AS p GROUP BY p.CreationDate ORDER BY p.CreationDate","CreationDate":"2019-10-02 18:02:52","validated":false,"QueryBody_Original":"SELECT  p.CreationDate from posts as p\ngroup by p.CreationDate\norder by p.CreationDate"},{"QuerySetId":1076663,"Title":"Distribution of Flagged Posts by Time (Hours) to close","Description":null,"QueryBody":"SELECT diff1 AS hoursToClose, COUNT(*) FROM (SELECT DATEDIFF(d.ClosedDate, d.CreationDate) AS \"diff1\", TIME_TO_STR(d.CreationDate, '%y-%m') AS \"date1\", TIME_TO_STR(d.ClosedDate, '%y-%m') AS \"date2\", (d.Id) AS id FROM Posts AS d LEFT JOIN PostHistory AS ph ON ph.PostId = d.Id LEFT JOIN PostLinks AS pl ON pl.PostId = d.Id LEFT JOIN Posts AS o ON o.Id = pl.RelatedPostId \/* o=original *\/ WHERE (d.PostTypeId = 1 OR d.PostTypeId = 2) AND ph.PostHistoryTypeId = 10 \/* 10=Post Closed *\/) AS t1 GROUP BY diff1 ORDER BY diff1","CreationDate":"2019-07-14 15:39:40","validated":false,"QueryBody_Original":"SELECT  diff1 as hoursToClose, count(*)\nFROM (\n\n  SELECT \n    DATEDIFF(hour, d.CreationDate, d.ClosedDate) as [diff1],\n    FORMAT (d.CreationDate, 'yy-MM') as [date1],\n    FORMAT (d.ClosedDate, 'yy-MM') as [date2],\n    (d.Id) as id\n  FROM Posts d \n    LEFT JOIN PostHistory ph ON ph.PostId = d.Id\n    LEFT JOIN PostLinks pl ON pl.PostId = d.Id\n    LEFT JOIN Posts o ON o.Id = pl.RelatedPostId  -- o=original\n  WHERE\n    (d.PostTypeId = 1 OR d.PostTypeId = 2)\n    AND ph.PostHistoryTypeId = 10  -- 10=Post Closed\n    \n  ) as t1\ngroup by diff1\norder by diff1"},{"QuerySetId":1076860,"Title":"TOP 500 users from Iran","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Dandong%' ORDER BY reputation DESC LIMIT 500","CreationDate":"2020-03-08 10:03:45","validated":false,"QueryBody_Original":"SELECT  TOP 500\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Dandong%'\n   --DisplayName like '%oradnejad%' \nORDER BY\n   reputation DESC"},{"QuerySetId":1077332,"Title":"Average Edits Count based on Comments Count on Question","Description":null,"QueryBody":"SELECT p.CommentCount, COUNT(*) AS eCount, COUNT(DISTINCT p.Id) AS pCount, CAST(COUNT(*) AS FLOAT) \/ CAST(COUNT(DISTINCT p.Id) AS FLOAT) AS AvgEdits FROM posts AS p INNER JOIN PostHistory AS h ON h.PostId = p.Id WHERE p.PostTypeId = 1 AND (h.PostHistoryTypeId = 6 \/* Edit Tags *\/) GROUP BY CommentCount ORDER BY CommentCount","CreationDate":"2019-07-17 00:50:03","validated":false,"QueryBody_Original":"SELECT  p.CommentCount, Count(*) as eCount, Count(Distinct p.Id) as pCount,\nCAST(Count(*) as Float)\/CAST(Count(Distinct p.Id) as Float) as AvgEdits\nFrom posts p\ninner join PostHistory h on h.PostId = p.Id\nwhere p.PostTypeId = 1\nAND (\n  -- h.PostHistoryTypeId = 4 OR -- Edit Title\n  -- h.PostHistoryTypeId = 5 OR -- Edit Body\n  h.PostHistoryTypeId = 6 -- Edit Tags\n)\ngroup by CommentCount\norder by CommentCount ASC"},{"QuerySetId":1077418,"Title":"Deleted user's answers (link, question title, tags, score)","Description":null,"QueryBody":"SELECT a.Id AS link, q.Title AS title, q.Tags AS tags, a.Score AS score FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId AND a.postTypeId = 2 AND q.postTypeId = 1 WHERE a.CommunityOwnedDate IS NULL AND a.OwnerDisplayName = '##UserName##' AND a.OwnerUserId IS NULL ORDER BY a.Score DESC","CreationDate":"2019-11-28 00:10:07","validated":false,"QueryBody_Original":"SELECT \n    a.Id as link, q.Title as title, q.Tags as tags, a.Score as score\nfrom\n    Posts q\n  inner join\n    Posts a\n  on q.Id = a.ParentId and a.postTypeId = 2 and q.postTypeId = 1\nwhere\n      a.CommunityOwnedDate is null\n  and a.OwnerDisplayName = '##UserName##'\n  and a.OwnerUserId is null\norder by a.Score desc"},{"QuerySetId":1078025,"Title":"select *  from posts where CreationDate > 06\/18\/2019","Description":null,"QueryBody":"SELECT COUNT(Id) FROM posts WHERE CreationDate > 06 \/ 18 \/ 2019","CreationDate":"2019-07-18 16:50:30","validated":false,"QueryBody_Original":"SELECT  Count(Id) from posts where CreationDate > 06\/18\/2019"},{"QuerySetId":1078105,"Title":"how many users does the database contain","Description":null,"QueryBody":"SELECT * FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE DisplayName = 'Mat Mannion' AND p.PostTypeId = 1","CreationDate":"2019-07-18 23:22:03","validated":false,"QueryBody_Original":"SELECT  * FROM Users u\nINNER JOIN Posts p on u.Id = p.OwnerUserId\nWHERE DisplayName = 'Mat Mannion' AND p.PostTypeId = 1"},{"QuerySetId":1078119,"Title":"\"how ... do .. i\" questions","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, CreationDate FROM Posts WHERE PostTypeId = 1 AND LOWER(Title) LIKE '%how%do%i%' ORDER BY Score DESC, Id DESC LIMIT 100","CreationDate":"2019-07-18 23:48:16","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], Score, CreationDate\nFROM Posts\nWHERE\n  PostTypeId = 1\n  AND\n  LOWER(Title) LIKE '%how%do%i%'\nORDER BY Score DESC, Id DESC"},{"QuerySetId":1078319,"Title":"Top SOF users in Munich","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User_ID\", (CASE WHEN DisplayName LIKE '%arbar%zha%' THEN '[| ' + DisplayName + ' |]' ELSE DisplayName END) AS DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%munich%' OR LOWER(Location) LIKE '%muenchen%' OR LOWER(Location) LIKE '%m\u00fcnchen%') ORDER BY Reputation DESC LIMIT 250","CreationDate":"2019-08-18 00:58:34","validated":false,"QueryBody_Original":"SELECT  TOP 250\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id as [User_ID], \n    (case when DisplayName LIKE '%arbar%zha%' then \n      '[| '+DisplayName+' |]'\n     else\n       DisplayName\n     end\n     ) as\n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%munich%' OR\n     LOWER(Location) LIKE '%muenchen%' OR\n     LOWER(Location) LIKE '%m\u00fcnchen%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1078527,"Title":"Counts of recent moderator actions","Description":null,"QueryBody":"SELECT ph.UserId AS \"User Link\", COUNT(ph.Id) FROM PostHistory AS ph INNER JOIN Posts AS p ON ph.PostId = p.Id AND ph.PostHistoryTypeId IN (14, 15, 16, 37, 38) AND p.PostTypeId = 1 WHERE (ph.CreationDate >= '##Date1?2019-01-01##') AND (ph.CreationDate <= '##Date2?2020-01-01##') GROUP BY ph.UserId ORDER BY COUNT(ph.Id) DESC","CreationDate":"2019-09-27 11:18:24","validated":false,"QueryBody_Original":"SELECT \n  ph.UserId AS [User Link], COUNT(ph.Id)\n  FROM PostHistory ph INNER JOIN Posts p\n  ON ph.PostId=p.Id\n  AND ph.PostHistoryTypeId IN (14,15,16,37,38)\n  AND p.PostTypeId=1\n  WHERE (ph.CreationDate>='##Date1?2019-01-01##') AND (ph.CreationDate<='##Date2?2020-01-01##')\nGROUP BY ph.UserId\nORDER BY COUNT(ph.Id) DESC\n\n--14 = Post Locked - post locked by moderator\n--15 = Post Unlocked - post unlocked by moderator\n--16 = Community Owned - post now community owned\n--QUESTION can only be made CW by a moderator (so I look only at question; PostTypeId=1)\n--37 = Post merge source\n--38 = Post merge destination\n--53 = Question removed from hot network questions by a moderator"},{"QuerySetId":1078552,"Title":"Top 100 users in Maharashtra India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%maharashtra%' OR UPPER(Location) LIKE '%MAHARASHTRA%' OR Location LIKE '%Maharashtra%' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-07-20 15:24:40","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%maharashtra%'\n    OR UPPER(Location) LIKE '%MAHARASHTRA%'\n    or Location like '%Maharashtra%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1078600,"Title":"Percentage of users with rep = 1","Description":null,"QueryBody":"SELECT (1.0 * (SELECT COUNT(*) FROM Users WHERE Reputation = 1)) \/ (1.0 * (SELECT COUNT(*) FROM Users)) * 100","CreationDate":"2019-07-21 00:08:22","validated":false,"QueryBody_Original":"SELECT  (1.0*(SELECT count(*) from Users where Reputation=1))\/(1.0*(SELECT count(*) from Users))*100"},{"QuerySetId":1078601,"Title":"Percentage of users with rep > 1","Description":null,"QueryBody":"SELECT (1.0 * (SELECT COUNT(*) FROM Users WHERE Reputation > 1)) \/ (1.0 * (SELECT COUNT(*) FROM Users)) * 100","CreationDate":"2019-07-21 00:15:16","validated":false,"QueryBody_Original":"SELECT  (1.0*(SELECT count(*) from Users where Reputation>1))\/(1.0*(SELECT count(*) from Users))*100"},{"QuerySetId":1078607,"Title":"Percentage of users with rep=1 and with just a single question post","Description":null,"QueryBody":"SELECT (1.0 * (SELECT COUNT(*) FROM (SELECT u.Id FROM (SELECT Id FROM Users WHERE Reputation = 1) AS u JOIN Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id HAVING COUNT(*) = 1 AND MAX(p.PostTypeId) = 1) AS Chosen)) \/ (1.0 * (SELECT COUNT(*) FROM Users)) * 100","CreationDate":"2019-07-21 04:06:41","validated":false,"QueryBody_Original":"SELECT  (1.0*(\nSELECT count(*) from (\nSELECT u.Id \nfrom (SELECT Id from Users where Reputation = 1) as u \njoin Posts as p\non u.Id = p.OwnerUserId\ngroup by u.Id\nhaving count(*)= 1 and max(p.PostTypeId)= 1\n) as Chosen))\/(1.0*(SELECT count(*) from Users))*100"},{"QuerySetId":1078612,"Title":"Count of users without any posts","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT u.Id FROM Users AS u LEFT JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE p.OwnerUserId IS NULL GROUP BY u.Id) AS Inactive","CreationDate":"2019-07-21 05:31:59","validated":false,"QueryBody_Original":"SELECT  count(*) from (\nSELECT u.Id from Users as u\nleft join Posts as p\non u.Id = p.OwnerUserId\nwhere p.OwnerUserId is NULL\ngroup by u.Id) as Inactive"},{"QuerySetId":1078613,"Title":"users with rep=1 and with just a single question post, as a percentage of active users","Description":null,"QueryBody":"SELECT (1.0 * (SELECT COUNT(*) FROM (SELECT u.Id FROM (SELECT Id FROM Users WHERE Reputation = 1) AS u JOIN Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id HAVING COUNT(*) = 1 AND MAX(p.PostTypeId) = 1) AS Chosen)) \/ (1.0 * (SELECT COUNT(*) FROM (SELECT u.Id FROM Users AS u JOIN Posts AS p ON u.Id = p.OwnerUserId GROUP BY u.Id) AS Active)) * 100","CreationDate":"2019-07-21 05:34:32","validated":false,"QueryBody_Original":"SELECT  (1.0*(\nSELECT count(*) from (\nSELECT u.Id \nfrom (SELECT Id from Users where Reputation = 1) as u \njoin Posts as p\non u.Id = p.OwnerUserId\ngroup by u.Id\nhaving count(*)= 1 and max(p.PostTypeId)= 1\n) as Chosen))\/(1.0*(\nSELECT count(*) from (\nSELECT u.Id from Users as u\njoin Posts as p\non u.Id = p.OwnerUserId\ngroup by u.Id\n) as Active\n))*100"},{"QuerySetId":1078916,"Title":"All posts with answers > 5","Description":null,"QueryBody":"SELECT questions.id AS question_id, questions.OwnerUserId AS questioner_id, questions.body AS question_body, questions.CreationDate AS question_creation_date, answers.id AS answer_id, answers.body AS answer_body, answers.ParentId AS parent_id, answers.Score AS answer_score, answers.OwnerUserId AS respondant_id, answers.CreationDate AS answer_creation_date, DATEDIFF(answers.CreationDate, questions.CreationDate) AS time_after_answer FROM posts AS questions INNER JOIN posts AS answers ON questions.id = answers.ParentId WHERE questions.CreationDate >= '2019-06-06' AND questions.AnswerCount = 5 ORDER BY question_id, answer_score DESC LIMIT 100","CreationDate":"2019-07-31 18:03:21","validated":false,"QueryBody_Original":"SELECT  TOP (100) questions.id AS question_id, \n        questions.OwnerUserId AS questioner_id,\n        questions.body AS question_body, \n        questions.CreationDate AS question_creation_date,\n        answers.id AS answer_id,\n        answers.body AS answer_body,\n        answers.ParentId AS parent_id,\n        answers.Score AS answer_score,\n        answers.OwnerUserId AS respondant_id,\n        answers.CreationDate AS answer_creation_date,\n        DATEDIFF(second, questions.CreationDate, answers.CreationDate) AS time_after_answer\nFROM posts questions\nINNER JOIN posts answers\nON questions.id = answers.ParentId\nWHERE questions.CreationDate >= '2019-06-06' \nAND questions.AnswerCount = 5\nORDER BY question_id, answer_score DESC;"},{"QuerySetId":1078925,"Title":"Score from questions by user...","Description":null,"QueryBody":"SELECT COUNT(a.score) FROM posts AS a, posts AS q WHERE a.owneruserid = 31503 AND q.owneruserid = 28539 AND a.parentid = q.id AND a.id = q.AcceptedAnswerId","CreationDate":"2019-07-22 17:33:07","validated":false,"QueryBody_Original":"SELECT  count(a.score)\nfrom posts a, posts q\nwhere a.owneruserid = 31503\n  and q.owneruserid = 28539\n  and a.parentid = q.id\n  and a.id = q.AcceptedAnswerId"},{"QuerySetId":1079275,"Title":"View and votes per question","Description":null,"QueryBody":"SELECT v.postid AS \"Post Link\", p.creationdate AS \"Date\", p.ViewCount AS \"Views\", COUNT(v.postid) AS \"Vote count\" FROM votes AS v INNER JOIN posts AS p ON p.id = v.postid WHERE PostTypeId = 1 AND v.VoteTypeId IN (2, 3) AND p.creationdate >= '2010-01-01' GROUP BY v.postid, p.ViewCount, p.creationdate ORDER BY Date DESC","CreationDate":"2019-07-23 00:44:57","validated":false,"QueryBody_Original":"SELECT  v.postid AS [Post Link], \n       p.creationdate as \"Date\",\n       p.ViewCount as \"Views\",\n       count(v.postid) as 'Vote count'\nfrom votes v \ninner join posts p on p.id=v.postid\nwhere PostTypeId = 1 and v.VoteTypeId in (2,3) and p.creationdate >= '2010-01-01' \ngroup by v.postid,p.ViewCount, p.creationdate\norder by Date desc"},{"QuerySetId":1079288,"Title":"Top Bash user  in Pakistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY reputation DESC) AS Rank, Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Pakistan%' LIMIT 100","CreationDate":"2019-07-23 00:58:59","validated":false,"QueryBody_Original":"SELECT \n   TOP 100 ROW_NUMBER() OVER (Order by reputation DESC) as Rank,\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Pakistan%'\n--ORDER BY\n--   reputation DESC"},{"QuerySetId":1080059,"Title":"Ratio of liked questions by month","Description":"A question is liked, if 1) its score > 0 2) is not closed 3) is not deleted.","QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(v.CreationDate, '%Y'), TIME_TO_STR(v.CreationDate, '%M'), 1) AS Month, 100.0 * COUNT(CASE WHEN v.votetypeid = 2 AND ClosedDate IS NULL AND DeletionDate IS NULL THEN 1 ELSE NULL END) \/ COUNT(DISTINCT p.id) AS Pct FROM Posts AS p INNER JOIN votes AS v ON v.postid = p.id AND votetypeid = 2 WHERE PostTypeId = 1 GROUP BY DATEFROMPARTS(TIME_TO_STR(v.CreationDate, '%Y'), TIME_TO_STR(v.CreationDate, '%M'), 1) ORDER BY Month DESC","CreationDate":"2019-08-03 01:55:35","validated":false,"QueryBody_Original":"SELECT \n  DATEFROMPARTS(\n    DATEPART(yyyy, v.CreationDate),\n    DATEPART(mm, v.CreationDate),\n    1) AS Month,\n  100.0 *\n    COUNT(CASE\n      WHEN v.votetypeid = 2 AND ClosedDate IS NULL AND DeletionDate IS NULL THEN 1\n      ELSE NULL END) \/\n    COUNT(distinct p.id) AS Pct\nFROM Posts p\ninner join votes v on v.postid = p.id and votetypeid = 2\nWHERE PostTypeId = 1\nGROUP BY DATEFROMPARTS(\n  DATEPART(yyyy, v.CreationDate),\n  DATEPART(mm, v.CreationDate),\n  1)\nORDER BY Month DESC"},{"QuerySetId":1080163,"Title":"What is the median reputation level on SO?","Description":"http:\/\/stackoverflow.com\/a\/7227860\/578411\r\n\r\nhttp:\/\/meta.stackoverflow.com\/questions\/296967\/what-is-the-median-reputation-level-on-so","QueryBody":"SELECT AVG(reputation) AS median FROM (SELECT reputation, rnasc = ROW_NUMBER() OVER (ORDER BY reputation), rndesc = ROW_NUMBER() OVER (ORDER BY reputation DESC) FROM \"users\" WHERE reputation > 102) AS b WHERE rnasc BETWEEN rndesc - 1 AND rndesc + 1","CreationDate":"2019-07-24 12:04:53","validated":false,"QueryBody_Original":"SELECT  avg(reputation) median from\n(SELECT reputation, \nrnasc = row_number() over(order by reputation),\nrndesc = row_number() over(order by reputation desc)\n from [users]\n where reputation > 102\n) b\nwhere rnasc between rndesc - 1 and rndesc + 1"},{"QuerySetId":1080195,"Title":"Top 20 StackOverflow users from Armenia","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE LOWER(Location) LIKE LOWER('%Armenia%') ORDER BY Reputation DESC LIMIT 20","CreationDate":"2019-07-24 15:24:27","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%Armenia%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1080250,"Title":"Ever undeleted not-owned post single-handedly","Description":"Only mods can do that.","QueryBody":"SELECT DISTINCT PostHistory.UserId AS \"User Link\" FROM PostHistory, Posts WHERE PostHistory.PostId = Posts.Id AND PostHistory.UserId <> Posts.OwnerUserId AND Posts.OwnerUserId > 0 AND PostHistory.UserId > 0 AND PostHistory.PostHistoryTypeId = 13 AND NOT PostHistory.Text LIKE '%},{%'","CreationDate":"2019-07-24 20:03:31","validated":false,"QueryBody_Original":"SELECT  DISTINCT PostHistory.UserId AS [User Link]\nFROM PostHistory, Posts\nWHERE\n  PostHistory.PostId = Posts.Id\n  AND\n  PostHistory.UserId <> Posts.OwnerUserId\n  AND\n  Posts.OwnerUserId > 0\n  AND\n  PostHistory.UserId > 0\n  AND\n  PostHistory.PostHistoryTypeId = 13\n  AND\n  PostHistory.Text NOT LIKE '%},{%';"},{"QuerySetId":1080674,"Title":"count of the Minute an answer was posted ","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%M') AS \"minute\", COUNT(*) AS \"# occ\" FROM posts WHERE posttypeid = 2 GROUP BY TIME_TO_STR(creationdate, '%M') ORDER BY 1","CreationDate":"2019-07-25 23:25:24","validated":false,"QueryBody_Original":"SELECT  datepart(mi, creationdate) [minute]\n, count(*) [# occ]\nfrom posts\nwhere posttypeid = 2\ngroup by  datepart(mi, creationdate)\norder by 1"},{"QuerySetId":1080933,"Title":"get question bodies and tags","Description":null,"QueryBody":"SELECT Body, Tags, CreationDate FROM Posts\/* adjust! *\/ \/* adjust! *\/  WHERE CreationDate > '2019-07-01' AND CreationDate < '2019-08-01' AND Tags <> '' LIMIT 1000 \/* adjust! *\/","CreationDate":"2019-07-30 18:09:17","validated":false,"QueryBody_Original":"SELECT  \n   TOP 1000                           -- adjust!\n   Body, Tags, CreationDate  \nFROM Posts \nWHERE \n   CreationDate>'2019-07-01' and      -- adjust!\n   CreationDate<'2019-08-01' and      -- adjust!\n   Tags <> ''"},{"QuerySetId":1081040,"Title":"Active Meta Stack Overflow Users","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE LastAccessDate >= '2018-07-26'","CreationDate":"2019-07-27 00:02:33","validated":false,"QueryBody_Original":"SELECT  count(*) from Users where LastAccessDate >= '2018-07-26'"},{"QuerySetId":1081262,"Title":"Number of users who have posted non-deleted comments on Meta in the last year","Description":null,"QueryBody":"SELECT COUNT(DISTINCT UserId) FROM Comments WHERE CreationDate > DATEADD(year, -1, GETDATE())","CreationDate":"2019-07-27 08:16:07","validated":false,"QueryBody_Original":"SELECT  count(distinct UserId) FROM Comments\nWHERE CreationDate > DATEADD(year,-1,GETDATE());"},{"QuerySetId":1081265,"Title":"Number of votes in the last year","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes\/* Ignore Community user *\/  WHERE CreationDate > DATEADD(year, -1, GETDATE()) AND UserId > -1","CreationDate":"2019-07-27 08:28:06","validated":false,"QueryBody_Original":"SELECT  count(*) FROM Votes\nWHERE CreationDate > DATEADD(year,-1,GETDATE())\n-- Ignore Community user\nAND UserId > -1"},{"QuerySetId":1081269,"Title":"Number of nondeleted answers in the last year","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts\/* Ignore Community user *\/  WHERE PostTypeId \/* Answers are 2 *\/ = 2 AND OwnerUserId > -1","CreationDate":"2019-07-30 02:34:51","validated":false,"QueryBody_Original":"SELECT  count(*) FROM Posts\nWHERE\n-- Answers are 2\nPostTypeId = 2\n-- Ignore Community user\nAND OwnerUserId > -1"},{"QuerySetId":1081273,"Title":"Number of Stack Overflow users","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2019-07-27 08:59:31","validated":false,"QueryBody_Original":"SELECT  count(*) FROM Users"},{"QuerySetId":1081275,"Title":"Number of Meta users with non-deleted posts in the last year","Description":null,"QueryBody":"SELECT COUNT(DISTINCT OwnerUserId) FROM Posts WHERE CreationDate > DATEADD(year, -1, GETDATE())","CreationDate":"2019-07-27 09:04:13","validated":false,"QueryBody_Original":"SELECT  count(distinct OwnerUserId) FROM Posts\nWHERE CreationDate > DATEADD(year,-1,GETDATE())"},{"QuerySetId":1082006,"Title":"Questions per year by score","Description":null,"QueryBody":"SELECT YEAR(sel.CreationDate) AS \"Year\", COUNT(*) AS \"Count\" FROM (SELECT p.Id, p.CreationDate FROM Posts AS p WHERE p.PostTypeId = 1 \/* question *\/ AND p.ClosedDate IS NULL \/* not closed *\/ AND p.Score < 0) AS sel GROUP BY YEAR(sel.CreationDate) ORDER BY Year","CreationDate":"2019-07-30 01:33:45","validated":false,"QueryBody_Original":"SELECT \n    YEAR(sel.CreationDate) AS [Year]\n  , COUNT(*) AS [Count]\nFROM\n  ( SELECT\n        p.Id\n      , p.CreationDate\n    FROM\n        Posts p\n    WHERE \n      p.PostTypeId = 1 -- question\n      and p.ClosedDate is null -- not closed\n      and p.Score < 0\n    ) sel\nGROUP BY\n  YEAR(sel.CreationDate)\nORDER BY\n  Year"},{"QuerySetId":1082019,"Title":"Questions per year by number answers","Description":null,"QueryBody":"SELECT YEAR(sel.CreationDate) AS \"Year\", COUNT(*) AS \"Count\" FROM (SELECT p.Id, p.CreationDate FROM Posts AS p WHERE p.PostTypeId = 1 \/* question *\/ AND p.ClosedDate IS NULL \/* not closed *\/ AND p.AnswerCount = 0) AS sel GROUP BY YEAR(sel.CreationDate) ORDER BY Year","CreationDate":"2019-07-30 01:39:34","validated":false,"QueryBody_Original":"SELECT \n    YEAR(sel.CreationDate) AS [Year]\n  , COUNT(*) AS [Count]\nFROM\n  ( SELECT\n        p.Id\n      , p.CreationDate\n    FROM\n        Posts p\n    WHERE \n      p.PostTypeId = 1 -- question\n      and p.ClosedDate is null -- not closed\n      and p.AnswerCount = 0\n    ) sel\nGROUP BY\n  YEAR(sel.CreationDate)\nORDER BY\n  Year"},{"QuerySetId":1082039,"Title":"Avg. number of views of questions per year by score","Description":null,"QueryBody":"SELECT YEAR(sel.CreationDate) AS \"Year\", AVG(CAST(sel.ViewCount AS INT)) AS \"Avg. Views\" FROM (SELECT p.Id, p.CreationDate, p.ViewCount FROM Posts AS p WHERE p.PostTypeId = 1 \/* question *\/ AND p.ClosedDate IS NULL \/* not closed *\/ AND p.Score < 0) AS sel GROUP BY YEAR(sel.CreationDate) ORDER BY Year","CreationDate":"2019-07-30 01:42:40","validated":false,"QueryBody_Original":"SELECT \n    YEAR(sel.CreationDate) AS [Year]\n    , AVG(CAST(sel.ViewCount AS BIGINT)) as [Avg. Views]\nFROM\n  ( SELECT\n        p.Id\n      , p.CreationDate\n      , p.ViewCount\n    FROM\n        Posts p\n    WHERE \n      p.PostTypeId = 1 -- question\n      and p.ClosedDate is null -- not closed\n      and p.Score  < 0\n  ) sel\nGROUP BY\n  YEAR(sel.CreationDate)\nORDER BY\n  Year"},{"QuerySetId":1082056,"Title":"Users per Year last seen","Description":null,"QueryBody":"SELECT YEAR(LastAccessDate) AS \"Year\", COUNT(*) AS \"Count\" FROM Users GROUP BY YEAR(LastAccessDate) ORDER BY Year","CreationDate":"2019-07-29 00:19:06","validated":false,"QueryBody_Original":"SELECT \n    YEAR(LastAccessDate) AS [Year]\n  , COUNT(*) AS [Count]\nFROM\n  Users\nGROUP BY\n  YEAR(LastAccessDate)\nORDER BY\n  Year"},{"QuerySetId":1082059,"Title":"Questions with at least one upvoted answer","Description":null,"QueryBody":"SELECT YEAR(q.CreationDate) AS \"Year\", SUM(CASE WHEN a.parentid IS NULL THEN 1 END) AS \"Open Unanswered Questions\", COUNT(a.parentid) AS \"Questions with Answers\", COUNT(CASE WHEN a.score > 0 THEN a.parentid END) AS \"Qs with Positive Answers\" FROM posts AS q LEFT JOIN (SELECT DISTINCT ans.parentid, MAX(ans.score) AS \"score\" FROM posts AS ans WHERE ans.posttypeid = 2 GROUP BY ans.parentid) AS a ON a.parentid = q.id WHERE q.PostTypeId = 1 AND q.closeddate IS NULL \/* Open question *\/ GROUP BY YEAR(q.CreationDate) ORDER BY YEAR(q.CreationDate)","CreationDate":"2019-07-29 00:49:18","validated":false,"QueryBody_Original":"SELECT     YEAR(q.CreationDate)          AS [Year],\n          SUM(CASE WHEN a.parentid IS NULL THEN 1 END)\n                                        AS [Open Unanswered Questions],\n          COUNT(a.parentid)             AS [Questions with Answers],\n          \n          COUNT(CASE WHEN a.score > 0 THEN a.parentid END)\n                                        AS [Qs with Positive Answers]\n      \nFROM      posts q\n\nLEFT JOIN (\n   SELECT DISTINCT ans.parentid,\n                   MAX(ans.score) AS [score]\n   FROM posts ans\n   WHERE ans.posttypeid = 2\n   GROUP BY ans.parentid\n) a\nON        a.parentid = q.id\n\nWHERE     q.PostTypeId = 1\n   AND  q.closeddate IS NULL  -- Open question \n\n\nGROUP BY  YEAR(q.CreationDate)\nORDER BY  YEAR(q.CreationDate)"},{"QuerySetId":1082209,"Title":"Possibly broken 'links' to answers","Description":null,"QueryBody":"SELECT DISTINCT (p.Id) AS \"Post Link\" FROM Posts AS a INNER JOIN Posts AS p ON a.ParentId = p.ParentId AND a.Id <> p.Id WHERE a.PostTypeId = 2 AND a.OwnerUserId IS NULL AND (p.Body LIKE '%s advice%' OR p.Body LIKE '%s answer%' OR p.Body LIKE '%s idea%' OR p.Body LIKE '%s response%')","CreationDate":"2019-07-29 15:30:43","validated":false,"QueryBody_Original":"SELECT  DISTINCT(p.Id) AS [Post Link]\n  FROM Posts AS a\n  INNER JOIN Posts AS p\n    ON a.ParentId = p.ParentId\n   AND a.Id != p.Id\n  WHERE a.PostTypeId = 2\n    AND a.OwnerUserId IS NULL\n    AND (p.Body LIKE '%s advice%'\n      OR p.Body LIKE '%s answer%'      \n      OR p.Body LIKE '%s idea%'\n      OR p.Body LIKE '%s response%')"},{"QuerySetId":1082931,"Title":"All users of SOF in Munich","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User_ID\", DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%munich%' OR LOWER(Location) LIKE '%muenchen%' OR LOWER(Location) LIKE '%m\u00fcnchen%') ORDER BY Reputation DESC LIMIT 250","CreationDate":"2019-08-19 15:26:56","validated":false,"QueryBody_Original":"SELECT  TOP 250 ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id as [User_ID], \n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%munich%' OR\n     LOWER(Location) LIKE '%muenchen%' OR\n     LOWER(Location) LIKE '%m\u00fcnchen%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1083270,"Title":"List of users who have nondeleted comments on Meta in the last year","Description":null,"QueryBody":"SELECT COUNT(*) AS count, UserId AS id FROM Comments WHERE CreationDate > DATEADD(year, -6, GETDATE()) AND CreationDate < DATEADD(year, -5, GETDATE()) GROUP BY UserId ORDER BY count","CreationDate":"2019-07-31 00:53:01","validated":false,"QueryBody_Original":"SELECT  Count(*) as count, UserId as id FROM Comments\nWHERE CreationDate > DATEADD(year,-6,GETDATE()) AND\n      CreationDate < DATEADD(year,-5,GETDATE())\nGROUP BY UserId\nORDER BY count ASC;"},{"QuerySetId":1083341,"Title":"Number of users with activity in the last year","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE LastAccessDate > DATEADD(year, -1, GETDATE()) AND Reputation > 10","CreationDate":"2019-08-06 22:09:45","validated":false,"QueryBody_Original":"SELECT  count(*) FROM Users\nWHERE LastAccessDate > DATEADD(year,-1,GETDATE())\nAND Reputation > 10"},{"QuerySetId":1084015,"Title":"Posts without a single latin character","Description":null,"QueryBody":"SELECT p.PostTypeId, p.id AS \"Post Link\" FROM Posts AS p WHERE NOT LOWER(p.Body) LIKE N'%[a-z]%' AND p.PostTypeId IN (1, 2)","CreationDate":"2019-07-31 10:40:08","validated":false,"QueryBody_Original":"SELECT  p.PostTypeId, p.id as [Post Link]\nfrom Posts p\nwhere lower(p.Body) not like N'%[a-z]%'\nand p.PostTypeId in (1, 2)"},{"QuerySetId":1084280,"Title":"select * from Tags where TagName = 'javascript'","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName = 'javascript'","CreationDate":"2019-07-31 17:09:51","validated":false,"QueryBody_Original":"SELECT  * from Tags where TagName = 'javascript'"},{"QuerySetId":1084523,"Title":"Rep collected by questions and answers","Description":"It counts only accept\/up\/down votes on not deleted posts. PostTypeId = 1 means a question. PostTypeId = 2 means an answer.","QueryBody":"SELECT SUM(CASE WHEN Votes.VoteTypeId = 1 THEN 15 WHEN Votes.VoteTypeId = 3 THEN -2 WHEN Posts.PostTypeId = 1 THEN 5 ELSE 10 END) AS Rep, Posts.PostTypeId FROM Posts, Votes WHERE Votes.PostId = Posts.Id AND Votes.VoteTypeId <= 3 AND Posts.PostTypeId <= 2 GROUP BY Posts.PostTypeId","CreationDate":"2019-07-31 23:24:48","validated":false,"QueryBody_Original":"SELECT \n  SUM(\n    CASE\n      WHEN Votes.VoteTypeId = 1 THEN 15\n      WHEN Votes.VoteTypeId = 3 THEN -2\n      WHEN Posts.PostTypeId = 1 THEN 5\n      ELSE 10\n    END) AS Rep,\n  Posts.PostTypeId\nFROM Posts, Votes\nWHERE\n  Votes.PostId = Posts.Id\n  AND\n  Votes.VoteTypeId <= 3\n  AND\n  Posts.PostTypeId <= 2\nGROUP BY Posts.PostTypeId"},{"QuerySetId":1084895,"Title":"10 most viewed post of the site","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", * FROM Posts ORDER BY ViewCount DESC LIMIT 10","CreationDate":"2019-08-01 14:33:40","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id AS [Post Link], * FROM Posts ORDER BY ViewCount DESC;"},{"QuerySetId":1085375,"Title":"Top users SO from Tokyo","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%brisbane%' OR LOWER(Location) LIKE '%queensland%') AND Reputation >= 9000 ORDER BY Reputation DESC","CreationDate":"2019-10-01 09:40:29","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%brisbane%' OR LOWER(Location) LIKE '%queensland%')\n    AND Reputation >= 9000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1085407,"Title":"Probability of a closed question to get reopened","Description":"NowClosed: the questions closed now. ClosedOnce: questions closed at least once. This query does not see the now deleted questions.","QueryBody":"SELECT COUNT(ClosedDate) AS NowClosed, COUNT(*) AS ClosedOnce FROM Posts WHERE Id IN (SELECT DISTINCT PostId FROM PostHistory WHERE PostHistoryTypeId = 10)","CreationDate":"2019-08-03 23:18:24","validated":false,"QueryBody_Original":"SELECT  COUNT(ClosedDate) AS NowClosed, COUNT(*) AS ClosedOnce\nFROM Posts\nWHERE Id IN (\n  SELECT DISTINCT PostId\n  FROM PostHistory\n  WHERE PostHistoryTypeId = 10\n)"},{"QuerySetId":1085413,"Title":"Posts containing BIG-O Notation requiring MathJax Formatting","Description":null,"QueryBody":"SELECT p.Title, 'https:\/\/codereview.stackexchange.com\/questions\/' + CAST(p.id AS TEXT) AS URL, p.CreationDate FROM Posts AS p WHERE 1 = 1 AND NOT p.Title IS NULL AND p.ClosedDate IS NULL AND p.DeletionDate IS NULL AND LOWER(p.body) LIKE '%o(n%' AND NOT LOWER(p.body) LIKE '%\\$o(n%' ORDER BY p.CreationDate DESC LIMIT 3","CreationDate":"2019-08-04 00:34:45","validated":false,"QueryBody_Original":"SELECT  TOP 3\n    p.Title\n    ,'https:\/\/codereview.stackexchange.com\/questions\/' + CAST(p.id AS VARCHAR) as URL\n    ,p.CreationDate\nfrom Posts p\nwhere 1 = 1\n    and p.Title is not null\n    and p.ClosedDate is null\n    and p.DeletionDate is null\n    and lower(p.body) like '%o(n%'\n    and lower(p.body) not like '%\\$o(n%'\norder by p.CreationDate desc\n;"},{"QuerySetId":1085466,"Title":"Physical deletion of posts from the site","Description":null,"QueryBody":"SELECT Id \/ 1000, COUNT(*) AS Count FROM Posts GROUP BY Id \/ 1000 ORDER BY Id \/ 1000","CreationDate":"2019-08-03 23:42:52","validated":false,"QueryBody_Original":"SELECT  Id\/1000, COUNT(*) AS Count\nFROM Posts\nGROUP BY Id\/1000\nORDER BY Id\/1000;"},{"QuerySetId":1085649,"Title":"comments this month that mention 'upvote' or 'downvote'","Description":null,"QueryBody":"SELECT NUMBER_TO_STR(SUM(1), '#,##0') AS \"# comments\", NUMBER_TO_STR(SUM(score) \/ SUM(1.0), '0.0') AS \"avg score\", NUMBER_TO_STR(SUM(CASE WHEN text LIKE '%upvote%' OR text LIKE '%up_vote%' THEN 1 ELSE 0 END), '#,##0') AS \"mentions 'upvote'\", NUMBER_TO_STR((SUM(CASE WHEN text LIKE '%upvote%' OR text LIKE '%up_vote%' THEN 1 ELSE 0 END) \/ SUM(1.0)), '0.0%') AS \"upvote%\", NUMBER_TO_STR(SUM(CASE WHEN text LIKE '%downvote%' OR text LIKE '%down_vote%' THEN 1 ELSE 0 END), '#,##0') AS \"mentions 'downvote'\", NUMBER_TO_STR((SUM(CASE WHEN text LIKE '%downvote%' OR text LIKE '%down_vote%' THEN 1 ELSE 0 END) \/ SUM(1.0)), '0.0%') AS \"downvote%\" FROM comments WHERE YEAR(creationdate) = YEAR(CURRENT_TIMESTAMP()) AND MONTH(creationdate) = MONTH(CURRENT_TIMESTAMP())","CreationDate":"2019-08-04 19:10:10","validated":false,"QueryBody_Original":"SELECT  \n  format(sum(1),'#,##0') as [# comments],\n  format(sum(score)\/sum(1.0),'0.0') as [avg score],\n  \n  format(sum(case when text like '%upvote%' or text like '%up_vote%' then 1 else 0 end),'#,##0') as [mentions 'upvote'],\n  format((sum(case when text like '%upvote%' or text like '%up_vote%' then 1 else 0 end) \/ sum(1.0)),'0.0%') as [upvote%],\n  \n  format(sum(case when text like '%downvote%' or text like '%down_vote%' then 1 else 0 end),'#,##0') as [mentions 'downvote'],\n  format((sum(case when text like '%downvote%' or text like '%down_vote%' then 1 else 0 end) \/ sum(1.0)),'0.0%') as [downvote%]\n\nfrom \n  comments\n\nwhere \n  year(creationdate)=year(getdate()) \n  and month(creationdate)=month(getdate())"},{"QuerySetId":1085650,"Title":"C# Unanswered questions for archeologists","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Tags FROM Posts AS q WHERE (SELECT COUNT(*) FROM Posts AS a WHERE a.ParentId = q.Id AND a.Score > 0) = 0 AND q.CommunityOwnedDate IS NULL AND q.ClosedDate IS NULL AND q.ParentId IS NULL AND q.AcceptedAnswerId IS NULL AND q.Tags LIKE '%[C#]%' AND q.LastActivityDate <= DATEADD(mm, -6, GETDATE()) ORDER BY CreationDate DESC","CreationDate":"2019-08-29 18:39:12","validated":false,"QueryBody_Original":"SELECT  \n    q.Id as [Post Link]  \n    , q.Tags\nfrom Posts q\nwhere (\n    SELECT count(*) \n    from Posts a \n    where a.ParentId = q.Id \n        and a.Score > 0\n    ) = 0\n    and q.CommunityOwnedDate is null \n    and q.ClosedDate is null \n    and q.ParentId is null \n    and q.AcceptedAnswerId is null\n    and q.Tags like '%[C#]%'\n    and q.LastActivityDate <= DATEADD(mm, -6, GETDATE())\norder by CreationDate desc\n;"},{"QuerySetId":1089484,"Title":"Open Community Wiki Questions with the most Answers and Favorites","Description":null,"QueryBody":"SELECT P.Title, P.Id AS \"Post Link\", P.score AS Score, P.FavoriteCount AS Favorites, P.ViewCount AS \"Views\" FROM Posts AS P WHERE NOT P.CommunityOwnedDate IS NULL AND NOT P.Title IS NULL ORDER BY SCORE DESC LIMIT 100","CreationDate":"2019-09-02 17:06:42","validated":false,"QueryBody_Original":"SELECT  TOP 100 P.Title, P.Id as [Post Link], \nP.score as Score,\n  P.FavoriteCount as Favorites,\n  P.ViewCount as [Views]\nFROM Posts P\nWHERE \n\nP.CommunityOwnedDate IS NOT NULL AND P.Title IS NOT NULL\nORDER BY SCORE DESC"},{"QuerySetId":1089910,"Title":"All Hinduism.SE posts with links to archive.indianscriptures.com","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Body FROM Posts WHERE LOWER(Body) LIKE '%archive.indianscriptures.com%pdf%' \/* Link to PDF *\/ OR LOWER(Body) LIKE '%archive.indianscriptures.com%chapter%' \/* Link to Chapter\/Topic *\/ ORDER BY CreationDate","CreationDate":"2019-08-13 05:07:31","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  CreationDate,\n  Body\nFROM \n  Posts\nWHERE \n  lower(Body) LIKE '%archive.indianscriptures.com%pdf%'      -- Link to PDF\n  OR\n  lower(Body) LIKE '%archive.indianscriptures.com%chapter%'  -- Link to Chapter\/Topic\n\nORDER BY CreationDate ASC"},{"QuerySetId":1090047,"Title":"Mean rep gained on posts created on that month","Description":null,"QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(Posts.CreationDate, '%Y'), TIME_TO_STR(Posts.CreationDate, '%M'), 1) AS Month, SUM(CASE WHEN Votes.VoteTypeId = 1 THEN 17 WHEN Posts.PostTypeId = 1 AND Votes.VoteTypeId = 2 THEN 5 WHEN Posts.PostTypeId = 1 AND Votes.VoteTypeId = 3 THEN -2 WHEN Posts.PostTypeId = 2 AND Votes.VoteTypeId = 2 THEN 10 WHEN Posts.PostTypeId = 2 AND Votes.VoteTypeId = 3 THEN -3 ELSE 0 \/* unreachable *\/ END) AS Rep FROM Posts, Votes WHERE Votes.PostId = Posts.Id AND Votes.VoteTypeId BETWEEN 1 AND 3 AND Posts.PostTypeId BETWEEN 1 AND 2 GROUP BY DATEFROMPARTS(TIME_TO_STR(Posts.CreationDate, '%Y'), TIME_TO_STR(Posts.CreationDate, '%M'), 1) ORDER BY Month DESC","CreationDate":"2019-08-13 16:46:18","validated":false,"QueryBody_Original":"SELECT \n  DATEFROMPARTS(\n    DATEPART(yyyy, Posts.CreationDate),\n    DATEPART(mm, Posts.CreationDate),\n    1) AS Month,\n  SUM(\n    CASE\n      WHEN Votes.VoteTypeId = 1 THEN 17\n      WHEN Posts.PostTypeId = 1 AND Votes.VoteTypeId = 2 THEN 5\n      WHEN Posts.PostTypeId = 1 AND Votes.VoteTypeId = 3 THEN -2\n      WHEN Posts.PostTypeId = 2 AND Votes.VoteTypeId = 2 THEN 10\n      WHEN Posts.PostTypeId = 2 AND Votes.VoteTypeId = 3 THEN -3\n      ELSE 0 -- unreachable\n    END) AS Rep\nFROM Posts, Votes\nWHERE\n  Votes.PostId = Posts.Id\n  AND\n  Votes.VoteTypeId BETWEEN 1 AND 3\n  AND\n  Posts.PostTypeId BETWEEN 1 AND 2\nGROUP BY DATEFROMPARTS(\n  DATEPART(yyyy, Posts.CreationDate),\n  DATEPART(mm, Posts.CreationDate),\n  1)\nORDER BY Month DESC;"},{"QuerySetId":1090473,"Title":"questions answers per hour for user","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%h') AS hour, COUNT(CASE WHEN posttypeid = 1 THEN 1 END) AS questions, COUNT(CASE WHEN posttypeid = 2 THEN 1 END) AS answers FROM posts WHERE posttypeid IN (1, 2) GROUP BY TIME_TO_STR(creationdate, '%h')","CreationDate":"2020-01-09 22:43:15","validated":false,"QueryBody_Original":"SELECT \n     datepart(hour,creationdate) AS hour,\n     count(CASE WHEN posttypeid = 1 THEN 1 END) AS questions,\n     count(CASE WHEN posttypeid = 2 THEN 1 END) AS answers\n   FROM posts\n   WHERE posttypeid IN (1,2) \n   GROUP BY datepart(hour,creationdate)"},{"QuerySetId":1091004,"Title":"Top ten Users with the most Questions in July","Description":null,"QueryBody":"SELECT OwnerDisplayName, COUNT(*) AS Num_Posts FROM Posts WHERE CreationDate < '08\/01\/2019 00:00:00' AND CreationDate >= '07\/01\/2019 00:00:00' AND PostTypeId = 1 AND OwnerDisplayName <> '' AND NOT OwnerDisplayName LIKE 'user%' GROUP BY OwnerDisplayName ORDER BY Num_Posts DESC LIMIT 10","CreationDate":"2019-08-15 00:34:00","validated":false,"QueryBody_Original":"SELECT  TOP 10 OwnerDisplayName, Count(*) as Num_Posts\nFROM Posts\nWHERE CreationDate < '08\/01\/2019 00:00:00' AND CreationDate >= '07\/01\/2019 00:00:00' AND PostTypeId = 1 AND OwnerDisplayName\n != '' AND OwnerDisplayName NOT LIKE 'user%'\nGROUP BY OwnerDisplayName\nORDER BY Num_Posts DESC;"},{"QuerySetId":1091351,"Title":"How often is reprex, mcve, mwe, sscce, mvce, example used in comments on SO?","Description":null,"QueryBody":"SELECT COUNT(sel.Id) FROM (SELECT c.Id FROM Comments AS c WHERE YEAR(c.CreationDate) >= 2019) AS sel","CreationDate":"2019-08-15 19:14:27","validated":false,"QueryBody_Original":"SELECT \n  COUNT(sel.Id)\nFROM\n  ( SELECT c.Id\n    FROM Comments c\n    WHERE YEAR(c.CreationDate) >= 2019\n  ) sel"},{"QuerySetId":1091738,"Title":"questoins without accepted answer in buckets of rep","Description":null,"QueryBody":"SELECT FLOOR(2 * LOG10(Users.Reputation) + 1) \/ 2, COUNT(*) FROM Posts INNER JOIN Users ON Users.Id = Posts.OwnerUserId WHERE Posts.AcceptedAnswerId IS NULL AND Posts.AnswerCount > 0 GROUP BY FLOOR(2 * LOG10(Users.Reputation) + 1) \/ 2 ORDER BY FLOOR(2 * LOG10(Users.Reputation) + 1) \/ 2","CreationDate":"2019-08-16 23:00:34","validated":false,"QueryBody_Original":"SELECT  floor(2*LOG10(Users.Reputation)+1)\/2, count(*)\nFROM Posts\nINNER JOIN Users \n   ON Users.Id=Posts.OwnerUserId\nWHERE Posts.AcceptedAnswerId is NULL\n  AND Posts.AnswerCount > 0\nGROUP BY floor(2*LOG10(Users.Reputation)+1)\/2\nORDER BY floor(2*LOG10(Users.Reputation)+1)\/2"},{"QuerySetId":1091784,"Title":"Casella & Berger Related Questions","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Body LIKE 'Casella'","CreationDate":"2019-08-16 06:52:41","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts where Body like 'Casella'"},{"QuerySetId":1091955,"Title":"TOP 100 users from Serbia","Description":"Lists the top 100 users (ranked by reputation) that are located in Serbia according to their profile information.\r\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Belgrade%' OR Location LIKE N'%Beograd%' OR Location LIKE N'%Sr' OR Location LIKE N'%Serbia%' OR Location LIKE N'%Novi Sad%' OR Location LIKE N'%Srbija%' OR Location LIKE N'%Ni\u0161%' ORDER BY reputation DESC LIMIT 100","CreationDate":"2019-08-16 16:27:02","validated":false,"QueryBody_Original":"SELECT  TOP 100\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Belgrade%'\n   OR Location like N'%Beograd%'\n   OR Location like N'%Sr'\n   OR Location like N'%Serbia%'\n   OR Location like N'%Novi Sad%'\n   OR Location like N'%Srbija%'\n   OR Location like N'%Ni\u0161%'\nORDER BY\n   reputation DESC"},{"QuerySetId":1092090,"Title":"Got most down to non-CW answers","Description":null,"QueryBody":"SELECT DENSE_RANK() OVER (ORDER BY COUNT(*) DESC) AS Rank, Posts.OwnerUserId AS \"User Link\", Posts.OwnerUserId AS UserId, COUNT(*) AS Count FROM Posts, Votes WHERE Posts.Id = Votes.PostId AND Votes.VoteTypeId = 3 AND Posts.PostTypeId = 2 AND Posts.CommunityOwnedDate IS NULL AND Posts.OwnerUserId > 0 GROUP BY Posts.OwnerUserId ORDER BY Count DESC, UserId LIMIT 100","CreationDate":"2019-08-17 02:13:28","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  DENSE_RANK() OVER (ORDER BY COUNT(*) DESC) AS Rank,\n  Posts.OwnerUserId AS [User Link],\n  Posts.OwnerUserId AS UserId,\n  COUNT(*) AS Count\nFROM Posts, Votes\nWHERE\n  Posts.Id = Votes.PostId\n  AND\n  Votes.VoteTypeId = 3\n  AND\n  Posts.PostTypeId = 2\n  AND\n  Posts.CommunityOwnedDate IS NULL\n  AND\n  Posts.OwnerUserId > 0\nGROUP BY Posts.OwnerUserId\nORDER BY Count DESC, UserId"},{"QuerySetId":1092632,"Title":"Get comments with \"Issue Tracker\" on it - comments made by specific user","Description":null,"QueryBody":"SELECT * FROM Comments WHERE UserId IN (4092887) AND Text LIKE '%Issue Tracker%'","CreationDate":"2019-08-18 03:53:47","validated":false,"QueryBody_Original":"SELECT   * \nFROM Comments \nWHERE UserId IN (4092887) \nAND Text LIKE '%Issue Tracker%';"},{"QuerySetId":1092763,"Title":"Number of answers in a given period","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE posttypeid = 2 AND creationdate BETWEEN '##start?2019-01-01##' AND '##end?2019-07-01##'","CreationDate":"2019-08-18 18:27:11","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom posts\nwhere posttypeid = 2\nand creationdate between '##start?2019-01-01##' and '##end?2019-07-01##'"},{"QuerySetId":1092889,"Title":"The longest dupe chains of the site","Description":null,"QueryBody":"SELECT * FROM PostLinks WHERE PostId = 1068834","CreationDate":"2019-08-19 01:06:03","validated":false,"QueryBody_Original":"SELECT  * FROM PostLinks WHERE PostId=1068834;"},{"QuerySetId":1092890,"Title":"Questions being their own \"duplicates\"","Description":null,"QueryBody":"SELECT PostLinks.PostId AS \"Post Link\" FROM PostLinks, Posts AS D, Posts AS O WHERE PostLinks.PostId = D.Id AND PostLinks.RelatedPostId = O.Id AND PostLinks.LinkTypeId = 3 AND PostLinks.PostId = PostLinks.RelatedPostId ORDER BY PostId","CreationDate":"2019-08-19 01:51:12","validated":false,"QueryBody_Original":"SELECT \n  PostLinks.PostId AS [Post Link]\nFROM PostLinks, Posts D, Posts O\nWHERE\n  PostLinks.PostId = D.Id\n  AND\n  PostLinks.RelatedPostId = O.Id\n  AND\n  PostLinks.LinkTypeId = 3\n  AND\n  PostLinks.PostId = PostLinks.RelatedPostId\nORDER BY PostId;"},{"QuerySetId":1092910,"Title":"Question pairs closed as the dupe of each other","Description":null,"QueryBody":"SELECT A.PostId AS \"Post Link\", B.PostId AS \"Post Link\" FROM PostLinks AS A, PostLinks AS B, Posts AS D, Posts AS O WHERE A.PostId = D.Id AND A.RelatedPostId = B.PostId AND B.RelatedPostId = A.PostId AND A.LinkTypeId = 3 AND B.LinkTypeId = 3 AND B.PostId = O.Id AND A.PostId < B.PostId ORDER BY A.PostId","CreationDate":"2019-08-19 05:25:00","validated":false,"QueryBody_Original":"SELECT \n  A.PostId AS [Post Link],\n  B.PostId AS [Post Link]\nFROM PostLinks A, PostLinks B, Posts D, Posts O\nWHERE\n  A.PostId = D.Id\n  AND\n  A.RelatedPostId = B.PostId\n  AND\n  B.RelatedPostId = A.PostId\n  AND\n  A.LinkTypeId = 3\n  AND\n  B.LinkTypeId = 3\n  AND\n  B.PostId = O.Id\n  AND\n  A.PostId < B.PostId\nORDER BY A.PostId;"},{"QuerySetId":1092968,"Title":"Deleted users by their posts","Description":null,"QueryBody":"SELECT OwnerDisplayName, MAX(creationDate), COUNT(*) AS Count FROM Posts WHERE OwnerUserId IS NULL GROUP BY OwnerDisplayName ORDER BY Count DESC, OwnerDisplayName LIMIT 100","CreationDate":"2019-10-05 19:35:29","validated":false,"QueryBody_Original":"SELECT  TOP 100\nOwnerDisplayName, max(creationDate), \n  COUNT(*) AS Count\nFROM Posts\nWHERE\n  OwnerUserId IS NULL\nGROUP BY OwnerDisplayName\nORDER BY Count DESC, OwnerDisplayName;"},{"QuerySetId":1093263,"Title":"Histogram of number of questions per user","Description":null,"QueryBody":"SELECT sel.Questions, COUNT(*) AS Occurence FROM (SELECT COUNT(*) AS Questions FROM Posts AS p WHERE p.PostTypeId = 2 \/* or 2 for answers *\/ GROUP BY p.OWNERUSERID) AS sel GROUP BY sel.Questions","CreationDate":"2019-08-19 18:45:11","validated":false,"QueryBody_Original":"SELECT  sel.Questions, COUNT(*) as Occurence\nFROM (SELECT COUNT(*) as Questions\nFROM Posts p\nWHERE p.PostTypeId = 2 -- or 2 for answers\nGROUP BY p.OWNERUSERID) sel\nGROUP BY sel.Questions"},{"QuerySetId":1093996,"Title":"test rig for SEDE query to calculate net migrations quarterly from ELU to ELL","Description":null,"QueryBody":"SELECT comment FROM posthistory WHERE creationdate > '2019-01-01' AND posthistorytypeid IN (35, 36)","CreationDate":"2019-08-20 23:20:11","validated":false,"QueryBody_Original":"SELECT  comment\nfrom posthistory\nwhere creationdate > '2019-01-01'\nand posthistorytypeid in (35,36)"},{"QuerySetId":1094158,"Title":"Usuarios con 10 o m\u00e1s preguntas sin aceptar","Description":null,"QueryBody":"SELECT U.id, U.DisplayName, COUNT(CASE WHEN P.AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) AS PreguntasSinAceptar, COUNT(CASE WHEN NOT P.AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) AS PreguntasAceptadas FROM Users AS U INNER JOIN Posts AS P ON U.id = P.OwnerUserId WHERE P.PostTypeId = 1 AND P.AnswerCount > 0 GROUP BY U.id, U.DisplayName HAVING COUNT(CASE WHEN P.AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) >= 10 ORDER BY 3 DESC","CreationDate":"2019-08-21 05:58:51","validated":false,"QueryBody_Original":"SELECT  U.id,\n       U.DisplayName,\n       count(case when P.AcceptedAnswerId is null then 1 else null end) as PreguntasSinAceptar,\n       count(case when P.AcceptedAnswerId is not null then 1 else null end) as PreguntasAceptadas\n  from Users U\n  inner join Posts P\n        on U.id = P.OwnerUserId\n  where P.PostTypeId = 1 \n        and P.AnswerCount > 0 \n  group by U.id,\n           U.DisplayName\n  having count(case when P.AcceptedAnswerId is null then 1 else null end) >= 10\n  order by 3 desc;"},{"QuerySetId":1094182,"Title":"Usuarios con 10 o m\u00e1s preguntas (Todas sin aceptar)","Description":null,"QueryBody":"SELECT U.id, U.DisplayName, COUNT(CASE WHEN P.AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) AS PreguntasSinAceptar, COUNT(CASE WHEN NOT P.AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) AS PreguntasAceptadas FROM Users AS U INNER JOIN Posts AS P ON U.id = P.OwnerUserId WHERE P.PostTypeId = 1 AND P.AnswerCount > 0 GROUP BY U.id, U.DisplayName HAVING COUNT(CASE WHEN P.AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) >= 10 AND COUNT(CASE WHEN NOT P.AcceptedAnswerId IS NULL THEN 1 ELSE NULL END) = 0 ORDER BY 3 DESC","CreationDate":"2020-02-27 03:37:27","validated":false,"QueryBody_Original":"SELECT  U.id,\n       U.DisplayName,\n       count(case when P.AcceptedAnswerId is null then 1 else null end) as PreguntasSinAceptar,\n       count(case when P.AcceptedAnswerId is not null then 1 else null end) as PreguntasAceptadas\n  from Users U\n  inner join Posts P\n        on U.id = P.OwnerUserId\n  where P.PostTypeId = 1 \n        and P.AnswerCount > 0 \n  group by U.id,\n           U.DisplayName\n  having count(case when P.AcceptedAnswerId is null then 1 else null end) >= 10\n         and count(case when P.AcceptedAnswerId is not null then 1 else null end) =0\n  order by 3 desc;"},{"QuerySetId":1094606,"Title":"Total number of non closed questions","Description":null,"QueryBody":"SELECT COUNT(p.Id) FROM Posts AS p WHERE p.PostTypeId = 2 \/* 1=question, 2=answer *\/ AND p.Score >= 0","CreationDate":"2019-08-22 00:28:27","validated":false,"QueryBody_Original":"SELECT  COUNT(p.Id)\nFROM Posts p\nWHERE p.PostTypeId = 2 -- 1=question, 2=answer\n and p.Score >= 0"},{"QuerySetId":1094685,"Title":"Comments containing the given macro ","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%[^\\]\\##text?cl##[^a-zA-Z]%' ORDER BY CreationDate","CreationDate":"2019-08-22 11:12:09","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%[^\\]\\##text?cl##[^a-zA-Z]%'\nORDER BY CreationDate"},{"QuerySetId":1094716,"Title":"Avg. view count per question score","Description":null,"QueryBody":"SELECT q.Score AS \"Score\", AVG(CAST(q.ViewCount AS INT)) AS \"Avg. Views\" FROM Posts AS q WHERE q.PostTypeId = 1 \/* questions *\/ AND q.ClosedDate IS NULL \/* not closed *\/ AND q.Score >= -5 AND q.Score <= 50 AND q.AnswerCount = 0 GROUP BY q.Score ORDER BY q.Score","CreationDate":"2019-08-22 14:41:34","validated":false,"QueryBody_Original":"SELECT  q.Score as [Score], AVG(CAST(q.ViewCount as BIGINT)) as [Avg. Views]\nFROM Posts q\nWHERE q.PostTypeId = 1 -- questions\n AND q.ClosedDate is null -- not closed\n AND q.Score >= -5 AND q.Score <= 50 and q.AnswerCount = 0\nGROUP BY q.Score\nORDEr BY q.Score"},{"QuerySetId":1095294,"Title":" Find the top five answers with the most upvotes.","Description":null,"QueryBody":"SELECT Posts.id, Posts.AcceptedAnswerID, users.Upvotes FROM Posts JOIN Users ON Posts.id = users.id ORDER BY users.UpVotes DESC","CreationDate":"2019-08-23 14:36:50","validated":false,"QueryBody_Original":"SELECT  Posts.id,Posts.AcceptedAnswerID,users.Upvotes from Posts\njoin Users\non Posts.id=users.id\norder by users.UpVotes desc"},{"QuerySetId":1095492,"Title":"Newly asked non closed questions per year","Description":null,"QueryBody":"SELECT yyyy AS \"Year\", COUNT(yyyy) AS \"Occurence\" FROM (SELECT YEAR(q.CreationDate) AS \"yyyy\" FROM Posts AS q WHERE q.PostTypeId = 1 \/* question *\/ AND q.ClosedDate IS NULL \/* not closed *\/) AS sel GROUP BY yyyy ORDER BY yyyy","CreationDate":"2019-08-23 19:43:21","validated":false,"QueryBody_Original":"SELECT  yyyy as [Year], COUNT(yyyy) as [Occurence]\nFROM (\nSELECT YEAR(q.CreationDate) as [yyyy]\nFROM Posts q\nWHERE q.PostTypeId = 1 -- question\n AND q.ClosedDate is null -- not closed\n) sel\nGROUP BY yyyy\nORDER BY yyyy"},{"QuerySetId":1096607,"Title":"Get all posts by user","Description":"This displays all posts and comments on Stack Overflow for a particular user.\r\n","QueryBody":"SELECT Posts.Id AS \"Post Link\", Posts.CreationDate, Posts.Title, Posts.Body FROM Posts, Users WHERE Posts.OwnerUserId = Users.Id AND UPPER(Location) LIKE UPPER('%CAMEROON%') ORDER BY Posts.CreationDate DESC","CreationDate":"2019-08-26 13:57:15","validated":false,"QueryBody_Original":"SELECT  Posts.Id as [Post Link], Posts.CreationDate, Posts.Title, Posts.Body from Posts, Users \nwhere Posts.OwnerUserId=Users.Id AND \nUPPER(Location) like UPPER('%CAMEROON%')\n\norder by Posts.CreationDate desc"},{"QuerySetId":1096612,"Title":"select * from users where Location = 'VN';","Description":null,"QueryBody":"SELECT * FROM users WHERE Location = 'VN' OR Location = 'Vietnam'","CreationDate":"2019-08-26 13:31:21","validated":false,"QueryBody_Original":"SELECT  * from users where Location = 'VN' or Location = 'Vietnam';"},{"QuerySetId":1096679,"Title":"Comment Score Frequency (whole site)","Description":null,"QueryBody":"SELECT Score, COUNT(score) AS \"Count\" FROM comments GROUP BY score ORDER BY score","CreationDate":"2019-08-27 01:59:56","validated":false,"QueryBody_Original":"SELECT  Score, count(score) as [Count]\nfrom comments\ngroup by score\norder by score"},{"QuerySetId":1096880,"Title":"Scores vs Views (whole site)","Description":null,"QueryBody":"SELECT Score, AVG(viewCount) AS \"Average Views\" FROM posts GROUP BY score ORDER BY score DESC","CreationDate":"2019-08-27 01:54:46","validated":false,"QueryBody_Original":"SELECT  Score, avg(viewCount) as [Average Views]\nfrom posts\ngroup by score\norder by score desc"},{"QuerySetId":1096883,"Title":"Post Scores Frequency (whole site)","Description":null,"QueryBody":"SELECT Score, COUNT(score) AS \"Count\" FROM posts GROUP BY score ORDER BY score","CreationDate":"2019-08-27 02:01:37","validated":false,"QueryBody_Original":"SELECT  Score, count(score) as [Count]\nfrom posts\ngroup by score\norder by score"},{"QuerySetId":1096886,"Title":"Answer Score Frequency (whole site)","Description":null,"QueryBody":"SELECT Score, COUNT(score) AS \"Count\" FROM posts WHERE answerCount IS NULL GROUP BY score ORDER BY score DESC","CreationDate":"2019-08-27 02:23:39","validated":false,"QueryBody_Original":"SELECT  Score, count(score) as [Count]\nfrom posts\nwhere answerCount is null\ngroup by score\norder by score desc"},{"QuerySetId":1096887,"Title":"Question Score Frequency (whole site)","Description":null,"QueryBody":"SELECT Score, COUNT(score) AS \"Count\" FROM posts WHERE NOT answerCount IS NULL GROUP BY score ORDER BY score DESC","CreationDate":"2019-08-27 02:23:51","validated":false,"QueryBody_Original":"SELECT  Score, count(score) as [Count]\nfrom posts\nwhere answerCount is not null\ngroup by score\norder by score desc"},{"QuerySetId":1097097,"Title":"Tag wikis with http links","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%tinypic%'","CreationDate":"2019-08-27 18:41:24","validated":false,"QueryBody_Original":"SELECT  Id As [Post Link]\nfrom Posts\nwhere Body LIKE '%tinypic%'"},{"QuerySetId":1097285,"Title":"SELECT Score, COUNT(Score) FROM Posts WHERE Score > 10 AND Score < 100 GROUP BY Score ORDER BY Score","Description":null,"QueryBody":"SELECT Score, COUNT(Score) FROM Posts WHERE Score > 10 AND Score < 100 GROUP BY Score ORDER BY Score","CreationDate":"2019-08-27 21:09:56","validated":false,"QueryBody_Original":"SELECT  Score, COUNT(Score) FROM Posts WHERE Score > 10 AND Score < 100 GROUP BY Score ORDER BY Score"},{"QuerySetId":1097327,"Title":"Search users by user name pattern","Description":"To search for an exact name, just type it as the pattern. To search for names containing Bob, use the pattern %Bob%. To search for names starting with Bob, use the pattern Bob%. To include an apostrophe in the pattern, double it (e.g. %O''B% finds Alice O'Hara).","QueryBody":"SELECT Id AS \"User Link\", Reputation, CreationDate, LastAccessDate FROM Users WHERE DisplayName LIKE '##Pattern##'","CreationDate":"2019-08-27 23:40:21","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], Reputation, CreationDate, LastAccessDate\nfrom Users\nwhere DisplayName like '##Pattern##'"},{"QuerySetId":1097547,"Title":"most popular python questions for Julia :)","Description":null,"QueryBody":"SELECT P.Title, P.Id AS \"Post Link\", P.score AS Score, P.FavoriteCount AS Favorites, P.ViewCount AS \"Views\" FROM Posts AS P WHERE P.Tags LIKE '%<##tag?julia##>%' AND NOT P.CommunityOwnedDate IS NULL AND NOT P.Title IS NULL ORDER BY SCORE DESC LIMIT 100","CreationDate":"2019-09-26 04:17:13","validated":false,"QueryBody_Original":"SELECT  TOP 100 P.Title, P.Id as [Post Link], \nP.score as Score,\n  P.FavoriteCount as Favorites,\n  P.ViewCount as [Views]\nFROM Posts P\nWHERE P.Tags LIKE '%<##tag?julia##>%' AND \n\nP.CommunityOwnedDate IS NOT NULL AND P.Title IS NOT NULL\nORDER BY SCORE DESC"},{"QuerySetId":1097570,"Title":"Top 200 users from Vietnam","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%vietnam%' OR UPPER(Location) LIKE '%IND' ORDER BY Reputation DESC LIMIT 2000","CreationDate":"2019-08-29 05:32:11","validated":false,"QueryBody_Original":"SELECT  TOP 2000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%vietnam%'\n    OR UPPER(Location) LIKE '%IND'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1097574,"Title":"WordPress Related Questions - 8 Months","Description":null,"QueryBody":"SELECT DISTINCT p.ID AS \"ID\", p.CreationDate AS \"Date\", p.Tags AS \"Tags\" FROM Posts AS p WHERE p.CreationDate BETWEEN '2019-01-01' AND '2019-08-28' AND (p.Tags LIKE '%wordpress%' OR p.Tags LIKE 'yoast%' OR p.Tags LIKE '%woocommerce%' OR p.Tags LIKE 'buddypress%' OR p.Tags LIKE 'bbpress%' OR p.Tags LIKE 'contact-form-7%') ORDER BY p.CreationDate DESC","CreationDate":"2019-08-29 07:30:21","validated":false,"QueryBody_Original":"SELECT  DISTINCT p.ID as 'ID',\n  p.CreationDate as 'Date',\n  p.Tags as 'Tags'\nFROM Posts as p\nWHERE p.CreationDate BETWEEN '2019-01-01' AND '2019-08-28' AND \n  (\n    p.Tags LIKE '%wordpress%' OR\n    p.Tags LIKE 'yoast%' OR\n    p.Tags LIKE '%woocommerce%' OR\n    p.Tags LIKE 'buddypress%' OR\n    p.Tags LIKE 'bbpress%' OR\n    p.Tags LIKE 'contact-form-7%'\n  )\nORDER BY p.CreationDate DESC"},{"QuerySetId":1097576,"Title":"Non-Open WordPress Questions - 8 Months","Description":null,"QueryBody":"SELECT DISTINCT p.ID AS \"ID\", p.CreationDate AS \"Date\", p.Tags AS \"Tags\" FROM Posts AS p WHERE p.CreationDate BETWEEN '2019-01-01' AND '2019-08-28' AND (p.Tags LIKE '%wordpress%' OR p.Tags LIKE 'yoast%' OR p.Tags LIKE '%woocommerce%' OR p.Tags LIKE 'buddypress%' OR p.Tags LIKE 'bbpress%' OR p.Tags LIKE 'contact-form-7%') AND (NOT p.ClosedDate IS NULL OR NOT p.DeletionDate IS NULL) ORDER BY p.CreationDate DESC","CreationDate":"2019-08-29 07:35:45","validated":false,"QueryBody_Original":"SELECT  DISTINCT p.ID as 'ID',\n  p.CreationDate as 'Date',\n  p.Tags as 'Tags'\nFROM Posts as p\nWHERE p.CreationDate BETWEEN '2019-01-01' AND '2019-08-28' AND \n  (\n    p.Tags LIKE '%wordpress%' OR\n    p.Tags LIKE 'yoast%' OR\n    p.Tags LIKE '%woocommerce%' OR\n    p.Tags LIKE 'buddypress%' OR\n    p.Tags LIKE 'bbpress%' OR\n    p.Tags LIKE 'contact-form-7%'\n  ) AND\n  ( p.ClosedDate IS NOT NULL OR p.DeletionDate IS NOT NULL )\nORDER BY p.CreationDate DESC"},{"QuerySetId":1097579,"Title":"WordPress Questions - 8 Months","Description":null,"QueryBody":"SELECT DISTINCT p.ID AS \"ID\", p.CreationDate AS \"Date\", p.Tags AS \"Tags\" FROM Posts AS p WHERE p.PostTypeId = 1 AND p.CreationDate BETWEEN '2019-01-01' AND '2019-08-28' ORDER BY p.CreationDate DESC","CreationDate":"2019-08-29 07:32:49","validated":false,"QueryBody_Original":"SELECT  DISTINCT p.ID as 'ID',\n  p.CreationDate as 'Date',\n  p.Tags as 'Tags'\nFROM Posts as p\nWHERE p.PostTypeId = 1 AND \n  p.CreationDate BETWEEN '2019-01-01' AND '2019-08-28' \nORDER BY p.CreationDate DESC"},{"QuerySetId":1097650,"Title":"Users with ongoing suspension (fast)","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE DownVotes > 0 AND Reputation = 1 AND Id > 0","CreationDate":"2019-08-29 15:05:48","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], *\nFROM Users\nWHERE DownVotes > 0 AND Reputation = 1 AND Id > 0"},{"QuerySetId":1097679,"Title":"Upvotes and downvotes on HNQ questions","Description":null,"QueryBody":"SELECT HNQed.PostId AS \"Post Link\", HNQed.CreationDate AS HNQedDate, COUNT(CASE WHEN questionVotes.VoteTypeId = 2 THEN 1 ELSE NULL END) AS UpVotes, COUNT(CASE WHEN questionVotes.VoteTypeId = 3 THEN 1 ELSE NULL END) AS DownVotes, COUNT(*) AS TotalVotes, ROUND(CAST(COUNT(CASE WHEN questionVotes.VoteTypeId = 3 THEN 1 ELSE NULL END) AS FLOAT) \/ CAST(COUNT(*) AS FLOAT), 2) AS FractionDownvotes FROM PostHistory AS HNQed JOIN Votes AS questionVotes ON HNQed.PostId = questionVotes.PostId\/* upvote, downvote *\/  WHERE HNQed.PostHistoryTypeId = 52 \/* Question became hot network question *\/ AND questionVotes.VoteTypeId IN (2, 3) GROUP BY HNQed.PostId, HNQed.CreationDate ORDER BY HNQedDate DESC","CreationDate":"2019-08-29 17:09:48","validated":false,"QueryBody_Original":"SELECT \n  HNQed.PostId AS [Post Link],\n  HNQed.CreationDate AS HNQedDate,\n  COUNT(CASE WHEN questionVotes.VoteTypeId = 2 THEN 1 ELSE NULL END) AS UpVotes,\n  COUNT(CASE WHEN questionVotes.VoteTypeId = 3 THEN 1 ELSE NULL END) AS DownVotes,\n  COUNT(*) AS TotalVotes,\n  ROUND( CAST (COUNT(CASE WHEN questionVotes.VoteTypeId = 3 THEN 1 ELSE NULL END) AS float) \/ CAST (COUNT(*) AS float) , 2) AS FractionDownvotes\nFROM PostHistory AS HNQed\nJOIN Votes AS questionVotes ON HNQed.PostId = questionVotes.PostId\nWHERE HNQed.PostHistoryTypeId = 52 -- Question became hot network question\n  AND questionVotes.VoteTypeId IN (2,3) -- upvote, downvote\nGROUP BY HNQed.PostId, HNQed.CreationDate\nORDER BY HNQedDate DESC"},{"QuerySetId":1097757,"Title":"Estimated comment deletion probability by month","Description":null,"QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%M'), 1) AS Month, 100.0 * COUNT(*) \/ (MAX(Id) - MIN(Id)) AS Pdeletion FROM Comments GROUP BY DATEFROMPARTS(TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%M'), 1) HAVING MAX(Id) > 0 AND MIN(Id) > 0 AND MAX(Id) > MIN(Id) + 10 ORDER BY Month","CreationDate":"2019-08-29 19:20:45","validated":false,"QueryBody_Original":"SELECT \n  DATEFROMPARTS(\n    DATEPART(yyyy, CreationDate),\n    DATEPART(mm, CreationDate),\n    1) AS Month,\n  100.0 * COUNT(*) \/ (MAX(Id) - MIN(Id)) AS Pdeletion\nFROM Comments\nGROUP BY\n  DATEFROMPARTS(\n    DATEPART(yyyy, CreationDate),\n    DATEPART(mm, CreationDate),\n    1)\nHAVING MAX(Id) > 0 AND MIN(Id) > 0 AND MAX(Id) > MIN(Id) + 10\nORDER BY Month"},{"QuerySetId":1098175,"Title":"User with both the Gold Java and Gold Kotlin tag badges","Description":null,"QueryBody":"SELECT u.DisplayName FROM (SELECT b.UserId FROM Badges AS b WHERE b.Name = 'java' AND b.Class = 1 AND b.TagBased = 1) AS jb INNER JOIN (SELECT b.UserId FROM Badges AS b WHERE b.Name = 'kotlin' AND b.Class = 1 AND b.TagBased = 1) AS kb ON kb.UserId = jb.UserId INNER JOIN Users AS u ON u.Id = kb.UserId ORDER BY u.DisplayName","CreationDate":"2019-08-30 20:45:15","validated":false,"QueryBody_Original":"SELECT  u.DisplayName\nfrom (SELECT b.UserId \n      from Badges b \n      where b.Name = 'java' \n      and b.Class = 1 \n      and b.TagBased = 1) jb\ninner join (SELECT  b.UserId \n      from Badges b \n      where b.Name = 'kotlin' \n      and b.Class = 1\n      and b.TagBased = 1) kb\n      on kb.UserId = jb.UserId\ninner join Users u on u.Id = kb.UserId\norder by u.DisplayName"},{"QuerySetId":1098236,"Title":"Users with most posts on the site","Description":null,"QueryBody":"SELECT DENSE_RANK() OVER (ORDER BY COUNT(*) DESC) AS Rank, OwnerUserId AS \"User Link\", COUNT(*) AS Count FROM Posts WHERE OwnerUserId > 0 GROUP BY OwnerUserId ORDER BY Count DESC, OwnerUserId LIMIT 1000","CreationDate":"2019-08-30 23:37:46","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  DENSE_RANK() OVER (ORDER BY COUNT(*) DESC) AS Rank,\n  OwnerUserId AS [User Link],\n  COUNT(*) AS Count\nFROM Posts\nWHERE OwnerUserId > 0\nGROUP BY OwnerUserId\nORDER BY Count DESC, OwnerUserId"},{"QuerySetId":1098246,"Title":"People with the gold spring-batch badge","Description":null,"QueryBody":"SELECT u.DisplayName FROM Badges AS b INNER JOIN Users AS u ON u.Id = b.UserId WHERE b.Name = 'spring-batch' AND b.Class = 1 ORDER BY u.DisplayName","CreationDate":"2019-09-03 22:27:27","validated":false,"QueryBody_Original":"SELECT  \n  u.DisplayName\nfrom \n  Badges b inner join Users u on u.Id = b.UserId\nwhere\n  b.Name = 'spring-batch' \n    and b.Class = 1\n  --and b.TagBased = 1\norder by \n  u.DisplayName;"},{"QuerySetId":1098262,"Title":"query tech trend by year","Description":null,"QueryBody":"SELECT CONCAT(TIME_TO_STR(CreationDate, '%Y'), '-', TIME_TO_STR(CreationDate, '%m')) AS dt, COUNT(1) AS num_mentions FROM Posts WHERE Title LIKE '%javascript%' GROUP BY CONCAT(TIME_TO_STR(CreationDate, '%Y'), '-', TIME_TO_STR(CreationDate, '%m'))","CreationDate":"2019-08-31 10:52:25","validated":false,"QueryBody_Original":"SELECT  \n  concat(datepart(year, CreationDate),'-', datepart(month, CreationDate)) as dt,\n  count(1) num_mentions\nfrom \n  Posts \nwhere \n  Title LIKE '%javascript%'\ngroup by \n  concat(datepart(year, CreationDate),'-', datepart(month, CreationDate))"},{"QuerySetId":1098871,"Title":"Highest rep without ever voting","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE UpVotes = 0 AND DownVotes = 0 ORDER BY Reputation DESC, Id LIMIT 110","CreationDate":"2020-10-13 20:36:49","validated":false,"QueryBody_Original":"SELECT  TOP 110 Id AS [User Link], *\nFROM Users\nWHERE UpVotes = 0 AND DownVotes = 0\nORDER BY Reputation DESC, Id"},{"QuerySetId":1098873,"Title":"Highest rep without a golden badge","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE NOT Id IN (SELECT UserId FROM Badges WHERE Class = 1) ORDER BY Reputation DESC, Id LIMIT 100","CreationDate":"2019-09-02 14:18:31","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [User Link], *\nFROM Users\nWHERE Id NOT IN (SELECT UserId FROM Badges WHERE Class=1)\nORDER BY Reputation DESC, Id;"},{"QuerySetId":1099433,"Title":"Longest 0-score answer series of the same user (not ready yet)","Description":null,"QueryBody":"SELECT CASE WHEN Score = 0 AND LAG(Score) OVER (PARTITION BY OwnerUserId ORDER BY Id) = 0 THEN 1 ELSE 0 END AS N, OwnerUserId AS UserId, Id AS PostId FROM Posts WHERE PostTypeId = 2 AND OwnerUserId > 0","CreationDate":"2019-09-03 11:16:53","validated":false,"QueryBody_Original":"SELECT \n  CASE\n    WHEN\n      Score = 0\n      AND\n      LAG(Score) OVER (PARTITION BY OwnerUserId ORDER BY Id) = 0\n    THEN\n      1\n    ELSE\n      0\n  END AS N,\n  OwnerUserId AS UserId,\n  Id AS PostId\nFROM Posts\nWHERE\n  PostTypeId = 2\n  AND\n  OwnerUserId > 0"},{"QuerySetId":1099461,"Title":"Top 10 question askers in Meta Stack Exchange","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS \"Row Number\", OwnerUserId AS \"User Link\", COUNT(PostTypeId) AS \"Questions Count\" FROM Posts WHERE NOT OwnerUserId IS NULL AND OwnerUserId <> -1 AND PostTypeId = 1 \/* Questions *\/ GROUP BY OwnerUserId ORDER BY COUNT(PostTypeId) DESC LIMIT 10","CreationDate":"2019-09-03 12:08:14","validated":false,"QueryBody_Original":"SELECT  TOP 10  \n       ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS [Row Number],\n       OwnerUserId AS [User Link], \n       COUNT(PostTypeId) AS [Questions Count]\nFROM Posts\nWHERE OwnerUserId IS NOT NULL AND OwnerUserId <> -1\n      AND PostTypeId = 1 -- Questions\nGROUP BY OwnerUserId\nORDER BY COUNT(PostTypeId) DESC;"},{"QuerySetId":1099692,"Title":"Posts which had the given tag in the past","Description":null,"QueryBody":"SELECT DISTINCT PostHistory.PostId AS \"Post Link\", Posts.OwnerUserId AS \"User Link\", Posts.CreationDate, Posts.LastActivityDate FROM PostHistory INNER JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistoryTypeId IN (3, 6, 9) AND Text LIKE '%<##tagName?featured##>%' ORDER BY Posts.CreationDate DESC","CreationDate":"2019-09-03 21:52:12","validated":false,"QueryBody_Original":"SELECT  Distinct\nPostHistory.PostId as [Post Link], Posts.OwnerUserId as [User Link], Posts.CreationDate, Posts.LastActivityDate\nFrom PostHistory INNER JOIN Posts\n  ON PostHistory.PostId=Posts.Id\nwhere PostHistoryTypeId in (3,6,9) and Text Like '%<##tagName?featured##>%'\nOrder By Posts.CreationDate DESC"},{"QuerySetId":1099926,"Title":"Top 50 SO Users from Ahmedabad India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%ahmedabad%' OR UPPER(Location) LIKE '%AHMEDABAD%' OR Location LIKE '%ahmedabad%' AND Reputation >= 1500 ORDER BY Reputation DESC LIMIT 50","CreationDate":"2020-09-08 14:07:02","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%ahmedabad%'\n    OR UPPER(Location) LIKE '%AHMEDABAD%'\n    or Location like '%ahmedabad%'\n    AND Reputation >= 1500\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1100456,"Title":"TOP 10 Quality assurance engineers in bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%bangladesh%' OR UPPER(Location) LIKE '%bd') AND AboutMe LIKE '%QA%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2019-09-05 15:01:36","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%bangladesh%'\n    OR UPPER(Location) LIKE '%bd')\n    AND AboutMe like '%QA%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1100675,"Title":"Most common questioner - answerer pairs","Description":null,"QueryBody":"SELECT Q.OwnerUserId AS \"User Link\", A.OwnerUserId AS \"User Link\", COUNT(*) AS Count FROM Posts AS Q, Posts AS A WHERE A.ParentId = Q.Id AND A.OwnerUserId > 0 AND Q.OwnerUserId > 0 AND A.OwnerUserId <> Q.OwnerUserId AND Q.CommunityOwnedDate IS NULL AND A.CommunityOwnedDate IS NULL GROUP BY Q.OwnerUserId, A.OwnerUserId ORDER BY Count DESC, A.OwnerUserId, Q.OwnerUserId LIMIT 1000","CreationDate":"2019-09-05 23:03:23","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  Q.OwnerUserId AS [User Link],\n  A.OwnerUserId AS [User Link],\n  COUNT(*) AS Count\nFROM Posts Q, Posts A\nWHERE\n  A.ParentId = Q.Id\n  AND\n  A.OwnerUserId > 0\n  AND\n  Q.OwnerUserId > 0\n  AND\n  A.OwnerUserId <> Q.OwnerUserId\n  AND\n  Q.CommunityOwnedDate IS NULL\n  AND\n  A.CommunityOwnedDate IS NULL\nGROUP BY Q.OwnerUserId, A.OwnerUserId\nORDER BY Count DESC, A.OwnerUserId, Q.OwnerUserId"},{"QuerySetId":1102483,"Title":"Questions with |title| < 15","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", LENGTH(Title), CreationDate FROM Posts WHERE LENGTH(Title) < 15 ORDER BY CreationDate DESC LIMIT 100","CreationDate":"2019-09-17 22:09:32","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id As [Post Link], LEN(Title), CreationDate\nFROM Posts\nWHERE LEN(Title) < 15\nORDER BY CreationDate DESC"},{"QuerySetId":1102659,"Title":"Questions which were in HNQ and were later closed","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", CONCAT('site:\/\/posts\/', p.Id, '\/revisions') AS \"Revisions Link\", ph1.CreationDate, ph2.CreationDate, DATEDIFF(ph2.CreationDate, ph1.CreationDate) AS Days, DATEDIFF(ph2.CreationDate, ph1.CreationDate) AS Hours, DATEDIFF(ph2.CreationDate, ph1.CreationDate) AS Minutes, DATEDIFF(ph2.CreationDate, ph1.CreationDate) AS Seconds, p.OwnerUserId AS \"User Link\", p.Score, p.Tags FROM Posts AS p INNER JOIN PostHistory AS ph1 ON (p.Id = ph1.PostId AND ph1.PostHistoryTypeId = 52) INNER JOIN PostHistory AS ph2 ON (p.Id = ph2.PostId AND ph2.PostHistoryTypeId = 10 AND (ph1.CreationDate < ph2.CreationDate)) ORDER BY p.ID DESC","CreationDate":"2019-09-10 05:36:24","validated":false,"QueryBody_Original":"SELECT  p.Id AS [Post Link],\n    concat('site:\/\/posts\/',\n          p.Id,\n          '\/revisions'\n          ) [Revisions Link],\n  ph1.CreationDate, ph2.CreationDate,\n  DATEDIFF(day, ph1.CreationDate, ph2.CreationDate) AS Days,\n  DATEDIFF(hour, ph1.CreationDate, ph2.CreationDate) AS Hours,\n  DATEDIFF(minute, ph1.CreationDate, ph2.CreationDate) AS Minutes,\n  DATEDIFF(second, ph1.CreationDate, ph2.CreationDate) AS Seconds,\n  p.OwnerUserId AS [User Link],\n  p. Score, p.Tags\nFROM Posts p INNER JOIN PostHistory ph1 ON (p.Id=ph1.PostId and ph1.PostHistoryTypeId=52)\n  INNER JOIN PostHistory ph2 ON (p.Id=ph2.PostId and ph2.PostHistoryTypeId=10 and (ph1.CreationDate < ph2.CreationDate))\nORDER BY p.ID DESC\n---52 = Question became hot network question\n---10 = Post Closed - post voted to be closed"},{"QuerySetId":1102872,"Title":"Top SO User from Hamburg","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%hamburg%' OR UPPER(Location) LIKE '%HAMBURG%' OR Location LIKE '%Hamburg%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-09-10 18:15:24","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%hamburg%'\n    OR UPPER(Location) LIKE '%HAMBURG%'\n    or Location like '%Hamburg%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1103117,"Title":"Up \/ Down Vote ratio on Posts, by month","Description":null,"QueryBody":"SELECT gVt.zMonth AS \"Month\", (gVt.upVt * 1.0 \/ gVt.dwnVt) * (1750000 \/ 25) AS \"Up\/Down Vote ratio, on Posts (Q+A) -Scaled\", gVt.upVt AS \"Upvote %\", gVt.dwnVt AS \"Downvote %\" FROM (SELECT zMonth = DATEADD(month, DATEDIFF(month, 0, v.CreationDate), 0), upVt = SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), dwnVt = SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) FROM Votes AS v GROUP BY DATEADD(month, DATEDIFF(month, 0, v.CreationDate), 0)) AS gVt WHERE gVt.dwnVt <> 0 ORDER BY gVt.zMonth","CreationDate":"2019-09-11 03:30:02","validated":false,"QueryBody_Original":"SELECT   gVt.zMonth                                  AS [Month]           \n, (gVt.upVt * 1.0 \/ gVt.dwnVt)*(1750000\/25)         AS [Up\/Down Vote ratio, on Posts (Q+A) -Scaled]\n        , gVt.upVt                                  AS [Upvote %]\n        , gVt.dwnVt                                 AS [Downvote %]   \nFROM        (\n    SELECT      zMonth  = DATEADD (month, DATEDIFF (month, 0, v.CreationDate), 0)\n                , upVt  = SUM (CASE  WHEN v.VoteTypeId = 2  THEN 1  ELSE 0  END)\n                , dwnVt = SUM (CASE  WHEN v.VoteTypeId = 3  THEN 1  ELSE 0  END)\n    FROM        Votes v\n    GROUP BY    DATEADD (month, DATEDIFF (month, 0, v.CreationDate), 0)\n) gVt\nWHERE       gVt.dwnVt != 0\nORDER BY    gVt.zMonth"},{"QuerySetId":1103267,"Title":"Top users from Haarlem, The Netherlands","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%haarlem%' OR UPPER(Location) LIKE '%HAARLEM%' OR Location LIKE '%Haarlem%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-09-11 13:51:12","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%haarlem%'\n    OR UPPER(Location) LIKE '%HAARLEM%'\n    or Location like '%Haarlem%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1103674,"Title":"Search users by location and tags","Description":null,"QueryBody":"SELECT MAX(u.Id) AS \"User Link\", MAX(u.Reputation), MAX(p.Tags) FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE Location LIKE '%##Location##%' AND p.Tags LIKE '%##Tags##%' GROUP BY p.OwnerUserId ORDER BY MAX(u.Reputation) DESC","CreationDate":"2019-09-12 00:31:29","validated":false,"QueryBody_Original":"SELECT  MAX(u.Id) [User Link], MAX(u.Reputation), MAX(p.Tags)\nfrom Posts p\nINNER JOIN Users u ON p.OwnerUserId = u.Id\nwhere Location like '%##Location##%'\nAND p.Tags LIKE '%##Tags##%'\nGROUP BY p.OwnerUserId\norder by MAX(u.Reputation) desc"},{"QuerySetId":1104063,"Title":"List of rep1 users by their votes :-)","Description":null,"QueryBody":"SELECT Id AS \"User Link\", * FROM Users WHERE Reputation = 1 AND UpVotes > 0 AND DownVotes > 0 ORDER BY UpVotes + DownVotes DESC, Id","CreationDate":"2019-09-12 14:51:44","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link], *\nFROM Users\nWHERE\n  Reputation = 1\n  AND\n  UpVotes > 0\n  AND\n  DownVotes > 0\nORDER BY UpVotes + DownVotes DESC, Id"},{"QuerySetId":1104339,"Title":"java tag question with at least one answer","Description":null,"QueryBody":"SELECT COUNT(title) FROM Posts WHERE tags LIKE '%java%' AND NOT tags LIKE '%javascript%' AND AnswerCount > 0 AND LOWER(title) LIKE '%?' AND LOWER(title) LIKE '%how%'","CreationDate":"2020-03-10 07:41:56","validated":false,"QueryBody_Original":"SELECT  count(title)\nfrom Posts\nwhere tags like '%java%'\nand tags not like '%javascript%'\nand AnswerCount > 0\nand lower(title) like '%?'\nand lower(title) like '%how%'"},{"QuerySetId":1105015,"Title":"select * from Posts where PostTypeId = 1 and Score > 100","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId = 1 AND Score > 100","CreationDate":"2019-09-13 03:55:03","validated":false,"QueryBody_Original":"SELECT  * from Posts where PostTypeId = 1 and Score > 100"},{"QuerySetId":1105196,"Title":"Hot Meta Post vs Comment Count","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%W') AS \"Week\", COUNT(*) AS \"Comment Count\", CASE WHEN TIME_TO_STR(CreationDate, '%W') > 30 THEN 0 ELSE 1000 END AS \"Hot Meta Posts Enabled\" FROM Comments WHERE CreationDate > '2019-04-01' GROUP BY TIME_TO_STR(CreationDate, '%W') ORDER BY TIME_TO_STR(CreationDate, '%W')","CreationDate":"2019-09-13 12:40:10","validated":false,"QueryBody_Original":"SELECT  \n  DATEPART(wk, CreationDate) AS [Week], \n  COUNT(*) AS [Comment Count],\n  CASE WHEN DATEPART(wk, CreationDate) > 30 THEN 0 ELSE 1000 END AS [Hot Meta Posts Enabled]\nFROM Comments\nWHERE CreationDate > '2019-04-01'\nGROUP BY DATEPART(wk, CreationDate)\nORDER BY DATEPART(wk, CreationDate)"},{"QuerySetId":1105998,"Title":"Most Viewed Bangladeshi Stackoverflow Users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Views DESC) AS \"#\", Id AS \"User Link\", Views, Reputation, LastAccessDate, AboutMe FROM Users WHERE LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%bd%' OR LOWER(Location) LIKE '%dhaka%' ORDER BY Views DESC LIMIT 100","CreationDate":"2019-09-14 21:36:58","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Views DESC) AS [#], \n    Id AS [User Link], \n    Views,\n    Reputation,\n    LastAccessDate,\n    AboutMe  \nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangladesh%'\n    OR LOWER(Location) LIKE '%bd%'\n    OR LOWER(Location) LIKE '%dhaka%'\nORDER BY\n    Views  DESC;"},{"QuerySetId":1106198,"Title":"Mean Score Per User ","Description":null,"QueryBody":"SELECT u.Id AS uid, AVG(q.Score) AS mean_score FROM Users AS u INNER JOIN Posts AS a ON a.OwnerUserId = u.Id INNER JOIN Posts AS q ON a.ParentId = q.Id GROUP BY u.Id ORDER BY AVG(q.Score) DESC","CreationDate":"2019-09-15 02:21:36","validated":false,"QueryBody_Original":"SELECT  u.Id as uid, avg(q.Score) as mean_score from Users u\ninner join Posts a on a.OwnerUserId = u.Id\ninner join Posts q on a.ParentId = q.Id \ngroup by u.Id\norder by avg(q.Score) desc"},{"QuerySetId":1106376,"Title":"TOP SO contributor from Pakistan","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%') ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-09-15 08:16:37","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##CountryName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1108322,"Title":"Questions stating \"I have a question about my post\"","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, DeletionDate FROM Posts WHERE PostTypeId = 1 AND Posts.Body LIKE '%I have a question about my Stack Overflow post%'","CreationDate":"2019-09-17 18:07:41","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Score, DeletionDate from Posts\n  where\n    PostTypeId = 1 and\n    Posts.Body like '%I have a question about my Stack Overflow post%'"},{"QuerySetId":1111022,"Title":"SELECT Id, DisplayName, Location FROM Users WHERE Views > 100 AND UpVotes = 3","Description":null,"QueryBody":"SELECT Id, DisplayName, Location FROM Users WHERE Views > 100 AND views < 999 AND UpVotes = 3","CreationDate":"2019-09-19 23:57:06","validated":false,"QueryBody_Original":"SELECT  Id,\nDisplayName,\nLocation\nFROM Users\nWHERE Views > 100 and views < 999\nAND UpVotes = 3"},{"QuerySetId":1111395,"Title":"Top 50 SO Users from Madhya Pradesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%Madhya pradesh%' OR UPPER(Location) LIKE '%Madhya pradesh%' OR Location LIKE '%Madhya pradesh%' AND Reputation >= 1000 ORDER BY Reputation DESC LIMIT 2500","CreationDate":"2019-09-20 11:44:40","validated":false,"QueryBody_Original":"SELECT  TOP 2500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%Madhya pradesh%'\n    OR UPPER(Location) LIKE '%Madhya pradesh%'\n    or Location like '%Madhya pradesh%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1111658,"Title":"Top 15 SO Users from Madhya Pradesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%Madhya Pradesh%' OR UPPER(Location) LIKE '%Madhya Pradesh%' OR Location LIKE '%Madhya Pradesh%' AND Reputation >= 1000 ORDER BY Reputation DESC LIMIT 15","CreationDate":"2020-11-24 13:36:09","validated":false,"QueryBody_Original":"SELECT  TOP 15\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%Madhya Pradesh%'\n    OR UPPER(Location) LIKE '%Madhya Pradesh%'\n    or Location like '%Madhya Pradesh%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1112431,"Title":"Has the most 0-scored posts","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", COUNT(*) AS Count FROM Posts WHERE Score = 0 AND OwnerUserId > 0 GROUP BY OwnerUserId ORDER BY Count DESC, OwnerUserId LIMIT 100","CreationDate":"2019-09-22 00:20:05","validated":false,"QueryBody_Original":"SELECT  TOP 100 OwnerUserId AS [User Link], COUNT(*) AS Count\nFROM Posts\nWHERE\n  Score = 0\n  AND\n  OwnerUserId > 0\nGROUP BY OwnerUserId\nORDER BY Count DESC, OwnerUserId"},{"QuerySetId":1113008,"Title":"Top 20 Questions with high Score-To-ViewCount Ratio ","Description":null,"QueryBody":"SELECT Questions.Id AS \"Post Link\", Questions.ViewCount, Questions.Score AS Score, ROUND(1.0 * Questions.Score \/ Questions.ViewCount, 8) AS scTovc FROM Posts AS Answers INNER JOIN Posts AS Questions ON Questions.Id = Answers.ParentId WHERE Questions.ViewCount > 30000 GROUP BY Questions.Id, Questions.ViewCount, Questions.Score ORDER BY scTovc DESC LIMIT 20","CreationDate":"2020-01-29 19:14:13","validated":false,"QueryBody_Original":"SELECT  Top 20 Questions.Id AS [Post Link], \n       Questions.ViewCount, \n       Questions.Score as Score,\n       ROUND(1.0 * Questions.Score\/Questions.ViewCount, 8) AS scTovc\n\nFROM Posts AS Answers \n    INNER JOIN Posts AS Questions \n    ON Questions.Id = Answers.ParentId\n    WHERE Questions.ViewCount > 30000\n\nGROUP BY\nQuestions.Id, \nQuestions.ViewCount,\nQuestions.Score\n\nORDER BY scTovc DESC"},{"QuerySetId":1113348,"Title":"select top(1000) * from Posts where AnswerCount = ''","Description":null,"QueryBody":"SELECT * FROM Posts WHERE AnswerCount < 2 AND PostTypeId = 1 AND Tags LIKE '%<wpf>%' AND AcceptedAnswerId IS NULL LIMIT 1000","CreationDate":"2019-09-24 05:45:11","validated":false,"QueryBody_Original":"SELECT  top(1000) * from Posts where AnswerCount < 2 and PostTypeId = 1 and Tags LIKE '%<wpf>%' and AcceptedAnswerId IS NULL"},{"QuerySetId":1113372,"Title":"Questions and number of times they have been referred to as duplicates","Description":null,"QueryBody":"SELECT PostLinks.RelatedPostId AS \"Post Link\", COUNT(*) AS Times FROM Posts INNER JOIN PostHistory ON PostHistory.PostId = Posts.Id INNER JOIN PostLinks ON PostLinks.PostId = Posts.Id WHERE NOT Posts.ClosedDate IS NULL AND PostLinks.LinkTypeId = 3 AND PostHistory.Comment IN ('1', '101') GROUP BY PostLinks.RelatedPostId HAVING COUNT(*) > 25 ORDER BY Times DESC","CreationDate":"2019-09-24 08:18:57","validated":false,"QueryBody_Original":"SELECT  PostLinks.RelatedPostId AS [Post Link],\n       COUNT(*) AS Times\nFROM Posts\nINNER JOIN PostHistory ON PostHistory.PostId = Posts.Id\nINNER JOIN PostLinks ON PostLinks.PostId = Posts.Id\nWHERE Posts.ClosedDate IS NOT NULL\n  AND PostLinks.LinkTypeId = 3\n  AND PostHistory.Comment IN ('1',\n                              '101')\nGROUP BY PostLinks.RelatedPostId\nHAVING COUNT(*) > 25\nORDER BY Times DESC"},{"QuerySetId":1113865,"Title":"Distribution of Views for Users in 2017","Description":null,"QueryBody":"SELECT OwnerUserId, SUM(ViewCount) AS total_views FROM Posts WHERE YEAR(CreationDate) = '2017' GROUP BY OwnerUserId HAVING NOT SUM(ViewCount) IS NULL","CreationDate":"2019-09-25 06:23:41","validated":false,"QueryBody_Original":"SELECT  OwnerUserId, sum(ViewCount) as total_views\nfrom Posts \nwhere YEAR(CreationDate) = '2017'\ngroup by OwnerUserId\nhaving sum(ViewCount) is not Null"},{"QuerySetId":1113904,"Title":"Number of Views, Total Posts and Total Owners for Questions created in 2017","Description":null,"QueryBody":"SELECT SUM(ViewCount) AS total_views, COUNT(DISTINCT id) AS post_cnt, COUNT(DISTINCT OwnerUserId) AS total_users_owners FROM Posts WHERE YEAR(CreationDate) = '2017'","CreationDate":"2019-09-25 07:07:21","validated":false,"QueryBody_Original":"SELECT  sum(ViewCount) as total_views\n, count(distinct id) as post_cnt\n, count(distinct OwnerUserId) as total_users_owners\nfrom Posts \nwhere YEAR(CreationDate) = '2017'"},{"QuerySetId":1113912,"Title":"Number of Views, Total Posts with non-Null views and Total Owners for Questions created in 2017","Description":null,"QueryBody":"SELECT SUM(ViewCount) AS total_views, COUNT(DISTINCT id) AS post_cnt, COUNT(DISTINCT OwnerUserId) AS total_users_owners FROM Posts WHERE YEAR(CreationDate) = '2017' AND NOT ViewCount IS NULL","CreationDate":"2019-09-25 07:10:59","validated":false,"QueryBody_Original":"SELECT  sum(ViewCount) as total_views\n, count(distinct id) as post_cnt\n, count(distinct OwnerUserId) as total_users_owners\nfrom Posts \nwhere YEAR(CreationDate) = '2017'\nand ViewCount is not Null"},{"QuerySetId":1113926,"Title":"Top 10 Tags Associated with Posts Created in 2017","Description":null,"QueryBody":"SELECT Tags, COUNT(DISTINCT Id) AS post_cnt FROM Posts WHERE YEAR(CreationDate) = '2017' GROUP BY Tags ORDER BY post_cnt DESC LIMIT 10","CreationDate":"2019-09-25 07:42:31","validated":false,"QueryBody_Original":"SELECT  Top 10 Tags\n, count(distinct Id) as post_cnt\nfrom Posts\nwhere YEAR(CreationDate) = '2017'\ngroup by Tags\norder by post_cnt desc"},{"QuerySetId":1113928,"Title":"Top 10 Non-Null Tags Associated with Posts Created in 2017","Description":null,"QueryBody":"SELECT Tags, COUNT(DISTINCT Id) AS post_cnt FROM Posts WHERE YEAR(CreationDate) = '2017' AND NOT Tags IS NULL GROUP BY Tags ORDER BY post_cnt DESC LIMIT 10","CreationDate":"2019-09-25 07:44:30","validated":false,"QueryBody_Original":"SELECT  Top 10 Tags\n, count(distinct Id) as post_cnt\nfrom Posts\nwhere YEAR(CreationDate) = '2017'\nand Tags is not Null\ngroup by Tags\norder by post_cnt desc"},{"QuerySetId":1114064,"Title":"Get user list of SO whose bio contains given words","Description":null,"QueryBody":"SELECT \"Id\" AS \"User Link\" FROM Users WHERE AboutMe LIKE '%##SearchText##%' LIMIT 10","CreationDate":"2019-09-25 10:26:59","validated":false,"QueryBody_Original":"SELECT  TOP 10 [Id] AS [User Link]\nFROM Users\nWHERE AboutMe LIKE '%##SearchText##%'"},{"QuerySetId":1114363,"Title":"Number of users from INDIA","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE Location LIKE N'%India%'","CreationDate":"2019-10-19 15:02:44","validated":false,"QueryBody_Original":"SELECT  \ncount(*)\nFROM\n   Users\nWHERE\n   Location like N'%India%'"},{"QuerySetId":1115830,"Title":"new users not accepting any answers","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", SUM(Posts.Score) AS score, COUNT(*) AS Count, u.Reputation, u.CreationDate FROM Posts INNER JOIN Users AS u ON u.id = Posts.OwnerUserId WHERE AcceptedAnswerId IS NULL AND AnswerCount > 0 AND NOT EXISTS(SELECT 1 FROM Posts WHERE OwnerUserId = u.id AND NOT AcceptedAnswerId IS NULL) GROUP BY OwnerUserId, u.Reputation, u.CreationDate HAVING COUNT(*) > 5 ORDER BY SUM(Posts.Score) DESC, u.CreationDate DESC, Count DESC, OwnerUserId LIMIT 100","CreationDate":"2019-09-28 18:42:50","validated":false,"QueryBody_Original":"SELECT  TOP 100 \n  OwnerUserId AS [User Link],\n  SUM(Posts.Score) AS score,\n  COUNT(*) AS Count,\n  u.Reputation,\n  u.CreationDate\nFROM Posts\nINNER JOIN Users u\n  ON u.id = Posts.OwnerUserId\nWHERE\n  AcceptedAnswerId IS NULL AND\n  AnswerCount > 0 AND \n  -- u.Reputation < 100 AND\n  NOT EXISTS (\n    SELECT 1 FROM Posts\n    WHERE OwnerUserId = u.id AND AcceptedAnswerId IS NOT NULL\n  )\nGROUP BY OwnerUserId, u.Reputation, u.CreationDate\nHAVING COUNT(*) > 5\nORDER BY SUM(Posts.Score) DESC,  u.CreationDate DESC, Count DESC, OwnerUserId;"},{"QuerySetId":1116397,"Title":"Top Stackoverflow users in san fran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%francisco%' OR UPPER(Location) = 'CA' ORDER BY Reputation DESC","CreationDate":"2019-09-28 20:30:29","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%francisco%'\n    OR UPPER(Location) = 'CA'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1116484,"Title":"Total Users that Access SOpt in the last 30 days","Description":null,"QueryBody":"SELECT COUNT(*) FROM users WHERE DATEDIFF(CURRENT_TIMESTAMP(), lastaccessdate) < 30","CreationDate":"2019-09-28 16:39:20","validated":false,"QueryBody_Original":"SELECT  count(*) from users where DATEDIFF(day, lastaccessdate, CURRENT_TIMESTAMP) < 30;"},{"QuerySetId":1116555,"Title":"Top-reputation users without a legendary badge","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Id, Reputation FROM Users WHERE NOT Id IN (SELECT UserId FROM Badges WHERE Name = 'Legendary' AND TagBased = 0) ORDER BY Reputation DESC, Id LIMIT 100","CreationDate":"2019-09-28 20:05:28","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Id AS [User Link],\n  Id,\n  Reputation\nFROM Users\nWHERE Id NOT IN (\n  SELECT UserId FROM Badges\n  WHERE\n    Name = 'Legendary'\n    AND\n    TagBased = 0\n)\nORDER BY Reputation DESC, Id"},{"QuerySetId":1116564,"Title":"Crashlytics percentage of answered questions","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName = 'crashlytics'","CreationDate":"2019-09-28 20:45:06","validated":false,"QueryBody_Original":"SELECT  * from Tags where TagName = 'crashlytics'"},{"QuerySetId":1116622,"Title":"Total given downvotes, grouped by floor(log2(Rep))","Description":null,"QueryBody":"SELECT FLOOR(LOG(1.0 * Reputation) \/ LOG(2.0)) AS Log2Rep, SUM(DownVotes) AS DownVotes FROM Users WHERE DownVotes > 0 AND Id > 0 AND Reputation > 1 GROUP BY FLOOR(LOG(1.0 * Reputation) \/ LOG(2.0)) ORDER BY Log2Rep","CreationDate":"2019-09-29 01:40:18","validated":false,"QueryBody_Original":"SELECT \n  FLOOR(LOG(1.0 * Reputation) \/ LOG(2.0)) AS Log2Rep,\n  SUM(DownVotes) AS DownVotes\nFROM Users\nWHERE\n  DownVotes > 0\n  AND\n  Id > 0\n  AND\n  Reputation > 1\nGROUP BY FLOOR(LOG(1.0 * Reputation) \/ LOG(2.0))\nORDER BY Log2Rep"},{"QuerySetId":1116626,"Title":"Emacs users in Frederick, MD","Description":null,"QueryBody":"SELECT * FROM Users WHERE Location LIKE '%Frederick, MD%' ORDER BY Reputation DESC","CreationDate":"2019-09-29 02:48:52","validated":false,"QueryBody_Original":"SELECT  *\nfrom Users\nwhere Location like '%Frederick, MD%'\norder by Reputation desc"},{"QuerySetId":1117397,"Title":"All questions on android things","Description":null,"QueryBody":"SELECT Id, Creationdate, AcceptedAnswerId FROM Posts AS P WHERE (Title LIKE '%androidthings%' OR Title LIKE '%android-things%' OR Title LIKE '%AndroidThings%')","CreationDate":"2019-09-30 11:05:35","validated":false,"QueryBody_Original":"SELECT  Id,Creationdate,AcceptedAnswerId from Posts P WHERE\n(Title like '%androidthings%' or Title like '%android-things%' or Title like '%AndroidThings%')\n;"},{"QuerySetId":1117481,"Title":"Accepted Answers with Code Snippets","Description":null,"QueryBody":"SELECT Tags, Body, Id FROM Posts WHERE id IN (SELECT AcceptedAnswerId FROM Posts WHERE Tags LIKE '%php%' AND Body LIKE '%<code>%')","CreationDate":"2019-09-30 15:15:01","validated":false,"QueryBody_Original":"SELECT  Tags, Body, Id FROM Posts WHERE id IN (SELECT AcceptedAnswerId FROM Posts WHERE Tags LIKE '%php%' AND Body LIKE '%<code>%');"},{"QuerySetId":1117872,"Title":"Accepted Answers with Code Snippets and PHP tag","Description":null,"QueryBody":"SELECT Body, Id, Score, ViewCount, CreationDate FROM Posts WHERE Tags LIKE '%c#%' AND Body LIKE '%<code>%' AND id IN (SELECT AcceptedAnswerId FROM Posts)","CreationDate":"2019-10-03 08:41:02","validated":false,"QueryBody_Original":"SELECT  \n  Body, \n  Id,\n  Score,\n  ViewCount,\n  CreationDate\nFROM \n  Posts \nWHERE\n  Tags LIKE '%c#%' AND \n  Body LIKE '%<code>%' AND\n  id \nIN \n  (SELECT \n     AcceptedAnswerId \n   FROM \n     Posts \n   )\n;"},{"QuerySetId":1118262,"Title":"Comments on Question and Answer Posts","Description":null,"QueryBody":"SELECT P.PostTypeId, P.CommentCount FROM Posts AS P WHERE P.CreationDate >= '2017-01-01 00:00:00' AND P.CreationDate < '2019-01-01 00:00:00' AND P.PostTypeId = 1 OR P.PostTypeId = 2 AND Tags LIKE '%##TagName1##%'","CreationDate":"2020-11-25 19:43:41","validated":false,"QueryBody_Original":"SELECT  P.PostTypeId, P.CommentCount\nFROM Posts P\nWHERE P.CreationDate >= '2017-01-01 00:00:00' \n  AND P.CreationDate < '2019-01-01 00:00:00'\n  AND P.PostTypeId = 1 OR P.PostTypeId = 2\n  AND Tags LIKE '%##TagName1##%'"},{"QuerySetId":1118380,"Title":"SELECT AVG(CAST(Reputation AS FLOAT)) FROM Users;","Description":null,"QueryBody":"SELECT AVG(CAST(Reputation AS FLOAT)) FROM Users","CreationDate":"2019-10-01 19:44:35","validated":false,"QueryBody_Original":"SELECT  AVG(CAST(Reputation AS FLOAT)) FROM Users;"},{"QuerySetId":1118667,"Title":"How many posts were created in 2017?","Description":null,"QueryBody":"SELECT COUNT(Posts.Id) AS count_1 FROM Posts WHERE (Posts.CreationDate >= '20170101' AND Posts.CreationDate < '20180101')","CreationDate":"2019-10-02 03:33:48","validated":false,"QueryBody_Original":"SELECT  count(Posts.Id) AS count_1 FROM Posts \nWHERE (Posts.CreationDate >= '20170101' AND Posts.CreationDate < '20180101')"},{"QuerySetId":1118696,"Title":"What is the distribution of views for users?","Description":null,"QueryBody":"SELECT nested.view_bins, COUNT(nested.view_bins) AS COUNT FROM (SELECT ROUND(Views \/ 100, 2) * 100 AS view_bins FROM Users) AS nested GROUP BY nested.view_bins ORDER BY nested.view_bins","CreationDate":"2019-10-02 05:33:06","validated":false,"QueryBody_Original":"SELECT  nested.view_bins, count(nested.view_bins) as COUNT\nfrom\n(\n  SELECT round(Views \/ 100 , 2 ) * 100 as view_bins\n  from Users\n)as nested\n\ngroup by nested.view_bins\norder by nested.view_bins asc"},{"QuerySetId":1118790,"Title":"For the questions created in 2017, what was the average time (in seconds) between when the question ","Description":null,"QueryBody":"SELECT DATEDIFF(r.CreationDate, q.CreationDate) AS SecondsDiff FROM Posts AS q INNER JOIN Posts AS r ON q.AcceptedAnswerId = r.Id WHERE YEAR(q.CreationDate) = 2017","CreationDate":"2019-10-02 15:14:35","validated":false,"QueryBody_Original":"SELECT \n    DATEDIFF(ss,\n    q.CreationDate,\n    r.CreationDate) AS SecondsDiff\nFROM\n    Posts q\nINNER JOIN Posts r ON q.AcceptedAnswerId = r.Id\nWHERE year(q.CreationDate)=2017"},{"QuerySetId":1118879,"Title":"Top 10 users in Kolhapur","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%kolhapur%' OR UPPER(Location) LIKE '%KOLHAPUR' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2019-10-02 15:23:21","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%kolhapur%'\n    OR UPPER(Location) LIKE '%KOLHAPUR'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1118998,"Title":"Questions and Answers per Week","Description":null,"QueryBody":"SELECT Date AS \"Dates\", SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Questions\", SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Answers\" FROM (SELECT CAST(CreationDate AS DATE) AS \"Date\", PostTypeId FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2 AND DATEDIFF(CURRENT_TIMESTAMP(), CreationDate) < 60) AS Sel GROUP BY Date ORDER BY Date DESC","CreationDate":"2019-10-14 20:46:29","validated":false,"QueryBody_Original":"SELECT \n  Date AS [Dates],\n  SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS [Questions],\n  SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS [Answers]\nFROM\n(\n  SELECT\n    CAST(CreationDate AS Date) AS [Date],\n    PostTypeId\n  FROM\n    Posts\n  WHERE\n    PostTypeId = 1 or PostTypeId = 2\n    and DATEDIFF(day, CreationDate, GETDATE()) < 60\n) AS Sel\nGROUP BY\n  Date\nORDER BY\n  Date DESC"},{"QuerySetId":1119376,"Title":"Check duplicated EmailHashes for Issues","Description":"Duplicated emailhashes with some reputation, probably worth getting merged if validly the same person.","QueryBody":"SELECT u1.EmailHash, u1.Id FROM Users AS u1","CreationDate":"2020-09-28 22:43:04","validated":false,"QueryBody_Original":"SELECT  \n    u1.EmailHash, u1.Id\nFROM\n    Users u1"},{"QuerySetId":1119426,"Title":"List of all Comments on a Post","Description":null,"QueryBody":"SELECT * FROM Comments WHERE Comments.PostId = '##PostId##'","CreationDate":"2019-10-03 09:59:28","validated":false,"QueryBody_Original":"SELECT  *\n  FROM Comments\n WHERE Comments.PostId = '##PostId##'"},{"QuerySetId":1119707,"Title":"Most downvoted questions or answers.","Description":"Most downvoted questions or answers. PostTypeId for questions is 1, answers 2. Feel free to improve the query.","QueryBody":"SELECT Posts.CreationDate AS \"Creation Date\", Posts.OwnerUserId AS \"User Link\", Posts.Id AS \"Post\/Answer Link\", Posts.Score AS \"Score\" FROM Posts WHERE PostTypeId = 1 AND CommunityOwnedDate IS NULL GROUP BY CreationDate, OwnerUserId, Id, Score ORDER BY \"Score\" LIMIT 50","CreationDate":"2020-07-04 17:51:29","validated":false,"QueryBody_Original":"SELECT \n  TOP 50\n  Posts.CreationDate as [Creation Date],\n  Posts.OwnerUserId as [User Link],\n  Posts.Id as [Post\/Answer Link],\n  Posts.Score as [Score]\nFROM\n  Posts\nWHERE\n  PostTypeId = 1 and CommunityOwnedDate is null\nGROUP BY\n  CreationDate, OwnerUserId, Id, Score\nORDER BY\n  [Score] ASC"},{"QuerySetId":1119855,"Title":"Get the most recent posts (Like on SO home page)","Description":null,"QueryBody":"SELECT Id AS Title, Tags, Score, ViewCount, AnswerCount, FavoriteCount, LastActivityDate, OwnerUserId FROM posts WHERE ParentId IS NULL AND DeletionDate IS NULL ORDER BY LastActivityDate DESC LIMIT 50","CreationDate":"2019-10-04 00:09:53","validated":false,"QueryBody_Original":"SELECT  TOP 50\n      Id\n      Title,\n      Tags,\n      Score,\n      ViewCount,\n      AnswerCount,\n      FavoriteCount,\n      LastActivityDate,\n      OwnerUserId\n    FROM posts\n    WHERE ParentId IS NULL AND DeletionDate IS NULL\n    ORDER BY LastActivityDate DESC"},{"QuerySetId":1120196,"Title":"Java questions with accepter answer scored less then one one of the unaccepted","Description":null,"QueryBody":"SELECT question.Id AS \"Post Link\", question.Tags AS \"Tags\", accepted_answer.Id AS \"Post Link\", accepted_answer.Score AS \"Accepted answer score\", MAX(answers.Score) AS \"Max answer score\" FROM Posts AS question INNER JOIN Posts AS accepted_answer ON question.AcceptedAnswerId = accepted_answer.Id INNER JOIN Posts AS answers ON question.Id = answers.ParentId WHERE question.PostTypeId = 1 AND question.Tags LIKE '%java%' AND NOT question.Tags LIKE '%javascript%' AND NOT question.Tags LIKE '%android%' AND NOT question.AcceptedAnswerId IS NULL AND answers.Id <> accepted_answer.Id AND question.Body LIKE '%Exception in thread%' GROUP BY question.Id, question.Tags, accepted_answer.Id, accepted_answer.Score HAVING accepted_answer.Score < MAX(answers.Score) ORDER BY MAX(answers.Score) DESC LIMIT 20","CreationDate":"2019-10-04 13:31:57","validated":false,"QueryBody_Original":"SELECT  TOP(20)\n  question.Id as [Post Link], \n  question.Tags as [Tags],\n  accepted_answer.Id as [Post Link],\n  accepted_answer.Score as [Accepted answer score],\n  MAX(answers.Score) as [Max answer score]\nFROM Posts question\nINNER JOIN Posts accepted_answer ON question.AcceptedAnswerId = accepted_answer.Id\nINNER JOIN Posts answers ON question.Id = answers.ParentId\nWHERE question.PostTypeId = 1\nAND question.Tags LIKE '%java%'\nAND question.Tags NOT LIKE '%javascript%'\nAND question.Tags NOT LIKE '%android%'\nAND question.AcceptedAnswerId IS NOT NULL\nAND answers.Id <> accepted_answer.Id\nAND question.Body LIKE '%Exception in thread%'\nGROUP BY question.Id, question.Tags, accepted_answer.Id, accepted_answer.Score\nHAVING accepted_answer.Score < MAX(answers.Score)\nORDER BY MAX(answers.Score) DESC"},{"QuerySetId":1120404,"Title":"Select TagName From Tags Order By Count Desc","Description":null,"QueryBody":"SELECT TagName FROM Tags ORDER BY Count DESC","CreationDate":"2019-10-04 17:53:50","validated":false,"QueryBody_Original":"SELECT  TagName From Tags Order By Count Desc"},{"QuerySetId":1120719,"Title":"Number of answers accepted on different days","Description":null,"QueryBody":"SELECT Votes.CreationDate, COUNT(*) AS Num FROM Votes WHERE Votes.VoteTypeId = 1 GROUP BY Votes.CreationDate","CreationDate":"2019-10-05 03:05:04","validated":false,"QueryBody_Original":"SELECT  Votes.CreationDate,\n       COUNT(*) AS Num\nFROM Votes\nWHERE Votes.VoteTypeId = 1\nGROUP BY Votes.CreationDate"},{"QuerySetId":1121145,"Title":"select * from Posts where Posts.OwnerUserId = 2836371;","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Posts.OwnerUserId = 2836371","CreationDate":"2019-10-06 12:07:31","validated":false,"QueryBody_Original":"SELECT  * from Posts where Posts.OwnerUserId = 2836371;"},{"QuerySetId":1121312,"Title":"Draft: Users with SkillName in \"AboutMe\"","Description":null,"QueryBody":"SELECT DISTINCT u.Id AS \"User Link\", CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.DisplayName, u.Location, u.WebsiteUrl, u.AboutMe, u.Views, u.Reputation, u.UpVotes, u.DownVotes, u.EmailHash FROM Users AS u WHERE UPPER(u.AboutMe) LIKE UPPER('%##SkillName##%') AND UPPER(Location) LIKE UPPER('%##Location##%')","CreationDate":"2019-10-24 12:56:07","validated":false,"QueryBody_Original":"SELECT  Distinct u.Id AS [User Link],\n                            CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link],\n                            u.DisplayName,\n                            u.Location,\n                            u.WebsiteUrl,\n                            u.AboutMe,\n                            u.Views,\n                            u.Reputation,\n                            u.UpVotes,\n                            u.DownVotes,\n                            u.EmailHash                            \nFROM Users u\nWHERE\n     Upper(u.AboutMe) LIKE Upper('%##SkillName##%') AND                          \n     Upper(Location) LIKE Upper('%##Location##%');"},{"QuerySetId":1122216,"Title":"Top bounty givers on IPS","Description":null,"QueryBody":"SELECT SUM(v.BountyAmount) AS TotalBounty, MAX(u.DisplayName) FROM Votes AS v INNER JOIN Users AS u ON v.UserId = u.Id WHERE v.VoteTypeId = 8 \/* BountyStart *\/ GROUP BY (u.Id) ORDER BY TotalBounty DESC LIMIT 100","CreationDate":"2019-10-09 15:07:55","validated":false,"QueryBody_Original":"SELECT  TOP 100 SUM(v.BountyAmount) as TotalBounty, MAX(u.DisplayName)\n  FROM Votes AS v\n  INNER JOIN Users AS u ON v.UserId = u.Id\n  WHERE v.VoteTypeId = 8 -- BountyStart\n  GROUP BY (u.Id)\n  ORDER BY TotalBounty DESC"},{"QuerySetId":1123862,"Title":"SELECT Count(*) FROM Tags WHERE Tags.Count >500;","Description":null,"QueryBody":"SELECT COUNT(*) FROM Tags WHERE Tags.Count > 5000","CreationDate":"2019-10-11 06:29:26","validated":false,"QueryBody_Original":"SELECT  Count(*) FROM Tags WHERE Tags.Count >5000;"},{"QuerySetId":1124562,"Title":"Questions with the greatest number of answers","Description":null,"QueryBody":"SELECT Question.Id AS \"Question ID\", COUNT(*) AS \"Number of answers\", Question.Title AS \"Question Title\" FROM Posts AS Answer JOIN Posts AS Question ON Question.Id = Answer.ParentId WHERE Answer.PostTypeId = 2 GROUP BY Question.Id, Question.Title ORDER BY COUNT(*) DESC","CreationDate":"2019-10-13 17:03:26","validated":false,"QueryBody_Original":"SELECT \n    Question.Id as [Question ID],\n    count(*) as [Number of answers],\n    Question.Title as [Question Title]\nfrom\n    Posts Answer\n    join Posts Question on Question.Id = Answer.ParentId\nwhere Answer.PostTypeId = 2\ngroup by Question.Id, Question.Title\norder by count(*) desc;"},{"QuerySetId":1124704,"Title":"Strongest users on both the MathSE and PSE","Description":null,"QueryBody":"SELECT U1.DisplayName AS MathUserName, U1.Id AS MathUserId, U1.Reputation AS MathReputation, U2.DisplayName AS PhysicsUserName, U2.Id AS PhysicsUserId, U2.Reputation AS PhysicsReputation FROM \"StackExchange.Math\".dbo.Users AS U1, \"StackExchange.Physics\".dbo.Users AS U2 WHERE U1.AccountId = U2.AccountId ORDER BY CASE WHEN U1.Reputation > U2.Reputation THEN U2.Reputation ELSE U1.Reputation END DESC, U1.AccountId LIMIT 100","CreationDate":"2019-10-14 01:01:49","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  U1.DisplayName AS MathUserName,\n  U1.Id AS MathUserId,\n  U1.Reputation AS MathReputation,\n  U2.DisplayName AS PhysicsUserName,\n  U2.Id AS PhysicsUserId,\n  U2.Reputation AS PhysicsReputation\nFROM [StackExchange.Math].dbo.Users U1, [StackExchange.Physics].dbo.Users U2\nWHERE\n  U1.AccountId = U2.AccountId\nORDER BY\n  CASE\n    WHEN U1.Reputation > U2.Reputation THEN U2.Reputation\n    ELSE U1.Reputation\n  END DESC, U1.AccountId;"},{"QuerySetId":1125052,"Title":"Python Developers with LinkedIn link (\"About me\" contains '%Python%')","Description":null,"QueryBody":"SELECT DISTINCT u.Id AS \"User Link\", u.Reputation, u.Location, u.WebsiteUrl FROM Users AS u WHERE u.AboutMe LIKE '%warehouse%' AND u.WebsiteUrl LIKE '%linkedin%' ORDER BY u.Reputation DESC","CreationDate":"2020-01-16 02:46:28","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  u.Id [User Link], \n  u.Reputation, \n  u.Location,\n  u.WebsiteUrl\n\nFROM Users u\n  \nWHERE \n  u.AboutMe LIKE '%warehouse%'\n  AND u.WebsiteUrl LIKE '%linkedin%'  \n  \nORDER BY \n  u.Reputation DESC;"},{"QuerySetId":1125720,"Title":"Amount of comments per month in the past few months","Description":null,"QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(c.CreationDate, '%y'), TIME_TO_STR(c.CreationDate, '%M'), 15), COUNT(*) FROM Comments AS c GROUP BY TIME_TO_STR(c.CreationDate, '%y'), TIME_TO_STR(c.CreationDate, '%M') ORDER BY TIME_TO_STR(c.CreationDate, '%y'), TIME_TO_STR(c.CreationDate, '%M')","CreationDate":"2019-10-15 14:33:49","validated":false,"QueryBody_Original":"SELECT  DATEFROMPARTS(DATEPART(yy,c.CreationDate), DATEPART(mm,c.CreationDate), 15), COUNT(*)\nFROM Comments c\nGROUP BY DATEPART(yy,c.CreationDate), DATEPART(mm,c.CreationDate)\nORDER BY DATEPART(yy,c.CreationDate), DATEPART(mm,c.CreationDate)"},{"QuerySetId":1126327,"Title":"All my posts (with title and id)","Description":null,"QueryBody":"SELECT CreationDate, Title, Id FROM Posts WHERE OwnerUserId = 2836621","CreationDate":"2019-10-16 16:57:54","validated":false,"QueryBody_Original":"SELECT \n   CreationDate,\n   Title, \n   Id\nFROM Posts\nWHERE\n  OwnerUserId=2836621"},{"QuerySetId":1126425,"Title":"Fechada por n\u00e3o estar em portugu\u00eas v1","Description":null,"QueryBody":"SELECT Id, Id AS \"Post Link\" FROM Posts WHERE PostTypeId = 1 AND NOT ClosedDate IS NULL ORDER BY Id DESC LIMIT 100","CreationDate":"2019-10-16 18:45:06","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id, Id as [Post Link]\nFROM\n    Posts\nWHERE\n    PostTypeId = 1 and\n    ClosedDate is not null\nORDER by Id DESC"},{"QuerySetId":1126426,"Title":"Fechada por n\u00e3o estar em portugu\u00eas v2","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM PostHistory WHERE PostHistoryTypeId = 10 AND Comment = '102' LIMIT 100","CreationDate":"2019-10-16 20:05:08","validated":false,"QueryBody_Original":"SELECT  TOP 100 PostId AS [Post Link]\nFROM\n    PostHistory\nwhere PostHistoryTypeId=10 AND Comment='102'"},{"QuerySetId":1126493,"Title":"Posts deleted by VoteType 4","Description":null,"QueryBody":"SELECT *, 'site:\/\/posts\/' + CAST(PostId AS TEXT) + '\/revisions' AS Link FROM Votes WHERE VoteTypeId = 4 ORDER BY Id DESC","CreationDate":"2019-10-16 23:28:56","validated":false,"QueryBody_Original":"SELECT  *, 'site:\/\/posts\/' + CAST(PostId AS VARCHAR(MAX)) + '\/revisions' AS Link\nFROM Votes\nWHERE VoteTypeId = 4\nORDER BY Id DESC;"},{"QuerySetId":1126518,"Title":"Get user comments by tag","Description":null,"QueryBody":"SELECT Comments.Id AS \"Comment Link\", POSTS.Tags, Comments.Score, Text FROM Comments INNER JOIN POSTS ON Comments.PostId = POSTS.Id WHERE UserId = '##UserId##' AND POSTS.tags LIKE '%##Tag##%' ORDER BY Comments.CreationDate DESC","CreationDate":"2019-10-17 00:05:00","validated":false,"QueryBody_Original":"SELECT  Comments.Id AS [Comment Link], POSTS.Tags, Comments.Score, Text \n  FROM Comments INNER JOIN\n       POSTS ON Comments.PostId = POSTS.Id\n WHERE UserId = '##UserId##' AND\n       POSTS.tags LIKE '%##Tag##%'\n ORDER BY Comments.CreationDate DESC"},{"QuerySetId":1127049,"Title":"Is there a SEDE query that finds all questions that I asked and answered myself?","Description":"http:\/\/meta.stackexchange.com\/questions\/290862\/is-there-a-sede-query-that-finds-all-questions-that-i-asked-and-answered-myself","QueryBody":"SELECT a.id AS \"Post Link\", a.OwnerUserId AS \"User Link\", q.score AS \"Question Score\", a.score AS \"Answer Score\" FROM posts AS q INNER JOIN posts AS a ON a.parentid = q.id WHERE q.owneruserid = a.owneruserid AND a.OwnerUserId = 28591 ORDER BY a.score DESC","CreationDate":"2019-10-17 19:29:15","validated":false,"QueryBody_Original":"SELECT  \n  a.id as [Post Link], \n  a.OwnerUserId as [User Link],\n  q.score as [Question Score],\n  a.score as [Answer Score]\nfrom posts q \ninner join posts a on a.parentid = q.id\nwhere q.owneruserid = a.owneruserid\nand a.OwnerUserId = 28591\norder by a.score DESC"},{"QuerySetId":1127437,"Title":"select top 50000 * from posts where posts.ViewCount > 1000000 ORDER BY posts.ViewCount","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE posts.ViewCount > 500000 AND posts.ViewCount < 1000000","CreationDate":"2019-10-18 15:15:08","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where posts.ViewCount > 500000 and posts.ViewCount <1000000"},{"QuerySetId":1127581,"Title":"For questions created in 2017, avg seconds between creation and accepted answer provided","Description":null,"QueryBody":"SELECT * FROM Posts, Comments WHERE Posts.AcceptedAnswerId = Comments.Id AND YEAR(Posts.CreationDate) = 2017","CreationDate":"2019-10-18 18:00:45","validated":false,"QueryBody_Original":"SELECT  * \nFROM Posts, Comments\nWHERE Posts.AcceptedAnswerId = Comments.Id \nAND YEAR(Posts.CreationDate) = 2017;"},{"QuerySetId":1127678,"Title":"Median reputation of people who have received question votes","Description":null,"QueryBody":"SELECT DISTINCT PERCENTILE_DISC(0.5) WITHIN GROUP (ORDER BY Reputation) OVER () AS \"Median reputation\" FROM Users AS u WHERE u.Id IN (SELECT DISTINCT OwnerUserId FROM Posts AS q JOIN Votes AS v ON PostId = q.Id WHERE PostTypeId = 1 AND VoteTypeId = 3)","CreationDate":"2019-10-22 00:46:30","validated":false,"QueryBody_Original":"SELECT  distinct percentile_disc(0.5) \n         within group (order by Reputation)\n         over () \"Median reputation\"\nfrom Users u\nwhere u.Id in (SELECT distinct OwnerUserId\n               from Posts q\n                    join Votes v on PostId = q.Id\n               where PostTypeId = 1\n                     and VoteTypeId = 3); --*\/"},{"QuerySetId":1127806,"Title":"Count of downvoted and closed questions with reasons","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%Y') * 100 + TIME_TO_STR(p.CreationDate, '%W') AS yearweek, COUNT(DISTINCT p.Id) AS TotalCount, COUNT(DISTINCT p.ClosedDate) AS ClosedCount, COUNT(DISTINCT CASE WHEN ph.comment = '101' THEN p.Id ELSE NULL END) AS DuplicateCount, COUNT(DISTINCT CASE WHEN ph.comment = '102' THEN p.Id ELSE NULL END) AS OffTopicCount, COUNT(DISTINCT CASE WHEN ph.comment = '103' THEN p.Id ELSE NULL END) AS UnclearCount, COUNT(DISTINCT CASE WHEN ph.comment = '104' THEN p.Id ELSE NULL END) AS TooBroadCount, COUNT(DISTINCT CASE WHEN ph.comment = '105' THEN p.Id ELSE NULL END) AS OpinionBasedCount FROM Posts AS p INNER JOIN PostHistory AS ph ON p.Id = ph.PostId WHERE p.PostTypeId = 1 AND p.CreationDate >= '2019-09-01' GROUP BY TIME_TO_STR(p.CreationDate, '%Y') * 100 + TIME_TO_STR(p.CreationDate, '%W')","CreationDate":"2019-10-19 04:01:59","validated":false,"QueryBody_Original":"SELECT  DATEPART(year, p.CreationDate)*100+DATEPART(week, p.CreationDate) AS yearweek,\nCOUNT(DISTINCT p.Id) AS TotalCount,\nCOUNT(DISTINCT p.ClosedDate) AS ClosedCount,\nCOUNT(DISTINCT CASE WHEN ph.comment='101' THEN p.Id ELSE NULL END) AS DuplicateCount,\nCOUNT(DISTINCT CASE WHEN ph.comment='102' THEN p.Id ELSE NULL END) AS OffTopicCount,\nCOUNT(DISTINCT CASE WHEN ph.comment='103' THEN p.Id ELSE NULL END) AS UnclearCount,\nCOUNT(DISTINCT CASE WHEN ph.comment='104' THEN p.Id ELSE NULL END) AS TooBroadCount,\nCOUNT(DISTINCT CASE WHEN ph.comment='105' THEN p.Id ELSE NULL END) AS OpinionBasedCount\nFROM Posts p\nINNER JOIN PostHistory ph ON p.Id = ph.PostId\nWHERE p.PostTypeId = 1 AND p.CreationDate >= '2019-09-01'\nGROUP BY DATEPART(year, p.CreationDate)*100+DATEPART(week, p.CreationDate)"},{"QuerySetId":1128532,"Title":"Find comments that might be no longer needed","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\" FROM Posts AS p JOIN Comments AS c ON c.PostId = p.Id WHERE DATEDIFF(c.CreationDate, p.LastEditDate) >= 0 AND c.Text LIKE '%##KeywordsInComment##%' AND NOT EXISTS(SELECT ph.PostId FROM PostHistory AS ph WHERE ph.PostHistoryTypeId = 10 AND ph.PostId = p.Id) \/* not closed *\/ GROUP BY p.Id ORDER BY p.Id DESC","CreationDate":"2019-10-20 07:04:59","validated":false,"QueryBody_Original":"SELECT  \n  p.id as [Post Link]\nFROM Posts p\n  JOIN Comments c ON c.PostId = p.Id\nWHERE DATEDIFF(day, p.LastEditDate, c.CreationDate) >= 0\n  AND c.Text LIKE '%##KeywordsInComment##%'\n  AND NOT EXISTS(\n    SELECT ph.PostId\n    FROM PostHistory ph\n    WHERE ph.PostHistoryTypeId = 10 AND ph.PostId = p.Id\n  ) -- not closed\nGROUP BY p.Id\nORDER by p.Id DESC"},{"QuerySetId":1129086,"Title":"How many posts created in 2017?","Description":null,"QueryBody":"SELECT COUNT(CreationDate) FROM Posts WHERE CreationDate BETWEEN '2017-01-01' AND '2017-12-31'","CreationDate":"2019-10-21 05:08:09","validated":false,"QueryBody_Original":"SELECT  COUNT(CreationDate)\nFROM Posts\nWHERE CreationDate BETWEEN '2017-01-01' AND '2017-12-31'"},{"QuerySetId":1129614,"Title":"Votes on the SE apology post","Description":null,"QueryBody":"SELECT CreationDate, SUM(SUM(CASE WHEN VoteTypeID = 2 THEN 1 WHEN VoteTypeID = 3 THEN -1 END)) OVER (ORDER BY CreationDate) AS Score FROM Votes WHERE PostId = 334248 AND (VoteTypeID = 2 OR VoteTypeID = 3) GROUP BY CreationDate ORDER BY CreationDate","CreationDate":"2019-10-21 16:02:52","validated":false,"QueryBody_Original":"SELECT \nCreationDate, \n\/*SUM(\n  CASE WHEN VoteTypeID = 2 THEN 1 ELSE 0 END\n) Upvotes,\nSUM(\n  CASE WHEN VoteTypeID = 3 THEN 1 ELSE 0 END\n) Downvotes,\nSUM(\n  CASE \n    WHEN VoteTypeID = 2 THEN 1 \n    WHEN VoteTypeID = 3 THEN -1 \n  END\n) ScoreDelta,*\/\nSUM(\n  SUM(\n  CASE \n      WHEN VoteTypeID = 2 THEN 1 \n      WHEN VoteTypeID = 3 THEN -1 \n    END\n  )) \n  OVER (ORDER BY CreationDate) AS Score\nFROM\n  Votes\nWHERE\n  PostId = 334248 AND (VoteTypeID = 2 OR VoteTypeID = 3)\nGROUP BY\n  CreationDate\nORDER BY CreationDate"},{"QuerySetId":1130190,"Title":"Search 'cite sources' Comments - 2019","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", CreationDate, Text FROM Comments WHERE LOWER(Text) LIKE '%bogus%' AND LOWER(Text) LIKE '%sarasvati%' AND CreationDate BETWEEN '2014-01-01' AND '2019-12-31' ORDER BY CreationDate DESC","CreationDate":"2019-11-25 20:19:09","validated":false,"QueryBody_Original":"SELECT  PostId [Post Link], CreationDate, Text\nFROM Comments\nWHERE LOWER(Text) like '%bogus%' and LOWER(Text) like '%sarasvati%' and\nCreationDate between '2014-01-01' and '2019-12-31'\nORDER BY CreationDate DESC"},{"QuerySetId":1130191,"Title":"examples that have a cli command","Description":null,"QueryBody":"SELECT P.Id, P.Tags FROM Posts AS P WHERE P.AnswerCount > 0 AND P.Tags LIKE '%##azure-cli##%' LIMIT 600","CreationDate":"2019-10-22 05:00:15","validated":false,"QueryBody_Original":"SELECT  TOP 600 P.Id , P.Tags\nFROM Posts as P\nWHERE P.AnswerCount > 0\nAND\nP.Tags LIKE '%##azure-cli##%'\n-- OR P.Tags LIKE '%##ORTag2##%'  --Enter garbage or comment out if not interested\n-- OR P.Tags LIKE '%##ORTag3##%'  --Enter garbage or comment out if not interested\n--AND P.CreationDate > '2013-12-21'\n--ORDER BY P.CreationDate DESC"},{"QuerySetId":1131316,"Title":"Who downvoted me? The Sherlock Holmes approach","Description":null,"QueryBody":"SELECT p.id, p.body, a.* FROM posts AS p INNER JOIN posts AS a ON p.id = a.parentid WHERE p.id = 30439064","CreationDate":"2019-10-23 14:17:30","validated":false,"QueryBody_Original":"SELECT  p.id\n  , p.body\n  , a.*\nfrom posts p\n  inner join posts a\n    on p.id = a.parentid\nwhere p.id = 30439064"},{"QuerySetId":1131583,"Title":"Number of up- and downvotes per day - 2","Description":null,"QueryBody":"SELECT CreationDate, SUM(CASE VoteTypeId WHEN 2 THEN 1 ELSE 0 END) AS \"Upvotes\", SUM(CASE VoteTypeId WHEN 3 THEN 1 ELSE 0 END) AS \"Downvotes\" FROM Votes WHERE CreationDate >= '2019-09-01' AND VoteTypeId IN (2, 3) GROUP BY CreationDate ORDER BY CreationDate","CreationDate":"2019-10-23 18:40:24","validated":false,"QueryBody_Original":"SELECT  CreationDate,\n  SUM(CASE VoteTypeId WHEN 2 THEN 1 ELSE 0 END) AS 'Upvotes',\n  SUM(CASE VoteTypeId WHEN 3 THEN 1 ELSE 0 END) AS 'Downvotes'\n  FROM Votes\n  WHERE CreationDate >= '2019-09-01'\n    AND VoteTypeId IN (2, 3)\n  GROUP BY CreationDate\n  ORDER BY CreationDate"},{"QuerySetId":1132602,"Title":"Top StackOverflow users in Jakarta","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%bangladesh%' OR LOWER(Location) LIKE '%bangladesh%') AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-10-24 21:20:52","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (\n        LOWER(Location) LIKE '%bangladesh%'\n        OR LOWER(Location) like '%bangladesh%'\n    )\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1132875,"Title":"Number of Posts created in 2017","Description":null,"QueryBody":"SELECT SUM(CAST(X.time_diff AS INT)) \/ COUNT_BIG(X.time_diff) AS avg FROM (SELECT p.Id, p.CreationDate AS question_date, pt.CreationDate AS answer_date, ABS(DATEDIFF(p.CreationDate, pt.CreationDate)) AS time_diff FROM Posts AS p JOIN Posts AS pt ON p.AcceptedAnswerId = pt.id WHERE YEAR(p.CreationDate) = 2017) AS X","CreationDate":"2019-10-25 00:38:48","validated":false,"QueryBody_Original":"SELECT  SUM(CONVERT(BIGINT, X.time_diff))\/count_big(X.time_diff) as avg\nfrom (SELECT p.Id, p.CreationDate as question_date , pt.CreationDate as answer_date, abs(datediff(s, pt.CreationDate, p.CreationDate))  as time_diff\nfrom Posts p\njoin Posts pt on p.AcceptedAnswerId = pt.id\nwhere year (p.CreationDate) = 2017\n)X"},{"QuerySetId":1134801,"Title":"Deleted users with at least one post","Description":null,"QueryBody":"SELECT DISTINCT OwnerDisplayName FROM Posts WHERE OwnerUserId IS NULL ORDER BY OwnerDisplayName","CreationDate":"2019-10-26 08:51:28","validated":false,"QueryBody_Original":"SELECT  DISTINCT OwnerDisplayName \nFROM Posts\nWHERE OwnerUserId IS  NULL\nORDER BY OwnerDisplayName"},{"QuerySetId":1134806,"Title":"Number of posts by deleted users","Description":null,"QueryBody":"SELECT OwnerDisplayName, COUNT(Id) FROM Posts WHERE OwnerUserId IS NULL GROUP BY OwnerDisplayName ORDER BY COUNT(Id) DESC","CreationDate":"2019-10-26 08:55:00","validated":false,"QueryBody_Original":"SELECT  OwnerDisplayName, Count(Id)\nFROM Posts\nWHERE OwnerUserId IS  NULL\nGROUP BY OwnerDisplayName\nORDER BY Count(Id) DESC"},{"QuerySetId":1134857,"Title":"Users offering the most reputation through bounties","Description":null,"QueryBody":"SELECT RANK() OVER (ORDER BY SUM(BountyAmount) DESC) AS \"Rank\", UserId AS \"User Link\", COUNT(*) AS \"Number of bounties\", SUM(BountyAmount) AS \"Reputation offered\", CASE WHEN Reputation = 1 THEN NULL ELSE ROUND(100.0 * SUM(BountyAmount) \/ (Reputation + SUM(BountyAmount)), 2) END AS \"Percentage\" FROM Votes AS v INNER JOIN Users AS u ON v.UserId = u.Id WHERE VoteTypeId = 8 \/* BountyStart *\/ AND UserId <> -1 \/* Exclude Community user *\/ GROUP BY UserId, Reputation ORDER BY SUM(BountyAmount) DESC","CreationDate":"2020-09-11 19:40:19","validated":false,"QueryBody_Original":"SELECT  RANK() OVER (ORDER BY SUM(BountyAmount) DESC) AS 'Rank',\n  UserId AS [User Link],\n  COUNT(*) AS 'Number of bounties',\n  SUM(BountyAmount) AS 'Reputation offered',\n  IIF(Reputation = 1, NULL, ROUND(100.0 * SUM(BountyAmount) \/\n    (Reputation + SUM(BountyAmount)), 2)) AS 'Percentage'\n  FROM Votes AS v\n  INNER JOIN Users AS u ON v.UserId = u.Id\n  WHERE VoteTypeId = 8 -- BountyStart\n    AND UserId != -1 -- Exclude Community user\n  GROUP BY UserId, Reputation\n  ORDER BY SUM(BountyAmount) DESC"},{"QuerySetId":1134858,"Title":"select top 10 from Posts","Description":null,"QueryBody":"SELECT * FROM Posts WHERE ViewCount > 31000 AND ViewCount <= 33000 ORDER BY ViewCount DESC","CreationDate":"2019-11-02 03:10:37","validated":false,"QueryBody_Original":"SELECT  * from Posts \nwhere ViewCount > 31000 and ViewCount <= 33000\nOrder by ViewCount desc"},{"QuerySetId":1135299,"Title":"Necromancer-winning answers on questions with zero or negative score","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", a.OwnerUserId AS \"User Link\", q.Score AS QuestionScore, a.Score AS AnswerScore, q.CreationDate AS QuestionCreationDate, a.CreationDate AS AnswerCreationDate, DATEDIFF(a.CreationDate, q.CreationDate) AS DateDifference FROM Posts AS a JOIN Posts AS q ON q.Id = a.ParentId WHERE a.Score >= 5 AND q.Score <= 0 AND DATEDIFF(a.CreationDate, q.CreationDate) >= 60 ORDER BY q.Score","CreationDate":"2019-10-26 22:18:11","validated":false,"QueryBody_Original":"SELECT \n  q.Id AS [Post Link],\n  a.OwnerUserId AS [User Link],\n  q.Score AS QuestionScore,\n  a.Score AS AnswerScore,\n  q.CreationDate AS QuestionCreationDate,\n  a.CreationDate AS AnswerCreationDate,\n  DATEDIFF(day,q.CreationDate,a.CreationDate) AS DateDifference\nFROM Posts a\nJOIN Posts q ON q.Id = a.ParentId\nWHERE a.Score>=5\n  AND q.Score<=0\n  AND DATEDIFF(day,q.CreationDate,a.CreationDate)>=60\nORDER BY q.Score"},{"QuerySetId":1135699,"Title":"Total questions on the site","Description":null,"QueryBody":"SELECT COUNT(*) AS count FROM posts WHERE postTypeId = 1","CreationDate":"2019-10-27 11:36:55","validated":false,"QueryBody_Original":"SELECT  count(*) as count \nfrom posts \nwhere postTypeId = 1"},{"QuerySetId":1135825,"Title":"Average cast downvotes by reputation","Description":null,"QueryBody":"SELECT Reputation, AVG(DownVotes) AS DownVotes FROM Users WHERE Reputation > 1 \/* skip suspended users *\/ AND Reputation < 20000 \/* limit to get a better graphical result *\/ AND DownVotes < 5000 \/* limit to get a better graphical result *\/ GROUP BY Reputation ORDER BY Reputation","CreationDate":"2019-10-28 02:03:35","validated":false,"QueryBody_Original":"SELECT \n    Reputation,\n    AVG(DownVotes) AS DownVotes\nFROM\n    Users\nWHERE Reputation > 1 -- skip suspended users\n       AND Reputation < 20000 -- limit to get a better graphical result\n       AND DownVotes < 5000  -- limit to get a better graphical result\nGROUP BY Reputation\nORDER BY Reputation"},{"QuerySetId":1136052,"Title":"High Rep users in a specific region","Description":null,"QueryBody":"SELECT DISTINCT displayname, reputation, 'https:\/\/stackoverflow.com\/users\/' + CAST(u.id AS TEXT(10)) FROM posts AS p JOIN users AS u ON u.id = p.ownerUserId WHERE location LIKE '%Mass%' AND reputation > 2000 AND (tags LIKE '%iot%' OR tags LIKE '%javascript%') AND lastaccessdate > '2019-09-01'","CreationDate":"2019-10-28 05:23:07","validated":false,"QueryBody_Original":"SELECT  distinct displayname, reputation, 'https:\/\/stackoverflow.com\/users\/' + CONVERT(varchar(10), u.id)\nfrom posts as p\n  join users as u\n    on u.id = p.ownerUserId\nwhere location like '%Mass%'\n  and reputation > 2000\n  and (tags like '%iot%' or tags like '%javascript%')\n  and lastaccessdate > '2019-09-01';"},{"QuerySetId":1136779,"Title":"Posts by week with question score = X","Description":null,"QueryBody":"SELECT 1.000 * TIME_TO_STR(p.CreationDate, '%Y') + 1.000 * TIME_TO_STR(p.CreationDate, '%W') \/ 52 AS \"date\", CAST(PostTypeId AS TEXT), COUNT(Id) FROM Posts AS p WHERE p.PostTypeId IN (1, 2) AND p.CreationDate BETWEEN '2016' + '-01-01' AND '2019' + '-10-27' AND p.ClosedDate IS NULL AND p.Score >= 5 GROUP BY 1.000 * TIME_TO_STR(p.CreationDate, '%Y') + 1.000 * TIME_TO_STR(p.CreationDate, '%W') \/ 52, PostTypeId ORDER BY 1.000 * TIME_TO_STR(p.CreationDate, '%Y') + 1.000 * TIME_TO_STR(p.CreationDate, '%W') \/ 52","CreationDate":"2019-10-31 06:42:08","validated":false,"QueryBody_Original":"SELECT  \n  1.000*datepart(year,p.CreationDate)+1.000*datepart(week,p.CreationDate)\/52 as [date],\n  Cast(PostTypeId as Char),\n  count(Id)\nFROM Posts p\nWHERE \n  p.PostTypeId in (1,2) AND \n  p.CreationDate BETWEEN '2016'+'-01-01' AND '2019'+'-10-27'\n  and p.ClosedDate is null\n  and p.Score >= 5 \nGROUP BY \n  1.000*datepart(year,p.CreationDate)+1.000*datepart(week,p.CreationDate)\/52,\n  PostTypeId\nORDER BY \n  1.000*datepart(year,p.CreationDate)+1.000*datepart(week,p.CreationDate)\/52"},{"QuerySetId":1137353,"Title":"Looking for posts by topic","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate > '2017-1-1' AND CreationDate < '2017-5-5' AND Tags LIKE '%python%' LIMIT 10","CreationDate":"2019-11-01 21:44:54","validated":false,"QueryBody_Original":"SELECT  top(10)* from Posts \nwhere CreationDate > '2017-1-1' \nand CreationDate < '2017-5-5'\nand Tags like '%python%'"},{"QuerySetId":1137403,"Title":"All questions with multiple question marks in the body","Description":null,"QueryBody":"SELECT title, body FROM posts WHERE posttypeid = 1 AND (body LIKE '%?%?%')","CreationDate":"2019-10-29 20:59:23","validated":false,"QueryBody_Original":"SELECT  \n\n   title, \n\n   body \n\nfrom posts \n\nwhere posttypeid = 1  \n\nand (body like '%?%?%')"},{"QuerySetId":1138095,"Title":"HTTP imgur links (instead of HTTPS)","Description":null,"QueryBody":"SELECT creationdate, id AS \"Post Link\" FROM posts WHERE posttypeid IN (1, 2) AND (body LIKE '%http:\/\/i.stack.imgur.com%' OR body LIKE '%http:\/\/i.imgur.com%') ORDER BY creationdate DESC LIMIT 1000","CreationDate":"2019-10-30 12:52:37","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  creationdate,\n  id AS [Post Link]\nFROM posts\nWHERE posttypeid IN (1,2)\nAND (body LIKE '%http:\/\/i.stack.imgur.com%' OR body LIKE '%http:\/\/i.imgur.com%')\nORDER BY creationdate DESC"},{"QuerySetId":1138182,"Title":"Tag wikis with http instead of https","Description":null,"QueryBody":"SELECT p.creationdate, t.tagname, p.id AS \"Post Link\" FROM posts AS p JOIN tags AS t ON ((p.posttypeid = 4 AND t.excerptpostid = p.id) OR (p.posttypeid = 5 AND t.wikipostid = p.id)) WHERE p.posttypeid IN (4, 5) AND p.body LIKE '%blog.pivotal.io%' ORDER BY p.creationdate DESC LIMIT 100","CreationDate":"2020-01-15 05:27:46","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  p.creationdate,\n  t.tagname,\n  p.id AS [Post Link]\nFROM posts p\nJOIN tags t\nON ((p.posttypeid = 4 AND t.excerptpostid = p.id) OR (p.posttypeid = 5 AND t.wikipostid = p.id))\nWHERE p.posttypeid IN (4, 5)\nAND p.body LIKE '%blog.pivotal.io%'\nORDER BY p.creationdate DESC"},{"QuerySetId":1139111,"Title":"Find gendered comments by user","Description":null,"QueryBody":"SELECT c.Text, c.PostId AS \"Post Link\" FROM Comments AS c WHERE c.UserId = '##UserId##' AND (c.Text LIKE '%[^a-zA-Z0-9][Hh]e[^a-zA-Z0-9]%' OR c.Text LIKE '%[^a-zA-Z0-9][Hh]im[^a-zA-Z0-9]%' OR c.Text LIKE '%[^a-zA-Z0-9][Hh]is[^a-zA-Z0-9]%' OR c.Text LIKE '%[^a-zA-Z0-9][Ss]he[^a-zA-Z0-9]%' OR c.Text LIKE '%[^a-zA-Z0-9][Hh]er[^a-zA-Z0-9]%')","CreationDate":"2019-10-31 15:17:59","validated":false,"QueryBody_Original":"SELECT  c.Text, c.PostId as [Post Link] FROM Comments c \nWHERE \n   c.UserId = '##UserId##' AND (\n   c.Text LIKE '%[^a-zA-Z0-9][Hh]e[^a-zA-Z0-9]%' OR\n   c.Text LIKE '%[^a-zA-Z0-9][Hh]im[^a-zA-Z0-9]%' OR\n   c.Text LIKE '%[^a-zA-Z0-9][Hh]is[^a-zA-Z0-9]%' OR\n   c.Text LIKE '%[^a-zA-Z0-9][Ss]he[^a-zA-Z0-9]%' OR\n   c.Text LIKE '%[^a-zA-Z0-9][Hh]er[^a-zA-Z0-9]%' \n   )"},{"QuerySetId":1139860,"Title":"Top StackOverflow users from Denmark","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (Location LIKE 'Copenhagen, Denmark') AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-11-01 14:25:31","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    ( Location LIKE 'Copenhagen, Denmark')\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1140003,"Title":"What percentage of my answers are accepted? (forked)","Description":"Returns the total number of answers, the number of accepted answers, and what percentage of answers are accepted.\r\n","QueryBody":"SELECT COUNT(a.Id) AS \"Total Answers\", SUM(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) AS \"Accepted Answers\", ROUND(SUM(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) * 100.0 \/ COUNT(a.Id), 1) AS \"Percentage Accepted\" FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE a.OwnerUserId = 11742502 AND q.postTypeId = 1 AND a.postTypeId = 2","CreationDate":"2019-11-01 18:05:59","validated":false,"QueryBody_Original":"SELECT \n    Count(a.Id) AS [Total Answers],\n    Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) AS [Accepted Answers],  \n    Round(Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN 1 ELSE 0 END) * 100.0 \/ Count(a.Id), 1) AS [Percentage Accepted]\nFROM\n    Posts AS a\n  JOIN Posts AS q\n    ON a.ParentId = q.Id\nWHERE\n      a.OwnerUserId = 11742502\n  AND q.postTypeId = 1\n  AND a.postTypeId = 2"},{"QuerySetId":1140243,"Title":"Number of users who were last seen in a given month ","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(LastAccessDate), COUNT(Id) FROM Users GROUP BY LAST_DATE_OF_MONTH(LastAccessDate) ORDER BY LAST_DATE_OF_MONTH(LastAccessDate)","CreationDate":"2019-11-01 20:25:11","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(LastAccessDate), COUNT(Id)\nFROM Users\nGROUP BY eomonth(LastAccessDate)\nORDER BY eomonth(LastAccessDate)"},{"QuerySetId":1142039,"Title":"Users' search by Name and AboutME","Description":null,"QueryBody":"SELECT DISTINCT u.Id AS \"User Link\", CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.DisplayName, u.Location, u.WebsiteUrl, u.AboutMe, u.Views, u.Reputation, u.UpVotes, u.DownVotes, u.EmailHash FROM Users AS u WHERE UPPER(u.AboutMe) LIKE UPPER('%##AboutMe##%') AND UPPER(DisplayName) LIKE UPPER('%##DisplayName##%')","CreationDate":"2019-11-04 13:06:11","validated":false,"QueryBody_Original":"SELECT  Distinct u.Id AS [User Link],\n                            CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link],\n                            u.DisplayName,\n                            u.Location,\n                            u.WebsiteUrl,\n                            u.AboutMe,\n                            u.Views,\n                            u.Reputation,\n                            u.UpVotes,\n                            u.DownVotes,\n                            u.EmailHash                            \nFROM Users u\nWHERE\n     Upper(u.AboutMe) LIKE Upper('%##AboutMe##%') AND                          \n     Upper(DisplayName) LIKE Upper('%##DisplayName##%');"},{"QuerySetId":1142293,"Title":"Potential answer link to comments","Description":null,"QueryBody":"SELECT c.PostId AS \"Post Link\", u.Id AS \"User Link\", c.CreationDate, u.CreationDate, Text FROM Comments AS c INNER JOIN Posts AS q ON q.Id = c.PostId INNER JOIN Users AS u ON u.Id = c.UserId WHERE c.Text LIKE '%' + CAST(q.Id AS TEXT) + '%' AND ABS(DATEDIFF(c.CreationDate, u.CreationDate)) < 2 ORDER BY c.CreationDate DESC","CreationDate":"2019-11-04 20:17:26","validated":false,"QueryBody_Original":"SELECT  c.PostId AS [Post Link], u.Id AS [User Link], c.CreationDate, u.CreationDate, Text\nFROM Comments c\nINNER JOIN Posts q ON q.Id = c.PostId\nINNER JOIN Users u ON u.Id = c.UserId\nWHERE c.Text LIKE '%' + CONVERT(varchar(max), q.Id) + '%'\nAND ABS(DATEDIFF(d, u.CreationDate, c.CreationDate)) < 2\nORDER BY c.CreationDate DESC"},{"QuerySetId":1142743,"Title":"Jon Ericson's \"voting currency\" equation","Description":"https:\/\/hermeneutics.meta.stackexchange.com\/questions\/132\/what-does-a-vote-mean-on-the-biblical-hermeneutics-stack-exchange#comment423_181\r\n\r\nIt seems to me that (very roughly) if you have reputation > 10*votes you are getting more \"voting currency\" from the system than you are giving.","QueryBody":"SELECT Id AS \"User Link\", Reputation, (10 * UpVotes) AS \"10 * UpVotesCast\", CAST(10 * UpVotes AS FLOAT) \/ Reputation AS ratio FROM users WHERE Reputation > 1 \/* skip suspended people for now *\/ ORDER BY ratio DESC LIMIT 200000000","CreationDate":"2019-11-05 01:15:20","validated":false,"QueryBody_Original":"SELECT  TOP 200000000 Id as [User Link], Reputation, \n  (10 * UpVotes) AS \"10 * UpVotesCast\", \n  CAST (10 * UpVotes AS float) \/ Reputation AS ratio\nFROM users\nWHERE Reputation > 1 -- skip suspended people for now\nORDER BY ratio DESC"},{"QuerySetId":1144560,"Title":"distribution of score for questions and answers","Description":null,"QueryBody":"SELECT Score, PostTypeId, COUNT(Score) FROM Posts WHERE PostTypeId IN (1, 2) GROUP BY Score, PostTypeId ORDER BY PostTypeId, Score","CreationDate":"2019-11-07 16:13:42","validated":false,"QueryBody_Original":"SELECT  Score, PostTypeId, count(Score) from Posts where PostTypeId in (1,2)\ngroup by Score, PostTypeId order by PostTypeId, Score"},{"QuerySetId":1144588,"Title":"Choose the best rating posts","Description":null,"QueryBody":"SELECT body, title, tags, FavoriteCount FROM posts WHERE NOT title IS NULL AND NOT body IS NULL AND NOT tags IS NULL AND id < 50","CreationDate":"2019-11-07 15:28:11","validated":false,"QueryBody_Original":"SELECT  body, title, tags, FavoriteCount\nFROM posts \nWHERE title is not null and body is not null and tags is not null and id<50"},{"QuerySetId":1144699,"Title":"Draft: Users filtered by location and the company name (keyword in AboutMe)","Description":null,"QueryBody":"SELECT DISTINCT u.Id AS \"User Link\", CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.DisplayName, u.Location, u.WebsiteUrl, u.AboutMe, u.Views, u.UpVotes, u.DownVotes, u.EmailHash, u.Reputation FROM Users AS u WHERE UPPER(u.Location) LIKE UPPER('%##Location##%') AND UPPER(u.AboutMe) LIKE UPPER('%##CompanyName##%') ORDER BY u.Reputation DESC","CreationDate":"2019-11-07 19:48:40","validated":false,"QueryBody_Original":"SELECT  Distinct u.Id AS [User Link],\n                            CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link],\n                            u.DisplayName,\n                            u.Location,\n                            u.WebsiteUrl,\n                            u.AboutMe,\n                            u.Views,\n                            u.UpVotes,\n                            u.DownVotes,\n                            u.EmailHash,\n                            u.Reputation\n\nFROM Users u\nWHERE\n     Upper(u.Location) LIKE Upper('%##Location##%') AND\n     Upper(u.AboutMe) LIKE Upper('%##CompanyName##%')\nOrder By u.Reputation DESC;"},{"QuerySetId":1144738,"Title":"Search questions that matches specific criteria","Description":"Find questions in SO that matches certain criteria - the idea is to find questions, read them at this side of the spectrum.","QueryBody":"SELECT P.ParentId AS \"Post Link\", P.Body, P.Score, P.CreationDate, U.DisplayName, P.Tags FROM Posts AS P INNER JOIN Users AS U ON P.OwnerUserId = U.Id \/* CAST(P.CreationDate AS DATE) BETWEEN '2019-11-07 00:00:00' \nAND GETDATE() *\/ WHERE P.Tags LIKE '%<c#>%' AND P.PostTypeId = 1 ORDER BY P.CreationDate DESC LIMIT 10","CreationDate":"2019-11-08 02:26:40","validated":false,"QueryBody_Original":"SELECT  TOP 10 P.ParentId [Post Link], P.Body, P.Score, P.CreationDate, U.DisplayName, P.Tags\nFROM Posts AS P INNER JOIN Users U\nON P.OwnerUserId = U.Id\nWHERE \/*CAST(P.CreationDate AS DATE) BETWEEN '2019-11-07 00:00:00' \nAND GETDATE()*\/\nP.Tags LIKE '%<c#>%'\nAND P.PostTypeId = 1\n--P.Id = 58587405\nORDER BY P.CreationDate DESC;\n\n--SELECT T.* FROM Tags T WHERE T.TagName = 'c#';"},{"QuerySetId":1145267,"Title":"user activity by user id and month","Description":null,"QueryBody":"SELECT COUNT(Id) AS n_posts, 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%m') \/ 12, OwnerUserId FROM Posts WHERE PostTypeId = 2 GROUP BY OwnerUserId, 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%m') \/ 12 ORDER BY 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%m') \/ 12, COUNT(Id) DESC","CreationDate":"2020-02-08 16:18:28","validated":false,"QueryBody_Original":"SELECT  Count(Id) as n_posts ,1.000*datepart(year,CreationDate)+1.000*datepart(month,CreationDate)\/12, OwnerUserId \nfrom Posts\nwhere PostTypeId = 2\nGroup By OwnerUserId, \n1.000*datepart(year,CreationDate)+1.000*datepart(month,CreationDate)\/12\nOrder By 1.000*datepart(year,CreationDate)+1.000*datepart(month,CreationDate)\/12,\n Count(Id) Desc"},{"QuerySetId":1145280,"Title":"number of active users er month","Description":null,"QueryBody":"SELECT Week, COUNT(n_posts) FROM (SELECT COUNT(Id) AS n_posts, 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%W') \/ 52 AS Week, OwnerUserId FROM Posts WHERE PostTypeId = 2 AND (1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%W') \/ 52 < 1.000 * TIME_TO_STR(CURRENT_TIMESTAMP(), '%Y') + 1.000 * TIME_TO_STR(CURRENT_TIMESTAMP(), '%W') \/ 52) GROUP BY OwnerUserId, 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%W') \/ 52) AS a GROUP BY Week ORDER BY Week","CreationDate":"2019-11-08 16:08:13","validated":false,"QueryBody_Original":"SELECT  Week,count(n_posts) from\n(\nSELECT Count(Id) as n_posts ,\n       1.000*datepart(year,CreationDate)+\n         1.000*datepart(week,CreationDate)\/52 as Week, \n       OwnerUserId \nfrom Posts\nwhere PostTypeId = 2 and\n      (1.000*datepart(year,CreationDate)+1.000*datepart(week,CreationDate)\/52 < \n      1.000*datepart(year, GETDATE())+1.000*datepart(week, GETDATE())\/52)\nGroup By OwnerUserId, \n1.000*datepart(year,CreationDate)+1.000*datepart(week,CreationDate)\/52\n) a\ngroup by Week\norder by Week"},{"QuerySetId":1145283,"Title":"number of active users per week","Description":null,"QueryBody":"SELECT Week, COUNT(n_posts) FROM (SELECT COUNT(Id) AS n_posts, 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%W') \/ 52 AS Week, OwnerUserId FROM Posts WHERE PostTypeId IN (1, 2) AND (1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%W') \/ 52 < 1.000 * TIME_TO_STR(CURRENT_TIMESTAMP(), '%Y') + 1.000 * TIME_TO_STR(CURRENT_TIMESTAMP(), '%W') \/ 52) GROUP BY OwnerUserId, 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%W') \/ 52) AS a GROUP BY Week ORDER BY Week","CreationDate":"2019-12-05 02:39:54","validated":false,"QueryBody_Original":"SELECT  Week,count(n_posts) from\n(\nSELECT Count(Id) as n_posts ,\n       1.000*datepart(year,CreationDate)+\n         1.000*datepart(week,CreationDate)\/52 as Week, \n       OwnerUserId \nfrom Posts\nwhere PostTypeId in (1,2) and\n      (1.000*datepart(year,CreationDate)+1.000*datepart(week,CreationDate)\/52 < \n      1.000*datepart(year, GETDATE())+1.000*datepart(week, GETDATE())\/52)\nGroup By OwnerUserId, \n1.000*datepart(year,CreationDate)+1.000*datepart(week,CreationDate)\/52\n) a\ngroup by Week\norder by Week"},{"QuerySetId":1145313,"Title":"number of active users per month","Description":null,"QueryBody":"SELECT Months, (CASE WHEN n_posts > 5 THEN 'n>5' WHEN n_posts > 1 THEN '5>=n>1' ELSE 'n=1' END), COUNT(n_posts) FROM (SELECT COUNT(Id) AS n_posts, 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%m') \/ 12 - 1.000 \/ 24 AS Months, OwnerUserId FROM Posts WHERE PostTypeId IN (1, 2) AND (1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%m') \/ 12 < 1.000 * TIME_TO_STR(CURRENT_TIMESTAMP(), '%Y') + 1.000 * TIME_TO_STR(CURRENT_TIMESTAMP(), '%m') \/ 12) GROUP BY OwnerUserId, 1.000 * TIME_TO_STR(CreationDate, '%Y') + 1.000 * TIME_TO_STR(CreationDate, '%m') \/ 12 - 1.000 \/ 24) AS a GROUP BY Months, (CASE WHEN n_posts > 5 THEN 'n>5' WHEN n_posts > 1 THEN '5>=n>1' ELSE 'n=1' END) ORDER BY Months","CreationDate":"2019-11-08 16:46:58","validated":false,"QueryBody_Original":"SELECT  Months, \n    (case when n_posts > 5 then 'n>5'\n          when n_posts > 1 then '5>=n>1' \n          else 'n=1' end),\n    count(n_posts) from\n(\nSELECT Count(Id) as n_posts ,\n       1.000*datepart(year,CreationDate)+\n         1.000*datepart(month,CreationDate)\/12 -\n         1.000\/24 as Months, \n       OwnerUserId \nfrom Posts\nwhere PostTypeId in (1,2) and\n      (1.000*datepart(year,CreationDate)+1.000*datepart(month,CreationDate)\/12 < \n      1.000*datepart(year, GETDATE())+1.000*datepart(month, GETDATE())\/12)\nGroup By OwnerUserId, \n1.000*datepart(year,CreationDate)+1.000*datepart(month,CreationDate)\/12 - 1.000\/24\n) a\ngroup by Months,    (case when n_posts > 5 then 'n>5'\n          when n_posts > 1 then '5>=n>1' \n          else 'n=1' end)\norder by Months"},{"QuerySetId":1145981,"Title":"Posts Since The Mess Started","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS p WHERE p.CreationDate >= '2019-09-05'","CreationDate":"2019-11-10 03:42:36","validated":false,"QueryBody_Original":"SELECT  Count(*)\n                       \nFROM Posts p\n\nWHERE p.CreationDate >= '2019-09-05'"},{"QuerySetId":1146390,"Title":"4 Task (in 1 query)","Description":null,"QueryBody":"SELECT * FROM posts WHERE id = 58461807","CreationDate":"2019-11-11 12:48:06","validated":false,"QueryBody_Original":"SELECT  *\nfrom posts\nwhere id = 58461807"},{"QuerySetId":1146794,"Title":"Get all questions with Tag: Java","Description":null,"QueryBody":"SELECT Id, PostTypeId, AcceptedAnswerId, CreationDate, Score, ViewCount, OwnerUserId, Title, Tags, AnswerCount, CommentCount, FavoriteCount, Body FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%liquibas%'","CreationDate":"2020-08-05 17:57:14","validated":false,"QueryBody_Original":"SELECT  Id,PostTypeId,AcceptedAnswerId,CreationDate,\n Score, ViewCount,OwnerUserId, Title,Tags, AnswerCount,\n CommentCount, FavoriteCount, Body\nfrom Posts\nwhere PostTypeId = 1 AND Tags like '%liquibas%'"},{"QuerySetId":1146805,"Title":"Get all questions with Tag primefaces but missing jsf","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", tags FROM Posts WHERE PostTypeId = 1 AND Tags = '[primefaces]'","CreationDate":"2019-11-12 14:10:22","validated":false,"QueryBody_Original":"SELECT   Id AS [Post Link],tags FROM Posts\nwhere PostTypeId = 1 AND Tags = '[primefaces]'"},{"QuerySetId":1147988,"Title":"display all the data from the Customers table - Tony","Description":null,"QueryBody":"SELECT AnswerCount, ViewCount, Title AS \"Post Title\" FROM Posts","CreationDate":"2019-11-13 16:21:02","validated":false,"QueryBody_Original":"SELECT  AnswerCount, ViewCount, Title AS \"Post Title\"\nFROM Posts"},{"QuerySetId":1148186,"Title":"GraphQL StackOverflow posts over time","Description":null,"QueryBody":"SELECT CONCAT(TIME_TO_STR(CreationDate, '%Y'), ' ', TIME_TO_STR(CreationDate, '%m')) AS dt, COUNT(1) AS num_serverless_mentions FROM Posts WHERE Title LIKE '%graphql%' GROUP BY CONCAT(TIME_TO_STR(CreationDate, '%Y'), ' ', TIME_TO_STR(CreationDate, '%m'))","CreationDate":"2019-11-14 00:51:53","validated":false,"QueryBody_Original":"SELECT  \n  concat(datepart(year, CreationDate),' ', datepart(month, CreationDate)) as dt,\n  count(1) num_serverless_mentions\nfrom \n  Posts \nwhere \n  Title LIKE '%graphql%'\ngroup by \n  concat(datepart(year, CreationDate),' ', datepart(month, CreationDate))"},{"QuerySetId":1148197,"Title":"Self-Service, on-Demand Creation of OLAP Cubes over Big Data: Application to Twitter","Description":null,"QueryBody":"SELECT * FROM votes","CreationDate":"2019-11-14 01:28:00","validated":false,"QueryBody_Original":"SELECT  * from votes"},{"QuerySetId":1148232,"Title":"Reputa\u00e7\u00e3o ganha com o altera\u00e7\u00e3o do \"valor\" do voto por pergunta","Description":null,"QueryBody":"SELECT U.Id, DisplayName, SUM(P.Score * 5) FROM Users AS U INNER JOIN Posts AS P ON U.Id = P.OwnerUserId WHERE PostTypeId = 1 AND DeletionDate IS NULL GROUP BY U.Id, U.DisplayName ORDER BY SUM(Score * 5) DESC","CreationDate":"2019-11-14 04:16:06","validated":false,"QueryBody_Original":"SELECT \n  U.Id,\n  DisplayName,\n  Sum(P.Score * 5) \nFrom Users U\nInner Join Posts P\n  On U.Id = P.OwnerUserId\n\nWhere PostTypeId = 1 And DeletionDate Is Null\n\nGroup By U.Id, U.DisplayName\n\nOrder By Sum(Score * 5) Desc"},{"QuerySetId":1148236,"Title":"query for machine learning - NLP","Description":null,"QueryBody":"SELECT title, body, tags FROM posts","CreationDate":"2019-11-14 02:49:21","validated":false,"QueryBody_Original":"SELECT  title,body,tags from posts"},{"QuerySetId":1148265,"Title":"Top 10 users in Coimbatore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%coimbatore%' OR UPPER(Location) LIKE '%COIMBATORE%' OR Location LIKE '%Karur%' ORDER BY Reputation DESC LIMIT 10","CreationDate":"2019-11-14 07:46:20","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%coimbatore%'\n    OR UPPER(Location) LIKE '%COIMBATORE%'\n    or Location like '%Karur%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1148592,"Title":"CREATE TABLE test (blob_col BLOB, INDEX(blob_col(10)));","Description":null,"QueryBody":"SELECT OwnerUserId, COUNT(Id) FROM Posts GROUP BY OwnerUserId LIMIT 10","CreationDate":"2019-11-15 00:01:59","validated":false,"QueryBody_Original":"SELECT  TOP 10 OwnerUserId, COUNT (Id) FROM Posts\nGroup by OwnerUserId"},{"QuerySetId":1148869,"Title":"select  Id , location, reputation from users","Description":null,"QueryBody":"SELECT Id, location, reputation FROM users","CreationDate":"2019-11-15 15:27:18","validated":false,"QueryBody_Original":"SELECT   Id , location, reputation from users"},{"QuerySetId":1149099,"Title":"Get User Info by User ID","Description":null,"QueryBody":"SELECT * FROM Comments WHERE Id = '##UserId##'","CreationDate":"2019-12-31 21:47:11","validated":false,"QueryBody_Original":"SELECT \n    *\nFROM\n    Comments\nWHERE\n    Id = '##UserId##'"},{"QuerySetId":1149120,"Title":"upvote\/downvote ratio: 2015 through 2020","Description":"Look at the Graph, to see the evolution of the upvote\/downvote ratio.","QueryBody":"SELECT DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1) AS YearMonth, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS FLOAT) \/ NULLIF(CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS FLOAT), 0)) AS Ratio FROM Votes WHERE CreationDate > '01-01-2015' AND CreationDate < '12-31-2020' GROUP BY DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1) ORDER BY DATEFROMPARTS(YEAR(CreationDate), MONTH(CreationDate), 1)","CreationDate":"2019-11-16 01:45:06","validated":false,"QueryBody_Original":"SELECT \ndatefromparts(YEAR(CreationDate), MONTH(CreationDate), 1) AS YearMonth\n, (CAST(SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS float) \/ nullif(CAST(SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS float),0)) AS Ratio\nFROM Votes\nWHERE CreationDate > '01-01-2015' AND CreationDate < '12-31-2020'\nGROUP BY datefromparts(YEAR(CreationDate), MONTH(CreationDate), 1)\nORDER BY datefromparts(YEAR(CreationDate), MONTH(CreationDate), 1)"},{"QuerySetId":1149123,"Title":"# of posts with a positive vs negative score","Description":null,"QueryBody":"SELECT (SELECT COUNT(id) FROM Posts WHERE Score >= 0) AS \"Posts with postive Score\", (SELECT COUNT(id) FROM Posts WHERE Score < 0) AS \"Posts with negative Score\", (SELECT COUNT(id) FROM Posts WHERE Score >= 0) \/ (SELECT COUNT(id) FROM Posts WHERE Score < 0) AS \"Ratio\"","CreationDate":"2019-11-16 02:02:59","validated":false,"QueryBody_Original":"SELECT  \n  (SELECT COUNT(id) FROM Posts WHERE Score >= 0) AS 'Posts with postive Score', \n  (SELECT COUNT(id) FROM Posts WHERE Score < 0) As 'Posts with negative Score',\n  (SELECT COUNT(id) FROM Posts WHERE Score >= 0)\/(SELECT COUNT(id) FROM Posts WHERE Score < 0) As 'Ratio'"},{"QuerySetId":1149126,"Title":"Are self-answers voted on less?","Description":null,"QueryBody":"SELECT CASE WHEN a.OwnerUserId = q.OwnerUserId THEN 'yes' ELSE 'no' END AS \"Self-answer?\", AVG(1. * a.Score) AS \"Avg. Answer Score\", AVG(1. * q.Score) AS \"Avg. Question Score\", COUNT(*) AS N FROM Posts AS a JOIN Posts AS q ON q.Id = a.ParentId WHERE a.PostTypeId = 2 GROUP BY CASE WHEN a.OwnerUserId = q.OwnerUserId THEN 'yes' ELSE 'no' END","CreationDate":"2019-11-16 03:28:34","validated":false,"QueryBody_Original":"SELECT  iif(a.OwnerUserId = q.OwnerUserId, 'yes', 'no') \"Self-answer?\",\n       avg(1.*a.Score) \"Avg. Answer Score\", \n       avg(1.*q.Score) \"Avg. Question Score\",\n       count(*) N\nfrom Posts a\n     join Posts q on q.Id = a.ParentId\nwhere a.PostTypeId = 2\ngroup by iif(a.OwnerUserId = q.OwnerUserId, 'yes', 'no')"},{"QuerySetId":1150214,"Title":"Answered Count by Post State","Description":null,"QueryBody":"SELECT HasAnswer, COUNT(*) AS NumPosts, ROUND((100.0 * COUNT(*)) \/ SUM(COUNT(*)) OVER (), 2) AS PercentPosts FROM (SELECT CASE WHEN AnswerCount = 0 THEN 'No' ELSE 'Yes' END AS HasAnswer FROM Posts WHERE Posts.PostTypeId = 1 \/* Questions *\/) AS x GROUP BY HasAnswer","CreationDate":"2019-11-17 06:24:53","validated":false,"QueryBody_Original":"SELECT \n    HasAnswer,\n    COUNT(*) AS NumPosts,\n    ROUND((100.0 * COUNT(*)) \/ SUM(COUNT(*)) OVER (), 2) AS PercentPosts\nFROM (\n    SELECT\n        CASE\n            WHEN AnswerCount = 0 THEN 'No'\n            ELSE 'Yes'\n        END AS HasAnswer\n    FROM Posts\n    WHERE\n        Posts.PostTypeId = 1 -- Questions\n) AS x\nGROUP BY HasAnswer"},{"QuerySetId":1152285,"Title":"Got most rep by questions","Description":"Counts only question up\/dows, without the rep 1 lower limit.","QueryBody":"SELECT Posts.OwnerUserId AS \"User Link\", Posts.OwnerUserId, SUM(CASE WHEN Votes.VoteTypeId = 2 THEN 10 ELSE -2 END) AS Rep FROM Posts, Votes WHERE Posts.PostTypeId = 1 AND Votes.VoteTypeId BETWEEN 2 AND 3 AND Votes.PostId = Posts.Id AND Posts.OwnerUserId > 0 GROUP BY Posts.OwnerUserId ORDER BY Rep DESC, Posts.OwnerUserId LIMIT 100","CreationDate":"2019-11-18 13:38:45","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Posts.OwnerUserId AS [User Link],\n  Posts.OwnerUserId,\n  SUM(CASE WHEN Votes.VoteTypeId = 2 THEN 10 ELSE -2 END) AS Rep\nFROM Posts, Votes\nWHERE\n  Posts.PostTypeId = 1\n  AND\n  Votes.VoteTypeId BETWEEN 2 AND 3\n  AND\n  Votes.PostId = Posts.Id\n  AND\n  Posts.OwnerUserId > 0\nGROUP BY Posts.OwnerUserId\nORDER BY Rep DESC, Posts.OwnerUserId"},{"QuerySetId":1154911,"Title":"Possible broken relative links after migration","Description":null,"QueryBody":"SELECT m.PostId AS \"Post Link\", m.CreationDate AS \"Migration date\" FROM PostHistory AS m INNER JOIN PostHistory AS b ON m.PostId = b.PostId AND b.PostHistoryTypeId = 2 \/* Initial Body *\/ WHERE m.PostHistoryTypeId = 36 \/* Post Migrated Here *\/ AND (b.Text LIKE '%](\/q%' OR b.Text LIKE '%](\/a%' OR b.Text LIKE '%](\/u%' OR b.Text LIKE '%](\/p%') ORDER BY m.CreationDate DESC","CreationDate":"2019-11-19 15:44:01","validated":false,"QueryBody_Original":"SELECT  m.PostId AS [Post Link], m.CreationDate AS 'Migration date'\n  FROM PostHistory AS m\n  INNER JOIN PostHistory AS b\n    ON m.PostId = b.PostId\n   AND b.PostHistoryTypeId = 2 -- Initial Body\n  WHERE m.PostHistoryTypeId = 36 -- Post Migrated Here\n    AND (b.Text LIKE '%](\/q%'\n      OR b.Text LIKE '%](\/a%'\n      OR b.Text LIKE '%](\/u%'\n      OR b.Text LIKE '%](\/p%')\n  ORDER BY m.CreationDate DESC"},{"QuerySetId":1156752,"Title":"Mean score as function of hour of the day","Description":null,"QueryBody":"SELECT TIME_TO_STR(a.CreationDate, '%I') AS answerhour, TIME_TO_STR(q.CreationDate, '%I') AS questionhour, AVG(1.00 * a.score) AS score FROM posts AS a JOIN posts AS q ON q.Id = a.ParentId WHERE a.PostTypeId IN (2) AND TIME_TO_STR(q.CreationDate, '%Y') = 2018 GROUP BY TIME_TO_STR(a.CreationDate, '%I'), TIME_TO_STR(q.CreationDate, '%I') ORDER BY TIME_TO_STR(a.CreationDate, '%I'), TIME_TO_STR(q.CreationDate, '%I')","CreationDate":"2019-11-20 04:31:15","validated":false,"QueryBody_Original":"SELECT  DATEPART(hh, a.CreationDate) answerhour, \n       DATEPART(hh, q.CreationDate) questionhour,\n       avg(1.00*a.score)  score\nfrom posts a join posts q on q.Id = a.ParentId \nwhere a.PostTypeId in (2) and DATEPART(yyyy, q.CreationDate) = 2018\ngroup by DATEPART(hh, a.CreationDate), DATEPART(hh, q.CreationDate)\norder by DATEPART(hh, a.CreationDate), DATEPART(hh, q.CreationDate)"},{"QuerySetId":1156757,"Title":"Mean answer score as function of hour of the day for question and answer","Description":null,"QueryBody":"SELECT TIME_TO_STR(a.CreationDate, '%I') AS answerhour, TIME_TO_STR(q.CreationDate, '%I') AS questionhour, SUM(1.00 * a.score) AS score FROM posts AS a JOIN posts AS q ON q.Id = a.ParentId WHERE a.PostTypeId IN (2) AND TIME_TO_STR(q.CreationDate, '%Y') >= 2014 GROUP BY TIME_TO_STR(a.CreationDate, '%I'), TIME_TO_STR(q.CreationDate, '%I') ORDER BY TIME_TO_STR(a.CreationDate, '%I'), TIME_TO_STR(q.CreationDate, '%I')","CreationDate":"2019-11-20 05:33:46","validated":false,"QueryBody_Original":"SELECT  DATEPART(hh, a.CreationDate) answerhour, \n       DATEPART(hh, q.CreationDate) questionhour,\n       sum(1.00*a.score)  score\nfrom posts a join posts q on q.Id = a.ParentId \nwhere a.PostTypeId in (2) and DATEPART(yyyy, q.CreationDate) >= 2014\ngroup by DATEPART(hh, a.CreationDate), DATEPART(hh, q.CreationDate)\norder by DATEPART(hh, a.CreationDate), DATEPART(hh, q.CreationDate)"},{"QuerySetId":1156913,"Title":"Questions eligible for APL bounty by Adam","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", Q.Score, Q.AnswerCount, Q.ClosedDate FROM Posts AS Q\/* Question is a code-golf challenge and not any of: *\/ \/* tips, restricted-any, source-layout, quine, polyglot, cops-and-robbers *\/ \/* ascii-art, kolmogorov-complexity, internet, network, compile-time, regex *\/ \/* graphical-output, image, king-of-the-hill, atomic-code-golf *\/ \/* Not too hard, at least an answer *\/ \/* AND 1 <= Q.AnswerCount *\/ \/* Not too easy, at most 20 answers *\/  WHERE Q.PostTypeId = 1 AND Q.Body LIKE '%help.dyalog.com%' OR EXISTS(SELECT * FROM Posts AS A WHERE A.ParentId = Q.Id AND A.PostTypeId = 2 AND A.Body LIKE '%help.dyalog.com%') ORDER BY Q.ClosedDate, Q.AnswerCount, Q.Score DESC","CreationDate":"2020-07-20 15:23:45","validated":false,"QueryBody_Original":"SELECT  Q.Id AS [Post Link], Q.Score, Q.AnswerCount, Q.ClosedDate\n  FROM Posts Q\n  WHERE\n  -- Post is question\n  Q.PostTypeId = 1\n  -- Question is a code-golf challenge and not any of:\n  -- tips, restricted-any, source-layout, quine, polyglot, cops-and-robbers\n  -- ascii-art, kolmogorov-complexity, internet, network, compile-time, regex\n  -- graphical-output, image, king-of-the-hill, atomic-code-golf\n  -- Not too hard, at least an answer\n  -- AND 1 <= Q.AnswerCount\n  -- Not too easy, at most 20 answers\n  AND Q.Body LIKE '%help.dyalog.com%'\n  OR EXISTS (\n    SELECT *\n    FROM Posts A\n    WHERE A.ParentId = Q.Id\n    AND A.PostTypeId = 2\n    AND A.Body LIKE '%help.dyalog.com%'\n  )\n  ORDER BY Q.ClosedDate ASC, Q.AnswerCount ASC, Q.Score DESC"},{"QuerySetId":1157639,"Title":"Comments containing exact string (with text and author)","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%[^a-zA-Z]##text?matrice##[^a-zA-Z]%' ORDER BY CreationDate","CreationDate":"2019-11-21 14:36:52","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%[^a-zA-Z]##text?matrice##[^a-zA-Z]%' \n---searching for the exact word - not preceded-followed by another letter\nORDER BY CreationDate"},{"QuerySetId":1157725,"Title":"Users participating the in strike","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Users participating in the strike\" FROM users WHERE LOWER(displayname) LIKE '%reinstate%monica%'","CreationDate":"2019-11-21 17:34:57","validated":false,"QueryBody_Original":"SELECT  \n  count(*) as 'Users participating in the strike'\nfrom \n  users\nwhere \n  lower(displayname) like '%reinstate%monica%'"},{"QuerySetId":1157850,"Title":"Question count by the number of answers per question","Description":null,"QueryBody":"SELECT q.Cnt AS AnswerCount, COUNT(*) AS QuestionCount, COUNT(*) * 100.0 \/ MIN(TotalQuestions) AS \"Percent\" FROM (SELECT (SELECT COUNT(*) FROM Posts AS a WHERE a.PostTypeId = 1) AS TotalQuestions, (SELECT COUNT(*) FROM Posts AS a WHERE a.ParentId = q.Id AND a.PostTypeId = 2) AS Cnt FROM Posts AS q WHERE q.PostTypeId = 1) AS q GROUP BY q.Cnt ORDER BY q.Cnt","CreationDate":"2019-11-22 02:52:01","validated":false,"QueryBody_Original":"SELECT \n    q.Cnt as AnswerCount,\n    count(*) as QuestionCount,\n    count(*) * 100.0 \/ min(TotalQuestions) as 'Percent'\nfrom (\nSELECT(\n    SELECT count(*) from Posts a where a.PostTypeId = 1\n  ) as TotalQuestions, (\n    SELECT count(*) from Posts a\n    where a.ParentId = q.Id and a.PostTypeId = 2\n  ) as Cnt\n  from Posts q\n  where q.PostTypeId = 1\n  ) as q\ngroup by q.Cnt\norder by q.Cnt"},{"QuerySetId":1158390,"Title":"(Possibly) suspended users with the most rep.","Description":null,"QueryBody":"SELECT * FROM votes WHERE userid = 2118383","CreationDate":"2019-12-23 20:56:34","validated":false,"QueryBody_Original":"SELECT  *from votes where userid = 2118383"},{"QuerySetId":1158913,"Title":"Percentage of Questions Upvoted Lower than the Highest Upvoted Answer","Description":null,"QueryBody":"SELECT ROUND(AVG(CASE WHEN QuestionScore < HighestAnswerScore THEN 100.0 ELSE 0.0 END), 2) AS \"Percentage\" FROM (SELECT q.Id, MAX(q.Score) AS QuestionScore, MAX(a.Score) AS HighestAnswerScore FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id GROUP BY q.Id) AS Scores","CreationDate":"2019-11-25 22:18:33","validated":false,"QueryBody_Original":"SELECT  ROUND(AVG(CASE WHEN QuestionScore < HighestAnswerScore\n                      THEN 100.0 ELSE 0.0 END), 2) AS 'Percentage'\nFROM\n(SELECT q.Id, MAX(q.Score) AS QuestionScore, MAX(a.Score) AS HighestAnswerScore\n  FROM Posts AS q\n  INNER JOIN Posts AS a\n  ON a.ParentId = q.Id\n  GROUP BY q.Id) AS Scores"},{"QuerySetId":1159391,"Title":"Meta questions answered before Monica","Description":null,"QueryBody":"SELECT * FROM Posts WHERE AcceptedAnswerId IS NULL LIMIT 10","CreationDate":"2019-11-27 05:00:12","validated":false,"QueryBody_Original":"SELECT  TOP 10 *\nFROM Posts\nWHERE AcceptedAnswerId IS NULL"},{"QuerySetId":1161190,"Title":"select count(*) from posts where year(CreationDate)=2019 ","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE YEAR(CreationDate) = 2019","CreationDate":"2019-12-02 14:17:13","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where year(CreationDate)=2019"},{"QuerySetId":1161636,"Title":"\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438\u0437 \u0420\u043e\u0441\u0441\u0438\u0438, \u0437\u0430\u0434\u0430\u0432\u0448\u0438\u0445 \u0441\u0432\u043e\u0439 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u0441 \u0442\u0435\u0433\u043e\u043c \u201csql\u201d \u0432 \u043e\u043a\u0442\u044f\u0431\u0440\u0435 2015","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts AS p INNER JOIN users AS u ON u.id = p.ownerUserId WHERE p.PostTypeId = 1 AND YEAR(p.CreationDate) = 2015 AND MONTH(p.CreationDate) = 10 AND LOWER(u.location) LIKE '%russia%' AND p.id = (SELECT id FROM posts AS po WHERE po.OwnerUserId = u.id AND po.PostTypeId = 1 AND YEAR(po.CreationDate) = 2015 AND MONTH(po.CreationDate) = 10 AND LOWER(u.location) LIKE '%russia%' ORDER BY p.CreationDate LIMIT 1) HAVING COUNT(CASE WHEN p.tags LIKE '%<sql>%' THEN 1 END) > 0","CreationDate":"2019-12-03 04:37:36","validated":false,"QueryBody_Original":"SELECT  count(*) from posts as p \ninner join users as u on u.id = p.ownerUserId  \nwhere p.PostTypeId = 1 \nand year(p.CreationDate) = 2015 and month(p.CreationDate) = 10 \nand lower(u.location) like '%russia%'\nand p.id = (SELECT TOP 1 id from posts as po where po.OwnerUserId = u.id and po.PostTypeId = 1 \nand year(po.CreationDate) = 2015 and month(po.CreationDate) = 10 \nand lower(u.location) like '%russia%'\norder by p.CreationDate ASC)\nhaving count(case when p.tags like '%<sql>%' then 1 end) > 0;"},{"QuerySetId":1161733,"Title":"Top Contributers from Kerala India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", us.id AS \"User Link\", us.DisplayName, us.Location, us.Reputation FROM Users AS us WHERE LOWER(us.Location) LIKE '%kerala%' ORDER BY Reputation DESC","CreationDate":"2019-12-21 05:52:23","validated":false,"QueryBody_Original":"SELECT  ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], us.id [User Link],\n       us.DisplayName,us.Location,us.Reputation\n       \nFROM Users us\nWHERE lower(us.Location) like '%kerala%'\nORDER BY Reputation DESC;"},{"QuerySetId":1162147,"Title":"Rank by Tag-Based Badge Count","Description":null,"QueryBody":"SELECT u.DisplayName, \"Count of Badges\" = COUNT(DISTINCT b.id), \"Rank\" = RANK() OVER (ORDER BY COUNT(b.id) DESC) FROM Users AS u INNER JOIN Badges AS b ON u.id = b.UserId WHERE b.TagBased = 1 GROUP BY u.DisplayName ORDER BY COUNT(b.id) DESC LIMIT 100","CreationDate":"2019-12-04 16:30:31","validated":false,"QueryBody_Original":"SELECT  TOP(100) \n      u.DisplayName\n    , [Count of Badges] = COUNT(distinct b.id)\n    , [Rank] = RANK() OVER (ORDER BY COUNT(b.id) DESC)\nFROM \n      Users u\n      INNER JOIN Badges b ON u.id = b.UserId\nWHERE \n      b.TagBased = 1\nGROUP BY \n      u.DisplayName\nORDER BY \n      COUNT(b.id) DESC;"},{"QuerySetId":1162208,"Title":"Find questions with old duplicate post notices","Description":"Find questions with \"End of automatically inserted text\"","QueryBody":"SELECT p.CreationDate, p.Id AS \"Post Link\", p.Score, p.ViewCount, p.AnswerCount FROM Posts AS p WHERE p.PostTypeId = 1 AND NOT p.ClosedDate IS NULL AND p.DeletionDate IS NULL AND p.Body LIKE '%Possible Duplicate:%' ORDER BY p.Id LIMIT 1000","CreationDate":"2020-01-31 02:57:14","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n         p.CreationDate,\n         p.Id AS [Post Link],\n         p.Score,\n         p.ViewCount,\n         p.AnswerCount\n    FROM Posts p\n   WHERE p.PostTypeId = 1\n     AND p.ClosedDate IS NOT NULL\n     AND p.DeletionDate IS NULL\n     AND p.Body LIKE '%Possible Duplicate:%'\nORDER BY p.Id ASC"},{"QuerySetId":1162283,"Title":"Most popular questions (with Q&A stats)","Description":"Includes questions that have at least 5 million views.","QueryBody":"SELECT TIME_TO_STR(q.creationdate, '%Y-%b-%d') AS Asked, q.id AS \"Post Link\", LENGTH(q.body) AS Bytes, NUMBER_TO_STR(q.viewcount, '#,##0') AS \"Views\", q.commentcount AS \"Cmnts\", q.commentcount + SUM(a.commentcount) AS \"All Cmnts\", NUMBER_TO_STR(q.favoritecount, '#,##0') AS \"Fav\", NUMBER_TO_STR(q.score, '#,##0') AS \"Score\", q.answercount AS \"Answers\", NUMBER_TO_STR(AVG(a.score), '#,##0') AS \"Avg A\", NUMBER_TO_STR(MAX(a.score), '#,##0') AS \"Max A\", q.Tags FROM posts AS q LEFT JOIN posts AS a ON q.id = a.parentid WHERE q.viewcount > 2000000 AND q.posttypeid = 1 AND a.posttypeid = 2 GROUP BY TIME_TO_STR(q.creationdate, '%Y-%b-%d'), LENGTH(q.body), q.id, q.viewcount, q.answercount, q.commentcount, q.favoritecount, q.Score, q.tags ORDER BY q.viewcount DESC","CreationDate":"2019-12-04 15:08:19","validated":false,"QueryBody_Original":"SELECT \n  format(q.creationdate,'yyyy-MMM-dd') Asked,\n  q.id [Post Link],\n  len(q.body) Bytes,\n  format(q.viewcount,'#,##0') [Views],\n  q.commentcount [Cmnts],\n  q.commentcount+sum(a.commentcount) [All Cmnts],\n  format(q.favoritecount,'#,##0') [Fav],\n  format(q.score,'#,##0') [Score],\n  q.answercount [Answers],\n  format(avg(a.score),'#,##0') [Avg A],\n  format(max(a.score),'#,##0') [Max A],\n  q.Tags\nfrom posts q left join posts a on q.id=a.parentid\nwhere q.viewcount>2000000 and q.posttypeid=1 and a.posttypeid=2\ngroup by format(q.creationdate,'yyyy-MMM-dd'),len(q.body),q.id,q.viewcount,q.answercount,\n  q.commentcount,q.favoritecount,q.Score,q.tags\norder by q.viewcount desc"},{"QuerySetId":1162974,"Title":"Average Score of posts created within two days of user creation date in 2019","Description":null,"QueryBody":"SELECT Posts.Score FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.CreationDate < DATEADD(Day, 2, Users.CreationDate) AND YEAR(Users.CreationDate) = 2019","CreationDate":"2019-12-06 12:50:58","validated":false,"QueryBody_Original":"SELECT  Posts.Score FROM Posts INNER JOIN Users on Posts.OwnerUserId = Users.Id WHERE Posts.CreationDate < DATEADD(Day,2,Users.CreationDate) AND Year(Users.CreationDate) = 2019"},{"QuerySetId":1162994,"Title":"Average number of posts created within two days of user creation date in 2019","Description":null,"QueryBody":"SELECT COUNT(Posts.Id) FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.CreationDate < DATEADD(Day, 2, Users.CreationDate) AND YEAR(Users.CreationDate) = 2019 GROUP BY Users.Id","CreationDate":"2019-12-06 13:21:39","validated":false,"QueryBody_Original":"SELECT  COUNT(Posts.Id)  FROM Posts INNER JOIN Users on Posts.OwnerUserId = Users.Id WHERE Posts.CreationDate < DATEADD(Day,2,Users.CreationDate) AND Year(Users.CreationDate) = 2019 GROUP BY Users.Id"},{"QuerySetId":1163165,"Title":"List posts of deleted user","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerDisplayName FROM Posts WHERE OwnerDisplayName = 'user121799'","CreationDate":"2019-12-06 15:25:15","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], OwnerDisplayName\nFROM Posts\nWHERE OwnerDisplayName = 'user121799';"},{"QuerySetId":1163414,"Title":"Get posts data from 2019","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id WHERE YEAR(a.CreationDate) = 2019 AND q.PostTypeId = 1 AND a.PostTypeId = 2 \/* answers *\/","CreationDate":"2019-12-07 01:24:17","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Posts q\nINNER JOIN Posts a on q.AcceptedAnswerId = a.Id\nWHERE year(a.CreationDate)=2019\n      and q.PostTypeId = 1\n      and a.PostTypeId = 2 -- answers"},{"QuerySetId":1163428,"Title":"Get body of all accepted answers in 2019","Description":null,"QueryBody":"SELECT a.Body FROM Posts AS q INNER JOIN Posts AS a ON q.AcceptedAnswerId = a.Id WHERE YEAR(a.CreationDate) = 2019 AND q.PostTypeId = 1 AND a.PostTypeId = 2 \/* answers *\/","CreationDate":"2019-12-07 01:41:57","validated":false,"QueryBody_Original":"SELECT  a.Body\nFROM Posts q\nINNER JOIN Posts a on q.AcceptedAnswerId = a.Id\nWHERE year(a.CreationDate)=2019\n      and q.PostTypeId = 1\n      and a.PostTypeId = 2 -- answers"},{"QuerySetId":1164046,"Title":"Top Stackoverflow users by Country","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName AS Name, Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##CountryName##%') ORDER BY Reputation DESC","CreationDate":"2019-12-08 19:49:59","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],  DisplayName  AS Name, \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##CountryName##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1164150,"Title":"Attempt to list suspended users","Description":null,"QueryBody":"SELECT Id AS \"User Link\" FROM Users WHERE Reputation = 1 AND UpVotes > 0","CreationDate":"2019-12-08 23:38:37","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link]\n  FROM Users\n  WHERE Reputation = 1\n    AND UpVotes > 0\n-- might contain false positives where users lost all their reputation\n-- because of a downvoted post"},{"QuerySetId":1164480,"Title":"Find posts tagged with only one tag","Description":"Probably not the most efficient way... ordered by creation views\r\n","QueryBody":"SELECT p.id AS \"Post Link\", p.title, p.id, p.body, p.OwnerUserId, p.ParentId, p.tags, p.AnswerCount, p.AcceptedAnswerId, p.score, p.CreationDate FROM posts AS p WHERE (p.posttypeid = 2) AND CreationDate > '2018-12-31' AND CreationDate < '2019-01-31'","CreationDate":"2019-12-09 14:05:30","validated":false,"QueryBody_Original":"SELECT   p.id as [Post Link],p.title,p.id,p.body,p.OwnerUserId,p.ParentId, p.tags, p.AnswerCount,p.AcceptedAnswerId,p.score, p.CreationDate from posts as p\nwhere (p.posttypeid=2)\n and CreationDate > '2018-12-31'\n and CreationDate < '2019-01-31'"},{"QuerySetId":1165463,"Title":"Highest Scoring Questions by One Time User","Description":null,"QueryBody":"SELECT * FROM Users AS u WHERE Id IN (SELECT p.OwnerUserId FROM Posts AS p WHERE p.OwnerUserId IN (SELECT id FROM Users AS u WHERE Reputation > 20000) GROUP BY p.OwnerUserId HAVING (COUNT(*) = 1))","CreationDate":"2019-12-10 20:23:12","validated":false,"QueryBody_Original":"SELECT   *\n  FROM  Users u\n  WHERE Id IN (\n              SELECT  p.OwnerUserId\n                FROM  Posts p\n                WHERE p.OwnerUserId IN (\n                            SELECT  id\n                              FROM  Users u\n                              WHERE Reputation > 20000\n                            )\n                GROUP BY p.OwnerUserId\n                HAVING (COUNT(*) = 1)\n              )"},{"QuerySetId":1166432,"Title":"Questions not answered by me","Description":null,"QueryBody":"SELECT p.id, p.Id AS \"Post Link\", p.Tags, p.CreationDate, p.ViewCount, p.OwnerUserId AS \"User Link\" FROM Posts AS p LEFT JOIN LATERAL (SELECT Id FROM Posts WHERE ParentId = p.Id AND OwnerUserId = 860099) AS a WHERE a.Id IS NULL AND p.PostTypeId = 1 \/* Questions *\/ AND p.tags LIKE '%javascript%' ORDER BY p.id LIMIT 100","CreationDate":"2019-12-12 13:29:21","validated":false,"QueryBody_Original":"SELECT  TOP 100 \n  p.id,\n  p.Id AS [Post Link],\n  p.Tags, \n  p.CreationDate, \n  p.ViewCount,\n  p.OwnerUserId AS [User Link]\n  FROM Posts AS p\n  OUTER APPLY (\n    SELECT Id FROM Posts\n      WHERE ParentId = p.Id\n        AND OwnerUserId = 860099\n  ) a\n  WHERE a.Id IS NULL\n    AND p.PostTypeId = 1 -- Questions\n    AND p.tags like '%javascript%'\n  ORDER BY p.id ASC"},{"QuerySetId":1167116,"Title":"My answers to deleted questions","Description":null,"QueryBody":"SELECT COUNT(*) AS n FROM Posts AS a WHERE NOT a.DeletionDate IS NULL","CreationDate":"2019-12-13 17:36:51","validated":false,"QueryBody_Original":"SELECT  COUNT(*) AS n FROM Posts a \nWHERE a.DeletionDate IS NOT NULL"},{"QuerySetId":1167308,"Title":"Users with high proportion of Au and Ag badges","Description":null,"QueryBody":"SELECT * \/* , bronze *\/ \/* , silver *\/ \/* , gold *\/ FROM (SELECT userid \/* , sum(case when class = 3 then 1 else 0 end) as bronze *\/ \/* , sum(case when class = 2 then 1 else 0 end) as silver *\/ \/* , sum(case when class = 1 then 1 else 0 end) as gold *\/ FROM badges GROUP BY userid) AS data","CreationDate":"2019-12-13 20:56:06","validated":false,"QueryBody_Original":"SELECT  *\n  --, bronze\n  --, silver\n  --, gold\nfrom (\n  SELECT userid\n  --, sum(case when class = 3 then 1 else 0 end) as bronze\n  --, sum(case when class = 2 then 1 else 0 end) as silver\n  --, sum(case when class = 1 then 1 else 0 end) as gold\n  from badges\n  group by userid\n) data\n--order by gold desc, silver desc , bronze desc\n--where (gold >= bronze + silver) and (gold + silver + bronze > 0)"},{"QuerySetId":1167411,"Title":"search a question that appeared on Google - now deleted","Description":null,"QueryBody":"SELECT P.* FROM Posts AS P WHERE P.Id = 33665453","CreationDate":"2019-12-14 01:23:23","validated":false,"QueryBody_Original":"SELECT  P.* \nFROM Posts P \nWHERE P.Id = 33665453;"},{"QuerySetId":1168409,"Title":"Number of answers by reputation","Description":null,"QueryBody":"SELECT CAST(LOG10(Users.Reputation) AS INT) + 1 AS \"<10^x Reputation\", COUNT(Posts.Id) AS \"Answers\" FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 GROUP BY CAST(LOG10(Users.Reputation) AS INT)","CreationDate":"2019-12-16 23:07:50","validated":false,"QueryBody_Original":"SELECT  CAST(LOG10(Users.Reputation) as int)+1 as [<10^x Reputation], count(Posts.Id) as [Answers]\nfrom Posts JOIN Users ON Posts.OwnerUserId = Users.Id\nwhere Posts.PostTypeId = 2\ngroup by CAST(LOG10(Users.Reputation) as int);"},{"QuerySetId":1168807,"Title":"List of users by reputation >= 101","Description":null,"QueryBody":"SELECT Reputation FROM Users WHERE Reputation >= 101","CreationDate":"2019-12-18 15:10:56","validated":false,"QueryBody_Original":"SELECT  Reputation FROM Users\nWHERE Reputation >= 101"},{"QuerySetId":1168857,"Title":"Top SO users from Tuticorin, Tamilnadu.","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%Madurai%' OR UPPER(Location) LIKE '%Madurai%' OR Location LIKE '%Madurai%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2019-12-17 22:03:49","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Madurai%'\n    OR UPPER(Location) LIKE '%Madurai%'\n    or Location like '%Madurai%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1169883,"Title":"Top 10 One-Sided Vote Casters","Description":null,"QueryBody":"SELECT * FROM (SELECT u.reputation, u.displayname, u.upvotes, u.downvotes, u.downvotes - u.upvotes AS diff, 'Not very generous' AS Dsc FROM users AS u WHERE u.id >= 0 ORDER BY diff DESC LIMIT 10 UNION SELECT u.reputation, u.displayname, u.upvotes, u.downvotes, u.upvotes - u.downvotes AS diff, 'Very generous' AS Dsc FROM users AS u WHERE u.id >= 0 ORDER BY diff DESC LIMIT 10) AS t ORDER BY dsc, diff DESC","CreationDate":"2019-12-19 04:16:10","validated":false,"QueryBody_Original":"SELECT  *\nfrom (\n  SELECT top(10)\n         u.reputation\n       , u.displayname\n       , u.upvotes\n       , u.downvotes\n       , u.downvotes - u.upvotes as diff\n       , 'Not very generous' AS Dsc\n  from users u\n  where u.id >= 0\n  order by diff desc\n  union\n  SELECT top(10)\n         u.reputation\n       , u.displayname\n       , u.upvotes\n       , u.downvotes\n       , u.upvotes - u.downvotes as diff\n       , 'Very generous' AS Dsc\n  from users u\n  where u.id >= 0\n  order by diff desc\n  ) t\norder by dsc, diff desc"},{"QuerySetId":1170607,"Title":"Top 100 Users From The Philippines","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%philippines%' OR UPPER(Location) LIKE '%PHI' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2019-12-21 00:54:39","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%philippines%'\n    OR UPPER(Location) LIKE '%PHI'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1170643,"Title":"Find posts made by old deleted users","Description":"Posts made by old deleted users whose names still retain.","QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE OwnerUserId IS NULL AND (OwnerDisplayName <> 'anon' AND NOT OwnerDisplayName LIKE 'user%' AND PostTypeID = 2) ORDER BY CreationDate DESC","CreationDate":"2019-12-21 03:40:59","validated":false,"QueryBody_Original":"SELECT  Id As [Post Link], CreationDate\nFrom Posts\nWhere OwnerUserId Is Null And (OwnerDisplayName != 'anon' AND \n  OwnerDisplayName NOT LIKE 'user%' \n  AND PostTypeID = 2)\nOrder By CreationDate Desc"},{"QuerySetId":1170739,"Title":"developers over 500 reps in Ahmedabad ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%ahmedabad%' OR UPPER(Location) LIKE '%AHMEDABAD%' OR Location LIKE '%Ahmedabad%') AND Reputation >= 500 ORDER BY Reputation DESC","CreationDate":"2019-12-21 15:59:43","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%ahmedabad%'\n    OR UPPER(Location) LIKE '%AHMEDABAD%'\n    or Location like '%Ahmedabad%')\n    AND Reputation >= 500\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1172899,"Title":"Checking whether such Tag exists","Description":null,"QueryBody":"SELECT DISTINCT TagName FROM Tags WHERE UPPER(TagName) LIKE UPPER('%##TagName##%')","CreationDate":"2019-12-29 18:55:00","validated":false,"QueryBody_Original":"SELECT  DISTINCT TagName FROM Tags\nWhere Upper (TagName) LIKE Upper('%##TagName##%')"},{"QuerySetId":1173294,"Title":"Comments left by a user on your posts","Description":null,"QueryBody":"SELECT c.CreationDate AS \"Comment Date\", p.Id AS \"Post Link\", c.Text AS Comment FROM Posts AS p INNER JOIN Comments AS c ON c.PostId = p.Id WHERE c.UserId = 9003 ORDER BY c.CreationDate","CreationDate":"2020-04-10 20:31:53","validated":false,"QueryBody_Original":"SELECT  c.CreationDate as [Comment Date], p.Id AS [Post Link], c.Text AS Comment FROM Posts p\nINNER JOIN Comments c\nON c.PostId=p.Id\nWHERE c.UserId=9003\nORDER BY c.CreationDate ASC"},{"QuerySetId":1173867,"Title":"Total number of comments by year","Description":null,"QueryBody":"SELECT COUNT(c.Id) AS Comments, YEAR(c.CreationDate) AS Year_Data, YEAR(p.CreationDate) AS Post_Year_Data, p.posttypeid FROM Comments AS c INNER JOIN posts AS p ON p.id = c.postid GROUP BY YEAR(c.CreationDate), YEAR(p.CreationDate), p.posttypeid ORDER BY 2, 3, 4","CreationDate":"2020-01-03 00:14:38","validated":false,"QueryBody_Original":"SELECT  COUNT(c.Id) as Comments\n     , YEAR(c.CreationDate) as Year_Data\n     , YEAR(p.CreationDate) as Post_Year_Data\n     ,  p.posttypeid\nFROM Comments c\ninner join posts p on p.id = c.postid\nGROUP BY YEAR(c.CreationDate)\n , YEAR(p.CreationDate)  \n ,  p.posttypeid\n \norder by 2,3,4"},{"QuerySetId":1173871,"Title":"Users in the Greater Baltimore area","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%michigan%' ORDER BY Reputation DESC","CreationDate":"2020-01-02 22:00:18","validated":false,"QueryBody_Original":"SELECT  Id AS [User Link],Reputation,Location\nFROM Users\nWHERE lower(Location) LIKE '%michigan%'\nORDER BY Reputation DESC"},{"QuerySetId":1173912,"Title":"Most questions by User on IPS Meta","Description":null,"QueryBody":"SELECT u.Id, u.DisplayName, COUNT(*) AS NumPosts FROM Posts AS p INNER JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.PostTypeId = 1 GROUP BY U.Id, U.DisplayName ORDER BY NumPosts DESC","CreationDate":"2020-08-03 12:39:18","validated":false,"QueryBody_Original":"SELECT  \n  u.Id, u.DisplayName, COUNT(*) AS NumPosts\nFROM Posts p\n  INNER JOIN Users u ON u.Id = p.OwnerUserId\nWHERE \n  p.PostTypeId = 1\nGROUP BY U.Id, U.DisplayName\nORDER BY NumPosts DESC"},{"QuerySetId":1174276,"Title":"Get Unique technology or programming related keywords","Description":null,"QueryBody":"SELECT * FROM Tags ORDER BY count DESC","CreationDate":"2020-02-23 23:23:32","validated":false,"QueryBody_Original":"SELECT  * from Tags order by count desc"},{"QuerySetId":1174320,"Title":"Fenced Code Blocks - Edit Needed","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Body FROM Posts AS p WHERE p.Body LIKE '%' + '<p><code>' + CHAR(10) + '%' AND p.Score > 50 LIMIT 100","CreationDate":"2020-01-04 03:46:11","validated":false,"QueryBody_Original":"SELECT  TOP 100 p.Id AS [Post Link], p.Body \nFROM Posts p\nWHERE p.Body LIKE '%' + '<p><code>' + CHAR(10) + '%'\n  AND p.Score > 50"},{"QuerySetId":1174961,"Title":"Find questions with X duplicate targets","Description":null,"QueryBody":"SELECT pl.PostId AS \"Post Link\", COUNT(LinkTypeId) AS \"Number of dupe-targets\" FROM PostLinks AS pl WHERE pl.LinkTypeId = 3 GROUP BY pl.PostId ORDER BY 'Number of dupe-targets' DESC","CreationDate":"2020-01-06 04:07:39","validated":false,"QueryBody_Original":"SELECT  pl.PostId AS [Post Link], COUNT(LinkTypeId) AS 'Number of dupe-targets'\nFROM PostLinks pl WHERE pl.LinkTypeId=3 GROUP BY pl.PostId\nORDER BY 'Number of dupe-targets' DESC"},{"QuerySetId":1175216,"Title":"Posts which were edited after they were deleted","Description":null,"QueryBody":"SELECT DISTINCT ph1.PostId AS \"Post Link\", CONCAT('site:\/\/posts\/', ph1.PostId, '\/revisions') AS \"Revisions Link\" FROM PostHistory AS ph1 INNER JOIN PostHistory AS ph2 ON ph1.PostId = ph2.PostId WHERE (ph2.PostHistoryTypeId = 12) AND (ph1.PostHistoryTypeId IN (4, 5, 6)) AND (ph1.CreationDate > ph2.CreationDate)","CreationDate":"2020-01-06 15:19:56","validated":false,"QueryBody_Original":"SELECT \n  DISTINCT ph1.PostId AS [Post Link],\n  concat('site:\/\/posts\/',ph1.PostId,'\/revisions') AS [Revisions Link]\nFROM PostHistory ph1 INNER JOIN PostHistory ph2 ON ph1.PostId=ph2.PostId\nWHERE (ph2.PostHistoryTypeId=12) AND (ph1.PostHistoryTypeId in (4,5,6))\n  AND (ph1.CreationDate>ph2.CreationDate)"},{"QuerySetId":1175553,"Title":"Get upvoted answers where question doesn\u2019t have tag.","Description":null,"QueryBody":"SELECT * FROM Posts","CreationDate":"2020-01-07 03:24:53","validated":false,"QueryBody_Original":"SELECT  * FROM Posts"},{"QuerySetId":1175762,"Title":"Comments containing \\text but not \\\\text","Description":null,"QueryBody":"SELECT Comments.Id AS \"Comment Link\", Comments.CreationDate FROM Comments LEFT JOIN Posts ON Comments.PostId = Posts.Id WHERE UserId = 7733418 AND Text LIKE '%.dump%' AND Tags LIKE '%sqlite%' ORDER BY CreationDate DESC","CreationDate":"2020-02-18 03:34:14","validated":false,"QueryBody_Original":"SELECT  Comments.Id AS [Comment Link], Comments.CreationDate\nFROM Comments\nLEFT JOIN Posts ON Comments.PostId = Posts.Id\nWHERE UserId = 7733418\nAND Text LIKE '%.dump%'\nAND Tags LIKE '%sqlite%'\nORDER BY CreationDate Desc"},{"QuerySetId":1176197,"Title":"Total de perguntas n\u00e3o deletadas","Description":null,"QueryBody":"SELECT COUNT(q.Id) FROM Posts AS q\/* AND q.ClosedDate is not null -- closed *\/  WHERE q.PostTypeId = 1 \/* question *\/ AND YEAR(q.CreationDate) = 2019","CreationDate":"2020-01-07 23:26:01","validated":false,"QueryBody_Original":"SELECT  count(q.Id)\nFROM Posts q\nWHERE q.PostTypeId = 1 -- question\n--AND q.ClosedDate is not null -- closed\nAND YEAR(q.CreationDate) = 2019"},{"QuerySetId":1176225,"Title":"Total de perguntas n\u00e3o deletadas e fechadas","Description":null,"QueryBody":"SELECT COUNT(q.Id) FROM Posts AS q WHERE q.PostTypeId = 1 \/* question *\/ AND NOT q.ClosedDate IS NULL \/* closed *\/ AND YEAR(q.CreationDate) = 2019","CreationDate":"2020-01-07 23:27:18","validated":false,"QueryBody_Original":"SELECT  count(q.Id)\nFROM Posts q\nWHERE q.PostTypeId = 1 -- question\nAND q.ClosedDate is not null -- closed\nAND YEAR(q.CreationDate) = 2019"},{"QuerySetId":1176227,"Title":"Usu\u00e1rios com reputa\u00e7\u00e3o suficiente para fechar perguntas","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u WHERE u.Reputation >= 3000","CreationDate":"2020-01-07 23:29:49","validated":false,"QueryBody_Original":"SELECT  Count(*) from Users u where u.Reputation >= 3000"},{"QuerySetId":1176228,"Title":"Usu\u00e1rios com reputa\u00e7\u00e3o suficiente para fechar perguntas que acessaram o site em 2019","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u WHERE u.Reputation >= 3000 AND YEAR(u.LastAccessDate) >= 2019","CreationDate":"2020-01-07 23:31:34","validated":false,"QueryBody_Original":"SELECT  Count(*) from Users u where u.Reputation >= 3000\nand YEAR(u.LastAccessDate) >= 2019"},{"QuerySetId":1176229,"Title":"Usu\u00e1rios que deram algum voto de fechamento em 2019","Description":null,"QueryBody":"SELECT COUNT(DISTINCT u.Id) FROM Users AS u WHERE u.Reputation >= 3000 AND u.Id IN (SELECT UserId FROM PostHistory WHERE PostHistoryTypeId = 10 AND YEAR(creationdate) = 2019)","CreationDate":"2020-01-07 23:37:48","validated":false,"QueryBody_Original":"SELECT  count(distinct u.Id) from Users u where u.Reputation >= 3000\nand u.Id in\n(SELECT UserId\n from PostHistory \n WHERE PostHistoryTypeId = 10\n and year(creationdate) = 2019)"},{"QuerySetId":1176915,"Title":"Modify the query to display the users ordered by decreasing reputation.","Description":null,"QueryBody":"SELECT DisplayName, Id, Location, Reputation FROM Users WHERE reputation >= 550000","CreationDate":"2020-01-09 01:59:18","validated":false,"QueryBody_Original":"SELECT  DisplayName, Id, Location, Reputation \nFROM Users where reputation >= 550000 ;"},{"QuerySetId":1177673,"Title":"select Title, Posts.Id, PostLinks.RelatedPostId, PostLinks.PostId  from Posts inner join PostLinks O","Description":null,"QueryBody":"SELECT Title, Posts.Id, PostLinks.RelatedPostId, PostLinks.PostId FROM Posts INNER JOIN PostLinks ON PostLinks.LinkTypeId = 3 AND (Posts.Id = PostLinks.PostId OR Posts.Id = PostLinks.RelatedPostId)","CreationDate":"2020-01-09 22:11:23","validated":false,"QueryBody_Original":"SELECT  Title, Posts.Id, PostLinks.RelatedPostId, PostLinks.PostId  from Posts inner join PostLinks ON PostLinks.LinkTypeId=3 and (Posts.Id = PostLinks.PostId or Posts.Id = PostLinks.RelatedPostId)"},{"QuerySetId":1177894,"Title":"Top 150 SO Users from Chandigarh","Description":"Top 150 SO Users from Chandigarh, India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%INDIA%' OR Location LIKE '%india%' AND Reputation >= 10000 ORDER BY Reputation DESC LIMIT 15000","CreationDate":"2020-01-10 11:10:00","validated":false,"QueryBody_Original":"SELECT  TOP 15000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%india%'\n    OR UPPER(Location) LIKE '%INDIA%'\n    or Location like '%india%'\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1178111,"Title":"Number of active experts per week","Description":null,"QueryBody":"SELECT YR_WK, COUNT(*) AS NumActiveExperts FROM (SELECT (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%W') - 1) \/ 52.0) AS YR_WK, u.id AS UID, COUNT(*) AS NumAnswers FROM users AS u INNER JOIN posts AS p ON p.owneruserid = u.id AND p.posttypeid = 2 AND p.score > 0 GROUP BY (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%W') - 1) \/ 52.0), u.id) AS AnsPerUPerWk WHERE NumAnswers > 1 GROUP BY YR_WK ORDER BY YR_WK","CreationDate":"2020-01-10 19:40:05","validated":false,"QueryBody_Original":"SELECT  YR_WK, count(*) as NumActiveExperts\nfrom\n(\n  SELECT\n      (datepart(yy, p.creationdate) + (datepart(wk, p.creationdate)-1) \/ 52.0) as YR_WK\n    , u.id as UID\n    , count (*) as NumAnswers\n  from users u\n  inner join posts p on\n        p.owneruserid = u.id\n    and p.posttypeid = 2\n    and p.score > 0\n  group by \n     (datepart(yy, p.creationdate) + (datepart(wk, p.creationdate)-1) \/ 52.0)\n    , u.id\n) AnsPerUPerWk\nwhere NumAnswers > 1\ngroup by YR_WK\norder by YR_WK asc"},{"QuerySetId":1178499,"Title":"Best answers hidden by the newest SE braindamage","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Id, Score, CreationDate FROM Posts WHERE ParentId IN (SELECT Dupe.Id FROM PostLinks, Posts AS Dupe, Posts AS Orig WHERE PostLinks.LinkTypeId = 3 AND PostLinks.PostId = Dupe.Id AND PostLinks.RelatedPostId = Orig.Id AND NOT Dupe.ClosedDate IS NULL) ORDER BY Score DESC, Id LIMIT 100","CreationDate":"2020-01-12 15:22:54","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Post Link], Id, Score, CreationDate\nFROM Posts\nWHERE ParentId IN (\n  SELECT Dupe.Id\n  FROM PostLinks, Posts Dupe, Posts Orig\n  WHERE\n    PostLinks.LinkTypeId = 3\n    AND\n    PostLinks.PostId = Dupe.Id\n    AND\n    PostLinks.RelatedPostId = Orig.Id\n    AND\n    Dupe.ClosedDate IS NOT NULL\n  )\nORDER BY Score DESC, Id"},{"QuerySetId":1179568,"Title":"Select title with id 453443","Description":null,"QueryBody":"SELECT Title FROM Posts WHERE Id = 453443","CreationDate":"2020-01-13 18:19:00","validated":false,"QueryBody_Original":"SELECT  Title FROM Posts WHERE Id = 453443"},{"QuerySetId":1179739,"Title":"Top 10 highest users by reputation + avg answers per day","Description":"If you thing that those users have many reputations because they answered some great answers long time ago, think again.","QueryBody":"SELECT Users.Id AS \"User Link\", Reputation, ((COUNT(Posts.Id) \/ DATEDIFF(CURRENT_TIMESTAMP(), Users.CreationDate))) AS \"Answers per day\" FROM Users INNER JOIN Posts ON Posts.OwnerUserId = Users.Id GROUP BY Users.CreationDate, Users.Id, Users.Reputation ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2020-02-20 03:00:13","validated":false,"QueryBody_Original":"SELECT  TOP 1000 \n  Users.Id as [User Link],\n  Reputation,\n  (\n    (COUNT(Posts.Id) \/ DATEDIFF(DAY, Users.CreationDate, GETDATE()))\n  ) AS [Answers per day]\nFROM Users INNER JOIN\n     Posts ON Posts.OwnerUserId = Users.Id\nGROUP BY Users.CreationDate, Users.Id, Users.Reputation\nORDER BY Reputation DESC"},{"QuerySetId":1179863,"Title":"What are all my usernames?","Description":null,"QueryBody":"SELECT UserId, COUNT(DISTINCT UserDisplayName) AS num_names FROM PostHistory GROUP BY UserId ORDER BY num_names DESC","CreationDate":"2020-01-14 03:11:17","validated":false,"QueryBody_Original":"SELECT  UserId, COUNT(DISTINCT UserDisplayName) num_names FROM PostHistory GROUP BY UserId ORDER BY num_names DESC\n--(SELECT DISTINCT\n--  Users.Id user_id,\n--  Users.DisplayName current_name,\n--  Users.accountId account_id,\n--  PostHistory.UserDisplayName past_display_name,\n--FROM\n--  Users LEFT JOIN PostHistory ON Users.Id = PostHistory.UserId\n--WHERE\n--  PostHistory.UserDisplayName IS NOT NULL\n--ORDER BY\n--  user_id\n--) GROUP BY user_id"},{"QuerySetId":1179870,"Title":"Got the most accept votes in a single day","Description":null,"QueryBody":"SELECT Votes.CreationDate, A.OwnerUserId AS \"User Link\", COUNT(*) AS Count FROM Votes, Posts AS Q, Posts AS A WHERE Votes.PostId = A.Id AND A.OwnerUserId > 0 AND Votes.VoteTypeId = 1 AND A.ParentId = Q.Id AND Q.OwnerUserId > 0 AND Q.OwnerUserId <> A.OwnerUserId GROUP BY Votes.CreationDate, A.OwnerUserId ORDER BY Count DESC, A.OwnerUserId, Votes.CreationDate LIMIT 100","CreationDate":"2020-01-14 04:23:22","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Votes.CreationDate,\n  A.OwnerUserId AS [User Link],\n  COUNT(*) AS Count\nFROM Votes, Posts Q, Posts A\nWHERE\n  Votes.PostId = A.Id\n  AND\n  A.OwnerUserId > 0\n  AND\n  Votes.VoteTypeId = 1\n  AND\n  A.ParentId = Q.Id\n  AND\n  Q.OwnerUserId > 0\n  AND\n  Q.OwnerUserId <> A.OwnerUserId\nGROUP BY Votes.CreationDate, A.OwnerUserId\nORDER BY Count DESC, A.OwnerUserId, Votes.CreationDate"},{"QuerySetId":1180192,"Title":"Own-answered post, accepted the answer of others","Description":null,"QueryBody":"SELECT Q.OwnerUserId AS \"User Link\", COUNT(*) AS Count FROM Posts AS Q, Posts AS A, Posts AS AA WHERE A.ParentId = Q.Id AND Q.OwnerUserId > 0 AND A.OwnerUserId > 0 AND AA.OwnerUserId > 0 AND Q.AcceptedAnswerId = AA.Id AND A.OwnerUserId = Q.OwnerUserId AND AA.OwnerUserId <> Q.OwnerUserId GROUP BY Q.OwnerUserId ORDER BY Count DESC, Q.OwnerUserId LIMIT 100","CreationDate":"2020-01-14 23:19:34","validated":false,"QueryBody_Original":"SELECT  TOP 100 Q.OwnerUserId AS [User Link], COUNT(*) AS Count\nFROM Posts Q, Posts A, Posts AA\nWHERE\n  A.ParentId = Q.Id\n  AND\n  Q.OwnerUserId > 0\n  AND\n  A.OwnerUserId > 0\n  AND\n  AA.OwnerUserId > 0\n  AND\n  Q.AcceptedAnswerId = AA.Id\n  AND\n  A.OwnerUserId = Q.OwnerUserId\n  AND\n  AA.OwnerUserId <> Q.OwnerUserId\nGROUP BY Q.OwnerUserId\nORDER BY Count DESC, Q.OwnerUserId"},{"QuerySetId":1180512,"Title":"eHealth Discussions - Users of Accepted Anwser","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 177470","CreationDate":"2020-01-15 21:09:33","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id = 177470"},{"QuerySetId":1180687,"Title":"Comments that are no longer needed","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\" FROM Comments WHERE LENGTH(Text) < 50 AND (Text LIKE '%Thank%' OR Text LIKE '[+-]1%') ORDER BY CreationDate LIMIT 200","CreationDate":"2020-03-13 01:21:46","validated":false,"QueryBody_Original":"SELECT  TOP 200 Id AS [Comment Link]\nFROM Comments\nWHERE \n    LEN(Text) < 50\n    AND (\n        Text LIKE '%Thank%'\n     OR Text LIKE '[+-]1%'\n    )\nORDER BY CreationDate ASC"},{"QuerySetId":1180729,"Title":"How many users are in the database","Description":null,"QueryBody":"SELECT COUNT(*) AS number_of_userss FROM users","CreationDate":"2020-01-16 09:43:04","validated":false,"QueryBody_Original":"SELECT  count(*) as number_of_userss\nfrom users;"},{"QuerySetId":1180776,"Title":"Top questions for a TAG","Description":null,"QueryBody":"SELECT CONCAT('https:\/\/stackoverflow.com\/questions\/', id), AcceptedAnswerId, CreationDate AS Score, ViewCount, FavoriteCount, Title, Tags, AnswerCount, CommentCount, Body, OwnerUserId, LastEditDate FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%<##TagName##>%' ORDER BY ViewCount DESC LIMIT 50","CreationDate":"2020-01-16 16:08:49","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  CONCAT('https:\/\/stackoverflow.com\/questions\/', id),\n  AcceptedAnswerId,\n  CreationDate\n  Score,\n  ViewCount,\n  FavoriteCount,\n  Title,\n  Tags,\n  AnswerCount,\n  CommentCount,\n  Body,\n  OwnerUserId,\n  LastEditDate\nFROM Posts\nWHERE \n  PostTypeId = 1\nAND\n  Tags LIKE '%<##TagName##>%'\nORDER BY ViewCount DESC"},{"QuerySetId":1180979,"Title":"List of all tags ordered by counts","Description":null,"QueryBody":"SELECT * FROM Tags ORDER BY Count DESC","CreationDate":"2020-01-16 19:36:30","validated":false,"QueryBody_Original":"SELECT  * FROM Tags\nORDER BY Count DESC"},{"QuerySetId":1181070,"Title":"display the users ordered by decreasing reputation","Description":null,"QueryBody":"SELECT Badges.Class, COUNT(DISTINCT Badges.Id) AS BadgeCount, Users.DisplayName, Users.Location, Users.Reputation FROM Users JOIN Badges ON Users.Id = Badges.UserId WHERE YEAR(Date) = 2016 AND MONTH(Date) = 01 GROUP BY Badges.Class, Users.DisplayName, Users.Location, Users.Reputation ORDER BY BadgeCount DESC","CreationDate":"2020-01-17 00:18:54","validated":false,"QueryBody_Original":"SELECT  Badges.Class, count(DISTINCT Badges.Id) AS BadgeCount, \nUsers.DisplayName, Users.Location, Users.Reputation\nFROM Users JOIN Badges\nON Users.Id = Badges.UserId\nWHERE year(Date) = 2016 AND month(Date) = 01\nGROUP BY Badges.Class, Users.DisplayName, Users.Location, Users.Reputation\nORDER BY BadgeCount DESC"},{"QuerySetId":1182863,"Title":"1 reputation users with a meta posts with more than 5 votes, active in last 6 months","Description":null,"QueryBody":"SELECT SUM(ABS(p.Score)) AS scores, MAX(p.CreationDate) AS lastedit, u.Id AS \"User Link\" FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.CommunityOwnedDate IS NULL AND u.Reputation = 1 AND p.Score > 5 AND u.Id > 0 GROUP BY u.Id HAVING MAX(p.CreationDate) > DATEADD(m, -6, GETDATE()) ORDER BY scores DESC","CreationDate":"2020-01-26 13:15:10","validated":false,"QueryBody_Original":"SELECT  sum(abs(p.Score)) as scores, max(p.CreationDate) AS lastedit, u.Id AS [User Link]\n  FROM Posts AS p\n  INNER JOIN Users AS u ON p.OwnerUserId = u.Id\n  WHERE p.CommunityOwnedDate IS NULL\n    AND u.Reputation = 1\n    AND p.Score > 5\n    AND u.Id > 0\n  GROUP BY u.Id\n  HAVING max(p.CreationDate) > dateadd(m, -6, getdate())\n  ORDER BY scores DESC"},{"QuerySetId":1183294,"Title":"find users on stackoverflow by location","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, LastAccessDate, Location FROM Users WHERE Location LIKE '%##Location##%' ORDER BY LastAccessDate DESC","CreationDate":"2020-01-20 08:28:28","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, LastAccessDate, Location\nfrom Users\nwhere Location like '%##Location##%'\norder by LastAccessDate desc"},{"QuerySetId":1183295,"Title":"find users on stackoverflow by location and aboutme","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Reputation, DisplayName, LastAccessDate, Location, AboutMe FROM Users WHERE Location LIKE '%##Location##%' AND AboutMe LIKE '%##AboutMe##%' ORDER BY LastAccessDate DESC","CreationDate":"2020-02-08 17:04:20","validated":false,"QueryBody_Original":"SELECT  Id [User Link], Reputation, DisplayName, LastAccessDate, Location, AboutMe \nfrom Users\nwhere Location like '%##Location##%' and AboutMe like '%##AboutMe##%'\norder by LastAccessDate desc"},{"QuerySetId":1183460,"Title":"select  id as id","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE posttypeid = 2 AND id <= 59123006 AND NOT OwnerUserId IS NULL","CreationDate":"2020-01-20 19:36:31","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where posttypeid = 2 and id <= 59123006\nand OwnerUserId is not null"},{"QuerySetId":1183686,"Title":"IndexOutOfBoundException in title of Java question","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, CreationDate, ClosedDate FROM Posts WHERE Tags LIKE '%java%' AND Title LIKE '%IndexOutOfBound%' AND YEAR(CreationDate) = 2020 ORDER BY Score DESC","CreationDate":"2020-01-23 21:22:53","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], Score, ViewCount, CreationDate, ClosedDate\nFROM Posts\nWHERE Tags LIKE '%java%' and Title LIKE '%IndexOutOfBound%' and year(CreationDate) = 2020\nORDER BY Score DESC"},{"QuerySetId":1184427,"Title":"lol i dunno what im doing","Description":null,"QueryBody":"SELECT * FROM Posts","CreationDate":"2020-01-21 16:39:54","validated":false,"QueryBody_Original":"SELECT  * FROM Posts"},{"QuerySetId":1184447,"Title":"C# about partial generic type inference","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE Tags LIKE '%c#%' AND Body LIKE '%generic%' AND Body LIKE '%partial%' AND Body LIKE '%inference%'","CreationDate":"2020-01-21 17:17:28","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link]\nFROM Posts\nWHERE \n Tags LIKE '%c#%' AND\n Body LIKE '%generic%' AND\n Body LIKE '%partial%' AND\n Body LIKE '%inference%'"},{"QuerySetId":1184508,"Title":"Past bounties by bounty date","Description":null,"QueryBody":"SELECT postid AS \"Post Link\", * FROM votes WHERE votetypeid = 9 AND creationdate BETWEEN '07\/01\/2020' AND '09\/30\/2020' AND bountyAmount > 0 ORDER BY creationdate, bountyamount DESC","CreationDate":"2020-10-20 21:37:33","validated":false,"QueryBody_Original":"SELECT  postid as [Post Link], * \nfrom votes \nwhere votetypeid = 9 and creationdate between '07\/01\/2020' AND '09\/30\/2020'\nand bountyAmount > 0\norder by creationdate asc, bountyamount desc"},{"QuerySetId":1185013,"Title":"Posts and tags since date","Description":null,"QueryBody":"SELECT MyDerivedTable.id AS \"Post Link\", MyDerivedTable.Title, MyDerivedTable.CreationDate, MyDerivedTable.Tags FROM (SELECT id, Title, CreationDate, Tags, PostTypeId, Score, ROW_NUMBER() OVER (ORDER BY id) AS RowNum FROM Posts WHERE PostTypeId = 1 AND Score >= 0 AND CreationDate >= '2019-01-01' AND CreationDate < '2020-01-01' AND LOWER(Tags) LIKE LOWER('%##TagName1##%')) AS MyDerivedTable WHERE MyDerivedTable.RowNum BETWEEN 60001 AND 90000","CreationDate":"2020-03-09 21:21:54","validated":false,"QueryBody_Original":"SELECT \n  MyDerivedTable.id AS [Post Link], MyDerivedTable.Title, MyDerivedTable.CreationDate, MyDerivedTable.Tags \nFROM (\n    SELECT id,Title,CreationDate,Tags,PostTypeId, Score,\n    ROW_NUMBER() OVER (ORDER BY id) AS RowNum\n    FROM Posts\n    WHERE PostTypeId = 1 \nand Score >= 0 \nand CreationDate >= '2019-01-01' and CreationDate < '2020-01-01'\nand lower(Tags) like lower('%##TagName1##%')\n) AS MyDerivedTable\nWHERE MyDerivedTable.RowNum BETWEEN 60001 and 90000"},{"QuerySetId":1185381,"Title":"Number of questions on DO NOT USE tags","Description":null,"QueryBody":"SELECT * FROM Tags AS T JOIN Posts AS P ON T.ExcerptPostId = P.Id WHERE P.Body LIKE 'DO NOT USE%'","CreationDate":"2020-01-22 19:23:54","validated":false,"QueryBody_Original":"SELECT  *\nFROM Tags T\n     JOIN Posts P ON T.ExcerptPostId = P.Id\nWHERE P.Body LIKE 'DO NOT USE%'"},{"QuerySetId":1185429,"Title":"Average sum of scores for all answers of a question","Description":null,"QueryBody":"SELECT AVG(q.Score * 1.0), AVG(a.Score * 1.0) FROM Posts AS q INNER JOIN (SELECT DISTINCT a.ParentId, SUM(a.Score) AS \"Score\" FROM Posts AS a WHERE a.PostTypeId = 2 \/* answers *\/ GROUP BY a.ParentId) AS a ON q.Id = a.ParentId WHERE q.PostTypeId = 1 \/* questions *\/ AND q.ClosedDate IS NULL \/* not closed *\/ AND q.Score <= 0 AND q.ViewCount >= 2000","CreationDate":"2020-01-22 19:53:19","validated":false,"QueryBody_Original":"SELECT  AVG(q.Score * 1.0), AVG(a.Score * 1.0)\nFROM Posts q\nINNER JOIN\n (SELECT DISTINCT a.ParentId, SUM(a.Score) AS [Score]\n FROM Posts a\n WHERE a.PostTypeId = 2 -- answers\n GROUP BY a.ParentId) a\nON q.Id = a.ParentId\nWHERE q.PostTypeId = 1 -- questions\nand q.ClosedDate is null -- not closed\nand q.Score <= 0 and q.ViewCount >= 2000"},{"QuerySetId":1185926,"Title":"How many stack overflow users in Uganda?","Description":null,"QueryBody":"SELECT Location, COUNT(*) FROM Users WHERE Location LIKE '%##Location##%' GROUP BY Location","CreationDate":"2020-01-24 13:31:29","validated":false,"QueryBody_Original":"SELECT  Location, COUNT(*)\nfrom Users\nwhere Location like '%##Location##%'\ngroup by Location"},{"QuerySetId":1186002,"Title":"Favorites of a user, network-wide","Description":null,"QueryBody":"SELECT * FROM Votes WHERE VoteTypeId = 5 LIMIT 100","CreationDate":"2020-01-23 19:40:24","validated":false,"QueryBody_Original":"SELECT  TOP 100 * FROM Votes WHERE VoteTypeId = 5;"},{"QuerySetId":1186622,"Title":"Wilson confidence rating for posts of a user","Description":"https:\/\/stackapps.com\/questions\/8555\/request-for-user-script-to-calculate-wilson-confidence-ratings-for-posts","QueryBody":"SELECT p.id, p.owneruserid, SUM(CASE WHEN v.votetypeid = 2 THEN 1 ELSE 0 END) AS upvotes, SUM(CASE WHEN v.votetypeid = 3 THEN 1 ELSE 0 END) AS downvotes FROM posts AS p INNER JOIN votes AS v ON v.postid = p.id WHERE v.votetypeid IN (2, 3) AND p.owneruserid = 2157772 GROUP BY p.id, p.owneruserid","CreationDate":"2020-01-24 23:12:53","validated":false,"QueryBody_Original":"SELECT  p.id\n     , p.owneruserid\n     , sum(case when v.votetypeid = 2 then 1 else 0 end) upvotes\n     , sum(case when v.votetypeid = 3 then 1 else 0 end) downvotes\nfrom posts p\ninner join votes v on v.postid = p.id\nwhere v.votetypeid in (2,3)\nand p.owneruserid = 2157772\ngroup by p.id\n       , p.owneruserid"},{"QuerySetId":1186896,"Title":"Give all Java posts with at least one answer or comment","Description":null,"QueryBody":"SELECT * FROM Comments WHERE PostId IN (SELECT Id FROM POSTS WHERE LOWER(TAGS) LIKE '%java%' AND NOT LOWER(TAGS) LIKE '%javascript%' AND (AnswerCount >= 1 OR CommentCount >= 1))","CreationDate":"2020-01-26 01:20:58","validated":false,"QueryBody_Original":"SELECT  *\nFROM Comments\nWHERE PostId in (SELECT Id\nFROM POSTS\nWHERE LOWER(TAGS) like '%java%'\nand LOWER(TAGS) not like '%javascript%'\nand (AnswerCount >= 1\nor CommentCount >= 1))"},{"QuerySetId":1187233,"Title":"Posts with accepted Answers from Google-BigQuery TAG","Description":null,"QueryBody":"SELECT Id, AcceptedAnswerId, Tags, Title, Body FROM Posts WHERE Tags LIKE '%google-bigquery%' AND NOT Tags LIKE '%python-2.%' AND CreationDate BETWEEN '2018-01-01 07:37:41' AND '2020-01-25 06:37:41' AND NOT AcceptedAnswerId IS NULL AND DeletionDate IS NULL","CreationDate":"2020-01-27 03:35:54","validated":false,"QueryBody_Original":"SELECT  Id, AcceptedAnswerId, Tags, Title, Body\nFROM Posts\nWHERE Tags LIKE '%google-bigquery%'\nand Tags NOT LIKE '%python-2.%'\nand CreationDate between '2018-01-01 07:37:41' and '2020-01-25 06:37:41'\nand AcceptedAnswerId is not null\nand DeletionDate is null"},{"QuerySetId":1187867,"Title":"Histogram of how many questions people ask","Description":null,"QueryBody":"SELECT sel.n AS \"#Questions\", COUNT(*) AS \"Occurence\" FROM (SELECT COUNT(*) AS \"n\" FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 \/* questions *\/ AND p.ClosedDate IS NULL \/* not closed *\/ GROUP BY u.Id) AS sel GROUP BY sel.n ORDER BY sel.n","CreationDate":"2020-01-28 17:37:48","validated":false,"QueryBody_Original":"SELECT  sel.n as [#Questions], count(*) as [Occurence]\nfrom\n(SELECT count(*) as [n]\nfrom Users u inner join Posts p on p.OwnerUserId = u.Id\nwhere p.PostTypeId = 1 -- questions\n and p.ClosedDate is null -- not closed\n group by u.Id) sel\ngroup by sel.n\norder by sel.n"},{"QuerySetId":1187873,"Title":"Histogram of how many answers people give","Description":null,"QueryBody":"SELECT sel.n AS \"#Answers\", COUNT(*) AS \"Occurence\" FROM (SELECT COUNT(*) AS \"n\" FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 2 \/* answer *\/ AND p.ClosedDate IS NULL \/* not closed *\/ GROUP BY u.Id) AS sel GROUP BY sel.n ORDER BY sel.n","CreationDate":"2020-01-28 17:39:41","validated":false,"QueryBody_Original":"SELECT  sel.n as [#Answers], count(*) as [Occurence]\nfrom\n(SELECT count(*) as [n]\nfrom Users u inner join Posts p on p.OwnerUserId = u.Id\nwhere p.PostTypeId = 2 -- answer\n and p.ClosedDate is null -- not closed\n group by u.Id) sel\ngroup by sel.n\norder by sel.n"},{"QuerySetId":1187991,"Title":"Badges that can be awarded more than once","Description":null,"QueryBody":"SELECT Name, COUNT(*) FROM (SELECT Name FROM Badges WHERE UserId = '22656' AND TagBased = '0') AS result GROUP BY Name HAVING COUNT(*) > 1","CreationDate":"2020-01-28 22:45:31","validated":false,"QueryBody_Original":"SELECT  Name, count(*) \nfrom (\n  SELECT Name \n  from Badges \n  where UserId = '22656' \n        and TagBased = '0' \n) as result\nGROUP BY Name\nHAVING COUNT(*) > 1"},{"QuerySetId":1188364,"Title":"select * from Users where Id= 113","Description":null,"QueryBody":"SELECT * FROM Users WHERE Id = 113","CreationDate":"2020-01-29 13:04:58","validated":false,"QueryBody_Original":"SELECT  * from Users where Id= 113"},{"QuerySetId":1188366,"Title":"select count(*) from Users ","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2020-01-29 13:04:28","validated":false,"QueryBody_Original":"SELECT  count(*) from Users"},{"QuerySetId":1188687,"Title":"Do ID askers return to the site?","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"# Questions\", MIN(p.Id) AS \"Post Link\", u.Id AS \"User Link\", u.Reputation AS \"Reputation\", DATEDIFF(CURRENT_TIMESTAMP(), u.LastAccessDate) AS \"last access to today\", DATEDIFF(u.LastAccessDate, u.CreationDate) AS \"creation to last access\" FROM Posts AS p JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 AND p.Tags LIKE '%identif%' GROUP BY u.Id, u.Reputation, DATEDIFF(CURRENT_TIMESTAMP(), u.LastAccessDate), DATEDIFF(u.LastAccessDate, u.CreationDate) ORDER BY MIN(p.Id)","CreationDate":"2020-01-30 02:29:21","validated":false,"QueryBody_Original":"SELECT  COUNT(u.Id) as '# Questions',\nMIN(p.Id) as [Post Link],\nu.Id AS [User Link],\nu.Reputation AS 'Reputation',\n--DATEDIFF(day, u.CreationDate, GETDATE()) AS 'creation to today',\nDATEDIFF(day,u.LastAccessDate,GETDATE()) AS 'last access to today',\nDATEDIFF(day, u.CreationDate, u.LastAccessDate) AS 'creation to last access'\nFROM Posts p \nJOIN Users u ON p.OwnerUserId = u.Id\nWHERE p.PostTypeId = 1\nAND p.Tags LIKE '%identif%'\nGROUP BY u.Id, u.Reputation,\n--DATEDIFF(day, u.CreationDate, GETDATE()),\nDATEDIFF(day,u.LastAccessDate,GETDATE()),\nDATEDIFF(day, u.CreationDate, u.LastAccessDate)\nORDER BY MIN(p.Id) ASC"},{"QuerySetId":1188713,"Title":"Postgres and Oracle tagged questions","Description":null,"QueryBody":"SELECT TagName, \"Count\" FROM Tags WHERE tagname = 'postgresql' OR tagname = 'oracle' OR tagname = 'sql-server' OR tagname = 'mysql' ORDER BY Count DESC","CreationDate":"2020-01-31 18:02:49","validated":false,"QueryBody_Original":"SELECT  TagName, [Count]\nFrom Tags\nWhere tagname = 'postgresql' or tagname = 'oracle' or tagname = 'sql-server' or tagname = 'mysql' \nOrder By Count Desc;"},{"QuerySetId":1188846,"Title":"select * from Badges  where Id= 113","Description":null,"QueryBody":"SELECT * FROM Posts WHERE OwnerUserId = 113","CreationDate":"2020-01-30 11:48:14","validated":false,"QueryBody_Original":"SELECT  * from Posts  where OwnerUserId= 113"},{"QuerySetId":1189318,"Title":"Duplicate \"Duplicate\" post notices (Thanks to Samuel Liew for a good basis)","Description":null,"QueryBody":"SELECT p.CreationDate, p.Id AS \"Post Link\", p.Score, p.ViewCount, p.AnswerCount FROM Posts AS p WHERE p.PostTypeId = 1 AND p.ClosedDate IS NULL AND p.DeletionDate IS NULL AND p.Body LIKE '%Possible Duplicate:%' ORDER BY p.ViewCount DESC LIMIT 1000","CreationDate":"2020-07-18 21:56:55","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n         p.CreationDate,\n         p.Id AS [Post Link],\n         p.Score,\n         p.ViewCount,\n         p.AnswerCount\n    FROM Posts p\n   WHERE p.PostTypeId = 1\n     AND p.ClosedDate IS NULL\n     AND p.DeletionDate IS NULL\n     AND p.Body LIKE '%Possible Duplicate:%'\nORDER BY p.ViewCount DESC"},{"QuerySetId":1190587,"Title":"Top 20 users from Wellington","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%wellington, new zealand' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2020-02-02 11:38:48","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%wellington, new zealand'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1190883,"Title":"Number of users per month","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) AS Month, COUNT(DATEADD(month, DATEDIFF(month, 0, CreationDate), 0)) AS \"Monthly Joins\" FROM Users GROUP BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) ORDER BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0)","CreationDate":"2020-02-03 01:12:42","validated":false,"QueryBody_Original":"SELECT \n  DateAdd(month, DateDiff(month, 0, CreationDate), 0) As Month,\n  Count(DateAdd(month, DateDiff(month, 0, CreationDate),0)) As 'Monthly Joins'\nFROM\n  Users\nGROUP BY\n  DateAdd(month, DateDiff(month, 0, CreationDate), 0)\nORDER BY\n  DateAdd(month, DateDiff(month, 0, CreationDate), 0);"},{"QuerySetId":1191569,"Title":"Query users and their student","Description":null,"QueryBody":"SELECT DisplayName, C.Text AS Comment, C.CreationDate FROM Users AS u INNER JOIN Comments AS C ON u.Id = C.UserId","CreationDate":"2020-02-03 10:10:50","validated":false,"QueryBody_Original":"SELECT   DisplayName, C.Text AS Comment, C.CreationDate\nfrom Users u\ninner join Comments C on u.Id = C.UserId;"},{"QuerySetId":1191846,"Title":"Top 1k posts with images that need a description (have \"enter image description here\")","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE body LIKE '%enter image description here%' AND closeddate IS NULL AND PostTypeId = 1 AND Score < -3 ORDER BY creationdate DESC","CreationDate":"2020-06-29 12:27:15","validated":false,"QueryBody_Original":"SELECT \n    Id as [Post Link]\nFROM\n    Posts\nWHERE\n    body LIKE '%enter image description here%'\nand closeddate is null\nand PostTypeId = 1\nand Score < -3\norder by creationdate desc"},{"QuerySetId":1191870,"Title":"Popular Questions with no Comments","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\" FROM Posts AS q \/* INNER JOIN Posts a ON q.AcceptedAnswerId = a.Id *\/ WHERE q.AnswerCount > 25 AND q.AnswerCount < 30 AND q.CommentCount = 0 AND q.CommunityOwnedDate IS NULL ORDER BY q.ViewCount DESC LIMIT 20","CreationDate":"2020-02-03 17:18:39","validated":false,"QueryBody_Original":"SELECT  TOP 20\n  q.Id AS [Post Link]\nFROM Posts q\n-- INNER JOIN Posts a ON q.AcceptedAnswerId = a.Id\nWHERE\n  q.AnswerCount > 25 AND q.AnswerCount < 30 AND\n  q.CommentCount = 0 AND\n  q.CommunityOwnedDate IS NULL\nORDER BY q.ViewCount DESC"},{"QuerySetId":1192158,"Title":"Top 20 in wellington NZ","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%wellington, new zealand' ORDER BY Reputation DESC LIMIT 20","CreationDate":"2020-02-04 02:25:31","validated":false,"QueryBody_Original":"SELECT  TOP 20\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n    Id AS [User Link],\n    Reputation,\n    Location\nFROM\n   Users\nWHERE\n    LOWER(Location) LIKE '%wellington, new zealand'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1192305,"Title":"top 300 users - india","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%india%' OR UPPER(Location) LIKE '%india' ORDER BY Reputation DESC LIMIT 300","CreationDate":"2020-02-04 14:25:34","validated":false,"QueryBody_Original":"SELECT  TOP 300\n        ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n        Id AS [User Link],\n        Reputation,\n        Location\n    FROM\n        Users\n    WHERE\n        LOWER(Location) LIKE '%india%'\n        OR UPPER(Location) LIKE '%india'\n    ORDER BY\n        Reputation DESC;"},{"QuerySetId":1192378,"Title":"Select posts Tags is not null","Description":null,"QueryBody":"SELECT Body, Title, Tags FROM posts WHERE AnswerCount > 10 AND NOT Tags IS NULL LIMIT 10","CreationDate":"2020-03-27 16:14:29","validated":false,"QueryBody_Original":"SELECT  TOP 10 Body, Title, Tags FROM posts WHERE AnswerCount > 10 AND Tags IS NOT NULL"},{"QuerySetId":1192788,"Title":"Mentions of ThreeTen by Ole V.V.","Description":null,"QueryBody":"SELECT Posts.Id AS \"Post Link\" FROM Posts WHERE Body LIKE '%ThreeTen%' AND OwnerUserId = 5772882","CreationDate":"2020-02-05 18:38:32","validated":false,"QueryBody_Original":"SELECT  Posts.Id as [Post Link]\nfrom Posts\nwhere Body like '%ThreeTen%'\nand OwnerUserId = 5772882"},{"QuerySetId":1192789,"Title":"Mentions of ThreeTen by Ole V.V. Test","Description":null,"QueryBody":"SELECT Comments.Id, Comments.Id AS \"Comment Link\", CreationDate FROM Comments WHERE Text LIKE '%ThreeTen%' AND UserId = 5772882 LIMIT 3","CreationDate":"2020-02-05 18:57:15","validated":false,"QueryBody_Original":"SELECT  top(3) Comments.Id, Comments.Id as [Comment Link], CreationDate\nfrom Comments\nwhere Text like '%ThreeTen%'\nand UserId = 5772882"},{"QuerySetId":1193136,"Title":"Number of comments over time","Description":null,"QueryBody":"SELECT DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) AS \"Date\", COUNT(*) AS \"Occurence\" FROM Comments GROUP BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0) ORDER BY DATEADD(month, DATEDIFF(month, 0, CreationDate), 0)","CreationDate":"2020-02-06 19:37:42","validated":false,"QueryBody_Original":"SELECT  dateadd(month, datediff(month, 0, CreationDate), 0) as [Date], count(*) as [Occurence]\nfrom Comments\ngroup by dateadd(month, datediff(month, 0, CreationDate), 0)\norder by dateadd(month, datediff(month, 0, CreationDate), 0)"},{"QuerySetId":1193356,"Title":"Get all posts since 2018-01-01","Description":null,"QueryBody":"SELECT AnswerCount, Body, CommentCount, CreationDate, FavoriteCount, Posts.Id AS Posts_ID, LastActivityDate, OwnerUserId, PostTypeId, Score, Tags, Title, ViewCount FROM Posts WHERE PostTypeId = 1 AND CreationDate >= '2018-01-01'","CreationDate":"2020-02-07 02:06:43","validated":false,"QueryBody_Original":"SELECT  AnswerCount, Body, CommentCount,\n      CreationDate, FavoriteCount, Posts.Id AS Posts_ID,\n      LastActivityDate, OwnerUserId, PostTypeId,\n      Score, Tags, Title, ViewCount \nfrom Posts\nwhere PostTypeId = 1 AND CreationDate >= '2018-01-01'"},{"QuerySetId":1193437,"Title":"% of Questions tagged Minecraft","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Minecraft Post Count\" FROM Posts WHERE Tags LIKE '%minecraft%'","CreationDate":"2020-02-07 09:26:31","validated":false,"QueryBody_Original":"SELECT  \n  COUNT(*) AS [Minecraft Post Count]\nFROM Posts\nWHERE Tags like '%minecraft%'"},{"QuerySetId":1193503,"Title":"Answers by User and Tag (In progress)","Description":null,"QueryBody":"SELECT MAX(creationDate) FROM Posts","CreationDate":"2020-02-07 15:25:49","validated":false,"QueryBody_Original":"SELECT  max(creationDate) from Posts;"},{"QuerySetId":1193580,"Title":"Top users from Helsinki, Finland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%helsinkiw%' OR UPPER(Location) LIKE '%HELSINKI%' OR Location LIKE '%Helsinki%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2020-02-07 18:14:38","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%helsinkiw%'\n    OR UPPER(Location) LIKE '%HELSINKI%'\n    or Location like '%Helsinki%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1193809,"Title":"Select posts Tags is null","Description":null,"QueryBody":"SELECT * FROM posts WHERE TAGS LIKE '%javascript%'","CreationDate":"2020-02-10 11:06:20","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE TAGS like '%javascript%'"},{"QuerySetId":1193813,"Title":"SELECT * FROM Posts Where Tags = 'Python' And CreationDate > '2020-01-01'","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags = 'Python' AND CreationDate > '2020-01-01'","CreationDate":"2020-02-08 08:28:27","validated":false,"QueryBody_Original":"SELECT  * FROM Posts Where Tags = 'Python' And CreationDate > '2020-01-01'"},{"QuerySetId":1193835,"Title":"SELECT * FROM Posts Where Tags = 'Python' ","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Tags LIKE '%python%' AND CreationDate BETWEEN '2019-01-01' AND '2019-02-01'","CreationDate":"2020-02-08 10:17:49","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Tags \nLIKE '%python%' \nAND \nCreationDate BETWEEN '2019-01-01' AND '2019-02-01'"},{"QuerySetId":1194336,"Title":"Comments created before their posts","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts, Comments WHERE Comments.PostId = Posts.Id AND Comments.CreationDate < Posts.CreationDate","CreationDate":"2020-02-09 08:06:37","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\nFROM Posts, Comments\nWHERE\n  Comments.PostId = Posts.Id\n  AND\n  Comments.CreationDate < Posts.CreationDate;"},{"QuerySetId":1194338,"Title":"Posts with the longest and oldest comment chat","Description":"...where the SUM(comment after post creation) is the largest","QueryBody":"SELECT Posts.Id AS \"Post Link\", 1.0 * SUM(CAST(DATEDIFF(Comments.CreationDate, Posts.CreationDate) AS INT)) \/ 365 \/ 86400 AS SumT FROM Posts, Comments WHERE Comments.CreationDate >= Posts.CreationDate AND Comments.PostId = Posts.Id GROUP BY Posts.Id ORDER BY SumT DESC LIMIT 100","CreationDate":"2020-02-09 08:22:00","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Posts.Id AS [Post Link],\n  1.0 * SUM(CAST(DATEDIFF(s, Posts.CreationDate, Comments.CreationDate)\n    AS BIGINT)) \/ 365 \/ 86400 AS SumT\nFROM Posts, Comments\nWHERE\n  Comments.CreationDate >= Posts.CreationDate\n  AND\n  Comments.PostId = Posts.Id\nGROUP BY Posts.Id\nORDER BY SumT DESC;"},{"QuerySetId":1196239,"Title":"What are descriptive statistics about Answers and Answer Counts?","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE PostTypeId = 2","CreationDate":"2020-02-13 21:03:12","validated":false,"QueryBody_Original":"SELECT  count(*) from Posts where PostTypeId = 2;"},{"QuerySetId":1196336,"Title":"How many code blocks does an answer have?","Description":null,"QueryBody":"SELECT Id, ParentId, CodeSnippet = CASE WHEN Body LIKE '%<\/code><\/pre>%' THEN 1 ELSE 0 END, Executable = CASE WHEN Body LIKE '%class=\"snippet\"%' THEN 1 ELSE 0 END FROM Posts WHERE PostTypeId = 2","CreationDate":"2020-02-14 00:53:35","validated":false,"QueryBody_Original":"SELECT  Id, ParentId, \n     CodeSnippet  = case when Body like '%<\/code><\/pre>%' then 1 else 0 end,\n     Executable = case when Body like '%class=\"snippet\"%' then 1 else 0 end\n     FROM Posts where PostTypeId = 2"},{"QuerySetId":1196365,"Title":"What are the most popular tags in Qs with multiple As?","Description":null,"QueryBody":"SELECT * FROM (SELECT Id, Tags FROM Posts WHERE PostTypeId = 1 AND CreationDate > CAST('2019-01-01' AS DATE) AND ClosedDate IS NULL) AS t1 JOIN (SELECT Id, ParentId, CodeSnippet = CASE WHEN Body LIKE '%<\/code><\/pre>%' THEN 1 ELSE 0 END, Executable = CASE WHEN Body LIKE '%class=\"snippet\"%' THEN 1 ELSE 0 END FROM Posts WHERE PostTypeId = 2) AS t2 ON (t1.Id = t2.ParentId)","CreationDate":"2020-02-14 02:12:08","validated":false,"QueryBody_Original":"SELECT  * from (SELECT Id, Tags from Posts where PostTypeId = 1 \n  and CreationDate > cast('2019-01-01' as date)\n  and ClosedDate is null) t1 join \n(SELECT Id, ParentId, \n     CodeSnippet  = case when Body like '%<\/code><\/pre>%' then 1 else 0 end,\n     Executable = case when Body like '%class=\"snippet\"%' then 1 else 0 end\n     FROM Posts where PostTypeId = 2) t2 on (t1.Id = t2.ParentId)"},{"QuerySetId":1196480,"Title":"Users who answered specific questions","Description":null,"QueryBody":"SELECT q.Id AS \"Question ID\", q.OwnerUserId AS \"Owner User ID\", ou.DisplayName AS \"Owner Name\", ou.Reputation AS \"Owner Reputation\", ou.Location AS \"Owner Location\", ou.Views AS \"Owner Views\", ou.UpVotes AS \"Owner UpVotes\", ou.DownVotes AS \"Owner DownVotes\", aa.Id AS \"AcceptedAnswerID\", aa.OwnerUserId AS \"User Who Answered\" FROM Posts AS q INNER JOIN Posts AS aa ON q.AcceptedAnswerId = aa.Id INNER JOIN Users AS ou ON q.OwnerUserId = ou.Id WHERE q.Id IN (9802390)","CreationDate":"2020-02-14 08:00:12","validated":false,"QueryBody_Original":"SELECT  q.Id as 'Question ID', q.OwnerUserId as 'Owner User ID',\n   ou.DisplayName as 'Owner Name', ou.Reputation as 'Owner Reputation',\n   ou.Location as 'Owner Location', ou.Views as 'Owner Views',\n   ou.UpVotes as 'Owner UpVotes', ou.DownVotes as 'Owner DownVotes',\n   aa.Id as 'AcceptedAnswerID',  aa.OwnerUserId as 'User Who Answered'\nFROM Posts q \n   INNER JOIN Posts aa ON q.AcceptedAnswerId = aa.Id\n   INNER JOIN Users ou ON q.OwnerUserId = ou.Id\nWHERE q.Id in (9802390)"},{"QuerySetId":1196804,"Title":"When was Jon last seen?","Description":null,"QueryBody":"SELECT LastAccessDate FROM Users WHERE Id = 1438","CreationDate":"2020-02-15 02:27:25","validated":false,"QueryBody_Original":"SELECT  LastAccessDate\nfrom Users\nwhere Id = 1438"},{"QuerySetId":1196861,"Title":"Total posts created by day of week","Description":null,"QueryBody":"SELECT * FROM Tags WHERE TagName IN ('java', 'c++', 'java')","CreationDate":"2020-02-16 01:10:30","validated":false,"QueryBody_Original":"SELECT  * FROM Tags WHERE TagName IN ('java', 'c++', 'java')\n--SELECT TOP(10) Tags FROM Posts ORDER BY CreationDate DESC\n--)"},{"QuerySetId":1198001,"Title":"Select upvote, downvote and netvote for given postId(s) over time","Description":null,"QueryBody":"\/* TOP 20 *\/ SELECT v.CreationDate, COUNT(CASE WHEN v.VoteTypeId = 2 THEN 1 END) AS UpVotes, COUNT(CASE WHEN v.VoteTypeId = 3 THEN 1 END) AS DownVotes, SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 WHEN v.VoteTypeId = 3 THEN -1 END) AS NetVotes \/* COUNT(*) AS TotalVotes *\/ FROM Votes AS v INNER JOIN Posts ON v.PostId = Posts.Id AND (v.VoteTypeId = 2 OR v.VoteTypeId = 3) WHERE Posts.Id IN (101337, 111386) GROUP BY v.CreationDate ORDER BY v.creationdate","CreationDate":"2020-02-18 10:33:58","validated":false,"QueryBody_Original":"SELECT  --TOP 20 \n    --v. postid, \n    v.CreationDate,\n    COUNT( Case when v.VoteTypeId = 2 then 1 end) AS UpVotes,\n    COUNT( Case when v.VoteTypeId = 3 then 1 end) AS DownVotes,\n    SUM( Case when v.VoteTypeId =2 then 1 when v.VoteTypeId = 3 then -1 end) AS NetVotes\n    -- COUNT(*) AS TotalVotes \nFROM Votes as v\n    --INNER JOIN PostTags ON PostTags.TagId = Tags.id\n    --INNER JOIN Posts ON Posts.ParentId = PostTags.PostId\n    INNER JOIN Posts ON v.PostId = Posts.Id and (v.VoteTypeId = 2 or v.VoteTypeId=3)\nWHERE \n    -- Posts.OwnerUserId = @UserId\n    -- Posts.Id = 60174\n    Posts.Id in (\n    101337,\n    111386\n    )\nGROUP BY v.CreationDate\nORDER BY v.creationdate asc\n-- ORDER BY UpVotes DESC"},{"QuerySetId":1198625,"Title":"Get posts for a question and also all its answers","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 2512683 UNION SELECT * FROM Posts WHERE ParentId = 2512683","CreationDate":"2020-02-19 08:41:59","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id = 2512683 \nUNION\nSELECT * from Posts where ParentId = 2512683"},{"QuerySetId":1198916,"Title":"My Profiles Across Stack Exchange","Description":null,"QueryBody":"SELECT DB_ID(), DB_NAME(), * FROM dbo.Users AS u WHERE u.DisplayName = N'Max Vernon' ORDER BY u.Id LIMIT 10","CreationDate":"2020-02-20 20:54:27","validated":false,"QueryBody_Original":"SELECT  TOP(10) \n      DB_ID()\n    , DB_NAME()\n    , *\nFROM dbo.Users u\nWHERE u.DisplayName = N'Max Vernon'\nORDER BY u.Id;\nSELECT *\nFROM sys.databases;"},{"QuerySetId":1199315,"Title":"Usuarios SOpt (verificando usu\u00e1rios ativos) draft 1","Description":null,"QueryBody":"SELECT COUNT(DISTINCT u.id) FROM users AS u WHERE DATEDIFF(u.LastAccessDate, u.CreationDate) > 100","CreationDate":"2020-02-20 21:42:34","validated":false,"QueryBody_Original":"SELECT  count(distinct u.id)\nfrom users u\nwhere datediff(day,u.CreationDate, u.LastAccessDate) > 100"},{"QuerySetId":1199645,"Title":"Got the most rep in a day","Description":null,"QueryBody":"SELECT * FROM Votes WHERE VoteTypeId = 9 LIMIT 100","CreationDate":"2020-02-21 10:14:05","validated":false,"QueryBody_Original":"SELECT  TOP 100 * FROM Votes WHERE VoteTypeId = 9;"},{"QuerySetId":1199998,"Title":"Terraform Ansible Puppet Chef Salt","Description":null,"QueryBody":"SELECT CreationDate, Tags, ViewCount, Score, CommentCount FROM Posts WHERE Tags LIKE '<terraform>' OR Tags LIKE '<ansible>' OR Tags LIKE '<chef>' OR Tags LIKE '<puppet>'","CreationDate":"2020-02-24 23:01:21","validated":false,"QueryBody_Original":"SELECT  CreationDate, Tags, ViewCount, Score, CommentCount FROM Posts\nWHERE Tags LIKE '<terraform>' OR Tags LIKE '<ansible>' OR Tags LIKE '<chef>' OR Tags LIKE '<puppet>'"},{"QuerySetId":1200102,"Title":"By Answer Count and Year Average Score and Average Views ","Description":null,"QueryBody":"SELECT COUNT(*) AS \"Count\", AVG(CAST(Score AS FLOAT(10, 2))) AS \"Average Score\", AVG(CAST(ViewCount AS INT)) AS \"Average Views\" FROM posts WHERE PostTypeID = 1 AND DeletionDate IS NULL AND AcceptedAnswerID IS NULL","CreationDate":"2020-02-22 02:50:46","validated":false,"QueryBody_Original":"SELECT  count(*) as [Count], avg(convert(decimal(10,2), Score)) as [Average Score], avg(convert(BigInt, ViewCount)) as [Average Views]\nfrom posts\nwhere PostTypeID = 1 and DeletionDate is null and AcceptedAnswerID is null"},{"QuerySetId":1200547,"Title":"Post Year Acct Year Trend in Questions Answers","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE) AS \"Post Creation Date\", CAST(u.CreationDate AS DATE) AS \"Acct Creation Date\", COUNT(u.Id) AS \"count\", AVG(CAST(u.Reputation AS FLOAT)) AS \"Average Reputation\" FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id WHERE PostTypeId IN (1, 2) AND p.ClosedDate IS NULL AND p.DeletionDate IS NULL GROUP BY CAST(p.CreationDate AS DATE), CAST(u.CreationDate AS DATE)","CreationDate":"2020-02-23 05:04:06","validated":false,"QueryBody_Original":"SELECT  convert(date, p.CreationDate) as [Post Creation Date], convert(date, u.CreationDate) as [Acct Creation Date], count(u.Id) as [count], avg(cast(u.Reputation as float)) as [Average Reputation]\nfrom Posts p inner join Users u on p.OwnerUserId = u.Id \nwhere PostTypeId in (1,2) and p.ClosedDate is null and p.DeletionDate is null  \ngroup by convert(date, p.CreationDate), convert(date, u.CreationDate)"},{"QuerySetId":1202984,"Title":"SELECT TOP(2) * FROM Users u2","Description":null,"QueryBody":"SELECT * FROM Users AS u2 LIMIT 2","CreationDate":"2020-02-26 16:29:41","validated":false,"QueryBody_Original":"SELECT  TOP(2) * FROM Users u2"},{"QuerySetId":1203312,"Title":"Number of answers which have no comments","Description":null,"QueryBody":"SELECT COUNT(*) AS AnswerCount FROM Posts WHERE CommentCount > 0 AND PostTypeId = 2","CreationDate":"2020-02-26 23:25:30","validated":false,"QueryBody_Original":"SELECT  Count(*) AS AnswerCount\nFROM Posts\nWHERE CommentCount>0 AND PostTypeId=2"},{"QuerySetId":1206328,"Title":"Top Node.JS dev in Poland","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%poland%' OR UPPER(Location) LIKE '%POLAND%' OR Location LIKE '%Poland%') AND Reputation >= 1000 AND Id IN (SELECT OwnerUserId FROM Posts WHERE LOWER(Tags) LIKE '%node.js%') ORDER BY Reputation DESC","CreationDate":"2020-03-06 18:52:46","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%poland%'\n    OR UPPER(Location) LIKE '%POLAND%'\n    or Location like '%Poland%')\n    AND Reputation >= 1000\n    AND Id in (\n    SELECT OwnerUserId\n    from Posts\n    where LOWER(Tags) like '%node.js%'\n    )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1206532,"Title":"10K votes in both directions","Description":null,"QueryBody":"SELECT Id AS \"User Link\", Upvotes, Downvotes, DisplayName FROM Users WHERE Upvotes >= 10000 AND Downvotes >= 10000","CreationDate":"2020-03-07 00:55:13","validated":false,"QueryBody_Original":"SELECT  Id as [User Link], Upvotes, Downvotes, DisplayName \nfrom Users\nwhere Upvotes >= 10000 and Downvotes >= 10000"},{"QuerySetId":1206569,"Title":"actually useful and liked python posts","Description":null,"QueryBody":"SELECT Id, Title, AcceptedAnswerId, Score, ViewCount, Tags, AnswerCount, CommentCount, FavoriteCount FROM Posts WHERE Tags LIKE '%python%' AND NOT AcceptedAnswerId IS NULL AND Score > 0 AND FavoriteCount > 0 ORDER BY Score LIMIT 10000","CreationDate":"2020-03-07 07:15:26","validated":false,"QueryBody_Original":"SELECT  TOP(10000) Id, Title, AcceptedAnswerId, Score, \nViewCount, Tags, AnswerCount, CommentCount, FavoriteCount \nFROM Posts \nWHERE Tags LIKE '%python%' \nAND AcceptedAnswerId Is Not Null\nAND Score > 0\nAND FavoriteCount > 0\nORDER BY Score;"},{"QuerySetId":1206623,"Title":"simple sample for Magic Columns [Post Link]","Description":null,"QueryBody":"SELECT id AS \"Post Link\" FROM posts WHERE posts.OwnerUserId = 9872","CreationDate":"2020-03-07 17:50:42","validated":false,"QueryBody_Original":"SELECT  id [Post Link]\nFROM posts \nWHERE posts.OwnerUserId = 9872"},{"QuerySetId":1206636,"Title":"list post count and user id that made a post","Description":null,"QueryBody":"SELECT COUNT(id) AS post_count, OwnerUserId FROM posts GROUP BY OwnerUserId ORDER BY post_count DESC","CreationDate":"2020-03-07 17:38:01","validated":false,"QueryBody_Original":"SELECT  COUNT(id) as post_count, OwnerUserId\nFROM posts\ngroup by OwnerUserId\norder by post_count desc"},{"QuerySetId":1206771,"Title":"How many users on this site?","Description":null,"QueryBody":"SELECT COUNT(id) FROM Users","CreationDate":"2020-03-07 17:26:46","validated":false,"QueryBody_Original":"SELECT  COUNT(id) FROM Users"},{"QuerySetId":1206812,"Title":"Zero Voted Questions Oldest first - no answer","Description":null,"QueryBody":"SELECT DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), CAST(Question.CreationDate AS DATE)) AS \"Days old\", Question.Id AS \"Post Link\", Question.Score, Question.AnswerCount, Question.Tags, Question.Title FROM POSTS AS \"Question\"\/* AND Question.Body LIKE '%xgboost%' *\/  WHERE Question.PostTypeId = 1 AND Question.Tags LIKE '%xgboost%' AND Question.Score > 0 AND Question.AnswerCount = 0 AND DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), CAST(Question.CreationDate AS DATE)) > 10 AND closeddate IS NULL ORDER BY Question.Score DESC LIMIT 500","CreationDate":"2020-03-20 01:10:55","validated":false,"QueryBody_Original":"SELECT  \n      TOP 500\n      DATEDIFF(dd, CONVERT(date,Question.CreationDate), CONVERT(date, GETDATE()) ) [Days old],\n      Question.Id AS [Post Link],\n      Question.Score,\n      Question.AnswerCount,\n      Question.Tags,\n      Question.Title\n FROM\n      POSTS \"Question\"\nWHERE Question.PostTypeId = 1\n--AND Question.Body LIKE '%xgboost%'\nAND Question.Tags LIKE '%xgboost%'\nAND   Question.Score > 0\nAND   Question.AnswerCount = 0\nAND   DATEDIFF(dd, CONVERT(date,Question.CreationDate), CONVERT(date, GETDATE()) ) > 10\nand closeddate is null\nORDER BY\n      Question.Score desc"},{"QuerySetId":1207224,"Title":"upvote \/ downvote ratio ","Description":"Users with the highest down\/up vote ratio\r\n","QueryBody":"SELECT Id AS \"User Link\", DownVotes, UpVotes, (DownVotes + UpVotes) AS totalVotes FROM Users WHERE Reputation > 125 AND Upvotes > 1000 ORDER BY totalVotes DESC","CreationDate":"2020-07-14 21:33:18","validated":false,"QueryBody_Original":"SELECT  \n    Id AS [User Link],\n     DownVotes, UpVotes,\n     (DownVotes+UpVotes) as totalVotes\nFROM \n    Users\n\nWHERE \n    Reputation > 125\n    and Upvotes > 1000\nORDER BY \n    totalVotes DESC"},{"QuerySetId":1207226,"Title":"Cool guys - upvoters who never downvote others","Description":"Users with the most upvote count with zero downvote count","QueryBody":"SELECT Id AS \"User Link\", DownVotes, UpVotes, (DownVotes + UpVotes) AS totalVotes FROM Users WHERE Reputation > 125 AND Upvotes > 1000 AND DownVotes = 0 ORDER BY UpVotes DESC","CreationDate":"2020-03-08 10:29:24","validated":false,"QueryBody_Original":"SELECT  \n    Id AS [User Link],\n     DownVotes, UpVotes,\n     (DownVotes+UpVotes) as totalVotes\nFROM \n    Users\n\nWHERE \n    Reputation > 125\n    and Upvotes > 1000\n    and DownVotes = 0\nORDER BY \n    UpVotes DESC"},{"QuerySetId":1207232,"Title":"get the name of current site, DB_NAME","Description":null,"QueryBody":"SELECT DB_NAME()","CreationDate":"2020-03-08 12:47:11","validated":false,"QueryBody_Original":"SELECT  DB_NAME()"},{"QuerySetId":1207235,"Title":"Who can achieve the most reputation with just one question in his lifetime in SO?","Description":"Who can achieve the most reputation with just one question in his lifetime in SO?","QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation AS UserReputation, Posts.Score AS PostScore FROM Users INNER JOIN Posts ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 1 AND (SELECT COUNT(Posts.Id) FROM Posts WHERE OwnerUserId = Users.Id) = 1 AND Users.Reputation > 10000 ORDER BY UserReputation DESC","CreationDate":"2020-03-08 10:56:14","validated":false,"QueryBody_Original":"SELECT  Users.Id AS [User Link],\n       Users.Reputation AS UserReputation, Posts.Score AS PostScore\nFROM Users\nINNER JOIN Posts ON Posts.OwnerUserId=Users.Id\nWHERE\n    \/* Post Type: Question *\/\n    Posts.PostTypeId = 1 \n    AND (SELECT Count(Posts.Id) FROM Posts WHERE OwnerUserId=Users.Id) = 1\n    AND Users.Reputation > 10000\nORDER BY UserReputation DESC;"},{"QuerySetId":1207241,"Title":"Who can achieve the most reputation with one answer in his lifetime in SO?","Description":"Who can achieve the most reputation with one answer in his lifetime in SO?","QueryBody":"SELECT Users.Id AS \"User Link\", Users.Reputation AS UserReputation, Posts.Score AS PostScore FROM Users INNER JOIN Posts ON Posts.OwnerUserId = Users.Id WHERE Posts.PostTypeId = 2 AND (SELECT COUNT(Posts.Id) FROM Posts WHERE OwnerUserId = Users.Id) = 1 AND Users.Reputation > 10000 ORDER BY UserReputation DESC","CreationDate":"2020-03-08 10:55:45","validated":false,"QueryBody_Original":"SELECT  Users.Id AS [User Link],\n       Users.Reputation AS UserReputation, Posts.Score AS PostScore\nFROM Users\nINNER JOIN Posts ON Posts.OwnerUserId=Users.Id\nWHERE\n    \/* Post Type: Question *\/\n    Posts.PostTypeId = 2 \n    AND (SELECT Count(Posts.Id) FROM Posts WHERE OwnerUserId=Users.Id) = 1\n    AND Users.Reputation > 10000\nORDER BY UserReputation DESC;"},{"QuerySetId":1207352,"Title":"Highest reputation with zero question","Description":null,"QueryBody":"SELECT Id, DisplayName, Reputation, (SELECT COUNT(*) FROM Posts WHERE Posts.PostTypeId = 1 AND Posts.OwnerUserId = Users.Id) AS QuestionCount FROM Users WHERE (SELECT COUNT(*) FROM Posts WHERE Posts.PostTypeId = 1 AND Posts.OwnerUserId = Users.Id) = 0 ORDER BY Reputation DESC","CreationDate":"2020-08-12 19:31:56","validated":false,"QueryBody_Original":"SELECT  Id,\n      DisplayName, Reputation,\n      (SELECT COUNT(*) FROM Posts WHERE Posts.PostTypeId =1 AND Posts.OwnerUserId=Users.Id) AS QuestionCount\nFrom Users\nWhere (SELECT COUNT(*) FROM Posts WHERE Posts.PostTypeId =1 AND Posts.OwnerUserId=Users.Id) = 0\nORDER BY Reputation desc;"},{"QuerySetId":1207353,"Title":"Highest reputation with zero answer","Description":null,"QueryBody":"SELECT Id, DisplayName, (SELECT COUNT(*) FROM Posts WHERE Posts.PostTypeId = 1 AND Posts.OwnerUserId = Users.Id) AS AnswerCount FROM Users WHERE (SELECT COUNT(*) FROM Posts WHERE Posts.PostTypeId = 2 AND Posts.OwnerUserId = Users.Id) = 0 AND Reputation > 10000 ORDER BY Reputation DESC","CreationDate":"2020-03-08 14:36:55","validated":false,"QueryBody_Original":"SELECT  Id,\n      DisplayName,\n      (SELECT COUNT(*) FROM Posts WHERE Posts.PostTypeId =1 AND Posts.OwnerUserId=Users.Id) AS AnswerCount\nFrom Users\nWHERE\n(SELECT COUNT(*) FROM Posts WHERE Posts.PostTypeId =2 AND Posts.OwnerUserId=Users.Id) = 0\nand Reputation > 10000\nORDER BY Reputation desc;"},{"QuerySetId":1208221,"Title":"Distribution of views per year for questions combined by year","Description":null,"QueryBody":"SELECT AVG(ViewsPerYear) FROM (SELECT YEAR(CreationDate) AS \"Year\", ViewCount AS \"Views\", ROUND(365.0 * ViewCount \/ DATEDIFF(CURRENT_TIMESTAMP(), CreationDate), 0) AS \"ViewsPerYear\" FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL) AS sel","CreationDate":"2020-03-09 15:19:47","validated":false,"QueryBody_Original":"SELECT  avg(ViewsPerYear)\nfrom\n(SELECT year(CreationDate) as [Year], ViewCount as [Views], round(365.0 * ViewCount \/ datediff(day, CreationDate, getdate()),0) as [ViewsPerYear]\nfrom Posts\nwhere PostTypeId = 1 and ClosedDate is null) sel"},{"QuerySetId":1208294,"Title":"Count the amount of posts","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users INNER JOIN Badges ON Users.id = Badges.id","CreationDate":"2020-03-09 19:30:20","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Users\nInner Join Badges\non Users.id = Badges.id"},{"QuerySetId":1209159,"Title":"Buscando posts sobre windows phone de 2018 at\u00e9 hoje","Description":null,"QueryBody":"SELECT Id, LastActivityDate, CreationDate, Score, ViewCount, Body, OwnerUserId, Title, Tags, AnswerCount FROM Posts WHERE Tags LIKE '%<windows-phone%' AND PostTypeId = 1 AND CreationDate >= '01\/01\/2018' ORDER BY LastActivityDate DESC","CreationDate":"2020-03-13 05:32:26","validated":false,"QueryBody_Original":"SELECT  Id, LastActivityDate, CreationDate, Score, \nViewCount, Body, OwnerUserId, Title, Tags, AnswerCount\nFROM Posts\nWHERE Tags like '%<windows-phone%'\nand PostTypeId = 1\nand CreationDate >= '01\/01\/2018'\nORDER BY LastActivityDate DESC"},{"QuerySetId":1209939,"Title":"java developpers in nantes ","Description":null,"QueryBody":"SELECT u.id, u.displayName, u.location FROM users AS u JOIN (SELECT DISTINCT UserId FROM Badges WHERE LOWER(Name) IN ('java') AND Class IN (2, 3) AND TagBased = 1) AS tag_badges ON tag_badges.UserId = u.Id WHERE LOWER(Location) LIKE '%paris%'","CreationDate":"2020-03-12 17:45:05","validated":false,"QueryBody_Original":"SELECT  u.id, u.displayName, u.location \nfrom users u \n  join (\n    SELECT distinct UserId \n    from Badges \n    where Lower(Name) In ('java')\n    and Class IN (2,3)\n    and TagBased =1) \n  tag_badges \nON tag_badges.UserId=u.Id\nwhere LOWER(Location) LIKE '%paris%'"},{"QuerySetId":1210302,"Title":"Get all posts for a question and also all its answers","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 2512683 UNION SELECT * FROM Posts WHERE ParentId = 2512683","CreationDate":"2020-03-13 17:17:28","validated":false,"QueryBody_Original":"SELECT  * from Posts where Id = 2512683 \nUNION\nSELECT * from Posts where ParentId = 2512683"},{"QuerySetId":1211777,"Title":"Top users from Pune, India","Description":"Top users from Pune, India","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pune%' OR UPPER(Location) LIKE '%PUNE%' OR Location LIKE '%Pune%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2020-03-18 03:17:27","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pune%'\n    OR UPPER(Location) LIKE '%PUNE%'\n    or Location like '%Pune%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1212033,"Title":"Number of posts per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.creationdate) AS \"date\", COUNT(p.id) AS \"count\" FROM posts AS p GROUP BY LAST_DATE_OF_MONTH(p.creationdate) ORDER BY LAST_DATE_OF_MONTH(p.creationdate)","CreationDate":"2020-03-18 20:07:02","validated":false,"QueryBody_Original":"SELECT  eomonth(p.creationdate) [date]\n     , count(p.id) as [count]\nfrom posts p\ngroup by eomonth(p.creationdate)\norder by eomonth(p.creationdate)"},{"QuerySetId":1212193,"Title":"Number of posts per day","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE) AS \"Date\", COUNT(Id) AS \"Count\" FROM Posts WHERE CreationDate >= '##Date1?2019-01-01##' AND CreationDate <= '##Date2?2021-01-01##' GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE)","CreationDate":"2020-03-19 09:21:28","validated":false,"QueryBody_Original":"SELECT  CAST(CreationDate AS DATE) AS [Date],\n     count(Id) as [Count]\nFROM Posts\nWHERE CreationDate >= '##Date1?2019-01-01##' AND CreationDate <= '##Date2?2021-01-01##'\nGROUP BY CAST(CreationDate AS DATE)\nORDER BY CAST(CreationDate AS DATE)"},{"QuerySetId":1212429,"Title":"Total number of views by day posted","Description":null,"QueryBody":"SELECT CAST(p.CreationDate AS DATE) AS \"Day\", SUM(p.ViewCount) AS \"Views\" FROM Posts AS p\/* -only questions: p.PostTypeId=1 *\/  WHERE p.PostTypeId = 1 AND p.CreationDate >= '##Date1?2019-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##' GROUP BY CAST(p.CreationDate AS DATE) ORDER BY CAST(p.CreationDate AS DATE)","CreationDate":"2020-03-20 11:39:47","validated":false,"QueryBody_Original":"SELECT  CAST(p.CreationDate AS DATE) AS [Day],\n  SUM(p.ViewCount) AS [Views]\nFROM Posts p\nWHERE p.PostTypeId=1\n---only questions: p.PostTypeId=1\nAND p.CreationDate >= '##Date1?2019-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##'\nGROUP BY CAST(p.CreationDate AS DATE)\nORDER BY CAST(p.CreationDate AS DATE)"},{"QuerySetId":1212455,"Title":"Seek and Destroy: Comments with the phrase \"not an answer\"","Description":"A query to help look for non-answers--comments with the phrase \"not an answer\" on answers with low score. Flags ahoy! But try not to *completely* overwhelm the poor moderators, 'k?","QueryBody":"SELECT a.id AS \"Post Link\", a.score AS \"Answer Score\", c.text AS \"Comment Text\", a.body AS \"Answer Text\", a.CreationDate FROM comments AS c INNER JOIN posts AS a ON c.postid = a.id AND a.score < 2 \/* with low score *\/ AND c.text LIKE '%From Review%' \/* and comments with the phrase 'not an answer' *\/ ORDER BY a.score","CreationDate":"2020-05-08 21:31:00","validated":false,"QueryBody_Original":"SELECT  a.id as [Post Link], \n  a.score as [Answer Score], \n  c.text as [Comment Text],\n  a.body as [Answer Text],\n  a.CreationDate\nfrom comments c\n  inner join posts a on c.postid = a.id\n-- where a.posttypeid = 2               -- answers\n  and a.score < 2                    -- with low score\n  and c.text like '%From Review%'  -- and comments with the phrase 'not an answer'\norder by a.score"},{"QuerySetId":1213089,"Title":"Number of comments by month of CreationDate","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(c.CreationDate) AS \"month\", COUNT(c.Id) AS \"Total Comments\" FROM Comments AS c WHERE c.CreationDate >= '##Date1?2015-01-01##' AND c.CreationDate <= '##Date2?2021-01-01##' GROUP BY LAST_DATE_OF_MONTH(c.CreationDate) ORDER BY LAST_DATE_OF_MONTH(c.CreationDate)","CreationDate":"2020-03-22 12:20:19","validated":false,"QueryBody_Original":"SELECT  eomonth(c.CreationDate) [month],\n  COUNT(c.Id) AS [Total Comments]\nFROM Comments c\nWHERE c.CreationDate >= '##Date1?2015-01-01##' AND c.CreationDate <= '##Date2?2021-01-01##'\nGROUP BY eomonth(c.CreationDate)\nORDER BY eomonth(c.CreationDate)"},{"QuerySetId":1213519,"Title":"Comments where Users can't spell my Alias","Description":null,"QueryBody":"SELECT C.ID, C.Text FROM dbo.Posts AS P JOIN dbo.Comments AS C ON P.Id = C.PostId JOIN dbo.Users AS U ON P.OwnerUserId = U.Id WHERE C.CreationDate >= '20180101' AND U.\"DisplayName\" <> 'Lamu' AND C.Text LIKE '%@Lamu%' AND NOT EXISTS(SELECT 1 FROM dbo.Comments AS Csq JOIN dbo.Users AS Usq ON Csq.UserId = Usq.Id WHERE U.\"DisplayName\" = 'Lamu' AND C.PostId = P.ID)","CreationDate":"2020-03-23 22:14:29","validated":false,"QueryBody_Original":"SELECT  C.ID,\n       C.Text\nFROM dbo.Posts P\n     JOIN dbo.Comments C ON P.Id = C.PostId\n     JOIN dbo.Users U ON P.OwnerUserId = U.Id\nWHERE C.CreationDate >= '20180101'\n  AND U.[DisplayName] != 'Lamu'\n  AND C.Text LIKE '%@Lamu%'\n  AND NOT EXISTS (SELECT 1\n                  FROM dbo.Comments Csq\n                       JOIN dbo.Users Usq ON Csq.UserId = Usq.Id\n                  WHERE U.[DisplayName] = 'Lamu'\n                    AND C.PostId = P.ID);"},{"QuerySetId":1213550,"Title":"baixo score e alta visualizacao","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, Body, Title, Tags FROM Posts AS c\/* and AcceptedAnswerId is null *\/  WHERE ViewCount \/* Score > 2 *\/ <> 0 AND ParentId IS NULL AND Tags LIKE '%<windows-phone%' AND CreationDate >= '01\/01\/2018' ORDER BY ViewCount DESC","CreationDate":"2020-04-07 03:44:49","validated":false,"QueryBody_Original":"SELECT  \n   Id as [Post Link], \n   Score, \n   ViewCount,\n   Body,\n   Title,\n   Tags\nfrom \n  Posts c\nwhere \n  --Score > 2 \n   ViewCount <> 0 \n  and ParentId is null \n  --and AcceptedAnswerId is null\n  and Tags like '%<windows-phone%'\n  and CreationDate >= '01\/01\/2018'\norder by \nViewCount desc"},{"QuerySetId":1213959,"Title":"SELECT * FROM Posts WHERE Id=0","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 0","CreationDate":"2020-03-25 13:05:31","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Id=0"},{"QuerySetId":1214044,"Title":"How many answers does this post have?","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Id = 60850239","CreationDate":"2020-03-25 17:53:36","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE Id = 60850239;"},{"QuerySetId":1214064,"Title":"select count(1) from Posts where LastEditorUserId = -1;","Description":null,"QueryBody":"SELECT COUNT(1) FROM Posts WHERE LastEditorUserId = -1","CreationDate":"2020-03-25 18:52:30","validated":false,"QueryBody_Original":"SELECT  count(1) from Posts where LastEditorUserId = -1;"},{"QuerySetId":1214172,"Title":"Complexity Comparison over Time v2","Description":null,"QueryBody":"SELECT * FROM Posts WHERE CreationDate = '01-31-2015'","CreationDate":"2020-04-13 17:29:02","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE CreationDate = '01-31-2015'"},{"QuerySetId":1218004,"Title":"Evaluation of modern GPGPU technologies for image processing","Description":null,"QueryBody":"SELECT TAGS FROM POSTS","CreationDate":"2020-04-02 23:20:41","validated":false,"QueryBody_Original":"SELECT  TAGS FROM POSTS"},{"QuerySetId":1219031,"Title":"Questions closed by a user as duplicates","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.Score, p.AnswerCount, p.ViewCount, p.ClosedDate FROM Posts AS p INNER JOIN PostHistory AS h ON h.PostId = p.Id WHERE h.PostHistoryTypeId = 10 AND h.Comment = 101 AND h.Text LIKE '%\"Id\":##UserId##%' AND NOT p.ClosedDate IS NULL ORDER BY p.ClosedDate","CreationDate":"2020-04-05 05:34:09","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link], p.Score, p.AnswerCount, p.ViewCount, p.ClosedDate from Posts p\ninner join PostHistory h\non h.PostId=p.Id\nwhere h.PostHistoryTypeId=10 \n  and h.Comment=101 \n  and h.Text like '%\"Id\":##UserId##%' \n  and p.ClosedDate is not null\norder by p.ClosedDate asc"},{"QuerySetId":1219294,"Title":"% of questions that were the user's only question","Description":null,"QueryBody":"SELECT SUM(CASE WHEN sq.count = 1 OR sq.owneruserid IS NULL THEN 1 ELSE 0 END) * 1.0 \/ SUM(count), SUM(CASE WHEN sq.count = 1 OR sq.owneruserid IS NULL THEN 1 ELSE 0 END), SUM(count) FROM (SELECT owneruserid, COUNT(*) AS count FROM posts WHERE posttypeid = 1 GROUP BY owneruserid) AS sq","CreationDate":"2020-04-06 06:09:49","validated":false,"QueryBody_Original":"SELECT  sum(case when sq.count = 1 or sq.owneruserid IS NULL then 1 else 0 end) * 1.0 \/ sum(count), sum(case when sq.count = 1 or sq.owneruserid IS NULL then 1 else 0 end), sum(count)\nFROM (SELECT owneruserid, count(*) as count\nfrom posts\nwhere posttypeid = 1\ngroup by owneruserid) sq"},{"QuerySetId":1220385,"Title":"Low View High Votes com comentario","Description":null,"QueryBody":"SELECT questao.Id AS \"Post Link\", questao.Score, questao.Title, questao.Body, questao.Tags, questao.ViewCount, comentario.Id, comentario.Score AS socre_comentario, comentario.ViewCount AS views_comentario FROM Posts AS questao JOIN Posts AS comentario ON questao.id = comentario.ParentId WHERE questao.Tags LIKE '%<windows-phone%' AND questao.CreationDate >= '01\/01\/2018' AND questao.ParentId IS NULL ORDER BY comentario.Score DESC, questao.ViewCount","CreationDate":"2020-04-07 03:56:53","validated":false,"QueryBody_Original":"SELECT \n questao.Id as [Post Link],\n questao.Score,\n questao.Title,\n questao.Body,\n questao.Tags,\n questao.ViewCount,\n comentario.Id,\n comentario.Score as socre_comentario,\n comentario.ViewCount as views_comentario\nFROM\n Posts questao\n JOIN Posts comentario ON questao.id = comentario.ParentId\nWHERE\n questao.Tags like '%<windows-phone%'\n AND questao.CreationDate >= '01\/01\/2018'\n AND questao.ParentId is null\nORDER BY\n comentario.Score DESC, questao.ViewCount ASC"},{"QuerySetId":1221925,"Title":"Top 30 users from Morocco","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", DisplayName, Reputation FROM Users WHERE LOWER(Location) LIKE '%morocco%' ORDER BY Reputation DESC LIMIT 30","CreationDate":"2020-07-12 15:46:07","validated":false,"QueryBody_Original":"SELECT  TOP 30\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    DisplayName,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%morocco%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1222115,"Title":"Number of questions, answers, posts per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", COUNT(p.Id) AS \"Total Posts\", SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Total Questions\", SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Total Answers\" FROM Posts AS p WHERE p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##' GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-07 21:23:59","validated":false,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  COUNT(p.Id) AS [Total Posts],\n  SUM(case when p.PostTypeId = 1 then 1 else 0 end) AS [Total Questions],\n  SUM(case when p.PostTypeId = 2 then 1 else 0 end) AS [Total Answers]\nFROM Posts p\nWHERE p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##'\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1222535,"Title":"Number of questions, answers per month (non closed)","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", COUNT(p.Id) AS \"Questions\", SUM(p.AnswerCount) AS \"Answers\" FROM Posts AS p WHERE p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##' AND (p.ClosedDate IS NULL) AND (p.PostTypeId = 1) GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-08 07:58:49","validated":false,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  COUNT(p.Id) AS [Questions],\n  SUM(p.AnswerCount) AS [Answers]\nFROM Posts p\nWHERE p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##'\n  and (p.ClosedDate IS NULL) and (p.PostTypeId=1)\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1222536,"Title":"Number of questions and their answers per month (only closed)","Description":null,"QueryBody":"SELECT * FROM Posts AS p WHERE p.tags LIKE '%docker%' AND (NOT p.ClosedDate IS NULL) AND p.PostTypeId = 2","CreationDate":"2020-04-09 05:23:42","validated":false,"QueryBody_Original":"SELECT  *\nFROM Posts p\nWHERE p.tags like '%docker%' \n  and (p.ClosedDate IS NOT NULL) and p.PostTypeId = 2"},{"QuerySetId":1222538,"Title":"Number of questions and their answers per month (only answered)","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", COUNT(p.Id) AS \"Questions\", SUM(p.AnswerCount) AS \"Answers\" FROM Posts AS p WHERE p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##' AND (p.PostTypeId = 1) AND (p.AnswerCount > 0) GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-08 08:04:36","validated":false,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  COUNT(p.Id) AS [Questions],\n  SUM(p.AnswerCount) AS [Answers]\nFROM Posts p\nWHERE p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##'\n  and (p.PostTypeId=1)\n  and (p.AnswerCount>0)\n---only if question is has an answer\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1222637,"Title":"Users from Moscow with QPosts with mscrm Tags ","Description":null,"QueryBody":"SELECT DISTINCT u.DisplayName, CONCAT('https:\/\/stackoverflow.com\/users\/', p.OwnerUserId) AS profile_link \/* ,p.Tags *\/ FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id AND LOWER(u.Location) LIKE '%moscow%' WHERE LOWER(p.Tags) LIKE '%<microsoft-dynamics>%' OR LOWER(p.Tags) LIKE '%<dynamics-crm>%' OR LOWER(p.Tags) LIKE '%<dynamics-crm-2011>%'","CreationDate":"2020-06-15 10:36:09","validated":false,"QueryBody_Original":"SELECT  DISTINCT\n  u.DisplayName\n  ,CONCAT('https:\/\/stackoverflow.com\/users\/',p.OwnerUserId) AS profile_link\n  --,p.Tags\nFROM Posts AS p\nINNER JOIN\n  Users AS u\n  ON p.OwnerUserId = u.Id\n  AND LOWER(u.Location) LIKE '%moscow%'\nWHERE LOWER(p.Tags) LIKE '%<microsoft-dynamics>%'\n  OR LOWER(p.Tags) LIKE '%<dynamics-crm>%'\n  OR LOWER(p.Tags) LIKE '%<dynamics-crm-2011>%'"},{"QuerySetId":1222653,"Title":"Italian Stackoverflow Users > 99k","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation FROM Users WHERE Reputation > 99000 AND LOWER(Location) LIKE LOWER('%italy%') ORDER BY Reputation DESC","CreationDate":"2020-04-08 13:53:24","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Location,\n    Reputation\nFROM\n    Users\nWHERE\n    Reputation > 99000 AND LOWER(Location) LIKE LOWER('%italy%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1222862,"Title":"Posts apenas de 2017 sobre WP","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate AS Title, ViewCount, Body, Tags FROM Posts WHERE PostTypeId = 1 AND CreationDate BETWEEN '01\/01\/2017' AND '12\/31\/2017' AND Tags LIKE '%<windows-phone%'","CreationDate":"2020-04-09 03:52:37","validated":false,"QueryBody_Original":"SELECT  \n  Id as [Post Link],\n  CreationDate\n  Title,\n  ViewCount,\n  Body,\n  Tags\nFROM\n  Posts\nWHERE\n  PostTypeId = 1\n  AND CreationDate BETWEEN '01\/01\/2017' AND '12\/31\/2017'\n  AND Tags like '%<windows-phone%'"},{"QuerySetId":1223092,"Title":"Top 10 Gold Badges users","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) FROM Badges WHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero') GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 10","CreationDate":"2020-04-09 15:41:36","validated":false,"QueryBody_Original":"SELECT  TOP 10 UserId AS [User Link], COUNT(*) \nFROM Badges\nWHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero')\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":1223093,"Title":"Top 10 Gold Badge users","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) FROM Badges WHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero') GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 10","CreationDate":"2020-04-09 15:42:50","validated":false,"QueryBody_Original":"SELECT  TOP 10 UserId AS [User Link], COUNT(*) \nFROM Badges\nWHERE Name IN ('Copy Editor', 'Electorate', 'Famous Question', 'Fanatic', 'Great Answer', 'Great Question', 'Legendary', 'Marshal', 'Populist', 'Publicist', 'Reversal', 'Stellar Question', 'Steward', 'Unsung Hero')\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":1223528,"Title":"Number of active experts per week (courtesy of Isaac Moses)","Description":null,"QueryBody":"SELECT YR_WK, COUNT(*) AS NumActiveExperts FROM (SELECT (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%W') - 1) \/ 52.0) AS YR_WK, u.id AS UID, COUNT(*) AS NumAnswers FROM users AS u INNER JOIN posts AS p ON p.owneruserid = u.id AND p.posttypeid = 2 AND p.score > 0 GROUP BY (TIME_TO_STR(p.creationdate, '%y') + (TIME_TO_STR(p.creationdate, '%W') - 1) \/ 52.0), u.id) AS AnsPerUPerWk WHERE NumAnswers > 1 GROUP BY YR_WK ORDER BY YR_WK","CreationDate":"2020-04-10 01:28:21","validated":false,"QueryBody_Original":"SELECT  YR_WK, count(*) as NumActiveExperts\nfrom\n(\n  SELECT\n      (datepart(yy, p.creationdate) + (datepart(wk, p.creationdate)-1) \/ 52.0) as YR_WK\n    , u.id as UID\n    , count (*) as NumAnswers\n  from users u\n  inner join posts p on\n        p.owneruserid = u.id\n    and p.posttypeid = 2\n    and p.score > 0\n  group by \n     (datepart(yy, p.creationdate) + (datepart(wk, p.creationdate)-1) \/ 52.0)\n    , u.id\n) AnsPerUPerWk\nwhere NumAnswers > 1\ngroup by YR_WK\norder by YR_WK asc"},{"QuerySetId":1223730,"Title":"Number of votes on answers and votes on questions per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(v.CreationDate), COUNT(v.Id) AS \"Total Upvotes\", SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Question Upvotes\", SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Answer Upvotes\" FROM Posts AS p INNER JOIN Votes AS v ON v.PostId = p.Id WHERE v.VoteTypeId = 2 GROUP BY LAST_DATE_OF_MONTH(v.CreationDate) ORDER BY LAST_DATE_OF_MONTH(v.CreationDate)","CreationDate":"2020-04-10 13:42:56","validated":false,"QueryBody_Original":"SELECT \n  eomonth(v.CreationDate),\n  COUNT(v.Id) AS [Total Upvotes],\n  SUM(CASE WHEN p.PostTypeId=1 THEN 1 ELSE 0 END) AS [Question Upvotes],\n  SUM(CASE WHEN p.PostTypeId=2 THEN 1 ELSE 0 END) AS [Answer Upvotes]\nFROM Posts p INNER JOIN Votes v ON v.PostId = p.Id\nWHERE v.VoteTypeId=2\n---VoteTypeId=2 Upvotes\n---VoteTypeId=3 Downvotes\nGROUP BY eomonth(v.CreationDate)\nORDER BY eomonth(v.CreationDate)"},{"QuerySetId":1223741,"Title":"Number of questions\/answers\/posts per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", COUNT(p.Id) AS \"Total Posts\", SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Total Questions\", SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Total Answers\" FROM Posts AS p GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-13 14:24:15","validated":false,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  COUNT(p.Id) AS [Total Posts],\n  SUM(case when p.PostTypeId = 1 then 1 else 0 end) AS [Total Questions],\n  SUM(case when p.PostTypeId = 2 then 1 else 0 end) AS [Total Answers]\nFROM Posts p\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1223756,"Title":"Ratio of AnswerCount to ViewCount (by month of CreationDate of the question) - only non-CW questions","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", ((CAST(SUM(p.AnswerCount) AS FLOAT)) \/ (CAST(SUM(p.ViewCount) AS FLOAT))) AS Ratio FROM Posts AS p\/* -only questions: p.PostTypeId=1 *\/  WHERE p.PostTypeId = 1 AND p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##' AND (p.CommunityOwnedDate IS NULL) GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-13 16:12:19","validated":false,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  ((CAST(SUM(p.AnswerCount) AS decimal))\/(CAST(SUM(p.ViewCount) AS decimal))) AS Ratio\nFROM Posts p\nWHERE p.PostTypeId=1\n---only questions: p.PostTypeId=1\nAND p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##'\nAND (p.CommunityOwnedDate IS NULL)\n---only non-CW questions\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1223758,"Title":"Total score of answers for the question","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", SUM(a.Score) AS \"Total Answers Score\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id\/* -only questions: p.PostTypeId=1 *\/  WHERE q.PostTypeId = 1 AND (q.CreationDate >= '##Date1?2020-01-01##') AND (q.CreationDate <= '##Date2?2021-01-01##') GROUP BY q.Id ORDER BY q.Id","CreationDate":"2020-04-10 15:47:08","validated":false,"QueryBody_Original":"SELECT  \n  q.Id AS [Post Link],\n  SUM(a.Score) [Total Answers Score]\nFROM Posts q INNER JOIN Posts a ON a.ParentId=q.Id \nWHERE q.PostTypeId=1\n---only questions: p.PostTypeId=1\nAND (q.CreationDate >= '##Date1?2020-01-01##') AND (q.CreationDate <= '##Date2?2021-01-01##')\n---restriction on date\nGROUP BY q.Id\nORDER BY q.Id"},{"QuerySetId":1223763,"Title":"Questions Count with Tag by Month","Description":null,"QueryBody":"SELECT date1, COUNT(DISTINCT id) FROM (SELECT DISTINCT TIME_TO_STR(d.CreationDate, '%Y-%m') AS \"date1\", (d.Id) AS id, d.Body, Score, AnswerCount, CommentCount, FavoriteCount FROM Posts AS d WHERE d.PostTypeId = 1 \/* 1=Question *\/ AND d.CreationDate >= '2019-01-01' AND d.CreationDate <= '2020-11-01' AND d.tags LIKE '%kotlin%') AS z GROUP BY date1 ORDER BY date1","CreationDate":"2020-11-17 14:31:16","validated":false,"QueryBody_Original":"SELECT  date1, count(distinct id) from (\nSELECT distinct\n    FORMAT (d.CreationDate, 'yyyy-MM') as [date1],\n    (d.Id) as id,\n    d.Body,\n    Score,\n    AnswerCount,\n    CommentCount,\n    FavoriteCount\n  FROM Posts d\n  WHERE\n    d.PostTypeId = 1  -- 1=Question\n    and d.CreationDate >= '2019-01-01' and d.CreationDate <= '2020-11-01'\n    and d.tags like '%kotlin%') z\ngroup by date1\norder by date1 ASC"},{"QuerySetId":1223776,"Title":"Number of unanswered question (zero answers) per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(q.creationdate), COUNT(q.Id) AS Count FROM Posts AS q WHERE (q.PostTypeId = 1) AND (q.AnswerCount = 0) GROUP BY LAST_DATE_OF_MONTH(q.creationdate) ORDER BY LAST_DATE_OF_MONTH(q.creationdate)","CreationDate":"2020-04-10 19:12:34","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(q.creationdate),\n  COUNT(q.Id) AS Count\nFROM Posts q\nWHERE (q.PostTypeId=1) AND (q.AnswerCount=0)\nGROUP BY eomonth(q.creationdate)\nORDER BY eomonth(q.creationdate)"},{"QuerySetId":1223820,"Title":"Answer older than the question","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", a.Id AS \"Post Link\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE (q.PostTypeId = 1) AND (q.AnswerCount > 0) AND (a.CreationDate < q.CreationDate)","CreationDate":"2020-04-10 18:14:41","validated":false,"QueryBody_Original":"SELECT \n  q.Id AS [Post Link],\n  a.Id AS [Post Link]\nFROM Posts q INNER JOIN Posts a ON a.ParentId=q.Id\nWHERE (q.PostTypeId=1) and (q.AnswerCount>0)\n  AND (a.CreationDate < q.CreationDate)"},{"QuerySetId":1223955,"Title":"Try and find deleted BLCR question","Description":null,"QueryBody":"SELECT Body FROM Posts WHERE LOWER(Body) LIKE '%blcr%'","CreationDate":"2020-04-10 23:47:02","validated":false,"QueryBody_Original":"SELECT  Body from Posts \nwhere LOWER(Body) LIKE '%blcr%'"},{"QuerySetId":1224979,"Title":"Number of questions\/answers\/posts per month of question's CreationDate","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(q.CreationDate) AS \"month\", CAST(COUNT(DISTINCT q.Id) + COUNT(DISTINCT a.Id) AS INT) AS \"Total Posts\", COUNT(DISTINCT q.Id) AS \"Total Questions\", COUNT(DISTINCT a.Id) AS \"Total Answers\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id GROUP BY LAST_DATE_OF_MONTH(q.CreationDate) ORDER BY LAST_DATE_OF_MONTH(q.CreationDate)","CreationDate":"2020-04-13 17:33:42","validated":false,"QueryBody_Original":"SELECT  eomonth(q.CreationDate) [month],\n  CAST(COUNT(DISTINCT q.Id)+COUNT(DISTINCT a.Id) AS Integer) AS [Total Posts],\n  COUNT(DISTINCT q.Id) AS [Total Questions],\n  COUNT(DISTINCT a.Id) AS [Total Answers]\nFROM Posts q INNER JOIN Posts a ON a.ParentId=q.Id\nGROUP BY eomonth(q.CreationDate)\nORDER BY eomonth(q.CreationDate)\n---a.CreationDate might be different from q.Creationdate\n---I did not want to complicate the query too much and I wanted to have questions and answers in the same query"},{"QuerySetId":1224983,"Title":"Number of questions\/answers per month of question's CreationDate - in the specified tags","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(q.CreationDate) AS \"month\", COUNT(DISTINCT q.Id) AS \"Total Questions\", COUNT(DISTINCT a.Id) AS \"Total Answers\" FROM Posts AS q INNER JOIN Posts AS a ON a.ParentId = q.Id WHERE ((q.Tags LIKE '%<##tag1?big-list##>%') OR (q.Tags LIKE '%<##tag2?soft-question##>%')) GROUP BY LAST_DATE_OF_MONTH(q.CreationDate) ORDER BY LAST_DATE_OF_MONTH(q.CreationDate)","CreationDate":"2020-04-13 14:33:44","validated":false,"QueryBody_Original":"SELECT  eomonth(q.CreationDate) [month],\n  COUNT(DISTINCT q.Id) AS [Total Questions],\n  COUNT(DISTINCT a.Id) AS [Total Answers]\nFROM Posts q INNER JOIN Posts a ON a.ParentId=q.Id\nWHERE\n  ((q.Tags Like '%<##tag1?big-list##>%') OR (q.Tags Like '%<##tag2?soft-question##>%'))\nGROUP BY eomonth(q.CreationDate)\nORDER BY eomonth(q.CreationDate)\n---a.CreationDate might be different from q.Creationdate\n---I did not want to complicate the query too much and I wanted to have questions and answers in the same query"},{"QuerySetId":1224986,"Title":"Deleted questions between two dates in a specific tag","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE (PostTypeId = 1) AND (CreationDate >= '##Date1?2018-04-01##') AND (Creationdate <= '##Date2?2018-04-02##')","CreationDate":"2020-04-28 04:30:38","validated":false,"QueryBody_Original":"SELECT  count(*)\nFROM Posts\nWHERE (PostTypeId = 1) AND\n(CreationDate >= '##Date1?2018-04-01##') AND\n(Creationdate <= '##Date2?2018-04-02##')"},{"QuerySetId":1224995,"Title":"Number of questions\/answers\/posts per month - only non-CW","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", COUNT(p.Id) AS \"Total Posts\", SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Total Questions\", SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Total Answers\" FROM Posts AS p WHERE (CommunityOwnedDate IS NULL) GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-13 15:28:47","validated":false,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  COUNT(p.Id) AS [Total Posts],\n  SUM(case when p.PostTypeId = 1 then 1 else 0 end) AS [Total Questions],\n  SUM(case when p.PostTypeId = 2 then 1 else 0 end) AS [Total Answers]\nFROM Posts p\n  WHERE (CommunityOwnedDate IS NULL)\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1225030,"Title":"Number of votes on answers and votes on questions per month - only non-CW","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(v.CreationDate), COUNT(v.Id) AS \"Total Upvotes\", SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS \"Question Upvotes\", SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS \"Answer Upvotes\" FROM Posts AS p INNER JOIN Votes AS v ON v.PostId = p.Id\/* -VoteTypeId=2 Upvotes *\/ \/* -VoteTypeId=3 Downvotes *\/  WHERE v.VoteTypeId = 2 AND (p.CommunityOwnedDate IS NULL) GROUP BY LAST_DATE_OF_MONTH(v.CreationDate) ORDER BY LAST_DATE_OF_MONTH(v.CreationDate)","CreationDate":"2020-04-13 16:14:05","validated":false,"QueryBody_Original":"SELECT \n  eomonth(v.CreationDate),\n  COUNT(v.Id) AS [Total Upvotes],\n  SUM(CASE WHEN p.PostTypeId=1 THEN 1 ELSE 0 END) AS [Question Upvotes],\n  SUM(CASE WHEN p.PostTypeId=2 THEN 1 ELSE 0 END) AS [Answer Upvotes]\nFROM Posts p INNER JOIN Votes v ON v.PostId = p.Id\nWHERE v.VoteTypeId=2\n---VoteTypeId=2 Upvotes\n---VoteTypeId=3 Downvotes\nAND (p.CommunityOwnedDate IS NULL)\n---only non-CW posts\nGROUP BY eomonth(v.CreationDate)\nORDER BY eomonth(v.CreationDate)"},{"QuerySetId":1225041,"Title":"Ratio of AnswerCount to ViewCount (by month of CreationDate of the question) - with some tags exclud","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.CreationDate) AS \"month\", ((CAST(SUM(p.AnswerCount) AS FLOAT)) \/ (CAST(SUM(p.ViewCount) AS FLOAT))) AS Ratio FROM Posts AS p\/* -only questions: p.PostTypeId=1 *\/  WHERE p.PostTypeId = 1 AND p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##' AND NOT ((p.Tags LIKE '%<##tag1?big-list##>%') OR (p.Tags LIKE '%<##tag2?soft-question##>%')) GROUP BY LAST_DATE_OF_MONTH(p.CreationDate) ORDER BY LAST_DATE_OF_MONTH(p.CreationDate)","CreationDate":"2020-04-13 16:44:38","validated":false,"QueryBody_Original":"SELECT  eomonth(p.CreationDate) [month],\n  ((CAST(SUM(p.AnswerCount) AS decimal))\/(CAST(SUM(p.ViewCount) AS decimal))) AS Ratio\nFROM Posts p\nWHERE p.PostTypeId=1\n---only questions: p.PostTypeId=1\nAND p.CreationDate >= '##Date1?2015-01-01##' AND p.CreationDate <= '##Date2?2021-01-01##'\nAND NOT((p.Tags Like '%<##tag1?big-list##>%') OR (p.Tags Like '%<##tag2?soft-question##>%'))\n---exclude these tags\nGROUP BY eomonth(p.CreationDate)\nORDER BY eomonth(p.CreationDate)"},{"QuerySetId":1225494,"Title":"Top 100 users from Germany","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%united arab emirates%' OR UPPER(Location) LIKE '%PK' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2020-04-14 11:59:24","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%united arab emirates%'\n    OR UPPER(Location) LIKE '%PK'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1225496,"Title":"Top 100 users from United Arab Emirates","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%united arab emirates%' OR UPPER(Location) LIKE '%PK' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2020-04-14 13:51:50","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%united arab emirates%'\n    OR UPPER(Location) LIKE '%PK'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1225813,"Title":"Tag new question activity ","Description":null,"QueryBody":"SELECT RIGHT(LEFT(CreationDate, 11), 4) AS Year, COUNT(id) AS PostCount, COUNT(id) \/ 365 AS AveragePostsPerDay, SUM(ViewCount) AS Views, SUM(ViewCount) \/ 365 AS ViewsPerDay FROM Posts WHERE Tags LIKE '%JavaScript%' GROUP BY RIGHT(LEFT(CreationDate, 11), 4) ORDER BY RIGHT(LEFT(CreationDate, 11), 4) DESC","CreationDate":"2020-04-29 16:40:43","validated":false,"QueryBody_Original":"SELECT \n    right(left(CreationDate,11),4) as Year,\n    Count(id) as PostCount, \n    Count(id)\/365 as AveragePostsPerDay,\n    SUM(ViewCount) as Views,\n    SUM(ViewCount)\/365 as ViewsPerDay\nFROM\n    Posts\nWHERE\n    Tags like '%JavaScript%'\nGROUP BY right(left(CreationDate,11),4)\norder by right(left(CreationDate,11),4) desc;"},{"QuerySetId":1226271,"Title":"Questions with answers posted after the question was closed","Description":null,"QueryBody":"SELECT questions.Id AS \"Post Link\", answers.CreationDate FROM Posts AS answers JOIN Posts AS questions ON questions.Id = answers.ParentId WHERE NOT questions.ClosedDate IS NULL AND answers.CreationDate > questions.ClosedDate ORDER BY answers.CreationDate DESC","CreationDate":"2020-04-15 19:20:52","validated":false,"QueryBody_Original":"SELECT \n  questions.Id AS [Post Link],\n  answers.CreationDate\nFROM Posts answers\nJOIN Posts questions ON questions.Id = answers.ParentId\nWHERE questions.ClosedDate IS NOT NULL\n  AND answers.CreationDate > questions.ClosedDate\nORDER BY answers.CreationDate DESC"},{"QuerySetId":1226359,"Title":"Search comments by comment text","Description":null,"QueryBody":"SELECT COUNT(CASE WHEN p.Score <= -1 THEN 1 END) AS negative, COUNT(CASE WHEN p.Score = 0 THEN 1 END) AS zero, COUNT(CASE WHEN p.Score >= 1 THEN 1 END) AS positive FROM Posts AS p JOIN Comments AS c ON (p.Id = c.PostId) WHERE UPPER(c.Text) LIKE UPPER('%sobreviv\u00eancia%') AND NOT p.ClosedDate IS NULL","CreationDate":"2020-04-15 21:20:01","validated":false,"QueryBody_Original":"SELECT \n  count(CASE WHEN p.Score <= -1 THEN 1 END) negative,\n  count(CASE WHEN p.Score = 0 THEN 1 END) zero,\n  count(CASE WHEN p.Score >= 1 THEN 1 END) positive\nFROM Posts p join Comments c on (p.Id = c.PostId) \nWHERE UPPER(c.Text) LIKE UPPER('%sobreviv\u00eancia%')\n  AND p.ClosedDate is not null"},{"QuerySetId":1226814,"Title":"Reputa\u00e7\u00e3o m\u00e9dia do Stack Overflow","Description":null,"QueryBody":"SELECT AVG(Users.Reputation) FROM Users","CreationDate":"2020-08-06 23:50:19","validated":false,"QueryBody_Original":"SELECT  avg(Users.Reputation)  from Users;"},{"QuerySetId":1226852,"Title":"Mais visualizada que n\u00e3o tem resposta em 2017","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, ViewCount, Title, Body, Tags FROM Posts AS c WHERE ViewCount \/* Score > 2 *\/ <> 0 AND ParentId IS NULL AND AcceptedAnswerId IS NULL AND Tags LIKE '%<windows-phone%' AND CreationDate BETWEEN '01\/01\/2017' AND '12\/31\/2017' ORDER BY ViewCount DESC","CreationDate":"2020-04-16 05:08:42","validated":false,"QueryBody_Original":"SELECT \nId AS [Post Link],\nScore,\nViewCount,\nTitle,\nBody,\nTags\nFROM\nPosts c\nWHERE\n--Score > 2\nViewCount <> 0\nand ParentId is null\nand AcceptedAnswerId is null\nand Tags like '%<windows-phone%'\nand CreationDate between '01\/01\/2017' and '12\/31\/2017'\nORDER BY\nViewCount DESC"},{"QuerySetId":1226866,"Title":"Low views, high votes com os comentarios de 2017","Description":null,"QueryBody":"SELECT questao.Id AS \"Post Link\", questao.Score, questao.Title, questao.Body, questao.Tags, questao.ViewCount, comentario.Id, comentario.Score AS socre_comentario, comentario.ViewCount AS views_comentario FROM Posts AS questao JOIN Posts AS comentario ON questao.id = comentario.ParentId WHERE questao.Tags LIKE '%<windows-phone%' AND questao.CreationDate BETWEEN '01\/01\/2017' AND '12\/31\/2017' AND questao.ParentId IS NULL ORDER BY comentario.Score DESC, questao.ViewCount","CreationDate":"2020-04-16 05:16:20","validated":false,"QueryBody_Original":"SELECT \nquestao.Id as [Post Link],\nquestao.Score,\nquestao.Title,\nquestao.Body,\nquestao.Tags,\nquestao.ViewCount,\ncomentario.Id,\ncomentario.Score as socre_comentario,\ncomentario.ViewCount as views_comentario\nFROM\nPosts questao\nJOIN Posts comentario ON questao.id = comentario.ParentId\nWHERE\nquestao.Tags like '%<windows-phone%'\nAND questao.CreationDate between '01\/01\/2017' and '12\/31\/2017'\nAND questao.ParentId is null\nORDER BY\ncomentario.Score DESC, questao.ViewCount ASC"},{"QuerySetId":1226868,"Title":"Top 500 answerers on the site of windows phone in 2017","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(respostas.Id) AS Answers, CAST(AVG(CAST(respostas.Score AS FLOAT)) AS FLOAT(6, 2)) AS \"Average Answer Score\" FROM Posts AS respostas INNER JOIN Users ON Users.Id = OwnerUserId JOIN Posts AS pergutas ON respostas.ParentId = pergutas.id AND pergutas.PostTypeId = 1 WHERE respostas.PostTypeId = 2 \/* and respostas.CommunityOwnedDate is null and respostas.ClosedDate is null *\/ AND pergutas.Tags LIKE '%<windows-phone%' AND pergutas.CreationDate BETWEEN '01\/01\/2017' AND '12\/31\/2017' GROUP BY Users.Id, DisplayName ORDER BY \"Average Answer Score\" DESC LIMIT 500","CreationDate":"2020-04-16 05:17:40","validated":false,"QueryBody_Original":"SELECT \nTOP 500\nUsers.Id as [User Link],\nCount(respostas.Id) AS Answers,\nCAST(AVG(CAST(respostas.Score AS float)) as numeric(6,2)) AS [Average Answer Score]\nFROM\nPosts respostas\nINNER JOIN\nUsers ON Users.Id = OwnerUserId\nJOIN\nPosts pergutas on respostas.ParentId = pergutas.id and pergutas.PostTypeId = 1\nWHERE\nrespostas.PostTypeId = 2 -- and respostas.CommunityOwnedDate is null and respostas.ClosedDate is null\nand pergutas.Tags like '%<windows-phone%'\nand pergutas.CreationDate between '01\/01\/2017' and '12\/31\/2017'\nGROUP BY\nUsers.Id, DisplayName\nORDER BY\n[Average Answer Score] DESC"},{"QuerySetId":1227273,"Title":"ViewCount of a specific Question ID","Description":null,"QueryBody":"SELECT ViewCount FROM Posts WHERE Id = 203590","CreationDate":"2020-04-16 20:14:54","validated":false,"QueryBody_Original":"SELECT  ViewCount FROM Posts WHERE Id=203590"},{"QuerySetId":1227778,"Title":"Tags que surgiram de pois de 2018","Description":null,"QueryBody":"SELECT DISTINCT Tags FROM Posts WHERE PostTypeId = 1 AND CreationDate >= '01\/01\/2018' AND Tags LIKE '%<windows-phone%' EXCEPT SELECT DISTINCT Tags FROM Posts WHERE PostTypeId = 1 AND CreationDate <= '01\/01\/2018' AND Tags LIKE '%<windows-phone%'","CreationDate":"2020-04-17 05:28:05","validated":false,"QueryBody_Original":"SELECT \ndistinct Tags\nFROM\nPosts\nWHERE\nPostTypeId = 1\nAND CreationDate >= '01\/01\/2018'\nAND Tags like '%<windows-phone%'\n\nexcept \n\nSELECT\ndistinct Tags\nFROM\nPosts\nWHERE\nPostTypeId = 1\nAND CreationDate <= '01\/01\/2018'\nAND Tags like '%<windows-phone%'"},{"QuerySetId":1227984,"Title":"Users on StackOverflow and Christianity","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users","CreationDate":"2020-04-28 10:27:45","validated":false,"QueryBody_Original":"SELECT  count(*) from Users"},{"QuerySetId":1228419,"Title":"\"Thanks\" comments by OP ","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\" FROM Comments WHERE UserId = (SELECT OwnerUserId FROM Posts WHERE Id = PostId AND Text LIKE '%\u0441\u043f\u0430\u0441\u0438\u0431\u043e%') ORDER BY Comments.CreationDate DESC LIMIT 1000","CreationDate":"2020-04-19 21:34:28","validated":false,"QueryBody_Original":"SELECT  TOP 1000 PostId AS [Post Link]\nFROM Comments \nWHERE UserId=(SELECT OwnerUserId FROM Posts WHERE Id=PostId  AND Text LIKE '%\u0441\u043f\u0430\u0441\u0438\u0431\u043e%')\n\n\nORDER BY Comments.CreationDate DESC"},{"QuerySetId":1229466,"Title":"Convert binary to varchar metin2","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(CAST('Spada Velenosa+0' AS VARBINARY(24)), '%m\/%d\/%y') AS TEXT(1024))","CreationDate":"2020-04-20 16:46:20","validated":false,"QueryBody_Original":"SELECT  CONVERT(VARCHAR(1024), CONVERT(VARBINARY(24), 'Spada Velenosa+0'), 1)"},{"QuerySetId":1229470,"Title":"Convert varchar to binary metin2","Description":null,"QueryBody":"SELECT CAST('Spada Velenosa+0' AS VARBINARY(24))","CreationDate":"2020-04-20 15:17:22","validated":false,"QueryBody_Original":"SELECT  CONVERT(VARBINARY(24), 'Spada Velenosa+0');"},{"QuerySetId":1229630,"Title":"Count of Java Tagged Posts","Description":null,"QueryBody":"SELECT Tags, AVG(CAST(ViewCount AS INT)) FROM Posts GROUP BY Tags HAVING COUNT(*) > 0","CreationDate":"2020-04-20 19:58:09","validated":false,"QueryBody_Original":"SELECT  Tags, AVG(CONVERT(BIGINT, ViewCount))\nFROM Posts\nGROUP BY Tags\nHAVING COUNT(*) > 0;\n\/*ORDER BY 2 DESC;*\/"},{"QuerySetId":1229846,"Title":"Recent comments containing given keyword (with text and author)","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE Text LIKE '%##Word##%' ORDER BY CreationDate DESC","CreationDate":"2020-04-21 13:33:24","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE Text LIKE '%##Word##%'\nORDER BY CreationDate DESC"},{"QuerySetId":1230966,"Title":"SELECT Id, CreationDate,        Score, ViewCount, Tags,        AnswerCount, FavoriteCount   FROM pos","Description":null,"QueryBody":"SELECT Id, CreationDate, Score, ViewCount, Tags, AnswerCount, FavoriteCount FROM posts WHERE PostTypeId = 1 AND YEAR(CreationDate) = 2019","CreationDate":"2020-04-23 16:34:36","validated":false,"QueryBody_Original":"SELECT  Id, CreationDate,\n       Score, ViewCount, Tags,\n       AnswerCount, FavoriteCount\n  FROM posts\n WHERE PostTypeId = 1 AND YEAR(CreationDate) = 2019;"},{"QuerySetId":1231059,"Title":"Top 50000 best score queries with more than one answer and one favorite","Description":null,"QueryBody":"SELECT ViewCount, CreationDate, Title, Body, Tags, Score, CommentCount, AnswerCount, FavoriteCount FROM Posts WHERE FavoriteCount > 10 AND AnswerCount > 1 AND Score > 100 ORDER BY Score DESC LIMIT 50000","CreationDate":"2020-04-23 18:14:36","validated":false,"QueryBody_Original":"SELECT  \n\tTOP 50000 ViewCount,\n    CreationDate,\n    Title,\n    Body,\n    Tags,\n    Score,\n    CommentCount,\n    AnswerCount,\n    FavoriteCount\n    \nFROM Posts\nWHERE \n    FavoriteCount > 10\n    AND AnswerCount > 1\n    AND Score > 100\nORDER BY Score DESC"},{"QuerySetId":1231292,"Title":"Usuarios que ja responderam Quest\u00e3o de WP","Description":null,"QueryBody":"SELECT u.* FROM Posts AS p JOIN Posts AS respostas ON respostas.ParentId = p.id JOIN Users AS u ON p.OwnerUserId = u.id WHERE p.Tags LIKE '%<windows-phone%' AND p.CreationDate >= '01\/01\/2018'","CreationDate":"2020-04-25 23:22:14","validated":false,"QueryBody_Original":"SELECT \n u.*\nFROM\n        Posts p\n   JOIN Posts respostas ON respostas.ParentId = p.id\n   JOIN Users u ON  p.OwnerUserId = u.id\nWHERE\n      p.Tags like '%<windows-phone%'\n  AND p.CreationDate >= '01\/01\/2018'"},{"QuerySetId":1231348,"Title":"Tag-info containing the given word ","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", CONCAT('site:\/\/tags\/', t.tagname, '\/info|', t.tagname, ' ', CASE WHEN p.posttypeid = 4 THEN 'excerpt' ELSE 'wiki' END) AS \"Tag Link\", url = 'site:\/\/posts\/' + CAST(p.Id AS TEXT) + '\/revisions', p.Body FROM Posts AS p INNER JOIN tags AS t ON (t.wikipostid = p.id OR t.excerptpostid = p.id) WHERE (p.PostTypeId IN (4, 5)) AND LOWER(p.Body) LIKE '%##Word?pde##%' ORDER BY p.Id","CreationDate":"2020-04-24 08:44:42","validated":false,"QueryBody_Original":"SELECT  \n  p.Id AS [Post Link],\n  concat(\n          'site:\/\/tags\/',\n          t.tagname,\n          '\/info|',\n          t.tagname,\n          ' ',\n          case when p.posttypeid = 4 then 'excerpt' else 'wiki' end\n          ) [Tag Link],\n  url = 'site:\/\/posts\/' + CAST(p.Id AS varchar)+'\/revisions',\n  p.Body \nFROM Posts p inner join tags t on (t.wikipostid = p.id or t.excerptpostid = p.id)\nWHERE (p.PostTypeId in (4,5))\n  and lower(p.Body) LIKE '%##Word?pde##%'\nORDER BY p.Id"},{"QuerySetId":1231884,"Title":"Posts com tag xamarin ou mobile que contem Windows no Body","Description":null,"QueryBody":"SELECT * FROM Posts WHERE PostTypeId = 1 AND CreationDate >= '01\/01\/2018' AND (Tags LIKE '%mobile%' OR Tags LIKE '%xamarin%') AND body LIKE '%Windows%Phone%'","CreationDate":"2020-04-25 23:54:38","validated":false,"QueryBody_Original":"SELECT \n*\nfrom \nPosts\nwhere\nPostTypeId = 1\nand CreationDate >= '01\/01\/2018'\nand (\n    Tags like '%mobile%' \n     OR Tags like '%xamarin%'\n      )\nand body like '%Windows%Phone%'"},{"QuerySetId":1231986,"Title":"Top user in Hong Kong","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE LOWER('%Hong Kong%') ORDER BY Reputation DESC","CreationDate":"2020-04-26 06:54:44","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\nLOWER(Location) LIKE LOWER('%Hong Kong%')\n    \nORDER BY\n    Reputation DESC;"},{"QuerySetId":1232215,"Title":"Check when there was the last update","Description":null,"QueryBody":"SELECT CreationDate FROM Posts ORDER BY CreationDate DESC LIMIT 500","CreationDate":"2020-04-27 10:18:47","validated":false,"QueryBody_Original":"SELECT  TOP(500)\n  CreationDate\nFROM Posts\nORDER BY CreationDate DESC"},{"QuerySetId":1232923,"Title":"Top AWS Answerers in a month","Description":null,"QueryBody":"\/* TOP 100 *\/ SELECT Answer.OwnerUserId, Answerer.DisplayName, COUNT(Answer.Id) AS Answers FROM Posts AS Question JOIN Posts AS Answer ON Question.Id = Answer.ParentId JOIN Users AS Answerer ON Answer.OwnerUserId = Answerer.Id WHERE Question.PostTypeId = 1 \/* Question *\/ AND Answer.PostTypeId = 2 \/* Answer *\/ AND Question.ClosedDate IS NULL \/* Exclude Closed questions *\/ AND (Question.Tags LIKE '%<amazon-%' OR Question.Tags LIKE '%<aws-%') AND CAST(TIME_TO_STR(Answer.CreationDate, '%Y-%m-%d') AS TEXT(7)) = '##Month##' GROUP BY Answer.OwnerUserId, Answerer.DisplayName ORDER BY COUNT(Answer.Id) DESC","CreationDate":"2020-04-29 09:49:13","validated":false,"QueryBody_Original":"SELECT  --TOP 100\n  Answer.OwnerUserId,\n  Answerer.DisplayName,\n  COUNT(Answer.Id) AS Answers\n\nFROM Posts as Question\nJOIN Posts as Answer ON Question.Id = Answer.ParentId\nJOIN Users as Answerer ON Answer.OwnerUserId = Answerer.Id\n\nWHERE Question.PostTypeId = 1 -- Question\n  AND Answer.PostTypeId = 2 -- Answer\n  AND Question.ClosedDate IS NULL -- Exclude Closed questions\n  AND (Question.Tags LIKE '%<amazon-%' OR Question.Tags LIKE '%<aws-%')\n  AND CONVERT(nvarchar(7), Answer.CreationDate, 23) = '##Month##'\n\nGROUP BY Answer.OwnerUserId, Answerer.DisplayName\nORDER BY COUNT(Answer.Id) Desc"},{"QuerySetId":1233194,"Title":"Query to gather rails questions","Description":null,"QueryBody":"SELECT COUNT('Id') FROM Posts WHERE Posts.Tags = 'Ruby'","CreationDate":"2020-04-29 23:14:56","validated":false,"QueryBody_Original":"SELECT  count('Id') from Posts where Posts.Tags = 'Ruby'"},{"QuerySetId":1233308,"Title":"TOP 50 users from Kenya","Description":"Lists the top 50 users (ranked by reputation) that are located in Calicut\/Kozhikode, Kerala, India according to their profile information.\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT Id, DisplayName, Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%Kenya%' ORDER BY reputation DESC LIMIT 50","CreationDate":"2020-04-30 03:18:44","validated":false,"QueryBody_Original":"SELECT  TOP 50\n   Id,\n   DisplayName,\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%Kenya%'\n   --OR Location like N'%Kozhi%'\n   --OR Location like N'%Kerala%' \nORDER BY\n   reputation DESC"},{"QuerySetId":1233361,"Title":"SELECT * FROM users WHERE DownVotes > UpVotes AND UpVotes < 50 AND DownVotes > 100;","Description":null,"QueryBody":"SELECT * FROM users WHERE DownVotes > UpVotes AND UpVotes < 50 AND DownVotes > 100","CreationDate":"2020-04-30 08:54:53","validated":false,"QueryBody_Original":"SELECT  * FROM users WHERE DownVotes > UpVotes AND UpVotes < 50 AND DownVotes > 100;"},{"QuerySetId":1233710,"Title":"Tags of all site of hinduism stack exchange ","Description":null,"QueryBody":"SELECT DISTINCT TagName, ID, WikiPostId, ExcerptPostId FROM Tags ORDER BY TagName","CreationDate":"2020-05-01 12:30:59","validated":false,"QueryBody_Original":"SELECT  distinct TagName, ID, WikiPostId,ExcerptPostId from Tags order by TagName asc"},{"QuerySetId":1233941,"Title":"All Questions and Answer Python","Description":null,"QueryBody":"SELECT Posts.Body FROM Posts","CreationDate":"2020-05-02 13:33:47","validated":false,"QueryBody_Original":"SELECT  Posts.Body\nFROM Posts"},{"QuerySetId":1234032,"Title":"why can't ya'll just have a good api","Description":null,"QueryBody":"SELECT COUNT(id), tags, RIGHT(LEFT(CreationDate, 11), 4) AS year, LEFT(CreationDate, 3) AS month FROM posts GROUP BY tags, RIGHT(LEFT(CreationDate, 11), 4), LEFT(CreationDate, 3) HAVING COUNT(id) > 5 ORDER BY COUNT(id) DESC","CreationDate":"2020-05-04 06:28:49","validated":false,"QueryBody_Original":"SELECT  count(id), tags, right(left(CreationDate,11),4) as year, left(CreationDate,3) as month\nfrom posts\ngroup by tags, right(left(CreationDate,11),4), left(CreationDate,3)\n-- for side a, order by tags for side b\nhaving count(id) > 5\norder by count(id) desc;"},{"QuerySetId":1235024,"Title":"Top 50k scored answers for questions asked in a given year","Description":null,"QueryBody":"SELECT 'http:\/\/stackoverflow.com\/questions\/' + CAST(Answer.id AS TEXT) AS AnswerLink, Question.Title AS QuestionTitle, Question.Body AS Question, Answer.Body AS Answer, Question.Tags AS QuestionTags, Answer.Score AS AnswerScore, CAST(TIME_TO_STR(Question.CreationDate, '%Y') AS INT) AS QuestionYear FROM Posts AS Answer INNER JOIN Posts AS Question ON Answer.ParentId = Question.Id WHERE Answer.PostTypeId = 2 \/* Answers only *\/ AND TIME_TO_STR(Question.CreationDate, '%Y') = 2019 ORDER BY Answer.Score DESC LIMIT 50000","CreationDate":"2020-06-04 15:22:02","validated":false,"QueryBody_Original":"SELECT  TOP 50000 'http:\/\/stackoverflow.com\/questions\/'+ cast(Answer.id as nvarchar) as AnswerLink,\n                  Question.Title as QuestionTitle,\n                  Question.Body as Question,\n                  Answer.Body as Answer, \n                  Question.Tags as QuestionTags, \n                  Answer.Score as AnswerScore, \n                  cast(DATEPART(YYYY, Question.CreationDate) as int) as QuestionYear\nFROM Posts Answer\nINNER JOIN Posts Question\nON Answer.ParentId=Question.Id\nWHERE Answer.PostTypeId=2 --Answers only\nAND DATEPART(YYYY, Question.CreationDate) = 2019\nORDER BY Answer.Score DESC"},{"QuerySetId":1235533,"Title":"Tag Data in Data Science Stack Exchange","Description":null,"QueryBody":"SELECT * FROM posts WHERE posttypeid = 1","CreationDate":"2020-05-06 19:06:11","validated":false,"QueryBody_Original":"SELECT  * FROM posts\nWHERE posttypeid = 1"},{"QuerySetId":1235637,"Title":"select top 1 from Posts","Description":null,"QueryBody":"SELECT * FROM Posts WHERE AnswerCount = 0 ORDER BY CreationDate DESC LIMIT 10","CreationDate":"2020-05-06 19:26:34","validated":false,"QueryBody_Original":"SELECT  TOP 10 * from Posts where AnswerCount = 0 ORDER BY CreationDate DESC"},{"QuerySetId":1236015,"Title":"Preguntas que hayan tenido la mayor cantidad de vistas","Description":null,"QueryBody":"SELECT p.Id, p.Title, p.ViewCount FROM Posts AS p WHERE p.ParentId IS NULL AND p.ViewCount = (SELECT MAX(p2.ViewCount) FROM Posts AS p2 WHERE p2.ParentId IS NULL)","CreationDate":"2020-05-07 19:40:26","validated":false,"QueryBody_Original":"SELECT  p.Id, p.Title, p.ViewCount\nFROM Posts p\nWHERE p.ParentId IS NULL\nAND p.ViewCount = (SELECT MAX(p2.ViewCount)\n                   FROM Posts p2\n                   WHERE p2.ParentId IS NULL);"},{"QuerySetId":1236767,"Title":"Age of tweeted questions (hours)","Description":null,"QueryBody":"SELECT DATEDIFF(h.CreationDate, p.CreationDate), COUNT(*) FROM PostHistory AS h INNER JOIN Posts AS p ON h.PostId = p.Id WHERE h.PostHistoryTypeId = 25 \/* Tweeted *\/ GROUP BY DATEDIFF(h.CreationDate, p.CreationDate) ORDER BY DATEDIFF(h.CreationDate, p.CreationDate)","CreationDate":"2020-05-09 22:07:30","validated":false,"QueryBody_Original":"SELECT  DATEDIFF(HOUR, p.CreationDate, h.CreationDate),\n  COUNT(*)\n  FROM PostHistory AS h\n  INNER JOIN Posts AS p\n    ON h.PostId = p.Id\n  WHERE h.PostHistoryTypeId = 25 -- Tweeted\n  GROUP BY DATEDIFF(HOUR, p.CreationDate, h.CreationDate)\n  ORDER BY DATEDIFF(HOUR, p.CreationDate, h.CreationDate)"},{"QuerySetId":1236796,"Title":"Votes on which day after posting","Description":null,"QueryBody":"SELECT DATEDIFF(v.CreationDate, p.CreationDate) AS Days, COUNT(v.Id) AS Count FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id GROUP BY DATEDIFF(v.CreationDate, p.CreationDate) ORDER BY DATEDIFF(v.CreationDate, p.CreationDate)","CreationDate":"2020-05-10 00:11:29","validated":false,"QueryBody_Original":"SELECT \nDATEDIFF(day, p.CreationDate, v.CreationDate) AS Days,\n  COUNT(v.Id) AS Count\nFROM Votes v INNER JOIN Posts p ON v.PostId=p.Id\nGROUP BY DATEDIFF(day, p.CreationDate, v.CreationDate) \nORDER BY DATEDIFF(day, p.CreationDate, v.CreationDate)"},{"QuerySetId":1236798,"Title":"Percentage of votes - depending on day after posting","Description":null,"QueryBody":"SELECT DATEDIFF(v.CreationDate, p.CreationDate) AS Days, COUNT(v.Id) AS Count, COUNT(v.Id) * 100.0 \/ SUM(COUNT(v.Id)) OVER () AS Percentage \/* -see: https:\/\/stackoverflow.com\/questions\/46909494\/percentage-from-total-sum-after-group-by-sql-server *\/ FROM Votes AS v INNER JOIN Posts AS p ON v.PostId = p.Id GROUP BY DATEDIFF(v.CreationDate, p.CreationDate) ORDER BY DATEDIFF(v.CreationDate, p.CreationDate)","CreationDate":"2020-05-10 00:48:38","validated":false,"QueryBody_Original":"SELECT \n  DATEDIFF(day, p.CreationDate, v.CreationDate) AS Days,\n  COUNT(v.Id) AS Count,\n  COUNT(v.Id) * 100.0 \/ SUM(COUNT(v.Id)) OVER () AS Percentage\n---see: https:\/\/stackoverflow.com\/questions\/46909494\/percentage-from-total-sum-after-group-by-sql-server\nFROM Votes v INNER JOIN Posts p ON v.PostId=p.Id\nGROUP BY DATEDIFF(day, p.CreationDate, v.CreationDate)\nORDER BY DATEDIFF(day, p.CreationDate, v.CreationDate)"},{"QuerySetId":1236807,"Title":"Average score of answers per month","Description":null,"QueryBody":"SELECT LAST_DATE_OF_MONTH(p.creationdate), AVG(CAST(p.Score AS FLOAT)) FROM Posts AS p WHERE (p.PostTypeId = 2) AND (p.CreationDate >= '##Date1?2010-01-01##') AND (p.CreationDate <= '##Date2?2021-01-01##') GROUP BY LAST_DATE_OF_MONTH(p.creationdate) ORDER BY LAST_DATE_OF_MONTH(p.creationdate)","CreationDate":"2020-05-10 01:01:01","validated":false,"QueryBody_Original":"SELECT \n  eomonth(p.creationdate),\n  AVG(CAST(p.Score AS decimal))\nFROM Posts p\nWHERE (p.PostTypeId=2)\n  AND (p.CreationDate >= '##Date1?2010-01-01##') AND (p.CreationDate <= '##Date2?2021-01-01##')\nGROUP BY eomonth(p.creationdate)\nORDER BY eomonth(p.creationdate)"},{"QuerySetId":1236865,"Title":"List of top-level tags ordered by counts","Description":null,"QueryBody":"SELECT * FROM Tags WHERE ((Tagname = 'ag.algebraic-geometry') OR (Tagname = 'nt.number-theory')) ORDER BY Count DESC","CreationDate":"2020-05-10 15:21:06","validated":false,"QueryBody_Original":"SELECT  * FROM Tags\nWHERE ((Tagname='ag.algebraic-geometry') OR\n(Tagname='nt.number-theory'))\nORDER BY Count DESC"},{"QuerySetId":1237080,"Title":"select count(u.Id) as \"total users\", sum(u.UpVotes) as \"total upvotes\", sum(u.DownVotes) as \"total d","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"total users\", SUM(u.UpVotes) AS \"total upvotes\", SUM(u.DownVotes) AS \"total downvotes\" FROM Users AS u","CreationDate":"2020-05-11 12:41:23","validated":false,"QueryBody_Original":"SELECT  count(u.Id) as \"total users\", sum(u.UpVotes) as \"total upvotes\", sum(u.DownVotes) as \"total downvotes\" FROM Users u"},{"QuerySetId":1237404,"Title":"Q & A counts by month","Description":null,"QueryBody":"SELECT TIME_TO_STR(creationdate, '%Y-%m-01') AS dt, COUNT(id) AS q, SUM(answercount) AS a FROM posts WHERE posttypeid = 1 GROUP BY TIME_TO_STR(creationdate, '%Y-%m-01') ORDER BY dt","CreationDate":"2020-05-12 03:33:15","validated":false,"QueryBody_Original":"SELECT  format(creationdate,'yyyy-MM-01') as dt, count(id) as q, sum(answercount) as a\nfrom posts\nwhere posttypeid=1\ngroup by format(creationdate,'yyyy-MM-01')\norder by dt"},{"QuerySetId":1237471,"Title":"Selects answers with score 0 from users with <50 score. (Helps to find answers to upvote :) )","Description":null,"QueryBody":"SELECT Posts.Body, Posts.Id, Posts.ParentID, Users.DisplayName, Users.Id, Users.Reputation FROM Posts INNER JOIN Users ON Users.Id = Posts.ownerUserID WHERE Posts.PostTypeId = 2 AND Posts.Score = 0 AND Users.Reputation < 50 ORDER BY Posts.CreationDate DESC","CreationDate":"2020-05-12 10:33:39","validated":false,"QueryBody_Original":"SELECT \n  Posts.Body,\n  Posts.Id,\n  Posts.ParentID,\n  Users.DisplayName,\n  Users.Id,\n  Users.Reputation\nFROM Posts INNER JOIN Users\nON Users.Id = Posts.ownerUserID\nWHERE\n  Posts.PostTypeId = 2\n  AND Posts.Score = 0\n  AND Users.Reputation < 50\nORDER BY Posts.CreationDate DESC;"},{"QuerySetId":1237478,"Title":"Stackoverflow top users from kerala","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%italy%' OR UPPER(Location) LIKE '%italy%' AND Reputation >= 200 ORDER BY Reputation DESC","CreationDate":"2020-05-31 17:09:43","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%italy%'\n    OR UPPER(Location) LIKE '%italy%'\n    AND Reputation >= 200\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1237604,"Title":"Find questions containing the given two tags","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Tags, q.CreationDate, q.ViewCount, q.Score, q.AnswerCount, q.OwnerUserId AS \"User Link\", q.OwnerDisplayName FROM Posts AS q WHERE (q.Tags LIKE '%<##tag1?abstract-algebra##>%') AND q.CreationDate >= '2020-02-01' AND q.CreationDate < '2020-04-30' ORDER BY q.CreationDate DESC","CreationDate":"2020-05-12 17:52:11","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.Tags, q.CreationDate,\n  q.ViewCount, q.Score, q.AnswerCount,\n  q.OwnerUserId AS [User Link], q.OwnerDisplayName\nFROM Posts q \nWHERE (q.Tags LIKE '%<##tag1?abstract-algebra##>%')\nand q.CreationDate >= '2020-02-01'\nand q.CreationDate < '2020-04-30'\nORDER BY q.CreationDate DESC\n---simply using \"q.Tags LIKE '%<##Tagname##%>%'\" leads to some false positives\n---for example, searching for geometry gives also the questions tagged geometry-of-numbers"},{"QuerySetId":1237939,"Title":"Estimated average question score as visitors can see","Description":"Here we assume that question views are equally distributed than the ups.","QueryBody":"SELECT AVG(0.5 * ViewCount \/ Score) AS Average FROM Posts WHERE PostTypeId = 1 AND Score > 0","CreationDate":"2020-05-15 13:28:49","validated":false,"QueryBody_Original":"SELECT  AVG(0.5 * ViewCount \/ Score) AS Average\nFROM Posts\nWHERE\n  PostTypeId = 1\n  AND\n  Score > 0"},{"QuerySetId":1238322,"Title":"Total rep gained on the site for posts not older than 30 days, by month","Description":null,"QueryBody":"SELECT DATEFROMPARTS(YEAR(Votes.CreationDate), MONTH(Votes.CreationDate), 1) AS Month, SUM(CASE WHEN Votes.VoteTypeId = 1 THEN 15 WHEN Votes.VoteTypeId = 2 THEN 10 ELSE -2 END) AS Rep FROM Posts, Votes WHERE Votes.PostId = Posts.Id AND DATEDIFF(Votes.CreationDate, Posts.CreationDate) BETWEEN 0 AND 30 AND Votes.VoteTypeId <= 3 GROUP BY DATEFROMPARTS(YEAR(Votes.CreationDate), MONTH(Votes.CreationDate), 1) ORDER BY Month DESC","CreationDate":"2020-05-14 15:23:29","validated":false,"QueryBody_Original":"SELECT \n  DATEFROMPARTS(YEAR(Votes.CreationDate), MONTH(Votes.CreationDate), 1)\n    AS Month,\n  SUM(\n    CASE\n      WHEN Votes.VoteTypeId = 1 THEN 15\n      WHEN Votes.VoteTypeId = 2 THEN 10\n      ELSE -2\n    END) AS Rep\nFROM Posts, Votes\nWHERE\n  Votes.PostId = Posts.Id\n  AND\n  DATEDIFF(day, Posts.CreationDate, Votes.CreationDate) BETWEEN 0 AND 30\n  AND\n  Votes.VoteTypeId <= 3\nGROUP BY\n  DATEFROMPARTS(YEAR(Votes.CreationDate), MONTH(Votes.CreationDate), 1)\nORDER BY Month DESC;"},{"QuerySetId":1238551,"Title":"Suspended users of the site, ordered by estimated reputation, with hidden accounts","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", COUNT(*) * 10 AS \"Estimated rep\", 'https:\/\/stackexchange.com\/users\/' + CAST(MIN(Users.AccountId) AS TEXT) + '|' + MIN(Users.DisplayName) AS \"Network profile\", 'https:\/\/data.stackexchange.com\/meta.stackexchange\/query\/1089480?' + 'NetworkAccountId=' + CAST(MIN(Users.AccountId) AS TEXT) + '|' + MIN(Users.DisplayName) AS \"With hidden accounts\" FROM Users, Posts, Votes WHERE Users.Reputation = 1 AND Users.DownVotes > 0 AND Posts.OwnerUserId = Users.Id AND Votes.PostId = Posts.Id AND Votes.VoteTypeId = 2 GROUP BY Users.Id ORDER BY \"Estimated rep\" DESC, Users.Id","CreationDate":"2020-05-15 13:17:44","validated":false,"QueryBody_Original":"SELECT \n  Users.Id AS [User Link],\n  COUNT(*) * 10 AS [Estimated rep],\n  'https:\/\/stackexchange.com\/users\/'\n    + CAST(MIN(Users.AccountId) AS VARCHAR(MAX)) + '|'\n    + MIN(Users.DisplayName) AS [Network profile],\n  'https:\/\/data.stackexchange.com\/meta.stackexchange\/query\/1089480?' +\n    + 'NetworkAccountId=' + CAST(MIN(Users.AccountId) AS VARCHAR(MAX))\n    + '|' + MIN(Users.DisplayName) AS [With hidden accounts]\nFROM Users, Posts, Votes\nWHERE\n  Users.Reputation = 1\n  AND\n  Users.DownVotes > 0\n  AND\n  Posts.OwnerUserId = Users.Id\n  AND\n  Votes.PostId = Posts.Id\n  AND\n  Votes.VoteTypeId = 2\nGROUP BY Users.Id\nORDER BY [Estimated rep] DESC, Users.Id"},{"QuerySetId":1239437,"Title":"search deleted questions in terms of their tagname\/title","Description":null,"QueryBody":"SELECT Id, url = 'site:\/\/q\/' + CAST(Id AS TEXT), CreationDate, DeletionDate, Score, Tags FROM Posts WHERE (PostTypeId = 1) AND (Tags LIKE '%<##Tagname##>%' OR Title LIKE '%<##Title##>%') AND (NOT Deletiondate IS NULL) ORDER BY DeletionDate DESC LIMIT 100","CreationDate":"2020-05-17 07:46:18","validated":false,"QueryBody_Original":"SELECT  TOP 100\n Id,  url = 'site:\/\/q\/' + CAST(Id AS varchar),\n  CreationDate, DeletionDate, Score, Tags\nFROM Posts\nWHERE (PostTypeId = 1) AND (Tags LIKE '%<##Tagname##>%' or Title LIKE '%<##Title##>%') \n  AND (Deletiondate IS NOT NULL)\nORDER BY DeletionDate DESC"},{"QuerySetId":1239980,"Title":"select count(*) from posts ","Description":null,"QueryBody":"SELECT COUNT(*) FROM users","CreationDate":"2020-05-18 18:48:09","validated":false,"QueryBody_Original":"SELECT  count(*) from users"},{"QuerySetId":1240028,"Title":"select question and its answers","Description":null,"QueryBody":"SELECT Id, ParentId, PostTypeId, AnswerCount, AcceptedAnswerId, Title, Body, Tags, Score FROM Posts WHERE (Id IN (SELECT qs.Id FROM posts AS qs WHERE (qs.tags LIKE '%<machine-learning>%') AND qs.PostTypeId = 1)) OR (ParentId IN (SELECT qs.Id FROM posts AS qs WHERE (qs.tags LIKE '%<machine-learning>%') AND qs.PostTypeId = 1)) ORDER BY Id, ParentId","CreationDate":"2020-05-18 21:39:22","validated":false,"QueryBody_Original":"SELECT \n\n  Id, ParentId, PostTypeId, AnswerCount, AcceptedAnswerId, Title, Body, Tags, Score\n\nFROM Posts \nWHERE (Id IN (SELECT qs.Id from posts qs \n              where (qs.tags like '%<machine-learning>%') \n              and qs.PostTypeId = 1))\n   OR (ParentId IN (SELECT qs.Id from posts qs \n              where (qs.tags like '%<machine-learning>%') \n              and qs.PostTypeId = 1))\nORDER BY Id ASC, ParentId ASC"},{"QuerySetId":1240444,"Title":"SELECT Id, PostTypeId FROM Posts;","Description":null,"QueryBody":"SELECT Id, PostTypeId FROM Posts","CreationDate":"2020-05-19 14:55:25","validated":false,"QueryBody_Original":"SELECT  Id, PostTypeId FROM Posts;"},{"QuerySetId":1240571,"Title":"O query, share with me your knowledge, for I have the need to know","Description":null,"QueryBody":"SELECT * FROM Posts INNER JOIN Users ON Users.id = Posts.OwnerUserId AND Users.CreationDate = Users.LastAccessDate WHERE NOT Tags LIKE '%music%' AND ClosedDate IS NULL","CreationDate":"2020-05-19 23:42:11","validated":false,"QueryBody_Original":"SELECT  * FROM Posts INNER JOIN Users ON Users.id = Posts.OwnerUserId AND Users.CreationDate = Users.LastAccessDate WHERE Tags not like '%music%' AND ClosedDate is null"},{"QuerySetId":1241104,"Title":"Top users with no gold badges","Description":null,"QueryBody":"SELECT u.displayname, u.reputation FROM users AS u LEFT OUTER JOIN badges AS b ON b.userid = u.id AND b.name IN ('Famous Question', 'Great Question') GROUP BY u.displayname, u.reputation, b.name HAVING u.reputation < 100000 ORDER BY u.reputation DESC","CreationDate":"2020-07-10 16:10:51","validated":false,"QueryBody_Original":"SELECT  u.displayname, u.reputation FROM users u\n  LEFT OUTER JOIN badges b \n  ON b.userid = u.id\n  AND b.name IN ('Famous Question','Great Question')\n  GROUP BY u.displayname, u.reputation, b.name\n  HAVING u.reputation < 100000\n  ORDER BY u.reputation DESC"},{"QuerySetId":1241412,"Title":"Most commonly awarded gold tag badges","Description":null,"QueryBody":"SELECT Name AS \"Badge name\", COUNT(UserId) AS \"Number of times awarded\" FROM Badges AS b WHERE b.TagBased = 1 AND b.class = 1 GROUP BY Name ORDER BY \"Number of times awarded\" DESC LIMIT 200","CreationDate":"2020-05-22 00:05:43","validated":false,"QueryBody_Original":"SELECT  TOP 200 Name AS \"Badge name\", Count(UserId) as \"Number of times awarded\"\nFROM Badges b\nWHERE b.TagBased=1 and b.class=1\nGROUP BY Name\nORDER BY \"Number of times awarded\" DESC"},{"QuerySetId":1241593,"Title":"Average reputation of users depending on age","Description":null,"QueryBody":"SELECT DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), u.CreationDate) AS Months, AVG(CAST(u.Reputation AS FLOAT)) FROM Users AS u GROUP BY DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), u.CreationDate) ORDER BY DATEDIFF(CAST(CURRENT_TIMESTAMP() AS DATE), u.CreationDate)","CreationDate":"2020-05-22 08:27:27","validated":false,"QueryBody_Original":"SELECT \n  DATEDIFF(month, u.CreationDate, CAST(GETDATE() AS Date)) AS Months,\n  AVG(CAST(u.Reputation AS decimal))\nFROM Users u  \nGROUP BY DATEDIFF(month, u.CreationDate, CAST(GETDATE() AS Date)) \nORDER BY DATEDIFF(month, u.CreationDate, CAST(GETDATE() AS Date)) \n---month between CreationDate and today"},{"QuerySetId":1242297,"Title":"Accepted answers having question and answer score <0","Description":null,"QueryBody":"SELECT q.Id, q.CreationDate, q.Tags, q.Title, q.Body, a.Body, q.Score, a.Score FROM Posts AS q LEFT JOIN Posts AS a ON a.Id = q.AcceptedAnswerId AND a.PostTypeId = 2 WHERE q.PostTypeId = 1 AND a.Score > -0 AND q.Tags LIKE '%<numpy>%' AND NOT a.Body IS NULL AND NOT q.Body IS NULL AND q.CreationDate > '2015-01-01' ORDER BY q.CreationDate","CreationDate":"2020-11-25 20:58:49","validated":false,"QueryBody_Original":"SELECT  q.Id,\nq.CreationDate,\nq.Tags,\nq.Title,\nq.Body,\na.Body,\nq.Score, \na.Score\nFROM Posts q\nLEFT JOIN Posts a ON a.Id=q.AcceptedAnswerId AND a.PostTypeId=2\nWHERE q.PostTypeId = 1\nAND a.Score>-0\nAND q.Tags LIKE '%<numpy>%'\nAND a.Body IS NOT NULL\nAND q.Body IS NOT NULL\nAND q.CreationDate > '2015-01-01'\nORDER BY q.CreationDate ASC"},{"QuerySetId":1242625,"Title":"Total length of posts by user","Description":null,"QueryBody":"SELECT SUM(LENGTH(p.Body)) AS TotalLength, u.DisplayName AS UserName FROM Posts AS p INNER JOIN Users AS u ON p.OwnerUserId = u.Id GROUP BY u.DisplayName ORDER BY TotalLength DESC LIMIT 100","CreationDate":"2020-05-24 21:57:58","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  SUM(LEN(p.Body)) AS TotalLength,\n  u.DisplayName AS UserName\nFROM Posts p\nINNER JOIN Users u ON p.OwnerUserId = u.Id\nGROUP BY u.DisplayName\nORDER BY TotalLength DESC;"},{"QuerySetId":1243187,"Title":"Reputation and average length of questions & answers by user","Description":null,"QueryBody":"SELECT MAX(u.Reputation), AVG(LENGTH(p.Body)) FROM Users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id AND (p.PostTypeId = 1 OR p.PostTypeId = 2) GROUP BY u.Id","CreationDate":"2020-05-25 22:34:12","validated":false,"QueryBody_Original":"SELECT  MAX(u.Reputation), AVG(LEN(p.Body))\nFROM Users as u\nINNER JOIN Posts as p ON p.OwnerUserId = u.Id AND (p.PostTypeId = 1 OR p.PostTypeId = 2)\nGROUP BY u.Id"},{"QuerySetId":1243606,"Title":"stack exchange big with accepted answers","Description":null,"QueryBody":"SELECT COUNT(1) FROM (SELECT Id, AcceptedAnswerId FROM Posts WHERE AcceptedAnswerId > 0 AND ViewCount > 1000) AS Posts JOIN Posts AS Answers ON Posts.AcceptedAnswerId = Answers.id","CreationDate":"2020-05-26 21:21:05","validated":false,"QueryBody_Original":"SELECT  count(1) from\n(SELECT Id, AcceptedAnswerId  from Posts where AcceptedAnswerId > 0 and ViewCount > 1000) as Posts\njoin Posts as Answers\non Posts.AcceptedAnswerId = Answers.id"},{"QuerySetId":1243860,"Title":"questions closed by mods vs community (all time)","Description":null,"QueryBody":"SELECT userid, userid AS \"User Link\", COUNT(postid) FROM posthistory WHERE posthistorytypeid = 10 GROUP BY userid","CreationDate":"2020-05-29 00:15:35","validated":false,"QueryBody_Original":"SELECT  userid,userid as [User Link], count(postid)\nfrom posthistory\nwhere\nposthistorytypeid = 10\ngroup by userid"},{"QuerySetId":1245490,"Title":"Likely link-only tool recs\/video tutorials","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body, LENGTH(body) AS Length FROM posts WHERE PostTypeId = 2 AND 1 IN (CASE (SELECT ClosedDate FROM posts WHERE PostTypeId = 1 AND ClosedDate = '' AND Id = ParentId LIMIT 1) WHEN NULL THEN 0 ELSE 1 END) AND LENGTH(body) <= 500 AND NOT LOWER(body) LIKE '%<code>%' AND (LOWER(body) LIKE '%github.com%' OR LOWER(body) LIKE '%npmjs.org%' OR LOWER(body) LIKE '%pypi.org' OR LOWER(body) LIKE '%youtu.be%' OR LOWER(body) LIKE '%youtube.com%') LIMIT 1000","CreationDate":"2020-05-31 20:51:02","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  Id AS [Post Link], Body, len(body) AS Length\nFROM posts\nWHERE PostTypeId = 2\nAND 1 in (CASE (\n            SELECT TOP 1 ClosedDate \n              FROM posts \n              WHERE PostTypeId = 1 \n              AND ClosedDate = '' \n              AND Id = ParentId\n            ) WHEN NULL THEN 0 \n                ELSE 1 \n          END)\nAND LEN(body) <= 500\nAND lower(body) NOT LIKE '%<code>%' \nAND (lower(body) LIKE '%github.com%' \n        OR lower(body) LIKE '%npmjs.org%' \n        OR lower(body) LIKE '%pypi.org'\n        OR lower(body) LIKE '%youtu.be%'\n        OR lower(body) LIKE '%youtube.com%')"},{"QuerySetId":1245658,"Title":" Top France SO Users","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%france%' OR UPPER(Location) LIKE '%FRANCE%' OR Location LIKE '%France%' AND Reputation >= 1000 ORDER BY Reputation DESC","CreationDate":"2020-06-30 01:57:46","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%france%'\n    OR UPPER(Location) LIKE '%FRANCE%'\n    or Location like '%France%'\n    AND Reputation >= 1000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1245914,"Title":"Questions and Answers per week","Description":"Plot the site activity by voting, questions, answers and comments, aggregated per week.","QueryBody":"SELECT dd.id AS id, dd.body AS body, dd.date AS date FROM (SELECT p.id AS id, p.parentid AS parentid, c.text AS body, c.creationdate AS date FROM (SELECT id, parentid FROM posts WHERE tags LIKE '%iquibase%' OR tags LIKE '%iquidbase%') AS p JOIN comments AS c ON p.id = c.postid) AS dd","CreationDate":"2020-08-05 21:09:14","validated":false,"QueryBody_Original":"SELECT  dd.id as id , dd.body as body, dd.date as date from(SELECT p.id as id , p.parentid as parentid, c.text as body, c.creationdate as date\nfrom (SELECT id , parentid \nfrom posts \nwhere tags like '%iquibase%' or tags like '%iquidbase%' ) \np join comments c on p.id = c.postid) dd"},{"QuerySetId":1246065,"Title":"Bare links to SE\/SO questions","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\", p.body, LENGTH(p.body) AS length FROM posts AS p WHERE p.closeddate IS NULL AND (p.body LIKE '%:\/\/stackoverflow.com%' OR p.body LIKE '%:\/\/stackexchange.com%' OR p.body LIKE '%:\/\/superuser.com%' OR p.body LIKE '%:\/\/serverfault.com%' OR p.body LIKE '%:\/\/askubuntu.com%') AND NOT p.body LIKE '%<code>%' AND p.posttypeid = 2 \/* answer *\/ AND LENGTH(p.body) <= 200 \/* answer <200 chars *\/ LIMIT 700","CreationDate":"2020-06-01 23:49:40","validated":false,"QueryBody_Original":"SELECT  TOP 700 p.id AS [Post Link], p.body, len(p.body) AS length\nFROM posts p\nWHERE p.closeddate IS NULL\n  AND (p.body LIKE '%:\/\/stackoverflow.com%' OR\n       p.body LIKE '%:\/\/stackexchange.com%' OR\n       p.body LIKE '%:\/\/superuser.com%' OR\n       p.body LIKE '%:\/\/serverfault.com%' OR\n       p.body LIKE '%:\/\/askubuntu.com%')\n  AND  p.body NOT LIKE '%<code>%'\n  AND  p.posttypeid = 2 --answer\n  AND  len(p.body) <= 200 --answer <200 chars"},{"QuerySetId":1246909,"Title":"Attempt to find broken code fences -- don't laugh","Description":null,"QueryBody":"SELECT p.id AS \"Post Link\" FROM posts AS p INNER JOIN PostHistory AS ph ON ph.PostId = p.Id WHERE (ph.text LIKE '%```[a-z]%') OR (ph.text LIKE '%```[0-9]%') OR (ph.text LIKE '%```[!~@#$%^&*()-_+=[{}\\|]%') AND NOT (ph.text LIKE '%```bash')","CreationDate":"2020-06-03 22:51:39","validated":false,"QueryBody_Original":"SELECT  p.id as [Post Link]\n\nfrom posts p\ninner join PostHistory ph\non ph.PostId = p.Id\nwhere (ph.text like '%```[a-z]%') or\n\n(ph.text like '%```[0-9]%') or\n\n\n(ph.text like '%```[!~@#$%^&*()-_+=[{}\\|]%')\n\nand not (ph.text like '%```bash')"},{"QuerySetId":1247071,"Title":"Search Comment Text Including Deleted Comments","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", CreationDate, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%##CommentText##%') AND UserId = '##UserId##' ORDER BY CreationDate DESC","CreationDate":"2020-06-04 12:53:56","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], CreationDate, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('%##CommentText##%')\n   AND UserId = '##UserId##'\n ORDER BY CreationDate DESC"},{"QuerySetId":1247242,"Title":"Select all the posts with tag java","Description":null,"QueryBody":"SELECT Id, Title, Body FROM Posts AS P WHERE PostTypeId = 1 AND Tags LIKE '%three.js%' AND YEAR(P.CreationDate) BETWEEN 2015 AND 2019","CreationDate":"2020-06-11 06:58:11","validated":false,"QueryBody_Original":"SELECT  Id, Title, Body\nfrom Posts P\nwhere PostTypeId=1\nAND Tags like '%three.js%' and \n\nyear(P.CreationDate) between 2015 and 2019"},{"QuerySetId":1247438,"Title":"AWS Questions: Time until Answer that was accepted","Description":null,"QueryBody":"SELECT Question.id AS \"Post Link\", CAST(Answer.creationdate - Question.creationdate AS FLOAT) AS Days, Question.creationdate, Answer.creationdate FROM Posts AS Question JOIN Posts AS Answer ON Answer.Id = Question.AcceptedAnswerId WHERE Question.PostTypeId = 1 \/* Question *\/ AND Question.ClosedDate IS NULL \/* Exclude Closed questions *\/ AND (Question.Tags LIKE '%<amazon-%' OR Question.Tags LIKE '%<aws-%') AND Question.CreationDate >= '2020-01-01' AND Question.creationdate <> Answer.creationdate \/* Many are the same! *\/ AND Question.OwnerUserId <> Answer.OwnerUserId AND Answer.OwnerUserId <> 1144035 ORDER BY Days LIMIT 50","CreationDate":"2020-06-05 09:58:36","validated":false,"QueryBody_Original":"SELECT  TOP 50\n  Question.id as [Post Link],\n  CAST(Answer.creationdate - Question.creationdate AS FLOAT) as Days,\n  Question.creationdate,\n  Answer.creationdate\n\nFROM Posts as Question\nJOIN Posts as Answer ON Answer.Id = Question.AcceptedAnswerId\n\nWHERE Question.PostTypeId = 1 -- Question\n  AND Question.ClosedDate IS NULL -- Exclude Closed questions\n  AND (Question.Tags LIKE '%<amazon-%' OR Question.Tags LIKE '%<aws-%')\n  AND Question.CreationDate >= '2020-01-01'\n  AND Question.creationdate <> Answer.creationdate -- Many are the same!\n  AND Question.OwnerUserId <> Answer.OwnerUserId\n  AND Answer.OwnerUserId <> 1144035\n  \nORDER BY Days ASC"},{"QuerySetId":1247502,"Title":"select concat(count(*) ,'      ',(select count(*) from users),'      ', (select convert(numeric(20),","Description":null,"QueryBody":"SELECT CONCAT(COUNT(*), '      ', (SELECT COUNT(*) FROM users), '      ', (SELECT CAST(COUNT(*) AS FLOAT(20)) FROM comments) * (SELECT CAST(COUNT(*) AS FLOAT(20)) FROM posts)) FROM posts","CreationDate":"2020-06-05 12:17:59","validated":false,"QueryBody_Original":"SELECT  concat(count(*) ,'      ',(SELECT count(*) from users),'      ',\n(SELECT convert(numeric(20),count(*)) from comments) * (SELECT convert(numeric(20),count(*)) from posts))from posts"},{"QuerySetId":1248281,"Title":"Get all tags for cooking","Description":null,"QueryBody":"SELECT TagName, \"Count\" FROM Tags WHERE \"Count\" > 10 ORDER BY Count DESC","CreationDate":"2020-06-07 11:01:59","validated":false,"QueryBody_Original":"SELECT  TagName, [Count]\nFrom Tags\nWhere [Count]>10\nOrder By Count Desc;\n\nSELECT TagName, [Count]\nFrom Tags\nWhere [Count]<=10\nOrder By Count Desc;"},{"QuerySetId":1248638,"Title":"Hit and run with tags","Description":null,"QueryBody":"SELECT U.ID AS \"User Link\", P.Id AS \"Post Link\", P.CreationDate, P.Score, P.ViewCount, P.CommentCount, P.tags FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId WHERE CAST(TIME_TO_STR(u.LastAccessDate, '%Y\/%m\/%d') AS TEXT(10)) = CAST(TIME_TO_STR(p.CreationDate, '%Y\/%m\/%d') AS TEXT(10)) AND p.PostTypeId = 1 AND p.AnswerCount = 0 AND p.ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) > 365 AND p.ViewCount < 1000 AND p.Score < 3 AND p.Tags LIKE '%<##Tag##>%' ORDER BY p.CreationDate","CreationDate":"2020-06-17 18:47:55","validated":false,"QueryBody_Original":"SELECT  U.ID as [User Link], \n  P.Id As [Post Link], \n  P.CreationDate, \n  P.Score, \n  P.ViewCount,\n  P.CommentCount,\n  P.tags\nFROM Users As u\nINNER JOIN Posts As p\nON u.Id = p.OwnerUserId\nWHERE CONVERT(VARCHAR(10),u.LastAccessDate,111) = CONVERT(VARCHAR(10),p.CreationDate,111)\nAND p.PostTypeId = 1\nAND p.AnswerCount = 0\nAND p.ClosedDate is Null\nAND DATEDIFF(DD, p.CreationDate, GETDATE()) > 365\nAND p.ViewCount < 1000\nAND p.Score < 3\nAND p.Tags like '%<##Tag##>%'\nORDER BY p.CreationDate"},{"QuerySetId":1249028,"Title":"Posts deleted on a particular Date","Description":"To search for Posts deleted on some particular Date, enter the DeletionDate in YYYY\/MM\/DD format","QueryBody":"SELECT U.ID AS \"User Link\", P.Id AS \"Post Link\", P.CreationDate, P.Score, P.ViewCount, P.CommentCount FROM Users AS u INNER JOIN Posts AS p ON u.Id = p.OwnerUserId\/* AND day(u.LastAccessDate)=day(p.CreationDate) *\/ \/* CONVERT(VARCHAR(10),u.LastAccessDate,111) = CONVERT(VARCHAR(10),p.CreationDate,111) *\/  WHERE MONTH(u.LastAccessDate) = MONTH(p.CreationDate) AND YEAR(u.LastAccessDate) = YEAR(p.CreationDate) AND p.PostTypeId = 1 AND p.AnswerCount = 0 AND p.ClosedDate IS NULL AND DATEDIFF(CURRENT_TIMESTAMP(), p.CreationDate) > 365 AND p.ViewCount < 1000 AND p.Score < 3 ORDER BY p.CreationDate","CreationDate":"2020-06-09 19:07:01","validated":false,"QueryBody_Original":"SELECT  U.ID as [User Link], \n  P.Id As [Post Link], \n  P.CreationDate, \n  P.Score, \n  P.ViewCount,\n  P.CommentCount\nFROM Users As u\nINNER JOIN Posts As p\nON u.Id = p.OwnerUserId\nWHERE month(u.LastAccessDate)=month(p.CreationDate)\nAND year(u.LastAccessDate)=year(p.CreationDate)\n--AND day(u.LastAccessDate)=day(p.CreationDate)\n--CONVERT(VARCHAR(10),u.LastAccessDate,111) = CONVERT(VARCHAR(10),p.CreationDate,111)\nAND p.PostTypeId = 1\nAND p.AnswerCount = 0\nAND p.ClosedDate is Null\nAND DATEDIFF(DD, p.CreationDate, GETDATE()) > 365\nAND p.ViewCount < 1000\nAND p.Score < 3\nORDER BY p.CreationDate"},{"QuerySetId":1249248,"Title":"Number of R Language Posts this year","Description":null,"QueryBody":"SELECT id FROM Posts","CreationDate":"2020-06-10 08:54:46","validated":false,"QueryBody_Original":"SELECT  id from Posts"},{"QuerySetId":1249992,"Title":"Get users by biography keywords","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", AboutMe AS \"Bio\" FROM Users WHERE LOWER(AboutMe) LIKE LOWER('%##keyword##%')","CreationDate":"2020-06-11 11:26:57","validated":false,"QueryBody_Original":"SELECT \nROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \nId as [User Link],\nAboutMe as [Bio]\nFROM Users\nWHERE LOWER(AboutMe) LIKE LOWER('%##keyword##%');"},{"QuerySetId":1250116,"Title":"SELECT u.DisplayName FROM users u WHERE exists(SELECT * FROM posts WHERE OwnerUserId = u.id AND Tags","Description":null,"QueryBody":"SELECT u.DisplayName FROM users AS u WHERE EXISTS(SELECT * FROM posts WHERE OwnerUserId = u.id AND Tags LIKE '%[sql|java]%') AND Reputation > 100","CreationDate":"2020-06-11 14:13:16","validated":false,"QueryBody_Original":"SELECT  u.DisplayName FROM users u WHERE exists(SELECT * FROM posts WHERE OwnerUserId = u.id AND Tags LIKE '%[sql|java]%') AND Reputation > 100"},{"QuerySetId":1250470,"Title":"[points]+ rep users posted a [reaction] received answer during [last N months]","Description":null,"QueryBody":"SELECT CAST(Posts.CreationDate AS DATE) AS PostDate, COUNT(DISTINCT Users.Id) AS UserCount FROM Users LEFT JOIN Posts ON Users.Id = Posts.OwnerUserId WHERE Users.Reputation >= 1e4 AND Users.LastAccessDate >= DATEADD(year, -1, GETDATE()) AND Posts.CreationDate >= DATEADD(year, -1, GETDATE()) AND Posts.PostTypeId = 2 AND Posts.Score >= 0 GROUP BY CAST(Posts.CreationDate AS DATE) ORDER BY PostDate","CreationDate":"2020-06-12 00:35:41","validated":false,"QueryBody_Original":"SELECT \n  CAST(Posts.CreationDate as DATE) as PostDate, \n  COUNT(DISTINCT Users.Id) as UserCount\nFROM\n  Users left join Posts on Users.Id = Posts.OwnerUserId\nWHERE\n    Users.Reputation >= 1e4\n    AND\n    Users.LastAccessDate >= DATEADD(year, -1, GETDATE())\n    AND\n    Posts.CreationDate >= DATEADD(year, -1, GETDATE())\n    AND\n    Posts.PostTypeId = 2\n    AND\n    Posts.Score >= 0\nGROUP BY\n  CAST(Posts.CreationDate as DATE)\nORDER BY\n  PostDate"},{"QuerySetId":1250785,"Title":"Instances where RelatedPostId is an answer","Description":null,"QueryBody":"SELECT pl.RelatedPostId AS \"Post Link\", p.CreationDate FROM PostLinks AS pl INNER JOIN Posts AS p ON pl.RelatedPostId = p.Id WHERE (NOT p.ParentId IS NULL) ORDER BY p.Id DESC","CreationDate":"2020-06-12 17:50:06","validated":false,"QueryBody_Original":"SELECT  \n  pl.RelatedPostId AS [Post Link],\n  p.CreationDate\nFROM PostLinks pl INNER JOIN Posts p ON pl.RelatedPostId=p.Id\nWHERE (p.ParentId IS NOT NULL)\nORDER BY p.Id DESC"},{"QuerySetId":1250992,"Title":"List of Posts by Tags and Accepted Answers","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", COALESCE(FavoriteCount, 0) AS FavoriteCount, q.Tags, q.Title AS Post_Title, q.ViewCount AS ViewCount, q.LastActivityDate AS LastActivityDate, q.Body AS QuestionBody, (SELECT a.Body FROM Posts AS a WHERE a.id = q.AcceptedAnswerId AND PostTypeId = 2) AS AnswerBody FROM Posts AS q WHERE LOWER(q.Tags) LIKE LOWER('%##tag1##%') AND q.ViewCount > 100 AND LastActivityDate > '2016-01-01 00:00:00' AND q.posttypeid = 1 AND NOT q.AcceptedAnswerId IS NULL ORDER BY q.ViewCount \/ (1 + DATEDIFF(CURRENT_TIMESTAMP(), q.LastActivityDate)) DESC LIMIT 600","CreationDate":"2020-06-13 00:36:33","validated":false,"QueryBody_Original":"SELECT  \n    TOP 600\n    q.Id AS [Post Link],\n    COALESCE(FavoriteCount, 0) as FavoriteCount,\n    q.Tags,\n    q.Title as Post_Title,\n    q.ViewCount as ViewCount,\n    q.LastActivityDate as LastActivityDate, \n    q.Body as QuestionBody,\n    (SELECT a.Body from Posts a where a.id = q.AcceptedAnswerId and PostTypeId = 2) AnswerBody\nFROM\n    Posts q\nWHERE \n LOWER(q.Tags) LIKE LOWER('%##tag1##%')  and q.ViewCount > 100 and\n LastActivityDate > '2016-01-01 00:00:00'\n    and q.posttypeid = 1 and q.AcceptedAnswerId is not null\nORDER BY q.ViewCount\/(1+DATEDIFF(week, q.LastActivityDate, GETDATE())) DESC"},{"QuerySetId":1251307,"Title":"Questions and Answers per Day","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(CreationDate, '%Y\/%m\/%d') AS TEXT(10)), SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers FROM Posts WHERE PostTypeId = 1 OR PostTypeId = 2 AND (CreationDate - CURRENT_TIMESTAMP()) < 15 GROUP BY CreationDate ORDER BY CreationDate DESC","CreationDate":"2020-07-23 18:46:48","validated":false,"QueryBody_Original":"SELECT \n    CONVERT(VARCHAR(10),CreationDate,111),\n    SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,\n    SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers\nFROM\n    Posts\nWHERE\n    PostTypeId = 1 or PostTypeId = 2 AND\n    (CreationDate - getdate()) < 15\nGROUP BY\n    CreationDate\nORDER BY\n    CreationDate Desc"},{"QuerySetId":1251314,"Title":"SELECT * FROM Posts limit 2","Description":null,"QueryBody":"SELECT * FROM Posts AS limit2","CreationDate":"2020-06-14 13:54:42","validated":false,"QueryBody_Original":"SELECT  * FROM Posts limit2"},{"QuerySetId":1252231,"Title":"Posts closed, edited by users with <3k rep and reopened","Description":null,"QueryBody":"SELECT COUNT(i.PostId) FROM PostHistory AS i INNER JOIN PostHistory AS c ON i.PostId = c.PostId AND i.PostHistoryTypeId = 1 \/* Post Title *\/ INNER JOIN PostHistory AS e ON c.PostId = e.PostId AND c.PostHistoryTypeId = 10 \/* Post Closed *\/ AND e.PostHistoryTypeId = 5 \/* Edit Body *\/ AND c.CreationDate < e.CreationDate AND i.UserId <> e.UserId INNER JOIN Users AS u ON e.UserId = u.Id AND u.Reputation < 3000 INNER JOIN PostHistory AS r ON c.PostId = r.PostId AND r.PostHistoryTypeId = 11 \/* Reopen *\/ AND e.CreationDate < r.CreationDate WHERE i.CreationDate >= DATEADD(DAY, -90, GETDATE()) GROUP BY i.PostId","CreationDate":"2020-06-17 08:29:07","validated":false,"QueryBody_Original":"SELECT  COUNT(i.PostId)\n  FROM PostHistory AS i\n  INNER JOIN PostHistory AS c\n    ON i.PostId = c.PostId\n    AND i.PostHistoryTypeId = 1 -- Post Title\n  INNER JOIN PostHistory AS e\n    ON c.PostId = e.PostId\n   AND c.PostHistoryTypeId = 10 -- Post Closed\n   AND e.PostHistoryTypeId = 5 -- Edit Body\n   AND c.CreationDate < e.CreationDate\n   AND i.UserId != e.UserId\n  INNER JOIN Users AS u\n    ON e.UserId = u.Id\n   AND u.Reputation < 3000\n  INNER JOIN PostHistory AS r\n    ON c.PostId = r.PostId\n   AND r.PostHistoryTypeId = 11 -- Reopen\n   AND e.CreationDate < r.CreationDate\n   WHERE i.CreationDate >= DATEADD(DAY, -90, GETDATE())\n  GROUP BY i.PostId"},{"QuerySetId":1252273,"Title":"Posts where last event was CW-ification and it was done by the OP","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", revisions = 'site:\/\/posts\/' + CAST(ph.PostId AS TEXT) + '\/revisions' FROM PostHistory AS ph INNER JOIN Posts AS p ON p.Id = ph.PostId\/* -turned to CW by a user other than the OP *\/ \/* -16 = CW *\/  WHERE (ph.PostHistoryTypeId = 16) AND (ph.UserId = p.OwnerUserId) AND ph.Id IN (SELECT MAX(Id) AS last FROM PostHistory GROUP BY PostId) ORDER BY ph.PostId DESC","CreationDate":"2020-06-17 05:06:36","validated":false,"QueryBody_Original":"SELECT \n ph.PostId AS [Post Link],\n revisions = 'site:\/\/posts\/' + CAST(ph.PostId AS varchar)+'\/revisions'\nFROM PostHistory ph INNER JOIN Posts p ON p.Id=ph.PostId\n WHERE (ph.PostHistoryTypeId=16)\n---16 = CW\nAND (ph.UserId=p.OwnerUserId)\n---turned to CW by a user other than the OP\nAND ph.Id IN (\n   SELECT\n     MAX(Id) as last\n    FROM PostHistory\n    GROUP BY PostId\n)\n---only look at the last event for the given post\nORDER BY ph.PostId DESC"},{"QuerySetId":1252274,"Title":"Posts where last event was CW-ification (including the OP and the user who turned the post CW)","Description":null,"QueryBody":"SELECT ph.PostId AS \"Post Link\", revisions = 'site:\/\/posts\/' + CAST(ph.PostId AS TEXT) + '\/revisions', p.OwnerUserId AS \"User Link\", ph.UserId AS \"User Link\" FROM PostHistory AS ph INNER JOIN Posts AS p ON p.Id = ph.PostId\/* -16 = CW *\/  WHERE (ph.PostHistoryTypeId = 16) AND ph.Id IN (SELECT MAX(Id) AS last FROM PostHistory GROUP BY PostId) ORDER BY ph.PostId DESC","CreationDate":"2020-06-17 05:13:26","validated":false,"QueryBody_Original":"SELECT \n ph.PostId AS [Post Link],\n revisions = 'site:\/\/posts\/' + CAST(ph.PostId AS varchar)+'\/revisions',\n p.OwnerUserId AS [User Link],\n ph.UserId AS [User Link]\nFROM PostHistory ph INNER JOIN Posts p ON p.Id=ph.PostId\n WHERE (ph.PostHistoryTypeId=16)\n---16 = CW\nAND ph.Id IN (\n   SELECT\n     MAX(Id) as last\n    FROM PostHistory\n    GROUP BY PostId\n)\n---only look at the last event for the given post\nORDER BY ph.PostId DESC"},{"QuerySetId":1252298,"Title":"Questions Closed, Edited by No User Other Than OP, and Reopened","Description":null,"QueryBody":"SELECT i.PostId AS \"Post Link\" FROM PostHistory AS i INNER JOIN PostHistory AS c ON i.PostId = c.PostId AND i.PostHistoryTypeId = 1 \/* Post Title *\/ AND c.PostHistoryTypeId = 10 \/* Post Closed *\/ INNER JOIN PostHistory AS r ON c.PostId = r.PostId AND r.PostHistoryTypeId = 11 \/* Reopen *\/ LEFT OUTER JOIN PostHistory AS e ON r.PostId = e.PostId AND e.PostHistoryTypeId = 5 \/* Edit Body *\/ AND c.CreationDate < e.CreationDate AND i.UserId <> e.UserId AND e.CreationDate < r.CreationDate AND e.CreationDate > c.CreationDate WHERE i.CreationDate >= DATEADD(DAY, -90, GETDATE()) AND e.PostId IS NULL GROUP BY i.PostId","CreationDate":"2020-06-17 07:54:22","validated":false,"QueryBody_Original":"SELECT  i.PostId AS [Post Link]\n  FROM PostHistory AS i\n  INNER JOIN PostHistory AS c\n    ON i.PostId = c.PostId\n    AND i.PostHistoryTypeId = 1 -- Post Title\n    AND c.PostHistoryTypeId = 10 -- Post Closed\n  INNER JOIN PostHistory AS r\n    ON c.PostId = r.PostId\n   AND r.PostHistoryTypeId = 11 -- Reopen\nLEFT OUTER JOIN PostHistory AS e\n    ON r.PostId = e.PostId\n   AND e.PostHistoryTypeId = 5 -- Edit Body\n   AND c.CreationDate < e.CreationDate\n   AND i.UserId != e.UserId\n   AND e.CreationDate < r.CreationDate\n   AND e.CreationDate > c.CreationDate\n   WHERE i.CreationDate >= DATEADD(DAY, -90, GETDATE())\n   AND e.PostId IS NULL\n  GROUP BY i.PostId"},{"QuerySetId":1252303,"Title":"Questions Closed, Edited by Any User and Reopened","Description":null,"QueryBody":"SELECT i.PostId AS \"Post Link\" FROM PostHistory AS i INNER JOIN PostHistory AS c ON i.PostId = c.PostId AND i.PostHistoryTypeId = 1 \/* Post Initial Title *\/ AND c.PostHistoryTypeId = 10 \/* Post Closed *\/ INNER JOIN PostHistory AS e ON c.PostId = e.PostId AND e.PostHistoryTypeId = 5 \/* Edit Body *\/ AND c.CreationDate < e.CreationDate AND i.UserId = e.UserId INNER JOIN PostHistory AS r ON c.PostId = r.PostId AND r.PostHistoryTypeId = 11 \/* Reopen *\/ AND r.CreationDate > e.CreationDate WHERE i.CreationDate >= DATEADD(DAY, -15, GETDATE()) GROUP BY i.PostId","CreationDate":"2020-06-17 23:19:52","validated":false,"QueryBody_Original":"SELECT  i.PostId AS [Post Link]\n  FROM PostHistory AS i\n  INNER JOIN PostHistory AS c\n    ON i.PostId = c.PostId\n    AND i.PostHistoryTypeId = 1 -- Post Initial Title\n    AND c.PostHistoryTypeId = 10 -- Post Closed\n  INNER JOIN PostHistory AS e\n    ON c.PostId = e.PostId\n   AND e.PostHistoryTypeId = 5 -- Edit Body\n   AND c.CreationDate < e.CreationDate\n   AND i.UserId = e.UserId\n  INNER JOIN PostHistory AS r\n    ON c.PostId = r.PostId\n   AND r.PostHistoryTypeId = 11 -- Reopen\n   AND r.CreationDate > e.CreationDate\n   WHERE i.CreationDate >= DATEADD(DAY, -15, GETDATE())\n  GROUP BY i.PostId"},{"QuerySetId":1252306,"Title":"Questions Closed, and Subsequently Edited by any User","Description":null,"QueryBody":"SELECT i.PostId AS \"Post Link\" FROM PostHistory AS i INNER JOIN PostHistory AS c ON i.PostId = c.PostId AND i.PostHistoryTypeId = 1 \/* Post Initial Title *\/ AND c.PostHistoryTypeId = 10 \/* Post Closed *\/ INNER JOIN PostHistory AS e ON c.PostId = e.PostId AND e.PostHistoryTypeId = 5 \/* Edit Body *\/ AND c.CreationDate < e.CreationDate WHERE i.CreationDate >= DATEADD(DAY, -15, GETDATE()) GROUP BY i.PostId","CreationDate":"2020-06-17 23:15:23","validated":false,"QueryBody_Original":"SELECT  i.PostId AS [Post Link]\n  FROM PostHistory AS i\n  INNER JOIN PostHistory AS c\n    ON i.PostId = c.PostId\n    AND i.PostHistoryTypeId = 1 -- Post Initial Title\n    AND c.PostHistoryTypeId = 10 -- Post Closed\n  INNER JOIN PostHistory AS e\n    ON c.PostId = e.PostId\n   AND e.PostHistoryTypeId = 5 -- Edit Body\n   AND c.CreationDate < e.CreationDate\n   WHERE i.CreationDate >= DATEADD(DAY, -15, GETDATE())\n  GROUP BY i.PostId"},{"QuerySetId":1252474,"Title":"Top stackoverflow users from Karur","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"Rank\", Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%Karur%' OR UPPER(Location) LIKE '%Karur%' OR Location LIKE '%Karur%' ORDER BY Reputation DESC","CreationDate":"2020-06-17 16:38:31","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [Rank], \n    Id AS [User Link], \n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%Karur%'\n    OR UPPER(Location) LIKE '%Karur%'\n    or Location like '%Karur%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1253345,"Title":"Comments with broken links that now redirect to an unrelated porn site","Description":null,"QueryBody":"SELECT Comments.CreationDate, Comments.Id AS \"Comment Link\" FROM comments WHERE text LIKE '%sino-5000.com%'","CreationDate":"2020-08-07 05:51:38","validated":false,"QueryBody_Original":"SELECT  \n    Comments.CreationDate,\n    Comments.Id as [Comment Link]\nfrom comments\nwhere text like '%sino-5000.com%'"},{"QuerySetId":1253378,"Title":"Comments with thank vs. their length","Description":null,"QueryBody":"SELECT LENGTH(Text), COUNT(LENGTH(Text)) FROM Comments WHERE Text LIKE '%thank%' GROUP BY LENGTH(Text) ORDER BY LENGTH(Text)","CreationDate":"2020-06-24 13:24:50","validated":false,"QueryBody_Original":"SELECT  len(Text), count(len(Text))\nfrom Comments\nwhere Text like '%thank%'\ngroup by len(Text)\norder by len(Text)"},{"QuerySetId":1253936,"Title":"SELECT TOP 10 *   FROM tags  ORDER BY Count DESC;","Description":null,"QueryBody":"SELECT * FROM tags ORDER BY Count DESC LIMIT 10","CreationDate":"2020-06-20 21:07:05","validated":false,"QueryBody_Original":"SELECT  TOP 10 *\n  FROM tags\n ORDER BY Count DESC;"},{"QuerySetId":1254512,"Title":"Meta Stack Overflow [featured] history","Description":"latest first","QueryBody":"SELECT Posts.Score, Posts.Id AS \"Post Link\", Posts.CreationDate, Posts.LastEditDate, PostHistory.CreationDate FROM PostHistory JOIN Posts ON PostHistory.PostId = Posts.Id WHERE PostHistory.PostHistoryTypeId = 6 AND PostHistory.Text LIKE '%<featured>%' GROUP BY Posts.Score, Posts.Id, Posts.CreationDate, Posts.LastEditDate, PostHistory.CreationDate ORDER BY PostHistory.CreationDate DESC","CreationDate":"2020-06-22 18:25:42","validated":false,"QueryBody_Original":"SELECT \n  Posts.Score,\n  Posts.Id AS [Post Link],\n  Posts.CreationDate,\n  Posts.LastEditDate,\n  PostHistory.CreationDate\nFROM PostHistory\nJOIN Posts ON PostHistory.PostId = Posts.Id\nWHERE PostHistory.PostHistoryTypeId = 6\n  AND PostHistory.Text LIKE '%<featured>%'\nGROUP BY Posts.Score, Posts.Id, Posts.CreationDate, Posts.LastEditDate, PostHistory.CreationDate\nORDER BY PostHistory.CreationDate DESC"},{"QuerySetId":1255017,"Title":"SFMC related questions with answers","Description":null,"QueryBody":"SELECT P.ID AS \"Post Link\", P.PostTypeId, P.Title, P.Body, P.Tags, P.AnswerCount, P.CommentCount, C.Text, C.Score, C.Id, P.CreationDate, P.Score, P.ViewCount, P.OwnerUserId, P.LastEditDate, P.LastActivityDate FROM Posts AS P INNER JOIN Comments AS C ON P.Id = C.PostId WHERE P.PostTypeId = 1 AND (P.Tags LIKE '%##tag1##%' OR P.Tags LIKE '%##tag2##%' OR P.Tags LIKE '%##tag3##%' OR P.Tags LIKE '%##tag4##%' OR P.Tags LIKE '%##tag5##%' OR P.Tags LIKE '##tag6##') ORDER BY P.CreationDate DESC","CreationDate":"2020-09-20 21:21:21","validated":false,"QueryBody_Original":"SELECT  P.ID as [Post Link],\n       P.PostTypeId,\n       P.Title,\n       P.Body,\n       P.Tags,\n       P.AnswerCount,\n       P.CommentCount,\n       C.Text,\n       C.Score,\n       C.Id,\n       P.CreationDate,\n       P.Score,\n       P.ViewCount,\n       P.OwnerUserId,\n       P.LastEditDate,      \n       P.LastActivityDate\n       \nFROM Posts as P\n  INNER JOIN Comments as C\n     ON P.Id = C.PostId\n\nWHERE  P.PostTypeId = 1\n    AND (P.Tags LIKE '%##tag1##%'\n      OR P.Tags LIKE '%##tag2##%'     \n      OR P.Tags LIKE '%##tag3##%'\n      OR P.Tags LIKE '%##tag4##%'\n      OR P.Tags LIKE '%##tag5##%'\n      OR P.Tags LIKE '##tag6##')\nORDER BY P.CreationDate DESC"},{"QuerySetId":1255047,"Title":"Created, closed, reopened, answered, accepted - over the years","Description":null,"QueryBody":"SELECT * FROM Posts AS Q, PostHistory AS C, PostHistory AS R, Posts AS A, Votes WHERE C.PostId = R.PostId AND C.PostHistoryTypeId = 10 AND R.PostHistoryTypeId = 11 AND Q.Id = C.PostId AND A.Id = Q.AcceptedAnswerId AND Votes.VoteTypeId = 1 AND Votes.PostId = A.Id AND A.CreationDate > R.CreationDate LIMIT 100","CreationDate":"2020-06-24 02:58:37","validated":false,"QueryBody_Original":"SELECT  TOP 100 *\nFROM Posts Q, PostHistory C, PostHistory R, Posts A, Votes\nWHERE\n  C.PostId = R.PostId\n  AND\n  C.PostHistoryTypeId = 10\n  AND\n  R.PostHistoryTypeId = 11\n  AND\n  Q.Id = C.PostId\n  AND\n  A.Id = Q.AcceptedAnswerId\n  AND\n  Votes.VoteTypeId = 1\n  AND\n  Votes.PostId = A.Id\n  AND\n  A.CreationDate > R.CreationDate"},{"QuerySetId":1255048,"Title":"Inverted Index Listing All the Post IDs where each tag appears","Description":null,"QueryBody":"SELECT PostTypeId, Id FROM Posts WHERE CreationDate LIKE '%2017%'","CreationDate":"2020-06-24 02:59:20","validated":false,"QueryBody_Original":"SELECT  PostTypeId, Id\nfrom Posts\nwhere CreationDate like '%2017%';"},{"QuerySetId":1255240,"Title":"Total number of comments with thank","Description":null,"QueryBody":"SELECT COUNT(*) FROM Comments WHERE Text LIKE '%thank%'","CreationDate":"2020-06-24 13:45:35","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Comments\nwhere Text like '%thank%'"},{"QuerySetId":1255830,"Title":"R Questions with Few Questions","Description":null,"QueryBody":"SELECT p.id, p.creationdate, p.score, p.viewcount, p.owneruserid, p.title, p.body, p.tags, p.answercount, CONCAT('https:\/\/stackoverflow.com\/questions\/', CAST(p.id AS TEXT)) AS url FROM posts AS p WHERE p.tags LIKE '%<php>%' AND (p.tags LIKE '%<arrays>%' OR p.tags LIKE '%xml%') AND p.answercount <= 3 ORDER BY p.creationdate DESC LIMIT 10000","CreationDate":"2020-06-27 23:16:44","validated":false,"QueryBody_Original":"SELECT  TOP 10000\n       p.id, p.creationdate, p.score,\n       p.viewcount, p.owneruserid, \n       p.title, p.body,\n       p.tags, p.answercount,\n       CONCAT('https:\/\/stackoverflow.com\/questions\/', \n              CAST(p.id AS varchar)) As url\n                       \nFROM posts p\n\nWHERE p.tags LIKE '%<php>%'\n  AND (p.tags LIKE '%<arrays>%'\n       OR p.tags LIKE '%xml%')\n  AND p.answercount <= 3\nORDER BY p.creationdate DESC"},{"QuerySetId":1256002,"Title":"SELECT TOP 10 *   FROM tags  ORDER BY Count DESC","Description":null,"QueryBody":"SELECT * FROM tags ORDER BY Count DESC LIMIT 10","CreationDate":"2020-06-26 14:36:19","validated":false,"QueryBody_Original":"SELECT  TOP 10 *\n  FROM tags\n ORDER BY Count DESC;"},{"QuerySetId":1256077,"Title":"how many users are over 500 points","Description":null,"QueryBody":"SELECT COUNT(*) FROM users AS d WHERE d.reputation > 500","CreationDate":"2020-06-26 18:59:07","validated":false,"QueryBody_Original":"SELECT  count(*) FROM users d\n   WHERE d.reputation > 500"},{"QuerySetId":1256099,"Title":"Number of posts over time for a tag","Description":null,"QueryBody":"SELECT \"Year\/Month\", COUNT(1) FROM (SELECT CONCAT(YEAR(CreationDate), '\/', RIGHT(CONCAT('00', MONTH(CreationDate)), 2)) AS \"Year\/Month\" FROM Posts WHERE \"Tags\" LIKE '%g1ant%') AS a GROUP BY \"Year\/Month\" ORDER BY \"Year\/Month\"","CreationDate":"2020-06-26 21:17:50","validated":false,"QueryBody_Original":"SELECT  [Year\/Month], COUNT(1)\nFROM (\nSELECT CONCAT(YEAR(CreationDate),'\/',RIGHT(CONCAT('00',MONTH(CreationDate)),2)) AS 'Year\/Month'\n  FROM Posts\n  WHERE [Tags] LIKE '%g1ant%'\n  ) a\n  GROUP BY [Year\/Month]\n  ORDER BY [Year\/Month] ASC"},{"QuerySetId":1256355,"Title":"Closed because of bad quality or downvoted questions","Description":null,"QueryBody":"SELECT COUNT(Id) AS Questions FROM Posts WHERE NOT ClosedDate IS NULL AND PostTypeId = 1 GROUP BY YEAR(CreationDate) ORDER BY YEAR(CreationDate)","CreationDate":"2020-06-27 17:28:41","validated":false,"QueryBody_Original":"SELECT \nCount(Id) as Questions\nfrom\nPosts\nwhere\nClosedDate is not null\nand\nPostTypeId = 1\ngroup by\nYEAR(CreationDate)\norder by\nYEAR(CreationDate)"},{"QuerySetId":1256495,"Title":"Top Flutter Developers in Iraq","Description":"Top Flutter Developers in Iraq","QueryBody":"SELECT Users.Id AS \"User Link\", Reputation FROM Users INNER JOIN Posts ON Posts.OwnerUserId = Users.Id WHERE LOWER(Posts.Tags) LIKE '%windows-phone%' GROUP BY Users.Id, Reputation ORDER BY Reputation DESC","CreationDate":"2020-06-29 18:44:12","validated":false,"QueryBody_Original":"SELECT  \n    Users.Id AS [User Link], \n    Reputation\nFROM\n    Users\nINNER JOIN Posts ON Posts.OwnerUserId = Users.Id\nWHERE\n    LOWER(Posts.Tags) LIKE '%windows-phone%'\nGROUP BY\nUsers.Id,Reputation\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1256696,"Title":"Questions with [data-processing] as only tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate, Tags FROM Posts WHERE Tags = '<data-processing>' ORDER BY Score DESC LIMIT 1000","CreationDate":"2020-07-05 15:42:16","validated":false,"QueryBody_Original":"SELECT  Top 1000 Id As [Post Link], CreationDate, Tags\nFrom Posts\nWhere Tags = '<data-processing>'\nOrder By Score Desc"},{"QuerySetId":1257280,"Title":"Get Recent Top .Net Questions ","Description":null,"QueryBody":"SELECT 'https:\/\/stackoverflow.com\/questions\/' + CAST(\"Posts\".ID AS TEXT(11)), Title, Tags, Score, ViewCount, AnswerCount, CreationDate FROM posts WHERE creationDate > '2019\/01\/01' AND tags LIKE '%asp.net-core%' ORDER BY score DESC, ViewCount","CreationDate":"2020-06-30 14:23:43","validated":false,"QueryBody_Original":"SELECT  'https:\/\/stackoverflow.com\/questions\/'+cast([Posts].ID as varchar(11)),\nTitle,\nTags,\nScore,\nViewCount,\nAnswerCount,\nCreationDate\nFROM posts\nWHERE creationDate > '2019\/01\/01'\nand tags like '%asp.net-core%'\norder by score desc , ViewCount"},{"QuerySetId":1257641,"Title":"Top SO users from Bangladesh","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS Link, DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%bangladesh%' OR UPPER(Location) LIKE '%Bangladesh%' OR Location LIKE '%Bangladesh%') ORDER BY Reputation DESC LIMIT 10","CreationDate":"2020-09-24 16:25:27","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS Link, \n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%bangladesh%' OR \n    UPPER(Location) LIKE '%Bangladesh%' OR Location LIKE '%Bangladesh%' )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1257864,"Title":"Top 10 Android Developers from Hyderabad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation, LastAccessDate FROM Users WHERE LOWER(Location) LIKE '%hyderabad%' AND (LOWER(AboutMe) LIKE '%android%') ORDER BY Reputation DESC LIMIT 10","CreationDate":"2020-07-01 20:32:28","validated":false,"QueryBody_Original":"SELECT  TOP 10\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation,\n    LastAccessDate\n\nFROM\n    Users\nWHERE\n    lower(Location) LIKE '%hyderabad%' AND\n    (lower(AboutMe) LIKE '%android%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1258107,"Title":"select count (*) from Posts;","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE Location = 'Zurich, Switzerland'","CreationDate":"2020-07-02 19:45:43","validated":false,"QueryBody_Original":"SELECT  count (*) from  Users where Location = 'Zurich, Switzerland'"},{"QuerySetId":1258631,"Title":"Posts where both OwnerUserId and  OwnerDisplayName are not NULL","Description":null,"QueryBody":"SELECT OwnerUserId AS \"User Link\", OwnerDisplayName, Id AS \"Post Link\" FROM Posts WHERE (NOT OwnerUserId IS NULL) AND (NOT OwnerDisplayName IS NULL) ORDER BY OwnerUserId","CreationDate":"2020-07-04 09:51:29","validated":false,"QueryBody_Original":"SELECT \n  OwnerUserId AS [User Link], OwnerDisplayName, Id AS [Post Link]\nFROM Posts\nWHERE (OwnerUserId IS NOT NULL) AND (OwnerDisplayName IS NOT NULL)\nORDER BY OwnerUserId"},{"QuerySetId":1259295,"Title":"Answer score distribution since 2019","Description":null,"QueryBody":"SELECT Score, COUNT(*) AS \"Question Scores\" FROM Posts WHERE PostTypeId = 2 AND Score >= -10 AND Score <= 30 AND YEAR(CreationDate) >= 2019 GROUP BY Score ORDER BY Score","CreationDate":"2020-07-06 11:34:10","validated":false,"QueryBody_Original":"SELECT  Score,\n  count(*) as [Question Scores]\n  from Posts\n  where PostTypeId = 2\n        and Score >= -10 and Score <= 30\n        and year(CreationDate) >= 2019\n  group by Score\n  order by Score"},{"QuerySetId":1259553,"Title":"Count Questions with the given Tag","Description":null,"QueryBody":"SELECT COUNT(*) FROM Posts WHERE Posts.Tags LIKE '%<kotlin>%'","CreationDate":"2020-07-07 00:31:27","validated":false,"QueryBody_Original":"SELECT  COUNT(*)\n  FROM Posts\n WHERE Posts.Tags LIKE '%<kotlin>%'"},{"QuerySetId":1259922,"Title":"All answers for an post","Description":null,"QueryBody":"SELECT a.parentid AS \"Post Link\", q.tags, a.score, a.body FROM posts AS q INNER JOIN posts AS a ON q.id = a.parentid WHERE q.tags LIKE '%<##TagName##>%' ORDER BY a.score DESC LIMIT 50","CreationDate":"2020-07-10 00:54:57","validated":false,"QueryBody_Original":"SELECT  TOP 50 a.parentid AS [Post Link], q.tags, a.score, a.body\nFROM posts q INNER JOIN posts a ON q.id = a.parentid\nWHERE q.tags LIKE '%<##TagName##>%' \nORDER BY a.score DESC"},{"QuerySetId":1260228,"Title":"Percentage of posts which have both OwnerUserId and OwnerDisplayName","Description":null,"QueryBody":"SELECT COUNT(Id) AS \"# of Posts\", COUNT(OwnerDisplayName) AS \"OwnerDisplayName is not NUL\", ROUND((CAST(COUNT(OwnerDisplayName) AS FLOAT)) * 100.0 \/ (CAST(COUNT(Id) AS FLOAT)), 5) AS Percentage FROM Posts WHERE (NOT OwnerUserId IS NULL)","CreationDate":"2020-07-08 14:20:09","validated":false,"QueryBody_Original":"SELECT \n  Count(Id) AS [# of Posts],\n  Count(OwnerDisplayName) AS [OwnerDisplayName is not NUL],\n  ROUND((CAST(Count(OwnerDisplayName) AS decimal))*100.0\/(CAST(Count(Id) AS decimal)),5) AS Percentage\nFROM Posts  \nWHERE (OwnerUserId IS NOT NULL)"},{"QuerySetId":1260672,"Title":"select count(Tags) from Posts where Tags like '%<r>%' group by CreationDate","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), COUNT(Tags) FROM Posts WHERE Tags LIKE '%[r]%' GROUP BY CAST(CreationDate AS DATE)","CreationDate":"2020-07-09 06:34:37","validated":false,"QueryBody_Original":"SELECT  cast(CreationDate as date), count(Tags) \nfrom Posts where Tags like '%[r]%' \ngroup by cast(CreationDate as date)"},{"QuerySetId":1260756,"Title":"How to deal with \"Incompetent\" moderation","Description":null,"QueryBody":"SELECT * FROM (SELECT Id FROM Users WHERE Reputation > 100000) AS userProfile INNER JOIN (SELECT * FROM Posts WHERE Score > 200) AS postsProfile ON userProfile.Id = postsProfile.OwnerUserId","CreationDate":"2020-07-09 12:01:56","validated":false,"QueryBody_Original":"SELECT  * from (SELECT Id from Users where Reputation > 100000) userProfile inner join (SELECT * from Posts where Score > 200) postsProfile on userProfile.Id = postsProfile.OwnerUserId"},{"QuerySetId":1261484,"Title":"Find questions with one specific tag","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", CreationDate FROM Posts WHERE PostTypeId = 1 AND Tags LIKE LOWER('%hard-science%') ORDER BY CreationDate DESC LIMIT 5000","CreationDate":"2020-07-10 23:51:26","validated":false,"QueryBody_Original":"SELECT  Top 5000 Id As [Post Link], CreationDate From Posts\nWhere PostTypeId=1 And Tags LIKE Lower('%hard-science%')\nOrder By CreationDate Desc"},{"QuerySetId":1261585,"Title":"Tags differing only by adding s (pluralization)","Description":null,"QueryBody":"SELECT t1.tagname, t2.tagname FROM Tags AS t1 INNER JOIN Tags AS t2 ON (t2.Tagname = t1.TagName + 's')","CreationDate":"2020-07-11 11:18:19","validated":false,"QueryBody_Original":"SELECT  \n  t1.tagname, t2.tagname\nFROM Tags t1 INNER JOIN Tags t2 ON (t2.Tagname=t1.TagName+'s')"},{"QuerySetId":1261689,"Title":"Comments containing the given two keywords (case insensitive)","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", text, UserId AS \"User Link\", CreationDate FROM Comments WHERE (Text LIKE '%##Word1?student##%' COLLATE Latin1_General_CI_AI) AND (Text LIKE '%##Word2?homework##%' COLLATE Latin1_General_CI_AI) ORDER BY CreationDate","CreationDate":"2020-08-14 00:03:20","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], text, UserId AS [User Link], CreationDate\nFROM Comments\nWHERE (Text LIKE '%##Word1?student##%' COLLATE Latin1_General_CI_AI) AND (Text LIKE '%##Word2?homework##%' COLLATE Latin1_General_CI_AI)\nORDER BY CreationDate"},{"QuerySetId":1261894,"Title":"Find by tags with grouping","Description":null,"QueryBody":"SELECT Users.Id, DisplayName, EmailHash, Reputation, Location, GROUP_CONCAT(CAST(Tags AS TEXT), CHAR(32)) AS Tags FROM Users INNER JOIN PostHistory AS ph ON ph.UserId = Users.Id INNER JOIN posts ON posts.Id = ph.PostId WHERE LOWER(Tags) LIKE LOWER('%##skill1##%') AND LOWER(Tags) LIKE LOWER('%##skill2##%') AND LOWER(Location) LIKE LOWER('%##location##%') GROUP BY Users.Id, DisplayName, EmailHash, Reputation, Location ORDER BY Reputation DESC","CreationDate":"2020-07-13 00:09:24","validated":false,"QueryBody_Original":"SELECT  Users.Id, DisplayName, EmailHash, Reputation, Location, STRING_AGG(cast(Tags as NVARCHAR(MAX)), CHAR(32)) as Tags\nFROM Users \nINNER JOIN PostHistory ph \n\tON ph.UserId = Users.Id \nINNER JOIN posts \n\tON posts.Id = ph.PostId \n    WHERE LOWER(Tags) LIKE LOWER('%##skill1##%') AND LOWER(Tags) LIKE LOWER('%##skill2##%') \nAND LOWER(Location) LIKE LOWER('%##location##%')\nGROUP BY Users.Id, DisplayName, EmailHash, Reputation, Location \nORDER BY Reputation DESC"},{"QuerySetId":1262091,"Title":"How many questions have these tags?","Description":null,"QueryBody":"SELECT SUM(CASE WHEN p.Tags LIKE '%<access-vba>%' THEN 1 ELSE 0 END) AS accessTag, SUM(CASE WHEN p.Tags LIKE '%<access-vba>%' AND NOT p.Tags LIKE '%<ms-access>%' THEN 1 ELSE 0 END) AS accessWOms, SUM(CASE WHEN p.Tags LIKE '%<access-vba>%' AND NOT p.Tags LIKE '%<vba>%' THEN 1 ELSE 0 END) AS accessWOvba, SUM(CASE WHEN p.Tags LIKE '%<access-vba>%' AND NOT p.Tags LIKE '%<ms-access>%' AND NOT p.Tags LIKE '%<vba>%' THEN 1 ELSE 0 END) AS accessWOmsorvba FROM Posts AS p","CreationDate":"2020-07-12 22:26:35","validated":false,"QueryBody_Original":"SELECT  sum(case when p.Tags like '%<access-vba>%' then 1 else 0 end) accessTag,\n  sum(case when p.Tags like '%<access-vba>%' \n    and p.Tags not like '%<ms-access>%' then 1 else 0 end) accessWOms,\n  sum(case when p.Tags like '%<access-vba>%' \n    and p.Tags not like '%<vba>%' then 1 else 0 end) accessWOvba,\n  sum(case when p.Tags like '%<access-vba>%' \n    and p.Tags not like '%<ms-access>%' \n    and p.Tags not like '%<vba>%' then 1 else 0 end) accessWOmsorvba\nfrom Posts p;"},{"QuerySetId":1262455,"Title":"Popular error questions for C++","Description":null,"QueryBody":"SELECT Title, 'https:\/\/stackoverflow.com\/questions\/' + CAST(Id AS TEXT) AS Link, ViewCount, AnswerCount, Score FROM Posts WHERE LOWER(Title) LIKE '%error%' AND Tags LIKE '%c++%' AND AnswerCount > 0 AND Score > 0 ORDER BY (ViewCount * AnswerCount + Score) DESC","CreationDate":"2020-07-13 14:20:37","validated":false,"QueryBody_Original":"SELECT \n  Title,\n  'https:\/\/stackoverflow.com\/questions\/' + CAST(Id AS VARCHAR) Link,\n  ViewCount,\n  AnswerCount,\n  Score\nFROM\n  Posts\nWHERE\n  LOWER(Title) LIKE '%error%' AND\n  Tags LIKE '%c++%' AND\n  AnswerCount > 0 AND\n  Score > 0\nORDER BY\n  (ViewCount * AnswerCount + Score) DESC"},{"QuerySetId":1262516,"Title":"Number of Javascript Related Posts","Description":null,"QueryBody":"SELECT COUNT(Tags) FROM Posts WHERE Tags = CAST('javascript' AS TEXT(30))","CreationDate":"2020-07-13 16:31:26","validated":false,"QueryBody_Original":"SELECT  COUNT(Tags)\nFROM Posts\nWHERE Tags = CONVERT(nchar, 'javascript');"},{"QuerySetId":1262749,"Title":"Protected hot network questions by the community user","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\", p.OwnerUserId AS \"User Link\", ph.CreationDate, p.Score, p.AnswerCount, p.Tags FROM Posts AS p JOIN PostHistory AS ph ON p.Id = ph.PostId JOIN PostHistory AS ph2 ON p.Id = ph2.PostId WHERE ph.PostHistoryTypeId = 52 AND ph2.PostHistoryTypeId = 19 AND ph2.UserId = -1 ORDER BY ph.CreationDate","CreationDate":"2020-07-13 21:16:09","validated":false,"QueryBody_Original":"SELECT \n  p.Id AS [Post Link], p.OwnerUserId as [User Link], ph.CreationDate, p.Score, p.AnswerCount, p.Tags\nFROM Posts p\n  JOIN PostHistory ph ON p.Id=ph.PostId\n  JOIN PostHistory ph2 ON p.Id=ph2.PostId\nWHERE ph.PostHistoryTypeId=52 AND ph2.PostHistoryTypeId = 19 AND ph2.UserId = -1\nORDER BY ph.CreationDate asc"},{"QuerySetId":1263918,"Title":"Comments on questions containing the substring \"close\"","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", c.CreationDate, c.Score FROM Comments AS c INNER JOIN Posts AS q ON q.Id = c.PostId WHERE (LOWER(Text) LIKE '%close%' AND q.PostTypeId = 1) ORDER BY c.CreationDate DESC","CreationDate":"2020-07-17 10:08:11","validated":false,"QueryBody_Original":"SELECT  c.Id as [Comment Link], c.CreationDate, c.Score from Comments c\n  INNER JOIN Posts q ON\n  q.Id = c.PostId\n  where (\n      lower(Text) like '%close%'\n      and q.PostTypeId = 1\n    )\n  order by c.CreationDate DESC"},{"QuerySetId":1264130,"Title":"vmware and redhat and cisco","Description":null,"QueryBody":"SELECT * FROM Posts WHERE (Tags LIKE '%vmware%' OR Tags LIKE '%redhat%' OR Tags LIKE '%cisco%') AND CreationDate > '01-01-2020'","CreationDate":"2020-07-17 19:47:26","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE (Tags LIKE '%vmware%' OR Tags LIKE '%redhat%' or Tags LIKE '%cisco%') AND CreationDate > '01-01-2020'"},{"QuerySetId":1265558,"Title":"AWS Questions by Month - Elemental","Description":null,"QueryBody":"SELECT CAST(TIME_TO_STR(Question.CreationDate, '%Y-%m-%d') AS TEXT(7)) AS Month, COUNT(Question.Id) AS Questions, COUNT(NULLIF(AnswerCount, 0)) AS Answers, CONCAT(100 * COUNT(NULLIF(AnswerCount, 0)) \/ COUNT(1), '%') AS AnswerRate, CONCAT(100 * COUNT(AcceptedAnswerId) \/ COUNT(1), '%') AS AcceptedRate, SUM(Question.ViewCount) AS Views FROM Posts AS Question WHERE PostTypeId = 1 \/* Question *\/ AND Question.ClosedDate IS NULL \/* Exclude Closed questions *\/ AND (Question.Title LIKE '%MediaLive%' OR Question.Body LIKE '%MediaLive%') AND Question.CreationDate >= '2019-01-01' GROUP BY CAST(TIME_TO_STR(Question.CreationDate, '%Y-%m-%d') AS TEXT(7)) ORDER BY CAST(TIME_TO_STR(Question.CreationDate, '%Y-%m-%d') AS TEXT(7))","CreationDate":"2020-08-14 23:56:25","validated":false,"QueryBody_Original":"SELECT  \n  CONVERT(nvarchar(7), Question.CreationDate, 23) AS Month,\n  COUNT(Question.Id) AS Questions,\n  COUNT(NULLIF(AnswerCount,0)) AS Answers,\n  CONCAT(100 * COUNT(NULLIF(AnswerCount,0)) \/ COUNT(1), '%') as AnswerRate,\n  CONCAT(100 * COUNT(AcceptedAnswerId) \/ COUNT(1), '%') as AcceptedRate,\n  SUM(Question.ViewCount) AS Views\n\nFROM Posts as Question\n\nWHERE PostTypeId = 1 -- Question\n  AND Question.ClosedDate IS NULL -- Exclude Closed questions\n  AND (Question.Title LIKE '%MediaLive%' \n      OR Question.Body LIKE '%MediaLive%')\n  AND Question.CreationDate >= '2019-01-01'\n  --AND Question.CreationDate < DATEADD(DAY,1,EOMONTH(GETDATE(),-1))\n--and Question.Id = 40575584\n\nGROUP BY CONVERT(nvarchar(7), Question.CreationDate, 23)\nORDER BY CONVERT(nvarchar(7), Question.CreationDate, 23)"},{"QuerySetId":1266414,"Title":"Questions and Answers per Day since 27 Sept 2019","Description":null,"QueryBody":"SELECT CAST(CreationDate AS DATE), SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers FROM Posts WHERE CAST(TIME_TO_STR(CreationDate, '%Y-%m-%d %H:%M:%S') AS TEXT(10)) >= '2019-09-27' GROUP BY CAST(CreationDate AS DATE) ORDER BY CAST(CreationDate AS DATE) DESC","CreationDate":"2020-07-24 23:31:27","validated":false,"QueryBody_Original":"SELECT \n    CAST(CreationDate AS DATE),\n    SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,\n    SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers\nFROM\n    Posts\nWHERE\n    convert(varchar(10),CreationDate, 120) >= '2019-09-27'\nGROUP BY\n    CAST(CreationDate AS DATE)\nORDER BY\n    CAST(CreationDate AS DATE) Desc"},{"QuerySetId":1266458,"Title":"Q1 2018 AWS Azure Google Cloud","Description":null,"QueryBody":"SELECT * FROM Posts WHERE (CreationDate > '04-01-2018' AND CreationDate < '06-30-2018') AND (Tags LIKE '%amazon%' OR Tags LIKE '%aws%' OR Tags LIKE '%google-cloud%' OR Tags LIKE '%azure%')","CreationDate":"2020-07-23 22:27:24","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE (CreationDate > '04-01-2018' AND CreationDate < '06-30-2018')\nAND (Tags LIKE '%amazon%' OR Tags LIKE '%aws%' OR Tags LIKE '%google-cloud%' OR Tags LIKE '%azure%')"},{"QuerySetId":1266535,"Title":"select title, tags from Posts where (ParentId is null) and (len(title) > 0)","Description":null,"QueryBody":"SELECT title, tags FROM Posts WHERE (ParentId IS NULL) AND (LENGTH(title) > 0)","CreationDate":"2020-07-24 01:50:34","validated":false,"QueryBody_Original":"SELECT  title, tags from Posts where (ParentId is null) and (len(title) > 0)"},{"QuerySetId":1266588,"Title":"Posts with most negative score answers","Description":null,"QueryBody":"SELECT p1.Id AS \"Post Link\", COUNT(p2.Id) AS \"Negative Answers\", SUM(CASE WHEN p2.Score < 0 THEN p2.Score ELSE 0 END) AS \"Total Negative Score\" FROM Posts AS p1 JOIN Posts AS p2 ON p2.ParentId = p1.Id WHERE p2.Score < 0 GROUP BY p1.Id ORDER BY SUM(CASE WHEN p2.Score < 0 THEN p2.Score ELSE 0 END) LIMIT 10","CreationDate":"2020-07-24 10:45:54","validated":false,"QueryBody_Original":"SELECT  TOP 10 p1.Id [Post Link], COUNT(p2.Id) AS [Negative Answers], \n  SUM(CASE WHEN p2.Score < 0 THEN p2.Score ELSE 0 END) AS [Total Negative Score]\nFROM Posts p1\nJOIN Posts p2 ON p2.ParentId = p1.Id\nWHERE p2.Score < 0\nGROUP BY p1.Id\nORDER BY SUM(CASE WHEN p2.Score < 0 THEN p2.Score ELSE 0 END)"},{"QuerySetId":1266610,"Title":"my rank in Sri Lanka","Description":null,"QueryBody":"SELECT x.position AS RANK_IN_LANKA, x.Id AS USER_ID, x.Reputation, x.DisplayName FROM (SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS position, Id, DisplayName, Reputation FROM Users WHERE Location LIKE '%Sri Lanka%' ORDER BY reputation DESC LIMIT 1000) AS x WHERE x.Id = 3702886","CreationDate":"2020-07-24 10:09:46","validated":false,"QueryBody_Original":"SELECT  x.position as RANK_IN_LANKA,x.Id as USER_ID,x.Reputation,x.DisplayName FROM \n  (SELECT TOP 1000\n     ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS position,\n     Id,\n     DisplayName,\n     Reputation\n  FROM\n     Users\n  WHERE\n     Location like '%Sri Lanka%'\n  ORDER BY\n    reputation DESC\n   ) x\nWHERE x.Id = 3702886"},{"QuerySetId":1266699,"Title":"ELECT * FROM posts WHERE Id < 50000","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id > 50000 AND Id < 10000","CreationDate":"2020-07-25 13:35:42","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE Id > 50000 and Id<10000"},{"QuerySetId":1266777,"Title":"Game Tag question by Weeks since release","Description":null,"QueryBody":"SELECT COUNT(*), CONCAT_WS('_', TIME_TO_STR(\"CreationDate\", '%Year'), TIME_TO_STR(\"CreationDate\", 'Week')) AS \"WeekYear\" FROM Posts WHERE Tags LIKE '%dark-souls-3%' GROUP BY CONCAT_WS('_', TIME_TO_STR(\"CreationDate\", '%Year'), TIME_TO_STR(\"CreationDate\", 'Week'))","CreationDate":"2020-07-24 21:44:54","validated":false,"QueryBody_Original":"SELECT  \n  count(*), \n  CONCAT_WS('_', DATEPART(Year,[CreationDate]), DATEPART(Week,[CreationDate])) As [WeekYear]\nFROM Posts \nWHERE Tags like '%dark-souls-3%'\nGROUP BY CONCAT_WS('_', DATEPART(Year,[CreationDate]), DATEPART(Week,[CreationDate]));"},{"QuerySetId":1267280,"Title":"Trend of users last access date who are eligible for the election","Description":null,"QueryBody":"SELECT DATEFROMPARTS(TIME_TO_STR(UT.LastAccessDate, '%Y'), TIME_TO_STR(UT.LastAccessDate, '%m'), TIME_TO_STR(UT.LastAccessDate, '%d')) AS \"Last Accessed\", COUNT(UT.Id) AS \"Eligible\" FROM Users AS UT WHERE UT.Reputation >= 150 GROUP BY DATEFROMPARTS(TIME_TO_STR(UT.LastAccessDate, '%Y'), TIME_TO_STR(UT.LastAccessDate, '%m'), TIME_TO_STR(UT.LastAccessDate, '%d')) ORDER BY \"Last Accessed\"","CreationDate":"2020-07-26 21:05:06","validated":false,"QueryBody_Original":"SELECT \n  datefromparts(\n    datepart(year, UT.LastAccessDate),\n    datepart(month, UT.LastAccessDate),\n    datepart(day, UT.LastAccessDate)\n  ) as [Last Accessed],\n  Count(UT.Id) as [Eligible]\nfrom\n  Users as UT\nwhere\n  UT.Reputation >= 150\ngroup by\n  datefromparts(\n    datepart(year, UT.LastAccessDate),\n    datepart(month, UT.LastAccessDate),\n    datepart(day, UT.LastAccessDate)\n  )\norder by\n  [Last Accessed]\nasc"},{"QuerySetId":1267543,"Title":"How many comments are here?","Description":null,"QueryBody":"SELECT COUNT(C.Id) AS \"Comments\" FROM Comments AS C","CreationDate":"2020-07-27 04:03:16","validated":false,"QueryBody_Original":"SELECT  COUNT(C.Id) AS \"Comments\" \nFROM Comments C"},{"QuerySetId":1267545,"Title":"How many questions are here?","Description":null,"QueryBody":"SELECT COUNT(Q.Id) FROM Posts AS Q WHERE Q.PostTypeId = 1","CreationDate":"2020-07-27 04:04:14","validated":false,"QueryBody_Original":"SELECT  COUNT(Q.Id)\nFROM Posts Q\nWHERE Q.PostTypeId = 1"},{"QuerySetId":1267546,"Title":"How many answers are there?","Description":null,"QueryBody":"SELECT COUNT(A.Id) FROM Posts AS A WHERE A.PostTypeId = 2","CreationDate":"2020-07-27 04:04:38","validated":false,"QueryBody_Original":"SELECT  COUNT(A.Id)\nFROM Posts A\nWHERE A.PostTypeId = 2"},{"QuerySetId":1267562,"Title":"Find posts of yours that include an image","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts WHERE LOWER(Body) LIKE '%<img%' AND NOT LOWER(Body) LIKE '%<img src=\"https:\/\/i.stack.imgur%'","CreationDate":"2020-07-27 05:54:19","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link]\nFROM Posts\nWHERE lower(Body) LIKE '%<img%'\nAND lower(Body) NOT LIKE '%<img src=\"https:\/\/i.stack.imgur%'"},{"QuerySetId":1267568,"Title":"Find images not on imgur by active date","Description":"Finds all posts that have embedded images, but do not contain \"imgur.com\". Useful for finding old posts with images that may need uploading to imgur or are already broken. Sorted by last activity because of the Archaeologist badge.","QueryBody":"SELECT Score, Id AS \"Post Link\" FROM Posts AS Q WHERE Body LIKE '%<img src%' AND NOT Body LIKE '%imgur.com\/%' ORDER BY LastActivityDate DESC","CreationDate":"2020-07-30 01:16:02","validated":false,"QueryBody_Original":"SELECT  Score,\n       Id AS [Post Link]\nFROM   Posts Q\nWHERE  Body LIKE '%<img src%'\n       AND Body NOT LIKE '%imgur.com\/%'\nORDER  BY LastActivityDate desc"},{"QuerySetId":1268804,"Title":"What is the meaning of comments.score?","Description":"https:\/\/meta.stackexchange.com\/questions\/228980","QueryBody":"SELECT score, LOG10(COUNT(*)) AS \"log count\" FROM comments GROUP BY score ORDER BY score","CreationDate":"2020-07-29 18:43:59","validated":false,"QueryBody_Original":"SELECT  score\n, log10(count(*)) [log count]\nfrom comments\ngroup by score\norder by score"},{"QuerySetId":1268960,"Title":"OpenShift Rancher Terraform Ansible Jenkins","Description":null,"QueryBody":"SELECT * FROM Posts WHERE TAGS LIKE '%monitor%' AND CreationDate > '01-01-2020'","CreationDate":"2020-07-30 02:19:41","validated":false,"QueryBody_Original":"SELECT  * FROM Posts \nWHERE TAGS Like '%monitor%' AND CreationDate > '01-01-2020'"},{"QuerySetId":1270081,"Title":"Questions without code in body since [period] that are downvoted or closed","Description":null,"QueryBody":"SELECT COUNT(Id) \/*\n  @hasAnswer as Answered,\n  @totalPosted as Posted,\n  count(Id) * 100 \/ @totalPosted as [% Closed],\n  @hasAnswer * 100 \/ @totalPosted as [% Answered] *\/ FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL AND NOT Body LIKE '%`%' AND Score > 0","CreationDate":"2020-08-01 08:28:55","validated":false,"QueryBody_Original":"SELECT \n  --Id as [Post Link]\n  count(Id)\/*\n  @hasAnswer as Answered,\n  @totalPosted as Posted,\n  count(Id) * 100 \/ @totalPosted as [% Closed],\n  @hasAnswer * 100 \/ @totalPosted as [% Answered]*\/\nfrom\n  Posts \nwhere\n  PostTypeId = 1\n  and\n  ClosedDate is null\n  and\n  Body not like '%`%'\n  and\n  Score > 0"},{"QuerySetId":1270310,"Title":"Num votes and reputation per user","Description":null,"QueryBody":"SELECT Id, (UpVotes + DownVotes) AS total_votes, Reputation, DATEDIFF(CreationDate, LastAccessDate) AS num_days_on_platform FROM Users WHERE (UpVotes + DownVotes) > 0 AND CreationDate > '2020-01-01'","CreationDate":"2020-08-02 13:30:58","validated":false,"QueryBody_Original":"SELECT  \n    Id,\n    (UpVotes + DownVotes) as total_votes,\n    Reputation,\n    DATEDIFF(DAY , LastAccessDate, CreationDate) as num_days_on_platform \nFROM \n    Users \nWHERE \n    (UpVotes + DownVotes) > 0 AND\n    CreationDate > '2020-01-01'"},{"QuerySetId":1270697,"Title":"%%sql SELECT TOP 10 Id, DisplayName FROM Users","Description":null,"QueryBody":"SELECT Id, DisplayName FROM Users LIMIT 10","CreationDate":"2020-08-02 15:06:18","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id, DisplayName FROM Users"},{"QuerySetId":1272639,"Title":"Posts (Q\/A) and Comments per month","Description":"Plot the site activity by voting, questions, answers and comments, aggregated per month.","QueryBody":"SELECT dd.id AS id, dd.body AS body, dd.date AS date FROM (SELECT p.id AS id, p.parentid AS parentid, c.text AS body, c.creationdate AS date FROM (SELECT id, parentid FROM posts WHERE tags LIKE '%iquibase%' OR tags LIKE '%iquidbase%') AS p JOIN comments AS c ON p.id = c.postid) AS dd WHERE date BETWEEN '2020\/05\/01' AND '2020\/06\/01'","CreationDate":"2020-08-05 22:08:40","validated":false,"QueryBody_Original":"SELECT  dd.id as id , dd.body as body, \ndd.date as date from(SELECT p.id as id , p.parentid as parentid, \nc.text as body, c.creationdate as date\nfrom (SELECT id , parentid from posts \nwhere tags like '%iquibase%' or tags like '%iquidbase%' ) \np join comments c on p.id = c.postid) dd \nwhere date between '2020\/05\/01' and '2020\/06\/01'"},{"QuerySetId":1272786,"Title":"Top SO users from Hong Kong","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS Link, DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%hong%kong%' OR Location LIKE '%\u9999\u6e2f%') ORDER BY Reputation DESC LIMIT 50","CreationDate":"2020-08-06 05:21:05","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS Link, \n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%hong%kong%' OR Location LIKE '%\u9999\u6e2f%' )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1272902,"Title":"SELECT TOP 100 * FROM Posts","Description":null,"QueryBody":"SELECT * FROM Posts LIMIT 100","CreationDate":"2020-08-06 13:41:05","validated":false,"QueryBody_Original":"SELECT  TOP 100 * FROM Posts"},{"QuerySetId":1273515,"Title":"Trend of average score of positively received answers with [tag] by year of creation","Description":null,"QueryBody":"SELECT YEAR(CreationDate), AVG(Score) FROM Posts WHERE PostTypeId = 2 AND Score >= 0 GROUP BY YEAR(CreationDate)","CreationDate":"2020-08-08 19:59:27","validated":false,"QueryBody_Original":"SELECT  \n  year(CreationDate),\n  avg(Score)\nfrom \n  Posts\nwhere\n  PostTypeId = 2\n  and\n  Score >= 0\ngroup by \n  year(CreationDate)"},{"QuerySetId":1273606,"Title":"SELECT * FROM users where REPUTATION > 2000","Description":null,"QueryBody":"SELECT * FROM users WHERE REPUTATION > 2000","CreationDate":"2020-11-04 02:34:08","validated":false,"QueryBody_Original":"SELECT  * FROM users where REPUTATION > 2000"},{"QuerySetId":1274453,"Title":"Completed burnination requests on MSO","Description":null,"QueryBody":"SELECT Id, Title FROM Posts WHERE PostTypeId = 1 AND Tags LIKE '%status-completed%' AND Tags LIKE '%burninate-request%'","CreationDate":"2020-08-11 18:25:21","validated":false,"QueryBody_Original":"SELECT  Id, Title FROM Posts WHERE PostTypeId = 1\nAND Tags LIKE '%status-completed%' AND Tags LIKE '%burninate-request%'"},{"QuerySetId":1274616,"Title":"All questions joined with all answers on Dataflow tag (qs without answers also shown)","Description":null,"QueryBody":"SELECT Questions.Id AS \"Question\", Questions.CreationDate AS \"QuestionDate\", Questions.ViewCount AS \"ViewCount\", Answers.CreationDate AS \"AnswerDate\", Answers.Id AS \"AnswerId\", Answers.Score AS \"AnswerScore\", ROW_NUMBER() OVER (PARTITION BY Questions.Id ORDER BY Answers.Score DESC) AS \"AnswerNum\", CONCAT('https:\/\/stackoverflow.com\/questions\/', Questions.Id) AS \"Link\", Questions.Tags AS \"Tags\" FROM Posts AS Questions LEFT OUTER JOIN Posts AS Answers ON Answers.ParentId = Questions.Id WHERE (Questions.Tags LIKE '%google-cloud-dataflow%') ORDER BY Questions.CreationDate","CreationDate":"2020-08-12 02:13:05","validated":false,"QueryBody_Original":"SELECT \n    Questions.Id as 'Question',\n    Questions.CreationDate as 'QuestionDate',\n    Questions.ViewCount as 'ViewCount',\n    Answers.CreationDate as 'AnswerDate',\n    Answers.Id as 'AnswerId',\n    Answers.Score as 'AnswerScore',\n    ROW_NUMBER() OVER (PARTITION BY Questions.Id ORDER BY Answers.Score DESC) as 'AnswerNum',\n    CONCAT('https:\/\/stackoverflow.com\/questions\/', Questions.Id) as 'Link',\n    Questions.Tags as 'Tags'\n  FROM\n    Posts as Questions\n    LEFT OUTER JOIN Posts as Answers ON Answers.ParentId = Questions.Id\n  WHERE\n    (Questions.Tags LIKE '%google-cloud-dataflow%')\n  ORDER BY Questions.CreationDate"},{"QuerySetId":1274664,"Title":"TOP 100 users from Singapore","Description":"Lists the top 100 users (ranked by reputation) that are located in Singapore\r\nThanks to http:\/\/data.stackexchange.com\/stackoverflow\/qe\/1157\/top-100-users-from-greece\r\n","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id, CreationDate, Id AS \"User Link\", Reputation, WebsiteUrl, Location FROM Users WHERE Location LIKE N'%China%' ORDER BY reputation DESC LIMIT 10000","CreationDate":"2020-08-12 19:24:38","validated":false,"QueryBody_Original":"SELECT  TOP 10000\n   ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#],\n   Id,\n   CreationDate,\n   Id AS [User Link],\n   Reputation,\n   WebsiteUrl,\n   Location\nFROM\n   Users\nWHERE\n   Location like N'%China%'\nORDER BY\n   reputation DESC"},{"QuerySetId":1279837,"Title":"Get link, Question and body","Description":null,"QueryBody":"SELECT Id, Title, Body FROM Posts","CreationDate":"2020-08-17 16:54:40","validated":false,"QueryBody_Original":"SELECT  Id,Title,Body from Posts"},{"QuerySetId":1279894,"Title":"Stack Overflow: Python 3 vs Python 2","Description":null,"QueryBody":"SELECT creationdate, COUNT(id) FROM posts WHERE tags LIKE '%<python-2.x>%' GROUP BY creationdate","CreationDate":"2020-08-17 18:10:00","validated":false,"QueryBody_Original":"SELECT  creationdate, count(id)\nFROM posts\nWHERE tags LIKE '%<python-2.x>%'\nGROUP BY creationdate;\n\nSELECT creationdate, count(id)\nFROM posts\nWHERE tags LIKE '%<python-3.x>%'\nGROUP BY creationdate;"},{"QuerySetId":1280022,"Title":"Top Indonesian users in StackOverFlow","Description":null,"QueryBody":"SELECT *, ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation AS \"Tes\" FROM Users WHERE LOWER(Location) LIKE '%indonesia%' AND Reputation > 200 ORDER BY LastAccessDate DESC","CreationDate":"2020-08-18 09:42:02","validated":false,"QueryBody_Original":"SELECT *,\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation AS [Tes]\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%indonesia%'\n    AND Reputation > 200\nORDER BY\n    LastAccessDate DESC;"},{"QuerySetId":1281137,"Title":"Highest scoring answers with at least one image","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, CreationDate, LENGTH(Body) FROM Posts WHERE PostTypeId = 2 \/* Answer *\/ AND Body LIKE '%<img%' ORDER BY Score DESC, LENGTH(Body)","CreationDate":"2020-08-18 13:15:15","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Score, CreationDate, LEN(Body)\n  FROM Posts  \n  WHERE PostTypeId = 2 -- Answer\n    AND Body LIKE '%<img%'\n  ORDER BY Score DESC, LEN(Body)"},{"QuerySetId":1282581,"Title":"Top StackOverflow users in Singapore","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE (LOWER(Location) LIKE '%singapore%' OR LOWER(Location) LIKE '%singapore%') AND Reputation >= 10000 ORDER BY Reputation DESC","CreationDate":"2020-08-19 22:32:17","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    (\n        LOWER(Location) LIKE '%singapore%'\n        OR LOWER(Location) like '%singapore%'\n    )\n    AND Reputation >= 10000\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1282611,"Title":"SO Answers to all questions during an interval","Description":null,"QueryBody":"SELECT Posts.Id, Posts.Id AS \"Post Link\", Posts.Title, Posts.OwnerUserID, Users.DisplayName, Posts.Body, Posts.CreationDate, Posts.LastActivityDate, Posts.LastEditDate, Posts.DeletionDate, Posts.ClosedDate, Posts.ViewCount, Posts.FavoriteCount, Posts.CommentCount, Posts.AnswerCount, Posts.AcceptedAnswerID FROM Posts JOIN Users ON Users.Id = Posts.OwnerUserID WHERE Posts.Title LIKE '%##text?liquibase##%' ORDER BY Posts.Id DESC","CreationDate":"2020-08-20 05:38:58","validated":false,"QueryBody_Original":"SELECT \nPosts.Id,\nPosts.Id AS [Post Link],\nPosts.Title,\nPosts.OwnerUserID,\nUsers.DisplayName,\nPosts.Body,\nPosts.CreationDate,\nPosts.LastActivityDate,\nPosts.LastEditDate,\nPosts.DeletionDate,\nPosts.ClosedDate,\nPosts.ViewCount,\nPosts.FavoriteCount,\nPosts.CommentCount,\nPosts.AnswerCount,\nPosts.AcceptedAnswerID\nFROM\nPosts\nJOIN Users on Users.Id=Posts.OwnerUserID\nWHERE\nPosts.Title LIKE '%##text?liquibase##%'\nORDER BY Posts.Id DESC"},{"QuerySetId":1283225,"Title":"Get Top questions by score","Description":null,"QueryBody":"SELECT id, score, title, FavoriteCount, body, viewcount FROM posts WHERE tags LIKE '%elasticsearch%' AND score > 1 ORDER BY score DESC","CreationDate":"2020-08-20 17:31:38","validated":false,"QueryBody_Original":"SELECT  id,score,title,FavoriteCount,body,viewcount from posts where tags like '%elasticsearch%' and score>1 order by score desc"},{"QuerySetId":1283632,"Title":"Get Top Active Stackoverflow contributors in your city","Description":null,"QueryBody":"SELECT p.totalPosts, * FROM users AS u INNER JOIN (SELECT DISTINCT owneruserid, COUNT(id) OVER (PARTITION BY owneruserid) AS TotalPosts FROM posts) AS p ON u.id = p.owneruserid WHERE p.totalPosts > 0 AND LOWER(location) LIKE '%visak%' AND YEAR(LastAccessDate) = 2020 ORDER BY p.TotalPosts DESC, LastAccessDate DESC","CreationDate":"2020-08-21 10:38:08","validated":false,"QueryBody_Original":"SELECT  p.totalPosts,*\nfrom users u inner join ( SELECT distinct owneruserid,count(id) over(partition by owneruserid) as TotalPosts from posts) p\non u.id=p.owneruserid\nwhere p.totalPosts>0 and lower(location) like '%visak%' and Year(LastAccessDate)=2020\norder by p.TotalPosts desc,LastAccessDate desc\n\n\/*\nSELECT * from (SELECT (SELECT count(id) from posts where owneruserid=u.id) as TotalPosts,*\nfrom users u where lower(location) like '%visak%' and Year(LastAccessDate)=2020 ) a\nwhere TotalPosts>0\norder by TotalPosts desc,LastAccessDate desc\n*\/"},{"QuerySetId":1284031,"Title":"Number of posts in recent 1 month","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE CreationDate > '2020-08-21' AND body LIKE '%http%'","CreationDate":"2020-08-22 13:16:37","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where CreationDate > '2020-08-21' and body like '%http%';"},{"QuerySetId":1284469,"Title":"SELECT TOP 1000 *     FROM posts     ORDER BY CreationDate DESC","Description":null,"QueryBody":"SELECT * FROM posts ORDER BY CreationDate DESC LIMIT 1000","CreationDate":"2020-08-24 12:06:11","validated":false,"QueryBody_Original":"SELECT  TOP 1000 *    \nFROM posts    \nORDER BY CreationDate DESC"},{"QuerySetId":1284701,"Title":"top 100 tags since july 1","Description":null,"QueryBody":"SELECT Tags, ViewCount, CommentCount, Score, FavoriteCount FROM Posts WHERE CreationDate > '2020-07-01' ORDER BY ViewCount DESC LIMIT 100","CreationDate":"2020-08-24 18:25:40","validated":false,"QueryBody_Original":"SELECT  Top 100 Tags, ViewCount, CommentCount, Score, FavoriteCount From Posts\nWhere CreationDate > '2020-07-01'\nOrder By ViewCount Desc"},{"QuerySetId":1284916,"Title":"Top 5 users from Surat","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%surat%' OR UPPER(Location) LIKE '%SURAT' ORDER BY Reputation DESC LIMIT 50","CreationDate":"2020-12-09 14:27:36","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%surat%'\n    OR UPPER(Location) LIKE '%SURAT'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1285210,"Title":"SELECT * FROM posts WHERE Id < 50000 AND Score >= 5","Description":null,"QueryBody":"SELECT Id, Body, Title, Tags FROM posts WHERE Id < 50000 AND Score >= 5","CreationDate":"2020-08-26 13:12:33","validated":false,"QueryBody_Original":"SELECT  Id, Body, Title, Tags FROM posts WHERE Id < 50000 AND Score >= 5"},{"QuerySetId":1285267,"Title":"select * from Users where Users.Reputation > 10","Description":null,"QueryBody":"SELECT * FROM Users WHERE Users.Reputation > 10","CreationDate":"2020-08-25 22:48:21","validated":false,"QueryBody_Original":"SELECT  * from Users where Users.Reputation > 10"},{"QuerySetId":1286378,"Title":"Most gold badges, using badge class","Description":null,"QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) FROM Badges WHERE Class = 1 GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 100","CreationDate":"2020-08-27 16:05:00","validated":false,"QueryBody_Original":"SELECT  TOP 100 UserId AS [User Link], COUNT(*) \nFROM Badges\nWHERE Class = 1\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":1287355,"Title":"Top Users By Tag and Location","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY SUM(p.score) DESC) AS \"#\", p.OwnerUserId AS \"User Link\", MAX(u.Reputation) AS \"Total Reputation\", SUM(p.score) AS \"Tag Repuation\" FROM Users AS u JOIN Posts AS p ON p.OwnerUserId = u.Id INNER JOIN Posts AS q ON q.id = p.parentid WHERE LOWER(u.Location) LIKE LOWER('%##CountryName##%') AND p.posttypeid = 2 \/* just answers *\/ AND q.tags LIKE LOWER('%<##TagName##>%') GROUP BY p.OwnerUserId ORDER BY SUM(p.score) DESC","CreationDate":"2020-08-27 13:51:36","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY SUM(p.score) DESC) AS [#], \n    p.OwnerUserId AS [User Link], \n    Max(u.Reputation) as [Total Reputation],\n    SUM(p.score) as [Tag Repuation]\nFROM Users u\nJOIN Posts p ON p.OwnerUserId = u.Id\nINNER JOIN Posts q on q.id = p.parentid\nWHERE\n    LOWER(u.Location) LIKE LOWER('%##CountryName##%')\n    AND p.posttypeid = 2 -- just answers\n    AND q.tags like LOWER('%<##TagName##>%')\nGROUP BY p.OwnerUserId\nORDER BY sum(p.score) DESC"},{"QuerySetId":1287682,"Title":"My zero scored, unaccepted answers","Description":"This query return a list of answers which are not yet accepted and scored Zero votes","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Answers.Id) AS \"#\", Answers.Id AS \"Post Link\" FROM Posts AS Qestions INNER JOIN Posts AS Answers ON Answers.ParentId = Qestions.Id WHERE Answers.OwnerUserId = 12578202 AND Answers.Score = 0 AND Qestions.AcceptedAnswerId IS NULL AND NOT Qestions.Id IN (63156884, 63510041, 63413561, 60095510, 63913377, 63943120, 64131842, 64034016, 63629935, 64109840, 58325857, 64602770, 64611388) ORDER BY Answers.CreationDate","CreationDate":"2020-11-03 21:05:00","validated":false,"QueryBody_Original":"SELECT  \n  ROW_NUMBER() over(ORDER BY Answers.Id ASC) as [#],\n  Answers.Id as [Post Link]\nFROM\n\n  Posts Qestions\nINNER JOIN\n  Posts Answers\nON\n  Answers.ParentId = Qestions.Id\nWHERE\n  Answers.OwnerUserId = 12578202\n  and Answers.Score=0\n  and Qestions.AcceptedAnswerId is null\n  and Qestions.Id not in (\n    63156884, 63510041, 63413561, 60095510, 63913377, 63943120, 64131842,\n    64034016, 63629935, 64109840, 58325857, 64602770, 64611388\n    )\nORDER BY Answers.CreationDate ASC\n;"},{"QuerySetId":1287708,"Title":"Ranking of Total Badges with a Breakdown by Gold, Silver, Bronze","Description":"Total badges for each user, as well as a breakdown of non-tag badges by badge type is created for each user.","QueryBody":"SELECT UserId AS \"User Link\", COUNT(*) AS \"Total Badges\", SUM(CASE WHEN Name IN ('Great Question', 'Great Answer', 'Populist') THEN 1 ELSE 0 END) AS \"Gold\", SUM(CASE WHEN Name IN ('Good Question', 'Enlightened', 'Guru', 'Good Answer', 'Necromancer') THEN 1 ELSE 0 END) AS \"Silver\", SUM(CASE WHEN Name IN ('Nice Question', 'Nice Answer', 'Revival') THEN 1 ELSE 0 END) AS \"Bronze\" FROM Badges GROUP BY UserId ORDER BY COUNT(*) DESC LIMIT 2000","CreationDate":"2020-09-21 21:26:34","validated":false,"QueryBody_Original":"SELECT  TOP(2000)\n  UserId AS [User Link],\n  COUNT(*) AS \"Total Badges\",\n  SUM(CASE WHEN Name IN ('Great Question', 'Great Answer', 'Populist') THEN 1 ELSE 0 END) AS \"Gold\",\n  SUM(CASE WHEN Name IN ('Good Question', 'Enlightened', 'Guru', 'Good Answer', 'Necromancer') THEN 1 ELSE 0 END) AS \"Silver\",\n  SUM(CASE WHEN Name IN ('Nice Question', 'Nice Answer', 'Revival') THEN 1 ELSE 0 END) AS \"Bronze\"\nFROM Badges\nGROUP BY UserId\nORDER BY COUNT(*) DESC"},{"QuerySetId":1287912,"Title":"Top 100 User in Faisalabad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%faisalabad%' OR UPPER(Location) LIKE '%Faisalabad' ORDER BY Reputation DESC LIMIT 100","CreationDate":"2020-08-29 09:41:14","validated":false,"QueryBody_Original":"SELECT  TOP 100\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%faisalabad%'\n    OR UPPER(Location) LIKE '%Faisalabad'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1287930,"Title":"Find all posts related to error messages","Description":null,"QueryBody":"SELECT * FROM Posts WHERE STR_POSITION(Title, 'error') > 0 OR STR_POSITION(Title, 'syntax error') > 0 OR STR_POSITION(Title, 'syntaxerror') > 0 OR STR_POSITION(Title, 'exception') > 0","CreationDate":"2020-08-29 16:22:09","validated":false,"QueryBody_Original":"SELECT  * FROM Posts\nWHERE CHARINDEX('error', Title) > 0\nOR CHARINDEX('syntax error', Title) > 0\nOR CHARINDEX('syntaxerror', Title) > 0\nOR CHARINDEX('exception', Title) > 0"},{"QuerySetId":1288874,"Title":"SELECT * FROM posts WHERE Id < 50000 AND Score >= 5 AND Tags IS NOT NULL","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id < 50000 AND Score >= 5 AND NOT Tags IS NULL","CreationDate":"2020-10-01 02:35:53","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE Id < 50000 AND Score >= 5 AND Tags IS NOT NULL"},{"QuerySetId":1289380,"Title":"Find Laravel Experts Near Salt Lake City, UT","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Location, Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('%##Location##%') ORDER BY Reputation DESC","CreationDate":"2020-09-02 11:50:25","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link],\n    Location,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('%##Location##%')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1289418,"Title":"SELECT title, body, tags FROM POSTS WHERE title is not null and body is not null and tags is not nul","Description":null,"QueryBody":"SELECT title, body, tags FROM POSTS WHERE NOT title IS NULL AND NOT body IS NULL AND NOT tags IS NULL AND FavoriteCount > 100","CreationDate":"2020-09-02 16:40:47","validated":false,"QueryBody_Original":"SELECT  title, body, tags\nFROM POSTS\nWHERE title is not null\nand body is not null\nand tags is not null\nand FavoriteCount>100"},{"QuerySetId":1289564,"Title":"Search a user's comments for specific text","Description":null,"QueryBody":"SELECT PostId AS \"Post Link\", * FROM Comments WHERE Userid = '##UserId##' AND Text LIKE '%what happens%'","CreationDate":"2020-09-03 01:14:45","validated":false,"QueryBody_Original":"SELECT  PostId AS [Post Link],* from Comments \nWHERE Userid='##UserId##' AND Text LIKE '%what happens%'"},{"QuerySetId":1290808,"Title":"2019 Posts and Answers Metadata","Description":null,"QueryBody":"SELECT Id, PostTypeId, CreationDate, Score, ViewCount, Tags, AnswerCount, FavoriteCount FROM posts WHERE PostTypeID IN (1, 2) AND YEAR(CreationDate) = 2019","CreationDate":"2020-09-04 00:29:14","validated":false,"QueryBody_Original":"SELECT  \n  Id, PostTypeId, CreationDate, Score,\n  ViewCount, Tags, AnswerCount, FavoriteCount\nFROM posts\nWHERE PostTypeID IN (1,2)\nAND YEAR(CreationDate) = 2019;"},{"QuerySetId":1290887,"Title":">0 scored questions from < 10k users","Description":null,"QueryBody":"SELECT Posts.Title, Posts.Score, Users.DisplayName, Users.Reputation FROM Posts JOIN Users ON Posts.OwnerUserId = Users.Reputation WHERE Posts.Score > 0 AND Users.Reputation < 10000 AND Posts.PostTypeId = 1","CreationDate":"2020-09-04 05:28:35","validated":false,"QueryBody_Original":"SELECT  Posts.Title, Posts.Score, Users.DisplayName, Users.Reputation FROM\nPosts JOIN Users ON\nPosts.OwnerUserId = Users.Reputation\nWHERE Posts.Score > 0 AND\nUsers.Reputation < 10000 AND\nPosts.PostTypeId = 1"},{"QuerySetId":1291628,"Title":"Top SO users from Ecuador","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS Link, DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%melbourne%' OR UPPER(Location) LIKE '%MELBOURNE%' OR Location LIKE '%Melbourne%') ORDER BY Reputation DESC LIMIT 50","CreationDate":"2020-09-06 17:41:24","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS Link, \n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%melbourne%' OR \n    UPPER(Location) LIKE '%MELBOURNE%' OR Location LIKE '%Melbourne%' )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1291947,"Title":"Q2 - How many posts have the exact same number of answers?","Description":null,"QueryBody":"SELECT * FROM Posts WHERE (Title LIKE '%internet of thing%' OR Body LIKE '%internet of thing%') AND YEAR(Posts.CreationDate) BETWEEN 2018 AND 2019","CreationDate":"2020-09-08 22:50:24","validated":false,"QueryBody_Original":"SELECT  * from Posts where (Title like '%internet of thing%' or Body like '%internet of thing%') \nand year(Posts.CreationDate) between 2018 and 2019 ;"},{"QuerySetId":1292187,"Title":"Can the asked question ever get undeleted by a moderator?","Description":"https:\/\/meta.stackoverflow.com\/questions\/401016","QueryBody":"SELECT DISTINCT p.id AS \"Post Link\", CONCAT('site:\/\/posts\/', p.id, '\/timeline|timeline') AS \"timeline\", ph.creationdate FROM posts AS p INNER JOIN posthistory AS ph ON ph.postid = p.id WHERE ph.posthistorytypeid = 13 AND ph.userid = 100297 \/* Martijn *\/ AND ph.creationdate > '2016-01-01' \/* Martijn was elected in 2015 *\/ AND p.owneruserid <> ph.userid \/* not own post *\/ AND p.posttypeid = 1 \/* Q *\/ ORDER BY ph.creationdate DESC","CreationDate":"2020-09-08 10:24:57","validated":false,"QueryBody_Original":"SELECT  distinct \n       p.id as [Post Link]\n     , concat('site:\/\/posts\/', p.id, '\/timeline|timeline') [timeline] \n     , ph.creationdate\nfrom posts p\ninner join posthistory ph on ph.postid = p.id\nwhere ph.posthistorytypeid = 13\nand ph.userid = 100297 -- Martijn\nand ph.creationdate > '2016-01-01' -- Martijn was elected in 2015\nand p.owneruserid <> ph.userid -- not own post\nand p.posttypeid = 1 -- Q \norder by ph.creationdate desc"},{"QuerySetId":1292354,"Title":"Tags containing a given string","Description":null,"QueryBody":"SELECT TagName FROM Tags WHERE Tags.TagName LIKE '%c++%'","CreationDate":"2020-09-08 19:50:32","validated":false,"QueryBody_Original":"SELECT \n  TagName\nFROM\n  Tags\nWHERE\n  Tags.TagName LIKE '%c++%'"},{"QuerySetId":1292510,"Title":"select id from posts where tags like '%<python>%' and tags like '%<string>%'","Description":null,"QueryBody":"SELECT id FROM posts WHERE tags LIKE '%<python>%' AND tags LIKE '%<string>%'","CreationDate":"2020-09-09 06:20:37","validated":false,"QueryBody_Original":"SELECT  id from posts where tags like '%<python>%' and tags like '%<string>%'"},{"QuerySetId":1292844,"Title":"Top 10 Users by Questions Answered","Description":null,"QueryBody":"SELECT u.displayname AS \"user_name\", COUNT(*) AS \"answer_count\" FROM dbo.posts AS \"p\" INNER JOIN dbo.posts AS \"ans\" ON p.acceptedanswerid = ans.id INNER JOIN dbo.users AS \"u\" ON ans.owneruserid = u.id GROUP BY u.displayname ORDER BY 2 DESC LIMIT 10","CreationDate":"2020-09-09 23:46:53","validated":false,"QueryBody_Original":"SELECT  TOP (10) u.displayname as [user_name], \nCOUNT(*) AS [answer_count]\nFROM dbo.posts AS [p] \n  INNER JOIN dbo.posts as [ans]\n    ON p.acceptedanswerid = ans.id\n  INNER JOIN dbo.users as [u]\n    ON ans.owneruserid = u.id\nGROUP BY u.displayname\nORDER BY 2 DESC"},{"QuerySetId":1293192,"Title":"Unique users with post that contain {mhchem}","Description":null,"QueryBody":"SELECT DISTINCT OwnerUserId FROM Posts WHERE \"Body\" LIKE '%{mhchem}%'","CreationDate":"2020-09-10 20:30:03","validated":false,"QueryBody_Original":"SELECT  distinct OwnerUserId from Posts where [Body] like '%{mhchem}%'"},{"QuerySetId":1293437,"Title":"What percentage of closed questions are reopened","Description":null,"QueryBody":"SELECT (SELECT COUNT(*) FROM PostHistory WHERE PostHistoryTypeId = 10) AS closed, (SELECT COUNT(*) FROM PostHistory WHERE PostHistoryTypeId = 11) AS reopened","CreationDate":"2020-09-11 14:17:10","validated":false,"QueryBody_Original":"SELECT \n(SELECT COUNT(*) FROM PostHistory WHERE PostHistoryTypeId = 10) as closed,\n(SELECT COUNT(*) FROM PostHistory WHERE PostHistoryTypeId = 11) as reopened"},{"QuerySetId":1293446,"Title":"How many beamer questions are unanswered?","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Tags FROM Posts WHERE AnswerCount = 0 AND Tags LIKE '<beamer>' ORDER BY CreationDate LIMIT 10","CreationDate":"2020-09-11 15:26:29","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id AS [Post Link], Tags FROM Posts WHERE AnswerCount = 0 AND Tags LIKE '<beamer>' ORDER BY CreationDate ASC"},{"QuerySetId":1293452,"Title":"How many open unanswered Beamer questions are there?","Description":null,"QueryBody":"SELECT COUNT(Id) FROM Posts WHERE AnswerCount = 0 AND Tags LIKE '%<beamer>%' AND ClosedDate IS NULL","CreationDate":"2020-09-11 16:03:24","validated":false,"QueryBody_Original":"SELECT  COUNT(Id) FROM Posts WHERE AnswerCount = 0 AND Tags LIKE '%<beamer>%' AND ClosedDate IS NULL"},{"QuerySetId":1293530,"Title":"Top users from Mashhad, Iran","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE WebsiteUrl = 'abolfazlmohajeri.ir' AND Reputation = 829 ORDER BY Reputation DESC","CreationDate":"2020-09-11 19:43:19","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    WebsiteUrl = 'abolfazlmohajeri.ir'\n    AND Reputation = 829\n\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1293740,"Title":"les technologies Big Data, Machine learning et d'intelligence artificielle avec R et Python","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id < 150000","CreationDate":"2020-09-13 03:29:46","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE Id < 150000"},{"QuerySetId":1293847,"Title":"find posts from Franck with blockquotes and line weirdness","Description":null,"QueryBody":"SELECT id, line, LAG(pos) OVER (PARTITION BY id ORDER BY line) AS \"prev\", LEAD(pos) OVER (PARTITION BY id ORDER BY line) AS \"next\", pos, wlen, value FROM (SELECT ROW_NUMBER() OVER (PARTITION BY id ORDER BY id) AS line, * FROM (SELECT p.id, md.text, STR_POSITION(words.value, '>') AS pos, LENGTH(words.value) AS wlen, words.value FROM posts AS p INNER JOIN users AS u ON u.id = p.owneruserid INNER JOIN (SELECT id, postid, text FROM posthistory AS ph WHERE id = (SELECT MAX(id) FROM posthistory AS phm WHERE posthistorytypeid IN (2, 5, 8) AND phm.postid = ph.postid)) AS md ON md.postid = p.id JOIN LATERAL STRING_SPLIT(md.text, CHAR(10)) AS words WHERE body LIKE '%<blockquote>%' AND u.accountid = 169656) AS data) AS linewords","CreationDate":"2020-09-13 01:39:27","validated":false,"QueryBody_Original":"SELECT  id\n     , line\n     , lag(pos) over( partition by id order by line) [prev]\n     , lead(pos) over( partition by id order by line) [next]\n     , pos\n     , wlen\n     , value\nfrom\n(\nSELECT row_number() over (partition by id order by id) line\n     , *\nfrom\n(\nSELECT p.id \n     , md.text\n     , charindex('>',words.value) pos\n     , len(words.value) wlen\n     , words.value\nfrom posts p\ninner join users u on u.id = p.owneruserid\ninner join (\n  SELECT id, postid, text\n  from posthistory ph\n  where id = (SELECT max(id) \n            from posthistory phm\n            where posthistorytypeid in (2,5,8)\n            and phm.postid = ph.postid)\n) md on md.postid = p.id\ncross apply string_split(md.text, char(10)) words\nwhere body like '%<blockquote>%'\nand u.accountid = 169656 \n) data\n) linewords"},{"QuerySetId":1293866,"Title":"Posts with the most number of comments","Description":null,"QueryBody":"SELECT id AS \"Post Link\", commentcount FROM posts ORDER BY commentcount DESC LIMIT 50","CreationDate":"2020-09-13 05:11:02","validated":false,"QueryBody_Original":"SELECT  TOP 50\nid AS [Post Link], commentcount\nFROM posts\nORDER BY commentcount DESC"},{"QuerySetId":1293928,"Title":"SELECT TOP 10 Id AS [Post Link] FROM Posts ORDER BY CreationDate DESC","Description":null,"QueryBody":"SELECT Id AS \"Post Link\" FROM Posts ORDER BY CreationDate DESC LIMIT 10","CreationDate":"2020-09-13 15:22:51","validated":false,"QueryBody_Original":"SELECT  TOP 10 Id AS [Post Link] FROM Posts ORDER BY CreationDate DESC"},{"QuerySetId":1293993,"Title":"Posts Per Month Per Year #1","Description":null,"QueryBody":"SELECT TIME_TO_STR(CreationDate, '%Y') AS year, TIME_TO_STR(CreationDate, '%B') AS month, TIME_TO_STR(CreationDate, '%m') AS month_part, COUNT(*) AS post_count, 100.0 * COUNT(*) \/ SUM(COUNT(*)) OVER () AS post_percentage \/* COUNT(*) \/ SUM(COUNT(*))  AS post_percent *\/ FROM Posts GROUP BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m'), TIME_TO_STR(CreationDate, '%B') ORDER BY TIME_TO_STR(CreationDate, '%Y'), TIME_TO_STR(CreationDate, '%m'), TIME_TO_STR(CreationDate, '%B')","CreationDate":"2020-09-13 22:36:17","validated":false,"QueryBody_Original":"SELECT \n  DATENAME(year, CreationDate) AS year,\n  DATENAME(month, CreationDate) AS month,\n  DATEPART(month, CreationDate) AS month_part,\n  COUNT(*) AS post_count,\n  100.0 * COUNT(*) \/ SUM(COUNT(*)) OVER() AS post_percentage\n  --COUNT(*) \/ SUM(COUNT(*))  AS post_percent\n\nFROM\n  Posts\n\nGROUP BY\n  DATENAME(year, CreationDate),\n  DATEPART(month, CreationDate),\n  DATENAME(month, CreationDate)\n\nORDER BY\n  DATENAME(year, CreationDate),\n  DATEPART(month, CreationDate),\n  DATENAME(month, CreationDate)\n;"},{"QuerySetId":1295040,"Title":"Get Users Who Accept Answers","Description":null,"QueryBody":"SELECT u.Id, SUM(CASE WHEN (q.AcceptedAnswerId = a.Id) THEN 1 END) AS number_accepted, COUNT(DISTINCT (q.Id)) AS total_number FROM Users AS u INNER JOIN Posts AS q ON (q.OwnerUserId = u.Id AND q.PostTypeId = 1 AND u.CreationDate > '2020-01-01') INNER JOIN Posts AS a ON (a.ParentId = q.Id) GROUP BY u.Id ORDER BY total_number DESC","CreationDate":"2020-09-17 14:22:58","validated":false,"QueryBody_Original":"SELECT  u.Id, \n  SUM(CASE WHEN (q.AcceptedAnswerId = a.Id) THEN 1 END) as number_accepted,\n  COUNT(DISTINCT(q.Id)) as total_number\nFROM Users u\nINNER JOIN Posts q\nON (\n  q.OwnerUserId = u.Id AND\n  q.PostTypeId = 1 AND\n  u.CreationDate > '2020-01-01'\n)\nINNER JOIN Posts a\nON (\n  a.ParentId = q.Id\n)\nGROUP BY u.Id\nORDER BY total_number DESC;"},{"QuerySetId":1295226,"Title":"Search for users by rep and location","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User_ID\", (CASE WHEN DisplayName LIKE '%arbar%zha%' THEN '[| ' + DisplayName + ' |]' ELSE DisplayName END) AS DisplayName, Reputation, Location FROM Users WHERE (LOWER(Location) LIKE '%portland, or%' OR LOWER(Location) LIKE '%porlland, oregon%') ORDER BY Reputation DESC LIMIT 250","CreationDate":"2020-09-16 23:42:34","validated":false,"QueryBody_Original":"SELECT  TOP 250\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id as [User_ID], \n    (case when DisplayName LIKE '%arbar%zha%' then \n      '[| '+DisplayName+' |]'\n     else\n       DisplayName\n     end\n     ) as\n    DisplayName,\n    Reputation,\n    Location\nFROM\n    Users\nWHERE\n    (LOWER(Location) LIKE '%portland, or%' OR\n     LOWER(Location) LIKE '%porlland, oregon%' \n    )\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1295315,"Title":"Comments including the word \"edited\"","Description":null,"QueryBody":"SELECT CreationDate, id AS \"Comment Link\" FROM Comments WHERE LOWER(text) LIKE '%edited%' AND CreationDate >= '2019-01-01' ORDER BY LENGTH(text) LIMIT 1000","CreationDate":"2020-09-23 16:17:36","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  CreationDate, id AS [Comment Link]\nFROM\n  Comments\nWHERE\n  LOWER(text) LIKE '%edited%'\n  AND CreationDate >= '2019-01-01'\nORDER BY LEN(text) ASC"},{"QuerySetId":1295752,"Title":"How to create an Image file from dataURL and save it?","Description":null,"QueryBody":"SELECT Ans.CreationDate, Qus.Tags, Qus.Title, Qus.ViewCount, Ans.Score, Ans.ID, Qus.AcceptedAnswerId FROM Posts AS Qus LEFT JOIN Posts AS Ans ON Qus.ID = Ans.ParentID WHERE Ans.OwnerUserId = 5720148 ORDER BY Ans.CreationDate DESC","CreationDate":"2020-09-18 15:06:45","validated":false,"QueryBody_Original":"SELECT  \n    Ans.CreationDate, Qus.Tags, Qus.Title, Qus.ViewCount,\n    Ans.Score, Ans.ID, Qus.AcceptedAnswerId\nFROM Posts as Qus\nLEFT JOIN Posts as Ans\nON Qus.ID = Ans.ParentID\nWHERE Ans.OwnerUserId = 5720148\nORDER BY Ans.CreationDate DESC"},{"QuerySetId":1295988,"Title":"Find questions with specific text (2 strings)","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%Y') AS \"year\", COUNT(*) AS \"# questions\" FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.Body LIKE '%##SpecifiedText##%' AND p.Body LIKE '%##SpecifiedText2##%' AND p.PostTypeId = 1 \/* Questions *\/ GROUP BY TIME_TO_STR(p.CreationDate, '%Y') ORDER BY year DESC","CreationDate":"2020-09-19 04:31:45","validated":false,"QueryBody_Original":"SELECT  \n  DATEPART(year, p.CreationDate) AS \"year\",\n  COUNT(*) AS \"# questions\"\nFROM Posts p\n  JOIN Users u ON u.Id = p.OwnerUserId\nWHERE p.Body LIKE '%##SpecifiedText##%'\n  AND p.Body LIKE '%##SpecifiedText2##%'\n  AND p.PostTypeId = 1 -- Questions\nGROUP BY DATEPART(year, p.CreationDate)\nORDER BY year DESC"},{"QuerySetId":1295999,"Title":"Count questions with specific text","Description":null,"QueryBody":"SELECT TIME_TO_STR(p.CreationDate, '%Y') AS \"year\", COUNT(*) AS \"# questions\" FROM Posts AS p JOIN Users AS u ON u.Id = p.OwnerUserId WHERE p.Body LIKE '%##SpecifiedText##%' AND p.PostTypeId = 1 \/* Questions *\/ GROUP BY TIME_TO_STR(p.CreationDate, '%Y') ORDER BY year DESC","CreationDate":"2020-09-19 04:45:38","validated":false,"QueryBody_Original":"SELECT  \n  DATEPART(year, p.CreationDate) AS \"year\",\n  COUNT(*) AS \"# questions\"\nFROM Posts p\n  JOIN Users u ON u.Id = p.OwnerUserId\nWHERE p.Body LIKE '%##SpecifiedText##%'\n  AND p.PostTypeId = 1 -- Questions\nGROUP BY DATEPART(year, p.CreationDate)\nORDER BY year DESC"},{"QuerySetId":1296007,"Title":"Help Vampires - Users who amass reputation by asking questions, not posting answers.","Description":null,"QueryBody":"SELECT U.Id AS UserId, U.DisplayName AS DisplayName, U.Reputation AS Reputation, SUM(CASE WHEN P.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions, SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers FROM Users AS U INNER JOIN Posts AS P ON \/* A reputation of at least 25000. *\/ P.OwnerUserId = U.Id AND P.PostTypeId IN (1, 2) WHERE U.Reputation >= 25000 GROUP BY U.Id, U.DisplayName, U.Reputation HAVING SUM(CASE WHEN P.PostTypeId = 1 THEN 1 ELSE 0 END) >= 200 AND SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) <= 5 ORDER BY U.Reputation DESC","CreationDate":"2020-11-09 23:05:58","validated":false,"QueryBody_Original":"SELECT  U.Id as UserId, U.DisplayName as DisplayName, U.Reputation as Reputation,\n  Sum( case when P.PostTypeId = 1 then 1 else 0 end ) as Questions,\n  Sum( case when P.PostTypeId = 2 then 1 else 0 end ) as Answers\n  from Users as U inner join\n    Posts as P on P.OwnerUserId = U.Id and P.PostTypeId in ( 1, 2 )\n  -- A reputation of at least 25000.\n  where U.Reputation >= 25000\n  group by U.Id, U.DisplayName, U.Reputation\n  having\n    -- Asked at least 200 questions and ...\n    Sum( case when P.PostTypeId = 1 then 1 else 0 end ) >= 200 and\n    -- ... contributed no more than 5 answers.\n    Sum( case when P.PostTypeId = 2 then 1 else 0 end ) <= 5\n  order by U.Reputation desc"},{"QuerySetId":1296224,"Title":"Migrations from Arqade to SU","Description":null,"QueryBody":"SELECT MigratedPosts.Id AS \"Post Link\", MigrationHistory.CreationDate AS DateMigrated, CloseHistory.CreationDate AS DateClosed, MigrationHistory.Comment AS OriginalUrl, CASE WHEN CloseHistory.PostHistoryTypeID = 10 THEN 'Rejected' ELSE '' END AS \"Migration Status\" FROM Posts AS MigratedPosts JOIN Posts AS ClosedPosts ON ClosedPosts.Id = MigratedPosts.Id JOIN PostHistory AS MigrationHistory ON MigrationHistory.PostId = MigratedPosts.Id LEFT JOIN PostHistory AS CloseHistory ON CloseHistory.PostId = ClosedPosts.Id AND CloseHistory.PostHistoryTypeID = 10 WHERE MigrationHistory.PostHistoryTypeId = 36 \/* Migrated Here *\/ AND MigratedPosts.PostTypeID = 1 \/* Question *\/ AND MigrationHistory.Comment LIKE 'from http:\/\/gaming.stackexchange.com%' \/* From Arqade *\/ ORDER BY MigrationHistory.CreationDate","CreationDate":"2020-09-20 10:51:52","validated":false,"QueryBody_Original":"SELECT  MigratedPosts.Id AS [Post Link], \nMigrationHistory.CreationDate AS DateMigrated,\nCloseHistory.CreationDate AS DateClosed,\nMigrationHistory.Comment AS OriginalUrl,\nCASE WHEN CloseHistory.PostHistoryTypeID = 10 THEN 'Rejected' ELSE '' END AS [Migration Status]\nFROM Posts AS MigratedPosts\nJOIN Posts AS ClosedPosts ON ClosedPosts.Id = MigratedPosts.Id\nJOIN PostHistory AS MigrationHistory ON MigrationHistory.PostId = MigratedPosts.Id\nLEFT JOIN PostHistory AS CloseHistory ON CloseHistory.PostId = ClosedPosts.Id AND CloseHistory.PostHistoryTypeID = 10\nWHERE MigrationHistory.PostHistoryTypeId = 36 -- Migrated Here\n  AND MigratedPosts.PostTypeID = 1 -- Question\nAND MigrationHistory.Comment LIKE 'from http:\/\/gaming.stackexchange.com%' -- From Arqade\nORDER BY MigrationHistory.CreationDate"},{"QuerySetId":1296465,"Title":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432","Description":null,"QueryBody":"SELECT pu.OwnerUserId AS \"User Link\", pu.TotalCount, pu.PopularCount, pu.PopularCount * 1.0 \/ pu.TotalCount AS PopularRatio FROM (SELECT p.OwnerUserId, COUNT(1) AS TotalCount, SUM(CASE WHEN p.ViewCount >= 1000 THEN 1 ELSE 0 END) AS PopularCount FROM Posts AS p WHERE p.PostTypeId = 1 \/* Questions *\/ GROUP BY p.OwnerUserId HAVING COUNT(1) >= 10) AS pu WHERE pu.PopularCount > 0 ORDER BY PopularRatio DESC","CreationDate":"2020-09-21 01:05:09","validated":false,"QueryBody_Original":"SELECT  pu.OwnerUserId AS [User Link],\n       pu.TotalCount,\n       pu.PopularCount,\n       pu.PopularCount*1.0\/pu.TotalCount AS PopularRatio\nFROM\n  (SELECT p.OwnerUserId,\n          count(1) AS TotalCount,\n          sum(CASE\n                  WHEN p.ViewCount>=1000 THEN 1\n                  ELSE 0\n              END) AS PopularCount\n   FROM Posts p\n   WHERE p.PostTypeId = 1 --Questions\n   GROUP BY p.OwnerUserId\n   HAVING count(1) >= 10) pu\nWHERE pu.PopularCount>0\nORDER BY PopularRatio DESC"},{"QuerySetId":1296724,"Title":"Questions with the most upvotes\/downvotes and a score of 0","Description":null,"QueryBody":"SELECT * FROM Posts WHERE Score = 0 ORDER BY ViewCount DESC \/* As far as I can tell, there's no way to get the number of upvotes\/downvotes, so let's use ViewCount *\/ LIMIT 50","CreationDate":"2020-09-22 00:36:54","validated":false,"QueryBody_Original":"SELECT  TOP 50 * FROM Posts WHERE\nScore = 0\nORDER BY ViewCount DESC \/* As far as I can tell, there's no way to get the number of upvotes\/downvotes, so let's use ViewCount *\/"},{"QuerySetId":1297151,"Title":"SELECT * FROM posts WHERE Id < 50000","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id < 50000","CreationDate":"2020-09-23 02:37:16","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE Id < 50000"},{"QuerySetId":1297242,"Title":"Top SO users from Algeria","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%bangla%' OR UPPER(Location) LIKE '%BANGLA%' ORDER BY Reputation DESC","CreationDate":"2020-09-23 14:07:39","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%bangla%' OR \n    UPPER(Location) LIKE '%BANGLA%' \nORDER BY\n    Reputation DESC;"},{"QuerySetId":1297290,"Title":"Comments including the word \"fixed\"","Description":null,"QueryBody":"SELECT CreationDate, id AS \"Comment Link\" FROM Comments WHERE LOWER(text) LIKE '%fixed%' AND CreationDate >= '2018-01-01' ORDER BY LENGTH(text) LIMIT 1000","CreationDate":"2020-09-23 16:20:52","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  CreationDate, id AS [Comment Link]\nFROM\n  Comments\nWHERE\n  LOWER(text) LIKE '%fixed%'\n  AND CreationDate >= '2018-01-01'\nORDER BY LEN(text) ASC"},{"QuerySetId":1297291,"Title":"TOP SO user from Poland","Description":null,"QueryBody":"SELECT T.* FROM (SELECT ROW_NUMBER() OVER (PARTITION BY Location ORDER BY Reputation DESC) AS Pos, Id AS \"User Link\", Reputation, Location FROM Users WHERE LOWER(Location) LIKE '%poland%' AND Reputation > 1000) AS T WHERE T.Pos BETWEEN 1 AND 10 ORDER BY T.Location, T.Reputation DESC","CreationDate":"2020-09-23 16:21:19","validated":false,"QueryBody_Original":"SELECT  T.*\nFROM \n(\n  SELECT ROW_NUMBER() OVER(PARTITION BY Location ORDER BY Reputation DESC) AS Pos,\n    Id As [User Link],\n    Reputation,\n    Location\n  FROM Users \n  WHERE LOWER(Location) Like '%poland%'  AND \n    Reputation >1000\n) T\nWHERE T.Pos BETWEEN 1 AND 10\nORDER BY T.Location ASC, T.Reputation DESC"},{"QuerySetId":1297576,"Title":" Comments including the word \"country\"","Description":null,"QueryBody":"SELECT CreationDate, id AS \"Comment Link\" FROM Comments WHERE LOWER(text) LIKE '%country%' AND CreationDate >= '2018-01-01' ORDER BY LENGTH(text) LIMIT 1000","CreationDate":"2020-09-24 04:50:58","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  CreationDate, id AS [Comment Link]\nFROM\n  Comments\nWHERE\n  LOWER(text) LIKE '%country%'\n  AND CreationDate >= '2018-01-01'\nORDER BY LEN(text) ASC"},{"QuerySetId":1297956,"Title":"most number of comments on a single post","Description":null,"QueryBody":"SELECT * FROM Comments","CreationDate":"2020-09-24 19:32:45","validated":false,"QueryBody_Original":"SELECT  * FROM Comments"},{"QuerySetId":1298438,"Title":"Very short answers with high score","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Body, Score FROM Posts WHERE LENGTH(Body) < 256 AND Score > 5 AND PostTypeId = 2","CreationDate":"2020-09-25 17:45:11","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Body, Score FROM Posts\n    WHERE Len(Body) < 256 AND Score > 5 AND PostTypeId = 2"},{"QuerySetId":1298882,"Title":"Length of a given user's comments","Description":null,"QueryBody":"SELECT COUNT(c.Id) AS \"# comments\", c.UserId AS \"User Link\" FROM Comments AS c WHERE LENGTH(c.Text) = 600 GROUP BY c.UserId ORDER BY COUNT(c.Id) DESC","CreationDate":"2020-09-26 21:29:49","validated":false,"QueryBody_Original":"SELECT \n  COUNT(c.Id) AS \"# comments\",\n  c.UserId AS [User Link]\nFROM Comments c\nWHERE LEN(c.Text) = 600\nGROUP BY c.UserId\nORDER BY COUNT(c.Id) DESC"},{"QuerySetId":1299064,"Title":"Questions answered by Lippert and Skeet","Description":null,"QueryBody":"SELECT p1.id AS \"Post Link\", p1.Score, p1.CreationDate FROM posts AS p1 WHERE p1.posttypeid = 1 AND p1.id IN (SELECT p2.parentid FROM posts AS p2 WHERE p2.posttypeid = 2 AND p2.owneruserid = 22656 INTERSECT SELECT p3.parentid FROM posts AS p3 WHERE p3.posttypeid = 2 AND p3.owneruserid = 88656)","CreationDate":"2020-09-27 03:19:58","validated":false,"QueryBody_Original":"SELECT  p1.id as [Post Link], p1.Score, p1.CreationDate\nfrom posts p1\nwhere p1.posttypeid = 1 AND\n      p1.id in\n      (SELECT p2.parentid\n       from posts p2\n       where p2.posttypeid = 2\n       and p2.owneruserid = 22656\n       intersect\n       SELECT p3.parentid\n       from posts p3\n       where p3.posttypeid = 2\n       and p3.owneruserid = 88656)"},{"QuerySetId":1300346,"Title":"Gieco Max Number of Comments for a Single Post","Description":null,"QueryBody":"SELECT Id, CommentCount FROM Posts ORDER BY CommentCount DESC LIMIT 1","CreationDate":"2020-09-28 15:38:53","validated":false,"QueryBody_Original":"SELECT  TOP 1 Id, CommentCount\nFROM Posts\nORDER BY CommentCount DESC"},{"QuerySetId":1300479,"Title":"Posts where the title contains the given string","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Title FROM Posts WHERE Title LIKE '%##text?he##%' ORDER BY Id DESC","CreationDate":"2020-09-28 19:40:07","validated":false,"QueryBody_Original":"SELECT \n  Id AS [Post Link],\n  Title\nFROM Posts\nWHERE Title LIKE '%##text?he##%'\nORDER BY Id DESC"},{"QuerySetId":1301442,"Title":"What is the most number of comments on a single post?","Description":null,"QueryBody":"SELECT COUNT(c.Id) AS TotalNoComments, p.Id AS Posts_id FROM Posts AS p INNER JOIN Comments AS c ON (p.Id = c.Id) GROUP BY p.Id ORDER BY TotalNoComments DESC","CreationDate":"2020-09-29 04:58:13","validated":false,"QueryBody_Original":"SELECT  COUNT(c.Id) as TotalNoComments, p.Id as Posts_id\nFrom Posts as p\nInner join Comments as c\non (p.Id=c.Id)\nGroup by p.Id\nOrder by TotalNoComments desc"},{"QuerySetId":1301772,"Title":"Titles containing the slash character","Description":null,"QueryBody":"SELECT Title FROM Posts WHERE Title LIKE '%\/%'","CreationDate":"2020-09-29 09:31:18","validated":false,"QueryBody_Original":"SELECT  Title From Posts Where Title like '%\/%'"},{"QuerySetId":1302934,"Title":"Top 20 most generous users: bounties awarded","Description":null,"QueryBody":"SELECT Users.Id AS \"User Link\", Users.DisplayName, Users.Reputation, (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) AS TotalBountiesAwarded FROM Users\/* exclude Community and sin binned users *\/ \/* minimum amount here to qualify for this? *\/  WHERE (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) > 0 \/* ensure a bounty has been awarded *\/ AND Users.Reputation > 50 ORDER BY TotalBountiesAwarded DESC LIMIT 120","CreationDate":"2020-09-30 19:05:54","validated":false,"QueryBody_Original":"SELECT \n  TOP(120)\n  Users.Id [User Link],\n  Users.DisplayName,\n  Users.Reputation,\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) as TotalBountiesAwarded\nFROM Users\nWHERE\n  (SELECT SUM(BountyAmount) FROM Votes WHERE Votes.UserId = Users.Id) > 0 -- ensure a bounty has been awarded\n  -- exclude Community and sin binned users\n  -- minimum amount here to qualify for this?\n  AND Users.Reputation > 50 \nORDER BY \n  TotalBountiesAwarded DESC"},{"QuerySetId":1303321,"Title":"Posts that link to otcmarkets.com","Description":null,"QueryBody":"SELECT CreationDate, id AS \"Post Link\" FROM Posts WHERE LOWER(body) LIKE '%.com%' AND CreationDate >= '2010-12-30' AND CreationDate <= '2010-01-01' ORDER BY CreationDate DESC","CreationDate":"2020-11-03 04:27:26","validated":false,"QueryBody_Original":"SELECT \n  CreationDate, id AS [Post Link]\nFROM\n  Posts\nWHERE\n  LOWER(body) LIKE '%.com%'\n  and CreationDate >= '2010-12-30'\n  AND CreationDate <= '2010-01-01'\nORDER BY CreationDate DESC"},{"QuerySetId":1303528,"Title":" What % of CLOSED questions are later edited? (Monthly, excluding User 'Community')","Description":"re: https:\/\/meta.stackoverflow.com\/questions\/371910\/why-did-questions-stop-getting-edited-after-closing-in-2013","QueryBody":"SELECT LAST_DATE_OF_MONTH(closeddate) AS ClosedYear, 1.0 \/* format(count(*),'#,##0') as [#ClosedQuestions],\n  format(1.0*sum(Score)\/count(*),'0.0') as [Avg Score],\n  format(sum(case when not lasteditdate is null then 1 else 0 end),'#,##0') as [#Edited],\n  format(sum(case when lasteditdate>closeddate then 1 else 0 end),'#,##0') as [#Edited After Close],\n *\/ * SUM(CASE WHEN lasteditdate > closeddate THEN 1 ELSE 0 END) \/ COUNT(*) AS \"%Edit After Close\" FROM posts WHERE NOT closeddate IS NULL AND posttypeid = 1 AND owneruserid = -1 GROUP BY LAST_DATE_OF_MONTH(closeddate) ORDER BY LAST_DATE_OF_MONTH(closeddate)","CreationDate":"2020-10-01 14:02:43","validated":false,"QueryBody_Original":"SELECT  \n  eomonth(closeddate) as ClosedYear,\n  \/*format(count(*),'#,##0') as [#ClosedQuestions],\n  format(1.0*sum(Score)\/count(*),'0.0') as [Avg Score],\n  format(sum(case when not lasteditdate is null then 1 else 0 end),'#,##0') as [#Edited],\n  format(sum(case when lasteditdate>closeddate then 1 else 0 end),'#,##0') as [#Edited After Close],\n *\/ 1.0*sum(case when lasteditdate>closeddate then 1 else 0 end) \/ count(*) as [%Edit After Close]\nfrom posts\nwhere closeddate is not null and posttypeid=1 and owneruserid=-1\ngroup by eomonth(closeddate)\norder by eomonth(closeddate)"},{"QuerySetId":1303545,"Title":"select * from votes ","Description":null,"QueryBody":"SELECT * FROM votes","CreationDate":"2020-10-01 14:48:49","validated":false,"QueryBody_Original":"SELECT  * from votes"},{"QuerySetId":1303685,"Title":"Posts that link to reddit.com","Description":null,"QueryBody":"SELECT CreationDate, id AS \"Post Link\" FROM Posts WHERE LOWER(body) LIKE '%reddit.com%' OR LOWER(body) LIKE '%redd.it%' ORDER BY CreationDate DESC LIMIT 1000","CreationDate":"2020-10-01 18:22:37","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  CreationDate, id AS [Post Link]\nFROM\n  Posts\nWHERE\n  LOWER(body) LIKE '%reddit.com%'\n  OR LOWER(body) LIKE '%redd.it%'\nORDER BY CreationDate DESC"},{"QuerySetId":1303929,"Title":"Votes per post over the years ","Description":"Development of votes per posts over the years, with a separate analysis of votes on current and on old posts","QueryBody":"SELECT * FROM (SELECT Year, PostsInYear, SUM(PostsInYear) OVER (ORDER BY Year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CumulativePosts FROM (SELECT YEAR(Posts.CreationDate) AS Year, COUNT(*) AS PostsInYear FROM Posts GROUP BY YEAR(CreationDate)) AS PostsPerYear) AS PostsOverYears","CreationDate":"2020-10-01 22:05:33","validated":false,"QueryBody_Original":"SELECT  * \nFROM\n  ( SELECT  \n   Year,\n   PostsInYear,\n   SUM (PostsInYear) \n     OVER(ORDER BY Year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) \n     AS CumulativePosts\n  FROM (\n    SELECT \n      YEAR(Posts.CreationDate) AS Year,\n      COUNT(*) PostsInYear\n    FROM Posts\n    GROUP BY YEAR(CreationDate) \n  ) PostsPerYear\n) PostsOverYears"},{"QuerySetId":1304010,"Title":"             SELECT u.Id AS [User Link],                             CONCAT('https:\/\/stackoverflow.c","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.DisplayName, u.Location, u.WebsiteUrl, u.AboutMe, u.Views, u.UpVotes, u.DownVotes FROM Users AS u WHERE LOWER(Location) LIKE '%nizhniy novgorod%'","CreationDate":"2020-10-02 00:12:35","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link],\n                            CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link],\n                            u.DisplayName,\n                            u.Location,\n                            u.WebsiteUrl,\n                            u.AboutMe,\n                            u.Views,\n                            u.UpVotes,\n                            u.DownVotes\n             FROM Users u\n        \n             WHERE LOWER(Location) LIKE '%nizhniy novgorod%'"},{"QuerySetId":1304649,"Title":"all comments with the word thank in them","Description":null,"QueryBody":"SELECT c.id AS \"Comment Link\" FROM comments AS c INNER JOIN posts AS p ON p.id = c.postid INNER JOIN posts AS q ON q.id = p.parentid WHERE text = 'Thank you for your answer.' AND p.posttypeid = 2 \/* A *\/","CreationDate":"2020-10-12 10:58:13","validated":false,"QueryBody_Original":"SELECT  c.id as [Comment Link]\nfrom comments c\ninner join posts p on p.id = c.postid\ninner join posts q on q.id = p.parentid\nwhere text = 'Thank you for your answer.'\nand p.posttypeid = 2 -- A"},{"QuerySetId":1304928,"Title":"Votes on deleted posts by year","Description":null,"QueryBody":"SELECT COUNT(*) FROM Votes WHERE PostId IS NULL","CreationDate":"2020-10-03 21:27:07","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom Votes\nwhere PostId is null"},{"QuerySetId":1304982,"Title":"How many posts have the exact same number of answers","Description":null,"QueryBody":"SELECT acceptedanswerid FROM posts WHERE NOT acceptedanswerid IS NULL","CreationDate":"2020-11-01 01:07:20","validated":false,"QueryBody_Original":"SELECT  acceptedanswerid from posts\nwhere acceptedanswerid is not null"},{"QuerySetId":1305518,"Title":"average score of popular questions","Description":"prints the average score and view count of questions that have been awarded the popular question badge but not the notable question badge (between 1000 and 2500 views)","QueryBody":"SELECT AVG(Score + 0.0) AS \"average score\", AVG(ViewCount + 0.0) AS \"average view count\" FROM Posts WHERE ParentId IS NULL AND ViewCount >= 1000 AND ViewCount < 2500","CreationDate":"2020-10-05 09:48:31","validated":false,"QueryBody_Original":"SELECT  AVG(Score+0.0) AS 'average score', AVG(ViewCount+0.0) AS 'average view count'\n  FROM Posts\n  WHERE ParentId IS NULL AND ViewCount>=1000 AND ViewCount<2500"},{"QuerySetId":1306483,"Title":"Select those with similar reputation","Description":null,"QueryBody":"SELECT Reputation, DisplayName, Location, AccountId FROM Users WHERE Reputation > 1540 AND Reputation < 1560 ORDER BY Reputation","CreationDate":"2020-12-06 09:24:35","validated":false,"QueryBody_Original":"SELECT  Reputation, DisplayName, Location, AccountId from Users where Reputation > 1540 and Reputation < 1560 order by Reputation;"},{"QuerySetId":1306588,"Title":"Sources and edits with <i>","Description":null,"QueryBody":"\/* TOP 100 *\/ SELECT PostHistoryTypeId, PostId AS \"Post Link\", CreationDate, Comment, Text FROM PostHistory WHERE PostHistoryTypeId IN (2, 5) AND Text LIKE '%<i>%' ORDER BY CreationDate DESC","CreationDate":"2020-10-07 14:22:21","validated":false,"QueryBody_Original":"SELECT  --TOP 100\n  PostHistoryTypeId,\n  PostId AS [Post Link],\n  CreationDate,\n  Comment,\n  Text\nFROM PostHistory\nWHERE PostHistoryTypeId IN (2,5)\n  AND Text LIKE '%<i>%'\nORDER BY CreationDate DESC"},{"QuerySetId":1306602,"Title":"Questions eligible for APL bounty by Bubbler","Description":null,"QueryBody":"SELECT Q.Id AS \"Post Link\", Q.Score, Q.AnswerCount FROM Posts AS Q WHERE Q.AnswerCount = 1 ORDER BY Q.Score DESC","CreationDate":"2020-10-07 14:42:20","validated":false,"QueryBody_Original":"SELECT  Q.Id AS [Post Link], Q.Score, Q.AnswerCount\n  FROM Posts Q\n  WHERE\n  Q.AnswerCount = 1\n  ORDER BY Q.Score DESC"},{"QuerySetId":1307065,"Title":"Questions deleted the longest time","Description":null,"QueryBody":"SELECT * FROM PostHistory WHERE PostId = 13384","CreationDate":"2020-10-08 13:49:52","validated":false,"QueryBody_Original":"SELECT  * FROM PostHistory WHERE PostId = 13384;\nSELECT * FROM PostHistoryTypes;"},{"QuerySetId":1307450,"Title":"Top 50 users from Rajkot","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%pune%' OR UPPER(Location) LIKE '%PUNE' ORDER BY Reputation DESC LIMIT 500","CreationDate":"2020-12-10 20:34:32","validated":false,"QueryBody_Original":"SELECT  TOP 500\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%pune%'\n    OR UPPER(Location) LIKE '%PUNE'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1307838,"Title":"Get all tag excerpts that aren't empty","Description":null,"QueryBody":"SELECT t.TagName AS \"Tag Name\", p.Body AS \"Wiki Excerpt\" FROM Tags AS t JOIN Posts AS p ON t.ExcerptPostId = p.Id WHERE p.Body <> '' ORDER BY t.TagName","CreationDate":"2020-10-10 02:04:03","validated":false,"QueryBody_Original":"SELECT  t.TagName AS 'Tag Name', \np.Body AS 'Wiki Excerpt'\n\nFROM Tags t\nJOIN Posts p ON t.ExcerptPostId = p.Id\n\nWHERE p.Body <> ''\n\nORDER BY t.TagName ASC"},{"QuerySetId":1307841,"Title":"Get All Non-Empty Tag Excerpts","Description":null,"QueryBody":"SELECT t.TagName AS \"Tag Name\", p.Body AS \"Wiki Excerpt\" FROM Tags AS t JOIN Posts AS p ON t.ExcerptPostId = p.Id WHERE p.Body <> '' ORDER BY t.TagName","CreationDate":"2020-10-10 02:04:29","validated":false,"QueryBody_Original":"SELECT  t.TagName AS 'Tag Name', \np.Body AS 'Wiki Excerpt'\n\nFROM Tags t\nJOIN Posts p ON t.ExcerptPostId = p.Id\n\nWHERE p.Body <> ''\n\nORDER BY t.TagName ASC"},{"QuerySetId":1307997,"Title":"\u0423 \u0441\u043a\u043e\u043b\u044c\u043a\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u0438\u043c\u0435\u043d\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \u201cJohn\u201d \u0438\u043b\u0438 \u201cIvan\u201d","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users WHERE displayName LIKE '%John%' OR displayName LIKE '%Ivan%'","CreationDate":"2020-10-10 19:48:23","validated":false,"QueryBody_Original":"SELECT  count(*) from Users where displayName like '%John%' or displayName like '%Ivan%'"},{"QuerySetId":1308213,"Title":"the most number of comments on a single post","Description":null,"QueryBody":"SELECT p.id AS post_id, COUNT(c.id) AS comments_count FROM posts AS p JOIN comments AS c ON p.id = c.postid GROUP BY p.id ORDER BY 2 DESC LIMIT 1","CreationDate":"2020-10-11 09:10:57","validated":false,"QueryBody_Original":"SELECT  TOP 1 p.id as post_id\n, count(c.id) as comments_count\nfrom posts p \njoin comments c\non p.id=c.postid\ngroup by p.id\norder by 2 desc"},{"QuerySetId":1308317,"Title":"Most number of comments on a single post","Description":null,"QueryBody":"SELECT c.score AS Highest_Score, c.id AS Comments_Id, p.id AS Post_Id, p.Title, p.Body, c.Text, p.LastActivityDate FROM comments AS c JOIN posts AS p ON p.id = c.postid WHERE c.score = (SELECT MAX(score) FROM comments) ORDER BY p.lastactivitydate DESC","CreationDate":"2020-10-11 09:32:12","validated":false,"QueryBody_Original":"SELECT  c.score as Highest_Score\n, c.id as Comments_Id\n,p.id as Post_Id\n,p.Title\n,p.Body\n,c.Text\n,p.LastActivityDate\nfrom comments c join posts p\non p.id=c.postid\nwhere c.score = (SELECT max (score) from comments)\norder by p.lastactivitydate desc"},{"QuerySetId":1308788,"Title":"\"thank you for your answer\" comments","Description":null,"QueryBody":"SELECT id AS \"Comment Link\" FROM comments WHERE text = 'Thank you for your answer.'","CreationDate":"2020-10-30 16:08:37","validated":false,"QueryBody_Original":"SELECT  id as [Comment Link] \nfrom comments\nwhere text = 'Thank you for your answer.'"},{"QuerySetId":1309023,"Title":"Users with X Rep as Percentage of All Users","Description":null,"QueryBody":"SELECT COUNT(u.Id) AS \"Total Users\", COUNT(CASE WHEN u.Reputation < 2 THEN 1 ELSE NULL END) \/ CAST(COUNT(u.Id) AS FLOAT) AS \"<=1 Rep\", COUNT(CASE WHEN u.Reputation > 1 THEN 1 ELSE NULL END) \/ CAST(COUNT(u.Id) AS FLOAT) AS \">1 Rep\" FROM Users AS u","CreationDate":"2020-10-12 21:04:37","validated":false,"QueryBody_Original":"SELECT \nCOUNT(u.Id) AS 'Total Users',\nCOUNT(CASE WHEN u.Reputation < 2 THEN 1 ELSE NULL END) \/ CAST(COUNT(u.Id) AS Float) AS '<=1 Rep',\nCOUNT(CASE WHEN u.Reputation > 1 THEN 1 ELSE NULL END) \/ CAST(COUNT(u.Id) AS Float) AS '>1 Rep'\nFROM Users u"},{"QuerySetId":1309082,"Title":"Get a user's deleted posts","Description":null,"QueryBody":"SELECT * FROM Posts WHERE DeletionDate <> NULL","CreationDate":"2020-10-12 21:49:33","validated":false,"QueryBody_Original":"SELECT  * FROM Posts WHERE\nDeletionDate != NULL"},{"QuerySetId":1310195,"Title":"how long did it take to accept answer","Description":"Accepted answers with negative scores and more than 1000 views\r\n","QueryBody":"SELECT question.id AS \"Post Link\", answer.CreationDate, v.*, DATEDIFF(answer.CreationDate, v.CreationDate) AS dif FROM Posts AS question JOIN Posts AS answer ON question.AcceptedAnswerId = answer.Id JOIN Votes AS v ON v.PostId = answer.Id WHERE answer.OwnerUserId = 112052 AND v.VoteTypeId = 1 ORDER BY DATEDIFF(answer.CreationDate, v.CreationDate) DESC","CreationDate":"2020-10-15 18:30:24","validated":false,"QueryBody_Original":"SELECT  \n  question.id as [Post Link], \n  answer.CreationDate, v.*,\n  datediff(hour, v.CreationDate, answer.CreationDate) as dif\nFROM \n  Posts question JOIN Posts answer ON question.AcceptedAnswerId = answer.Id\n  JOIN Votes v ON v.PostId = answer.Id\nWHERE\n  answer.OwnerUserId=112052 AND v.VoteTypeId = 1\nORDER BY datediff(hour, v.CreationDate, answer.CreationDate) DESC"},{"QuerySetId":1310482,"Title":"SELECT Id, Body, Title, Tags FROM posts WHERE Id < 50000 AND Score >= 5 AND Tags IS NOT NULL","Description":null,"QueryBody":"SELECT Id, Body, Title, Tags FROM posts WHERE Id < 50000 AND Score >= 5 AND NOT Tags IS NULL","CreationDate":"2020-10-16 15:11:20","validated":false,"QueryBody_Original":"SELECT  Id, Body, Title, Tags FROM posts WHERE Id < 50000 AND Score >= 5 AND Tags IS NOT NULL"},{"QuerySetId":1310487,"Title":"Total number of posts with more than one answer","Description":null,"QueryBody":"SELECT COUNT(*) AS count FROM posts WHERE AnswerCount > 1","CreationDate":"2020-10-16 15:35:33","validated":false,"QueryBody_Original":"SELECT  count(*) as count \nfrom posts \nwhere AnswerCount > 1"},{"QuerySetId":1311016,"Title":"Top user in Czech Republic","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('czech republic') ORDER BY Reputation DESC","CreationDate":"2020-10-17 23:30:34","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('czech republic')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1311017,"Title":"Top users in Czech Republic","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE LOWER('czech republic') ORDER BY Reputation DESC","CreationDate":"2020-10-17 23:33:23","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE LOWER('czech republic')\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1311607,"Title":"SELECT DISTINCT u.Id,DisplayName,Location,Aboutme,EmailHash,AccountId from users u ","Description":null,"QueryBody":"SELECT DISTINCT u.Id, DisplayName, Location, Aboutme, EmailHash, AccountId FROM users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.postTypeId = 2 AND u.Location LIKE '%London%'","CreationDate":"2020-10-19 04:55:50","validated":false,"QueryBody_Original":"SELECT  DISTINCT u.Id,DisplayName,Location,Aboutme,EmailHash,AccountId \nfrom users u inner join Posts p on p.OwnerUserId = u.Id where p.postTypeId = 2 AND u.Location like '%London%'"},{"QuerySetId":1311863,"Title":"SELECT DISTINCT u.Id, DisplayName, Location, Aboutme, EmailHash, AccountId","Description":null,"QueryBody":"SELECT DISTINCT u.Id, DisplayName, Location, Aboutme, EmailHash, AccountId FROM users AS u INNER JOIN Posts AS p ON p.OwnerUserId = u.Id WHERE p.postTypeId = 2 AND u.Location LIKE '%London%'","CreationDate":"2020-10-19 20:39:09","validated":false,"QueryBody_Original":"SELECT  DISTINCT u.Id,DisplayName,Location,Aboutme,EmailHash,AccountId \nfrom users u inner join Posts p on p.OwnerUserId = u.Id where p.postTypeId = 2 AND u.Location like '%London%'"},{"QuerySetId":1312219,"Title":"Python posts with minimum score of 15","Description":null,"QueryBody":"SELECT Title, Body, CreationDate, Id AS \"Post Link\", Tags, Score FROM POSTS WHERE PostTypeId IN (1) AND CreationDate > '2020-01-01' AND CreationDate < '2020-12-31' AND tags LIKE ('%python%') AND Score >= 15 ORDER BY CreationDate DESC","CreationDate":"2020-10-20 12:40:04","validated":false,"QueryBody_Original":"SELECT  Title, Body, CreationDate, Id as [Post Link], Tags, Score \nFROM POSTS\nWHERE PostTypeId IN(1)\n       AND CreationDate > '2020-01-01'\n       AND CreationDate < '2020-12-31'\n       AND tags LIKE('%python%')\n       AND Score >= 15\nORDER BY CreationDate DESC"},{"QuerySetId":1312220,"Title":"Java posts with minimum score of 15","Description":null,"QueryBody":"SELECT Title, Body, CreationDate, Id AS \"Post Link\", Tags, Score FROM POSTS WHERE PostTypeId IN (1) AND CreationDate > '2020-01-01' AND CreationDate < '2020-12-31' AND tags LIKE ('%java%') AND Score >= 15 ORDER BY CreationDate DESC","CreationDate":"2020-10-20 12:31:48","validated":false,"QueryBody_Original":"SELECT  Title, Body, CreationDate, Id as [Post Link], Tags, Score \nFROM POSTS\nWHERE PostTypeId IN(1)\n       AND CreationDate > '2020-01-01'\n       AND CreationDate < '2020-12-31'\n       AND tags LIKE('%java%')\n       AND Score >= 15\nORDER BY CreationDate DESC"},{"QuerySetId":1312341,"Title":"Relevant Python and Java posts in 2020 with information about author","Description":null,"QueryBody":"SELECT p.Title, p.Body, p.CreationDate, p.Id AS \"Post Link\", p.Tags, p.Score, u.AboutMe FROM POSTS AS p LEFT JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId IN (1) AND p.CreationDate > '2020-01-01' AND p.CreationDate < '2020-12-31' AND p.tags LIKE ('%python%') AND p.Score >= 15 AND u.AboutMe <> '' ORDER BY p.CreationDate DESC","CreationDate":"2020-10-30 05:59:17","validated":false,"QueryBody_Original":"SELECT  p.Title, p.Body, p.CreationDate, p.Id as [Post Link], p.Tags, p.Score, u.AboutMe \nFROM POSTS as p\nLEFT JOIN Users as u\nON p.OwnerUserId=u.Id\nWHERE p.PostTypeId IN(1)\n       AND p.CreationDate > '2020-01-01'\n       AND p.CreationDate < '2020-12-31'\n       AND p.tags LIKE('%python%')\n       AND p.Score >= 15\n       AND u.AboutMe <> ''\nORDER BY p.CreationDate DESC"},{"QuerySetId":1312648,"Title":"Posts using image hosting services other than Imgur","Description":null,"QueryBody":"SELECT CreationDate, ShorteningService, id AS \"Post Link\" FROM (SELECT id, CreationDate, CASE WHEN LOWER(body) LIKE '%tinypic.com%' THEN 'TinyPic' END AS ShorteningService FROM posts) AS t WHERE NOT ShorteningService IS NULL ORDER BY CreationDate DESC LIMIT 1000","CreationDate":"2020-10-21 13:15:22","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n  CreationDate, ShorteningService, id AS [Post Link]\nFROM (\n  SELECT \n    id, CreationDate,\n    CASE\n      WHEN LOWER(body) LIKE '%tinypic.com%'  THEN 'TinyPic'\n    END AS ShorteningService\n  FROM posts\n) t\nWHERE ShorteningService IS NOT NULL\nORDER BY CreationDate DESC"},{"QuerySetId":1312957,"Title":"Comments that have imgur images","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\", Text FROM Comments WHERE LOWER(Text) LIKE '%i.stack.imgur.com%' LIMIT 100","CreationDate":"2020-10-21 19:28:11","validated":false,"QueryBody_Original":"SELECT  TOP 100 Id AS [Comment Link], Text\nFROM Comments\nWHERE lower(Text) LIKE '%i.stack.imgur.com%'"},{"QuerySetId":1313582,"Title":"thank you for your answer comments... on questions?","Description":null,"QueryBody":"SELECT c.id AS \"Comment Link\" FROM comments AS c INNER JOIN posts AS p ON p.id = c.postid INNER JOIN posts AS q ON q.id = p.parentid WHERE text LIKE '%welcome%' AND c.CreationDate > '01.01.2020'","CreationDate":"2020-10-24 16:42:00","validated":false,"QueryBody_Original":"SELECT  c.id as [Comment Link] \nfrom comments c \ninner join posts p \non p.id = c.postid \ninner join posts q \non q.id = p.parentid \nwhere text like '%welcome%' \nand c.CreationDate > '01.01.2020'"},{"QuerySetId":1313604,"Title":"Catalogue of Comments Including <idownvotedbecau.se> Links","Description":null,"QueryBody":"SELECT Id AS \"Comment Link\" FROM Comments LIMIT 100","CreationDate":"2020-10-22 20:48:03","validated":false,"QueryBody_Original":"SELECT  TOP 100\nId AS [Comment Link]\nFrom Comments"},{"QuerySetId":1313609,"Title":"Comments Consisting of <idownvotedbecau.se> Link","Description":null,"QueryBody":"SELECT c.Id AS \"Comment Link\", LENGTH(c.Text) AS \"Length\", c.Score, c.CreationDate FROM Comments AS c WHERE LENGTH(c.Text) < 100 AND c.Text LIKE '%http%:\/\/idownvotedbecau.se%'","CreationDate":"2020-10-23 00:27:14","validated":false,"QueryBody_Original":"SELECT \nc.Id AS [Comment Link],\nLEN(c.Text) AS 'Length',\nc.Score,\nc.CreationDate\nFrom Comments c\nWHERE LEN(c.Text) < 100 AND c.Text LIKE '%http%:\/\/idownvotedbecau.se%'"},{"QuerySetId":1313691,"Title":"Single Post - Most Comments","Description":null,"QueryBody":"SELECT id, commentcount FROM posts ORDER BY commentcount DESC","CreationDate":"2020-10-23 23:46:32","validated":false,"QueryBody_Original":"SELECT  id, commentcount\nfrom posts\norder by commentcount desc"},{"QuerySetId":1313933,"Title":"questions with tag javascript that have code snippets and answer","Description":null,"QueryBody":"SELECT title, Tags FROM Posts AS Question WHERE Question.Tags LIKE '%<java>%'","CreationDate":"2020-11-03 17:23:19","validated":false,"QueryBody_Original":"SELECT  title, Tags  FROM \n  Posts AS Question \n  where    \n  Question.Tags LIKE '%<java>%'"},{"QuerySetId":1314011,"Title":" Big Data, Machine learning and artificial intelligence technologies with R and Python","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id > 500000 AND FavoriteCount > 30","CreationDate":"2020-10-23 14:35:18","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE Id > 500000 AND FavoriteCount > 30"},{"QuerySetId":1314013,"Title":"faire du machine learning avec Python ou R","Description":null,"QueryBody":"SELECT * FROM posts WHERE Id < 500000 AND FavoriteCount > 30","CreationDate":"2020-10-23 14:36:52","validated":false,"QueryBody_Original":"SELECT  * FROM posts WHERE Id < 500000 AND FavoriteCount > 30"},{"QuerySetId":1315824,"Title":"All Users Ranked by Total Votes and Percent DVs","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", (u.UpVotes + u.DownVotes) AS \"Total Votes\", CASE WHEN ((u.UpVotes + u.DownVotes) > 0) THEN ROUND(CAST(u.DownVotes AS FLOAT) \/ (u.UpVotes + u.DownVotes) * 100, 4) ELSE 0 END AS \"% DV\" FROM Users AS u WHERE (u.Reputation >= 125 OR u.DownVotes > 0) AND u.Id <> -1 ORDER BY 'Total Votes' DESC, '% DV' DESC","CreationDate":"2020-10-27 03:47:16","validated":false,"QueryBody_Original":"SELECT \nu.Id AS [User Link],\n(u.UpVotes + u.DownVotes) AS 'Total Votes',\nCASE\nWHEN ((u.UpVotes + u.DownVotes) > 0) THEN\n    ROUND(\n      CAST(u.DownVotes AS Float) \/ (u.UpVotes + u.DownVotes) * 100\n    , 4)\n  ELSE\n    0\n  END\n AS '% DV'\nFROM Users u\nWHERE (u.Reputation >= 125 OR u.DownVotes > 0) AND u.Id <> -1\nORDER BY 'Total Votes' DESC, '% DV' DESC"},{"QuerySetId":1315828,"Title":"Correlation Between Qnt Votes and %DVs at >1000 Votes","Description":null,"QueryBody":"SELECT (u.UpVotes + u.DownVotes) AS \"Total Votes\", CAST(u.DownVotes AS FLOAT) \/ (u.UpVotes + u.DownVotes) * 100 AS \"% DV\" FROM Users AS u WHERE (u.Reputation >= 125 OR u.DownVotes > 0) AND (u.UpVotes + u.DownVotes) > 1000 AND (u.UpVotes + u.DownVotes) < 20000 AND u.Id <> -1 ORDER BY 'Total Votes' DESC, '% DV' DESC","CreationDate":"2020-10-27 03:51:11","validated":false,"QueryBody_Original":"SELECT \n(u.UpVotes + u.DownVotes) AS 'Total Votes',\nCAST(u.DownVotes AS Float) \/ (u.UpVotes + u.DownVotes) * 100 AS '% DV'\nFROM Users u\nWHERE (u.Reputation >= 125 OR u.DownVotes > 0) AND (u.UpVotes + u.DownVotes) > 1000 AND (u.UpVotes + u.DownVotes) < 20000 AND u.Id <> -1\nORDER BY 'Total Votes' DESC, '% DV' DESC"},{"QuerySetId":1317624,"Title":"Search post where comment text like '...'","Description":"Also included Score and text","QueryBody":"SELECT Id AS \"Comment Link\", Score, Text FROM Comments WHERE UPPER(Text) LIKE UPPER('%##CommentText##%') AND CreationDate > '01\/01\/2019' ORDER BY Score DESC","CreationDate":"2020-10-30 01:35:13","validated":false,"QueryBody_Original":"SELECT  Id AS [Comment Link], Score, Text \n  FROM Comments \n WHERE UPPER(Text) LIKE UPPER('%##CommentText##%')\n and CreationDate > '01\/01\/2019'\n ORDER BY Score desc"},{"QuerySetId":1317705,"Title":"Python Questions from 2015 to 2020","Description":null,"QueryBody":"SELECT * FROM (SELECT *, 0 AS isPandas FROM Posts AS p WHERE p.tags LIKE '%python-3.x%' AND NOT p.tags LIKE '%pandas%' AND p.CreationDate >= '2015-01-01' AND p.CreationDate < '2020-01-01' ORDER BY ViewCount DESC LIMIT 1000) AS withPandas UNION SELECT *, 1 AS isPandas FROM Posts AS p WHERE p.tags LIKE '%python-3.x%' AND p.tags LIKE '%pandas%' AND p.CreationDate >= '2015-01-01' AND p.CreationDate < '2020-01-01' ORDER BY ViewCount DESC LIMIT 1000","CreationDate":"2020-11-06 03:16:33","validated":false,"QueryBody_Original":"SELECT  *\nFROM (\nSELECT TOP 1000 *, 0 AS isPandas\nFROM\n  Posts p\nWHERE\n   p.tags LIKE '%python-3.x%'\n   AND p.tags NOT LIKE '%pandas%'\n   AND p.CreationDate >= '2015-01-01'\n   AND p.CreationDate < '2020-01-01'\nORDER BY\n  ViewCount DESC\n  ) as withPandas\nUNION\nSELECT TOP 1000 *, 1 AS isPandas\nFROM\n  Posts p\nWHERE\n   p.tags LIKE '%python-3.x%'\n   AND p.tags LIKE '%pandas%'\n   AND p.CreationDate >= '2015-01-01'\n   AND p.CreationDate < '2020-01-01'\nORDER BY\n  ViewCount DESC"},{"QuerySetId":1317739,"Title":"Recent Python Posts by Score","Description":null,"QueryBody":"SELECT p.Title, p.Body, p.CreationDate, p.Id AS \"Post Link\", p.Tags, p.Score, u.AboutMe FROM POSTS AS p LEFT JOIN Users AS u ON p.OwnerUserId = u.Id WHERE p.PostTypeId IN (1) AND p.CreationDate > '2020-01-01' AND p.CreationDate < '2020-12-31' AND p.tags LIKE ('%python%') AND p.Score >= 15 AND u.AboutMe <> '' ORDER BY p.CreationDate DESC","CreationDate":"2020-10-30 06:05:09","validated":false,"QueryBody_Original":"SELECT  p.Title, p.Body, p.CreationDate, p.Id as [Post Link], p.Tags, p.Score, u.AboutMe \nFROM POSTS as p\nLEFT JOIN Users as u\nON p.OwnerUserId=u.Id\nWHERE p.PostTypeId IN(1)\n       AND p.CreationDate > '2020-01-01'\n       AND p.CreationDate < '2020-12-31'\n       AND p.tags LIKE('%python%')\n       AND p.Score >= 15\n       AND u.AboutMe <> ''\nORDER BY p.CreationDate DESC"},{"QuerySetId":1318336,"Title":"What words are most commonly used in the bodies of Python programs?","Description":null,"QueryBody":"SELECT body FROM posts WHERE posttypeid = 2 AND body LIKE '%Python%'","CreationDate":"2020-10-30 21:49:50","validated":false,"QueryBody_Original":"SELECT  body from posts where posttypeid = 2 and body like '%Python%';"},{"QuerySetId":1318817,"Title":"\u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u043f\u0440\u043e\u0444\u0438\u043b\u044f\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 Stackoverflow?","Description":null,"QueryBody":"SELECT COUNT(*) AS answer FROM users WHERE (displayname LIKE '%John%' OR displayname LIKE '%Ivan%')","CreationDate":"2020-11-03 20:38:44","validated":false,"QueryBody_Original":"SELECT  count (*) as answer\nfrom users\nwhere (displayname like '%John%' or displayname like '%Ivan%')"},{"QuerySetId":1319252,"Title":"Close Votes per Question, 2020","Description":null,"QueryBody":"SELECT (LENGTH(text) - LENGTH(REPLACE(text, 'DisplayName', ''))) \/ 11 AS CloseVoters, COUNT(1) FROM PostHistory WHERE YEAR(CreationDate) = 2020 AND PostHistoryTypeID = 10 GROUP BY (LENGTH(text) - LENGTH(REPLACE(text, 'DisplayName', ''))) \/ 11 ORDER BY (LENGTH(text) - LENGTH(REPLACE(text, 'DisplayName', ''))) \/ 11","CreationDate":"2020-11-01 03:19:51","validated":false,"QueryBody_Original":"SELECT  (len(text) - len(replace(text,'DisplayName','')))\/11 as CloseVoters, count(1)\nfrom PostHistory \nwhere year(CreationDate)=2020 and PostHistoryTypeID=10\ngroup by (len(text) - len(replace(text,'DisplayName','')))\/11\norder by (len(text) - len(replace(text,'DisplayName','')))\/11"},{"QuerySetId":1319393,"Title":"new users' short(ish) answers to old(ish) questions","Description":null,"QueryBody":"SELECT creationdate FROM posts WHERE creationdate > 2020 - 10 - 1","CreationDate":"2020-11-01 15:46:33","validated":false,"QueryBody_Original":"SELECT  creationdate\nfrom posts\nwhere creationdate > 2020-10-1"},{"QuerySetId":1319575,"Title":"Acquire the top 200,000 posts by viewcount","Description":null,"QueryBody":"SELECT * FROM Posts WHERE ViewCount > 36500 AND ViewCount < 111930 ORDER BY ViewCount DESC LIMIT 200000","CreationDate":"2020-11-02 02:17:09","validated":false,"QueryBody_Original":"SELECT  TOP 200000 * FROM Posts where ViewCount> 36500 and ViewCount < 111930  order by ViewCount desc;"},{"QuerySetId":1319932,"Title":"How many posts have the exact same number of answers?","Description":null,"QueryBody":"SELECT postTypeid, COUNT(answercount) AS Numberofanswers FROM Posts GROUP BY posttypeid","CreationDate":"2020-12-10 09:50:29","validated":false,"QueryBody_Original":"SELECT  postTypeid, \ncount (answercount) as Numberofanswers\nfrom Posts\nGroup by posttypeid;"},{"QuerySetId":1320668,"Title":"Display Name from Users where id is mine","Description":null,"QueryBody":"SELECT UserDisplayName FROM Comments WHERE Id = 1330560","CreationDate":"2020-11-03 03:26:50","validated":false,"QueryBody_Original":"SELECT  UserDisplayName from Comments where Id = 1330560;"},{"QuerySetId":1321789,"Title":"Number of Top Users (Reputation >1000) by Country","Description":null,"QueryBody":"SELECT (CASE WHEN LOWER(Location) LIKE '%united kingdom%' OR LOWER(Location) LIKE '%britain%' OR Location LIKE '%UK%' THEN 'United Kingdom' END) AS country, AVG(Reputation) FROM Users WHERE Reputation >= 1000 GROUP BY (CASE WHEN LOWER(Location) LIKE '%united kingdom%' OR LOWER(Location) LIKE '%britain%' OR Location LIKE '%UK%' THEN 'United Kingdom' END)","CreationDate":"2020-11-05 21:41:59","validated":false,"QueryBody_Original":"SELECT  (CASE WHEN LOWER(Location) LIKE '%united kingdom%' OR LOWER(Location) LIKE '%britain%' OR Location LIKE '%UK%' THEN 'United Kingdom'\nEND) as country, AVG(Reputation)\nFROM Users\nWHERE Reputation >= 1000\nGROUP by (CASE WHEN LOWER(Location) LIKE '%united kingdom%' OR LOWER(Location) LIKE '%britain%' OR Location LIKE '%UK%' THEN 'United Kingdom'\n        END)"},{"QuerySetId":1321827,"Title":"Get first 100 (likely) fluff comments","Description":null,"QueryBody":"SELECT PostId, Text FROM Comments WHERE LOWER(text) LIKE '%+1%' OR LOWER(text) LIKE '%thanks%' OR LOWER(text) LIKE '%thank you%' OR LOWER(text) LIKE '%thankyou%' OR LOWER(text) LIKE '%thank-you%' OR LOWER(text) LIKE '%thx%' OR LOWER(text) LIKE '%thanx%' LIMIT 100","CreationDate":"2020-11-04 04:01:28","validated":false,"QueryBody_Original":"SELECT  TOP 100 PostId, Text FROM Comments\nWHERE Lower(text) LIKE '%+1%'\n  OR Lower(text) LIKE '%thanks%'\n  OR Lower(text) LIKE '%thank you%'\n  OR Lower(text) LIKE '%thankyou%'\n  OR Lower(text) LIKE '%thank-you%'\n  OR Lower(text) LIKE '%thx%'\n  OR Lower(text) LIKE '%thanx%'"},{"QuerySetId":1322166,"Title":"SELECT * FROM Users WHERE id = '1'","Description":null,"QueryBody":"SELECT * FROM USERS WHERE id = '1'","CreationDate":"2020-11-04 15:35:15","validated":false,"QueryBody_Original":"SELECT  * FROM USERS WHERE id = '1'"},{"QuerySetId":1322770,"Title":"select title from posts where PostTypeId = 1;","Description":null,"QueryBody":"SELECT title FROM posts WHERE PostTypeId = 1","CreationDate":"2020-11-04 22:46:42","validated":false,"QueryBody_Original":"SELECT  title from posts where PostTypeId = 1;"},{"QuerySetId":1322984,"Title":"ID and Reputation of Users","Description":null,"QueryBody":"SELECT Id, Reputation FROM Users","CreationDate":"2020-11-05 00:18:27","validated":false,"QueryBody_Original":"SELECT  Id, Reputation FROM Users"},{"QuerySetId":1324521,"Title":"Top 50 Most Prolific Editors","Description":"Shows the top 50 post editors, where the user was the most recent editor\r\n(meaning the results are conservative compared to the actual number of edits).\r\n","QueryBody":"SELECT Id AS \"User Link\", (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 1 AND LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS QuestionEdits, (SELECT COUNT(*) FROM Posts WHERE PostTypeId = 3 AND LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS AnswerEdits, (SELECT COUNT(*) FROM Posts WHERE LastEditorUserId = Users.Id AND OwnerUserId <> Users.Id) AS TotalEdits FROM Users ORDER BY TotalEdits DESC LIMIT 50","CreationDate":"2020-11-05 22:47:16","validated":false,"QueryBody_Original":"SELECT  TOP 50\n    Id AS [User Link],\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            PostTypeId = 1 AND\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS QuestionEdits,\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            PostTypeId = 3 AND\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS AnswerEdits,\n    (\n        SELECT COUNT(*) FROM Posts\n        WHERE\n            LastEditorUserId = Users.Id AND\n            OwnerUserId != Users.Id\n    ) AS TotalEdits\n    FROM Users\n    ORDER BY TotalEdits DESC"},{"QuerySetId":1324667,"Title":"Users Count for Reputation Range","Description":null,"QueryBody":"SELECT COUNT(*) FROM Users AS u WHERE u.Reputation > 2440 AND u.Reputation < 3000","CreationDate":"2020-11-25 02:17:07","validated":false,"QueryBody_Original":"SELECT  Count(*)\nFROM Users u\nWHERE\n  u.Reputation > 2440\n  AND u.Reputation < 3000"},{"QuerySetId":1324839,"Title":"Python Pandas and not Pandas questions from 2015 to 2020","Description":null,"QueryBody":"SELECT Id, Body, Title, Tags, isPandas, ViewCount FROM (SELECT Id, Body, Title, Tags, ViewCount, 0 AS isPandas FROM Posts AS p WHERE p.tags LIKE '%python-3.x%' AND NOT p.tags LIKE '%pandas%' AND p.CreationDate >= '2015-01-01' AND p.CreationDate < '2020-01-01' ORDER BY ViewCount DESC LIMIT 10000) AS withPandas UNION SELECT Id, Body, Title, Tags, ViewCount, 1 AS isPandas FROM Posts AS p WHERE p.tags LIKE '%python-3.x%' AND p.tags LIKE '%pandas%' AND p.CreationDate >= '2015-01-01' AND p.CreationDate < '2020-01-01' ORDER BY ViewCount DESC LIMIT 2000","CreationDate":"2020-11-29 03:04:43","validated":false,"QueryBody_Original":"SELECT  Id, Body, Title, Tags, isPandas, ViewCount\nFROM (\n  SELECT TOP 10000 Id, Body, Title, Tags, ViewCount, 0 AS isPandas\n  FROM\n    Posts p\n  WHERE\n     p.tags LIKE '%python-3.x%'\n     AND p.tags NOT LIKE '%pandas%'\n     AND p.CreationDate >= '2015-01-01'\n     AND p.CreationDate < '2020-01-01'\n  ORDER BY\n    ViewCount DESC\n ) AS withPandas\nUNION\nSELECT TOP 2000 Id, Body, Title, Tags, ViewCount, 1 AS isPandas\nFROM\n  Posts p\nWHERE\n   p.tags LIKE '%python-3.x%'\n   AND p.tags LIKE '%pandas%'\n   AND p.CreationDate >= '2015-01-01'\n   AND p.CreationDate < '2020-01-01'\nORDER BY\n  ViewCount DESC"},{"QuerySetId":1326545,"Title":"Usu\u00e1rios com 3000 pontos ou mais que acessaram o site neste m\u00eas ","Description":null,"QueryBody":"SELECT COUNT(Users.Id) AS total FROM Users WHERE Users.Reputation >= 3000 AND MONTH(Users.LastAccessDate) = MONTH(CURRENT_TIMESTAMP()) AND YEAR(Users.LastAccessDate) = YEAR(CURRENT_TIMESTAMP())","CreationDate":"2020-11-08 22:33:54","validated":false,"QueryBody_Original":"SELECT  count( Users.Id) as total FROM Users\nWHERE\nUsers.Reputation >= 3000 and\nMonth(Users.LastAccessDate) = Month(getdate()) AND\nYear(Users.LastAccessDate) = Year(getdate())"},{"QuerySetId":1326728,"Title":"SELECT * FROM Comments WHERE Score = 6","Description":null,"QueryBody":"SELECT Text, LENGTH(Text) - LENGTH(REPLACE(Text, ' ', '')) + 1 FROM Comments WHERE Score = 6 AND Text LIKE '%?%' AND LENGTH(Text) - LENGTH(REPLACE(Text, ' ', '')) + 1 > 20","CreationDate":"2020-11-07 20:46:25","validated":false,"QueryBody_Original":"SELECT  Text, len(Text)-len(replace(Text,' ',''))+1 FROM Comments WHERE Score = 6 AND Text LIKE '%?%' AND len(Text)-len(replace(Text,' ',''))+1 > 20"},{"QuerySetId":1326861,"Title":"dates minus rowNumbers for specific dates","Description":null,"QueryBody":"SELECT OwnerUserId, CAST(MIN(CreationDate) AS DATE) AS date, ROW_NUMBER() OVER (PARTITION BY OwnerUserId ORDER BY MIN(CreationDate)) AS row, MIN(CreationDate) - ROW_NUMBER() OVER (PARTITION BY OwnerUserId ORDER BY MIN(CreationDate)) FROM posts WHERE 1 = 1 AND CreationDate BETWEEN '2008-08-10' AND '2008-08-17' GROUP BY OwnerUserId, CAST(CreationDate AS DATE) ORDER BY 1","CreationDate":"2020-11-08 07:40:31","validated":false,"QueryBody_Original":"SELECT  \n  OwnerUserId,\n  CAST(MIN(CreationDate)AS DATE) date,\n  ROW_NUMBER() OVER (Partition by OwnerUserId ORDER BY MIN(CreationDate)) row,\n  MIN(CreationDate) - ROW_NUMBER() OVER (Partition by OwnerUserId ORDER BY MIN(CreationDate)) \n\nfrom posts \nWHERE 1=1\n  AND CreationDate BETWEEN '2008-08-10' and '2008-08-17'\ngroup by OwnerUserId, CAST(CreationDate AS DATE)\norder by 1"},{"QuerySetId":1327214,"Title":"Get comments posted after 2010","Description":null,"QueryBody":"SELECT Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName FROM Comments WHERE CreationDate > 01 \/ 01 \/ 2010 ORDER BY Id","CreationDate":"2020-11-08 18:59:09","validated":false,"QueryBody_Original":"SELECT  \n    Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName\nFROM \n    Comments\nWHERE \n    CreationDate>01\/01\/2010\nORDER BY \n    Id Asc"},{"QuerySetId":1327763,"Title":"Tag edits with empty change","Description":null,"QueryBody":"SELECT 'site:\/\/posts\/' + CAST(ph.PostId AS TEXT) + '\/revisions' AS \"Revision History\" FROM PostHistory AS ph WHERE (ph.PostHistoryTypeId IN (6, 9)) AND (ph.Text = '')","CreationDate":"2020-11-09 13:37:41","validated":false,"QueryBody_Original":"SELECT \n  'site:\/\/posts\/' + CAST(ph.PostId AS varchar)+'\/revisions' AS [Revision History]\nFROM PostHistory ph\nWHERE (ph.PostHistoryTypeId in (6,9)) AND (ph.Text='')\n\n---3 = Initial Tags - initial list of tags (questions only)\n---6 = Edit Tags - modified list of tags (questions only)\n---9 = Rollback Tags - reverted list of tags (questions only)"},{"QuerySetId":1329195,"Title":"Automation Test Engineer - Lisbon","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.DisplayName, u.Location, u.WebsiteUrl, u.AboutMe, u.Views, u.UpVotes, u.DownVotes FROM Users AS u JOIN (SELECT DISTINCT UserId FROM Badges WHERE LOWER(Name) IN ('android-espresso') AND Class IN (1, 2, 3) AND TagBased = 1) AS tag_badges ON tag_badges.UserId = u.Id","CreationDate":"2020-11-11 18:55:36","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link],\n                            CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link],\n                            u.DisplayName,\n                            u.Location,\n                            u.WebsiteUrl,\n                            u.AboutMe,\n                            u.Views,\n                            u.UpVotes,\n                            u.DownVotes\n             FROM Users u\n        \n             JOIN (\n                    SELECT DISTINCT UserId\n                    FROM Badges\n                    WHERE LOWER(Name) IN ('android-espresso') AND\n                          Class IN (1, 2, 3) AND\n                          TagBased = 1\n                  ) tag_badges\n             ON tag_badges.UserId = u.Id"},{"QuerySetId":1329227,"Title":"Downvoter trolls - low rep, many downs","Description":null,"QueryBody":"SELECT Id, Id AS \"User Link\", CreationDate, Reputation, DownVotes, UpVotes FROM Users WHERE Reputation < DownVotes * 2 AND Reputation >= 125 ORDER BY 1.0 * DownVotes \/ Reputation DESC LIMIT 100","CreationDate":"2020-11-25 19:09:12","validated":false,"QueryBody_Original":"SELECT  TOP 100\n  Id, Id AS [User Link], CreationDate, Reputation, DownVotes, UpVotes\nFROM Users\nWHERE Reputation < DownVotes * 2 AND Reputation >= 125\nORDER BY 1.0 * DownVotes \/ Reputation DESC"},{"QuerySetId":1331035,"Title":"Top stackoverflow users in Lebanon","Description":"Top stackoverflow users in Lebanon","QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC), CONCAT('https:\/\/stackoverflow.com\/users\/', Id) AS profile, Reputation, DisplayName, WebsiteUrl, Location, CreationDate FROM Users WHERE UPPER(Location) LIKE '%LEBANON%' ORDER BY reputation DESC","CreationDate":"2020-11-15 20:57:20","validated":false,"QueryBody_Original":"SELECT \n   ROW_NUMBER() OVER (order by Reputation DESC),\n   concat('https:\/\/stackoverflow.com\/users\/',Id) profile,\n   Reputation,\n   DisplayName,\n   WebsiteUrl,\n   Location,\n   CreationDate\nFROM\n   Users\nWHERE\n  \n    upper(Location) like '%LEBANON%'\n  \nORDER BY\n   reputation DESC"},{"QuerySetId":1332474,"Title":"select count (*) from users","Description":null,"QueryBody":"SELECT OwnerUserId, COUNT(*) FROM Posts WHERE PostTypeId = 1 GROUP BY OwnerUserId HAVING COUNT(*) > 50","CreationDate":"2020-11-17 23:12:48","validated":false,"QueryBody_Original":"SELECT  OwnerUserId,count(*) from Posts \nwhere PostTypeId = 1 group by OwnerUserId having count(*) > 50"},{"QuerySetId":1332587,"Title":"Number of questions with accepted answers.","Description":null,"QueryBody":"SELECT COUNT(q.AcceptedAnswerId), COUNT(q.Id) FROM Posts AS q WHERE 1 = q.PostTypeId","CreationDate":"2020-11-18 01:40:30","validated":false,"QueryBody_Original":"SELECT  COUNT(q.AcceptedAnswerId), COUNT(q.Id) FROM Posts as q WHERE 1 = q.PostTypeId;"},{"QuerySetId":1332639,"Title":"Titles and Tags Top 500","Description":null,"QueryBody":"SELECT Title, Body, Tags FROM Posts WHERE NOT Tags IS NULL LIMIT 500","CreationDate":"2020-11-18 03:03:50","validated":false,"QueryBody_Original":"SELECT  \n  TOP 500 Title, Body, Tags \n  FROM Posts\n  WHERE Tags is not null;"},{"QuerySetId":1333100,"Title":"Q1-1 What is the most number of comments on a single post?","Description":null,"QueryBody":"SELECT CommentCount, Id, COUNT(*) FROM Posts GROUP BY Id, CommentCount HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC","CreationDate":"2020-11-18 22:28:26","validated":false,"QueryBody_Original":"SELECT  CommentCount, Id, count(*)\n      \nFROM Posts\nGROUP BY Id, CommentCount\nHAVING count(*) > 1\nORDER BY count(*) DESC;"},{"QuerySetId":1333231,"Title":"What is the current highest scored comment, and what post does it belong to?","Description":null,"QueryBody":"SELECT PostId, PostTypeId, Text, Comments.Score FROM Comments LEFT JOIN Posts ON Comments.PostId = Posts.Id WHERE Comments.Score = (SELECT MAX(Score) FROM Comments)","CreationDate":"2020-11-19 00:29:31","validated":false,"QueryBody_Original":"SELECT  PostId, PostTypeId, Text, Comments.Score\nFROM Comments left join Posts on Comments.PostId= Posts.Id\nWHERE Comments.Score = (SELECT MAX(Score) \n               FROM Comments);"},{"QuerySetId":1334175,"Title":"Get Android post view by day","Description":null,"QueryBody":"SELECT CreationDate, id, ViewCount FROM (SELECT CreationDate, id, ViewCount FROM Posts WHERE Tags LIKE '%fabric%' AND CreationDate BETWEEN '2016-01-01' AND '2020-12-31') AS tb ORDER BY 1","CreationDate":"2020-11-20 04:24:10","validated":false,"QueryBody_Original":"SELECT  \n\n  CreationDate,\n  id, ViewCount\n  \nFROM\n\n(\n\n  SELECT CreationDate, id, ViewCount FROM Posts\n  WHERE Tags like '%fabric%'\n  and CreationDate between '2016-01-01' and '2020-12-31'\n  \n) as tb\n\nORDER BY 1 ASC"},{"QuerySetId":1334257,"Title":"Snowflake stackoverflow questions from 2019 Oct","Description":null,"QueryBody":"SELECT YEAR(p.creationdate) AS \"year\", MONTH(p.creationdate) AS \"month\", p.Title FROM posts AS p WHERE PostTypeId = 1 AND STR_POSITION(LOWER(p.Title), 'snowflake') > 0 AND YEAR(p.creationdate) = 2019 AND MONTH(p.creationdate) = 10","CreationDate":"2020-11-20 10:23:12","validated":false,"QueryBody_Original":"SELECT \n    YEAR(p.creationdate) [year],\n    MONTH(p.creationdate) [month],\n    p.Title\nFROM posts p\nWHERE\n  PostTypeId = 1\n  AND CHARINDEX('snowflake', LOWER(p.Title)) > 0\n  AND YEAR(p.creationdate) = 2019\n  AND MONTH(p.creationdate) = 10"},{"QuerySetId":1334258,"Title":"Query 1- Viewcount between 1 lac and 5 lac","Description":null,"QueryBody":"SELECT COUNT(*) FROM posts WHERE posts.ViewCount > 100000 AND posts.ViewCount < 500000","CreationDate":"2020-11-20 10:45:17","validated":false,"QueryBody_Original":"SELECT  count(*) from posts where posts.ViewCount > 100000 and posts.ViewCount <500000"},{"QuerySetId":1334321,"Title":"Python tags and all tags on StackOverflow","Description":null,"QueryBody":"SELECT 'Python only' AS type, COUNT(*) AS count FROM dbo.posts WHERE Tags LIKE N'%python%' UNION SELECT 'All' AS type, COUNT(*) AS count FROM dbo.posts","CreationDate":"2020-11-20 15:31:34","validated":false,"QueryBody_Original":"SELECT  'Python only' as type, count(*) as count \nFROM dbo.posts \nWHERE Tags LIKE N'%python%'\n\nunion \n\nSELECT 'All' as type, count(*) as count \nFROM dbo.posts"},{"QuerySetId":1334870,"Title":"Top Iranian users in StackOverFlow","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%iran%' OR UPPER(Location) LIKE '%IRAN%' ORDER BY Reputation DESC","CreationDate":"2020-11-21 10:09:02","validated":false,"QueryBody_Original":"SELECT \n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%iran%'\n    OR UPPER(Location) LIKE '%IRAN%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1335614,"Title":"select * from users where reputation > 5000","Description":null,"QueryBody":"SELECT Id FROM users WHERE reputation > 50000","CreationDate":"2020-11-22 22:07:48","validated":false,"QueryBody_Original":"SELECT  Id from users where reputation > 50000"},{"QuerySetId":1335841,"Title":"create big list of questions","Description":null,"QueryBody":"SELECT p.Id, p.Tags, p.Id AS \"Post Link\" FROM Posts AS p WHERE NOT Tags LIKE '%##exclude##%'","CreationDate":"2020-11-23 11:40:29","validated":false,"QueryBody_Original":"SELECT  p.Id, p.Tags, p.Id as [Post Link] from Posts p where Tags not like '%##exclude##%'"},{"QuerySetId":1336151,"Title":"SELECT TOP 1000 Id AS [Post Link], OwnerUserId as [User Link], LEN(Body) AS Length, LastActivityDate","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", OwnerUserId AS \"User Link\", LENGTH(Body) AS Length, LastActivityDate AS \"Last Activity Date\" FROM Posts WHERE PostTypeId = 2 ORDER BY Length DESC LIMIT 1000","CreationDate":"2020-11-24 01:43:55","validated":false,"QueryBody_Original":"SELECT  TOP 1000 Id AS [Post Link], OwnerUserId as [User Link], LEN(Body) AS Length, LastActivityDate AS [Last Activity Date]  FROM Posts WHERE PostTypeId = 2 ORDER BY Length DESC"},{"QuerySetId":1336472,"Title":"Posts for certain tags - work in progress","Description":null,"QueryBody":"SELECT t.id, t.TagName, t.Count FROM Tags AS t WHERE t.TagName IN ('c#', 'java')","CreationDate":"2020-11-25 02:18:07","validated":false,"QueryBody_Original":"SELECT  t.id, t.TagName, t.Count FROM Tags t \nWHERE t.TagName in ('c#', 'java');"},{"QuerySetId":1336542,"Title":"How many % of questions are accepted \/ answered?","Description":null,"QueryBody":"SELECT SUM(CASE WHEN NOT AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) AS Accepted, SUM(CASE WHEN AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) AS NotAccepted, SUM(CASE WHEN NOT ClosedDate IS NULL THEN 1 ELSE 0 END) AS Closed, SUM(CASE WHEN AnswerCount = 0 THEN 1 ELSE 0 END) AS Unanswered, COUNT(*) AS Total FROM Posts","CreationDate":"2020-11-25 09:06:17","validated":false,"QueryBody_Original":"SELECT  \n  SUM(CASE WHEN AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END) AS Accepted,\n  SUM(CASE WHEN AcceptedAnswerId IS NULL THEN 1 ELSE 0 END) AS NotAccepted,\n  SUM(CASE WHEN ClosedDate IS NOT NULL THEN 1 ELSE 0 END) AS Closed,\n  SUM(CASE WHEN AnswerCount = 0 THEN 1 ELSE 0 END) AS Unanswered,\n  COUNT(*) AS Total\nFROM Posts;"},{"QuerySetId":1336576,"Title":"Top 100 Highest reputation holder from Ahmedabad","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", DisplayName, Id, Reputation FROM Users WHERE LOWER(Location) LIKE '%gujarat%' ORDER BY Reputation DESC LIMIT 1000","CreationDate":"2020-11-25 14:23:21","validated":false,"QueryBody_Original":"SELECT  TOP 1000\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    DisplayName, Id,\n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%gujarat%'\nORDER BY\n    Reputation DESC;"},{"QuerySetId":1336890,"Title":"Annual # of non-closed, non-deleted questions","Description":null,"QueryBody":"SELECT YEAR(CreationDate) AS Year, COUNT(*) AS Count FROM Posts WHERE PostTypeId = 1 AND ClosedDate IS NULL AND DeletionDate IS NULL GROUP BY YEAR(CreationDate) ORDER BY Year","CreationDate":"2020-11-25 23:24:03","validated":false,"QueryBody_Original":"SELECT  year(CreationDate) as Year, count(*) as Count from Posts\nwhere PostTypeId = 1 and ClosedDate is null and DeletionDate is null\ngroup by year(CreationDate)\norder by Year asc"},{"QuerySetId":1336896,"Title":"Workplace: Trying to find closed questions that could be small business questions","Description":null,"QueryBody":"SELECT q.Id AS \"Post Link\", q.Tags AS Tags, q.ClosedDate AS ClosedDate, ph.Comment AS Comment FROM Posts AS q JOIN PostHistory AS ph ON (q.Id = ph.PostId) WHERE ph.PostHistoryTypeId = 10 AND ph.Comment = 102","CreationDate":"2020-11-25 23:41:56","validated":false,"QueryBody_Original":"SELECT  q.Id as [Post Link], q.Tags as Tags, q.ClosedDate as ClosedDate, ph.Comment as Comment\nfrom Posts q join PostHistory ph on (q.Id = ph.PostId)\nwhere\n  ph.PostHistoryTypeId = 10\n  and ph.Comment = 102"},{"QuerySetId":1337036,"Title":"Number of answers for tag","Description":null,"QueryBody":"SELECT COUNT(Answers.Body) AS AnswerCount FROM Posts AS Answers, Posts AS Questions WHERE Answers.PostTypeId = 2 AND Questions.Id = Answers.ParentId AND Questions.Tags LIKE '%<java>%'","CreationDate":"2020-11-26 04:23:53","validated":false,"QueryBody_Original":"SELECT  \n    Count(Answers.Body) AS AnswerCount\nFROM Posts as Answers, Posts as Questions\n    WHERE Answers.PostTypeId = 2 \n    AND Questions.Id = Answers.ParentId\n    And Questions.Tags LIKE '%<java>%'"},{"QuerySetId":1337436,"Title":"python tagged q&a score >= 50","Description":null,"QueryBody":"SELECT q.id, q.title, q.body, q.tags, q.score, q.acceptedanswerid, a.body AS answerbody FROM posts AS q INNER JOIN posts AS a ON a.id = q.acceptedanswerid WHERE q.posttypeid = 1 AND q.score >= 50 AND q.tags LIKE '%<python>%'","CreationDate":"2020-11-28 12:43:39","validated":false,"QueryBody_Original":"SELECT  \n    q.id,\n    q.title,\n    q.body,\n    q.tags,\n    q.score,\n    q.acceptedanswerid,\n    a.body as answerbody\nfrom posts q\ninner join posts a \n  on a.id = q.acceptedanswerid\nwhere \n  q.posttypeid = 1 \n  and q.score >= 50 \n  and q.tags like '%<python>%'"},{"QuerySetId":1337464,"Title":"View count statistics by age group","Description":null,"QueryBody":"SELECT DISTINCT (DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"Age in years\", PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY ViewCount) OVER (PARTITION BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"25%\", PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY ViewCount) OVER (PARTITION BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"50%\", PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY ViewCount) OVER (PARTITION BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"75%\", ROUND(STDEV(ViewCount) OVER (PARTITION BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)), 2) AS \"StDev\" FROM Posts WHERE PostTypeId = 1 \/* Questions *\/ ORDER BY 1 DESC","CreationDate":"2020-11-27 15:01:50","validated":false,"QueryBody_Original":"SELECT  DISTINCT(DATEDIFF(MONTH, CreationDate, GETDATE())) AS 'Age in years',\n  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY ViewCount)\n    OVER (PARTITION BY DATEDIFF(MONTH, CreationDate, GETDATE())) AS '25%',\n  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY ViewCount)\n    OVER (PARTITION BY DATEDIFF(MONTH, CreationDate, GETDATE())) AS '50%',\n  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY ViewCount)\n    OVER (PARTITION BY DATEDIFF(MONTH, CreationDate, GETDATE())) AS '75%',\n  ROUND(STDEV(ViewCount)\n    OVER (PARTITION BY DATEDIFF(MONTH, CreationDate, GETDATE())), 2) AS 'StDev'\n  FROM Posts\n  WHERE PostTypeId = 1 -- Questions\n  ORDER BY 1 DESC"},{"QuerySetId":1337469,"Title":"View count statistics by age group (grouped by month)","Description":null,"QueryBody":"SELECT DISTINCT (DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"Age in months\", PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY ViewCount) OVER (PARTITION BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"25%\", PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY ViewCount) OVER (PARTITION BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"50%\", PERCENTILE_CONT(0.85) WITHIN GROUP (ORDER BY ViewCount) OVER (PARTITION BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)) AS \"75%\", ROUND(STDEV(ViewCount) OVER (PARTITION BY DATEDIFF(CURRENT_TIMESTAMP(), CreationDate)), 2) AS \"StDev\" FROM Posts WHERE PostTypeId = 1 \/* Questions *\/ ORDER BY 1 DESC","CreationDate":"2020-11-29 05:53:29","validated":false,"QueryBody_Original":"SELECT  DISTINCT(DATEDIFF(MONTH, CreationDate, GETDATE())) AS 'Age in months',\n  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY ViewCount)\n    OVER (PARTITION BY DATEDIFF(MONTH, CreationDate, GETDATE())) AS '25%',\n  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY ViewCount)\n    OVER (PARTITION BY DATEDIFF(MONTH, CreationDate, GETDATE())) AS '50%',\n  PERCENTILE_CONT(0.85) WITHIN GROUP (ORDER BY ViewCount)\n    OVER (PARTITION BY DATEDIFF(MONTH, CreationDate, GETDATE())) AS '75%',\n  ROUND(STDEV(ViewCount)\n    OVER (PARTITION BY DATEDIFF(MONTH, CreationDate, GETDATE())), 2) AS 'StDev'\n  FROM Posts\n  WHERE PostTypeId = 1 -- Questions\n  ORDER BY 1 DESC"},{"QuerySetId":1337481,"Title":"DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0)","Description":null,"QueryBody":"SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS First_Of_Current_Month, DATEADD(dd, -1, DATEADD(mm, DATEDIFF(mm, 0, GETDATE()) + 1, 0)) AS Last_Of_Current_Month, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 1, 0) AS First_Of_Last_Month, DATEADD(MONTH, DATEDIFF(MONTH, -1, GETDATE()) - 1, -1) AS Last_Of_Last_Month, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) + 1, 0) AS First_Of_Next_Month","CreationDate":"2020-12-01 20:51:26","validated":false,"QueryBody_Original":"SELECT  DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) As First_Of_Current_Month\n  , DateAdd(dd, -1, DateAdd(mm, DateDiff(mm, 0, GETDATE()) +1, 0)) As Last_Of_Current_Month\n  , DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())-1, 0) As First_Of_Last_Month\n  , DATEADD(MONTH, DATEDIFF(MONTH, -1, GETDATE()) -1, -1) As Last_Of_Last_Month\n  ,DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())+1, 0) As First_Of_Next_Month;"},{"QuerySetId":1337565,"Title":"Which high reputation users have we lost?","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", u.Reputation, u.lastAccessDate FROM Users AS u WHERE Reputation >= 10000 AND LastAccessDate < '20200901'","CreationDate":"2020-11-27 21:38:31","validated":false,"QueryBody_Original":"SELECT  u.Id as [User Link], u.Reputation, u.lastAccessDate from Users u where Reputation >= 10000 and LastAccessDate < '20200901'"},{"QuerySetId":1338092,"Title":"Posts containing a very short body ","Description":"Posts containing a body that is less than 8 chars long\r\n","QueryBody":"SELECT Id AS \"Post Link\", REPLACE(REPLACE(Body, '<p>', ' '), '<\/p>', '') AS \"Body\", Score FROM Posts WHERE LENGTH(Body) < 64 AND PostTypeID = 1","CreationDate":"2020-11-30 04:18:03","validated":false,"QueryBody_Original":"SELECT  Id as [Post Link], \nReplace(Replace(Body, '<p>', ' '), '<\/p>', '') as [Body], \nScore \nfrom Posts \nwhere Len(Body) < 64 \nAND PostTypeID = 1"},{"QuerySetId":1338096,"Title":"AWL #1 Example Sentence Expert","Description":null,"QueryBody":"SELECT * FROM Posts WHERE (Id LIKE 23569441)","CreationDate":"2020-12-08 04:45:58","validated":false,"QueryBody_Original":"SELECT  * from Posts where (Id like 23569441)"},{"QuerySetId":1338249,"Title":"Questions with title in body","Description":null,"QueryBody":"SELECT Id AS \"Post Link\", Score, CreationDate FROM Posts WHERE PostTypeId = 1 \/* Questions *\/ AND Body LIKE '%' + Title + '%' AND LENGTH(Title) >= 64 ORDER BY CreationDate DESC","CreationDate":"2020-12-01 20:01:01","validated":false,"QueryBody_Original":"SELECT  Id AS [Post Link], Score, CreationDate\n  FROM Posts\n  WHERE PostTypeId = 1 -- Questions\n    AND Body LIKE '%' + Title + '%'\n    AND Len(Title) >= 64\n  ORDER BY CreationDate DESC"},{"QuerySetId":1340650,"Title":"Posts in need of table formatting","Description":null,"QueryBody":"SELECT p.Id AS \"Post Link\" FROM Posts AS p WHERE p.body LIKE '% \u2551 %'","CreationDate":"2020-12-04 22:22:05","validated":false,"QueryBody_Original":"SELECT  p.Id as [Post Link] FROM Posts p\nWHERE p.body LIKE '% \u2551 %'"},{"QuerySetId":1340967,"Title":"Count of dupe vs. count of exact dupes","Description":null,"QueryBody":"SELECT COUNT(*) AS DupeCount, COUNT(CASE WHEN Orig.Body = Dupe.Body THEN 1 END) AS SameDupeCount FROM PostLinks, Posts AS Orig, Posts AS Dupe WHERE PostLinks.LinkTypeId = 3 AND Dupe.Id = PostLinks.PostId AND Orig.Id = PostLinks.RelatedPostId","CreationDate":"2020-12-05 22:42:21","validated":false,"QueryBody_Original":"SELECT \n  COUNT(*) AS DupeCount,\n  COUNT(CASE WHEN Orig.Body = Dupe.Body THEN 1 END) AS SameDupeCount\nFROM PostLinks, Posts Orig, Posts Dupe\nWHERE\n  PostLinks.LinkTypeId = 3\n  AND\n  Dupe.Id = PostLinks.PostId\n  AND\n  Orig.Id = PostLinks.RelatedPostId"},{"QuerySetId":1341646,"Title":"Comments that link to Erich Friedman's pages old URL","Description":null,"QueryBody":"SELECT c.Id AS cid, c.Id AS \"Comment Link\", c.PostId AS pid, c.Score AS csc, c.CreationDate AS cti, 'site:\/\/users\/' + CAST(c.UserId AS TEXT) + '|' + u.DisplayName AS cus FROM Comments AS c LEFT JOIN Users AS u ON u.Id = c.UserId WHERE c.Text LIKE '%\/~efriedma\/%' ORDER BY c.Id","CreationDate":"2020-12-07 06:09:49","validated":false,"QueryBody_Original":"SELECT  \nc.Id AS cid, \nc.Id AS [Comment Link], \nc.PostId AS pid, \nc.Score AS csc, \nc.CreationDate AS cti, \n'site:\/\/users\/' + CAST(c.UserId AS NVARCHAR) + '|' + u.DisplayName AS cus\nFROM Comments AS c\nLEFT JOIN Users AS u ON u.Id = c.UserId\nWHERE c.Text LIKE '%\/~efriedma\/%'\nORDER BY c.Id;"},{"QuerySetId":1341762,"Title":"Comments containing the given string","Description":null,"QueryBody":"SELECT c.Id AS cid, c.Id AS \"Comment Link\", c.PostId AS pid, c.Score AS csc, c.CreationDate AS cti, c.UserId AS \"User Link\" FROM Comments AS c WHERE c.Text LIKE '%##string?\/~efriedma\/##%' ORDER BY c.Id","CreationDate":"2020-12-07 10:31:14","validated":false,"QueryBody_Original":"SELECT  \nc.Id AS cid, \nc.Id AS [Comment Link], \nc.PostId AS pid, \nc.Score AS csc, \nc.CreationDate AS cti, \nc.UserId AS [User Link]\nFROM Comments AS c\nWHERE c.Text LIKE '%##string?\/~efriedma\/##%'\nORDER BY c.Id;"},{"QuerySetId":1342113,"Title":"\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0441 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0442\u044d\u0433\u043e\u0432","Description":null,"QueryBody":"SELECT COUNT(CASE WHEN t.col < 10 THEN 1 END) AS less_10, COUNT(CASE WHEN t.col >= 10 AND t.col <= 20 THEN 1 END) AS between_10_and_20, COUNT(CASE WHEN t.col > 20 THEN 1 END) AS greater_20 FROM (SELECT COUNT(owneruserid) AS col FROM posts WHERE posttypeid = 1 GROUP BY owneruserid) AS t","CreationDate":"2020-12-07 18:44:12","validated":false,"QueryBody_Original":"SELECT  count(case when t.col<10 then 1 end) as less_10,\ncount(case when t.col>=10 and t.col<=20 then 1 end) as between_10_and_20,\ncount(case when t.col>20 then 1 end) as greater_20\nfrom\n(SELECT count(owneruserid) as col from posts where posttypeid=1 group by owneruserid) as t;\n\n\nSELECT count(case when x.c <10 then 'less' end) as less_10, count(case when x.c between 10 and 20 then 'bet' end) as between_10_and_20, count(case when x.c>20 then 'more' end) as more_20 from (SELECT count(posts.OwnerUserId) as c from users left join posts on users.Id = posts.OwnerUserId where posts.posttypeid=1 group by users.Id) as x;"},{"QuerySetId":1342160,"Title":"\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043b\u043e\u043a\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0432\u043e\u0439 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u0437\u0430\u0434\u0430\u043b\u0438 \u0432 2016, \u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043e\u0442\u0432\u0435","Description":null,"QueryBody":"SELECT DISTINCT (location) FROM (SELECT u.id, u.location FROM users AS u JOIN posts AS p ON u.id = p.owneruserid WHERE posttypeid = 1 GROUP BY u.id, u.location HAVING YEAR(MIN(p.creationdate)) = 2016) AS t1 JOIN posts AS p ON t1.id = p.owneruserid WHERE posttypeid = 2 GROUP BY t1.location HAVING YEAR(MAX(p.creationdate)) = 2020","CreationDate":"2020-12-07 17:07:07","validated":false,"QueryBody_Original":"SELECT  distinct(location)\nfrom (SELECT u.id, u.location from users as u\n  join posts as p on u.id = p.owneruserid\n  where posttypeid = 1\ngroup by u.id, u.location\nhaving year(min(p.creationdate)) = 2016) as t1\njoin posts as p on t1.id = p.owneruserid \n  where posttypeid = 2\ngroup by t1.location\nhaving year(max(p.creationdate)) = 2020"},{"QuerySetId":1342508,"Title":"\u0421\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 100 \u043f\u043e\u0441\u0442\u043e\u0432 \u0437\u0430 \u0433\u043e\u0434 (\u0437\u0430 \u043b\u044e\u0431\u043e\u0439 \u0433\u043e\u0434)","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT DISTINCT owneruserid FROM posts GROUP BY owneruserid, YEAR(creationdate) HAVING COUNT(id) >= 100) AS t1","CreationDate":"2020-12-07 16:57:33","validated":false,"QueryBody_Original":"SELECT  count(*) from (\n    SELECT distinct owneruserid\n    from posts\n    group by owneruserid, year(creationdate)\n    having count(id) >= 100\n    ) t1"},{"QuerySetId":1342541,"Title":"\u0421\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 100 \u043f\u043e\u0441\u0442\u043e\u0432 \u0437\u0430 \u0433\u043e\u0434 (\u0437\u0430 \u043b\u044e\u0431\u043e\u0439 \u0433\u043e\u0434).","Description":null,"QueryBody":"SELECT COUNT(*) FROM (SELECT DISTINCT OwnerUserId FROM posts WHERE OwnerUserId > 0 GROUP BY OwnerUserId, YEAR(CreationDate) HAVING COUNT(*) >= 100) AS f","CreationDate":"2020-12-07 17:06:09","validated":false,"QueryBody_Original":"SELECT  count(*)\nfrom (SELECT distinct OwnerUserId\n      from posts\n      where OwnerUserId>0\n      group by OwnerUserId, year(CreationDate)\n      having count(*)>=100) f"},{"QuerySetId":1342758,"Title":"\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0441\u0432\u043e\u0439 \u0441\u0430\u043c\u044b\u0439 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u0432 2020 \u0438 \u044d\u0442\u043e\u0442 \u0432\u043e\u043f\u0440\u043e\u0441 \u0431\u044b\u043b \u0441 \u0442\u0435\u0433","Description":null,"QueryBody":"SELECT p.OwnerUserId FROM (SELECT OwnerUserId, MIN(p.id) AS firstpost FROM posts AS p WHERE OwnerUserId IN (SELECT DISTINCT p1.OwnerUserId FROM posts AS p1 WHERE p1.OwnerUserId > 0 GROUP BY p1.OwnerUserId HAVING YEAR(MIN(p1.CreationDate)) = 2020) GROUP BY OwnerUserId) AS f, posts AS p WHERE p.id = f.firstpost AND tags LIKE '%<sql>%' ORDER BY 1","CreationDate":"2020-12-07 18:11:19","validated":false,"QueryBody_Original":"SELECT  p.OwnerUserId\nfrom (\n  SELECT OwnerUserId, min(p.id) firstpost\n  from posts p\n  where OwnerUserId in (\n      SELECT distinct p1.OwnerUserId \n      FROM posts p1\n      WHERE p1.OwnerUserId>0\n      GROUP BY p1.OwnerUserId\n      HAVING year(min(p1.CreationDate))=2020\n  )\n  GROUP BY OwnerUserId) f, posts p\nwhere p.id=f.firstpost\n  and tags LIKE '%<sql>%'\norder by 1"},{"QuerySetId":1343479,"Title":"Top 200 users from India","Description":null,"QueryBody":"SELECT ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS \"#\", Id AS \"User Link\", Reputation FROM Users WHERE LOWER(Location) LIKE '%ankara%' OR UPPER(Location) LIKE '%' ORDER BY Reputation LIMIT 200","CreationDate":"2020-12-08 19:06:20","validated":false,"QueryBody_Original":"SELECT  TOP 200\n    ROW_NUMBER() OVER(ORDER BY Reputation DESC) AS [#], \n    Id AS [User Link], \n    Reputation\nFROM\n    Users\nWHERE\n    LOWER(Location) LIKE '%ankara%'\n    OR UPPER(Location) LIKE '%'\nORDER BY\n    Reputation ASC;"},{"QuerySetId":1343763,"Title":"SDET - Microservices API automation - US","Description":null,"QueryBody":"SELECT u.Id AS \"User Link\", CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS \"Profile Link\", u.DisplayName, u.Location, u.WebsiteUrl, u.AboutMe, u.Views, u.UpVotes, u.DownVotes FROM Users AS u JOIN (SELECT DISTINCT UserId FROM Badges WHERE LOWER(Name) IN ('microservices', 'api', 'automation') AND Class IN (2) AND TagBased = 1) AS tag_badges ON tag_badges.UserId = u.Id","CreationDate":"2020-12-09 01:24:40","validated":false,"QueryBody_Original":"SELECT  u.Id AS [User Link],\n                            CONCAT('https:\/\/stackoverflow.com\/users\/', u.Id) AS [Profile Link],\n                            u.DisplayName,\n                            u.Location,\n                            u.WebsiteUrl,\n                            u.AboutMe,\n                            u.Views,\n                            u.UpVotes,\n                            u.DownVotes\n             FROM Users u\n        \n             JOIN (\n                    SELECT DISTINCT UserId\n                    FROM Badges\n                    WHERE LOWER(Name) IN ('microservices', 'api', 'automation') AND\n                          Class IN (2) AND\n                          TagBased = 1\n                  ) tag_badges\n             ON tag_badges.UserId = u.Id"},{"QuerySetId":1345529,"Title":"select  p1.id from (select * from Posts where PostTypeId=1) as p1, (select * from Posts where PostTy","Description":null,"QueryBody":"SELECT p1.id FROM (SELECT * FROM Posts WHERE PostTypeId = 1) AS p1, (SELECT * FROM Posts WHERE PostTypeId = 2) AS p2 WHERE p1.id = p2.ParentId","CreationDate":"2020-12-10 17:32:25","validated":false,"QueryBody_Original":"SELECT   p1.id from (SELECT * from Posts where PostTypeId=1) as p1, (SELECT * from Posts where PostTypeId=2) as p2 where p1.id=p2.ParentId;"},{"QuerySetId":1346132,"Title":"Percentage of SO Users on Meta","Description":null,"QueryBody":"SELECT COUNT(*) FROM users","CreationDate":"2020-12-10 20:19:25","validated":false,"QueryBody_Original":"SELECT  count(*) from users"}]